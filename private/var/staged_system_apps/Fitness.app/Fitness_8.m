id sub_1004A7C78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourNotificationResponseCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004A7CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for NavigationRequest(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1004A71D8(a1, a2, v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1004A7D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for NavigationRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_1004A7DF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for NavigationRequest(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1004A7658(v0 + v2, *(_QWORD *)(v0 + v3), *(uint64_t (**)(_QWORD))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_1004A7E4C(void *a1, void *a2, void (**a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void (*v50)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;

  v65 = a2;
  v73 = a1;
  v4 = sub_100047110((uint64_t *)&unk_1008364E0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v67 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v66 = (char *)&v65 - v13;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - v19;
  v72 = swift_allocObject(&unk_1007A32C0, 24, 7);
  *(_QWORD *)(v72 + 16) = a3;
  v21 = _Block_copy(a3);
  v22 = static Log.engagement.getter(v21);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Handling notification response for AMS", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v20, v14);
  v27 = v73;
  v28 = objc_msgSend(v73, "notification");
  v29 = objc_msgSend(objc_allocWithZone((Class)AMSUserNotification), "initWithUNNotification:", v28);

  v74 = 0;
  v30 = objc_msgSend(v29, "determineSelectedActionFromResponse:error:", v27, &v74);
  v31 = v74;
  if (v30)
  {
    v32 = v30;
    v33 = v74;
    v34 = objc_msgSend(v32, "defaultURL");
    if (v34)
    {
      v35 = v34;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v36 = v71;
      v37 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
      v38 = v11;
      v39 = v70;
      v37(v8, v38, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v8, 0, 1, v36);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v8, 1, v36) != 1)
      {
        v40 = (uint64_t)v66;
        v37(v66, v8, v36);
        v41 = v65;
        v42 = v67;
        sub_100549318(v40, v67);
        v43 = (_QWORD *)swift_allocObject(&unk_1007A32E8, 64, 7);
        v43[2] = v41;
        v43[3] = v29;
        v43[4] = v32;
        v43[5] = sub_100106890;
        v45 = v72;
        v44 = v73;
        v43[6] = v72;
        v43[7] = v44;
        v46 = v41;
        v65 = v29;
        v47 = v32;
        swift_retain(v45);
        v48 = v44;
        v49 = v69;
        v50 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v69);
        v52 = v51;
        v53 = v39;
        v54 = swift_allocObject(&unk_1007A3310, 32, 7);
        *(_QWORD *)(v54 + 16) = sub_1004A8408;
        *(_QWORD *)(v54 + 24) = v43;
        v55 = swift_retain(v43);
        v50(sub_1004A841C, v54, v55);

        swift_release(v43);
        swift_release(v52);
        v56 = swift_release(v54);
        (*(void (**)(uint64_t, uint64_t, __n128))(v68 + 8))(v42, v49, v56);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v40, v71);
        swift_release(v45);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v8, 1, 1, v71);
    }

    v60 = sub_10012089C((uint64_t)v8);
  }
  else
  {
    v57 = v74;
    v58 = _convertNSErrorToError(_:)(v31);

    swift_willThrow(v59);
    v60 = swift_errorRelease(v58);
  }
  v61 = static Log.engagement.getter(v60);
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.error.getter(v62);
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v64 = 0;
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "Error determining selected action", v64, 2u);
    swift_slowDealloc(v64, -1, -1);
  }

  v26(v17, v14);
  a3[2](a3);
  swift_release(v72);

}

uint64_t sub_1004A83A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A83C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1004A8408(uint64_t a1)
{
  uint64_t v1;

  sub_1004A6798(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1004A841C(uint64_t a1)
{
  uint64_t v1;

  return sub_10039AD60(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1004A8424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(qword_1008364F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A846C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004A8490(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1004A7864(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

double ARUIRingGroup.center.getter()
{
  void *v0;
  float v1;
  double v2;

  objc_msgSend(v0, "translation");
  v2 = v1;
  objc_msgSend(v0, "translation");
  return v2;
}

id ARUIRingGroup.setCenter(_:)(float64x2_t a1, float64_t a2)
{
  void *v2;

  a1.f64[1] = a2;
  return objc_msgSend(v2, "setTranslation:", COERCE_DOUBLE(vcvt_f32_f64(a1)));
}

uint64_t sub_1004A8594(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for () + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1006400E8;
    v4[3] = &unk_1006400E8;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_1004A861C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  id v21;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    *a1 = v8;
    v3 = (_QWORD *)(v8 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v11 = a2[1];
    *v3 = v8;
    v3[1] = v11;
    v12 = ((unint64_t)v3 + v6 + 16) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain(v11);
    v14(v12, v13, v4);
    v15 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(void **)v16;
    *v15 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v15[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v8 = v20[1];
    v19[1] = v8;
    v21 = v17;
    swift_retain(v18);
  }
  swift_retain(v8);
  return v3;
}

uint64_t sub_1004A8740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v6 + 8));
  return swift_release(*(_QWORD *)(((v6 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

_QWORD *sub_1004A87C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain(v4);
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (_QWORD *)((v11 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(void **)v13;
  *v12 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v12[1] = v15;
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = v17[1];
  v16[1] = v18;
  v19 = v14;
  swift_retain(v15);
  swift_retain(v18);
  return a1;
}

_QWORD *sub_1004A888C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(void **)v13;
  v16 = *(void **)v14;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v17 = v16;

  v18 = *(_QWORD *)(v13 + 8);
  v19 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 8) = v19;
  swift_retain(v19);
  swift_release(v18);
  v20 = (_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = v20[1];
  v23 = v21[1];
  v20[1] = v23;
  swift_retain(v23);
  swift_release(v22);
  return a1;
}

_OWORD *sub_1004A8978(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1004A8A08(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 16 + a1) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  v13 = (_QWORD *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = *(void **)v12;
  *(_QWORD *)v12 = *v13;

  v15 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v12 + 8) = v13[1];
  swift_release(v15);
  v16 = (_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = v16[1];
  v16[1] = v17[1];
  swift_release(v18);
  return a1;
}

uint64_t sub_1004A8AD8(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 16) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v4 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1004A8B6C + 4 * byte_1006400B0[v10]))();
  }
}

void sub_1004A8BEC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 16) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 16) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1004A8CFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1004A8D68);
}

void sub_1004A8D04(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1004A8D0CLL);
  JUMPOUT(0x1004A8D68);
}

void sub_1004A8D1C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004A8D68);
}

void sub_1004A8D24()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004A8D68);
}

void sub_1004A8D2C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1004A8D64);
      JUMPOUT(0x1004A8D5CLL);
    }
    JUMPOUT(0x1004A8D38);
  }
  JUMPOUT(0x1004A8D68);
}

uint64_t type metadata accessor for ScheduleDayRowButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScheduleDayRowButton);
}

uint64_t sub_1004A8D8C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1006B91D4, 1);
}

uint64_t sub_1004A8DC0()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100047110((uint64_t *)&unk_100836580);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_1004A8E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v6 = *(_OWORD *)(v2 + *(int *)(a2 + 40));
  v5 = a1;
  v3 = sub_100047110((uint64_t *)&unk_100836580);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_1004A8E54()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100047110(&qword_10081F1D8);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_1004A8E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v6 = *(_OWORD *)(v2 + *(int *)(a2 + 44));
  v5 = a1;
  v3 = sub_100047110(&qword_10081F1D8);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_1004A8EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t WitnessTable;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v52 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - v7;
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  v12 = type metadata accessor for Button(0, v11, v10);
  v13 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  v51 = v13;
  __chkstk_darwin(v12);
  v43 = (char *)&v41 - v14;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v12);
  v57 = v12;
  v58 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v57, &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>, 0);
  v16 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v49 = OpaqueTypeMetadata2;
  v50 = v16;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v44 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v48 = (uint64_t)&v41 - v19;
  v54 = v11;
  v55 = v10;
  v41 = v11;
  v42 = v2;
  v56 = v2;
  Button.init(action:label:)(ASFriendListDisplayMode.id.getter, 0, sub_1004A9554, v53, v11, v10);
  v20 = v4;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v22 = v8;
  v21(v8, v2, a1);
  v23 = *(unsigned __int8 *)(v20 + 80);
  v24 = v20;
  v25 = (v23 + 32) & ~v23;
  v26 = v25 + v5;
  v27 = v23 | 7;
  v28 = swift_allocObject(&unk_1007A3430, v26, v23 | 7);
  *(_QWORD *)(v28 + 16) = v11;
  *(_QWORD *)(v28 + 24) = v10;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v29(v28 + v25, v22, a1);
  v30 = v47;
  v21(v47, v42, a1);
  v31 = swift_allocObject(&unk_1007A3458, v26, v27);
  *(_QWORD *)(v31 + 16) = v41;
  *(_QWORD *)(v31 + 24) = v10;
  v29(v31 + v25, v30, a1);
  v33 = (uint64_t)v44;
  v32 = v45;
  v34 = WitnessTable;
  v35 = v43;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)(sub_1004A95B8, v31, sub_1004A9564, v28, v45, WitnessTable, 0.5, 10.0);
  swift_release(v28);
  v36 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v35, v32, v36);
  v57 = v32;
  v58 = v34;
  swift_getOpaqueTypeConformance2(&v57, &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>, 1);
  v38 = v48;
  v37 = v49;
  sub_10029340C(v33, v49, v48);
  v39 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v39(v33, v37);
  sub_100291778(v38, v37, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v38, v37);
}

uint64_t sub_1004A91F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ScheduleDayRowButton(0, v9, v10, v11);
  sub_10029340C(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_100291778((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_1004A92A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4;

  type metadata accessor for ScheduleDayRowButton(0, a2, a3, a4);
  v4 = (id)sub_1004A8DC0();
  objc_msgSend(v4, "invalidate");

}

_QWORD *sub_1004A92E4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v8;

  v5 = type metadata accessor for ScheduleDayRowButton(0, a3, a4, a4);
  v6 = v5;
  if ((a1 & 1) != 0)
    return sub_1004A9358(v5);
  v8 = (void *)sub_1004A8DC0();
  objc_msgSend(v8, "invalidate");

  return (_QWORD *)sub_1004A8E9C(1, v6);
}

_QWORD *sub_1004A9358(uint64_t a1)
{
  void (**v1)(__n128);
  void (**v2)(__n128);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void ***v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  _QWORD *result;
  __n128 v13;
  double v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **aBlock;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void ***)((char *)v1 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = (uint64_t)v8[1];
  aBlock = *v8;
  v22 = v9;
  swift_retain(v9);
  v11 = sub_100047110(&qword_10081F1D8);
  result = State.wrappedValue.getter(&v28, v11);
  if (__OFADD__(v28, 1))
  {
    __break(1u);
  }
  else
  {
    aBlock = v10;
    v22 = v9;
    v27 = v28 + 1;
    State.wrappedValue.setter(&v27, v11);
    v13 = swift_release(v9);
    (*v1)(v13);
    v14 = fmax(0.5 / (double)sub_1004A8E54(), 0.01);
    v15 = (void *)objc_opt_self(NSTimer);
    (*(void (**)(char *, void (**)(__n128), uint64_t))(v4 + 16))((char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
    v16 = *(unsigned __int8 *)(v4 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(&unk_1007A3480, v17 + v5, v16 | 7);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)(a1 + 16);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v18 + v17, v6, a1);
    v25 = sub_1004A96C4;
    v26 = v18;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_1000277E8;
    v24 = &unk_1007A3498;
    v19 = _Block_copy(&aBlock);
    swift_release(v26);
    v20 = objc_msgSend(v15, "scheduledTimerWithTimeInterval:repeats:block:", 0, v19, v14);
    _Block_release(v19);
    return (_QWORD *)sub_1004A8E08((uint64_t)v20, a1);
  }
  return result;
}

uint64_t sub_1004A9554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004A91F4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

void sub_1004A9564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScheduleDayRowButton(0, v5, v6, a4) - 8) + 80);
  sub_1004A92A0(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

_QWORD *sub_1004A95B8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScheduleDayRowButton(0, v6, v7, a4) - 8) + 80);
  return sub_1004A92E4(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1004A9614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for ScheduleDayRowButton(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  v13 = swift_release(*(_QWORD *)(v4 + v9 + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(v12 + v6[9], v5, v13);
  v14 = v12 + v6[10];

  swift_release(*(_QWORD *)(v14 + 8));
  swift_release(*(_QWORD *)(v12 + v6[11] + 8));
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_1004A96C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ScheduleDayRowButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_1004A9358();
}

uint64_t sub_1004A9700(_QWORD *a1)
{
  _QWORD v2[2];

  v2[0] = type metadata accessor for Button(255, *a1, a1[1]);
  v2[1] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v2[0]);
  return swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>, 1);
}

void sub_1004A97A8()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  objc_super v43;

  v1 = &v0[OBJC_IVAR___CHFitnessAppDelegate_phoneSceneConfigurationName];
  *(_QWORD *)v1 = 0xD000000000000013;
  *((_QWORD *)v1 + 1) = 0x80000001006A1660;
  v2 = &v0[OBJC_IVAR___CHFitnessAppDelegate_iPadSceneConfigurationName];
  *(_QWORD *)v2 = 0xD000000000000012;
  *((_QWORD *)v2 + 1) = 0x80000001006A1680;
  v3 = objc_allocWithZone((Class)HKHealthStore);
  v4 = v0;
  v5 = objc_msgSend(v3, "init");
  v6 = OBJC_IVAR___CHFitnessAppDelegate_healthStore;
  *(_QWORD *)&v4[OBJC_IVAR___CHFitnessAppDelegate_healthStore] = v5;
  v7 = (objc_class *)type metadata accessor for HistoryDataProvider();
  v8 = objc_allocWithZone(v7);
  v9 = v5;
  *(_QWORD *)&v4[OBJC_IVAR___CHFitnessAppDelegate_historyDataProvider] = sub_10001CCE4(v9);
  v10 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v9);
  v11 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v10);

  if (v11)
  {
    *(_QWORD *)&v4[OBJC_IVAR___CHFitnessAppDelegate_fitnessUIFormattingManager] = v11;
    v12 = *(_QWORD *)&v4[v6];
    v13 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutFormattingManager), "initWithFitnessUIFormattingManager:healthStore:", v11, v12);
    *(_QWORD *)&v4[OBJC_IVAR___CHFitnessAppDelegate_workoutFormattingManager] = v13;
    v14 = objc_msgSend(objc_allocWithZone((Class)FIPauseRingsCoordinator), "initWithHealthStore:", v12);
    *(_QWORD *)&v4[OBJC_IVAR___CHFitnessAppDelegate_pauseRingsCoordinator] = v14;

    v43.receiver = v4;
    v43.super_class = (Class)type metadata accessor for FitnessAppDelegate();
    v15 = objc_msgSendSuper2(&v43, "init");
    type metadata accessor for AppDependencyManager(0);
    v16 = v15;
    v17 = ((uint64_t (*)(void))static AppDependencyManager.shared.getter)();
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    v18 = swift_allocObject(&unk_1007A3508, 24, 7);
    *(_QWORD *)(v18 + 16) = v16;
    v19 = sub_10001E724(0, &qword_1008365F0, HKHealthStore_ptr);
    v20 = v16;
    AppDependencyManager.add<A>(key:dependency:)(&v40, sub_1004A9E34, v18, v19);
    swift_release(v17);
    swift_release(v18);
    v21 = sub_1004A9E4C((uint64_t)&v40);
    v22 = static AppDependencyManager.shared.getter(v21);
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    v23 = swift_allocObject(&unk_1007A3530, 24, 7);
    *(_QWORD *)(v23 + 16) = v20;
    v24 = v20;
    AppDependencyManager.add<A>(key:dependency:)(&v40, sub_1004A9E8C, v23, v7);
    swift_release(v22);
    swift_release(v23);
    v25 = sub_1004A9E4C((uint64_t)&v40);
    v26 = static AppDependencyManager.shared.getter(v25);
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    v27 = swift_allocObject(&unk_1007A3558, 24, 7);
    *(_QWORD *)(v27 + 16) = v24;
    v28 = sub_10001E724(0, (unint64_t *)&qword_100836600, FIUIFormattingManager_ptr);
    v29 = v24;
    AppDependencyManager.add<A>(key:dependency:)(&v40, sub_1004A9EA4, v27, v28);
    swift_release(v26);
    swift_release(v27);
    v30 = sub_1004A9E4C((uint64_t)&v40);
    v31 = static AppDependencyManager.shared.getter(v30);
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    v32 = swift_allocObject(&unk_1007A3580, 24, 7);
    *(_QWORD *)(v32 + 16) = v29;
    v33 = sub_10001E724(0, &qword_100836608, off_100776610);
    v34 = v29;
    AppDependencyManager.add<A>(key:dependency:)(&v40, sub_1004A9EBC, v32, v33);
    swift_release(v31);
    swift_release(v32);
    v35 = sub_1004A9E4C((uint64_t)&v40);
    v36 = static AppDependencyManager.shared.getter(v35);
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    v37 = swift_allocObject(&unk_1007A35A8, 24, 7);
    *(_QWORD *)(v37 + 16) = v34;
    v38 = type metadata accessor for FIPauseRingsCoordinator(0);
    v39 = v34;
    AppDependencyManager.add<A>(key:dependency:)(&v40, sub_1004A9ED4, v37, v38);
    swift_release(v36);
    swift_release(v37);

    sub_1004A9E4C((uint64_t)&v40);
  }
  else
  {
    __break(1u);
  }
}

id sub_1004A9BF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessAppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1004A9D24(void *a1)
{
  uint64_t v1;
  NSString v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSString v9;
  id v10;

  v3 = String._bridgeToObjectiveC()();
  v4 = MGGetSInt32Answer(v3, 0xFFFFFFFFLL);

  v5 = &OBJC_IVAR___CHFitnessAppDelegate_iPadSceneConfigurationName;
  if (v4 != 3)
    v5 = &OBJC_IVAR___CHFitnessAppDelegate_phoneSceneConfigurationName;
  v6 = *(_QWORD *)(v1 + *v5 + 8);
  swift_bridgeObjectRetain(v6);
  v7 = objc_msgSend(a1, "role");
  v8 = objc_allocWithZone((Class)UISceneConfiguration);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v10 = objc_msgSend(v8, "initWithName:sessionRole:", v9, v7);

  return v10;
}

uint64_t sub_1004A9E10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1004A9E34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_healthStore);
  *a1 = v2;
  return v2;
}

uint64_t sub_1004A9E4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_1008365F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1004A9E8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_historyDataProvider);
  *a1 = v2;
  return v2;
}

id sub_1004A9EA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_fitnessUIFormattingManager);
  *a1 = v2;
  return v2;
}

id sub_1004A9EBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_workoutFormattingManager);
  *a1 = v2;
  return v2;
}

id sub_1004A9ED4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_pauseRingsCoordinator);
  *a1 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for HistoryItemAwardBadgeView()
{
  return &type metadata for HistoryItemAwardBadgeView;
}

uint64_t sub_1004A9F0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9268, 1);
}

uint64_t sub_1004A9F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;

  v4 = sub_100047110(&qword_100836618);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100836620);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v11 = sub_100047110(&qword_100836628);
  sub_1004AA088(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = static Font.footnote.getter(v12);
  KeyPath = swift_getKeyPath(&unk_100640210);
  sub_100021CC0((uint64_t)v6, (uint64_t)v9, &qword_100836618);
  v15 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v15 = KeyPath;
  v15[1] = v13;
  sub_10001BE90((uint64_t)v6, &qword_100836618);
  v17 = static Color.secondary.getter(v16);
  v18 = swift_getKeyPath(&unk_100640240);
  sub_100021CC0((uint64_t)v9, a2, &qword_100836620);
  v19 = (uint64_t *)(a2 + *(int *)(sub_100047110(&qword_100836630) + 36));
  *v19 = v18;
  v19[1] = v17;
  return sub_10001BE90((uint64_t)v9, &qword_100836620);
}

void sub_1004AA088(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  char v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t *v41;
  _BYTE *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  _BYTE v53[12];
  int v54;
  uint64_t v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _BYTE *v61;
  uint64_t v62;

  v59 = sub_100047110(&qword_10082CBF0);
  __chkstk_darwin(v59);
  v60 = (uint64_t *)&v53[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = sub_100047110(&qword_10082CBF8);
  __chkstk_darwin(v58);
  v9 = (uint64_t *)&v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v61 = &v53[-v11];
  v12 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v12);
  v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v15);
  v17 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10081DE10 != -1)
    swift_once(&qword_10081DE10, sub_1004AA48C);
  v18 = (id)qword_100836610;
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v20 = objc_msgSend(v18, "stringForObjectValue:", isa);

  if (v20)
  {
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

  }
  else
  {
    v62 = a1;
    v21 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v23 = v25;
  }
  AttributeContainer.init()(v24);
  AttributedString.init(_:attributes:)(v21, v23, v14);
  v26 = Text.init(_:)(v17);
  v55 = v27;
  v56 = v28;
  v30 = v29 & 1;
  v54 = static Edge.Set.trailing.getter(v26);
  v31 = EdgeInsets.init(_all:)(3.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = Image.init(_internalSystemName:)(0xD000000000000013);
  v39 = v57;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.Scale.small(_:), v57);
  KeyPath = swift_getKeyPath(&unk_100640270);
  v41 = v60;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))((_BYTE *)v60 + *(int *)(v59 + 28), v7, v39);
  *v41 = KeyPath;
  sub_100021CC0((uint64_t)v41, (uint64_t)v9 + *(int *)(v58 + 36), &qword_10082CBF0);
  *v9 = v38;
  swift_retain(v38);
  sub_10001BE90((uint64_t)v41, &qword_10082CBF0);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v39);
  swift_release(v38);
  v42 = v61;
  sub_1004AA50C((uint64_t)v9, (uint64_t)v61);
  sub_100021CC0((uint64_t)v42, (uint64_t)v9, &qword_10082CBF8);
  v44 = v55;
  v43 = v56;
  *(_QWORD *)a2 = v26;
  *(_QWORD *)(a2 + 8) = v44;
  *(_BYTE *)(a2 + 16) = v30;
  *(_QWORD *)(a2 + 24) = v43;
  *(_BYTE *)(a2 + 32) = v54;
  *(double *)(a2 + 40) = v31;
  *(_QWORD *)(a2 + 48) = v33;
  *(_QWORD *)(a2 + 56) = v35;
  *(_QWORD *)(a2 + 64) = v37;
  *(_BYTE *)(a2 + 72) = 0;
  v45 = sub_100047110(&qword_100836638);
  sub_100021CC0((uint64_t)v9, a2 + *(int *)(v45 + 48), &qword_10082CBF8);
  sub_1000E439C(v26, v44, v30);
  swift_bridgeObjectRetain(v43);
  sub_10001BE90((uint64_t)v42, &qword_10082CBF8);
  sub_10001BE90((uint64_t)v9, &qword_10082CBF8);
  sub_1000E4458(v26, v44, v30);
  swift_bridgeObjectRelease(v43, v46, v47, v48, v49, v50, v51, v52);
}

id sub_1004AA48C()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v0, "setNumberStyle:", 0);
  result = objc_msgSend(v0, "setRoundingMode:", 4);
  qword_100836610 = (uint64_t)v0;
  return result;
}

uint64_t sub_1004AA4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004A9F1C(*v1, a1);
}

uint64_t sub_1004AA50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004AA558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836640;
  if (!qword_100836640)
  {
    v1 = sub_100007050(&qword_100836630);
    sub_1004AA5DC();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836640);
  }
  return result;
}

unint64_t sub_1004AA5DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836648;
  if (!qword_100836648)
  {
    v1 = sub_100007050(&qword_100836620);
    sub_100028384(&qword_100836650, &qword_100836618, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836648);
  }
  return result;
}

uint64_t sub_1004AA678()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086AC20);
  sub_10003CE9C(v7, (uint64_t)qword_10086AC20);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001006A16A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1004AA788(char *a1, char *a2)
{
  return sub_1003906AC(*a1, *a2);
}

unint64_t sub_1004AA798()
{
  unint64_t result;

  result = qword_100836658;
  if (!qword_100836658)
  {
    result = swift_getWitnessTable(&unk_1006402AC, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836658);
  }
  return result;
}

Swift::Int sub_1004AA7DC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 0x747365676E6F6CLL;
  else
    v2 = 0x746E6572727563;
  String.hash(into:)(v4, v2, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1004AA850(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x747365676E6F6CLL;
  else
    v2 = 0x746E6572727563;
  String.hash(into:)(a1, v2, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

Swift::Int sub_1004AA898(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 0x747365676E6F6CLL;
  else
    v3 = 0x746E6572727563;
  String.hash(into:)(v5, v3, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1004AA908@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100783110, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1004AA964(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x746E6572727563;
  if (*v1)
    v2 = 0x747365676E6F6CLL;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1004AA9A0()
{
  unint64_t result;

  result = qword_100836660;
  if (!qword_100836660)
  {
    result = swift_getWitnessTable(&unk_10064038C, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836660);
  }
  return result;
}

unint64_t sub_1004AA9E8()
{
  unint64_t result;

  result = qword_100836668;
  if (!qword_100836668)
  {
    result = swift_getWitnessTable(&unk_1006403C4, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836668);
  }
  return result;
}

unint64_t sub_1004AAA30()
{
  unint64_t result;

  result = qword_100836670;
  if (!qword_100836670)
  {
    result = swift_getWitnessTable(&unk_100640314, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836670);
  }
  return result;
}

unint64_t sub_1004AAA78()
{
  unint64_t result;

  result = qword_100836678;
  if (!qword_100836678)
  {
    result = swift_getWitnessTable(&unk_1006403F4, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836678);
  }
  return result;
}

unint64_t sub_1004AAAC0()
{
  unint64_t result;

  result = qword_100836680;
  if (!qword_100836680)
  {
    result = swift_getWitnessTable(&unk_10064041C, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836680);
  }
  return result;
}

unint64_t sub_1004AAB0C()
{
  unint64_t result;

  result = qword_100836688;
  if (!qword_100836688)
  {
    result = swift_getWitnessTable(&unk_10064049C, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836688);
  }
  return result;
}

uint64_t sub_1004AAB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DE18 != -1)
    swift_once(&qword_10081DE18, sub_1004AA678);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086AC20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1004AABC0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003EA948();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_1004AAC00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003EA948();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1004AAC3C()
{
  unint64_t result;

  result = qword_100836690;
  if (!qword_100836690)
  {
    result = swift_getWitnessTable(&unk_1006404DC, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836690);
  }
  return result;
}

unint64_t sub_1004AAC84()
{
  unint64_t result;

  result = qword_100836698;
  if (!qword_100836698)
  {
    result = swift_getWitnessTable(&unk_100640504, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_100836698);
  }
  return result;
}

unint64_t sub_1004AACCC()
{
  unint64_t result;

  result = qword_1008366A0;
  if (!qword_1008366A0)
  {
    result = swift_getWitnessTable(&unk_1006402D4, &type metadata for MoveStreakDuration);
    atomic_store(result, (unint64_t *)&qword_1008366A0);
  }
  return result;
}

uint64_t sub_1004AAD14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004AAB0C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1004AAD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008366A8;
  if (!qword_1008366A8)
  {
    v1 = sub_100007050(&qword_1008366B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1008366A8);
  }
  return result;
}

void sub_1004AAD9C(_QWORD *a1@<X8>)
{
  *a1 = &off_100783098;
}

uint64_t storeEnumTagSinglePayload for MoveStreakDuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004AADF8 + 4 * byte_1006402A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004AAE2C + 4 * byte_1006402A0[v4]))();
}

uint64_t sub_1004AAE2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AAE34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004AAE3CLL);
  return result;
}

uint64_t sub_1004AAE48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004AAE50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004AAE54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004AAE5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoveStreakDuration()
{
  return &type metadata for MoveStreakDuration;
}

unint64_t sub_1004AAE78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  double (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008366B8);
  v11 = sub_100047110(&qword_100833898);
  v12 = *(_QWORD *)(v11 - 8);
  v31 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v31, v13 | 7);
  v32 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
  v16 = v15 + v14;
  v28 = v15 + v14 + *(int *)(v11 + 48);
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x746E6572727543, 0xE700000000000000);
  v29 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17 = v5;
  v18.n128_f64[0] = v29(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7261646E656C6163, 0xE800000000000000, 0, 0, v18);
  v19 = sub_100047110(&qword_1008297C0);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = ((v20 + 32) & ~v20) + *(_QWORD *)(v7 + 72);
  v22 = v20 | 7;
  v23 = swift_allocObject(v19, v21, v20 | 7);
  v27 = xmmword_100622F90;
  *(_OWORD *)(v23 + 16) = xmmword_100622F90;
  LocalizedStringResource.init(stringLiteral:)(0x657669746341, 0xE600000000000000);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v17, v2, v23);
  *(_BYTE *)(v16 + v31) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x747365676E6F4CLL, 0xE700000000000000);
  v24.n128_f64[0] = v29(v17, 1, 1, v30);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7968706F7274, 0xE600000000000000, 0, 0, v24);
  v25 = swift_allocObject(v19, v21, v22);
  *(_OWORD *)(v25 + 16) = v27;
  LocalizedStringResource.init(stringLiteral:)(1953719618, 0xE400000000000000);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v17, v2, v25);
  return sub_100436BA8(v32);
}

void sub_1004AB160(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  NSString v5;
  void *v6;
  void *v7;
  Class isa;
  unint64_t v9;

  v2 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType) = *a1;
  sub_1004AB264();
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5);

  v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel);
  type metadata accessor for TrendListMetric(0);
  v7 = (void *)sub_100036218();
  isa = AttributedString.nsAttributedStringWithMatchingTextScales(font:)((UIFont)v7).super.isa;

  objc_msgSend(v6, "setAttributedText:", isa);
  v9 = a1[1];
  sub_10047F60C((void *)v9, 0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection) = v9;
}

void sub_1004AB264()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = v0;
  sub_1004E4168(*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType));
  v3 = v2;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator);
  v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];
  v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors) = v5;
  v7 = v5;

  sub_10047E818();
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel), "setTextColor:", *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp12MetricColors_text]);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v8, "setTextColor:", v9);

}

id sub_1004AB364()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "preferredFontForTextStyle:", UIFontTextStyleCallout);
  objc_msgSend(v1, "setFont:", v3);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel);
  v5 = objc_msgSend(v2, "_preferredFontForTextStyle:design:variant:", UIFontTextStyleTitle3, UIFontSystemFontDesignRounded, 1024);
  objc_msgSend(v4, "setFont:", v5);

  objc_msgSend(v1, "setAdjustsFontSizeToFitWidth:", 1);
  return objc_msgSend(v4, "setAdjustsFontSizeToFitWidth:", 1);
}

char *sub_1004AB45C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  v4[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection] = 1;
  v9 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator;
  type metadata accessor for TrendArrowIndicatorView();
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1005AEF5C();
  v11 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  *(_QWORD *)&v10[v11] = sub_1004C2368();
  v12 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel;
  *(_QWORD *)&v10[v12] = sub_1004C2368();
  v10[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType] = 1;

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for TrendListMetricView();
  v13 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator];
  v15 = v13;
  objc_msgSend(v15, "addSubview:", v14);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel]);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel]);
  sub_1004AB264();
  sub_1004AB364();
  sub_1004AB5DC();

  return v15;
}

void sub_1004AB5DC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  Class isa;
  CHWorkoutDetailHeartRateTableViewCell *v61;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator];
  v2 = objc_msgSend(v1, "leadingAnchor");
  v3 = objc_msgSend(v0, "leadingAnchor");
  v57 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, 8.0);

  v4 = objc_msgSend(v1, "widthAnchor");
  v55 = objc_msgSend(v4, "constraintEqualToConstant:", 40.0);

  v5 = objc_msgSend(v1, "heightAnchor");
  v53 = objc_msgSend(v5, "constraintEqualToConstant:", 40.0);

  v6 = objc_msgSend(v1, "centerYAnchor");
  v7 = objc_msgSend(v0, "centerYAnchor");
  v51 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel];
  v9 = objc_msgSend(v8, "leadingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v50 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 7.0);

  v11 = objc_msgSend(v8, "trailingAnchor");
  v12 = objc_msgSend(v0, "trailingAnchor");
  v49 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, -7.0);

  v13 = objc_msgSend(v8, "topAnchor");
  v14 = objc_msgSend(v0, "topAnchor");
  v48 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, 15.0);

  v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel];
  v16 = objc_msgSend(v15, "leadingAnchor");
  v17 = objc_msgSend(v8, "leadingAnchor");
  v47 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v18 = objc_msgSend(v15, "trailingAnchor");
  v19 = objc_msgSend(v8, "trailingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  v21 = objc_msgSend(v15, "topAnchor");
  v22 = objc_msgSend(v8, "bottomAnchor");
  v59 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -2.5);

  v23 = objc_msgSend(v15, "bottomAnchor");
  v24 = objc_msgSend(v0, "bottomAnchor");
  v25 = objc_msgSend(v23, "constraintLessThanOrEqualToAnchor:constant:", v24, -15.0);

  LODWORD(v26) = 1144750080;
  v45 = v25;
  objc_msgSend(v25, "setPriority:", v26);
  LODWORD(v27) = 1148846080;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v27);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v28);
  v46 = (id)objc_opt_self(NSLayoutConstraint);
  v29 = sub_100047110((uint64_t *)&unk_100828340);
  v30 = swift_allocObject(v29, 120, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1006375B0;
  *(_QWORD *)(v30 + 32) = v57;
  *(_QWORD *)(v30 + 40) = v55;
  *(_QWORD *)(v30 + 48) = v53;
  *(_QWORD *)(v30 + 56) = v51;
  *(_QWORD *)(v30 + 64) = v50;
  *(_QWORD *)(v30 + 72) = v49;
  *(_QWORD *)(v30 + 80) = v48;
  *(_QWORD *)(v30 + 88) = v47;
  *(_QWORD *)(v30 + 96) = v20;
  *(_QWORD *)(v30 + 104) = v59;
  *(_QWORD *)(v30 + 112) = v25;
  v61 = (CHWorkoutDetailHeartRateTableViewCell *)v30;
  specialized Array._endMutation()(v30);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v58 = v57;
  v56 = v55;
  v54 = v53;
  v52 = v51;
  v31 = v50;
  v32 = v49;
  v33 = v48;
  v34 = v47;
  v35 = v20;
  v36 = v59;
  v37 = v45;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v61, v38, v39, v40, v41, v42, v43, v44);
  objc_msgSend(v46, "activateConstraints:", isa);

}

uint64_t sub_1004ABBA4(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection] = 1;
  v4 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator;
  type metadata accessor for TrendArrowIndicatorView();
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1005AEF5C();
  v6 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  *(_QWORD *)&v5[v6] = sub_1004C2368();
  v7 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel;
  v8 = sub_1004C2368();

  *(_QWORD *)&v5[v7] = v8;
  v5[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType] = 1;

  v9 = *(void **)&v5[v7];
  v10 = type metadata accessor for TrendListMetricView();
  swift_deallocPartialClassInstance(v5, v10, 41, 7);
  return 0;
}

id sub_1004ABCC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendListMetricView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendListMetricView()
{
  return objc_opt_self(_TtC10FitnessApp19TrendListMetricView);
}

void sub_1004ABD58(uint64_t a1)
{
  sub_10047F60C((void *)*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection), 1);
}

id sub_1004ABD90()
{
  _QWORD *v0;
  id result;

  result = (id)*(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
  if ((_DWORD)result != 1)
    return sub_10047FF70(result);
  return result;
}

double sub_1004ABDD0()
{
  void **v0;
  char *v1;
  double v2;
  uint64_t v3;
  char *v4;
  double result;

  v1 = (char *)*v0;
  v2 = dbl_1006405B8[v1[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection]];
  v3 = swift_allocObject(&unk_1007A3860, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  sub_100151A58((uint64_t)sub_1004ABEBC, v3, v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_1004ABE98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004ABEBC()
{
  uint64_t v0;

  sub_10047F60C((void *)*(unsigned __int8 *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection), 1);
}

uint64_t sub_1004ABEF8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection)
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection) == 1)
  {
    return 0;
  }
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v1;
}

id sub_1004AC00C(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for WorkoutOverlayPathRenderer();
  v6 = objc_msgSendSuper2(&v8, "initWithOverlay:", a1);
  swift_unknownObjectRelease(a1);
  return v6;
}

id sub_1004AC088()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.298039216, 0.490196078, 0.501960784, 0.8);
  qword_10086AC38 = (uint64_t)result;
  return result;
}

void sub_1004AC1F0(CGContext *a1, double (*a2)(double, double), uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  double v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  const char *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  const char *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  double v57;
  id v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  BOOL v65;
  id v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  double v71;
  MKMapPoint v72;
  MKMapPoint v73;
  double (*v74)(double, double);
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  _BOOL4 v82;
  double v83;
  id v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  SEL v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  SEL v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  uint64_t v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  CGContext *v139;
  double v140;
  MKMapRect v141;
  double v142;
  double v143;
  double v144;
  double (*v145)(double, double);
  CHWorkoutDetailHeartRateTableViewCell *v146;
  unint64_t v147;
  uint64_t v148;
  double v149;
  id v150;
  void (*v151)(char *, void *);
  CLLocationCoordinate2D v152;
  CLLocationCoordinate2D v153;
  MKMapRect v154;

  v9 = v8;
  v133 = a3;
  v145 = a2;
  v143 = a8;
  v141.size.width = a6;
  v141.size.height = a7;
  v141.origin.y = a5;
  v141.origin.x = a4;
  v148 = type metadata accessor for Date(0);
  v132 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v12 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v13 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  v14 = objc_msgSend(v13, "workout");
  v15 = objc_msgSend(v14, "workoutActivityType");

  v16 = 5.0;
  if (v15 == (id)46)
    v16 = 15.0;
  v138 = v16;
  v17 = objc_msgSend(v13, "workout");
  sub_1000DCA14();
  v135 = v18;

  v19 = objc_msgSend(v13, "workout");
  v134 = objc_msgSend(v19, "workoutActivityType");

  v20 = objc_msgSend(v13, "allValidLocations");
  v21 = sub_100221424();
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if ((unint64_t)v22 >> 62)
    goto LABEL_46;
  v30 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  if (!v30)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v23, v24, v25, v26, v27, v28, v29);
    swift_bridgeObjectRelease(v135, v112, v113, v114, v115, v116, v117, v118);
    return;
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    v150 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
    v31 = v134;
  }
  else
  {
    v31 = v134;
    if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v150 = *(id *)(v22 + 32);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v32, v33, v34, v35, v36, v37, v38);
  v39 = objc_msgSend(v13, "inOrderLocationArrays");
  v40 = sub_100047110((uint64_t *)&unk_100828B50);
  v41 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

  v131 = *(_QWORD *)v41->cellPadding;
  if (v131)
  {
    v22 = 0;
    v137 = 0;
    v129 = v41 + 1;
    v144 = v143 * v143;
    v140 = v143 * 0.5;
    v13 = (void *)v148;
    v130 = v9;
    v128 = v41;
    while (1)
    {
      if ((unint64_t)v22 >= *(_QWORD *)v41->cellPadding)
        goto LABEL_45;
      v136 = v22;
      v56 = *((_QWORD *)&v129->super.super.super.super.isa + v22);
      *(_QWORD *)&v57 = swift_bridgeObjectRetain(v56).n128_u64[0];
      v58 = objc_msgSend(v150, "timestamp", v57);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

      v60 = Date.timeIntervalSinceReferenceDate.getter(v59);
      v151 = *(void (**)(char *, void *))(v132 + 8);
      v151(v12, v13);
      if ((unint64_t)v56 >> 62)
        break;
      v61 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v61)
        goto LABEL_16;
LABEL_12:
      v22 = v136 + 1;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v56, v49, v50, v51, v52, v53, v54, v55);
      v41 = v128;
      if (v22 == v131)
        goto LABEL_42;
    }
    if (v56 < 0)
      v97 = v56;
    else
      v97 = v56 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v56);
    v61 = _CocoaArrayWrapper.endIndex.getter(v97);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v56, v98, v99, v100, v101, v102, v103, v104);
    if (!v61)
      goto LABEL_12;
LABEL_16:
    v146 = (CHWorkoutDetailHeartRateTableViewCell *)v56;
    v147 = v56 & 0xC000000000000001;
    v62 = 4;
    while (1)
    {
      v22 = v62 - 4;
      if (v147)
        v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, v56);
      else
        v66 = *(id *)(v56 + 8 * v62);
      v67 = v66;
      v68 = v62 - 3;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        if (v22 < 0)
          v119 = v22;
        else
          v119 = v22 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v22);
        v30 = _CocoaArrayWrapper.endIndex.getter(v119);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v120, v121, v122, v123, v124, v125, v126);
        goto LABEL_5;
      }
      v69 = objc_msgSend(v66, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v69);

      v71 = Date.timeIntervalSinceReferenceDate.getter(v70);
      v151(v12, v13);
      if (v71 < v60)
      {

        v56 = (uint64_t)v146;
        goto LABEL_12;
      }
      objc_msgSend(v150, "coordinate");
      v72 = MKMapPointForCoordinate(v152);
      objc_msgSend(v67, "coordinate");
      v73 = MKMapPointForCoordinate(v153);
      v74 = v145;
      v75 = v145(v72.x, v72.y);
      v77 = v76;
      v78 = v74(v73.x, v73.y);
      v149 = v75;
      if (v144 <= (v78 - v75) * (v78 - v75) + (v79 - v77) * (v79 - v77))
        break;
      v13 = (void *)v148;
LABEL_18:
      v63 = objc_msgSend(v67, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v63);

      v60 = Date.timeIntervalSinceReferenceDate.getter(v64);
      v151(v12, v13);
      ++v62;
      v65 = v68 == v61;
      v56 = (uint64_t)v146;
      if (v65)
        goto LABEL_12;
    }
    v80 = v77;
    v142 = v79;
    v81 = v78;
    v154.origin.x = fmin(v72.x, v73.x) - v140;
    v154.origin.y = fmin(v72.y, v73.y) - v140;
    v154.size.width = vabdd_f64(v72.x, v73.x) + v143;
    v154.size.height = vabdd_f64(v72.y, v73.y) + v143;
    v82 = MKMapRectIntersectsRect(v141, v154);
    v13 = (void *)v148;
    if (!v82)
    {
LABEL_36:

      v150 = v67;
      goto LABEL_18;
    }
    objc_msgSend(v67, "speed");
    v84 = sub_1004AC9A0(v83);
    if (v31 == (id)67 || v31 == (id)61)
    {
      v85 = v135;
      if (v135)
      {
        v86 = objc_msgSend(v67, "timestamp", swift_bridgeObjectRetain(v135).n128_f64[0]);
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v86);

        __chkstk_darwin(v87);
        *(&v127 - 2) = (uint64_t)v12;
        v88 = v137;
        LOBYTE(v86) = sub_1004C6568((uint64_t (*)(char *))sub_1004ACDD8, (_BOOL8)(&v127 - 4), (uint64_t)v85);
        v137 = v88;
        swift_bridgeObjectRelease(v85, v89, v90, v91, v92, v93, v94, v95);
        v13 = (void *)v148;
        v151(v12, (void *)v148);
        if ((v86 & 1) == 0)
        {
          v31 = v134;
          if (qword_10081DE20 != -1)
            swift_once(&qword_10081DE20, sub_1004AC088);
          v96 = objc_msgSend((id)qword_10086AC38, "CGColor");

          v84 = v96;
          v9 = v130;
          goto LABEL_35;
        }
        v9 = v130;
      }
      v31 = v134;
    }
LABEL_35:
    sub_1004ACC18(v139, v138 < v71 - v60, (CGColor *)v84, v149, v80, v81, v142, v143);

    goto LABEL_36;
  }
LABEL_42:
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  swift_bridgeObjectRelease(v135, v105, v106, v107, v108, v109, v110, v111);

}

id sub_1004AC9A0(double a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  void *v17;
  id v18;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  objc_msgSend(v3, "bottomSpeed");
  v5 = v4;
  objc_msgSend(v3, "averageSpeed");
  v7 = v6;
  objc_msgSend(v3, "topSpeed");
  if (v7 * 0.9 >= a1)
  {
    if (a1 < 0.0 || v7 == 0.0)
    {
LABEL_12:
      v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 0.8, 0.0, 0.85);
      goto LABEL_15;
    }
  }
  else
  {
    if (a1 < 0.0)
      goto LABEL_12;
    if (v7 == 0.0 || v7 * 1.1 > a1)
      goto LABEL_12;
  }
  v10 = (a1 - v5) / (v8 - v5);
  if (v10 >= 0.5)
  {
    v16 = v10 + -0.5 + v10 + -0.5;
    v12 = round(v16 * -179.0 + 255.0);
    v13 = round(v16 * 13.0 + 204.0);
    v14 = v16 * 100.0 + 0.0;
  }
  else
  {
    v11 = v10 + v10;
    v12 = round(v11 * 0.0 + 255.0);
    v13 = round(v11 * 145.0 + 59.0);
    v14 = 48.0 - v11 * 48.0;
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v12 / 255.0, v13 / 255.0, round(v14) / 255.0, 0.85);
LABEL_15:
  v17 = v15;
  v18 = objc_msgSend(v15, "CGColor");

  return v18;
}

id sub_1004ACBC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return objc_opt_self(_TtC10FitnessApp27WorkoutGradientPathRenderer);
}

void sub_1004ACC18(CGContext *a1, char a2, CGColor *a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  uint64_t v16;
  uint64_t v17;
  const CGPath *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  CGColor *v27;
  CGPathDrawingMode v28;
  CGMutablePathRef Mutable;
  _QWORD v30[6];

  Mutable = CGPathCreateMutable();
  v30[0] = 0x3FF0000000000000;
  v30[1] = 0;
  v30[2] = 0;
  v30[3] = 0x3FF0000000000000;
  v30[4] = 0;
  v30[5] = 0;
  CGMutablePathRef.move(to:transform:)(v30, a4, a5);
  CGMutablePathRef.addLine(to:transform:)(v30, a6, a7);
  if ((a2 & 1) != 0)
  {
    v16 = sub_100047110(&qword_100821510);
    v17 = swift_allocObject(v16, 48, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v17 + 32) = 0;
    *(CGFloat *)(v17 + 40) = a8 + a8;
    v18 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)(0.0);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v17, v19, v20, v21, v22, v23, v24, v25);
    CGContextAddPath(a1, v18);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    v27 = (CGColor *)objc_msgSend(v26, "CGColor");

    CGContextSetStrokeColorWithColor(a1, v27);
    v28 = kCGPathStroke;
  }
  else
  {
    v18 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)(1, 1, v30, a8, 10.0);
    CGContextAddPath(a1, v18);
    CGContextSetFillColorWithColor(a1, a3);
    v28 = kCGPathFill;
  }
  CGContextDrawPath(a1, v28);

}

uint64_t sub_1004ACDD8(uint64_t a1)
{
  uint64_t v1;

  return sub_100113B04(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1004ACDF4(CGContext *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  const char *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  unint64_t v47;
  const char *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  double v56;
  id v57;
  uint64_t v58;
  double v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  BOOL v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  double v70;
  MKMapPoint v71;
  MKMapPoint v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  id v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  id v80;
  uint64_t v81;
  SEL v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  SEL v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  SEL v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  unint64_t v129;
  uint64_t *v130;
  double v131;
  CGContext *v132;
  double v133;
  MKMapRect v134;
  double v135;
  double v136;
  double v137;
  double v138;
  unint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  CLLocationCoordinate2D v143;
  CLLocationCoordinate2D v144;
  MKMapRect v145;

  v137 = a8;
  v138 = a9;
  v134.size.height = a6;
  v135 = a7;
  v134.origin.y = a4;
  v134.size.width = a5;
  v134.origin.x = a3;
  v142 = type metadata accessor for Date(0);
  v126 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v12 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  v14 = objc_msgSend((id)v13, "workout");
  v15 = objc_msgSend(v14, "workoutActivityType");

  v16 = 5.0;
  if (v15 == (id)46)
    v16 = 15.0;
  v131 = v16;
  v17 = objc_msgSend((id)v13, "workout");
  sub_1000DCA14();
  v128 = v18;

  v19 = objc_msgSend((id)v13, "workout");
  v20 = objc_msgSend(v19, "workoutActivityType");

  v21 = objc_msgSend((id)v13, "allValidLocations");
  v22 = sub_100221424();
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
    goto LABEL_43;
  if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_47:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v24, v25, v26, v27, v28, v29, v30);
    swift_bridgeObjectRelease(v128, v115, v116, v117, v118, v119, v120, v121);
    return;
  }
LABEL_5:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v31 = *(id *)(v23 + 32);
LABEL_8:
    v141 = v31;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v32, v33, v34, v35, v36, v37, v38);
    v13 = (uint64_t)objc_msgSend((id)v13, "inOrderLocationArrays");
    v39 = sub_100047110((uint64_t *)&unk_100828B50);
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v39);

    v125 = *(_QWORD *)(v23 + 16);
    if (!v125)
    {
LABEL_40:
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v40, v41, v42, v43, v44, v45, v46);
      swift_bridgeObjectRelease(v128, v99, v100, v101, v102, v103, v104, v105);

      return;
    }
    v47 = 0;
    v123 = v23 + 32;
    v136 = v135 * v135;
    v133 = v135 * 0.5;
    v124 = a2;
    v127 = v20;
    v122 = v23;
    while (1)
    {
      if (v47 >= *(_QWORD *)(v23 + 16))
        goto LABEL_42;
      v55 = *(_QWORD *)(v123 + 8 * v47);
      *(_QWORD *)&v56 = swift_bridgeObjectRetain(v55).n128_u64[0];
      v57 = objc_msgSend(v141, "timestamp", v56);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v57);

      v13 = v55;
      v59 = Date.timeIntervalSinceReferenceDate.getter(v58);
      v60 = *(void (**)(char *, uint64_t))(v126 + 8);
      v60(v12, v142);
      v140 = v55;
      if ((unint64_t)v55 >> 62)
      {
        v90 = v55 < 0 ? v140 : v55 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v140);
        v91 = v90;
        v13 = v140;
        v61 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v13, v92, v93, v94, v95, v96, v97, v98);
      }
      else
      {
        v61 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v129 = v47;
      if (v61)
        break;
LABEL_11:
      v47 = v129 + 1;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v13, v48, v49, v50, v51, v52, v53, v54);
      v23 = v122;
      if (v47 == v125)
        goto LABEL_40;
    }
    v139 = v13 & 0xC000000000000001;
    v62 = 4;
    while (1)
    {
      v23 = v62 - 4;
      if (v139)
        v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, v13);
      else
        v66 = *(id *)(v13 + 8 * v62);
      v67 = v66;
      v13 = v62 - 3;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        if (v23 < 0)
          v106 = v23;
        else
          v106 = v23 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v23);
        v107 = _CocoaArrayWrapper.endIndex.getter(v106);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v108, v109, v110, v111, v112, v113, v114);
        if (!v107)
          goto LABEL_47;
        goto LABEL_5;
      }
      v68 = objc_msgSend(v66, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v68);

      v70 = Date.timeIntervalSinceReferenceDate.getter(v69);
      v60(v12, v142);
      if (v70 < v59)
      {

        v13 = v140;
        goto LABEL_11;
      }
      objc_msgSend(v141, "coordinate");
      v71 = MKMapPointForCoordinate(v143);
      objc_msgSend(v67, "coordinate");
      v72 = MKMapPointForCoordinate(v144);
      v73 = v71.x - v137;
      v74 = v71.y - v138;
      v75 = v72.x - v137;
      v76 = v72.y - v138;
      if (v136 <= (v72.x - v137 - (v71.x - v137)) * (v72.x - v137 - (v71.x - v137)) + (v76 - v74) * (v76 - v74))
        break;
LABEL_21:
      v63 = objc_msgSend(v67, "timestamp", v122);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v63);

      v59 = Date.timeIntervalSinceReferenceDate.getter(v64);
      v60(v12, v142);
      ++v62;
      v65 = v13 == v61;
      v13 = v140;
      if (v65)
        goto LABEL_11;
    }
    v145.origin.x = fmin(v71.x, v72.x) - v133;
    v145.origin.y = fmin(v71.y, v72.y) - v133;
    v145.size.width = vabdd_f64(v71.x, v72.x) + v135;
    v145.size.height = vabdd_f64(v71.y, v72.y) + v135;
    if (!MKMapRectIntersectsRect(v134, v145))
    {
LABEL_20:

      v141 = v67;
      goto LABEL_21;
    }
    objc_msgSend(v67, "speed");
    v78 = sub_1004AC9A0(v77);
    if (v20 == (id)67 || v20 == (id)61)
    {
      v79 = v128;
      if (v128)
      {
        v80 = objc_msgSend(v67, "timestamp", swift_bridgeObjectRetain(v128).n128_f64[0]);
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v80);

        v130 = &v122;
        __chkstk_darwin(v81);
        *(&v122 - 2) = (uint64_t)v12;
        LOBYTE(v80) = sub_1004C6568((uint64_t (*)(char *))sub_1004AD514, (_BOOL8)(&v122 - 4), (uint64_t)v79);
        swift_bridgeObjectRelease(v79, v82, v83, v84, v85, v86, v87, v88);
        v60(v12, v142);
        if ((v80 & 1) == 0)
        {
          v20 = v127;
          if (qword_10081DE20 != -1)
            swift_once(&qword_10081DE20, sub_1004AC088);
          v89 = objc_msgSend((id)qword_10086AC38, "CGColor", v122);

          v78 = v89;
          a2 = v124;
          goto LABEL_19;
        }
        a2 = v124;
      }
      v20 = v127;
    }
LABEL_19:
    sub_1004ACC18(v132, v131 < v70 - v59, (CGColor *)v78, v73, v74, v75, v76, v135);

    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_1004AD514(uint64_t a1)
{
  return sub_1004ACDD8(a1) & 1;
}

void sub_1004AD53C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  _BYTE v6[24];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10081DE28 != -1)
    swift_once(&qword_10081DE28, sub_10004E610);
  v3 = a1 + 16;
  v4 = qword_10086AC40;
  swift_beginAccess(v3, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  objc_msgSend(v2, "postNotificationName:object:", v4, Strong);

}

id sub_1004AD704()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsAvailabilityManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1004AD770()
{
  unint64_t result;

  result = qword_100836778;
  if (!qword_100836778)
  {
    result = swift_getWitnessTable(&unk_1006406CC, &type metadata for TrendsAvailability);
    atomic_store(result, (unint64_t *)&qword_100836778);
  }
  return result;
}

uint64_t sub_1004AD7B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004AD7D8()
{
  uint64_t v0;

  sub_1004AD53C(v0);
}

uint64_t sub_1004AD7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100047110((uint64_t *)&unk_100832590) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004AD880()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t *sub_1004AD8B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t ViewModel;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t DataType;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v6 = a3;
    ViewModel = type metadata accessor for TrainingLoadViewModel(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    v8 = *(int *)(v6 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8);
    v12 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = v11;
    v9[1] = v12;
    swift_retain(v11);
    swift_retain(v12);
    v13 = *(int *)(sub_100047110(&qword_100834258) + 32);
    v14 = (char *)v9 + v13;
    v15 = &v10[v13];
    DataType = type metadata accessor for TrainingLoadDataType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 16))(v14, v15, DataType);
    v17 = *(int *)(v6 + 24);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(id *)v19;
    LOBYTE(v6) = v19[8];
    sub_10010C5D0(*(id *)v19, v6);
    *(_QWORD *)v18 = v20;
    v18[8] = v6;
  }
  return a1;
}

void sub_1004AD9B8(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel;
  _QWORD *v5;
  char *v6;
  uint64_t DataType;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(a1, ViewModel);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_release(*v5);
  swift_release(v5[1]);
  v6 = (char *)v5 + *(int *)(sub_100047110(&qword_100834258) + 32);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v6, DataType);
  sub_10010C5EC(*(id *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_1004ADA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t DataType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = v10;
  v8[1] = v11;
  swift_retain(v10);
  swift_retain(v11);
  v12 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v13 = (char *)v8 + v12;
  v14 = v9 + v12;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 16))(v13, v14, DataType);
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(id *)v18;
  LOBYTE(a2) = *(_BYTE *)(v18 + 8);
  sub_10010C5D0(*(id *)v18, a2);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = a2;
  return a1;
}

uint64_t sub_1004ADB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DataType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  char v23;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v8 + 8) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v15 = v8 + v14;
  v16 = v9 + v14;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 24))(v15, v16, DataType);
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(id *)v20;
  LOBYTE(a3) = *(_BYTE *)(v20 + 8);
  sub_10010C5D0(*(id *)v20, a3);
  v22 = *(void **)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = a3;
  sub_10010C5EC(v22, v23);
  return a1;
}

uint64_t sub_1004ADC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t DataType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v12 = (char *)v8 + v11;
  v13 = v9 + v11;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 32))(v12, v13, DataType);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  return a1;
}

uint64_t sub_1004ADCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t DataType;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void *v20;
  char v21;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v10);
  v11 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release(v11);
  v12 = *(int *)(sub_100047110(&qword_100834258) + 32);
  v13 = v8 + v12;
  v14 = v9 + v12;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 40))(v13, v14, DataType);
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *(void **)v17;
  v21 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = (_BYTE)v18;
  sub_10010C5EC(v20, v21);
  return a1;
}

uint64_t sub_1004ADDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004ADDDC);
}

uint64_t sub_1004ADDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v7 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = ViewModel;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100047110(&qword_100834258);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1004ADE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004ADE94);
}

uint64_t sub_1004ADE94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v9 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = ViewModel;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100047110(&qword_100834258);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for LoadTypeScrollView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008367D8;
  if (!qword_1008367D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadTypeScrollView);
  return result;
}

void sub_1004ADF7C(uint64_t a1)
{
  uint64_t ViewModel;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  ViewModel = type metadata accessor for TrainingLoadViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(ViewModel - 8) + 64;
    sub_1004AE008(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_1004AE008(uint64_t a1)
{
  uint64_t DataType;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008342D8)
  {
    DataType = type metadata accessor for TrainingLoadDataType(255);
    v3 = type metadata accessor for Binding(a1, DataType);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008342D8);
  }
}

uint64_t sub_1004AE05C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9478, 1);
}

uint64_t sub_1004AE06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  __n128 v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;

  v33 = a3;
  v5 = type metadata accessor for ScrollIndicatorVisibility(0);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100836818);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100836820);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static Axis.Set.horizontal.getter(v14);
  v35 = a2;
  v36 = a1;
  v18 = sub_100047110(&qword_100836828);
  v19 = sub_1004AFE48();
  v20 = ScrollView.init(_:showsIndicators:content:)(v17, 1, sub_1004AFE40, v34, v18, v19);
  v21 = static ScrollIndicatorVisibility.hidden.getter(v20);
  v22 = static Axis.Set.vertical.getter(v21);
  v24 = static Axis.Set.horizontal.getter(v23);
  v25 = Axis.Set.init(rawValue:)(0);
  v26 = Axis.Set.init(rawValue:)(v25);
  if (Axis.Set.init(rawValue:)(v26 & v22) != v22)
    v25 = Axis.Set.init(rawValue:)(v25 | v22);
  v27 = Axis.Set.init(rawValue:)(v25);
  if (Axis.Set.init(rawValue:)(v27 & v24) != v24)
    v25 = Axis.Set.init(rawValue:)(v25 | v24);
  v28 = sub_100028384(&qword_100836848, &qword_100836818, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.scrollIndicators(_:axes:)(v7, v25, v8, v28);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33, v16, v12);
}

uint64_t sub_1004AE284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = sub_100047110(&qword_100836840);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v9);
  *((_QWORD *)v8 + 1) = 0x4024000000000000;
  v8[16] = 0;
  v10 = sub_100047110(&qword_100836850);
  v11 = sub_1004AE398(a1, a2, (uint64_t)&v8[*(int *)(v10 + 44)]);
  LOBYTE(a2) = static Edge.Set.horizontal.getter(v11);
  v12 = EdgeInsets.init(_all:)(16.0);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_100021CC0((uint64_t)v8, a3, &qword_100836840);
  v19 = a3 + *(int *)(sub_100047110(&qword_100836828) + 36);
  *(_BYTE *)v19 = a2;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_10001BE90((uint64_t)v8, &qword_100836840);
}

uint64_t sub_1004AE398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t TypeScrollView;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t ViewModel;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v32 = a3;
  v30 = type metadata accessor for ScrollViewProxy(0);
  v4 = *(_QWORD *)(v30 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  v8 = *(_QWORD *)(TypeScrollView - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(TypeScrollView);
  v11 = a1 + *(int *)(v10 + 24);
  v12 = *(id *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_10010C5D0(*(id *)v11, v13);
  v14 = (char *)sub_1003F70B8(v12, v13);
  sub_10010C5EC(v12, v13);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v15);

  ViewModel = dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter();
  swift_release(v15);
  v33 = ViewModel;
  KeyPath = swift_getKeyPath(&unk_100640790);
  sub_10004F8C8(a1, (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LoadTypeScrollView);
  v18 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v31, v30);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v9 + v21 + v20) & ~v21;
  v23 = swift_allocObject(&unk_1007A3A30, v22 + v5, v19 | v21 | 7);
  sub_1004AFDB0((uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v6, v18);
  v24 = sub_100047110(&qword_100834908);
  v25 = sub_100047110(&qword_100836858);
  v26 = sub_100028384(&qword_100834910, &qword_100834908, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_1000083D8(&qword_1008348A8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  v28 = sub_1004B0068();
  return ForEach<>.init(_:id:content:)(&v33, KeyPath, sub_1004AFFF0, v23, v24, v25, v26, v27, v28);
}

uint64_t sub_1004AE5DC@<X0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __n128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  void (*v85)(_BYTE *, uint64_t);
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE v104[12];
  int v105;
  uint64_t KeyPath;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t ViewModel;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t TypeScrollView;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t DataType;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  char v155;
  _BYTE v156[7];
  _BYTE v157[7];
  char v158;
  _BYTE v159[7];
  char v160;
  char v161;
  _BYTE v162[7];
  _BYTE v163[7];

  v129 = a3;
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)&a2;
  v145 = a2;
  v144 = a4;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v140 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v137 = &v104[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v135 = &v104[-v8];
  v143 = type metadata accessor for AccessibilityTraits(0);
  v130 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = &v104[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v134 = type metadata accessor for AccessibilityChildBehavior(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = &v104[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v126 = type metadata accessor for ScrollViewProxy(0);
  v148 = *(_QWORD *)(v126 - 8);
  v128 = *(_QWORD *)(v148 + 64);
  __chkstk_darwin(v126);
  v124 = &v104[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v146 = *(_QWORD *)(ViewModel - 8);
  v125 = *(_QWORD *)(v146 + 64);
  __chkstk_darwin(ViewModel);
  v120 = &v104[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  v121 = *(_QWORD *)(TypeScrollView - 8);
  v122 = *(_QWORD *)(v121 + 64);
  __chkstk_darwin(TypeScrollView);
  v118 = &v104[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = sub_100047110(&qword_1008368C8);
  __chkstk_darwin(v117);
  v15 = &v104[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for Font.TextStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v104[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v147 = sub_100047110(&qword_100836870);
  __chkstk_darwin(v147);
  v21 = (uint64_t)&v104[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v116 = sub_100047110(&qword_100836868);
  v127 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v119 = &v104[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v139 = sub_100047110(&qword_1008368D0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v115 = &v104[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_100047110(&qword_100836858);
  __chkstk_darwin(v24);
  v136 = &v104[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v110 = static VerticalAlignment.center.getter(v26);
  sub_1004AF078(a1, v4, (uint64_t)&v149);
  v109 = v149;
  v108 = v150;
  v27 = v151;
  v113 = v152;
  v112 = v153;
  v111 = v154;
  v28.n128_f64[0] = (*(double (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for Font.TextStyle.footnote(_:), v16);
  static Font.Weight.bold.getter(v28);
  v107 = static Font.system(_:weight:)(v19);
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
  KeyPath = swift_getKeyPath(&unk_1006407C0);
  v105 = static Edge.Set.vertical.getter(KeyPath);
  v29 = EdgeInsets.init(_all:)(9.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v160 = 0;
  v158 = v27;
  v155 = 0;
  LOBYTE(v17) = static Edge.Set.horizontal.getter(v36);
  v37 = EdgeInsets.init(_all:)(16.0);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  LOBYTE(v19) = v160;
  LOBYTE(v4) = v158;
  v44 = v155;
  v161 = 0;
  v46 = static Alignment.center.getter(v45);
  v48 = v47;
  v49 = *(_QWORD *)&v145;
  sub_1004AF3F4(v145, (uint64_t)v15);
  v50 = (uint64_t *)&v15[*(int *)(v117 + 36)];
  *v50 = v46;
  v50[1] = v48;
  sub_100021CC0((uint64_t)v15, v21 + *(int *)(v147 + 36), &qword_1008368C8);
  *(_QWORD *)v21 = v110;
  *(_QWORD *)(v21 + 8) = 0x4010000000000000;
  *(_BYTE *)(v21 + 16) = (_BYTE)v19;
  *(_DWORD *)(v21 + 17) = *(_DWORD *)v159;
  *(_DWORD *)(v21 + 20) = *(_DWORD *)&v159[3];
  v51 = v108;
  *(_QWORD *)(v21 + 24) = v109;
  *(_QWORD *)(v21 + 32) = v51;
  *(_BYTE *)(v21 + 40) = (_BYTE)v4;
  *(_DWORD *)(v21 + 41) = *(_DWORD *)v157;
  *(_DWORD *)(v21 + 44) = *(_DWORD *)&v157[3];
  v52 = v112;
  *(_OWORD *)(v21 + 48) = v113;
  *(_OWORD *)(v21 + 64) = v52;
  v53 = KeyPath;
  *(_QWORD *)(v21 + 80) = v111;
  *(_QWORD *)(v21 + 88) = v53;
  *(_QWORD *)(v21 + 96) = v107;
  *(_BYTE *)(v21 + 104) = v105;
  *(_DWORD *)(v21 + 108) = *(_DWORD *)&v156[3];
  *(_DWORD *)(v21 + 105) = *(_DWORD *)v156;
  *(double *)(v21 + 112) = v29;
  *(_QWORD *)(v21 + 120) = v31;
  *(_QWORD *)(v21 + 128) = v33;
  *(_QWORD *)(v21 + 136) = v35;
  *(_BYTE *)(v21 + 144) = v44;
  *(_DWORD *)(v21 + 145) = *(_DWORD *)v163;
  *(_DWORD *)(v21 + 148) = *(_DWORD *)&v163[3];
  *(_BYTE *)(v21 + 152) = v17;
  *(_DWORD *)(v21 + 153) = *(_DWORD *)v162;
  *(_DWORD *)(v21 + 156) = *(_DWORD *)&v162[3];
  *(double *)(v21 + 160) = v37;
  *(_QWORD *)(v21 + 168) = v39;
  *(_QWORD *)(v21 + 176) = v41;
  *(_QWORD *)(v21 + 184) = v43;
  *(_BYTE *)(v21 + 192) = v161;
  sub_10001BE90((uint64_t)v15, &qword_1008368C8);
  v54 = v118;
  sub_10004F8C8(v49, (uint64_t)v118, type metadata accessor for LoadTypeScrollView);
  v55 = v146;
  v56 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v146 + 16);
  v57 = v120;
  v114 = a1;
  v58 = ViewModel;
  v56(v120, a1, ViewModel);
  v59 = v148;
  v60 = v124;
  v61 = v126;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v148 + 16))(v124, v129, v126);
  v62 = *(unsigned __int8 *)(v121 + 80);
  v63 = (v62 + 16) & ~v62;
  v64 = *(unsigned __int8 *)(v55 + 80);
  v65 = (v122 + v64 + v63) & ~v64;
  v66 = *(unsigned __int8 *)(v59 + 80);
  v67 = (v125 + v66 + v65) & ~v66;
  v68 = swift_allocObject(&unk_1007A3A58, v67 + v128, v62 | v64 | v66 | 7);
  sub_1004AFDB0((uint64_t)v54, v68 + v63);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v146 + 32))(v68 + v65, v57, v58);
  v69 = v68 + v67;
  v70 = v130;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v148 + 32))(v69, v60, v61);
  v71 = sub_1004B0144();
  v72 = v119;
  v73 = v147;
  View.onTapGesture(count:perform:)(1, sub_1004B03F0, v68, v147, v71);
  swift_release(v68);
  v74 = sub_10001BE90(v21, &qword_100836870);
  v75 = v131;
  static AccessibilityChildBehavior.combine.getter(v74);
  v149 = v73;
  v150 = v71;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v149, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v77 = v115;
  v78 = v116;
  View.accessibilityElement(children:)(v75, v116, OpaqueTypeConformance2);
  (*(void (**)(_BYTE *, uint64_t))(v133 + 8))(v75, v134);
  v79 = v78;
  v80.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v127 + 8))(v72, v78);
  v81 = v135;
  TrainingLoadViewModel.dataType.getter(v80);
  v82 = sub_100047110(&qword_100834258);
  v83 = v137;
  Binding.wrappedValue.getter(v82);
  v84 = v83;
  LOBYTE(v21) = static TrainingLoadDataType.== infix(_:_:)(v81, v83);
  v85 = *(void (**)(_BYTE *, uint64_t))(v140 + 8);
  v86 = v84;
  v87 = DataType;
  v85(v86, DataType);
  v85(v81, v87);
  v88 = sub_100047110(&qword_1008368D8);
  v89 = *(_QWORD *)(v70 + 72);
  v90 = *(unsigned __int8 *)(v70 + 80);
  v91 = (v90 + 32) & ~v90;
  if ((v21 & 1) != 0)
  {
    v92 = swift_allocObject(v88, v91 + 2 * v89, v90 | 7);
    *(_OWORD *)(v92 + 16) = xmmword_100620BC0;
    v93 = static AccessibilityTraits.isSelected.getter(v92);
  }
  else
  {
    v93 = swift_allocObject(v88, v91 + v89, v90 | 7);
    v92 = v93;
    *(_OWORD *)(v93 + 16) = xmmword_100622F90;
  }
  static AccessibilityTraits.isButton.getter(v93);
  v149 = v92;
  v94 = sub_1000083D8((unint64_t *)&qword_1008368E0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v95 = sub_100047110(&qword_1008368E8);
  v96 = sub_100028384(&qword_1008368F0, &qword_1008368E8, (uint64_t)&protocol conformance descriptor for [A]);
  v97 = v142;
  v98 = v95;
  v99 = v143;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v149, v98, v96, v143, v94);
  v149 = v79;
  v150 = OpaqueTypeConformance2;
  v100 = swift_getOpaqueTypeConformance2(&v149, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v101 = (uint64_t)v136;
  v102 = v139;
  View.accessibilityAddTraits(_:)(v97, v139, v100);
  (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v97, v99);
  (*(void (**)(_BYTE *, uint64_t))(v138 + 8))(v77, v102);
  return sub_100045AD4(v101, v144, &qword_100836858);
}

void sub_1004AF078(uint64_t a1@<X0>, CHWorkoutDetailHeartRateTableViewCell *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  __n128 v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t Band;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  char v69;
  uint64_t v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  unint64_t v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  uint64_t v80;
  uint64_t v81;
  Swift::String View;

  v79 = a2;
  v5 = sub_100047110(&qword_100836920);
  __chkstk_darwin(v5);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v9 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v78 - v13;
  View = TrainingLoadViewModel.localizedName()();
  v78 = sub_100038CA0();
  v15 = Text.init<A>(_:)(&View, &type metadata for String, v78);
  v17 = v16;
  LODWORD(v80) = v18;
  v20 = v19;
  v81 = a1;
  TrainingLoadViewModel.dataType.getter();
  type metadata accessor for LoadTypeScrollView(0);
  v21 = sub_100047110(&qword_100834258);
  Binding.wrappedValue.getter(v21);
  LOBYTE(a1) = static TrainingLoadDataType.== infix(_:_:)(v14, v11);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v11, DataType);
  v22(v14, DataType);
  if ((a1 & 1) != 0)
  {
    v24 = static Color.white.getter(v23);
  }
  else
  {
    v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v24 = Color.init(_:)(v25);
  }
  v26 = v24;
  View._countAndFlagsBits = v24;
  v27 = v80 & 1;
  v28 = Text.foregroundStyle<A>(_:)(&View, v15, v17, v80 & 1, v20, &type metadata for Color, &protocol witness table for Color);
  v80 = v29;
  LODWORD(v31) = v30;
  v33 = v32;
  sub_1000E4458(v15, v17, v27);
  swift_release(v26);
  swift_bridgeObjectRelease(v20, v34, v35, v36, v37, v38, v39, v40);
  TrainingLoadViewModel.loadBandToday()();
  Band = type metadata accessor for TrainingLoadBand(0);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Band - 8) + 48))(v7, 1, Band);
  sub_10001BE90((uint64_t)v7, &qword_100836920);
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v46 = 0;
  if (v42 != 1)
  {
    View = TrainingLoadViewModel.loadPercentageToday()();
    v47 = Text.init<A>(_:)(&View, &type metadata for String, v78);
    LODWORD(v78) = v31;
    v31 = v48;
    v50 = v49;
    v79 = v33;
    v52 = v51 & 1;
    v53 = TrainingLoadViewModel.loadBandTodayColor()();
    v81 = v28;
    v54 = v53;
    View._countAndFlagsBits = v53;
    v55 = v50;
    v43 = Text.foregroundStyle<A>(_:)(&View, v47, v31, v52, v50, &type metadata for Color, &protocol witness table for Color);
    v44 = v56;
    v46 = v57;
    v45 = v58 & 1;
    v59 = v31;
    LOBYTE(v31) = v78;
    v60 = v52;
    v33 = v79;
    sub_1000E4458(v47, v59, v60);
    v61 = v54;
    v28 = v81;
    swift_release(v61);
    swift_bridgeObjectRelease(v55, v62, v63, v64, v65, v66, v67, v68);
  }
  v69 = v31 & 1;
  v70 = v80;
  *(_QWORD *)a3 = v28;
  *(_QWORD *)(a3 + 8) = v70;
  *(_BYTE *)(a3 + 16) = v69;
  *(_QWORD *)(a3 + 24) = v33;
  *(_QWORD *)(a3 + 32) = v43;
  *(_QWORD *)(a3 + 40) = v44;
  *(_QWORD *)(a3 + 48) = v45;
  *(_QWORD *)(a3 + 56) = v46;
  sub_1000E439C(v28, v70, v69);
  swift_bridgeObjectRetain(v33);
  sub_100182758(v43, v44, v45, v46);
  sub_100182728(v43, v44, v45, v46);
  sub_1000E4458(v28, v70, v69);
  swift_bridgeObjectRelease(v33, v71, v72, v73, v74, v75, v76, v77);
}

uint64_t sub_1004AF3F4@<X0>(double a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t DataType;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t (*v32)(char *, _QWORD, uint64_t);
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79[6];

  v72 = a1;
  v76 = a2;
  v2 = type metadata accessor for RoundedCornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_1008368F8);
  __chkstk_darwin(v78);
  v70 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v71 = (uint64_t)&v67 - v7;
  v74 = sub_100047110(&qword_100836900);
  __chkstk_darwin(v74);
  v75 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100047110(&qword_10082DDC0);
  __chkstk_darwin(v77);
  v68 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v19);
  v73 = (uint64_t)&v67 - v20;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v22 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v67 - v27;
  TrainingLoadViewModel.dataType.getter(v26);
  type metadata accessor for LoadTypeScrollView(0);
  v29 = sub_100047110(&qword_100834258);
  Binding.wrappedValue.getter(v29);
  v30 = static TrainingLoadDataType.== infix(_:_:)(v28, v24);
  v31 = *(void (**)(char *, uint64_t))(v22 + 8);
  v31(v24, DataType);
  v31(v28, DataType);
  v32 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v33 = v32(v11, enum case for RoundedCornerStyle.continuous(_:), v2);
  if ((v30 & 1) != 0)
  {
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
    v35 = Color.init(_:)(v34);
    sub_10004F8C8((uint64_t)v11, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v36 = v77;
    *(_QWORD *)&v18[*(int *)(v77 + 52)] = v35;
    *(_WORD *)&v18[*(int *)(v36 + 56)] = 256;
    sub_1002FB77C((uint64_t)v11);
    v37 = &qword_10082DDC0;
    v38 = (uint64_t)v18;
    v39 = v73;
    sub_100045AD4(v38, v73, &qword_10082DDC0);
    v40 = v75;
    sub_100021CC0(v39, v75, &qword_10082DDC0);
    swift_storeEnumTagMultiPayload(v40, v74, 0);
    v41 = sub_100028384(&qword_100836910, &qword_10082DDC0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    v42 = sub_100028384(&qword_100836918, &qword_1008368F8, (uint64_t)&protocol conformance descriptor for StrokeBorderShapeView<A, B, C>);
    v43 = v40;
    v44 = v36;
  }
  else
  {
    v45 = static Color.clear.getter(v33);
    sub_10004F8C8((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v46 = v77;
    *(_QWORD *)&v15[*(int *)(v77 + 52)] = v45;
    *(_WORD *)&v15[*(int *)(v46 + 56)] = 256;
    sub_1002FB77C((uint64_t)v11);
    v47 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
    v48 = Color.init(_:)(v47);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v79, 0, 0, &_swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
    v49 = v79[0];
    v50 = v79[2];
    v72 = v79[3];
    v51 = v79[4];
    v52 = v68;
    sub_100021CC0((uint64_t)v15, v68, &qword_10082DDC0);
    v53 = v70;
    sub_10004F8C8((uint64_t)v15, v70, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v54 = v79[1];
    v55 = v69;
    v32(v69, enum case for RoundedCornerStyle.circular(_:), v2);
    LOBYTE(v45) = static RoundedCornerStyle.== infix(_:_:)(v15, v55);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v55, v2);
    v56 = COERCE_UNSIGNED_INT64(v79[0] * 0.5) & 0xFFFFFFFFFFFFFFFELL | ((v45 & 1) == 0);
    v57 = v73;
    sub_100021CC0(v52, v73, &qword_10082DDC0);
    swift_retain(v48);
    v59 = static Alignment.center.getter(v58);
    v61 = v60;
    sub_10001BE90(v52, &qword_10082DDC0);
    swift_release(v48);
    v62 = v53 + *(int *)(v78 + 68);
    v63 = v62 + *(int *)(sub_100047110(&qword_100836908) + 36);
    sub_100045AD4(v57, v63, &qword_10082DDC0);
    v64 = (uint64_t *)(v63 + *(int *)(sub_100047110(&qword_10082DD80) + 36));
    *v64 = v59;
    v64[1] = v61;
    *(_QWORD *)v62 = v56;
    *(double *)(v62 + 8) = v49;
    *(double *)(v62 + 16) = v54;
    *(double *)(v62 + 24) = v50;
    *(double *)(v62 + 32) = v72;
    *(double *)(v62 + 40) = v51;
    *(_QWORD *)(v62 + 48) = v48;
    *(_WORD *)(v62 + 56) = 256;
    sub_10001BE90((uint64_t)v15, &qword_10082DDC0);
    v37 = &qword_1008368F8;
    v39 = v71;
    sub_100045AD4(v53, v71, &qword_1008368F8);
    v65 = v75;
    sub_100021CC0(v39, v75, &qword_1008368F8);
    swift_storeEnumTagMultiPayload(v65, v74, 1);
    v41 = sub_100028384(&qword_100836910, &qword_10082DDC0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    v42 = sub_100028384(&qword_100836918, &qword_1008368F8, (uint64_t)&protocol conformance descriptor for StrokeBorderShapeView<A, B, C>);
    v44 = v77;
    v43 = v65;
  }
  _ConditionalContent<>.init(storage:)(v43, v44, v78, v41, v42);
  return sub_10001BE90(v39, v37);
}

double sub_1004AFA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DataType;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v6 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v9);
  v12 = &v17[-v11];
  TrainingLoadViewModel.dataType.getter(v10);
  type metadata accessor for LoadTypeScrollView(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v12, DataType);
  v13 = sub_100047110(&qword_100834258);
  Binding.wrappedValue.setter(v8, v13);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v12, DataType);
  v18 = a3;
  v19 = a2;
  v15 = static Animation.default.getter(v14);
  withAnimation<A>(_:_:)(v15, sub_1004B0474, v17, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1004AFB58()
{
  uint64_t DataType;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v1 = *(_QWORD *)(DataType - 8);
  v2 = __chkstk_darwin(DataType);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.dataType.getter(v2);
  v5 = sub_1000083D8(&qword_1008348A8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  ScrollViewProxy.scrollTo<A>(_:anchor:)(v4, 0, 0, 1, DataType, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, DataType);
}

uint64_t sub_1004AFC2C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_10004F8C8(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LoadTypeScrollView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1007A3A08, v7 + v5, v6 | 7);
  result = sub_1004AFDB0((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *a2 = sub_1004AFDF4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_1004AFCD8()
{
  uint64_t v0;
  uint64_t TypeScrollView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ViewModel;
  _QWORD *v9;
  char *v10;
  uint64_t DataType;

  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  v2 = *(_QWORD *)(TypeScrollView - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(v7, ViewModel);
  v9 = (_QWORD *)(v7 + *(int *)(TypeScrollView + 20));
  swift_release(*v9);
  swift_release(v9[1]);
  v10 = (char *)v9 + *(int *)(sub_100047110(&qword_100834258) + 32);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v10, DataType);
  sub_10010C5EC(*(id *)(v7 + *(int *)(TypeScrollView + 24)), *(_BYTE *)(v7 + *(int *)(TypeScrollView + 24) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004AFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t TypeScrollView;

  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TypeScrollView - 8) + 32))(a2, a1, TypeScrollView);
  return a2;
}

uint64_t sub_1004AFDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadTypeScrollView(0) - 8) + 80);
  return sub_1004AE06C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1004AFE40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004AE284(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1004AFE48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836830;
  if (!qword_100836830)
  {
    v1 = sub_100007050(&qword_100836828);
    sub_100028384(&qword_100836838, &qword_100836840, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836830);
  }
  return result;
}

uint64_t sub_1004AFED0()
{
  uint64_t v0;
  uint64_t TypeScrollView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ViewModel;
  _QWORD *v14;
  char *v15;
  uint64_t DataType;

  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  v2 = *(_QWORD *)(TypeScrollView - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ScrollViewProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  v12 = v0 + v4;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(v12, ViewModel);
  v14 = (_QWORD *)(v12 + *(int *)(TypeScrollView + 20));
  swift_release(*v14);
  swift_release(v14[1]);
  v15 = (char *)v14 + *(int *)(sub_100047110(&qword_100834258) + 32);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v15, DataType);
  sub_10010C5EC(*(id *)(v12 + *(int *)(TypeScrollView + 24)), *(_BYTE *)(v12 + *(int *)(TypeScrollView + 24) + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1004AFFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for LoadTypeScrollView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_1004AE5DC(a1, COERCE_DOUBLE(v2 + v6), v2 + ((v6 + v7 + v8) & ~v8), a2);
}

unint64_t sub_1004B0068()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_100836860;
  if (!qword_100836860)
  {
    v1 = sub_100007050(&qword_100836858);
    v2 = sub_100007050(&qword_100836868);
    v4 = sub_100007050(&qword_100836870);
    v5 = sub_1004B0144();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836860);
  }
  return result;
}

unint64_t sub_1004B0144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836878;
  if (!qword_100836878)
  {
    v1 = sub_100007050(&qword_100836870);
    sub_1000F4518(&qword_100836880, &qword_100836888, (void (*)(void))sub_1004B01E0);
    sub_100028384(&qword_1008368C0, &qword_1008368C8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836878);
  }
  return result;
}

uint64_t sub_1004B01E0()
{
  return sub_1000F4518(&qword_100836890, &qword_100836898, (void (*)(void))sub_1004B01FC);
}

unint64_t sub_1004B01FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008368A0;
  if (!qword_1008368A0)
  {
    v1 = sub_100007050(&qword_1008368A8);
    sub_100028384(&qword_1008368B0, &qword_1008368B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008368A0);
  }
  return result;
}

uint64_t sub_1004B02A0()
{
  uint64_t v0;
  uint64_t TypeScrollView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD *v18;
  char *v19;
  uint64_t DataType;
  uint64_t v22;
  uint64_t v23;

  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  v2 = *(_QWORD *)(TypeScrollView - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v7 = *(_QWORD *)(ViewModel - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = type metadata accessor for ScrollViewProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 + v10 + v13) & ~v13;
  v22 = v14 + *(_QWORD *)(v12 + 64);
  v23 = v11;
  v15 = v3 | v8 | v13 | 7;
  v16 = v0 + v4;
  v17 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v17(v16, ViewModel);
  v18 = (_QWORD *)(v16 + *(int *)(TypeScrollView + 20));
  swift_release(*v18);
  swift_release(v18[1]);
  v19 = (char *)v18 + *(int *)(sub_100047110(&qword_100834258) + 32);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v19, DataType);
  sub_10010C5EC(*(id *)(v16 + *(int *)(TypeScrollView + 24)), *(_BYTE *)(v16 + *(int *)(TypeScrollView + 24) + 8));
  v17(v0 + v9, ViewModel);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v14, v23);
  return swift_deallocObject(v0, v22, v15);
}

double sub_1004B03F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for LoadTypeScrollView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for TrainingLoadViewModel(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_1004AFA34(v0 + v2, v0 + v5, v0 + ((v5 + v6 + v7) & ~v7));
}

uint64_t sub_1004B0474()
{
  return sub_1004AFB58();
}

uint64_t sub_1004B048C()
{
  return sub_100028384(&qword_100836928, &qword_100836930, (uint64_t)&protocol conformance descriptor for ScrollViewReader<A>);
}

uint64_t sub_1004B04B8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  v42 = a3;
  v43 = a4;
  v44 = a1;
  v5 = type metadata accessor for NavigationSource(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  __chkstk_darwin(v5);
  v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationAnnotation(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  __chkstk_darwin(v7);
  v36 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationPriority(0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  __chkstk_darwin(v9);
  v33 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for NavigationRoutingBehavior(0);
  v11 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NavigationIntent(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for NavigationResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (uint64_t *)((char *)&v31 - v23);
  *v24 = v44;
  v24[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))((char *)&v31 - v23, enum case for NavigationResource.tipsGallery(_:), v18);
  (*(void (**)(char *, _QWORD *, uint64_t))(v19 + 16))(v22, v24, v18);
  *v17 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for NavigationIntent.push(_:), v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for NavigationRoutingBehavior.takeover(_:), v32);
  v25 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for NavigationPriority.takeover(_:), v35);
  v26 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v42, v38);
  v27 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, enum case for NavigationSource.default(_:), v41);
  v28 = a2;
  v29 = v44;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v22, v17, v27, v13, v25, v26);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v19 + 8))(v24, v18);
}

uint64_t *sub_1004B0788(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for MetricPlatterType(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain(v7);
    v14 = v8;
    v13(v10, v11, v12);
    v15 = a3[7];
    v16 = a3[8];
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    v18 = v17;
  }
  return v4;
}

void sub_1004B0860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *sub_1004B08C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for MetricPlatterType(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain(v6);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[7];
  v15 = a3[8];
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v17 = v16;
  return a1;
}

_QWORD *sub_1004B0970(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(void **)((char *)a2 + v15);
  v17 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  v18 = v16;

  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1004B0A2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

_QWORD *sub_1004B0AB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = (void *)a1[2];
  a1[2] = a2[2];

  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[7];
  v14 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);

  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1004B0B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B0B64);
}

uint64_t sub_1004B0B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1004B0BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B0BEC);
}

uint64_t sub_1004B0BEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricPlatterType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MirrorActivityRingsPlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_100836990;
  if (!qword_100836990)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorActivityRingsPlatterView);
  return result;
}

uint64_t sub_1004B0C9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100640820;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterType(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004B0D2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B94C8, 1);
}

void sub_1004B0D3C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  void *v36;
  __n128 v37;
  __n128 v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t OpaqueTypeConformance2;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  double v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  double v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  _QWORD *v100;
  char *v101;
  int *v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  id v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  char *v112;
  char *v113;
  char *v114;
  id v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *);
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;

  v125 = a2;
  v133 = type metadata accessor for ActivityRing(0);
  v117 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v116 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v112 = (char *)&v107 - v6;
  v135 = type metadata accessor for RingDetailView(0, v5);
  v118 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v113 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100047110(&qword_1008369E0);
  v121 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v114 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100047110(&qword_1008369E8);
  v138 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v124 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v136 = (char *)&v107 - v11;
  __chkstk_darwin(v12);
  v145 = (char *)&v107 - v13;
  __chkstk_darwin(v14);
  v137 = (char *)&v107 - v15;
  v142 = type metadata accessor for AccessibilityChildBehavior(0);
  v129 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for WorkoutViewStyle(0);
  v130 = *(_QWORD *)(v127 - 8);
  v17 = __chkstk_darwin(v127);
  v139 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ActivityMoveRing(0, v17);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MoveRingDetailView(0, v20);
  v108 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100047110(&qword_1008369F0);
  v110 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100047110(&qword_1008369F8);
  v144 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v140 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v29);
  v143 = (char *)&v107 - v31;
  v123 = type metadata accessor for ActivityRings(0, v30);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v33 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(a1 + 8);
  v35 = swift_retain(v34);
  v36 = (void *)ActivitySummaryMetricsPublisher.activitySummary.getter(v35);
  v37 = swift_release(v34);
  v111 = v36;
  HKActivitySummary.activityRings()(v37);
  v38 = swift_retain(v34);
  v39 = ActivitySummaryMetricsPublisher.isWheelchairUser.getter(v38);
  swift_release(v34);
  v40 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for MirrorActivityRingsPlatterView(0) + 32));
  v115 = v36;
  ActivityRings.move.getter();
  v41 = *(id *)(a1 + 16);
  v42 = v39 & 1;
  v128 = v39 & 1;
  MoveRingDetailView.init(activityRing:isWheelchairUser:formattingManager:)(v22, v42, v41);
  v132 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  v43 = v130;
  v131 = *(void (**)(char *))(v130 + 104);
  v44 = v139;
  v45 = v127;
  v131(v139);
  v46 = sub_1000083D8(&qword_100836A00, (uint64_t (*)(uint64_t))&type metadata accessor for MoveRingDetailView, (uint64_t)&protocol conformance descriptor for MoveRingDetailView);
  View.workoutViewStyle(_:)(v44, v23, v46);
  v130 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v130)(v44, v45);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v25, v23);
  v48 = v141;
  static AccessibilityChildBehavior.combine.getter(v47);
  v146 = v23;
  v147 = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v146, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v50 = v140;
  v51 = v109;
  View.accessibilityElement(children:)(v48, v109, OpaqueTypeConformance2);
  v129 = *(_QWORD *)(v129 + 8);
  ((void (*)(char *, uint64_t))v129)(v48, v142);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v27, v51);
  v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v144 + 32))(v143, v50, v134);
  v53 = v112;
  v126 = v33;
  v54 = ActivityRings.exercise.getter(v52);
  v55 = ActivityRing.value.getter(v54);
  v56 = *(uint64_t (**)(char *, uint64_t))(v117 + 8);
  v57 = v133;
  v58 = v56(v53, v133);
  v59 = v116;
  v60 = ActivityRings.exercise.getter(v58);
  v61 = ActivityRing.goal.getter(v60);
  v56(v59, v57);
  v62 = v113;
  RingDetailView.init(ringType:value:goal:isWheelchairUser:)(1, v42, v55, v61);
  v63 = v139;
  ((void (*)(char *, _QWORD, uint64_t))v131)(v139, v132, v45);
  v64 = sub_1000083D8(&qword_100836A08, (uint64_t (*)(uint64_t))&type metadata accessor for RingDetailView, (uint64_t)&protocol conformance descriptor for RingDetailView);
  v65 = v114;
  v66 = v135;
  View.workoutViewStyle(_:)(v63, v135, v64);
  ((void (*)(char *, uint64_t))v130)(v63, v45);
  v118 = *(_QWORD *)(v118 + 8);
  v67 = v62;
  v68 = ((uint64_t (*)(char *, uint64_t))v118)(v62, v66);
  v69 = v141;
  static AccessibilityChildBehavior.combine.getter(v68);
  v146 = v66;
  v147 = v64;
  v117 = swift_getOpaqueTypeConformance2(&v146, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v70 = v145;
  v71 = v119;
  View.accessibilityElement(children:)(v69, v119, v117);
  ((void (*)(char *, uint64_t))v129)(v69, v142);
  v121 = *(_QWORD *)(v121 + 8);
  v72 = v65;
  ((void (*)(char *, uint64_t))v121)(v65, v71);
  v110 = *(_QWORD *)(v138 + 32);
  v73 = v70;
  v74 = v120;
  v75 = ((uint64_t (*)(char *, char *, uint64_t))v110)(v137, v73, v120);
  v76 = ActivityRings.stand.getter(v75);
  v77 = ActivityRing.value.getter(v76);
  v78 = v53;
  v79 = v133;
  v80 = v56(v78, v133);
  v81 = ActivityRings.stand.getter(v80);
  v82 = ActivityRing.goal.getter(v81);
  v56(v59, v79);
  RingDetailView.init(ringType:value:goal:isWheelchairUser:)(0, v128, v77, v82);
  v83 = v139;
  v84 = v127;
  ((void (*)(char *, _QWORD, uint64_t))v131)(v139, v132, v127);
  v85 = v135;
  View.workoutViewStyle(_:)(v83, v135, v64);
  ((void (*)(char *, uint64_t))v130)(v83, v84);
  v86 = ((uint64_t (*)(char *, uint64_t))v118)(v67, v85);
  v87 = v141;
  static AccessibilityChildBehavior.combine.getter(v86);
  v88 = v136;
  View.accessibilityElement(children:)(v87, v71, v117);
  ((void (*)(char *, uint64_t))v129)(v87, v142);
  ((void (*)(char *, uint64_t))v121)(v72, v71);
  v89 = v145;
  v90 = v88;
  v91 = v88;
  v92 = v74;
  ((void (*)(char *, char *, uint64_t))v110)(v145, v90, v74);
  v93 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  v94 = v140;
  v95 = v134;
  v93(v140, v143, v134);
  v97 = v137;
  v96 = v138;
  v98 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
  v98(v91, v137, v92);
  v99 = v124;
  v98(v124, v89, v92);
  v100 = v125;
  *v125 = v111;
  v100[1] = v40;
  *((_WORD *)v100 + 8) = 256;
  *((_BYTE *)v100 + 18) = v128;
  v101 = (char *)v100;
  v102 = (int *)sub_100047110(&qword_100836A10);
  v93(&v101[v102[12]], v94, v95);
  v103 = v136;
  v98(&v101[v102[16]], v136, v92);
  v98(&v101[v102[20]], v99, v92);
  v104 = *(void (**)(char *, uint64_t))(v96 + 8);
  v105 = v115;
  v104(v145, v92);
  v104(v97, v92);
  v106 = *(void (**)(char *, uint64_t))(v144 + 8);
  v106(v143, v95);

  (*(void (**)(char *, uint64_t))(v122 + 8))(v126, v123);
  v104(v99, v92);
  v104(v103, v92);
  v106(v140, v95);

}

void sub_1004B1784(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = 0;
  v3 = sub_100047110(&qword_1008369D8);
  sub_1004B0D3C(v1, &a1[*(int *)(v3 + 44)]);
}

unint64_t sub_1004B17C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836A18;
  if (!qword_100836A18)
  {
    v1 = sub_100007050(&qword_1008369D8);
    sub_100028384(&qword_10082E9E0, &qword_10082E9E8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_100836A20, &qword_100836A28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836A18);
  }
  return result;
}

id sub_1004B1860(void *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSArray v12;
  id v13;
  id result;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  void *v27;
  os_log_type_t v28;
  _BOOL8 v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double v37;
  unsigned int v38;
  BOOL v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *log;
  _QWORD v51[3];
  _BYTE v52[8];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v6 = sub_100047110((uint64_t *)&unk_100828340);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100623630;
  *(_QWORD *)(v7 + 32) = CNContactThumbnailImageDataKey;
  v55 = v7;
  specialized Array._endMutation()(v7);
  v8 = CNContactThumbnailImageDataKey;
  if (objc_msgSend(a1, "isMe"))
  {
    if (qword_10081DE30 != -1)
      swift_once(&qword_10081DE30, sub_1004B1DD8);
    v9 = (void *)qword_100836A30;
    if ((unint64_t)v55 >> 62)
    {
      if (v55 < 0)
        v46 = v55;
      else
        v46 = v55 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v55);
      v47 = sub_100047110((uint64_t *)&unk_100828950);
      v11 = _bridgeCocoaArray<A>(_:)(v46, v47);
      swift_bridgeObjectRelease(v55);
    }
    else
    {
      swift_bridgeObjectRetain(v55);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
      v11 = v55;
    }
    swift_bridgeObjectRelease(v55);
    sub_100047110((uint64_t *)&unk_100828950);
    v12.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v55 = 0;
    v13 = objc_msgSend(v9, "_ios_meContactWithKeysToFetch:error:", v12.super.isa, &v55, swift_bridgeObjectRelease(v11).n128_f64[0]);
  }
  else
  {
    result = objc_msgSend(a1, "contact");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v15 = result;
    v16 = objc_msgSend(result, "linkedContactStoreIdentifier");

    if (!v16)
    {
      swift_bridgeObjectRelease(v55);
      return sub_1004B1F4C(v45, a2);
    }
    if (qword_10081DE30 != -1)
      swift_once(&qword_10081DE30, sub_1004B1DD8);
    v17 = (void *)qword_100836A30;
    if ((unint64_t)v55 >> 62)
    {
      if (v55 < 0)
        v48 = v55;
      else
        v48 = v55 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v55);
      v49 = sub_100047110((uint64_t *)&unk_100828950);
      v19 = _bridgeCocoaArray<A>(_:)(v48, v49);
      swift_bridgeObjectRelease(v55);
    }
    else
    {
      swift_bridgeObjectRetain(v55);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
      v19 = v55;
    }
    swift_bridgeObjectRelease(v55);
    sub_100047110((uint64_t *)&unk_100828950);
    v12.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v55 = 0;
    v13 = objc_msgSend(v17, "unifiedContactWithIdentifier:keysToFetch:error:", v16, v12.super.isa, &v55, swift_bridgeObjectRelease(v19).n128_f64[0]);

  }
  v20 = v55;
  if (v13)
  {
    v21 = (id)v55;
    v22 = sub_1004B20C0(v13, a2);

  }
  else
  {
    v23 = (id)v55;
    v24 = _convertNSErrorToError(_:)(v20);

    v25 = swift_willThrow();
    v26 = static os_log_type_t.error.getter(v25);
    v27 = (void *)HKLogActivity;
    v28 = v26;
    v29 = os_log_type_enabled(HKLogActivity, v26);
    if (v29)
    {
      v30 = a1;
      swift_errorRetain(v24);
      v31 = v30;
      swift_errorRetain(v24);
      log = v27;
      v32 = swift_slowAlloc(32, -1);
      v33 = swift_slowAlloc(96, -1);
      v55 = v33;
      *(_DWORD *)v32 = 136315650;
      v34 = _typeName(_:qualified:)(v3, 0);
      v36 = v35;
      v53 = sub_10003E8EC(v34, v35, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v32 + 4);
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v36).n128_u64[0];
      *(_WORD *)(v32 + 12) = 2080;
      v38 = objc_msgSend(v31, "isMe", v37);
      v39 = v38 == 0;
      if (v38)
        v40 = 2123117;
      else
        v40 = 0;
      if (v39)
        v41 = 0xE000000000000000;
      else
        v41 = 0xE300000000000000;
      v53 = sub_10003E8EC(v40, v41, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v32 + 14);

      swift_bridgeObjectRelease(v41);
      *(_WORD *)(v32 + 22) = 2080;
      swift_getErrorValue(v24, v52, v51);
      v42 = Error.localizedDescription.getter(v51[1], v51[2]);
      v44 = v43;
      v53 = sub_10003E8EC(v42, v43, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v32 + 24);
      swift_bridgeObjectRelease(v44);
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, log, v28, "%s failed to fetch %scontact: %s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy(v33, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    v22 = sub_1004B1F4C(v29, a2);
    swift_errorRelease(v24);
  }
  return v22;
}

id sub_1004B1DD8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  qword_100836A30 = (uint64_t)result;
  return result;
}

void sub_1004B1E08()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(CNAvatarImageRendererSettings), "defaultSettings");
  v1 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v0);

  qword_100836A38 = (uint64_t)v1;
}

id sub_1004B1EF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingAvatarProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingAvatarProvider()
{
  return objc_opt_self(CHActivitySharingAvatarProvider);
}

id sub_1004B1F4C(uint64_t a1, double a2)
{
  uint64_t IsRightToLeft;
  void *v4;
  id v5;
  double v6;
  double v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;

  IsRightToLeft = FIUILocaleIsRightToLeft(a1);
  v4 = (void *)objc_opt_self(CNAvatarImageRenderingScope);
  v5 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v5, "scale");
  v7 = v6;

  v8 = objc_msgSend(v4, "scopeWithPointSize:scale:rightToLeft:style:", IsRightToLeft, 0, a2, a2, v7);
  if (qword_10081DE38 != -1)
    swift_once(&qword_10081DE38, sub_1004B1E08);
  v9 = objc_msgSend((id)qword_100836A38, "placeholderImageProvider");
  objc_msgSend(v8, "pointSize");
  v11 = v10;
  v13 = v12;
  objc_msgSend(v8, "scale");
  v15 = objc_msgSend(v9, "imageForSize:scale:style:", objc_msgSend(v8, "avatarViewStyle"), v11, v13, v14);
  swift_unknownObjectRelease(v8);
  swift_unknownObjectRelease(v9);
  return v15;
}

id sub_1004B20C0(void *a1, double a2)
{
  uint64_t IsRightToLeft;
  void *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  uint64_t v17;

  IsRightToLeft = FIUILocaleIsRightToLeft(a1);
  v5 = (void *)objc_opt_self(CNAvatarImageRenderingScope);
  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v6, "scale");
  v8 = v7;

  v9 = objc_msgSend(v5, "scopeWithPointSize:scale:rightToLeft:style:", IsRightToLeft, 0, a2, a2, v8);
  if (qword_10081DE38 != -1)
    swift_once(&qword_10081DE38, sub_1004B1E08);
  v10 = (void *)qword_100836A38;
  v11 = sub_100047110((uint64_t *)&unk_100828340);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100623630;
  *(_QWORD *)(v12 + 32) = a1;
  v17 = v12;
  specialized Array._endMutation()(v12);
  sub_1004B2244();
  v13 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v10, "avatarImageForContacts:scope:", isa, v9, swift_bridgeObjectRelease(v17).n128_f64[0]);
  swift_unknownObjectRelease(v9);

  return v15;
}

unint64_t sub_1004B2244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828970;
  if (!qword_100828970)
  {
    v1 = objc_opt_self(CNContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100828970);
  }
  return result;
}

uint64_t sub_1004B2280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B228C);
}

uint64_t sub_1004B228C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1004B22C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B22D4);
}

uint64_t sub_1004B22D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainingLoadTrackingTip(uint64_t a1)
{
  uint64_t result;

  result = qword_100836AC0;
  if (!qword_100836AC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrainingLoadTrackingTip);
  return result;
}

uint64_t sub_1004B2350()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t TrackingTip;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];

  v0 = sub_100047110(&qword_100820FB8);
  sub_100008398(v0, qword_10086AC48);
  sub_10003CE9C(v0, (uint64_t)qword_10086AC48);
  v9[3] = &type metadata for FitnessFeatures;
  v9[4] = sub_10004F7EC();
  LOBYTE(v9[0]) = 4;
  v1 = isFeatureEnabled(_:)(v9);
  v2 = _s10FitnessApp24HistoryViewActionContextVwxx_0(v9);
  if ((v1 & 1) != 0)
    v3 = FIIsTinkerVegaOrFitnessJunior(v2) ^ 1;
  else
    v3 = 0;
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  LOBYTE(v9[0]) = v3;
  v5 = sub_100047110(&qword_100836B48);
  v6 = type metadata accessor for Tips.ParameterOption(0);
  v7 = swift_allocObject(v5, ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100622F90;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)(TrackingTip, 0xD00000000000001DLL, 0x80000001006A1B30, v9, v7, &type metadata for Bool, TrackingTip, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1004B249C(uint64_t a1)
{
  return sub_1004B24E4(a1, qword_10086AC60, 0xD00000000000001CLL, 0x80000001006A1B10);
}

uint64_t sub_1004B24C0(uint64_t a1)
{
  return sub_1004B24E4(a1, qword_10086AC78, 0xD000000000000021, 0x80000001006A1AE0);
}

uint64_t sub_1004B24E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t TrackingTip;
  char v10;

  v7 = sub_100047110(&qword_100820FB8);
  sub_100008398(v7, a2);
  sub_10003CE9C(v7, (uint64_t)a2);
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  v10 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(TrackingTip, a3, a4, &v10, _swiftEmptyArrayStorage, &type metadata for Bool, TrackingTip, &protocol witness table for Bool, &protocol witness table for Bool);
}

CHWorkoutDetailHeartRateTableViewCell *sub_1004B2588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  _QWORD v17[2];

  v0 = sub_100047110(&qword_100834140);
  v1 = type metadata accessor for Tips.Action(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100622F90;
  v7 = v6 + v5;
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v17[0] = v11;
  v17[1] = v13;
  v14 = sub_100038CA0();
  Tips.Action.init<A>(id:title:perform:)(0xD000000000000013, 0x800000010069E490, v17, ASFriendListDisplayMode.id.getter, 0, &type metadata for String, v14);
  v15 = sub_1004B2DB0((CHWorkoutDetailHeartRateTableViewCell *)v6);
  swift_setDeallocating(v6);
  swift_arrayDestroy(v7, *(_QWORD *)(v6 + 16), v1);
  swift_deallocClassInstance(v6, 32, 7);
  return v15;
}

uint64_t sub_1004B2724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v0 = sub_100047110(&qword_100820FB8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100047110(&qword_100836B00);
  v5 = *(_QWORD *)(type metadata accessor for Tips.Rule(0) - 8);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 3 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100624A40;
  if (qword_10081DE40 != -1)
    swift_once(&qword_10081DE40, sub_1004B2350);
  v7 = sub_10003CE9C(v0, (uint64_t)qword_10086AC48);
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16);
  v8(v3, v7, v0);
  Tips.Rule.init<A>(_:_:)(v3, sub_1004B29B4, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  if (qword_10081DE48 != -1)
    swift_once(&qword_10081DE48, sub_1004B249C);
  v9 = sub_10003CE9C(v0, (uint64_t)qword_10086AC60);
  v10 = swift_beginAccess(v9, v31, 0, 0);
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v8)(v3, v9, v0, v10);
  Tips.Rule.init<A>(_:_:)(v3, sub_1004B29B4, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  if (qword_10081DE50 != -1)
    swift_once(&qword_10081DE50, sub_1004B24C0);
  v11 = sub_10003CE9C(v0, (uint64_t)qword_10086AC78);
  v12 = swift_beginAccess(v11, v30, 0, 0);
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v8)(v3, v11, v0, v12);
  Tips.Rule.init<A>(_:_:)(v3, sub_1004B2B54, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)static Tips.RuleBuilder.buildExpression(_:)(v6);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v14, v15, v16, v17, v18, v19, v20);
  v21 = static Tips.RuleBuilder.buildPartialBlock(first:)(v13);
  swift_bridgeObjectRelease(v13, v22, v23, v24, v25, v26, v27, v28);
  return v21;
}

uint64_t sub_1004B29B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004B29BC(a1, 1, a2);
}

uint64_t sub_1004B29BC@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[15];
  char v18;

  v6 = sub_100047110(&qword_100836B08);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100047110(&qword_100836B10);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100028384(&qword_100836B18, &qword_100836B10, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v10, v14);
  v18 = a2;
  static PredicateExpressions.build_Arg<A>(_:)(&v18, &type metadata for Bool);
  a3[3] = sub_100047110(&qword_100836B20);
  a3[4] = sub_1004B2CC8();
  sub_10004C480(a3);
  v15 = sub_100028384(&qword_100836B40, &qword_100836B08, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v13, v9, v10, v6, v14, v15, &protocol witness table for Bool);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1004B2B54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004B29BC(a1, 0, a2);
}

uint64_t sub_1004B2B5C()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000017, 0x80000001006A1B90);
  return Text.init(_:tableName:bundle:comment:)(v0);
}

uint64_t sub_1004B2BB8()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000019, 0x80000001006A1B70);
  return Text.init(_:tableName:bundle:comment:)(v0);
}

uint64_t sub_1004B2C14()
{
  return Image.init(_internalSystemName:)(0xD000000000000016);
}

CHWorkoutDetailHeartRateTableViewCell *sub_1004B2C30()
{
  return sub_1004B2588();
}

uint64_t sub_1004B2C44()
{
  return sub_1004B2724();
}

uint64_t sub_1004B2C58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1004B3244(&qword_100832418, (uint64_t)&unk_100640920);
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1004B2CA4()
{
  return sub_1004B3244(&qword_100836AF8, (uint64_t)&unk_1006408E8);
}

unint64_t sub_1004B2CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836B28;
  if (!qword_100836B28)
  {
    v1 = sub_100007050(&qword_100836B20);
    sub_100028384(&qword_100836B30, &qword_100836B10, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    sub_1004B2D4C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836B28);
  }
  return result;
}

unint64_t sub_1004B2D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836B38;
  if (!qword_100836B38)
  {
    v1 = sub_100007050(&qword_100836B08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100836B38);
  }
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1004B2DB0(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  void (*v37)(char *, char *, uint64_t, __n128);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;

  v2 = type metadata accessor for Tips.Action(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100047110(&qword_100836B50);
  __chkstk_darwin(v45);
  v44 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v43 = (uint64_t *)((char *)&v35 - v8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v35 - v10);
  v46 = &_swiftEmptyArrayStorage;
  sub_1004B302C(0, 0, 0);
  v12 = v46;
  v13 = *(_QWORD *)a1->cellPadding;
  v21 = swift_bridgeObjectRetain(a1);
  v42 = v13;
  v36 = a1;
  if (v13)
  {
    v22 = 0;
    v23 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v38 = *(_QWORD *)(v3 + 72);
    v39 = v23;
    v24 = (char *)a1 + v23;
    v37 = *(void (**)(char *, char *, uint64_t, __n128))(v3 + 16);
    v40 = v3;
    v41 = v2;
    do
    {
      v25 = v45;
      v26 = &v44[*(int *)(v45 + 48)];
      v37(v26, v24, v2, v21);
      v27 = (uint64_t)v43;
      v28 = (char *)v43 + *(int *)(v25 + 48);
      *v43 = v22;
      v29 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v29(v28, v26, v2);
      sub_1004B3048(v27, (uint64_t)v11);
      Tips.Action.with(index:)(*v11);
      sub_1004B3090((uint64_t)v11);
      v12 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
      {
        sub_1004B302C(0, *(_QWORD *)v12->cellPadding + 1, 1);
        v12 = v46;
      }
      v31 = *(_QWORD *)v12->cellPadding;
      v30 = *(_QWORD *)v12->cellInset;
      if (v31 >= v30 >> 1)
      {
        sub_1004B302C(v30 > 1, v31 + 1, 1);
        v12 = v46;
      }
      ++v22;
      *(_QWORD *)v12->cellPadding = v31 + 1;
      v32 = v38;
      v33 = (char *)v12 + v39 + v31 * v38;
      v2 = v41;
      v29(v33, v5, v41);
      v46 = v12;
      v24 += v32;
      v3 = v40;
    }
    while (v42 != v22);
  }
  swift_bridgeObjectRelease(v36, v14, v15, v16, v17, v18, v19, v20);
  return v12;
}

size_t sub_1004B302C(size_t a1, int64_t a2, char a3)
{
  CHWorkoutDetailHeartRateTableViewCell **v3;
  size_t result;

  result = sub_1004B30D0(a1, a2, a3, *v3);
  *v3 = (CHWorkoutDetailHeartRateTableViewCell *)result;
  return result;
}

uint64_t sub_1004B3048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100836B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B3090(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100836B50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

size_t sub_1004B30D0(size_t result, int64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)a4->cellInset;
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)a4->cellPadding;
  if (v7 <= v8)
    v9 = *(_QWORD *)a4->cellPadding;
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100047110(&qword_100834140);
  v11 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  *(_QWORD *)v15->cellPadding = v8;
  *(_QWORD *)v15->cellInset = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = (char *)v15 + v18;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= (char *)a4 + v18 + *(_QWORD *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack(v19);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19);
    }
    *(_QWORD *)a4->cellPadding = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_release(a4);
  return (size_t)v15;
}

uint64_t sub_1004B3244(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t TrackingTip;

  result = *a1;
  if (!result)
  {
    TrackingTip = type metadata accessor for TrainingLoadTrackingTip(255);
    result = swift_getWitnessTable(a2, TrackingTip);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B3284(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v17);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v8 = a2[8];
    v9 = *(int *)(a3 + 36);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 64) = v8;
    swift_bridgeObjectRetain(v5);
    swift_retain(v7);
    swift_retain(v8);
    v12 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      v18 = *v11;
      *v10 = *v11;
      swift_retain(v18);
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

double sub_1004B33A0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8), (SEL)a2, a3, a4, a5, a6, a7, a8);
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  v10 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v10).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004B3428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 36);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v6);
  swift_retain(v7);
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  return a1;
}

uint64_t sub_1004B3510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v17;
  swift_retain(v17);
  swift_release(v16);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v19;
  swift_retain(v19);
  swift_release(v18);
  if (a1 != a2)
  {
    v20 = *(int *)(a3 + 36);
    v21 = (uint64_t *)(a1 + v20);
    v22 = (uint64_t *)(a2 + v20);
    sub_1004B363C(a1 + v20);
    v23 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = 1;
    }
    else
    {
      v26 = *v22;
      *v21 = *v22;
      swift_retain(v26);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v25);
  }
  return a1;
}

uint64_t sub_1004B363C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100828058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004B367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v8 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1004B3744(uint64_t a1, uint64_t a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v11;
  swift_bridgeObjectRelease(v12, (SEL)a2, a3, a4, a5, a6, a7, a8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v13);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v14);
  if (a1 != a2)
  {
    v15 = a3[9];
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_1004B363C(a1 + v15);
    v18 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004B3854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B3860);
}

uint64_t sub_1004B3860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_100834268);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1004B38E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B38EC);
}

uint64_t sub_1004B38EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_100834268);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SlidingGradientText(uint64_t a1)
{
  uint64_t result;

  result = qword_100836BB0;
  if (!qword_100836BB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SlidingGradientText);
  return result;
}

void sub_1004B39A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1006409A8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_1006409C0;
  v4[3] = &unk_1006409D8;
  v4[4] = &unk_1006409D8;
  sub_1004B3A38(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_1004B3A38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008342E8)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008342E8);
  }
}

uint64_t sub_1004B3A8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B956C, 1);
}

double sub_1004B3A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double result;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for LayoutDirection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - v7;
  type metadata accessor for SlidingGradientText(0);
  sub_1003F74E0((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v2);
  v9 = static LayoutDirection.== infix(_:_:)(v8, v5);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  v11 = *(_QWORD *)(v1 + 64);
  if ((v9 & 1) != 0)
  {
    v18 = *(_BYTE *)(v1 + 56);
    v19 = v11;
    v12 = sub_100047110(&qword_100820D80);
    v13 = State.wrappedValue.getter(&v20, v12);
    if (v20 == 1)
      static UnitPoint.trailing.getter(v13);
    else
      return -0.5;
  }
  else
  {
    v18 = *(_BYTE *)(v1 + 56);
    v19 = v11;
    v15 = sub_100047110(&qword_100820D80);
    State.wrappedValue.getter(&v20, v15);
    if (v20 == 1)
      return static UnitPoint.leading.getter(v16);
    else
      return 1.5;
  }
  return result;
}

void sub_1004B3C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for LayoutDirection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  type metadata accessor for SlidingGradientText(0);
  sub_1003F74E0((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v2);
  v9 = static LayoutDirection.== infix(_:_:)(v8, v5);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  v11 = *(_QWORD *)(v1 + 64);
  if ((v9 & 1) != 0)
  {
    v17 = *(_BYTE *)(v1 + 56);
    v18 = v11;
    v12 = sub_100047110(&qword_100820D80);
    State.wrappedValue.getter(&v19, v12);
    if ((v19 & 1) == 0)
      static UnitPoint.leading.getter(v13);
  }
  else
  {
    v17 = *(_BYTE *)(v1 + 56);
    v18 = v11;
    v14 = sub_100047110(&qword_100820D80);
    v15 = State.wrappedValue.getter(&v19, v14);
    if ((v19 & 1) == 0)
      static UnitPoint.trailing.getter(v15);
  }
}

double sub_1004B3D74@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v2 = (uint64_t)v1;
  v4 = type metadata accessor for SlidingGradientText(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = *v1;
  v8 = v1[1];
  v48 = v7;
  *(_QWORD *)&v49 = v8;
  v9 = sub_100038CA0();
  swift_bridgeObjectRetain(v8);
  v10 = Text.init<A>(_:)(&v48, &type metadata for String, v9);
  v46 = v11;
  v13 = v12;
  v15 = v14;
  v16 = *(_QWORD *)(v2 + 48);
  v48 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)&v49 = v16;
  v17 = sub_100047110(&qword_10082F610);
  v18 = State.wrappedValue.getter(&v47, v17);
  v19 = v47;
  v20 = static UnitPoint.center.getter(v18);
  v22 = v21;
  v23 = sub_100047110((uint64_t *)&unk_10082BDC0);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100624A40;
  *(_QWORD *)(v24 + 32) = static Color.gray.getter((__n128)xmmword_100624A40);
  *(_QWORD *)(v24 + 40) = static Color.white.getter(v25);
  v27 = static Color.gray.getter(v26);
  *(_QWORD *)(v24 + 48) = v27;
  v48 = v24;
  specialized Array._endMutation()(v27);
  v28 = v48;
  v29 = sub_1004B3A9C();
  v31 = v30;
  sub_1004B3C0C();
  v33 = v32;
  v35 = v34;
  Gradient.init(colors:)(v28);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v48, v36, v29, v31, v33, v35);
  v37 = v48;
  v45 = v49;
  v38 = v50;
  v39 = v51;
  sub_1004B4140(v2, (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = *(unsigned __int8 *)(v5 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = swift_allocObject(&unk_1007A3B68, v41 + v6, v40 | 7);
  sub_1004B4244((uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41);
  v43 = v46;
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v43;
  *(_BYTE *)(a1 + 16) = v13 & 1;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 40) = v19;
  *(double *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 56) = v22;
  *(_QWORD *)(a1 + 64) = v37;
  result = *(double *)&v45;
  *(_OWORD *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 88) = v38;
  *(_QWORD *)(a1 + 96) = v39;
  *(_QWORD *)(a1 + 104) = sub_1004B4288;
  *(_QWORD *)(a1 + 112) = v42;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  return result;
}

double sub_1004B3F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = static Animation.linear(duration:)(*(double *)(a1 + 16));
    v3 = Animation.repeatForever(autoreverses:)(0, v2);
    swift_release(v2);
    __chkstk_darwin(v4);
    v11 = a1;
    v5 = sub_1004B42B4;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 24);
    v7 = static Animation.linear(duration:)(*(double *)(a1 + 16));
    v3 = Animation.repeatCount(_:autoreverses:)(v6, 0, v7);
    swift_release(v7);
    __chkstk_darwin(v8);
    v11 = a1;
    v5 = sub_1004B4458;
  }
  withAnimation<A>(_:_:)(v3, v5, &v10, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

double sub_1004B40A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 64);
  swift_retain(v1);
  v2 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v5, v2);
  v4 = (v5 & 1) == 0;
  State.wrappedValue.setter(&v4, v2);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_1004B4140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SlidingGradientText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B4184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for SlidingGradientText(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v4 + 8), v6, v7, v8, v9, v10, v11, v12);
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  v13 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 36));
  v14 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004B4244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SlidingGradientText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1004B4288()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SlidingGradientText(0) - 8) + 80);
  return sub_1004B3F9C(v0 + ((v1 + 16) & ~v1));
}

double sub_1004B42B4()
{
  uint64_t v0;

  return sub_1004B40A0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1004B42D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836BF8;
  if (!qword_100836BF8)
  {
    v1 = sub_100007050(&qword_100836C00);
    sub_1004B433C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836BF8);
  }
  return result;
}

unint64_t sub_1004B433C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836C08;
  if (!qword_100836C08)
  {
    v1 = sub_100007050(&qword_100836C10);
    sub_1004B43A8();
    sub_1004B440C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836C08);
  }
  return result;
}

unint64_t sub_1004B43A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836C18;
  if (!qword_100836C18)
  {
    v1 = sub_100007050(&qword_100836C20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836C18);
  }
  return result;
}

unint64_t sub_1004B440C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836C28;
  if (!qword_100836C28)
  {
    v1 = sub_100007050(&qword_100836C30);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100836C28);
  }
  return result;
}

double sub_1004B4458()
{
  return sub_1004B42B4();
}

ValueMetadata *type metadata accessor for SeymourWorkoutRecommendation()
{
  return &type metadata for SeymourWorkoutRecommendation;
}

uint64_t sub_1004B447C(uint64_t a1, void *a2)
{
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(a2);
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(a2);
  v5._object = (void *)0x8000000100689250;
  v5._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v5);
  return 91;
}

uint64_t sub_1004B4518()
{
  uint64_t v0;

  return sub_1004B447C(*(_QWORD *)v0, *(void **)(v0 + 8));
}

unint64_t sub_1004B4520()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v7;

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_100047110(&qword_100820A50);
  inited = swift_initStackObject(v3, &v7);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter((__n128)xmmword_100622F90);
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  swift_bridgeObjectRetain(v1);
  return sub_100435AC8(inited);
}

uint64_t sub_1004B4598(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

void destroy for AwardEntity(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for NextIntervalHintView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

_QWORD *assignWithTake for AwardEntity(_QWORD *a1, _OWORD *a2)
{
  void *v4;

  swift_release(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for NextIntervalHintView()
{
  return &type metadata for NextIntervalHintView;
}

uint64_t sub_1004B46C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B95CC, 1);
}

void sub_1004B46D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, __n128 a9@<Q2>, __n128 a10@<Q4>)
{
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  void *v20;
  id v21;
  char v22;
  double v23;
  id v24;
  char v25;
  double v26;
  id v27;
  char v28;
  double v29;
  id v30;
  char v31;
  double v32;
  id v33;
  char v34;
  double v35;
  id v36;
  char v37;
  double v38;
  id v39;
  char v40;
  __n128 v41;
  __n128 v42;
  double v43;
  id v44;
  char v45;
  double v46;
  id v47;
  char v48;
  double v49;
  id v50;
  char v51;
  double v52;
  id v53;
  char v54;
  double v55;
  id v56;
  char v57;
  double v58;
  id v59;
  char v60;
  double v61;
  id v62;
  char v63;
  __n128 v64;
  __n128 v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;

  a9.n128_u64[0] = 0x4045000000000000;
  a10.n128_u64[0] = 0x4048800000000000;
  v71 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(42.0, 49.0, a9, 49.0, a10, 53.0, 53.0);
  v16.n128_u64[0] = 0x4041000000000000;
  v17.n128_u64[0] = 0x4043800000000000;
  v70 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(34.0, 39.0, v16, 39.0, v17, 43.0, 43.0);
  v18.n128_u64[0] = 1.0;
  v19.n128_u64[0] = 1.5;
  v69 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(1.0, 1.5, v18, 1.0, v19, 1.5, 1.5);
  v20 = (void *)objc_opt_self(UIDevice);
  v21 = objc_msgSend(v20, "currentDevice");
  v22 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v22 & 1) != 0)
    v23 = 12.0;
  else
    v23 = 8.0;
  v24 = objc_msgSend(v20, "currentDevice");
  v25 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v25 & 1) != 0)
    v26 = 16.0;
  else
    v26 = 8.0;
  v27 = objc_msgSend(v20, "currentDevice");
  v28 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v28 & 1) != 0)
    v29 = 12.0;
  else
    v29 = 10.0;
  v30 = objc_msgSend(v20, "currentDevice");
  v31 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v31 & 1) != 0)
    v32 = 12.0;
  else
    v32 = 10.0;
  v33 = objc_msgSend(v20, "currentDevice");
  v34 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v34 & 1) != 0)
    v35 = 12.0;
  else
    v35 = 8.0;
  v36 = objc_msgSend(v20, "currentDevice");
  v37 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v37 & 1) != 0)
    v38 = 12.0;
  else
    v38 = 8.0;
  v39 = objc_msgSend(v20, "currentDevice");
  v40 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v40 & 1) != 0)
    v43 = 12.0;
  else
    v43 = 8.0;
  v41.n128_f64[0] = v29;
  v42.n128_f64[0] = v35;
  v68 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(v23, v26, v41, v32, v42, v38, v43);
  v44 = objc_msgSend(v20, "currentDevice");
  v45 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v45 & 1) != 0)
    v46 = 23.0;
  else
    v46 = 12.0;
  v47 = objc_msgSend(v20, "currentDevice");
  v48 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v48 & 1) != 0)
    v49 = 23.0;
  else
    v49 = 8.0;
  v50 = objc_msgSend(v20, "currentDevice");
  v51 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v51 & 1) != 0)
    v52 = 23.0;
  else
    v52 = 10.0;
  v53 = objc_msgSend(v20, "currentDevice");
  v54 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v54 & 1) != 0)
    v55 = 23.0;
  else
    v55 = 10.0;
  v56 = objc_msgSend(v20, "currentDevice");
  v57 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v57 & 1) != 0)
    v58 = 23.0;
  else
    v58 = 8.0;
  v59 = objc_msgSend(v20, "currentDevice");
  v60 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v60 & 1) != 0)
    v61 = 23.0;
  else
    v61 = 8.0;
  v62 = objc_msgSend(v20, "currentDevice");
  v63 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v63 & 1) != 0)
    v66 = 23.0;
  else
    v66 = 8.0;
  v64.n128_f64[0] = v52;
  v65.n128_f64[0] = v58;
  v67 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(v46, v49, v64, v55, v65, v61, v66);
  *(double *)a8 = v71;
  *(double *)(a8 + 8) = v70;
  *(double *)(a8 + 16) = v69;
  *(double *)(a8 + 24) = v68;
  *(double *)(a8 + 32) = v67;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = a1;
  *(_QWORD *)(a8 + 72) = a2;
  *(_QWORD *)(a8 + 80) = a3;
  *(_QWORD *)(a8 + 88) = a4;
  *(_BYTE *)(a8 + 96) = a5;
}

double sub_1004B4AF4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  id v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double result;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;
  char v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  char v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  unsigned __int8 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  if (a1)
  {
    swift_retain(a1);
    v7 = (void *)WorkoutStep.goal.getter(v6);
    v8 = objc_msgSend(v7, "goalTypeIdentifier");

    v10 = (void *)WorkoutStep.goal.getter(v9);
    v11 = v10;
    if (v8 == (id)2)
    {
      objc_msgSend(v10, "doubleValue");
      v13 = v12;

      type metadata accessor for ElapsedTimeFormatter(0);
      v14 = static ElapsedTimeFormatter.stringFromElapsedTime(_:trimDoubleLeadingZero:compactHours:)(1, 0, v13);
      v16 = v15;
    }
    else
    {
      v14 = NLSessionActivityGoal.intervalDisplayString(formattingManager:)(a2);
      v16 = v29;

    }
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v37 = (void *)WorkoutStep.goal.getter(v36);
    v38 = objc_msgSend(v37, "goalTypeIdentifier");

    LOBYTE(v37) = v38 != 0;
    v39 = (_QWORD *)swift_allocObject(&unk_1007A3CF8, 40, 7);
    v39[2] = a1;
    v39[3] = a2;
    v39[4] = a1;
    swift_retain_n(a1, 2);
    v40 = a2;
    sub_1004B46D8(v14, v16, v33, v35, (char)v37, (uint64_t)sub_1004B5000, (uint64_t)v39, (uint64_t)&v73, v41, v42);
    v55 = v73;
    v56 = v74;
    v57 = v75;
    v58 = v76;
    v59 = v77;
    v60 = v78;
    v61 = v79;
    v62 = v80;
    v63 = v81;
    v64 = 0;
    sub_1004B500C(&v73);
    v43 = sub_100047110(&qword_100836C38);
    v44 = sub_100047110(&qword_100834150);
    v45 = sub_10044DA78(&qword_100836C40, &qword_100836C38);
    v46 = sub_10044DA78(&qword_100834170, &qword_100834150);
    _ConditionalContent<>.init(storage:)(&v55, v43, v44, v45, v46);
    swift_release(a1);
    sub_1004B5054(&v73);
  }
  else
  {
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    sub_100340070(1, v20, v22, (uint64_t)&v73, v23, v24);
    v55 = v73;
    v56 = v74;
    v57 = v75;
    v58 = v76;
    v59 = v77;
    v60 = v78;
    v61 = v79;
    v62 = v80;
    v63 = v81;
    v64 = 1;
    v25 = sub_100047110(&qword_100836C38);
    v26 = sub_100047110(&qword_100834150);
    v27 = sub_10044DA78(&qword_100836C40, &qword_100836C38);
    v28 = sub_10044DA78(&qword_100834170, &qword_100834150);
    _ConditionalContent<>.init(storage:)(&v55, v25, v26, v27, v28);
  }
  result = *(double *)&v65;
  v48 = v66;
  v49 = v67;
  v50 = v68;
  v51 = v69;
  v52 = v70;
  v53 = v71;
  v54 = v72;
  *(_OWORD *)a3 = v65;
  *(_OWORD *)(a3 + 16) = v48;
  *(_OWORD *)(a3 + 32) = v49;
  *(_OWORD *)(a3 + 48) = v50;
  *(_OWORD *)(a3 + 64) = v51;
  *(_OWORD *)(a3 + 80) = v52;
  *(_BYTE *)(a3 + 96) = v53;
  *(_BYTE *)(a3 + 97) = v54;
  return result;
}

uint64_t sub_1004B4F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for StepType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = WorkoutStep.stepType.getter(v2);
  v6 = StepType.scaleableImage.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = Image.init(uiImage:)(v6);
  Image.scaledToFit(size:)(30.0, 30.0);
  return swift_release(v7);
}

double sub_1004B4FC4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B4AF4(*(_QWORD *)v1, *(void **)(v1 + 8), a1);
}

uint64_t sub_1004B4FCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004B5000()
{
  return sub_1004B4F10();
}

_QWORD *sub_1004B500C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[6];
  v3 = a1[11];
  swift_bridgeObjectRetain(a1[9]);
  swift_bridgeObjectRetain(v3);
  swift_retain(v2);
  return a1;
}

_QWORD *sub_1004B5054(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[6];
  v3 = a1[9];
  swift_bridgeObjectRelease(a1[11]);
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  return a1;
}

unint64_t sub_1004B50A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836C48;
  if (!qword_100836C48)
  {
    v1 = sub_100007050(&qword_100836C50);
    sub_10044DA78(&qword_100836C40, &qword_100836C38);
    sub_10044DA78(&qword_100834170, &qword_100834150);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836C48);
  }
  return result;
}

_QWORD *sub_1004B5130(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t ViewModel;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a3;
    ViewModel = type metadata accessor for TrainingLoadViewModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for GregorianDayRange(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = v6[7];
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *(void **)((char *)a2 + v12);
    LOBYTE(v6) = v14[8];
    sub_10010C5D0(v15, (char)v6);
    *(_QWORD *)v13 = v15;
    v13[8] = (char)v6;
  }
  return a1;
}

void sub_1004B5210(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel;
  uint64_t v5;
  uint64_t v6;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(a1, ViewModel);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_10010C5EC(*(id *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_1004B5288(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = *(void **)(a2 + v11);
  LOBYTE(a2) = *(_BYTE *)(a2 + v11 + 8);
  sub_10010C5D0(v13, a2);
  *(_QWORD *)v12 = v13;
  *(_BYTE *)(v12 + 8) = a2;
  return a1;
}

uint64_t sub_1004B533C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(id *)v13;
  LOBYTE(a2) = *(_BYTE *)(v13 + 8);
  sub_10010C5D0(*(id *)v13, a2);
  v15 = *(void **)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = a2;
  sub_10010C5EC(v15, v16);
  return a1;
}

uint64_t sub_1004B5400(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_1004B54A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  char v16;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GregorianDayRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(void **)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_10010C5EC(v15, v16);
  return a1;
}

uint64_t sub_1004B555C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B5568);
}

uint64_t sub_1004B5568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v7 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = ViewModel;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for GregorianDayRange(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1004B5620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B562C);
}

uint64_t sub_1004B562C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v9 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = ViewModel;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for GregorianDayRange(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for LoadDetailsChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_100836CB0;
  if (!qword_100836CB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadDetailsChartView);
  return result;
}

uint64_t sub_1004B570C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for TrainingLoadViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for GregorianDayRange(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100640B68;
      v5[3] = &unk_100640B80;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004B57A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B961C, 1);
}

uint64_t sub_1004B57B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t Chart;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t DataType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t OpaqueTypeConformance2;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  __n128 v90;
  char *v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  char v130;
  uint64_t v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  CHWorkoutDetailHeartRateTableViewCell *v144;
  uint64_t v145;
  SEL v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  char v160;
  SEL v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  uint64_t v168;
  double v169;
  double v170;
  double v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  double v176;
  double v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  SEL v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t DetailsChartView;
  uint64_t v192;
  id v193;
  char v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _OWORD *v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 v210;
  uint64_t v211;
  int *v212;
  _OWORD *v213;
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  int v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  double (*v231)(char *, uint64_t, __n128);
  void (*v232)(char *, uint64_t, uint64_t);
  char *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  __int128 v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char v267;
  _BYTE v268[7];
  _BYTE v269[7];
  char v270;
  char v271;
  char v272;
  char v273;
  _BYTE v274[140];
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  _OWORD v286[2];
  _BYTE v287[140];
  _BYTE v288[140];
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  CHWorkoutDetailHeartRateTableViewCell *v299;
  __int128 v300;
  uint64_t v301;
  double v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char v306;
  _BYTE v307[7];
  char v308;
  _BYTE v309[7];
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char v314;
  _QWORD v315[11];
  unsigned __int8 v316;
  uint64_t v317;
  unsigned __int8 v318;
  uint64_t v319;
  unsigned __int8 v320;
  char *v321;
  char *v322;
  uint64_t v323;
  unsigned __int8 v324;
  uint64_t v325;
  unsigned __int8 v326;
  char *v327;
  char *v328;
  _OWORD v329[3];
  _BYTE v330[144];
  unsigned __int8 v331;
  _BYTE v332[7];
  _BYTE v333[7];
  unsigned __int8 v334;
  _BYTE v335[7];
  _BYTE v336[7];
  _DWORD v337[2];
  _DWORD v338[4];

  v250 = a1;
  v248 = a2;
  v3 = sub_100047110(&qword_100834960);
  v4 = __chkstk_darwin(v3);
  v242 = (char *)&v226 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TrainingLoadChart.Configuration(0, v4);
  v7 = __chkstk_darwin(v6);
  v240 = (uint64_t)&v226 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Chart = type metadata accessor for TrainingLoadChart(0, v7);
  v244 = *(_QWORD *)(Chart - 8);
  v245 = Chart;
  __chkstk_darwin(Chart);
  v243 = (char *)&v226 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = sub_100047110(&qword_100834968);
  __chkstk_darwin(v241);
  v247 = (char *)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v246 = (uint64_t)&v226 - v13;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v236 = *(_QWORD *)(DataType - 8);
  v237 = DataType;
  __chkstk_darwin(DataType);
  v235 = (char *)&v226 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v234 = (char *)&v226 - v17;
  v249 = type metadata accessor for Font.Leading(0);
  *(_QWORD *)&v254 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v233 = (char *)&v226 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v19);
  *((_QWORD *)&v254 + 1) = (char *)&v226 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Font.TextStyle(0);
  v252 = *(_QWORD *)(v21 - 8);
  v253 = v21;
  __chkstk_darwin(v21);
  v251 = (char *)&v226 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = type metadata accessor for AccessibilityTraits(0);
  v258 = *(_QWORD *)(v264 - 8);
  __chkstk_darwin(v264);
  v259 = (char *)&v226 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = type metadata accessor for AccessibilityChildBehavior(0);
  v24 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin(v257);
  v26 = (char *)&v226 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100047110(&qword_100836CF8);
  v256 = v27;
  __chkstk_darwin(v27);
  v29 = (char *)&v226 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110(&qword_100836D00);
  v31 = *(_QWORD *)(v30 - 8);
  v261 = v30;
  v262 = v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v226 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100047110(&qword_100832DD0);
  __chkstk_darwin(v34);
  v36 = (char *)&v226 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100047110(&qword_100832DD8);
  __chkstk_darwin(v37);
  v260 = (uint64_t)&v226 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = sub_100047110(&qword_100836D08);
  __chkstk_darwin(v263);
  v265 = (uint64_t)&v226 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v42 = (char *)&v226 - v41;
  __chkstk_darwin(v43);
  v266 = (uint64_t)&v226 - v44;
  *(_QWORD *)v29 = static VerticalAlignment.center.getter(v45);
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 0;
  v46 = sub_100047110(&qword_100836D10);
  sub_1004B6A98(a1, (uint64_t *)&v29[*(int *)(v46 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v47);
  v48 = sub_100028384(&qword_100836D18, &qword_100836CF8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v26, v27, v48);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v257);
  sub_10001BE90((uint64_t)v29, &qword_100836CF8);
  v49 = sub_100047110(&qword_1008368D8);
  v50 = v258;
  v51 = swift_allocObject(v49, ((*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80))+ 2 * *(_QWORD *)(v258 + 72), *(unsigned __int8 *)(v258 + 80) | 7);
  *(_OWORD *)(v51 + 16) = xmmword_100620BC0;
  v52 = static AccessibilityTraits.isHeader.getter();
  static AccessibilityTraits.isButton.getter(v52);
  *(_QWORD *)&v289 = v51;
  v53 = sub_1004B7A04();
  v54 = sub_100047110(&qword_1008368E8);
  v55 = sub_100028384(&qword_1008368F0, &qword_1008368E8, (uint64_t)&protocol conformance descriptor for [A]);
  v56 = v259;
  v57 = v54;
  v58 = v264;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v289, v57, v55, v264, v53);
  *(_QWORD *)&v289 = v256;
  *((_QWORD *)&v289 + 1) = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v289, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v60 = v261;
  View.accessibilityAddTraits(_:)(v56, v261, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v56, v58);
  v61 = (*(uint64_t (**)(char *, uint64_t))(v262 + 8))(v33, v60);
  v62 = static Alignment.center.getter(v61);
  v63 = v260;
  sub_1003ECDA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v260, 0.0, 1, 0.0, 1, v62, v64);
  v65 = sub_10001BE90((uint64_t)v36, &qword_100832DD0);
  LOBYTE(v51) = static Edge.Set.horizontal.getter(v65);
  v66 = EdgeInsets.init(_all:)(16.0);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  sub_100021CC0(v63, (uint64_t)v42, &qword_100832DD8);
  v73 = &v42[*(int *)(v263 + 36)];
  *v73 = v51;
  *((double *)v73 + 1) = v66;
  *((_QWORD *)v73 + 2) = v68;
  *((_QWORD *)v73 + 3) = v70;
  *((_QWORD *)v73 + 4) = v72;
  v73[40] = 0;
  sub_10001BE90(v63, &qword_100832DD8);
  sub_100045AD4((uint64_t)v42, v266, &qword_100836D08);
  v74 = v250;
  sub_1004B70BC(v250, (uint64_t)v315);
  v238 = v315[2];
  v239 = v315[1];
  v263 = v315[3];
  v264 = v315[0];
  v261 = v315[5];
  v262 = v315[4];
  v259 = (char *)v315[7];
  v260 = v315[6];
  v257 = v315[9];
  v258 = v315[8];
  v256 = v315[10];
  v255 = v316;
  v76 = v251;
  v75 = v252;
  v77 = v253;
  (*(void (**)(char *, _QWORD, uint64_t))(v252 + 104))(v251, enum case for Font.TextStyle.footnote(_:), v253);
  v78 = enum case for Font.Design.rounded(_:);
  v79 = type metadata accessor for Font.Design(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *((_QWORD *)&v254 + 1);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v80 + 104))(*((_QWORD *)&v254 + 1), v78, v79);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v81, 0, 1, v79);
  v82 = static Font.system(_:design:weight:)(v76, v81, 0, 1);
  sub_10001BE90(v81, &qword_10081F2F8);
  v83 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  static Font.Weight.medium.getter(v83);
  v84 = Font.weight(_:)(v82);
  v85 = swift_release(v82);
  v86 = enum case for Font.Leading.tight(_:);
  v87 = v254;
  v88 = v233;
  v89 = v249;
  v232 = *(void (**)(char *, uint64_t, uint64_t))(v254 + 104);
  ((void (*)(char *, _QWORD, uint64_t, __n128))v232)(v233, enum case for Font.Leading.tight(_:), v249, v85);
  *((_QWORD *)&v254 + 1) = Font.leading(_:)(v88, v84);
  v90 = swift_release(v84);
  v91 = v88;
  v231 = *(double (**)(char *, uint64_t, __n128))(v87 + 8);
  v231(v88, v89, v90);
  *(_QWORD *)&v254 = swift_getKeyPath(&unk_100640BE8);
  LODWORD(v253) = static Edge.Set.horizontal.getter(v254);
  v92 = EdgeInsets.init(_all:)(16.0);
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v331 = 0;
  LODWORD(v252) = static Edge.Set.top.getter(v99);
  v100.n128_f64[0] = EdgeInsets.init(_all:)(2.0);
  v101 = v100.n128_u64[0];
  v103 = v102;
  v105 = v104;
  v107 = v106;
  v338[0] = *(_DWORD *)v333;
  *(_DWORD *)((char *)v338 + 3) = *(_DWORD *)&v333[3];
  v337[0] = *(_DWORD *)v332;
  *(_DWORD *)((char *)v337 + 3) = *(_DWORD *)&v332[3];
  LODWORD(v251) = v331;
  v334 = 0;
  v108 = v234;
  TrainingLoadViewModel.dataType.getter(v100);
  v109 = v235;
  v110 = v236;
  v111 = v237;
  (*(void (**)(char *, _QWORD, uint64_t))(v236 + 104))(v235, enum case for TrainingLoadDataType.workout(_:), v237);
  v112 = v109;
  LOBYTE(v109) = static TrainingLoadDataType.== infix(_:_:)(v108, v109);
  v113 = *(void (**)(char *, uint64_t))(v110 + 8);
  v113(v112, v111);
  v114 = ((uint64_t (*)(char *, uint64_t))v113)(v108, v111);
  if ((v109 & 1) != 0)
  {
    v115 = static Alignment.center.getter(v114);
    _FrameLayout.init(width:height:alignment:)(&v317, 0, 1, 0x4024000000000000, 0, v115, v116);
    v228 = v317;
    v229 = v319;
    v226 = v320;
    v227 = v318;
    v234 = v321;
    v230 = v322;
    v117 = v74 + *(int *)(type metadata accessor for LoadDetailsChartView(0) + 28);
    v118 = *(id *)v117;
    v119 = *(_BYTE *)(v117 + 8);
    sub_10010C5D0(*(id *)v117, v119);
    v120 = sub_1003F70B8(v118, v119);
    sub_10010C5EC(v118, v119);
    v121 = sub_1004E6440(v74, (uint64_t)v120);
    v123 = v122;

    *(_QWORD *)&v289 = v121;
    *((_QWORD *)&v289 + 1) = v123;
    v124 = sub_100038CA0();
    v125 = Text.init<A>(_:)(&v289, &type metadata for String, v124);
    v127 = v126;
    v129 = v128;
    v131 = v130 & 1;
    v133 = static Font.body.getter(v132);
    v134 = v249;
    v232(v91, v86, v249);
    v135 = Font.leading(_:)(v91, v133);
    v136 = swift_release(v133);
    v137.n128_f64[0] = v231(v91, v134, v136);
    v138 = Text.font(_:)(v135, v125, v127, v131, v129, v137);
    v140 = v139;
    v142 = v141;
    v144 = v143;
    swift_release(v135);
    v145 = v142 & 1;
    sub_1000E4458(v125, v127, v131);
    swift_bridgeObjectRelease(v129, v146, v147, v148, v149, v150, v151, v152);
    v153 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v154 = Color.init(_:)(v153);
    *(_QWORD *)&v289 = v154;
    v155 = Text.foregroundStyle<A>(_:)(&v289, v138, v140, v145, v144, &type metadata for Color, &protocol witness table for Color);
    v157 = v156;
    v159 = v158;
    LOBYTE(v129) = v160 & 1;
    sub_1000E4458(v138, v140, v145);
    swift_release(v154);
    swift_bridgeObjectRelease(v144, v161, v162, v163, v164, v165, v166, v167);
    LODWORD(v233) = static Edge.Set.horizontal.getter(v168);
    v169 = EdgeInsets.init(_all:)(16.0);
    v249 = v101;
    v170 = v92;
    v171 = v169;
    v236 = v105;
    v237 = v103;
    v172 = v94;
    v174 = v173;
    v175 = v96;
    v177 = v176;
    v235 = v107;
    v178 = v98;
    v180 = v179;
    v273 = 1;
    LOBYTE(v144) = v226;
    LOBYTE(v138) = v227;
    v272 = v227;
    v271 = v226;
    v270 = (char)v129;
    v267 = 0;
    LODWORD(v275) = v323;
    *(_DWORD *)((char *)&v275 + 3) = *(_DWORD *)((char *)&v323 + 3);
    *(_DWORD *)v288 = *(_DWORD *)v336;
    *(_DWORD *)&v288[3] = *(_DWORD *)&v336[3];
    *(_DWORD *)&v287[3] = *(_DWORD *)&v335[3];
    *(_DWORD *)v287 = *(_DWORD *)v335;
    *(_DWORD *)&v274[3] = *(_DWORD *)&v269[3];
    *(_DWORD *)v274 = *(_DWORD *)v269;
    *(_DWORD *)((char *)v329 + 3) = *(_DWORD *)&v268[3];
    LODWORD(v329[0]) = *(_DWORD *)v268;
    LODWORD(v232) = 0;
    sub_1000E439C(v155, v157, (char)v129);
    swift_bridgeObjectRetain(v159);
    sub_1000E4458(v155, v157, (char)v129);
    swift_bridgeObjectRelease(v159, v181, v182, v183, v184, v185, v186, v187);
    *(_QWORD *)&v289 = 0;
    BYTE8(v289) = 1;
    *(_DWORD *)((char *)&v289 + 9) = v275;
    HIDWORD(v289) = *(_DWORD *)((char *)&v275 + 3);
    v290 = v228;
    LOBYTE(v291) = v138;
    *(_DWORD *)((char *)&v291 + 1) = *(_DWORD *)v288;
    HIDWORD(v291) = *(_DWORD *)&v288[3];
    v292 = v229;
    LOBYTE(v293) = (_BYTE)v144;
    *(_DWORD *)((char *)&v293 + 1) = *(_DWORD *)v287;
    HIDWORD(v293) = *(_DWORD *)&v287[3];
    v294 = (uint64_t)v234;
    v295 = v230;
    v296 = v155;
    v297 = v157;
    LOBYTE(v298) = (_BYTE)v129;
    HIDWORD(v298) = *(_DWORD *)&v274[3];
    *(_DWORD *)((char *)&v298 + 1) = *(_DWORD *)v274;
    v299 = v159;
    LOBYTE(v300) = (_BYTE)v233;
    DWORD1(v300) = *(_DWORD *)((char *)v329 + 3);
    *(_DWORD *)((char *)&v300 + 1) = v329[0];
    v74 = v250;
    *((double *)&v300 + 1) = v171;
    v92 = v170;
    v101 = v249;
    v301 = v174;
    v94 = v172;
    v302 = v177;
    v96 = v175;
    v105 = v236;
    v103 = v237;
    v303 = v180;
    v98 = v178;
    v107 = v235;
    LOBYTE(v304) = (_BYTE)v232;
    ASFriendListDisplayMode.id.getter(&v289);
  }
  else
  {
    sub_10024CA38(&v289);
  }
  v188 = sub_100045AD4((uint64_t)&v289, (uint64_t)v330, &qword_100836D20);
  v189 = static Alignment.center.getter(v188);
  _FrameLayout.init(width:height:alignment:)(&v323, 0, 1, 0x4034000000000000, 0, v189, v190);
  v249 = v323;
  LODWORD(v237) = v324;
  v236 = v325;
  LODWORD(v235) = v326;
  v233 = v328;
  v234 = v327;
  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  v192 = v74 + *(int *)(DetailsChartView + 28);
  v193 = *(id *)v192;
  v194 = *(_BYTE *)(v192 + 8);
  sub_10010C5D0(*(id *)v192, v194);
  v195 = sub_1003F70B8(v193, v194);
  sub_10010C5EC(v193, v194);
  v196 = v240;
  sub_10017774C(v74 + *(int *)(DetailsChartView + 20), v74, v240);

  v197 = sub_100047110(&qword_100834978);
  v198 = v242;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 56))(v242, 1, 1, v197);
  LOBYTE(v275) = 0;
  static Binding.constant(_:)(&v289, &v275, &type metadata for Bool);
  v199 = v243;
  v200 = TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)(v196, v198, v289, *((_QWORD *)&v289 + 1), v290);
  v201 = static Alignment.center.getter(v200);
  _FrameLayout.init(width:height:alignment:)(v329, 0, 1, 0x4061800000000000, 0, v201, v202);
  v204 = v244;
  v203 = v245;
  v205 = (uint64_t)v247;
  (*(void (**)(char *, char *, uint64_t))(v244 + 16))(v247, v199, v245);
  v206 = (_OWORD *)(v205 + *(int *)(v241 + 36));
  v207 = v329[1];
  *v206 = v329[0];
  v206[1] = v207;
  v206[2] = v329[2];
  (*(void (**)(char *, uint64_t))(v204 + 8))(v199, v203);
  v208 = v246;
  sub_100045AD4(v205, v246, &qword_100834968);
  v209 = v265;
  sub_100021CC0(v266, v265, &qword_100836D08);
  v210 = v334;
  LODWORD(v250) = v334;
  sub_100045AD4((uint64_t)v330, (uint64_t)v274, &qword_100836D20);
  sub_100021CC0(v208, v205, &qword_100834968);
  v211 = v248;
  sub_100021CC0(v209, v248, &qword_100836D08);
  v212 = (int *)sub_100047110(&qword_100836D28);
  v213 = (_OWORD *)(v211 + v212[12]);
  *(_QWORD *)&v275 = v264;
  v214 = v238;
  v215 = v239;
  *((_QWORD *)&v275 + 1) = v239;
  *(_QWORD *)&v276 = v238;
  *((_QWORD *)&v276 + 1) = v263;
  *(_QWORD *)&v277 = v262;
  *((_QWORD *)&v277 + 1) = v261;
  *(_QWORD *)&v278 = v260;
  *((_QWORD *)&v278 + 1) = v259;
  *(_QWORD *)&v279 = v258;
  *((_QWORD *)&v279 + 1) = v257;
  *(_QWORD *)&v280 = v256;
  BYTE8(v280) = v255;
  *(_DWORD *)((char *)&v280 + 9) = v338[0];
  HIDWORD(v280) = *(_DWORD *)((char *)v338 + 3);
  v281 = v254;
  LOBYTE(v282) = v253;
  DWORD1(v282) = *(_DWORD *)((char *)v337 + 3);
  *(_DWORD *)((char *)&v282 + 1) = v337[0];
  *((double *)&v282 + 1) = v92;
  *(_QWORD *)&v283 = v94;
  *((_QWORD *)&v283 + 1) = v96;
  *(_QWORD *)&v284 = v98;
  BYTE8(v284) = (_BYTE)v251;
  *(_DWORD *)((char *)&v284 + 9) = *(_DWORD *)v336;
  HIDWORD(v284) = *(_DWORD *)&v336[3];
  LOBYTE(v285) = v252;
  *(_DWORD *)((char *)&v285 + 1) = *(_DWORD *)v335;
  DWORD1(v285) = *(_DWORD *)&v335[3];
  *((_QWORD *)&v285 + 1) = v101;
  *(_QWORD *)&v286[0] = v103;
  *((_QWORD *)&v286[0] + 1) = v105;
  *(_QWORD *)&v286[1] = v107;
  BYTE8(v286[1]) = v210;
  v216 = v282;
  v213[6] = v254;
  v213[7] = v216;
  v217 = v284;
  v213[8] = v283;
  v213[9] = v217;
  v218 = v278;
  v213[2] = v277;
  v213[3] = v218;
  v219 = v280;
  v213[4] = v279;
  v213[5] = v219;
  v220 = v276;
  *v213 = v275;
  v213[1] = v220;
  v221 = v286[0];
  v213[10] = v285;
  v213[11] = v221;
  *(_OWORD *)((char *)v213 + 185) = *(_OWORD *)((char *)v286 + 9);
  v222 = v211 + v212[16];
  sub_100045AD4((uint64_t)v274, (uint64_t)v287, &qword_100836D20);
  sub_100045AD4((uint64_t)v287, v222, &qword_100836D20);
  v223 = v211 + v212[20];
  *(_QWORD *)v223 = 0;
  *(_BYTE *)(v223 + 8) = 1;
  *(_QWORD *)(v223 + 16) = v249;
  *(_BYTE *)(v223 + 24) = v237;
  *(_QWORD *)(v223 + 32) = v236;
  *(_BYTE *)(v223 + 40) = (_BYTE)v235;
  v224 = v233;
  *(_QWORD *)(v223 + 48) = v234;
  *(_QWORD *)(v223 + 56) = v224;
  sub_100021CC0(v205, v211 + v212[24], &qword_100834968);
  sub_1004B7A54((uint64_t)&v275);
  sub_10024CA5C((uint64_t)v287, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1004B7B78);
  sub_10001BE90(v208, &qword_100834968);
  sub_10001BE90(v266, &qword_100836D08);
  sub_10001BE90(v205, &qword_100834968);
  sub_100045AD4((uint64_t)v274, (uint64_t)v288, &qword_100836D20);
  sub_10024CA5C((uint64_t)v288, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1004B7BB8);
  *(_QWORD *)&v289 = v264;
  *((_QWORD *)&v289 + 1) = v215;
  v290 = v214;
  v291 = v263;
  v292 = v262;
  v293 = v261;
  v294 = v260;
  v295 = v259;
  v296 = v258;
  v297 = v257;
  v298 = v256;
  LOBYTE(v299) = v255;
  *(_DWORD *)((char *)&v299 + 1) = v338[0];
  HIDWORD(v299) = *(_DWORD *)((char *)v338 + 3);
  v300 = v254;
  LOBYTE(v301) = v253;
  HIDWORD(v301) = *(_DWORD *)((char *)v337 + 3);
  *(_DWORD *)((char *)&v301 + 1) = v337[0];
  v302 = v92;
  v303 = v94;
  v304 = v96;
  v305 = v98;
  v306 = (char)v251;
  *(_DWORD *)v307 = *(_DWORD *)v336;
  *(_DWORD *)&v307[3] = *(_DWORD *)&v336[3];
  v308 = v252;
  *(_DWORD *)&v309[3] = *(_DWORD *)&v335[3];
  *(_DWORD *)v309 = *(_DWORD *)v335;
  v310 = v101;
  v311 = v103;
  v312 = v105;
  v313 = v107;
  v314 = v250;
  sub_1004B7BF8((uint64_t)&v289);
  return sub_10001BE90(v265, &qword_100836D08);
}

void sub_1004B6A98(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  Swift::String View;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  char v39;
  uint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  uint64_t v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  uint64_t v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t DetailsChartView;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t KeyPath;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  id v104;
  uint64_t v105;
  _BYTE *v106;
  char v107;
  _BYTE *v108;
  uint64_t *v109;
  uint64_t v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  _BYTE v118[4];
  int v119;
  uint64_t v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t *v129;
  uint64_t v130;
  _QWORD v131[8];

  v129 = a2;
  v124 = sub_100047110(&qword_10082EB38);
  v122 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v121 = (CHWorkoutDetailHeartRateTableViewCell *)&v118[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = sub_100047110(&qword_100836D40);
  __chkstk_darwin(v120);
  v125 = &v118[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v130 = sub_100047110(&qword_100836D48);
  v127 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v123 = &v118[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100047110(&qword_100836D50);
  __chkstk_darwin(v6);
  v128 = &v118[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v126 = &v118[-v9];
  v10 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v10);
  v12 = &v118[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Font.Leading(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v118[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  View = TrainingLoadViewModel.loadBandTodayLocalizedDescription()();
  v19 = static Font.title2.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Font.Leading.tight(_:), v13);
  v20 = Font.leading(_:)(v16, v19);
  v21 = swift_release(v19);
  v22.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, __n128))(v14 + 8))(v16, v13, v21);
  v23 = Text.font(_:)(v20, View._countAndFlagsBits, View._object, 0, &_swiftEmptyArrayStorage, v22);
  v25 = (uint64_t)v24;
  LOBYTE(v16) = (_BYTE)v26;
  v28 = v27;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)View._object, v24, v26, v27, v29, v30, v31, v32);
  swift_release(v20);
  LOBYTE(v20) = v16 & 1;
  v34 = static Font.Weight.medium.getter(v33);
  v35 = Text.fontWeight(_:)(*(_QWORD *)&v34, 0, v23, v25, v16 & 1, v28);
  v37 = v36;
  v71 = v38;
  v40 = v39 & 1;
  sub_1000E4458(v23, v25, v20);
  swift_bridgeObjectRelease(v28, v41, v42, v43, v44, v45, v46, v47);
  v48 = enum case for Font.Design.rounded(_:);
  v49 = type metadata accessor for Font.Design(0);
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v50 + 104))(v12, v48, v49);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v12, 0, 1, v49);
  v51 = Text.fontDesign(_:)(v12, v35, v37, v40, v71);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  sub_1000E4458(v35, v37, v40);
  swift_bridgeObjectRelease(v71, v58, v59, v60, v61, v62, v63, v64);
  v65 = sub_10001BE90((uint64_t)v12, &qword_10081F2F8);
  v66 = TrainingLoadViewModel.loadBandTodayColor()(v65);
  v131[0] = v66;
  v67 = Text.foregroundStyle<A>(_:)(v131, v51, v53, v57, v55, &type metadata for Color, &protocol witness table for Color);
  v69 = v68;
  LODWORD(v71) = v70;
  v73 = v72;
  sub_1000E4458(v51, v53, v57);
  swift_release(v66);
  v74 = v55;
  v75 = (uint64_t)v126;
  swift_bridgeObjectRelease(v74, v76, v77, v78, v79, v80, v81, v82);
  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  v84 = 1;
  if (*(_BYTE *)(a1 + *(int *)(DetailsChartView + 24)) == 1)
  {
    v85 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
    v86 = static Font.caption2.getter(v85);
    KeyPath = swift_getKeyPath(&unk_100640BE8);
    v131[0] = v85;
    v131[1] = KeyPath;
    v131[2] = v86;
    v88 = sub_100047110(&qword_100826050);
    v89 = sub_1001D2DD0();
    v119 = (int)v71;
    v71 = v121;
    View.bold(_:)(1, v88, v89);
    swift_release(v86);
    swift_release(KeyPath);
    swift_release(v85);
    v91 = static Edge.Set.top.getter(v90);
    v92 = EdgeInsets.init(_all:)(10.0);
    v94 = v93;
    v96 = v95;
    v98 = v97;
    v99 = v122;
    v100 = v124;
    v101 = (uint64_t)v125;
    (*(void (**)(_BYTE *, CHWorkoutDetailHeartRateTableViewCell *, uint64_t))(v122 + 16))(v125, v71, v124);
    v102 = v101 + *(int *)(v120 + 36);
    *(_BYTE *)v102 = v91;
    *(double *)(v102 + 8) = v92;
    *(_QWORD *)(v102 + 16) = v94;
    *(_QWORD *)(v102 + 24) = v96;
    *(_QWORD *)(v102 + 32) = v98;
    *(_BYTE *)(v102 + 40) = 0;
    v103 = v71;
    LOBYTE(v71) = v119;
    (*(void (**)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))(v99 + 8))(v103, v100);
    v104 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v105 = Color.init(_:)(v104);
    v106 = v123;
    sub_100021CC0(v101, (uint64_t)v123, &qword_100836D40);
    *(_QWORD *)&v106[*(int *)(v130 + 36)] = v105;
    sub_10001BE90(v101, &qword_100836D40);
    sub_100045AD4((uint64_t)v106, v75, &qword_100836D48);
    v84 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v75, v84, 1, v130);
  v107 = v71 & 1;
  v108 = v128;
  sub_100021CC0(v75, (uint64_t)v128, &qword_100836D50);
  v109 = v129;
  *v129 = v67;
  v109[1] = v69;
  *((_BYTE *)v109 + 16) = v107;
  v109[3] = (uint64_t)v73;
  v109[4] = 0x4024000000000000;
  *((_BYTE *)v109 + 40) = 0;
  v110 = sub_100047110(&qword_100836D58);
  sub_100021CC0((uint64_t)v108, (uint64_t)v109 + *(int *)(v110 + 64), &qword_100836D50);
  sub_1000E439C(v67, v69, v107);
  swift_bridgeObjectRetain(v73);
  sub_10001BE90(v75, &qword_100836D50);
  sub_10001BE90((uint64_t)v108, &qword_100836D50);
  sub_1000E4458(v67, v69, v107);
  swift_bridgeObjectRelease(v73, v111, v112, v113, v114, v115, v116, v117);
}

uint64_t sub_1004B70BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t DetailsChartView;
  uint64_t v8;
  uint64_t DataType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t Band;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t result;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  Swift::String v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  char v62;
  uint64_t v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t ViewModel;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  _BYTE v111[56];
  uint64_t v112;
  char v113;
  Swift::String v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  char v120;

  v108 = a2;
  v104 = type metadata accessor for DayIndex(0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v103 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v100);
  v101 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v106 = *(_QWORD *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  v6 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  __chkstk_darwin(DetailsChartView);
  v107 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v10 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v99 - v14;
  v16 = sub_100047110(&qword_100836920);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  TrainingLoadViewModel.loadBandToday()(v17);
  Band = type metadata accessor for TrainingLoadBand(0);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Band - 8) + 48))(v19, 1, Band);
  v22 = sub_10001BE90((uint64_t)v19, &qword_100836920);
  if ((_DWORD)a1 != 1)
  {
    v96 = static VerticalAlignment.center.getter(v22);
    sub_1004B7724((uint64_t)&v114);
    v109 = v96;
    v110 = xmmword_100640B30;
    *(Swift::String *)v111 = v114;
    *(_QWORD *)&v111[16] = v115;
    *(_QWORD *)&v111[24] = *((_QWORD *)&v115 + 1);
    *(_OWORD *)&v111[32] = v116;
    *(_QWORD *)&v111[48] = v117;
    v112 = *((_QWORD *)&v117 + 1);
    v113 = 0;
    v97 = sub_100047110(&qword_100836D30);
    v98 = sub_100028384(&qword_100836D38, &qword_100836D30, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = _ConditionalContent<>.init(storage:)(&v109, v97, &type metadata for Text, v98, &protocol witness table for Text);
    v89 = v114;
    v90 = v115;
    v91 = v116;
    v92 = v117;
    v93 = v118;
    v94 = v119;
    v95 = v120;
LABEL_7:
    v39 = v108;
    goto LABEL_8;
  }
  v99 = DetailsChartView;
  v24 = v106;
  v25 = ViewModel;
  TrainingLoadViewModel.dataType.getter(v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for TrainingLoadDataType.workout(_:), DataType);
  v26 = static TrainingLoadDataType.== infix(_:_:)(v15, v12);
  v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v12, DataType);
  v27(v15, DataType);
  v28 = v107;
  sub_1004B7D1C(v20, v107);
  if ((v26 & 1) == 0)
  {
    result = sub_1004B7D60(v28);
    v94 = 0;
    v89 = (Swift::String)0;
    v95 = -1;
    v90 = 0uLL;
    v91 = 0uLL;
    v92 = 0uLL;
    v93 = 0uLL;
    goto LABEL_7;
  }
  v29 = v6;
  v30 = v25;
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v28, v25);
  v32 = (uint64_t)v101;
  GregorianDayRange.dayIndexRange.getter(v31);
  v33 = v102;
  v34 = v28;
  v35 = v103;
  v36 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v103, v32 + *(int *)(v100 + 36), v104);
  sub_10001BE90(v32, &qword_100823530);
  v37 = TrainingLoadViewModel.isPending(onDay:)(v35);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v30);
  result = sub_1004B7D60(v34);
  v39 = v108;
  if ((v37 & 1) != 0)
  {
    sub_1004E794C();
    v41 = v40;
    v42 = String.uppercased()();
    swift_bridgeObjectRelease(v41, (SEL)v42._object, v43, v44, v45, v46, v47, v48);
    v114 = v42;
    v49 = sub_100038CA0();
    v50 = Text.init<A>(_:)(&v114, &type metadata for String, v49);
    v52 = v51;
    v54 = v53;
    v56 = v55 & 1;
    v57 = Text.kerning(_:)(0.7);
    v59 = v58;
    v61 = v60;
    v63 = v62 & 1;
    sub_1000E4458(v50, v52, v56);
    swift_bridgeObjectRelease(v54, v64, v65, v66, v67, v68, v69, v70);
    v71 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v72 = Color.init(_:)(v71);
    v114._countAndFlagsBits = v72;
    v73 = Text.foregroundStyle<A>(_:)(&v114, v57, v59, v63, v61, &type metadata for Color, &protocol witness table for Color);
    v75 = v74;
    v77 = v76;
    v79 = v78 & 1;
    sub_1000E4458(v57, v59, v63);
    swift_release(v72);
    swift_bridgeObjectRelease(v61, v80, v81, v82, v83, v84, v85, v86);
    v109 = v73;
    *(_QWORD *)&v110 = v75;
    *((_QWORD *)&v110 + 1) = v79;
    *(_QWORD *)v111 = v77;
    memset(&v111[8], 0, 48);
    v112 = 0;
    v113 = 1;
    v87 = sub_100047110(&qword_100836D30);
    v88 = sub_100028384(&qword_100836D38, &qword_100836D30, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = _ConditionalContent<>.init(storage:)(&v109, v87, &type metadata for Text, v88, &protocol witness table for Text);
    v89 = v114;
    v90 = v115;
    v91 = v116;
    v92 = v117;
    v93 = v118;
    v94 = v119;
    v95 = v120;
  }
  else
  {
    v94 = 0;
    v89 = (Swift::String)0;
    v95 = -1;
    v90 = 0uLL;
    v91 = 0uLL;
    v92 = 0uLL;
    v93 = 0uLL;
  }
LABEL_8:
  *(Swift::String *)v39 = v89;
  *(_OWORD *)(v39 + 16) = v90;
  *(_OWORD *)(v39 + 32) = v91;
  *(_OWORD *)(v39 + 48) = v92;
  *(_OWORD *)(v39 + 64) = v93;
  *(_QWORD *)(v39 + 80) = v94;
  *(_BYTE *)(v39 + 88) = v95;
  return result;
}

void sub_1004B7724(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  char v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  char v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  Swift::String View;

  v2 = type metadata accessor for LocalizationFeature(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = TrainingLoadViewModel.loadPercentageToday()();
  v6 = sub_100038CA0();
  v7 = Text.init<A>(_:)(&View, &type metadata for String, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = TrainingLoadViewModel.loadBandTodayColor()(v7);
  View._countAndFlagsBits = v14;
  v15 = Text.foregroundStyle<A>(_:)(&View, v7, v9, v13, v11, &type metadata for Color, &protocol witness table for Color);
  v71 = v16;
  v72 = v15;
  v73 = v17;
  HIDWORD(v70) = v18 & 1;
  sub_1000E4458(v7, v9, v13);
  swift_release(v14);
  swift_bridgeObjectRelease(v11, v19, v20, v21, v22, v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
  v26 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000016, 0x80000001006A1BD0, v5);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  View._countAndFlagsBits = v26;
  View._object = v28;
  v29 = Text.init<A>(_:)(&View, &type metadata for String, v6);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v36 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v37 = Color.init(_:)(v36);
  View._countAndFlagsBits = v37;
  v38 = Text.foregroundStyle<A>(_:)(&View, v29, v31, v35, v33, &type metadata for Color, &protocol witness table for Color);
  v40 = v39;
  v42 = v41;
  LOBYTE(v3) = v43 & 1;
  sub_1000E4458(v29, v31, v35);
  swift_release(v37);
  swift_bridgeObjectRelease(v33, v44, v45, v46, v47, v48, v49, v50);
  v51 = BYTE4(v70);
  LOBYTE(View._countAndFlagsBits) = BYTE4(v70);
  v53 = v71;
  v52 = v72;
  *(_QWORD *)a1 = v72;
  *(_QWORD *)(a1 + 8) = v53;
  *(_BYTE *)(a1 + 16) = v51;
  v54 = v73;
  *(_QWORD *)(a1 + 24) = v73;
  *(_QWORD *)(a1 + 32) = v38;
  *(_QWORD *)(a1 + 40) = v40;
  *(_BYTE *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v42;
  v55 = v52;
  sub_1000E439C(v52, v53, v51);
  swift_bridgeObjectRetain(v54);
  sub_1000E439C(v38, v40, v3);
  swift_bridgeObjectRetain(v42);
  sub_1000E4458(v38, v40, v3);
  swift_bridgeObjectRelease(v42, v56, v57, v58, v59, v60, v61, v62);
  sub_1000E4458(v55, v53, View._countAndFlagsBits);
  swift_bridgeObjectRelease(v54, v63, v64, v65, v66, v67, v68, v69);
}

uint64_t sub_1004B79C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100047110(&qword_100836CF0);
  return sub_1004B57B4(v2, a2 + *(int *)(v4 + 44));
}

unint64_t sub_1004B7A04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008368E0;
  if (!qword_1008368E0)
  {
    v1 = type metadata accessor for AccessibilityTraits(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityTraits, v1);
    atomic_store(result, (unint64_t *)&qword_1008368E0);
  }
  return result;
}

uint64_t sub_1004B7A54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  sub_1004B7AC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_retain(v3);
  swift_retain(v2);
  return a1;
}

double sub_1004B7AC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12)
{
  double result;

  if (a12 != 255)
    return sub_1004B7AF4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  return result;
}

double sub_1004B7AF4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  uint64_t v12;
  double result;

  v12 = a4;
  if ((a12 & 1) != 0)
  {
    sub_1000E439C(a1, a2, a3 & 1);
  }
  else
  {
    sub_1000E439C(a4, a5, a6 & 1);
    swift_bridgeObjectRetain(a7);
    sub_1000E439C(a8, a9, a10 & 1);
    v12 = a11;
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v12).n128_u64[0];
  return result;
}

double sub_1004B7B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  double result;

  if (a12)
  {
    sub_1000E439C(a9, a10, a11 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a12).n128_u64[0];
  }
  return result;
}

void sub_1004B7BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, CHWorkoutDetailHeartRateTableViewCell *a12)
{
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  if (a12)
  {
    sub_1000E4458(a9, a10, a11 & 1);
    swift_bridgeObjectRelease(a12, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_1004B7BF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  sub_1004B7C6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_release(v2);
  swift_release(v3);
  return a1;
}

void sub_1004B7C6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, char a10, CHWorkoutDetailHeartRateTableViewCell *a11, unsigned __int8 a12)
{
  if (a12 != 255)
    sub_1004B7C98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
}

void sub_1004B7C98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, char a10, CHWorkoutDetailHeartRateTableViewCell *a11, char a12)
{
  CHWorkoutDetailHeartRateTableViewCell *v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  v12 = (CHWorkoutDetailHeartRateTableViewCell *)a4;
  if ((a12 & 1) != 0)
  {
    sub_1000E4458(a1, a2, a3 & 1);
  }
  else
  {
    sub_1000E4458(a4, a5, a6 & 1);
    swift_bridgeObjectRelease(a7, v22, v23, v24, v25, v26, v27, v28);
    sub_1000E4458(a8, a9, a10 & 1);
    v12 = a11;
  }
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
}

uint64_t sub_1004B7D1C(uint64_t a1, uint64_t a2)
{
  uint64_t DetailsChartView;

  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DetailsChartView - 8) + 16))(a2, a1, DetailsChartView);
  return a2;
}

uint64_t sub_1004B7D60(uint64_t a1)
{
  uint64_t DetailsChartView;

  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DetailsChartView - 8) + 8))(a1, DetailsChartView);
  return a1;
}

uint64_t sub_1004B7D9C()
{
  return sub_100028384(&qword_100836D60, &qword_100836D68, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1004B7DC8()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle3, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  qword_100836D70 = result;
  return result;
}

id sub_1004B7E44()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  qword_100836D78 = (uint64_t)result;
  return result;
}

void sub_1004B7E88()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "briskColors");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "gradientLightColor");

    qword_100836D80 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

UIColor *sub_1004B7EF0()
{
  UIColor *result;

  result = sub_1000D3E30();
  qword_100836D88 = (uint64_t)result;
  return result;
}

char *sub_1004B7F14(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  objc_super v41;

  v5 = v4;
  v10 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v5;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v14, "setLineBreakMode:", 0);
  objc_msgSend(v14, "setNumberOfLines:", 0);
  if (qword_10081DE58 != -1)
    swift_once(&qword_10081DE58, sub_1004B7DC8);
  v15 = (void *)UILabel.withFont(_:)(qword_100836D70);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v10] = v15;
  v16 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v18, "setLineBreakMode:", 0);
  objc_msgSend(v18, "setNumberOfLines:", 0);
  if (qword_10081DE60 != -1)
    swift_once(&qword_10081DE60, sub_1004B7E44);
  v19 = (void *)UILabel.withFont(_:)(qword_100836D78);

  v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v21 = (void *)UILabel.withTextColor(_:)(v20);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v16] = v21;
  v22 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer;
  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v22] = v23;
  v24 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v24] = v25;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = &_swiftEmptyArrayStorage;

  v41.receiver = v12;
  v41.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  v26 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  v27 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  v28 = *(void **)&v26[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar];
  v29 = qword_10081DE68;
  v30 = v26;
  v31 = v28;
  if (v29 != -1)
    swift_once(&qword_10081DE68, sub_1004B7E88);
  objc_msgSend(v31, "setProgressTintColor:", qword_100836D80);

  v32 = qword_10081DE70;
  v33 = *(id *)&v26[v27];
  if (v32 != -1)
    swift_once(&qword_10081DE70, sub_1004B7EF0);
  objc_msgSend(v33, "setTrackTintColor:", qword_100836D88);

  v34 = objc_msgSend(*(id *)&v26[v27], "layer");
  objc_msgSend(v34, "setCornerRadius:", 2.0);

  v35 = objc_msgSend(*(id *)&v26[v27], "layer");
  objc_msgSend(v35, "setMasksToBounds:", 1);

  v36 = objc_msgSend(v30, "contentView");
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer]);

  v37 = objc_msgSend(v30, "contentView");
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel]);

  v38 = objc_msgSend(v30, "contentView");
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel]);

  v39 = objc_msgSend(v30, "contentView");
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v26[v27]);

  sub_1004B8418();
  return v30;
}

void sub_1004B8418()
{
  char *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double Height;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  Class isa;
  CGRect v67;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v67.origin.x = v3;
  v67.origin.y = v5;
  v67.size.width = v7;
  v67.size.height = v9;
  Height = CGRectGetHeight(v67);
  v65 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = sub_100047110((uint64_t *)&unk_100828340);
  v12 = swift_allocObject(v11, 120, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1006375B0;
  v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer];
  v14 = objc_msgSend(v13, "topAnchor");
  v15 = objc_msgSend(v0, "contentView");
  v16 = objc_msgSend(v15, "topAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, Height * 0.13);
  *(_QWORD *)(v12 + 32) = v17;
  v18 = objc_msgSend(v13, "centerXAnchor");
  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v19, "centerXAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v12 + 40) = v21;
  v22 = objc_msgSend(v13, "widthAnchor");
  v23 = objc_msgSend(v0, "contentView");
  v24 = objc_msgSend(v23, "widthAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:multiplier:", v24, 0.76);
  *(_QWORD *)(v12 + 48) = v25;
  v26 = objc_msgSend(v13, "heightAnchor");
  v27 = objc_msgSend(v13, "widthAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, 20.0);

  *(_QWORD *)(v12 + 56) = v28;
  v29 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel];
  v30 = objc_msgSend(v29, "topAnchor");
  v31 = objc_msgSend(v13, "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, 30.0);

  *(_QWORD *)(v12 + 64) = v32;
  v33 = objc_msgSend(v29, "leadingAnchor");
  v34 = objc_msgSend(v0, "contentView");
  v35 = objc_msgSend(v34, "leadingAnchor");

  v36 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v35, 16.0);
  *(_QWORD *)(v12 + 72) = v36;
  v37 = objc_msgSend(v29, "trailingAnchor");
  v38 = objc_msgSend(v0, "contentView");
  v39 = objc_msgSend(v38, "trailingAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v39, -16.0);
  *(_QWORD *)(v12 + 80) = v40;
  v41 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel];
  v42 = objc_msgSend(v41, "topAnchor");
  v43 = objc_msgSend(v29, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, 4.0);

  *(_QWORD *)(v12 + 88) = v44;
  v45 = objc_msgSend(v41, "leadingAnchor");
  v46 = objc_msgSend(v0, "contentView");
  v47 = objc_msgSend(v46, "leadingAnchor");

  v48 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v47, 16.0);
  *(_QWORD *)(v12 + 96) = v48;
  v49 = objc_msgSend(v41, "trailingAnchor");
  v50 = objc_msgSend(v0, "contentView");
  v51 = objc_msgSend(v50, "trailingAnchor");

  v52 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v51, -16.0);
  *(_QWORD *)(v12 + 104) = v52;
  v53 = objc_msgSend(v41, "bottomAnchor");
  v54 = objc_msgSend(v0, "contentView");
  v55 = objc_msgSend(v54, "bottomAnchor");

  v56 = objc_msgSend(v53, "constraintLessThanOrEqualToAnchor:constant:", v55, -40.0);
  *(_QWORD *)(v12 + 112) = v56;
  specialized Array._endMutation()(v57);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v12, v58, v59, v60, v61, v62, v63, v64);
  objc_msgSend(v65, "activateConstraints:", isa);

}

void sub_1004B8A7C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  char v4;
  double v5;
  double v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Class isa;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  v4 = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v4 & 1) != 0)
    v5 = 8.0;
  else
    v5 = 4.0;
  if ((v4 & 1) != 0)
    v6 = 4.0;
  else
    v6 = 2.0;
  v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar];
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setCornerRadius:", v6);

  v9 = sub_100047110((uint64_t *)&unk_100828340);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10062ED40;
  v11 = objc_msgSend(v7, "topAnchor");
  v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel], "bottomAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, 20.0);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v7, "centerXAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "centerXAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v10 + 40) = v17;
  v18 = objc_msgSend(v7, "widthAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "widthAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:multiplier:", v20, 0.56);
  *(_QWORD *)(v10 + 48) = v21;
  v22 = objc_msgSend(v7, "heightAnchor");
  v23 = objc_msgSend(v22, "constraintEqualToConstant:", v5);

  *(_QWORD *)(v10 + 56) = v23;
  v24 = objc_msgSend(v7, "bottomAnchor");
  v25 = objc_msgSend(v1, "contentView");
  v26 = objc_msgSend(v25, "bottomAnchor");

  v27 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:constant:", v26, -40.0);
  *(_QWORD *)(v10 + 64) = v27;
  specialized Array._endMutation()(v28);
  v29 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints;
  v30 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = v10;
  swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
  v38 = (void *)objc_opt_self(NSLayoutConstraint);
  v39 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[v29];
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v39);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
  objc_msgSend(v38, "activateConstraints:", isa);

}

void sub_1004B8E3C(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  double v29;
  const void *v30;
  const void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  unint64_t v41;
  void *v42;
  __n128 v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *aBlock;
  uint64_t v52;
  id (*v53)(uint64_t);
  void *v54;
  id (*v55)();
  uint64_t v56;

  v4 = v3;
  v50 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v50);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a3, "badgeConfigurationForAchievement:", a1, v11);
  v15 = objc_msgSend(a3, "backSideIconImageForAchievement:", a1);
  v16 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView), "setConfiguration:", v14);
  objc_msgSend(*(id *)(v4 + v16), "setBadgeBacksideIcon:", v15);
  v17 = objc_msgSend(a2, "localizedAttributedBacksideString");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(a2, "localizedAttributedShortenedBacksideString");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(*(id *)(v4 + v16), "setBadgeBacksideAttributedString:", v18);
      v21 = *(void **)(v4 + v16);
      if (v21)
      {
        v22 = swift_allocObject(&unk_1007A3D98, 24, 7);
        *(_QWORD *)(v22 + 16) = v20;
        v55 = sub_10012F3AC;
        v56 = v22;
        aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
        v52 = 1107296256;
        v53 = sub_1004B91FC;
        v54 = &unk_1007A3DB0;
        v48 = _Block_copy(&aBlock);
        v49 = v14;
        v23 = v9;
        v24 = v15;
        v25 = v56;
        v26 = v21;
        v27 = v20;
        v28 = v25;
        v15 = v24;
        v9 = v23;
        *(_QWORD *)&v29 = swift_release(v28).n128_u64[0];
        v30 = v48;
        objc_msgSend(v26, "setShortenedBadgeBacksideStringProvider:", v48, v29);

        v31 = v30;
        v14 = v49;
        _Block_release(v31);

        goto LABEL_5;
      }

    }
    v32 = *(void **)(v4 + v16);
    if (v32)
      goto LABEL_6;
LABEL_12:
    v45 = 0;
    goto LABEL_13;
  }
LABEL_5:
  v32 = *(void **)(v4 + v16);
  if (!v32)
    goto LABEL_12;
LABEL_6:
  v49 = v15;
  sub_100047110((uint64_t *)&unk_10083D730);
  v33 = v32;
  v34 = a1;
  LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
  v35 = EntityProperty<>.init(title:)(v13);
  v36 = v34;
  LOBYTE(aBlock) = objc_msgSend(v36, "unearned", swift_retain(v35).n128_f64[0]) ^ 1;
  EntityProperty.wrappedValue.setter(&aBlock);

  swift_release(v35);
  aBlock = &_swiftEmptyArrayStorage;
  v37 = sub_1002B7C54();
  v38 = sub_100047110((uint64_t *)&unk_10083D740);
  v39 = sub_1001121C8();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v38, v39, v50, v37);
  aBlock = (CHWorkoutDetailHeartRateTableViewCell *)v35;
  v52 = (uint64_t)v36;
  v40 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v41 = sub_1000F49B4();
  v42 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&aBlock, v9, &type metadata for AwardEntity, v41);
  UIView.annotate(with:)(v42, v43);

  v44 = *(void **)(v4 + v16);
  if (v44)
  {
    objc_msgSend(v44, "setPaused:", 0);
    v45 = *(void **)(v4 + v16);
  }
  else
  {
    v45 = 0;
  }
  v15 = v49;
LABEL_13:
  v46 = v45;
  objc_msgSend(v46, "resizeBadgeForCurrentViewSize");

}

id sub_1004B91FC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id sub_1004B9234()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseAwardDetailBadgeCell()
{
  return objc_opt_self(_TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell);
}

void sub_1004B92FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v4, "setLineBreakMode:", 0);
  objc_msgSend(v4, "setNumberOfLines:", 0);
  if (qword_10081DE58 != -1)
    swift_once(&qword_10081DE58, sub_1004B7DC8);
  v5 = (void *)UILabel.withFont(_:)(qword_100836D70);

  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v5;
  v6 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel;
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v8, "setLineBreakMode:", 0);
  objc_msgSend(v8, "setNumberOfLines:", 0);
  if (qword_10081DE60 != -1)
    swift_once(&qword_10081DE60, sub_1004B7E44);
  v9 = (void *)UILabel.withFont(_:)(qword_100836D78);

  v10 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v11 = (void *)UILabel.withTextColor(_:)(v10);

  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v6] = v11;
  v12 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v12] = v13;
  v14 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v14] = v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseAwardDetailBadgeCell.swift", 47, 2, 80, 0);
  __break(1u);
}

void sub_1004B95B4(void *a1, char a2, char a3, void *a4, void *a5, void *a6, char a7)
{
  uint64_t v7;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  Class isa;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = objc_msgSend(objc_allocWithZone((Class)AAUIAchievementFormatter), "initWithStyle:achievement:achLocalizationProvider:", 1, a1, a6);
  if (v15)
  {
    v44 = v15;
    objc_msgSend(v15, "setFormatsForFriend:", a7 & 1);
    v16 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView;
    if (!*(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView))
    {
      objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer), "bounds");
      objc_msgSend(a4, "setFrame:");
      objc_msgSend(a4, "setOpaque:", 0);
      v17 = *(void **)(v7 + v16);
      *(_QWORD *)(v7 + v16) = a4;
      v18 = a4;

      sub_1004B8E3C(a1, v44, a5);
    }
    v19 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel);
    v20 = objc_msgSend(a6, "titleForAchievement:", a1);
    objc_msgSend(v19, "setText:", v20);

    v21 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel);
    if ((a2 & 1) != 0)
    {
      v22 = objc_msgSend(a6, "achievedDescriptionForAchievement:", a1);
      objc_msgSend(v21, "setText:", v22);
    }
    else
    {
      v23 = objc_msgSend(a6, "unachievedDescriptionForAchievement:", a1);
      objc_msgSend(v21, "setText:", v23);

      if ((a3 & 1) == 0 || (v24 = objc_msgSend(a1, "progress")) == 0)
      {
LABEL_15:
        objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar), "setHidden:", 1);
        v32 = (void *)objc_opt_self(NSLayoutConstraint);
        v33 = *(CHWorkoutDetailHeartRateTableViewCell **)(v7
                                                        + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints);
        sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
        swift_bridgeObjectRetain(v33);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v33, v35, v36, v37, v38, v39, v40, v41);
        objc_msgSend(v32, "deactivateConstraints:", isa);

        if ((a7 & 1) == 0)
        {
LABEL_17:

          return;
        }
LABEL_16:
        v42 = objc_msgSend(a6, "friendAchievedTitleForAchievement:", a1);
        objc_msgSend(v19, "setText:", v42);

        v43 = objc_msgSend(a6, "friendAchievedDescriptionForAchievement:", a1);
        objc_msgSend(v21, "setText:", v43);

        goto LABEL_17;
      }
      v22 = v24;
      v25 = objc_msgSend(a1, "goal");
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v22, "_value");
        v28 = v27;
        objc_msgSend(v26, "_value");
        v30 = v28 / v29;
        if (v30 < 2.22044605e-16)
          v30 = 0.01;
        v31 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar);
        *(float *)&v30 = v30;
        objc_msgSend(v31, "setProgress:", v30);
        objc_msgSend(v31, "setHidden:", 0);
        sub_1004B8A7C();

        if ((a7 & 1) == 0)
          goto LABEL_17;
        goto LABEL_16;
      }
    }

    goto LABEL_15;
  }
}

uint64_t sub_1004B9964()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

char *sub_1004B9988(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  char *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    *((_QWORD *)a1 + 1) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for DayIndex(0);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v12 = v4;
    v13 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1004B9A30(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for DayIndex(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1004B9A80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for DayIndex(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11 = v4;
  v12 = v5;
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1004B9AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_1004B9B7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DayIndex(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1004B9BD8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1004B9C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B9C60);
}

uint64_t sub_1004B9C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DayIndex(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1004B9CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B9CE8);
}

uint64_t sub_1004B9CE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DayIndex(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummaryItemView(uint64_t a1)
{
  uint64_t result;

  result = qword_100836E40;
  if (!qword_100836E40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivitySummaryItemView);
  return result;
}

uint64_t sub_1004B9D98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for DayIndex(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004B9E18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9700, 1);
}

uint64_t sub_1004B9E28(__n128 a1)
{
  id *v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  Class isa;
  Class v7;
  objc_class *v8;
  char *v9;
  id v10;
  Class v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  objc_super v17;
  objc_super v18;

  if (!*v1)
    return static Color.secondary.getter(a1);
  v2 = *v1;
  if ((objc_msgSend(v2, "paused") & 1) != 0)
  {
    v4 = static Color.white.getter(v3);
  }
  else
  {
    sub_10013AD0C();
    isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
    v7 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
    v8 = (objc_class *)type metadata accessor for GradientColors();
    v9 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v7;
    v18.receiver = v9;
    v18.super_class = v8;
    v10 = objc_msgSendSuper2(&v18, "init");
    v11 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
    v12 = (objc_class *)type metadata accessor for MetricColors();
    v13 = (char *)objc_allocWithZone(v12);
    *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v10;
    *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v11;
    v17.receiver = v13;
    v17.super_class = v12;
    v14 = (char *)objc_msgSendSuper2(&v17, "init");
    v15 = *(id *)&v14[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    v4 = Color.init(uiColor:)(v15);
  }
  v16 = v4;

  return v16;
}

void sub_1004B9FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  NSString v6;
  Class isa;
  id v8;
  uint64_t v9;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v5 = (void *)objc_opt_self(NSDateFormatter);
  v6 = String._bridgeToObjectiveC()();
  static Locale.autoupdatingCurrent.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8 = objc_msgSend(v5, "dateFormatFromTemplate:options:locale:", v6, 0, isa);

  objc_msgSend(v4, "setDateFormat:", v8);
  qword_10086AC90 = (uint64_t)v4;
}

uint64_t sub_1004BA0E8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t KeyPath;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[7];
  _OWORD v47[2];
  _OWORD v48[9];
  char v49;
  _BYTE v50[280];
  _BYTE v51[282];
  _BYTE v52[7];
  _BYTE v53[7];
  char v54;
  _OWORD v55[18];

  v33 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static VerticalAlignment.center.getter(v7);
  sub_1004BA40C(a1, (uint64_t)v46);
  *(_OWORD *)((char *)&v48[6] + 7) = v46[6];
  *(_OWORD *)((char *)&v48[5] + 7) = v46[5];
  *(_OWORD *)((char *)&v48[2] + 7) = v46[2];
  *(_OWORD *)((char *)&v48[1] + 7) = v46[1];
  *(_OWORD *)((char *)&v48[7] + 7) = v47[0];
  v48[8] = *(_OWORD *)((char *)v47 + 9);
  *(_OWORD *)((char *)&v48[3] + 7) = v46[3];
  *(_OWORD *)((char *)&v48[4] + 7) = v46[4];
  *(_OWORD *)((char *)v48 + 7) = v46[0];
  v42 = v48[5];
  v43 = v48[6];
  v44 = v48[7];
  v45 = *(_OWORD *)((char *)v47 + 9);
  v38 = v48[1];
  v39 = v48[2];
  v40 = v48[3];
  v41 = v48[4];
  v49 = 0;
  v34 = v8;
  v35 = 0x4020000000000000;
  v36 = 0;
  v37 = v48[0];
  v9 = static Alignment.leading.getter((__n128)v48[2]);
  sub_1003ECDF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v50, 0.0, 1, 0.0, 1, v9, v10);
  sub_1004BB6C8((uint64_t)v46);
  v11.n128_f64[0] = sub_1004BB108((uint64_t)a1, v55);
  v31 = *((_QWORD *)&v55[0] + 1);
  v32 = *(_QWORD *)&v55[0];
  v12 = v55[1];
  v13 = v55[2];
  v14 = static Font.footnote.getter(v11);
  v15 = v4;
  v16 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v17 = v33;
  v16(v6, enum case for Font.Leading.tight(_:), v33);
  v18 = Font.leading(_:)(v6, v14);
  v19 = swift_release(v14);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v6, v17, v19);
  KeyPath = swift_getKeyPath(&unk_100640CF0);
  LOBYTE(v6) = static Edge.Set.bottom.getter(KeyPath);
  v21 = EdgeInsets.init(_all:)(3.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  memcpy(v51, v50, 0x118uLL);
  memcpy((void *)a2, v50, 0x118uLL);
  v54 = v13;
  v51[280] = 0;
  *(_DWORD *)(a2 + 313) = *(_DWORD *)v53;
  *(_DWORD *)(a2 + 316) = *(_DWORD *)&v53[3];
  *(_DWORD *)(a2 + 337) = *(_DWORD *)v52;
  *(_DWORD *)(a2 + 340) = *(_DWORD *)&v52[3];
  v29 = v31;
  v28 = v32;
  *(_QWORD *)(a2 + 280) = v32;
  *(_QWORD *)(a2 + 288) = v29;
  *(_OWORD *)(a2 + 296) = v12;
  *(_BYTE *)(a2 + 312) = v13;
  *(_QWORD *)(a2 + 320) = KeyPath;
  *(_QWORD *)(a2 + 328) = v18;
  *(_BYTE *)(a2 + 336) = (_BYTE)v6;
  *(double *)(a2 + 344) = v21;
  *(_QWORD *)(a2 + 352) = v23;
  *(_QWORD *)(a2 + 360) = v25;
  *(_QWORD *)(a2 + 368) = v27;
  *(_BYTE *)(a2 + 376) = 0;
  sub_10041B280((uint64_t)v51);
  sub_100116B48(v28, v29, v12, *((uint64_t *)&v12 + 1));
  swift_retain(KeyPath);
  swift_retain(v18);
  sub_100116B88(v28, v29, v12, *((uint64_t *)&v12 + 1));
  swift_release(v18);
  swift_release(KeyPath);
  memcpy(v55, v50, 0x118uLL);
  return sub_1004BB744((uint64_t)v55);
}

uint64_t sub_1004BA40C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  int v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  char v64;
  char v65;
  int v66;
  int v67;
  void *v68;
  id v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void **v78;
  int v79;
  int v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  char v89;
  _BYTE v90[7];
  char v91;
  _BYTE v92[7];
  char v93;
  char v94;
  __int16 v95;
  char v96;
  __int16 v97;
  char v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;

  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if (*a1 && objc_msgSend(v11, "_wheelchairUse") == (id)2)
    v12 = 2;
  else
    v12 = 1;
  v87 = v12;
  v13 = (void *)objc_opt_self(ARUIRingGroup);
  objc_msgSend(v13, "preferredActivityRingThicknessForDiameter:", 48.0);
  v15 = v14;
  v16 = objc_msgSend(v13, "preferredActivityRingInterspacingForDiameter:", 48.0);
  v18 = v17;
  if (v11)
  {
    v16 = objc_msgSend(v11, "paused");
    v86 = (int)v16;
  }
  else
  {
    v86 = 0;
  }
  v21 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(&v99, 0x4048000000000000, 0, 0x4048000000000000, 0, v21, v22);
  v85 = v99;
  v80 = v100;
  v84 = v101;
  v79 = v102;
  v82 = v104;
  v83 = v103;
  v81 = v11;
  sub_1004BA834(v11, (uint64_t)v10);
  v23 = Text.init(_:)(v10);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  v30 = static Font.title.getter(v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  v31 = Font.leading(_:)(v7, v30);
  v78 = a1;
  v32 = v31;
  v33 = swift_release(v30);
  v34.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v33);
  v35 = Text.font(_:)(v32, v23, v25, v29, v27, v34);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v32);
  LOBYTE(v32) = v39 & 1;
  sub_1000E4458(v23, v25, v29);
  swift_bridgeObjectRelease(v27, v42, v43, v44, v45, v46, v47, v48);
  v50 = sub_1004B9E28(v49);
  v88 = v50;
  v51 = Text.foregroundStyle<A>(_:)(&v88, v35, v37, v39 & 1, v41, &type metadata for Color, &protocol witness table for Color);
  v53 = v52;
  v55 = v54;
  LOBYTE(v23) = v56 & 1;
  sub_1000E4458(v35, v37, v32);
  swift_release(v50);
  swift_bridgeObjectRelease(v41, v57, v58, v59, v60, v61, v62, v63);
  v64 = v80;
  v94 = v80;
  v65 = v79;
  v93 = v79;
  v91 = v23;
  v89 = 1;
  *(_WORD *)(a2 + 9) = v97;
  *(_BYTE *)(a2 + 11) = v98;
  *(_WORD *)(a2 + 29) = v95;
  *(_BYTE *)(a2 + 31) = v96;
  *(_DWORD *)(a2 + 57) = v88;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)&v88 + 3);
  v66 = *(_DWORD *)v92;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v92[3];
  *(_DWORD *)(a2 + 73) = v66;
  v67 = *(_DWORD *)v90;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v90[3];
  *(_DWORD *)(a2 + 113) = v67;
  LOBYTE(v67) = v89;
  v68 = v81;
  *(_QWORD *)a2 = v81;
  *(_BYTE *)(a2 + 8) = v86;
  *(_DWORD *)(a2 + 12) = 1111490560;
  v19 = v15;
  *(float *)(a2 + 16) = v19;
  v20 = v18;
  *(float *)(a2 + 20) = v20;
  *(_WORD *)(a2 + 24) = 2;
  *(_BYTE *)(a2 + 26) = 0;
  *(_BYTE *)(a2 + 27) = v87;
  *(_BYTE *)(a2 + 28) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v85;
  *(_BYTE *)(a2 + 56) = v64;
  *(_QWORD *)(a2 + 64) = v84;
  *(_BYTE *)(a2 + 72) = v65;
  *(_QWORD *)(a2 + 80) = v83;
  *(_QWORD *)(a2 + 88) = v82;
  *(_QWORD *)(a2 + 96) = v51;
  *(_QWORD *)(a2 + 104) = v53;
  *(_BYTE *)(a2 + 112) = v23;
  *(_QWORD *)(a2 + 120) = v55;
  *(_QWORD *)(a2 + 128) = 0;
  *(_BYTE *)(a2 + 136) = v67;
  v69 = v68;
  sub_10003AFE0(0, 0);
  sub_1000E439C(v51, v53, v23);
  swift_bridgeObjectRetain(v55);
  sub_1000E4458(v51, v53, v23);

  swift_bridgeObjectRelease(v55, v70, v71, v72, v73, v74, v75, v76);
  return sub_100022BA4(0, 0);
}

void sub_1004BA834(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  double v35;
  double v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  const char *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  NSString v56;
  id v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  const char *v67;
  const char *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  char *v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  SEL v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t KeyPath;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t *, _QWORD);
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  id v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;

  v130 = a2;
  v4 = type metadata accessor for LocalizationFeature(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v8);
  v124 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v10);
  v12 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v13);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100833760);
  v125 = *(_QWORD *)(v16 - 8);
  v126 = v16;
  __chkstk_darwin(v16);
  v123 = (uint64_t)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v122 = (uint64_t)&v117 - v19;
  v20 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v20);
  v129 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AttributedString(0);
  v128 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v127 = (char *)&v117 - v27;
  v28 = *(void **)(v2 + 8);
  v29 = objc_msgSend(v28, "unitManager", v26);
  if (!v29)
  {
    __break(1u);
    goto LABEL_19;
  }
  v30 = v29;
  v131 = objc_msgSend(v29, "userActiveEnergyBurnedUnit");

  if (a1)
  {
    v121 = v22;
    v31 = a1;
    if (objc_msgSend(v31, "paused"))
    {
      v32 = (void *)objc_opt_self(FIUIFormattingManager);
      v33 = objc_msgSend(v31, "activeEnergyBurned");
      v120 = v31;
      v34 = v33;
      objc_msgSend(v33, "doubleValueForUnit:", v131);
      v36 = v35;

      v37 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v36);
      v38 = objc_msgSend(v32, "stringWithNumber:decimalPrecision:roundingMode:", v37, 1, 1);

      v31 = v120;
      if (v38)
      {
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v118 = v40;
        v119 = v39;

        v41 = objc_msgSend(v28, "localizedShortActiveEnergyUnitString");
        if (v41)
        {
          v42 = v41;
          v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
          v45 = v44;

          v132 = v43;
          v133 = v45;
          v117 = sub_100038CA0();
          v46 = StringProtocol.localizedUppercase.getter(&type metadata for String, v117);
          v48 = (CHWorkoutDetailHeartRateTableViewCell *)v47;
          swift_bridgeObjectRelease(v45, v47, v49, v50, v51, v52, v53, v54);
          v55 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v56 = String._bridgeToObjectiveC()();
          v57 = objc_msgSend(v55, "localizedStringForKey:value:table:", v56, 0, 0);

          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v60 = v59;

          v61 = sub_100047110((uint64_t *)&unk_100827460);
          v62 = swift_allocObject(v61, 112, 7);
          *(_OWORD *)(v62 + 16) = xmmword_100620BC0;
          *(_QWORD *)(v62 + 56) = &type metadata for String;
          v63 = sub_100038CF8();
          v64 = v118;
          *(_QWORD *)(v62 + 32) = v119;
          *(_QWORD *)(v62 + 40) = v64;
          *(_QWORD *)(v62 + 96) = &type metadata for String;
          *(_QWORD *)(v62 + 104) = v63;
          *(_QWORD *)(v62 + 64) = v63;
          *(_QWORD *)(v62 + 72) = v46;
          *(_QWORD *)(v62 + 80) = v48;
          v65 = swift_bridgeObjectRetain(v48);
          v66 = String.init(format:_:)(v58, v60, v62, v65);
          v68 = v67;
          swift_bridgeObjectRelease(v60, v67, v69, v70, v71, v72, v73, v74);
          v75 = v129;
          AttributeContainer.init()(v76);
          v77 = v127;
          AttributedString.init(_:attributes:)(v66, v68, v75);
          v78 = v128;
          v79 = v121;
          (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v24, v77, v121);
          v132 = v46;
          v133 = v48;
          v80 = type metadata accessor for Locale(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v12, 1, 1, v80);
          v81 = sub_1004870E0();
          AttributedStringProtocol.range<A>(of:options:locale:)(&v132, 0, v12, v79, &type metadata for String, v81, v117);
          sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_10082ED90);
          (*(void (**)(char *, uint64_t))(v78 + 8))(v24, v79);
          swift_bridgeObjectRelease(v48, v82, v83, v84, v85, v86, v87, v88);
          v89 = v126;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v15, 1, v126) == 1)
          {
            v90 = &qword_100833758;
            v91 = (uint64_t)v15;
          }
          else
          {
            v102 = v122;
            sub_10043A2CC((uint64_t)v15, v122);
            v103 = v123;
            sub_1004BB7F8(v102, v123);
            KeyPath = swift_getKeyPath(&unk_100640D90);
            __chkstk_darwin(KeyPath);
            *(&v117 - 2) = v105;
            v106 = swift_getKeyPath(&unk_100640DC0);
            v107 = v124;
            static Text.Scale.secondary.getter();
            v108 = type metadata accessor for Text.Scale(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v107, 0, 1, v108);
            v109 = sub_100028384((unint64_t *)&qword_100833770, &qword_100833760, (uint64_t)&protocol conformance descriptor for Range<A>);
            v110 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify(&v132, v103, v89, v109);
            v111 = sub_10043E458();
            AttributedSubstring.subscript.setter(v107, v106, v111);
            v110(&v132, 0);
            v79 = v121;
            sub_10001BE90(v103, &qword_100833760);
            v91 = v102;
            v90 = &qword_100833760;
          }
          sub_10001BE90(v91, v90);
          v112 = swift_getKeyPath(&unk_100640D20);
          __chkstk_darwin(v112);
          *(&v117 - 2) = v113;
          v114 = swift_getKeyPath(&unk_100640D50);
          v115 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:design:", UIFontSystemFontDesignRounded, 20.0, UIFontWeightMedium);
          if (v115)
          {
            v132 = (uint64_t)v115;
            v116 = sub_10018A608();
            AttributedString.subscript.setter(&v132, v114, v116);

            (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v130, v77, v79);
            return;
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }

    v92 = objc_msgSend(v31, "activeEnergyBurned");
    v93 = objc_msgSend(v31, "activeEnergyBurnedGoal");
  }
  else
  {
    v93 = 0;
    v92 = 0;
  }
  v94 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:design:", UIFontSystemFontDesignRounded, 20.0, UIFontWeightMedium);
  if (!v94)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v95 = v94;
  v96 = sub_1001B66F8(v92, v93, v28, v94);

  if (v96)
  {
    AttributedString.init(_:)(v96);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizationFeature.workout(_:), v4);
    v97 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000002CLL, 0x80000001006A1CF0, v7);
    v99 = v98;
    v100.n128_f64[0] = (*(double (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v101 = v129;
    AttributeContainer.init()(v100);
    AttributedString.init(_:attributes:)(v97, v99, v101);
  }

}

double sub_1004BB108@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(_QWORD);
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  char v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  double result;
  __int128 v84;
  char v85;
  _OWORD *v86;
  void (*v87)(char *, uint64_t);
  unsigned int v88;
  void (*v89)(char *, _QWORD, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _OWORD v102[2];
  char v103;

  v93 = a1;
  v95 = a2;
  v2 = type metadata accessor for Calendar.Identifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Calendar(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DayIndex(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v92 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v87 - v16;
  v18 = type metadata accessor for ActivitySummaryItemView(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v90 = v93 + *(int *)(v18 + 24);
  v91 = v19;
  ((void (*)(char *))v19)(v11);
  v20 = *(void (**)(_QWORD))(v3 + 104);
  v88 = enum case for Calendar.Identifier.gregorian(_:);
  v89 = (void (*)(char *, _QWORD, uint64_t))v20;
  v20(v5);
  Calendar.init(identifier:)(v5);
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v93 = v2;
  v87 = v21;
  v21(v5, v2);
  DayIndex.startDate(in:)(v7);
  v94 = *(_QWORD *)(v94 + 8);
  ((void (*)(char *, uint64_t))v94)(v7, v96);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23 = v8;
  v24 = v12;
  v25 = v22;
  v26 = ((uint64_t (*)(char *, uint64_t))v22)(v11, v23);
  Date.init()(v26);
  LOBYTE(v2) = Date.isSameDay(as:)(v14);
  v27 = *(void (**)(char *, uint64_t))(v92 + 8);
  v27(v14, v24);
  v27(v17, v24);
  if ((v2 & 1) != 0)
  {
    v28 = LocalizedStringKey.init(stringLiteral:)(0x7961646F54, 0xE500000000000000);
    v29 = Text.init(_:tableName:bundle:comment:)(v28);
    v31 = v30;
    v33 = v32;
    v35 = v34 & 1;
    v36 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v37 = Color.init(_:)(v36);
    *(_QWORD *)&v102[0] = v37;
    v38 = Text.foregroundStyle<A>(_:)(v102, v29, v31, v35, v33, &type metadata for Color, &protocol witness table for Color);
    v40 = v39;
    v42 = v41;
    v44 = v43 & 1;
    sub_1000E4458(v29, v31, v35);
    swift_release(v37);
    swift_bridgeObjectRelease(v33, v45, v46, v47, v48, v49, v50, v51);
    v97 = v38;
    v98 = v40;
    v99 = v44;
    v100 = v42;
    v101 = 0;
  }
  else
  {
    if (qword_10081DE78 != -1)
      swift_once(&qword_10081DE78, sub_1004B9FD0);
    v52 = (void *)qword_10086AC90;
    v91(v11, v90, v23);
    v53 = v93;
    v89(v5, v88, v93);
    Calendar.init(identifier:)(v5);
    v87(v5, v53);
    DayIndex.startDate(in:)(v7);
    ((void (*)(char *, uint64_t))v94)(v7, v96);
    v25(v11, v23);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v27(v17, v24);
    v55 = objc_msgSend(v52, "stringFromDate:", isa);

    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    *(_QWORD *)&v102[0] = v56;
    *((_QWORD *)&v102[0] + 1) = v58;
    v59 = sub_100038CA0();
    v60 = Text.init<A>(_:)(v102, &type metadata for String, v59);
    v62 = v61;
    v64 = v63;
    v66 = v65 & 1;
    v67 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v68 = Color.init(_:)(v67);
    *(_QWORD *)&v102[0] = v68;
    v69 = Text.foregroundStyle<A>(_:)(v102, v60, v62, v66, v64, &type metadata for Color, &protocol witness table for Color);
    v71 = v70;
    v73 = v72;
    v75 = v74 & 1;
    sub_1000E4458(v60, v62, v66);
    swift_release(v68);
    swift_bridgeObjectRelease(v64, v76, v77, v78, v79, v80, v81, v82);
    v97 = v69;
    v98 = v71;
    v99 = v75;
    v100 = v73;
    v101 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v97, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)v102;
  v84 = v102[1];
  v85 = v103;
  v86 = v95;
  *v95 = v102[0];
  v86[1] = v84;
  *((_BYTE *)v86 + 32) = v85;
  return result;
}

void *sub_1004BB620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  _BYTE __src[384];

  v4 = static Alignment.bottomTrailing.getter(a1);
  v6 = v5;
  v7 = sub_1004BA0E8(v2, (uint64_t)__src);
  v8 = static Edge.Set.all.getter(v7);
  v9 = EdgeInsets.init(_all:)(15.0);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  result = memcpy((void *)(a2 + 16), __src, 0x179uLL);
  *(_BYTE *)(a2 + 400) = v8;
  *(double *)(a2 + 408) = v9;
  *(_QWORD *)(a2 + 416) = v11;
  *(_QWORD *)(a2 + 424) = v13;
  *(_QWORD *)(a2 + 432) = v15;
  *(_BYTE *)(a2 + 440) = 0;
  return result;
}

uint64_t sub_1004BB6C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_BYTE *)(a1 + 112);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 120);

  sub_100022BA4(v2, v3);
  sub_1000E4458(v4, v5, v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_1004BB744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_BYTE *)(a1 + 136);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 144);

  sub_100022BA4(v2, v3);
  sub_1000E4458(v4, v5, v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_1004BB7C4()
{
  return 8;
}

uint64_t sub_1004BB7D0(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004BB7D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1004BB7EC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004BB7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100833760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004BB84C()
{
  return 8;
}

unint64_t sub_1004BB864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836E80;
  if (!qword_100836E80)
  {
    v1 = sub_100007050(&qword_100836E88);
    sub_100028384(&qword_100836E90, &qword_100836E98, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100836E80);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalsPowerZoneView()
{
  return &type metadata for IntervalsPowerZoneView;
}

uint64_t sub_1004BB904(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9744, 1);
}

BOOL sub_1004BB914()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v16;
  double v17;
  __int128 v18;

  v1 = v0;
  v2 = type metadata accessor for PowerZonesAlertZoneType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_OWORD *)v0;
  v6 = *((_QWORD *)&v18 + 1);
  swift_retain(*((_QWORD *)&v18 + 1));
  v8 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter(v7));
  v10 = v9;
  v11 = sub_10004D634((uint64_t)&v18);
  if ((v10 & 1) != 0)
    return 0;
  dispatch thunk of PowerZonesAlertTargetZone.type.getter(v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for PowerZonesAlertZoneType.target(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v12 = &v5[*(int *)(sub_100047110(&qword_100836F20) + 48)];
    v13 = type metadata accessor for TargetZone.ZoneType(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    sub_1004BD4F8(v6);
    return vabdd_f64(v8, v14) <= v1[5];
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1004BD4F8(v6);
  return v17 <= v8 && v16 > v8;
}

uint64_t sub_1004BBA88()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  char v5;
  double v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  double v10;
  char v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  __int128 v18;

  v18 = *v0;
  v1 = *((_QWORD *)&v18 + 1);
  swift_retain(*((_QWORD *)&v18 + 1));
  v3 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter(v2));
  v5 = v4;
  sub_10004D634((uint64_t)&v18);
  if ((v5 & 1) != 0)
    goto LABEL_5;
  sub_1004BD4F8(v1);
  if (v6 < v3)
    return 1;
  sub_1004BD4F8(v1);
  if (v8 > v3)
  {
LABEL_5:
    *(double *)&result = 0.0;
  }
  else
  {
    swift_retain(v1);
    v10 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter(v9));
    v12 = v11;
    sub_10004D634((uint64_t)&v18);
    if ((v12 & 1) != 0 || !sub_1004BB914())
    {
      *(double *)&result = 0.0;
    }
    else
    {
      sub_1004BD4F8(v1);
      v14 = v10 - v13;
      sub_1004BD4F8(v1);
      v16 = v15;
      sub_1004BD4F8(v1);
      *(double *)&result = v14 / (v16 - v17);
    }
  }
  return result;
}

uint64_t sub_1004BBBB4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];

  v46 = a2;
  v3 = sub_100047110(&qword_100836EB8);
  __chkstk_darwin(v3);
  v47 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - v6;
  v8 = type metadata accessor for Color.RGBColorSpace(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100047110(&qword_10082D508);
  v12 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100047110(&qword_10082D510);
  __chkstk_darwin(v43);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v42 - v21;
  v45 = a1;
  LOBYTE(a1) = sub_1004BB914();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
  if ((a1 & 1) != 0)
  {
    v23 = 0.231;
    v24 = 0.149;
    v25 = 0.0;
  }
  else
  {
    v25 = 0.213;
    v23 = 0.086;
    v24 = 0.063;
  }
  v26 = Color.init(_:red:green:blue:opacity:)(v11, v25, v23, v24, 1.0);
  *(_QWORD *)&v48[0] = v26;
  v27 = sub_100047110(&qword_10082D518);
  v28 = sub_1002D747C();
  View.cornerRadius(_:corners:)(10, v27, v28, 16.0);
  swift_release(v26);
  if (qword_10081D730 != -1)
    v29 = swift_once(&qword_10081D730, sub_1001D8F44);
  v30 = qword_10086A0B8;
  v31 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v48, 0, 1, v30, 0, v31, v32);
  v33 = v44;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v14, v44);
  v34 = &v19[*(int *)(v43 + 36)];
  v35 = v48[1];
  *(_OWORD *)v34 = v48[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v48[2];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  v36 = sub_100045AD4((uint64_t)v19, (uint64_t)v22, &qword_10082D510);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v36);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v37 = sub_100047110(&qword_100836EC0);
  sub_1004BBF4C(v45, (uint64_t)&v7[*(int *)(v37 + 44)]);
  sub_100021CC0((uint64_t)v22, (uint64_t)v16, &qword_10082D510);
  v38 = v47;
  sub_100021CC0((uint64_t)v7, v47, &qword_100836EB8);
  v39 = v46;
  sub_100021CC0((uint64_t)v16, v46, &qword_10082D510);
  v40 = sub_100047110(&qword_100836EC8);
  sub_100021CC0(v38, v39 + *(int *)(v40 + 48), &qword_100836EB8);
  sub_10001BE90((uint64_t)v7, &qword_100836EB8);
  sub_10001BE90((uint64_t)v22, &qword_10082D510);
  sub_10001BE90(v38, &qword_100836EB8);
  return sub_10001BE90((uint64_t)v16, &qword_10082D510);
}

uint64_t sub_1004BBF4C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  BOOL v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  BOOL v62;
  char *v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  double v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  char *v77;
  uint64_t v78;
  _BOOL8 v79;
  unint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  __int128 *v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  uint64_t v119;

  v109 = a2;
  v103 = type metadata accessor for PowerZonesAlertZoneType(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v102 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100047110(&qword_100836ED0);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v107 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v104 = (char *)&v95 - v6;
  __chkstk_darwin(v7);
  v105 = (char *)&v95 - v8;
  v110 = type metadata accessor for Color.RGBColorSpace(0);
  v99 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v111 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100836ED8);
  __chkstk_darwin(v10);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100836EE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100836EE8);
  __chkstk_darwin(v16);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_100836EF0);
  __chkstk_darwin(v96);
  v20 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100047110(&qword_100836EF8);
  __chkstk_darwin(v98);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100047110(&qword_100836F00);
  __chkstk_darwin(v97);
  v100 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v95 - v25;
  __chkstk_darwin(v27);
  v112 = (uint64_t)&v95 - v28;
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v29);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v30 = (uint64_t)&v12[*(int *)(sub_100047110(&qword_100836F08) + 44)];
  v113 = a1;
  v31 = sub_1004BC774(a1, v30);
  v32 = static Edge.Set.bottom.getter(v31);
  if (qword_10081D728 != -1)
    swift_once(&qword_10081D728, sub_1001D8E84);
  v33 = EdgeInsets.init(_all:)(*(double *)&qword_10086A0B0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_100021CC0((uint64_t)v12, (uint64_t)v15, &qword_100836ED8);
  v40 = &v15[*(int *)(v13 + 36)];
  *v40 = v32;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  v41 = sub_10001BE90((uint64_t)v12, &qword_100836ED8);
  v42 = static Edge.Set.leading.getter(v41);
  if (qword_10081DF40 != -1)
    swift_once(&qword_10081DF40, sub_1004E9C18);
  v43 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD28);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  sub_100021CC0((uint64_t)v15, (uint64_t)v18, &qword_100836EE0);
  v50 = &v18[*(int *)(v16 + 36)];
  *v50 = v42;
  *((double *)v50 + 1) = v43;
  *((_QWORD *)v50 + 2) = v45;
  *((_QWORD *)v50 + 3) = v47;
  *((_QWORD *)v50 + 4) = v49;
  v50[40] = 0;
  sub_10001BE90((uint64_t)v15, &qword_100836EE0);
  sub_100021CC0((uint64_t)v18, (uint64_t)v20, &qword_100836EE8);
  *(_OWORD *)&v20[*(int *)(v96 + 36)] = xmmword_100634140;
  sub_10001BE90((uint64_t)v18, &qword_100836EE8);
  v51 = sub_1004BB914();
  v52 = enum case for Color.RGBColorSpace.sRGB(_:);
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 104);
  v54 = v111;
  v53(v111, enum case for Color.RGBColorSpace.sRGB(_:), v110);
  if (v51)
  {
    v55 = 0.012;
    v56 = 0.659;
    v57 = 1.0;
  }
  else
  {
    v57 = 0.373;
    v56 = 0.271;
    v55 = 1.0;
  }
  v58 = Color.init(_:red:green:blue:opacity:)(v54, v55, v57, v56, 1.0);
  sub_100021CC0((uint64_t)v20, (uint64_t)v22, &qword_100836EF0);
  *(_QWORD *)&v22[*(int *)(v98 + 36)] = v58;
  sub_10001BE90((uint64_t)v20, &qword_100836EF0);
  sub_100021CC0((uint64_t)v22, (uint64_t)v26, &qword_100836EF8);
  *(_QWORD *)&v26[*(int *)(v97 + 36)] = 0x3FF0000000000000;
  sub_10001BE90((uint64_t)v22, &qword_100836EF8);
  sub_100045AD4((uint64_t)v26, v112, &qword_100836F00);
  if (qword_10081D738 != -1)
    swift_once(&qword_10081D738, sub_1001D9020);
  v99 = qword_10086A0C0;
  v59 = sub_1004BBA88();
  v61 = v60;
  v62 = sub_1004BB914();
  v63 = v111;
  v53(v111, v52, v110);
  if (v62)
  {
    v64 = 0.012;
    v65 = 0.659;
    v66 = 1.0;
  }
  else
  {
    v66 = 0.373;
    v65 = 0.271;
    v64 = 1.0;
  }
  v67 = Color.init(_:red:green:blue:opacity:)(v63, v64, v66, v65, 1.0);
  v68.n128_u64[0] = 0x404B800000000000;
  v69.n128_u64[0] = 0x404B800000000000;
  v70 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(55.0, 55.0, v68, 55.0, v69, 55.0, 55.0);
  v114 = v59;
  v115 = v61 & 1;
  v116 = v67;
  v117 = 0x4018000000000000;
  v118 = v70;
  v119 = 0x4014000000000000;
  v71 = v102;
  dispatch thunk of PowerZonesAlertTargetZone.type.getter(v72);
  v73 = v101;
  v74 = v103;
  v75 = (*(uint64_t (**)(char *, uint64_t))(v101 + 88))(v71, v103);
  v76 = enum case for PowerZonesAlertZoneType.target(_:);
  if (v75 == enum case for PowerZonesAlertZoneType.target(_:))
  {
    (*(void (**)(char *, uint64_t))(v73 + 96))(v71, v74);
    v77 = &v71[*(int *)(sub_100047110(&qword_100836F20) + 48)];
    v78 = type metadata accessor for TargetZone.ZoneType(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v74);
  }
  v79 = v75 == v76;
  v80 = sub_1004BD4B4();
  v81 = v104;
  View.isHidden(_:defaultAccessibilityHidden:)(v79, 0, &type metadata for IntervalsRangeSlider, v80);
  v82 = swift_release(v116);
  v84 = v105;
  v83 = v106;
  v85 = v108;
  (*(void (**)(char *, char *, uint64_t, __n128))(v106 + 32))(v105, v81, v108, v82);
  v86 = v112;
  v87 = v100;
  sub_100021CC0(v112, v100, &qword_100836F00);
  v88 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v89 = v107;
  v88(v107, v84, v85);
  v90 = v109;
  sub_100021CC0(v87, v109, &qword_100836F00);
  v91 = sub_100047110(&qword_100836F18);
  v92 = v90 + *(int *)(v91 + 48);
  *(_QWORD *)v92 = v99;
  *(_BYTE *)(v92 + 8) = 0;
  v88((char *)(v90 + *(int *)(v91 + 64)), v89, v85);
  v93 = *(void (**)(char *, uint64_t))(v83 + 8);
  v93(v84, v85);
  sub_10001BE90(v86, &qword_100836F00);
  v93(v89, v85);
  return sub_10001BE90(v87, &qword_100836F00);
}

uint64_t sub_1004BC774@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v34 = sub_100047110(&qword_10082D580);
  __chkstk_darwin(v34);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082D588);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_100047110(&qword_100836F28);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100836F30);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v32 - v19;
  *(_QWORD *)v13 = static VerticalAlignment.lastTextBaseline.getter(v18);
  *((_QWORD *)v13 + 1) = 0x4008000000000000;
  v13[16] = 0;
  v21 = sub_100047110(&qword_100836F38);
  sub_1004BCA70(a1, &v13[*(int *)(v21 + 44)]);
  sub_100021CC0((uint64_t)v13, (uint64_t)v16, &qword_100836F28);
  *(_OWORD *)&v16[*(int *)(v14 + 36)] = xmmword_100640E00;
  sub_10001BE90((uint64_t)v13, &qword_100836F28);
  v22 = sub_100045AD4((uint64_t)v16, (uint64_t)v20, &qword_100836F30);
  *(_QWORD *)v4 = static VerticalAlignment.firstTextBaseline.getter(v22);
  *((_QWORD *)v4 + 1) = 0x4010000000000000;
  v4[16] = 0;
  v23 = sub_100047110(&qword_10082D598);
  sub_1004BD070((uint64_t)a1, (uint64_t)&v4[*(int *)(v23 + 44)]);
  v24 = sub_100028384(&qword_10082D5A0, &qword_10082D580, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.metricDescriptionFont(multiline:)(0, v34, v24);
  sub_10001BE90((uint64_t)v4, &qword_10082D580);
  v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v10, v7, v5);
  sub_100021CC0((uint64_t)v20, (uint64_t)v16, &qword_100836F30);
  v26 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v27 = v25;
  v26(v7, v10, v5);
  v28 = v35;
  sub_100021CC0((uint64_t)v16, v35, &qword_100836F30);
  v29 = sub_100047110(&qword_100836F40);
  v26((char *)(v28 + *(int *)(v29 + 48)), v7, v5);
  v30 = *(void (**)(char *, uint64_t))(v27 + 8);
  v30(v10, v5);
  sub_10001BE90((uint64_t)v20, &qword_100836F30);
  v30(v7, v5);
  return sub_10001BE90((uint64_t)v16, &qword_100836F30);
}

uint64_t sub_1004BCA70@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  char v47;
  char v48;
  char *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  __int128 v100;

  v94 = a2;
  v3 = type metadata accessor for Image.Scale(0);
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  __chkstk_darwin(v3);
  v89 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082E228);
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  __chkstk_darwin(v5);
  v86 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_10082E230);
  __chkstk_darwin(v85);
  v93 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v90 = (uint64_t)&v78 - v9;
  v80 = type metadata accessor for LocalizationFeature(0);
  v10 = *(_QWORD *)(v80 - 8);
  v11 = __chkstk_darwin(v80);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for NumberFormatStyleConfiguration.Precision(0, v11);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10082E238);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v78 - v24;
  v84 = sub_100047110(&qword_10082E240);
  v82 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v83 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v81 = (char *)&v78 - v28;
  v100 = *a1;
  swift_retain(*((_QWORD *)&v100 + 1));
  v30 = PowerMetricsPublisher.currentPower.getter(v29);
  v32 = v31;
  v33 = sub_10004D634((uint64_t)&v100);
  if ((v32 & 1) != 0)
  {
    v39 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for LocalizationFeature.workout(_:), v80);
    v37 = static Localization.workoutUILocalizedString(_:feature:)(0x45554C41564F4ELL, 0xE700000000000000, v13);
    v38 = v40;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v39);
  }
  else
  {
    v95 = v30;
    static Locale.autoupdatingCurrent.getter(v33);
    v34 = sub_10030A42C();
    FloatingPointFormatStyle.init(locale:)(v18, &type metadata for Double, v34);
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)(0);
    FloatingPointFormatStyle.precision(_:)(v15, v19);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v15, v79);
    v35 = *(void (**)(char *, uint64_t))(v20 + 8);
    v35(v22, v19);
    v36 = sub_100028384((unint64_t *)&qword_10082E260, &qword_10082E238, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>);
    BinaryFloatingPoint.formatted<A>(_:)(&v96, v25, &type metadata for Double, v19, v34, v36);
    v35(v25, v19);
    v37 = v96;
    v38 = v97;
  }
  v96 = v37;
  v97 = v38;
  v41 = sub_100038CA0();
  v42 = Text.init<A>(_:)(&v96, &type metadata for String, v41);
  v44 = v43;
  v46 = v45;
  v96 = v42;
  v97 = v43;
  v48 = v47 & 1;
  v98 = v47 & 1;
  v99 = v45;
  v49 = v81;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, &type metadata for Text, &protocol witness table for Text);
  sub_1000E4458(v42, v44, v48);
  swift_bridgeObjectRelease(v46, v50, v51, v52, v53, v54, v55, v56);
  v57 = Image.init(systemName:)(0x6C69662E746C6F62, 0xE90000000000006CLL);
  v96 = v57;
  v58 = v86;
  View.metricUnitFont()(&type metadata for Image, &protocol witness table for Image);
  v59 = swift_release(v57);
  v61 = v91;
  v60 = v92;
  v62 = v89;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v91 + 104))(v89, enum case for Image.Scale.small(_:), v92, v59);
  KeyPath = swift_getKeyPath(&unk_100640E88);
  v64 = (uint64_t)v93;
  v65 = (uint64_t *)&v93[*(int *)(v85 + 36)];
  v66 = sub_100047110(&qword_10082CBF0);
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v65 + *(int *)(v66 + 28), v62, v60);
  *v65 = KeyPath;
  v68 = v87;
  v67 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v64, v58, v88);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v67);
  v69 = v90;
  sub_100045AD4(v64, v90, &qword_10082E230);
  v71 = v82;
  v70 = v83;
  v72 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  v73 = v84;
  v72(v83, v49, v84);
  sub_100021CC0(v69, v64, &qword_10082E230);
  v74 = v94;
  v72(v94, v70, v73);
  v75 = sub_100047110(&qword_100836F48);
  sub_100021CC0(v64, (uint64_t)&v74[*(int *)(v75 + 48)], &qword_10082E230);
  sub_10001BE90(v69, &qword_10082E230);
  v76 = *(void (**)(char *, uint64_t))(v71 + 8);
  v76(v49, v73);
  sub_10001BE90(v64, &qword_10082E230);
  return ((uint64_t (*)(char *, uint64_t))v76)(v70, v73);
}

uint64_t sub_1004BD070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  unint64_t v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;

  v53 = a1;
  v54 = a2;
  v52 = sub_100047110(&qword_10082CBF0);
  __chkstk_darwin(v52);
  v3 = (uint64_t *)((char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082CBF8);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100047110(&qword_10082D5B0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v51 = (uint64_t)&v51 - v15;
  v16 = Image.init(_internalSystemName:)(0xD00000000000001BLL);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.Scale.small(_:), v4);
  KeyPath = swift_getKeyPath(&unk_100640E88);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v52 + 28), v7, v4);
  *v3 = KeyPath;
  sub_100021CC0((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 36), &qword_10082CBF0);
  *v10 = v16;
  swift_retain(v16);
  sub_10001BE90((uint64_t)v3, &qword_10082CBF0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v16);
  v19 = static VerticalAlignment.firstTextBaseline.getter(v18);
  sub_100021CC0((uint64_t)v10, (uint64_t)v13, &qword_10082CBF8);
  v20 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v20 = v19;
  v20[1] = (uint64_t)sub_1002D7364;
  v20[2] = 0;
  sub_10001BE90((uint64_t)v10, &qword_10082CBF8);
  v21 = v51;
  sub_100045AD4((uint64_t)v13, v51, &qword_10082D5B0);
  v22 = PowerZonesAlertTargetZone.displayString(formattingManager:activityType:)(*(_QWORD *)(v53 + 24), *(_QWORD *)(v53 + 32));
  v24 = v23;
  v55 = v22;
  v56 = v23;
  v25 = sub_100038CA0();
  v26 = StringProtocol.localizedUppercase.getter(&type metadata for String, v25);
  v28 = v27;
  swift_bridgeObjectRelease(v24, v27, v29, v30, v31, v32, v33, v34);
  v55 = v26;
  v56 = (void *)v28;
  v35 = Text.init<A>(_:)(&v55, &type metadata for String, v25);
  v37 = v36;
  v39 = v38;
  LOBYTE(KeyPath) = v40 & 1;
  sub_100021CC0(v21, (uint64_t)v13, &qword_10082D5B0);
  v41 = v54;
  sub_100021CC0((uint64_t)v13, v54, &qword_10082D5B0);
  v42 = v41 + *(int *)(sub_100047110(qword_10082D5B8) + 48);
  *(_QWORD *)v42 = v35;
  *(_QWORD *)(v42 + 8) = v37;
  *(_BYTE *)(v42 + 16) = KeyPath;
  *(_QWORD *)(v42 + 24) = v39;
  sub_1000E439C(v35, v37, KeyPath);
  swift_bridgeObjectRetain(v39);
  sub_10001BE90(v21, &qword_10082D5B0);
  sub_1000E4458(v35, v37, KeyPath);
  swift_bridgeObjectRelease(v39, v43, v44, v45, v46, v47, v48, v49);
  return sub_10001BE90((uint64_t)v13, &qword_10082D5B0);
}

uint64_t sub_1004BD3D0()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10[3];

  v1 = sub_100047110(&qword_100836EA0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0[1];
  v10[0] = *v0;
  v10[1] = v4;
  v10[2] = v0[2];
  *v3 = static Alignment.center.getter(v5);
  v3[1] = v6;
  v7 = sub_100047110(&qword_100836EA8);
  sub_1004BBBB4(v10, (uint64_t)v3 + *(int *)(v7 + 44));
  v8 = sub_100028384(&qword_100836EB0, &qword_100836EA0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.metricRow(padding:)(v1, v8, 0.0);
  return sub_10001BE90((uint64_t)v3, &qword_100836EA0);
}

unint64_t sub_1004BD4B4()
{
  unint64_t result;

  result = qword_100836F10;
  if (!qword_100836F10)
  {
    result = swift_getWitnessTable(&unk_1006319B8, &type metadata for IntervalsRangeSlider);
    atomic_store(result, (unint64_t *)&qword_100836F10);
  }
  return result;
}

uint64_t sub_1004BD4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for PowerZonesAlertZoneType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (unint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  dispatch thunk of PowerZonesAlertTargetZone.type.getter(v4);
  if ((*(unsigned int (**)(unint64_t *, uint64_t))(v3 + 88))(v6, v2) != enum case for PowerZonesAlertZoneType.automatic(_:))
  {
    v10 = (*(uint64_t (**)(unint64_t *, uint64_t))(v3 + 8))(v6, v2);
    return dispatch thunk of PowerZonesAlertTargetZone.applicableRange.getter(v10);
  }
  (*(void (**)(unint64_t *, uint64_t))(v3 + 96))(v6, v2);
  v7 = *v6;
  swift_bridgeObjectRelease(v6[1]);
  v8 = swift_retain(a1);
  v9 = PowerMetricsPublisher.livePowerZones.getter(v8);
  v10 = swift_release(a1);
  if (!v9)
    return dispatch thunk of PowerZonesAlertTargetZone.applicableRange.getter(v10);
  v11 = dispatch thunk of LiveZones.zones.getter(v10);
  result = swift_release(v9);
  if ((v11 & 0xC000000000000001) != 0)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v11);
    goto LABEL_7;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(_QWORD *)(v11 + 8 * v7 + 32);
    swift_retain(v13);
LABEL_7:
    v14 = swift_bridgeObjectRelease(v11);
    dispatch thunk of Zone.logicalSpan.getter(v14);
    return swift_release(v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BD698()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100836EA0);
  v1[1] = sub_100028384(&qword_100836EB0, &qword_100836EA0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 1);
}

_QWORD *sub_1004BD6FC(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *(_QWORD *)a2;
      *a1 = *(_QWORD *)a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = *(_QWORD *)&a2[v14];
    *(_QWORD *)((char *)a1 + v14) = v16;
    v17 = (char *)a1 + v15;
    v18 = &a2[v15];
    v19 = type metadata accessor for AttributedString(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(void (**)(char *, char *, uint64_t, __n128))(v20 + 16);
    v22 = swift_retain(v16);
    v21(v17, v18, v19, v22);
    ((void (*)(char *, char *, uint64_t))v21)((char *)a1 + a3[7], &a2[a3[7]], v19);
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v25 = &a2[v23];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v23], 1, v19))
    {
      v26 = sub_100047110((uint64_t *)&unk_10082EDF0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v21)(v24, v25, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    }
    v27 = a3[9];
    v28 = a3[10];
    v29 = *(_QWORD *)&a2[v27];
    *(_QWORD *)((char *)a1 + v27) = v29;
    v30 = (char *)a1 + v28;
    v31 = &a2[v28];
    v32 = *(_QWORD *)&a2[v28];
    v33 = *((_QWORD *)v31 + 1);
    v34 = v31[16];
    swift_retain(v29);
    sub_1000EB3F4(v32, v33, v34);
    *(_QWORD *)v30 = v32;
    *((_QWORD *)v30 + 1) = v33;
    v30[16] = v34;
  }
  return a1;
}

uint64_t sub_1004BD8DC(char *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  char *v10;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*(_QWORD *)a1);
  }
  swift_release(*(_QWORD *)&a1[a2[5]]);
  v6 = &a1[a2[6]];
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(char *, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(&a1[a2[7]], v7);
  v10 = &a1[a2[8]];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_release(*(_QWORD *)&a1[a2[9]]);
  return sub_1000EB41C(*(_QWORD *)&a1[a2[10]], *(_QWORD *)&a1[a2[10] + 8], a1[a2[10] + 16]);
}

_QWORD *sub_1004BD9E0(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(_QWORD *)&a2[v12];
  *(_QWORD *)((char *)a1 + v12) = v14;
  v15 = (char *)a1 + v13;
  v16 = &a2[v13];
  v17 = type metadata accessor for AttributedString(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, char *, uint64_t, __n128))(v18 + 16);
  v20 = swift_retain(v14);
  v19(v15, v16, v17, v20);
  ((void (*)(char *, char *, uint64_t))v19)((char *)a1 + a3[7], &a2[a3[7]], v17);
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = &a2[v21];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v21], 1, v17))
  {
    v24 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v19)(v22, v23, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  v25 = a3[9];
  v26 = a3[10];
  v27 = *(_QWORD *)&a2[v25];
  *(_QWORD *)((char *)a1 + v25) = v27;
  v28 = (char *)a1 + v26;
  v29 = &a2[v26];
  v30 = *(_QWORD *)&a2[v26];
  v31 = *((_QWORD *)v29 + 1);
  v32 = v29[16];
  swift_retain(v27);
  sub_1000EB3F4(v30, v31, v32);
  *(_QWORD *)v28 = v30;
  *((_QWORD *)v28 + 1) = v31;
  v28[16] = v32;
  return a1;
}

uint64_t *sub_1004BDB94(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(uint64_t *)((char *)a2 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for AttributedString(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(char *, char *, uint64_t))(v19 + 24);
  v20(v16, v17, v18);
  v20((char *)a1 + a3[7], (char *)a2 + a3[7], v18);
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v25 = v24((char *)a1 + v21, 1, v18);
  v26 = v24(v23, 1, v18);
  if (!v25)
  {
    if (!v26)
    {
      v20(v22, v23, v18);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    goto LABEL_11;
  }
  if (v26)
  {
LABEL_11:
    v27 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v23, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
LABEL_12:
  v28 = a3[9];
  v29 = *(uint64_t *)((char *)a2 + v28);
  v30 = *(uint64_t *)((char *)a1 + v28);
  *(uint64_t *)((char *)a1 + v28) = v29;
  swift_retain(v29);
  swift_release(v30);
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)v33;
  v35 = *((_QWORD *)v33 + 1);
  LOBYTE(v30) = v33[16];
  sub_1000EB3F4(*(_QWORD *)v33, v35, v30);
  v36 = *(_QWORD *)v32;
  v37 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = v34;
  *((_QWORD *)v32 + 1) = v35;
  v38 = v32[16];
  v32[16] = v30;
  sub_1000EB41C(v36, v37, v38);
  return a1;
}

char *sub_1004BDDCC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v13(&a1[a3[7]], &a2[a3[7]], v11);
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
  {
    v17 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  v18 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  return a1;
}

char *sub_1004BDF58(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release(v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for AttributedString(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  v15(&a1[a3[7]], &a2[a3[7]], v13);
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(&a1[v16], 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_10;
  }
  if (v21)
  {
LABEL_10:
    v22 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v18, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_11:
  v23 = a3[9];
  v24 = *(_QWORD *)&a1[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_release(v24);
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = v27[16];
  v29 = *(_QWORD *)v26;
  v30 = *((_QWORD *)v26 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v31 = v26[16];
  v26[16] = v28;
  sub_1000EB41C(v29, v30, v31);
  return a1;
}

uint64_t sub_1004BE16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004BE178);
}

uint64_t sub_1004BE178(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for AttributedString(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_100047110((uint64_t *)&unk_10082EDF0);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1004BE24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004BE258);
}

uint64_t sub_1004BE258(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for AttributedString(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_100047110((uint64_t *)&unk_10082EDF0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CompetitionRowView(uint64_t a1)
{
  uint64_t result;

  result = qword_100836FA8;
  if (!qword_100836FA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CompetitionRowView);
  return result;
}

void sub_1004BE364(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;

  sub_1000087BC(319, (unint64_t *)&qword_10081F4B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4 = type metadata accessor for AttributedString(319);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      sub_1000087BC(319, (unint64_t *)&qword_100827F18, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = (char *)&value witness table for Builtin.NativeObject + 64;
        v13 = &unk_100640EE8;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1004BE450(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9794, 1);
}

double sub_1004BE460@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned int v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  _OWORD v43[8];
  __int128 v44;
  _BYTE v45[151];
  char v46;
  _QWORD v47[2];
  _BYTE v48[152];
  char v49;
  _OWORD v50[11];
  char v51;
  _QWORD v52[2];
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[23];

  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for CompetitionRowView(0);
  v12 = a1 + *(int *)(v11 + 40);
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(_BYTE *)(v12 + 16);
  v42 = *(_QWORD *)(a1 + *(int *)(v11 + 20));
  swift_retain(v42);
  sub_1003F6E18((uint64_t)v10);
  v16 = sub_10054FD90((uint64_t)v10, v13, v14, v15);
  v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v18 = v17(v10, v4);
  if (v16 > 1)
  {
    v21 = 0x402E000000000000;
    v22 = 0x4008000000000000;
  }
  else
  {
    sub_1003F6E18((uint64_t)v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.xxLarge(_:), v4);
    v19 = static DynamicTypeSize.< infix(_:_:)(v10, v7);
    v17(v7, v4);
    v18 = v17(v10, v4);
    v20 = (v19 & 1) == 0;
    v21 = 0x4014000000000000;
    if (v20)
      v22 = 0x4014000000000000;
    else
      v22 = 0x4000000000000000;
  }
  v23 = static Edge.Set.all.getter(v18);
  v24 = v23;
  v25 = static HorizontalAlignment.leading.getter(v23);
  sub_1004BE850(a1, (uint64_t)v43);
  *(_OWORD *)&v45[39] = v43[2];
  *(_OWORD *)&v45[23] = v43[1];
  *(_OWORD *)&v45[103] = v43[6];
  *(_OWORD *)&v45[87] = v43[5];
  *(_OWORD *)&v45[119] = v43[7];
  *(_OWORD *)&v45[135] = v44;
  *(_OWORD *)&v45[55] = v43[3];
  *(_OWORD *)&v45[71] = v43[4];
  *(_OWORD *)&v45[7] = v43[0];
  v26 = *(_OWORD *)&v45[112];
  *(_OWORD *)&v48[113] = *(_OWORD *)&v45[112];
  v27 = *(_OWORD *)&v45[96];
  *(_OWORD *)&v48[97] = *(_OWORD *)&v45[96];
  v28 = *(_OWORD *)&v45[128];
  *(_OWORD *)&v48[129] = *(_OWORD *)&v45[128];
  v29 = *(_OWORD *)&v45[32];
  *(_OWORD *)&v48[33] = *(_OWORD *)&v45[32];
  v30 = *(_OWORD *)&v45[48];
  *(_OWORD *)&v48[49] = *(_OWORD *)&v45[48];
  v31 = *(_OWORD *)&v45[64];
  *(_OWORD *)&v48[65] = *(_OWORD *)&v45[64];
  v32 = *(_OWORD *)&v45[80];
  *(_OWORD *)&v48[81] = *(_OWORD *)&v45[80];
  v33 = *(_OWORD *)v45;
  *(_OWORD *)&v48[1] = *(_OWORD *)v45;
  v34 = *(_OWORD *)&v45[16];
  *(_OWORD *)&v48[17] = *(_OWORD *)&v45[16];
  *(_OWORD *)((char *)&v50[4] + 7) = *(_OWORD *)&v48[48];
  *(_OWORD *)((char *)&v50[3] + 7) = *(_OWORD *)&v48[32];
  *(_OWORD *)((char *)&v50[7] + 7) = *(_OWORD *)&v48[96];
  *(_OWORD *)((char *)&v50[8] + 7) = *(_OWORD *)&v48[112];
  v46 = 0;
  v47[0] = v25;
  v47[1] = 0;
  v48[0] = 0;
  *(_QWORD *)&v48[144] = *((_QWORD *)&v44 + 1);
  *(_OWORD *)((char *)&v50[9] + 7) = *(_OWORD *)&v48[128];
  *(_QWORD *)((char *)&v50[10] + 7) = *((_QWORD *)&v44 + 1);
  *(_OWORD *)((char *)&v50[5] + 7) = *(_OWORD *)&v48[64];
  *(_OWORD *)((char *)&v50[6] + 7) = *(_OWORD *)&v48[80];
  *(_OWORD *)((char *)v50 + 7) = (unint64_t)v25;
  *(_OWORD *)((char *)&v50[1] + 7) = *(_OWORD *)v48;
  *(_OWORD *)((char *)&v50[2] + 7) = *(_OWORD *)&v48[16];
  v35 = v50[6];
  *(_OWORD *)(a2 + 161) = v50[7];
  v36 = v50[9];
  *(_OWORD *)(a2 + 177) = v50[8];
  *(_OWORD *)(a2 + 193) = v36;
  *(_OWORD *)(a2 + 208) = *(_OWORD *)((char *)&v50[9] + 15);
  v37 = v50[2];
  *(_OWORD *)(a2 + 97) = v50[3];
  v38 = v50[5];
  *(_OWORD *)(a2 + 113) = v50[4];
  *(_OWORD *)(a2 + 129) = v38;
  *(_OWORD *)(a2 + 145) = v35;
  v39 = v50[1];
  *(_OWORD *)(a2 + 49) = v50[0];
  *(_OWORD *)(a2 + 65) = v39;
  *(_OWORD *)(a2 + 81) = v37;
  v60 = v27;
  v61 = v26;
  *(_OWORD *)v62 = v28;
  v56 = v29;
  v57 = v30;
  v58 = v31;
  v59 = v32;
  v54 = v33;
  v51 = 0;
  v49 = 0;
  v40 = v42;
  *(_QWORD *)a2 = v42;
  *(_BYTE *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v21;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 224) = 0;
  *(_BYTE *)(a2 + 232) = 0;
  v52[0] = v25;
  v52[1] = 0;
  v53 = 0;
  *(_QWORD *)&v62[15] = *(_QWORD *)&v45[143];
  v55 = v34;
  swift_retain(v40);
  sub_1004BF018((uint64_t)v47);
  sub_1004BF0C4((uint64_t)v52);
  *(_QWORD *)&result = swift_release(v40).n128_u64[0];
  return result;
}

double sub_1004BE850@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  uint64_t v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  char *v103;
  void (*v104)(char *, uint64_t, uint64_t);
  char *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[2];

  v4 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v4);
  v110 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString(0);
  v113 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v103 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v103 - v9;
  v11 = sub_1004BECD8();
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0.0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  if ((v11 & 1) != 0)
  {
    v21 = type metadata accessor for CompetitionRowView(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v10, a1 + *(int *)(v21 + 24), v6);
    v12 = Text.init(_:)(v10);
    v13 = v22;
    v15 = v23;
    v14 = v24 & 1;
    v25 = a1;
    v26 = static Edge.Set.vertical.getter(v12);
    v17 = EdgeInsets.init(_all:)(-1.0);
    v18 = v27;
    v19 = v28;
    v20 = v29;
    v16 = v26;
    a1 = v25;
  }
  v111 = v20;
  v112 = v12;
  v114 = v16;
  v115 = v19;
  v116 = v18;
  v117 = v17;
  v118 = v14;
  v119 = v15;
  v120 = v13;
  v30 = (int *)type metadata accessor for CompetitionRowView(0);
  v31 = a1 + v30[7];
  v32 = v113;
  v104 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
  v104(v10, v31, v6);
  v105 = v10;
  v33 = Text.init(_:)(v10);
  v34 = a1;
  v35 = v33;
  v37 = v36;
  v39 = v38;
  v40 = v6;
  v42 = v41 & 1;
  v43 = *(_QWORD *)(v34 + v30[9]);
  v121[0] = v43;
  swift_retain(v43);
  v44 = Text.foregroundStyle<A>(_:)(v121, v35, v37, v42, v39, &type metadata for Color, &protocol witness table for Color);
  v107 = v45;
  v108 = v44;
  v106 = v46;
  v109 = v47;
  LOBYTE(v46) = v42;
  v48 = v40;
  sub_1000E4458(v35, v37, v46);
  swift_release(v43);
  swift_bridgeObjectRelease(v39, v49, v50, v51, v52, v53, v54, v55);
  v56 = v110;
  sub_1004BF170(v34 + v30[8], v110);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v56, 1, v40) == 1)
  {
    sub_10001BE90(v56, (uint64_t *)&unk_10082EDF0);
    v110 = 0;
    v104 = 0;
    v105 = 0;
    v57 = 0;
  }
  else
  {
    v58 = v113;
    v59 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v103, v56, v48);
    v60 = v105;
    v104(v105, (uint64_t)v59, v48);
    v61 = Text.init(_:)(v60);
    v63 = v62;
    v65 = v64;
    v66 = v48;
    v68 = v67 & 1;
    v121[0] = v43;
    swift_retain(v43);
    v110 = Text.foregroundStyle<A>(_:)(v121, v61, v63, v68, v65, &type metadata for Color, &protocol witness table for Color);
    v104 = v70;
    v105 = v69;
    v57 = v71 & 1;
    sub_1000E4458(v61, v63, v68);
    swift_release(v43);
    swift_bridgeObjectRelease(v65, v72, v73, v74, v75, v76, v77, v78);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v66);
  }
  v79 = v106 & 1;
  LOBYTE(v121[0]) = v106 & 1;
  v80 = v112;
  *(_QWORD *)a2 = v112;
  v81 = v80;
  v82 = v120;
  *(_QWORD *)(a2 + 8) = v120;
  v83 = v82;
  LOBYTE(v82) = v118;
  *(_QWORD *)(a2 + 16) = v118;
  v84 = v82;
  v85 = v119;
  *(_QWORD *)(a2 + 24) = v119;
  *(_QWORD *)(a2 + 32) = v114;
  *(double *)(a2 + 40) = v117;
  *(_QWORD *)(a2 + 48) = v116;
  v87 = v110;
  v86 = v111;
  *(_QWORD *)(a2 + 56) = v115;
  *(_QWORD *)(a2 + 64) = v86;
  *(_BYTE *)(a2 + 72) = 0;
  v89 = v107;
  v88 = v108;
  *(_QWORD *)(a2 + 80) = v108;
  *(_QWORD *)(a2 + 88) = v89;
  *(_BYTE *)(a2 + 96) = v79;
  v90 = v109;
  *(_QWORD *)(a2 + 104) = v109;
  *(_QWORD *)(a2 + 112) = v87;
  v91 = (uint64_t)v105;
  *(_QWORD *)(a2 + 120) = v105;
  *(_QWORD *)(a2 + 128) = v57;
  v92 = v57;
  v93 = (uint64_t)v104;
  *(_QWORD *)(a2 + 136) = v104;
  v94 = v81;
  sub_100182758(v81, v83, v84, v85);
  sub_1000E439C(v88, v89, v79);
  swift_bridgeObjectRetain(v90);
  sub_100182758(v87, v91, v92, v93);
  sub_100182728(v87, v91, v92, v93);
  sub_1000E4458(v88, v89, v79);
  swift_bridgeObjectRelease(v90, v95, v96, v97, v98, v99, v100, v101);
  return sub_100182728(v94, v120, v118, v119);
}

uint64_t sub_1004BECD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, _QWORD, uint64_t);
  unint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char v16;
  char v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for CompetitionRowView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - v10;
  sub_1003F6E18((uint64_t)&v19 - v10);
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v12(v8, enum case for DynamicTypeSize.xxLarge(_:), v5);
  v13 = sub_1004BF1B8();
  v14 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v13);
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v8, v5);
  v15(v11, v5);
  sub_100487060(v1, (uint64_t)v4);
  if ((v14 & 1) != 0)
  {
    sub_1004870A4((uint64_t)v4);
    v16 = 0;
  }
  else
  {
    sub_1003F6E18((uint64_t)v11);
    v12(v8, enum case for DynamicTypeSize.xxxLarge(_:), v5);
    v17 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v13);
    v15(v8, v5);
    v15(v11, v5);
    sub_1004870A4((uint64_t)v4);
    v16 = v17 ^ 1;
  }
  return v16 & 1;
}

double sub_1004BEE8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  _OWORD v14[13];
  _OWORD v15[2];
  _OWORD v16[15];

  v3 = v2;
  v5 = static VerticalAlignment.center.getter(a1);
  sub_1004BE460(v3, (uint64_t)v14);
  *(_OWORD *)((char *)&v16[11] + 7) = v14[11];
  *(_OWORD *)((char *)&v16[12] + 7) = v14[12];
  *(_OWORD *)((char *)&v16[13] + 7) = v15[0];
  v16[14] = *(_OWORD *)((char *)v15 + 9);
  *(_OWORD *)((char *)&v16[7] + 7) = v14[7];
  *(_OWORD *)((char *)&v16[8] + 7) = v14[8];
  *(_OWORD *)((char *)&v16[9] + 7) = v14[9];
  *(_OWORD *)((char *)&v16[10] + 7) = v14[10];
  *(_OWORD *)((char *)&v16[3] + 7) = v14[3];
  *(_OWORD *)((char *)&v16[4] + 7) = v14[4];
  *(_OWORD *)((char *)&v16[5] + 7) = v14[5];
  *(_OWORD *)((char *)&v16[6] + 7) = v14[6];
  *(_OWORD *)((char *)v16 + 7) = v14[0];
  *(_OWORD *)((char *)&v16[1] + 7) = v14[1];
  *(_OWORD *)((char *)&v16[2] + 7) = v14[2];
  v6 = v16[10];
  *(_OWORD *)(a2 + 193) = v16[11];
  v7 = v16[13];
  *(_OWORD *)(a2 + 209) = v16[12];
  *(_OWORD *)(a2 + 225) = v7;
  *(_OWORD *)(a2 + 241) = v16[14];
  v8 = v16[6];
  *(_OWORD *)(a2 + 129) = v16[7];
  v9 = v16[9];
  *(_OWORD *)(a2 + 145) = v16[8];
  *(_OWORD *)(a2 + 161) = v9;
  *(_OWORD *)(a2 + 177) = v6;
  v10 = v16[2];
  *(_OWORD *)(a2 + 65) = v16[3];
  v11 = v16[5];
  *(_OWORD *)(a2 + 81) = v16[4];
  *(_OWORD *)(a2 + 97) = v11;
  *(_OWORD *)(a2 + 113) = v8;
  result = *(double *)v16;
  v13 = v16[1];
  *(_OWORD *)(a2 + 17) = v16[0];
  *(_OWORD *)(a2 + 33) = v13;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 49) = v10;
  return result;
}

uint64_t sub_1004BF018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  sub_100182758(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_1000E439C(v2, v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_100182758(v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1004BF0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  sub_100182728(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_1000E4458(v2, v3, v4);
  swift_bridgeObjectRelease(v5, v10, v11, v12, v13, v14, v15, v16);
  sub_100182728(v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1004BF170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_10082EDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004BF1B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008331E0;
  if (!qword_1008331E0)
  {
    v1 = type metadata accessor for DynamicTypeSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DynamicTypeSize, v1);
    atomic_store(result, (unint64_t *)&qword_1008331E0);
  }
  return result;
}

unint64_t sub_1004BF204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100836FF8;
  if (!qword_100836FF8)
  {
    v1 = sub_100007050(&qword_100837000);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100836FF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyDevice()
{
  return &type metadata for LegacyDevice;
}

Swift::Int sub_1004BF260()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v1 = v0;
  Hasher.init(_seed:)(v11, 0);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v11, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v11, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v1[4];
  v7 = v1[5];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v11, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(*((unsigned __int8 *)v1 + 48));
  Hasher._combine(_:)(*((_BYTE *)v1 + 49) & 1);
  v9 = v1[7];
  v8 = v1[8];
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v11, v9, v8);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_1004BF354(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::UInt v9;
  uint64_t v10;
  Swift::UInt8 v12;
  uint64_t v13;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = *((unsigned __int8 *)v1 + 48);
  v12 = *((_BYTE *)v1 + 49);
  v10 = v1[8];
  v13 = v1[7];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(a1, v7, v8);
  swift_bridgeObjectRelease(v8);
  Hasher._combine(_:)(v9);
  Hasher._combine(_:)(v12);
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(a1, v13, v10);
  return swift_bridgeObjectRelease(v10);
}

Swift::Int sub_1004BF448(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::UInt8 v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = *((unsigned __int8 *)v1 + 48);
  v9 = *((_BYTE *)v1 + 49);
  v10 = v1[8];
  v12 = v1[7];
  Hasher.init(_seed:)(v13, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v13, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v13, v4, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v13, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(v9);
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v13, v12, v10);
  swift_bridgeObjectRelease(v10);
  return Hasher._finalize()();
}

uint64_t sub_1004BF54C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1004BF5EC((uint64_t *)v7, (uint64_t)v9) & 1;
}

unint64_t sub_1004BF5A8()
{
  unint64_t result;

  result = qword_100837008;
  if (!qword_100837008)
  {
    result = swift_getWitnessTable(&unk_100640F74, &type metadata for LegacyDevice);
    atomic_store(result, (unint64_t *)&qword_100837008);
  }
  return result;
}

uint64_t sub_1004BF5EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = *(_QWORD *)(a2 + 32), v19 = *(_QWORD *)(a2 + 40), v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        if (*((unsigned __int8 *)a1 + 48) == *(unsigned __int8 *)(a2 + 48)
          && ((*((unsigned __int8 *)a1 + 49) ^ *(unsigned __int8 *)(a2 + 49)) & 1) == 0)
        {
          v21 = a1[7];
          v22 = a1[8];
          v23 = *(_QWORD *)(a2 + 56);
          v24 = *(_QWORD *)(a2 + 64);
          if (v21 == v23 && v22 == v24)
            return 1;
          else
            return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LegacyDevice.Platform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004BF72C + 4 * byte_100640F55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004BF760 + 4 * byte_100640F50[v4]))();
}

uint64_t sub_1004BF760(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BF768(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004BF770);
  return result;
}

uint64_t sub_1004BF77C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004BF784);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004BF788(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BF790(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyDevice.Platform()
{
  return &type metadata for LegacyDevice.Platform;
}

unint64_t sub_1004BF7B0()
{
  unint64_t result;

  result = qword_100837010;
  if (!qword_100837010)
  {
    result = swift_getWitnessTable(&unk_100641060, &type metadata for LegacyDevice.Platform);
    atomic_store(result, (unint64_t *)&qword_100837010);
  }
  return result;
}

uint64_t sub_1004BF7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(char *, unint64_t, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, unint64_t, uint64_t);
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);

  v103 = a1;
  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizationFeature(0);
  v83 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v82 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for SleepingSampleDataType(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for SleepingSampleAggregate(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Calendar(0);
  v101 = *(_QWORD *)(v11 - 8);
  v102 = v11;
  __chkstk_darwin(v11);
  v100 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GregorianDayRange(0);
  v98 = *(_QWORD *)(v13 - 8);
  v99 = v13;
  __chkstk_darwin(v13);
  v97 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DayIndex(0);
  v95 = *(_QWORD *)(v15 - 8);
  v96 = v15;
  __chkstk_darwin(v15);
  v94 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v92 = *(_QWORD *)(v17 - 8);
  v93 = v17;
  v18 = __chkstk_darwin(v17);
  v91 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v90 = (char *)&v70 - v20;
  v21 = type metadata accessor for SleepingSampleBaselineComparison(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_100837020);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v84 = (char *)&v70 - v30;
  v104 = v2;
  v31 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter(v29);
  v32 = v31;
  v33 = *(_QWORD *)(v31 + 16);
  if (v33)
  {
    v72 = v28;
    v73 = v7;
    v74 = v6;
    v75 = a2;
    v34 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v71 = v31;
    v35 = v31 + v34;
    v85 = *(_QWORD *)(v22 + 72);
    v36 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v88 = v22;
    v89 = v36;
    v86 = v24;
    v87 = v21;
    v37 = v94;
    v38 = v97;
    v39 = v100;
    v40 = v90;
    while (1)
    {
      v105 = v33;
      v41 = v89(v24, v35, v21);
      v42 = SleepingSampleBaselineComparison.morningIndex.getter(v41);
      v43 = SleepingSampleViewModel.dayRange.getter(v42);
      GregorianDayRange.gregorianCalendar.getter(v43);
      v44 = v99;
      v106 = *(void (**)(char *, uint64_t))(v98 + 8);
      v106(v38, v99);
      DayIndex.startDate(in:)(v39);
      v45 = v102;
      v46 = *(void (**)(char *, uint64_t))(v101 + 8);
      v46(v39, v102);
      v47 = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v37, v96);
      v48 = SleepingSampleViewModel.dayRange.getter(v47);
      GregorianDayRange.gregorianCalendar.getter(v48);
      v106(v38, v44);
      v49 = v91;
      DayIndex.startDate(in:)(v39);
      v46(v39, v45);
      v50 = Date.isSameDay(as:)(v49);
      v51 = *(void (**)(char *, uint64_t))(v92 + 8);
      v52 = v49;
      v53 = v93;
      v51(v52, v93);
      v51(v40, v53);
      if ((v50 & 1) != 0)
        break;
      v21 = v87;
      v22 = v88;
      v24 = v86;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v86, v87);
      v35 += v85;
      v33 = v105 - 1;
      if (v105 == 1)
      {
        v54 = 1;
        v6 = v74;
        v7 = v73;
        v55 = (uint64_t)v84;
        goto LABEL_8;
      }
    }
    v21 = v87;
    v22 = v88;
    v55 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v84, v86, v87);
    v54 = 0;
    v6 = v74;
    v7 = v73;
LABEL_8:
    v28 = v72;
    v32 = v71;
  }
  else
  {
    v54 = 1;
    v55 = (uint64_t)v84;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v55, v54, 1, v21);
  swift_bridgeObjectRelease(v32);
  sub_100021CC0(v55, (uint64_t)v28, &qword_100837020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v28, 1, v21) == 1)
  {
    sub_10001BE90((uint64_t)v28, &qword_100837020);
LABEL_13:
    v63 = v83;
    v64 = v82;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, enum case for LocalizationFeature.workout(_:), v7);
    v65 = static Localization.workoutUILocalizedString(_:feature:)(0x45554C41564F4ELL, 0xE700000000000000, v64);
    v67 = v66;
    v68.n128_f64[0] = (*(double (**)(char *, uint64_t))(v63 + 8))(v64, v7);
    AttributeContainer.init()(v68);
    AttributedString.init(_:attributes:)(v65, v67, v6);
    return sub_10001BE90(v55, &qword_100837020);
  }
  v56 = v79;
  SleepingSampleBaselineComparison.aggregate.getter();
  v57 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  v58 = (void *)SleepingSampleAggregate.quantity.getter(v57);
  v59 = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v56, v81);
  if (!v58)
    goto LABEL_13;
  v60 = v76;
  v61 = SleepingSampleViewModel.dataType.getter(v59);
  v62 = (void *)SleepingSampleViewModel.preferredAggregateValueUnit.getter(v61);
  HKQuantity.formattedAttributedValue(for:unit:)(v60, v62);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v60, v78);
  return sub_10001BE90(v55, &qword_100837020);
}

uint64_t sub_1004BFEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(char *, unint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;

  v77 = a1;
  v2 = type metadata accessor for SleepingSampleAggregate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v59 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v75 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  __chkstk_darwin(v5);
  v74 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GregorianDayRange(0);
  v72 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  __chkstk_darwin(v7);
  v71 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DayIndex(0);
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  __chkstk_darwin(v9);
  v68 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v66 = *(_QWORD *)(v11 - 8);
  v67 = v11;
  v12 = __chkstk_darwin(v11);
  v65 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v80 = (char *)&v54 - v14;
  v15 = type metadata accessor for SleepingSampleBaselineComparison(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100837020);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v54 - v24;
  v78 = v1;
  v26 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter(v23);
  v27 = v26;
  v28 = *(_QWORD *)(v26 + 16);
  if (v28)
  {
    v55 = v22;
    v56 = v25;
    v57 = v3;
    v58 = v2;
    v29 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v54 = v26;
    v30 = v26 + v29;
    v60 = *(_QWORD *)(v16 + 72);
    v61 = v15;
    v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v16 + 16);
    v63 = v16;
    v64 = v31;
    v62 = v18;
    v32 = v68;
    v33 = v71;
    v34 = v73;
    while (1)
    {
      v79 = v28;
      v35 = v64(v18, v30, v15);
      v36 = SleepingSampleBaselineComparison.morningIndex.getter(v35);
      v37 = SleepingSampleViewModel.dayRange.getter(v36);
      v38 = v74;
      GregorianDayRange.gregorianCalendar.getter(v37);
      v39 = *(void (**)(char *, uint64_t))(v72 + 8);
      v39(v33, v34);
      DayIndex.startDate(in:)(v38);
      v40 = v76;
      v41 = *(void (**)(char *, uint64_t))(v75 + 8);
      v41(v38, v76);
      v42 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v32, v70);
      v43 = SleepingSampleViewModel.dayRange.getter(v42);
      GregorianDayRange.gregorianCalendar.getter(v43);
      v39(v33, v34);
      v44 = v65;
      DayIndex.startDate(in:)(v38);
      v41(v38, v40);
      v45 = v80;
      v46 = Date.isSameDay(as:)(v44);
      v47 = v67;
      v48 = *(void (**)(char *, uint64_t))(v66 + 8);
      v48(v44, v67);
      v48(v45, v47);
      if ((v46 & 1) != 0)
        break;
      v18 = v62;
      v16 = v63;
      v15 = v61;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v61);
      v30 += v60;
      v28 = v79 - 1;
      if (v79 == 1)
      {
        v49 = 1;
        v2 = v58;
        v3 = v57;
        v25 = v56;
        goto LABEL_8;
      }
    }
    v16 = v63;
    v25 = v56;
    v15 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v56, v62, v61);
    v49 = 0;
    v2 = v58;
    v3 = v57;
LABEL_8:
    v22 = v55;
    v27 = v54;
  }
  else
  {
    v49 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v25, v49, 1, v15);
  swift_bridgeObjectRelease(v27);
  sub_100021CC0((uint64_t)v25, (uint64_t)v22, &qword_100837020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15) == 1)
  {
    sub_10001BE90((uint64_t)v25, &qword_100837020);
    sub_10001BE90((uint64_t)v22, &qword_100837020);
  }
  else
  {
    v50 = v59;
    SleepingSampleBaselineComparison.aggregate.getter();
    v51 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    v52 = (void *)SleepingSampleAggregate.quantity.getter(v51);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v50, v2);
    sub_10001BE90((uint64_t)v25, &qword_100837020);
    if (v52)
    {

      return 1;
    }
  }
  return 0;
}

uint64_t sub_1004C03BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004C03E4(a1, a2);
}

uint64_t sub_1004C03E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;
  char *v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t);
  uint64_t (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v87 = a2;
  v3 = type metadata accessor for Color.RGBColorSpace(0);
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  __chkstk_darwin(v3);
  v79 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin(v5);
  v73 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v80 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  __chkstk_darwin(v7);
  v78 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DayIndex(0);
  v88 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v72 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v83 = (char *)&v67 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - v14;
  v70 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v70);
  v82 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v67 - v18;
  v84 = type metadata accessor for GregorianDayRange(0);
  v20 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v71 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - v23;
  v25 = sub_100047110(&qword_100837018);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  v30 = (char *)&v67 - v29;
  v31 = type metadata accessor for BaselineRelativeValue(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = __chkstk_darwin(v31);
  v86 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = SleepingSampleBaselineComparison.relativeComparison.getter(v33);
  v85 = a1;
  if ((v36 & 1) == 0)
  {
    *v27 = v35;
    v37 = (unsigned int *)&enum case for BaselineRelativeValue.determinate(_:);
LABEL_5:
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v32 + 104))(v27, *v37, v31);
    v38 = 0;
    goto LABEL_7;
  }
  if ((SleepingSampleBaselineComparison.isWarmupDay.getter(v35) & 1) != 0)
  {
    v37 = (unsigned int *)&enum case for BaselineRelativeValue.indeterminate(_:);
    goto LABEL_5;
  }
  v38 = 1;
LABEL_7:
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v27, v38, 1, v31);
  sub_1004C09F4((uint64_t)v27, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_10001BE90((uint64_t)v30, &qword_100837018);
LABEL_16:
    v61 = v87;
    v62 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 1, 1, v62);
  }
  v69 = *(uint64_t (**)(char *, char *, uint64_t))(v32 + 32);
  v39 = v69(v86, v30, v31);
  v40 = SleepingSampleViewModel.dayRange.getter(v39);
  GregorianDayRange.dayIndexRange.getter(v40);
  v68 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  v41 = v68(v24, v84);
  SleepingSampleBaselineComparison.morningIndex.getter(v41);
  v42 = sub_1004C15E4((unint64_t *)&qword_100823548, (uint64_t)&protocol conformance descriptor for DayIndex);
  v43 = dispatch thunk of static Comparable.>= infix(_:_:)(v15, v19, v9, v42);
  v44 = v83;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v83, v15, v9);
  v45 = v82;
  sub_100021CC0((uint64_t)v19, v82, &qword_100823530);
  if ((v43 & 1) != 0)
    v46 = dispatch thunk of static Comparable.<= infix(_:_:)(v44, v45 + *(int *)(v70 + 36), v9, v42);
  else
    v46 = 0;
  sub_10001BE90(v45, &qword_100823530);
  v47 = *(void (**)(char *, uint64_t))(v88 + 8);
  v47(v44, v9);
  v47(v15, v9);
  v48 = sub_10001BE90((uint64_t)v19, &qword_100823530);
  if ((v46 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v86, v31);
    goto LABEL_16;
  }
  v49 = v72;
  v50 = SleepingSampleBaselineComparison.morningIndex.getter(v48);
  v51 = v71;
  v52 = SleepingSampleViewModel.dayRange.getter(v50);
  v53 = v73;
  GregorianDayRange.gregorianCalendar.getter(v52);
  v68(v51, v84);
  v54 = v78;
  DayIndex.startDate(in:)(v53);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v75);
  v55 = ((uint64_t (*)(char *, uint64_t))v47)(v49, v9);
  v56 = SleepingSampleBaselineComparison.isOutOfRange.getter(v55);
  v57 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v79, enum case for Color.RGBColorSpace.displayP3(_:), v77);
  if ((v56 & 1) != 0)
  {
    v58 = 0.909803922;
    v59 = 0.509803922;
    v60 = 0.949019608;
  }
  else
  {
    v58 = 0.419607843;
    v59 = 0.650980392;
    v60 = 0.945098039;
  }
  v64 = Color.init(_:red:green:blue:opacity:)(v57, v58, v59, v60, 1.0);
  v65 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
  v66 = v87;
  v69((char *)(v87 + *(int *)(v65 + 20)), v86, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v66, v54, v81);
  *(_QWORD *)(v66 + *(int *)(v65 + 24)) = v64;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v66, 0, 1, v65);
}

uint64_t sub_1004C09F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100837018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1004C0A3C(CHWorkoutDetailHeartRateTableViewCell *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  const char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  const char *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  const char *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  unint64_t v93;
  unint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  char *v101;
  uint64_t v102;
  char v103;
  char *v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char v130;
  void (*v131)(char *, uint64_t);
  const char *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  const char *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  char v146;
  uint64_t v147;
  SEL v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  SEL v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  char *v189;
  char *v190;
  CHWorkoutDetailHeartRateTableViewCell *v191;
  char *v192;
  void (*v193)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  char *v196;
  CHWorkoutDetailHeartRateTableViewCell *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char v209[8];
  uint64_t v210;

  v3 = v2;
  v195 = type metadata accessor for DayIndex(0);
  v191 = *(CHWorkoutDetailHeartRateTableViewCell **)(v195 - 8);
  __chkstk_darwin(v195);
  v196 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v192 = (char *)&v175 - v8;
  v188 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v188);
  v189 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Calendar(0);
  v204 = *(_QWORD *)(v10 - 8);
  v205 = v10;
  __chkstk_darwin(v10);
  v203 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for GregorianDayRange(0);
  v198 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v207 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v201 = *(_QWORD *)(v13 - 8);
  v202 = v13;
  __chkstk_darwin(v13);
  v200 = (char *)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v199 = (char *)&v175 - v16;
  v17 = sub_100047110(&qword_1008236A8);
  __chkstk_darwin(v17);
  v185 = (uint64_t)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v182 = (uint64_t)&v175 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v175 - v22;
  v194 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
  v24 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v180 = (uint64_t)&v175 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v179 = (uint64_t)&v175 - v27;
  __chkstk_darwin(v28);
  v181 = (char *)&v175 - v29;
  __chkstk_darwin(v30);
  v178 = (uint64_t)&v175 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v175 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v175 - v36;
  __chkstk_darwin(v38);
  v183 = (uint64_t)&v175 - v39;
  v41 = (CHWorkoutDetailHeartRateTableViewCell *)SleepingSampleViewModel.chronologicalBaselineComparisons.getter(v40);
  v210 = v3;
  v42 = sub_1005B9B24((void (*)(_QWORD, __n128))sub_1004C1578, (uint64_t)v209, v41);
  v184 = 0;
  v43 = v41;
  v44 = v42;
  swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);
  v52 = *(_QWORD *)v44->cellPadding;
  v187 = a2;
  v186 = v24;
  v206 = v3;
  if (v52)
  {
    v177 = v23;
    v190 = v34;
    v197 = a1;
    v53 = (uint64_t)v44 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v54 = *(_QWORD *)(v24 + 72);
    v176 = v44;
    swift_bridgeObjectRetain(v44);
    v56 = v201;
    v55 = v202;
    v57 = v199;
    while (1)
    {
      sub_1004C15A0(v53, (uint64_t)v37);
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v56 + 16))(v57, v37, v55);
      v59 = v207;
      v60 = SleepingSampleViewModel.dayRange.getter(v58);
      v61 = v203;
      GregorianDayRange.gregorianCalendar.getter(v60);
      (*(void (**)(char *, uint64_t))(v198 + 8))(v59, v208);
      v62 = v200;
      DayIndex.startDate(in:)(v61);
      (*(void (**)(char *, uint64_t))(v204 + 8))(v61, v205);
      v63 = Date.isSameDay(as:)(v62);
      v64 = *(void (**)(char *, uint64_t))(v56 + 8);
      v64(v62, v55);
      v64(v57, v55);
      if ((v63 & 1) != 0)
        break;
      sub_1000E4470((uint64_t)v37);
      v53 += v54;
      if (!--v52)
      {
        v44 = v176;
        swift_bridgeObjectRelease(v176, v72, v73, v74, v75, v76, v77, v78);
        v24 = v186;
        v3 = v206;
        a1 = v197;
        v34 = v190;
        v23 = v177;
        goto LABEL_6;
      }
    }
    v44 = v176;
    swift_bridgeObjectRelease(v176, v65, v66, v67, v68, v69, v70, v71);
    v23 = v177;
    sub_1004C1624((uint64_t)v37, (uint64_t)v177);
    v24 = v186;
    v79 = v194;
    v193 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v186 + 56);
    v193((uint64_t)v23, 0, 1, v194);
    v3 = v206;
    a1 = v197;
    v34 = v190;
  }
  else
  {
LABEL_6:
    v79 = v194;
    v193 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v193((uint64_t)v23, 1, 1, v194);
  }
  swift_bridgeObjectRelease(v44, v80, v81, v82, v83, v84, v85, v86);
  v190 = *(char **)(v24 + 48);
  v87 = ((uint64_t (*)(char *, uint64_t, uint64_t))v190)(v23, 1, v79);
  v88 = v195;
  if (v87 == 1)
  {
    v89 = sub_10001BE90((uint64_t)v23, &qword_1008236A8);
    v197 = &_swiftEmptyArrayStorage;
  }
  else
  {
    v90 = (uint64_t)v23;
    v91 = v183;
    sub_1004C1624(v90, v183);
    sub_1004C15A0(v91, (uint64_t)v34);
    v92 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(0, 1, 1, (unint64_t)&_swiftEmptyArrayStorage);
    v94 = *(_QWORD *)v92->cellPadding;
    v93 = *(_QWORD *)v92->cellInset;
    v197 = v92;
    if (v94 >= v93 >> 1)
      v197 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(v93 > 1, v94 + 1, 1, (unint64_t)v197);
    v95 = v197;
    *(_QWORD *)v197->cellPadding = v94 + 1;
    sub_1004C1624((uint64_t)v34, (uint64_t)v95+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v94);
    v89 = sub_1000E4470(v91);
  }
  v96 = v207;
  v97 = SleepingSampleViewModel.dayRange.getter(v89);
  v98 = (uint64_t)v189;
  GregorianDayRange.dayIndexRange.getter(v97);
  v99 = v3;
  v198 = *(_QWORD *)(v198 + 8);
  ((void (*)(char *, uint64_t))v198)(v96, v208);
  v100 = v191;
  v101 = v192;
  (*(void (**)(char *, uint64_t, uint64_t))v191->cellPadding)(v192, v98 + *(int *)(v188 + 36), v88);
  sub_10001BE90(v98, &qword_100823530);
  v102 = sub_1004C15E4(&qword_100823538, (uint64_t)&protocol conformance descriptor for DayIndex);
  v103 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v101, v88, v102);
  v104 = *(char **)v100->heartRateController;
  ((void (*)(char *, uint64_t))v104)(v101, v88);
  if ((v103 & 1) != 0)
  {
    v105 = v197;
    v106 = v193;
    if ((v187 & 1) != 0)
      return v105;
    goto LABEL_32;
  }
  v107 = 1;
  DayIndex.init(integerLiteral:)(1);
  static DayIndex.+ infix(_:_:)(a1, v101);
  v108 = ((uint64_t (*)(char *, uint64_t))v104)(v101, v88);
  v109 = (CHWorkoutDetailHeartRateTableViewCell *)SleepingSampleViewModel.chronologicalBaselineComparisons.getter(v108);
  __chkstk_darwin(v109);
  *(&v175 - 2) = v99;
  v110 = sub_1005B9B24((void (*)(_QWORD, __n128))sub_1004C1668, (uint64_t)(&v175 - 4), v109);
  swift_bridgeObjectRelease(v109, v111, v112, v113, v114, v115, v116, v117);
  v118 = *(_QWORD *)v110->cellPadding;
  v106 = v193;
  if (v118)
  {
    v192 = v104;
    v119 = (uint64_t)v110 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v120 = *(_QWORD *)(v24 + 72);
    v191 = v110;
    swift_bridgeObjectRetain(v110);
    v121 = (uint64_t)v181;
    v123 = v201;
    v122 = v202;
    v124 = v199;
    while (1)
    {
      sub_1004C15A0(v119, v121);
      v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 16))(v124, v121, v122);
      v126 = v207;
      v127 = SleepingSampleViewModel.dayRange.getter(v125);
      v128 = v203;
      GregorianDayRange.gregorianCalendar.getter(v127);
      ((void (*)(char *, uint64_t))v198)(v126, v208);
      v129 = v200;
      DayIndex.startDate(in:)(v128);
      (*(void (**)(char *, uint64_t))(v204 + 8))(v128, v205);
      v130 = Date.isSameDay(as:)(v129);
      v131 = *(void (**)(char *, uint64_t))(v123 + 8);
      v131(v129, v122);
      v131(v124, v122);
      if ((v130 & 1) != 0)
        break;
      sub_1000E4470(v121);
      v119 += v120;
      if (!--v118)
      {
        v110 = v191;
        swift_bridgeObjectRelease(v191, v139, v140, v141, v142, v143, v144, v145);
        v107 = 1;
        v146 = v187;
        v24 = v186;
        v147 = v182;
        goto LABEL_23;
      }
    }
    v110 = v191;
    swift_bridgeObjectRelease(v191, v132, v133, v134, v135, v136, v137, v138);
    v147 = v182;
    sub_1004C1624(v121, v182);
    v107 = 0;
    v146 = v187;
    v24 = v186;
LABEL_23:
    v106 = v193;
    v104 = v192;
  }
  else
  {
    v147 = v182;
    v146 = v187;
  }
  v79 = v194;
  v106(v147, v107, 1, v194);
  swift_bridgeObjectRelease(v110, v148, v149, v150, v151, v152, v153, v154);
  ((void (*)(char *, uint64_t))v104)(v196, v195);
  v155 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v190)(v147, 1, v79);
  v105 = v197;
  if (v155 == 1)
  {
    sub_10001BE90(v147, &qword_1008236A8);
    if ((v146 & 1) != 0)
      return v105;
    goto LABEL_32;
  }
  v156 = v178;
  sub_1004C1624(v147, v178);
  v157 = v179;
  sub_1004C15A0(v156, v179);
  if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
    v105 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(0, *(_QWORD *)v105->cellPadding + 1, 1, (unint64_t)v105);
  v159 = *(_QWORD *)v105->cellPadding;
  v158 = *(_QWORD *)v105->cellInset;
  if (v159 >= v158 >> 1)
    v105 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(v158 > 1, v159 + 1, 1, (unint64_t)v105);
  *(_QWORD *)v105->cellPadding = v159 + 1;
  sub_1004C1624(v157, (uint64_t)v105+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v159);
  sub_1000E4470(v156);
  if ((v146 & 1) == 0)
  {
LABEL_32:
    v160 = *(_QWORD *)v105->cellPadding;
    if (v160)
    {
      v161 = v185;
      sub_1004C15A0((uint64_t)v105+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * (v160 - 1), v185);
      v162 = 0;
    }
    else
    {
      v162 = 1;
      v161 = v185;
    }
    v106(v161, v162, 1, v79);
    swift_bridgeObjectRelease(v105, v163, v164, v165, v166, v167, v168, v169);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v190)(v161, 1, v79) == 1)
    {
      sub_10001BE90(v161, &qword_1008236A8);
      return &_swiftEmptyArrayStorage;
    }
    else
    {
      v170 = v180;
      sub_1004C1624(v161, v180);
      v171 = sub_100047110(&qword_100822200);
      v172 = *(unsigned __int8 *)(v24 + 80);
      v173 = (v172 + 32) & ~v172;
      v105 = (CHWorkoutDetailHeartRateTableViewCell *)swift_allocObject(v171, v173 + *(_QWORD *)(v24 + 72), v172 | 7);
      *(_OWORD *)v105->cellPadding = xmmword_100622F90;
      sub_1004C1624(v170, (uint64_t)v105 + v173);
    }
  }
  return v105;
}

uint64_t sub_1004C1578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004C03E4(a1, a2);
}

uint64_t sub_1004C15A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C15E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DayIndex(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004C1624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C1668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004C1578(a1, a2);
}

id sub_1004C167C(char a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t *v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  NSString v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v6 = (uint64_t *)&v3[OBJC_IVAR___CHWhatsNewViewController_buttonHandler];
  *v6 = a2;
  v6[1] = a3;
  v3[OBJC_IVAR___CHWhatsNewViewController_fitnessPlusAvailable] = a1;
  v7 = (void *)objc_opt_self(NSBundle);
  sub_10003AFE0(a2, a3);
  v8 = objc_msgSend(v7, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  v23.receiver = v3;
  v23.super_class = (Class)type metadata accessor for WhatsNewViewController();
  v21 = objc_msgSendSuper2(&v23, "initWithTitle:detailText:icon:contentLayout:", v13, 0, 0, 2);
  sub_100022BA4(a2, a3);

  return v21;
}

void sub_1004C183C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  __CFString **v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  NSString v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  NSString v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSString v36;
  id v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  NSString v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  NSString v48;
  id v49;
  id v50;
  NSString v51;
  id v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  NSString v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  NSString v64;
  id v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  NSString v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  NSString v76;
  id v77;
  id v78;
  NSString v79;
  id v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  NSString v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  NSString v92;
  id v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  void *v96;
  NSString v97;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  void *v106;
  unsigned __int8 v107;
  NSString v108;
  id v109;
  id v110;
  NSString v111;
  id v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  NSString v115;
  SEL v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  NSString v124;
  id v125;
  CHWorkoutDetailHeartRateTableViewCell *v126;
  CHWorkoutDetailHeartRateTableViewCell *v127;
  NSString v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  NSString v139;
  id v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  CHWorkoutDetailHeartRateTableViewCell *v142;
  NSString v143;
  SEL v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  NSString v154;
  id v155;
  id v156;
  void *v157;
  id v158;
  objc_super v159;

  v159.receiver = v0;
  v159.super_class = (Class)type metadata accessor for WhatsNewViewController();
  objc_msgSendSuper2(&v159, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(_HKBehavior);
  v6 = objc_msgSend(v5, "sharedBehavior");
  if (!v6)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "isStandalonePhoneFitnessMode");

  v158 = v3;
  if ((v8 & 1) != 0)
    v9 = &off_10077A798;
  else
    v9 = &off_10077A790;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v9);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
  v20 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v12);

  v21 = (void *)objc_opt_self(NSBundle);
  v22 = objc_msgSend(v21, "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
  v35 = objc_msgSend(v21, "mainBundle");
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;

  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
  v157 = v20;
  objc_msgSend(v0, "addBulletedListItemWithTitle:description:image:", v27, v40, v20);

  if (*((_BYTE *)v0 + OBJC_IVAR___CHWhatsNewViewController_fitnessPlusAvailable) == 1)
  {
    v48 = String._bridgeToObjectiveC()();
    v49 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v48);

    v50 = objc_msgSend(v21, "mainBundle");
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v50, "localizedStringForKey:value:table:", v51, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v54 = v53;

    v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v54, v56, v57, v58, v59, v60, v61, v62);
    v63 = objc_msgSend(v21, "mainBundle");
    v64 = String._bridgeToObjectiveC()();
    v65 = objc_msgSend(v63, "localizedStringForKey:value:table:", v64, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v67 = v66;

    v68 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v67, v69, v70, v71, v72, v73, v74, v75);
    objc_msgSend(v0, "addBulletedListItemWithTitle:description:image:", v55, v68, v49);

  }
  v76 = String._bridgeToObjectiveC()();
  v156 = (id)objc_opt_self(UIImage);
  v77 = objc_msgSend(v156, "smm_systemImageNamed:", v76);

  v78 = objc_msgSend(v21, "mainBundle");
  v79 = String._bridgeToObjectiveC()();
  v80 = objc_msgSend(v78, "localizedStringForKey:value:table:", v79, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
  v82 = v81;

  v83 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v82, v84, v85, v86, v87, v88, v89, v90);
  v91 = objc_msgSend(v21, "mainBundle");
  v92 = String._bridgeToObjectiveC()();
  v93 = objc_msgSend(v91, "localizedStringForKey:value:table:", v92, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
  v95 = v94;

  v96 = v77;
  v97 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v95, v98, v99, v100, v101, v102, v103, v104);
  objc_msgSend(v0, "addBulletedListItemWithTitle:description:image:", v83, v97, v77);

  v105 = objc_msgSend(v5, "sharedBehavior");
  if (!v105)
    goto LABEL_14;
  v106 = v105;
  v107 = objc_msgSend(v105, "isStandalonePhoneFitnessMode");

  if ((v107 & 1) == 0)
  {
    v108 = String._bridgeToObjectiveC()();
    v109 = objc_msgSend(v156, "smm_systemImageNamed:", v108);

    v110 = objc_msgSend(v21, "mainBundle");
    v111 = String._bridgeToObjectiveC()();
    v112 = objc_msgSend(v110, "localizedStringForKey:value:table:", v111, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
    v114 = v113;

    v115 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v114, v116, v117, v118, v119, v120, v121, v122);
    v123 = objc_msgSend(v21, "mainBundle");
    v124 = String._bridgeToObjectiveC()();
    v125 = objc_msgSend(v123, "localizedStringForKey:value:table:", v124, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
    v127 = v126;

    v128 = String._bridgeToObjectiveC()();
    v129 = v127;
    v96 = v77;
    swift_bridgeObjectRelease(v129, v130, v131, v132, v133, v134, v135, v136);
    objc_msgSend(v0, "addBulletedListItemWithTitle:description:image:", v115, v128, v109);

  }
  v137 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  objc_msgSend(v137, "addTarget:action:forControlEvents:", v0, "didTapContinueButton", 64);
  v138 = objc_msgSend(v21, "mainBundle");
  v139 = String._bridgeToObjectiveC()();
  v140 = objc_msgSend(v138, "localizedStringForKey:value:table:", v139, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v142 = v141;

  v143 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v142, v144, v145, v146, v147, v148, v149, v150);
  objc_msgSend(v137, "setTitle:forState:", v143, 0);

  v151 = v137;
  v152 = objc_msgSend(v158, "tertiarySystemGroupedBackgroundColor");
  objc_msgSend(v151, "setTintColor:", v152);

  v153 = v151;
  v154 = String._bridgeToObjectiveC()();
  objc_msgSend(v153, "setAccessibilityIdentifier:", v154);

  v155 = objc_msgSend(v0, "buttonTray");
  objc_msgSend(v155, "addButton:", v153);

  objc_msgSend(v0, "setModalInPresentation:", 1);
}

id sub_1004C22E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WhatsNewViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WhatsNewViewController()
{
  return objc_opt_self(CHWhatsNewViewController);
}

uint64_t sub_1004C2344()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1004C2368()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  return v1;
}

void sub_1004C23D4(uint64_t a1)
{
  sub_1003868E8(a1, &UIFontTextStyleBody, &qword_100837060);
}

uint64_t sub_1004C23E8()
{
  uint64_t result;

  result = static Font.body.getter();
  qword_100837068 = result;
  return result;
}

uint64_t sub_1004C2404()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.systemFont(ofSize:weight:design:)(*(_QWORD *)&UIFontWeightRegular, 0, UIFontDescriptorSystemDesignRounded, 28.0);
  qword_100837070 = result;
  return result;
}

uint64_t sub_1004C2464()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.title(_:), v3);
  v7 = enum case for Font.Design.rounded(_:);
  v8 = type metadata accessor for Font.Design(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  v11 = static Font.Weight.medium.getter(v10);
  v12 = static Font.system(_:design:weight:)(v6, v2, *(_QWORD *)&v11, 0);
  sub_10001BE90((uint64_t)v2, &qword_10081F2F8);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_100837078 = v12;
  return result;
}

id sub_1004C25B0()
{
  id result;

  result = sub_1004C25CC();
  qword_100837080 = (uint64_t)result;
  return result;
}

id sub_1004C25CC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSString *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  double v17;
  id v18;
  _BYTE v20[64];
  _BYTE v21[48];

  v0 = sub_100047110(&qword_10082FB08);
  inited = swift_initStackObject(v0, v21);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v2 = sub_100047110(&qword_10082FB10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100622F90;
  v4 = sub_100047110(&qword_10082FB18);
  v5 = swift_initStackObject(v4, v20);
  *(_OWORD *)(v5 + 16) = xmmword_100620BC0;
  v6 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 40) = 38;
  v7 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 56) = 1;
  v8 = UIFontDescriptorFeatureSettingsAttribute;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v3 + 32) = sub_100038DB0(v5);
  *(_QWORD *)(inited + 40) = v3;
  v11 = sub_100435C18(inited);
  if (qword_10081DE90 != -1)
    swift_once(&qword_10081DE90, sub_1004C2404);
  v12 = objc_msgSend((id)qword_100837070, "fontDescriptor", 1, 2);
  sub_1002F74FC(v11);
  v14 = v13;
  swift_bridgeObjectRelease(v11);
  type metadata accessor for AttributeName(0);
  sub_1000083D8((unint64_t *)&qword_10081E830, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10062267C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v12, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend((id)qword_100837070, "pointSize");
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v16, v17);

  return v18;
}

void sub_1004C27F0(uint64_t a1)
{
  sub_1003868E8(a1, &UIFontTextStyleFootnote, &qword_100837088);
}

id sub_1004C2804(uint64_t a1)
{
  return sub_1003869E8(a1, &qword_10081DE80, (void **)&qword_100837060, (void **)&qword_100837090, (uint64_t)sub_1004C23D4);
}

id sub_1004C2828()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "fu_sausageFontOfSize:", 30.0);
  qword_100837098 = (uint64_t)result;
  return result;
}

id sub_1004C2864(uint64_t a1)
{
  return sub_1003869E8(a1, &qword_10081DEB8, (void **)&qword_100837098, (void **)&qword_1008370A0, (uint64_t)sub_1004C2828);
}

id sub_1004C2888()
{
  if (qword_10081DEA0 != -1)
    swift_once(&qword_10081DEA0, sub_1004C25B0);
  qword_1008370A8 = qword_100837080;
  return (id)qword_100837080;
}

id sub_1004C28D0(uint64_t a1)
{
  return sub_1003869E8(a1, &qword_10081DEB8, (void **)&qword_100837098, (void **)&qword_1008370B0, (uint64_t)sub_1004C2828);
}

void sub_1004C28F4(void *a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat Height;
  id v11;
  CGRect v12;
  CGRect v13;

  if (a1)
  {
    v11 = a1;
    objc_msgSend(v11, "size");
    v2 = v1;
    objc_msgSend(v11, "size");
    v4 = fmin(v2 / v3, 1.0);
    objc_msgSend(v11, "size");
    v6 = v5;
    objc_msgSend(v11, "size");
    v8 = fmin(v6 / v7, 1.0);
    v12.origin.x = 16.0;
    v12.origin.y = 16.0;
    v12.size.width = 40.0;
    v12.size.height = 40.0;
    v9 = v4 * CGRectGetWidth(v12);
    v13.origin.x = 16.0;
    v13.origin.y = 16.0;
    v13.size.width = 40.0;
    v13.size.height = 40.0;
    Height = CGRectGetHeight(v13);
    CGRect.centered(in:)(16.0, 16.0, 40.0, 40.0, 0.0, 0.0, v9, Height * v8);
    objc_msgSend(v11, "drawInRect:");

  }
}

id sub_1004C29EC(id result)
{
  if (result)
    return objc_msgSend(result, "drawInRect:", 16.0, 16.0, 40.0, 40.0);
  return result;
}

uint64_t sub_1004C2A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

id sub_1004C2A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  Class isa;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  id result;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(uint64_t *, _QWORD);
  unint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  Class v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v2 = sub_100047110(&qword_1008337E8);
  __chkstk_darwin(v2);
  v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_10082ED90);
  __chkstk_darwin(v5);
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  __chkstk_darwin(v8);
  v88 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100833758);
  __chkstk_darwin(v10);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100833760);
  v87 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v84 - v17;
  v19 = type metadata accessor for AttributeContainer(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MindfulnessSessionViewModel.duration.getter(v20);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v24 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", isa, 1, 6);
  v94 = v13;
  v95 = a1;
  v85 = v16;
  v86 = v4;
  v84 = v18;
  v92 = v12;
  v93 = isa;
  v91 = v7;
  if (v24)
  {
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = v27;

  }
  else
  {
    v28 = 0xE100000000000000;
    v26 = 48;
  }
  v29 = (void *)objc_opt_self(NSBundle);
  v30 = objc_msgSend(v29, "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = objc_msgSend(v29, "mainBundle");
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, 0, 0);

  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v96 = v39;
  v97 = v41;
  v42 = sub_100038CA0();
  v43 = StringProtocol.localizedUppercase.getter(&type metadata for String, v42);
  v45 = v44;
  swift_bridgeObjectRelease(v41);
  v46 = sub_100047110((uint64_t *)&unk_100827460);
  v47 = swift_allocObject(v46, 112, 7);
  *(_OWORD *)(v47 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v47 + 56) = &type metadata for String;
  v48 = sub_100038CF8();
  *(_QWORD *)(v47 + 32) = v26;
  *(_QWORD *)(v47 + 40) = v28;
  *(_QWORD *)(v47 + 96) = &type metadata for String;
  *(_QWORD *)(v47 + 104) = v48;
  *(_QWORD *)(v47 + 64) = v48;
  *(_QWORD *)(v47 + 72) = v33;
  *(_QWORD *)(v47 + 80) = v35;
  v49 = swift_bridgeObjectRetain(v35);
  v50 = String.init(format:_:)(v43, v45, v47, v49);
  v52 = v51;
  v53 = swift_bridgeObjectRelease(v45);
  AttributeContainer.init()(v53);
  v54 = v95;
  AttributedString.init(_:attributes:)(v50, v52, v22);
  KeyPath = swift_getKeyPath(&unk_1006410F8);
  *(&v84 - 2) = (char *)__chkstk_darwin(KeyPath);
  v56 = swift_getKeyPath(&unk_100641128);
  result = objc_msgSend((id)objc_opt_self(UIColor), "fiui_meditationTeal");
  if (result)
  {
    v96 = Color.init(uiColor:)(result);
    v58 = sub_1000EA158();
    AttributedString.subscript.setter(&v96, v56, v58);
    v59 = swift_getKeyPath(&unk_100641168);
    *(&v84 - 2) = (char *)__chkstk_darwin(v59);
    v60 = swift_getKeyPath(&unk_100641198);
    v61 = v94;
    v63 = (uint64_t)v91;
    v62 = (uint64_t)v92;
    if (qword_10081DE98 != -1)
      swift_once(&qword_10081DE98, sub_1004C2464);
    v64 = qword_100837078;
    v96 = qword_100837078;
    v65 = sub_1000EA1DC();
    swift_retain(v64);
    AttributedString.subscript.setter(&v96, v60, v65);
    v66 = v88;
    v67 = v89;
    v68 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v54, v90);
    v96 = v33;
    v97 = v35;
    v69 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v63, 1, 1, v69);
    v70 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    AttributedStringProtocol.range<A>(of:options:locale:)(&v96, 0, v63, v68, &type metadata for String, v70, v42);
    sub_10001BE90(v63, (uint64_t *)&unk_10082ED90);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
    v71 = swift_bridgeObjectRelease(v35);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v87 + 48))(v62, 1, v61, v71) == 1)
    {

      v72 = &qword_100833758;
      v73 = v62;
    }
    else
    {
      v74 = v62;
      v75 = (uint64_t)v84;
      sub_10043A2CC(v74, (uint64_t)v84);
      v76 = (uint64_t)v85;
      sub_100021CC0(v75, (uint64_t)v85, &qword_100833760);
      v77 = swift_getKeyPath(&unk_1006411D8);
      *(&v84 - 2) = (char *)__chkstk_darwin(v77);
      v78 = swift_getKeyPath(&unk_100641208);
      v79 = v86;
      static Text.Scale.secondary.getter();
      v80 = type metadata accessor for Text.Scale(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
      v81 = sub_1004C59D0();
      v82 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify(&v96, v76, v61, v81);
      v83 = sub_10043E458();
      AttributedSubstring.subscript.setter(v79, v78, v83);
      v82(&v96, 0);

      sub_10001BE90(v76, &qword_100833760);
      v73 = v75;
      v72 = &qword_100833760;
    }
    return (id)sub_10001BE90(v73, v72);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004C313C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  NSString *v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = *(void **)(v0 + OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager);
  MindfulnessSessionViewModel.duration.getter();
  v2 = objc_msgSend(v1, "stringWithDuration:durationFormat:", 3);
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    v6 = MindfulnessSessionViewModel.duration.getter();
    Double.write<A>(to:)(&v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v6);
    v5 = v26;
  }
  v7 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v7, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v9 = (void *)objc_opt_self(ARUIMetricColors);
  v10 = NSForegroundColorAttributeName;
  result = objc_msgSend(v9, "elapsedTimeColors");
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, "nonGradientTextColor");

    v14 = sub_100047110(&qword_1008306A0);
    *(_QWORD *)(inited + 40) = v13;
    *(_QWORD *)(inited + 64) = v14;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v15 = qword_10081DEB8;
    v16 = NSFontAttributeName;
    if (v15 != -1)
      swift_once(&qword_10081DEB8, sub_1004C2828);
    v17 = (void *)qword_100837098;
    *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
    *(_QWORD *)(inited + 80) = v17;
    v18 = v17;
    v19 = sub_100038C84(inited);
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    type metadata accessor for Key(0);
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v20, "initWithString:attributes:", v21, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004C3384(uint64_t a1, char a2, uint64_t a3, void (*a4)(id, __n128))
{
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  uint64_t v14;
  __n128 v15;
  id v16;

  if ((a2 & 1) != 0)
  {
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v14;

  }
  else
  {
    v6 = (void *)objc_opt_self(NSNumberFormatter);
    v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)&a1);
    v8 = objc_msgSend(v6, "localizedStringFromNumber:numberStyle:", v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;
  }

  v16 = sub_1004C54C0(v9, v11);
  v15 = swift_bridgeObjectRelease(v11);
  a4(v16, v15);

}

void sub_1004C34E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  Class isa;
  id v13;
  Class v14;
  void *v15;
  _QWORD *v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v4 = v3;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)objc_opt_self(HKQuery);
  MindfulnessSessionViewModel.uuid.getter();
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v13 = objc_msgSend(v11, "predicateForObjectWithUUID:", isa);

  sub_10001E724(0, (unint64_t *)&unk_10082E680, HKCategoryType_ptr);
  v14 = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  v15 = *(void **)&v4[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore];
  v16 = (_QWORD *)swift_allocObject(&unk_1007A4130, 48, 7);
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = v4;
  v16[5] = v15;
  v17 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_1004C5910;
  v23 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B5C;
  aBlock[3] = &unk_1007A4148;
  v18 = _Block_copy(aBlock);
  swift_retain(a3);
  v19 = v4;
  v20 = v15;
  v21 = objc_msgSend(v17, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v14, v13, 1, 0, v18);

  _Block_release(v18);
  objc_msgSend(v20, "executeQuery:", v21, swift_release(v23).n128_f64[0]);

}

void sub_1004C36DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  void *v33;
  NSString *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSString *v38;
  void *v39;
  id v40;
  unint64_t v41;
  id v42;
  NSString v43;
  Class isa;
  _QWORD v45[5];
  _QWORD *v46;
  _BYTE v47[112];

  if (!a2)
  {
LABEL_13:
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26 = String._bridgeToObjectiveC()();
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, v27);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v30 = v29;

    v31 = sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v31, v47);
    *(_OWORD *)(inited + 16) = xmmword_100620BC0;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v33 = (void *)objc_opt_self(UIColor);
    swift_bridgeObjectRetain(v30);
    v34 = NSForegroundColorAttributeName;
    v35 = objc_msgSend(v33, "systemTealColor");
    v36 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v35;
    *(_QWORD *)(inited + 64) = v36;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v37 = qword_10081DED0;
    v38 = NSFontAttributeName;
    if (v37 != -1)
      swift_once(&qword_10081DED0, sub_1004C28D0);
    v39 = (void *)qword_1008370B0;
    *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
    *(_QWORD *)(inited + 80) = v39;
    v40 = v39;
    v41 = sub_100038C84(inited);
    v42 = objc_allocWithZone((Class)NSAttributedString);
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    type metadata accessor for Key(0);
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v42, "initWithString:attributes:", v43, isa, swift_bridgeObjectRelease(v41).n128_f64[0]);
    swift_bridgeObjectRelease(v30);

    a4(v23);
    goto LABEL_16;
  }
  v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v13)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (a2 >= 0)
    v24 = a2 & 0xFFFFFFFFFFFFFF8;
  else
    v24 = a2;
  swift_bridgeObjectRetain(a2);
  if (!_CocoaArrayWrapper.endIndex.getter(v24))
  {
LABEL_12:
    swift_bridgeObjectRelease(a2);
    goto LABEL_13;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v14 = *(id *)(a2 + 32);
LABEL_7:
    v15 = v14;
    swift_bridgeObjectRelease(a2);
    v16 = objc_msgSend((id)objc_opt_self(HKQuery), "predicateForSamplesAssociatedWithSample:", v15);
    v17 = sub_10001E724(0, &qword_1008370F0, HKStateOfMindType_ptr);
    v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(v17), "stateOfMindType");
    v19 = (_QWORD *)swift_allocObject(&unk_1007A4180, 40, 7);
    v19[2] = a6;
    v19[3] = a4;
    v19[4] = a5;
    v20 = objc_allocWithZone((Class)HKSampleQuery);
    v45[4] = sub_1004C5948;
    v46 = v19;
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 1107296256;
    v45[2] = sub_100008B5C;
    v45[3] = &unk_1007A4198;
    v21 = _Block_copy(v45);
    v22 = a6;
    v23 = objc_msgSend(v20, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v18, v16, 1, 0, v21, swift_retain(a5).n128_f64[0]);

    _Block_release(v21);
    objc_msgSend(a7, "executeQuery:", v23, swift_release(v46).n128_f64[0]);

LABEL_16:
    return;
  }
  __break(1u);
}

void sub_1004C3B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  void *v22;
  id v23;
  unint64_t v24;
  id v25;
  NSString v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;

  if (!a2)
    goto LABEL_16;
  v7 = a2;
  v8 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a2 >> 62))
  {
    v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v9)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease(v7);
    goto LABEL_16;
  }
  if (a2 >= 0)
    v29 = a2 & 0xFFFFFFFFFFFFFF8;
  else
    v29 = a2;
  swift_bridgeObjectRetain(a2);
  v9 = (void *)_CocoaArrayWrapper.endIndex.getter(v29);
  if (!v9)
    goto LABEL_15;
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)(v8 + 16))
    {
      __break(1u);
      goto LABEL_20;
    }
    v10 = *(id *)(v7 + 32);
  }
  v9 = v10;
  swift_bridgeObjectRelease(v7);
  v11 = objc_opt_self(HKStateOfMind);
  v12 = (void *)swift_dynamicCastObjCClass(v9, v11);
  if (!v12)
  {

LABEL_16:
    v28 = 0;
    goto LABEL_17;
  }
  v13 = (id)HKUILocalizedStringForValenceClassification(objc_msgSend(v12, "valenceClassification"));
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v7 = v14;

  v15 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v15, &v30);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v16 = (void *)objc_opt_self(UIColor);
  swift_bridgeObjectRetain(v7);
  v17 = NSForegroundColorAttributeName;
  v18 = objc_msgSend(v16, "systemTealColor");
  v19 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v20 = qword_10081DED0;
  v21 = NSFontAttributeName;
  if (v20 != -1)
LABEL_20:
    swift_once(&qword_10081DED0, sub_1004C28D0);
  v22 = (void *)qword_1008370B0;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v22;
  v23 = v22;
  v24 = sub_100038C84(inited);
  v25 = objc_allocWithZone((Class)NSAttributedString);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v25, "initWithString:attributes:", v26, isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
  swift_bridgeObjectRelease(v7);

LABEL_17:
  a5(v28);

}

id sub_1004C3E24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionFormattingManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1004C3E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  void *v30;
  os_log_type_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  void *v39;
  NSString *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString *v44;
  void *v45;
  id v46;
  unint64_t v47;
  id v48;
  NSString v49;
  Class isa;
  id v51;
  id v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[112];

  v3 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Trainer(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v69 - v13;
  v15 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(v12);
  if ((v16 & 1) != 0)
  {
    v21 = MindfulnessSessionViewModel.sourceRevision.getter(v15);
    v22 = objc_msgSend((id)v21, "source");

    LOBYTE(v21) = objc_msgSend(v22, "_hasFirstPartyBundleID");
    if ((v21 & 1) != 0)
    {
LABEL_3:
      v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v19 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);
LABEL_11:
      v35 = v20;

      static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v28 = v36;

    }
    else
    {
      v24 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v23);
      v25 = objc_msgSend(v24, "source");

      v26 = objc_msgSend(v25, "name");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v28 = v27;

    }
  }
  else
  {
    v17 = v15;
    switch(v15)
    {
      case 0:
      case 1:
      case 2:
        goto LABEL_3;
      case 3:
        sub_100021CC0(a2, (uint64_t)v5, &qword_1008239C0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
        {
          sub_10001BE90((uint64_t)v5, &qword_1008239C0);
          v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v19 = String._bridgeToObjectiveC()();
          v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);
          goto LABEL_11;
        }
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v5, v7);
        v53 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v54 = String._bridgeToObjectiveC()();
        v55 = objc_msgSend(v53, "localizedStringForKey:value:table:", v54, 0, 0);

        v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v58 = v57;

        v59 = Trainer.informalName.getter();
        v61 = v60;
        v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
        if (!v61)
        {
          v59 = Trainer.name.getter(v62);
          v61 = v63;
        }
        v64 = *(void (**)(char *, uint64_t))(v8 + 8);
        v64(v11, v7);
        v65 = sub_100047110((uint64_t *)&unk_100827460);
        v66 = swift_allocObject(v65, 72, 7);
        *(_OWORD *)(v66 + 16) = xmmword_100622F90;
        *(_QWORD *)(v66 + 56) = &type metadata for String;
        *(_QWORD *)(v66 + 64) = sub_100038CF8();
        *(_QWORD *)(v66 + 32) = v59;
        *(_QWORD *)(v66 + 40) = v61;
        static String.localizedStringWithFormat(_:_:)(v56, v58, v66);
        v28 = v67;
        swift_bridgeObjectRelease(v58);
        v68 = swift_bridgeObjectRelease(v66);
        ((void (*)(char *, uint64_t, __n128))v64)(v14, v7, v68);
        break;
      default:
        v29 = static os_log_type_t.fault.getter();
        v30 = (void *)HKLogActivity;
        v31 = v29;
        if (os_log_type_enabled(HKLogActivity, v29))
        {
          v32 = v30;
          v33 = swift_slowAlloc(22, -1);
          v34 = swift_slowAlloc(32, -1);
          v70 = v34;
          *(_DWORD *)v33 = 136315394;
          v69 = sub_10003E8EC(0xD000000000000020, 0x80000001006A1F60, &v70);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v33 + 4);
          *(_WORD *)(v33 + 12) = 2048;
          v69 = v17;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v33 + 14);
          _os_log_impl((void *)&_mh_execute_header, v32, v31, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to meditate",
            (uint8_t *)v33,
            0x16u);
          swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v34, -1, -1);
          swift_slowDealloc(v33, -1, -1);

        }
        goto LABEL_3;
    }
  }
  v37 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v37, v71);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v39 = (void *)objc_opt_self(UIColor);
  v40 = NSForegroundColorAttributeName;
  v41 = objc_msgSend(v39, "labelColor");
  v42 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v41;
  *(_QWORD *)(inited + 64) = v42;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v43 = qword_10081DE80;
  v44 = NSFontAttributeName;
  if (v43 != -1)
    swift_once(&qword_10081DE80, sub_1004C23D4);
  v45 = (void *)qword_100837060;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v45;
  v46 = v45;
  v47 = sub_100038C84(inited);
  v48 = objc_allocWithZone((Class)NSAttributedString);
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(v48, "initWithString:attributes:", v49, isa, swift_bridgeObjectRelease(v47).n128_f64[0]);

  return v51;
}

id sub_1004C4710()
{
  id v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  void *v31;
  NSString *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString *v36;
  void *v37;
  id v38;
  unint64_t v39;
  id v40;
  NSString v41;
  Class isa;
  id v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSNumber v49;
  _BYTE v50[112];
  uint64_t v51;
  uint64_t v52;

  MindfulnessSessionViewModel.duration.getter();
  v49.super.super.isa = Double._bridgeToObjectiveC()().super.super.isa;
  v0 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", v49.super.super.isa, 1, 6);
  if (v0)
  {
    v1 = v0;
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
    v4 = v3;

  }
  else
  {
    v4 = 0xE100000000000000;
    v2 = 48;
  }
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(v5, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v51 = v15;
  v52 = v17;
  v18 = sub_100038CA0();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v18);
  v20 = v19;
  swift_bridgeObjectRelease(v17);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  sub_10001E724(0, &qword_10081E628, NSString_ptr);
  v22 = sub_100047110((uint64_t *)&unk_100827460);
  v23 = swift_allocObject(v22, 112, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v23 + 56) = &type metadata for String;
  v24 = sub_100038CF8();
  *(_QWORD *)(v23 + 32) = v2;
  *(_QWORD *)(v23 + 40) = v4;
  *(_QWORD *)(v23 + 96) = &type metadata for String;
  *(_QWORD *)(v23 + 104) = v24;
  *(_QWORD *)(v23 + 64) = v24;
  *(_QWORD *)(v23 + 72) = v9;
  *(_QWORD *)(v23 + 80) = v11;
  v25 = swift_bridgeObjectRetain(v11);
  v26 = (void *)NSString.init(format:_:)(v21, v23, v25);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;
  v29 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v29, v50);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v31 = (void *)objc_opt_self(UIColor);
  v32 = NSForegroundColorAttributeName;
  v33 = objc_msgSend(v31, "fiui_meditationTeal");
  v34 = sub_100047110(&qword_1008306A0);
  *(_QWORD *)(inited + 40) = v33;
  *(_QWORD *)(inited + 64) = v34;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v35 = qword_10081DE90;
  v36 = NSFontAttributeName;
  if (v35 != -1)
    swift_once(&qword_10081DE90, sub_1004C2404);
  v37 = (void *)qword_100837070;
  *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 80) = v37;
  v38 = v37;
  v39 = sub_100038C84(inited);
  v40 = objc_allocWithZone((Class)NSMutableAttributedString);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v43 = objc_msgSend(v40, "initWithString:attributes:", v41, isa, swift_bridgeObjectRelease(v39).n128_f64[0]);

  v44 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend(v26, "rangeOfString:", v44, swift_bridgeObjectRelease(v11).n128_f64[0]);
  v47 = v46;

  if (qword_10081DEA0 != -1)
    swift_once(&qword_10081DEA0, sub_1004C25B0);
  objc_msgSend(v43, "addAttribute:value:range:", v36, qword_100837080, v45, v47, 2, 4);

  return v43;
}

uint64_t sub_1004C4BA0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  os_log_type_t v7;
  void *v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(a1);
  if ((v2 & 1) != 0)
  {
    v5 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v1);
    v6 = objc_msgSend(v5, "source");

    LODWORD(v5) = objc_msgSend(v6, "_hasFirstPartyBundleID");
    if ((_DWORD)v5)
      return 0x656D2E656C707061;
    else
      return 0;
  }
  else
  {
    v3 = v1;
    v4 = 0x72622E656C707061;
    switch(v1)
    {
      case 0:
        return v4;
      case 1:
        v4 = 0x65722E656C707061;
        break;
      case 2:
        return 0x656D2E656C707061;
      case 3:
        v4 = 0xD000000000000011;
        break;
      default:
        v4 = 0x656D2E656C707061;
        v7 = static os_log_type_t.fault.getter();
        v8 = (void *)HKLogActivity;
        v9 = v7;
        if (os_log_type_enabled(HKLogActivity, v7))
        {
          v10 = v8;
          v11 = swift_slowAlloc(22, -1);
          v12 = swift_slowAlloc(32, -1);
          v15 = v12;
          *(_DWORD *)v11 = 136315394;
          v14 = sub_10003E8EC(0xD000000000000010, 0x80000001006A1F20, &v15);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v11 + 4);
          *(_WORD *)(v11 + 12) = 2048;
          v14 = v3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v11 + 14);
          _os_log_impl((void *)&_mh_execute_header, v10, v9, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to meditate",
            (uint8_t *)v11,
            0x16u);
          swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v12, -1, -1);
          swift_slowDealloc(v11, -1, -1);

        }
        break;
    }
  }
  return v4;
}

id sub_1004C4E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  id result;
  void *v6;
  id v7;

  sub_1004C4BA0(a1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v3);

  result = objc_msgSend((id)objc_opt_self(UIColor), "fiui_meditationTeal");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(v4, "imageWithTintColor:renderingMode:", result, 1);

    return v7;
  }
  __break(1u);
  return result;
}

id sub_1004C4F08(double a1)
{
  id v2;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)CHWatchIconParameters), "init");
  v3 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  v4 = objc_msgSend(v3, "source");

  v5 = objc_msgSend(v4, "bundleIdentifier");
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  objc_msgSend(v2, "setBundleID:", v5);

  v8 = (void *)objc_opt_self(UIScreen);
  v9 = v2;
  v10 = objc_msgSend(v8, "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  objc_msgSend(v9, "setPreferredAppStoreIconWidth:", v12 * a1);
  objc_msgSend(v9, "setIconVariant2x:", 50);
  objc_msgSend(v9, "setIconVariant3x:", 50);
  return v9;
}

id sub_1004C5064(double a1)
{
  id v2;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)CHPhoneIconParameters), "init");
  v3 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  v4 = objc_msgSend(v3, "source");

  v5 = objc_msgSend(v4, "bundleIdentifier");
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  objc_msgSend(v2, "setBundleID:", v5);

  v8 = (void *)objc_opt_self(UIScreen);
  v9 = v2;
  v10 = objc_msgSend(v8, "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  objc_msgSend(v9, "setPreferredAppStoreIconWidth:", v12 * a1);
  objc_msgSend(v9, "setAppIconFormat:", 2);
  return v9;
}

id sub_1004C51AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  Class isa;
  void (*v6)(_BYTE *, uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void *v22;
  NSString *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  void *v28;
  id v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class v33;
  id v34;
  _BYTE v36[112];
  uint64_t v37;
  uint64_t v38;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = objc_msgSend((id)objc_opt_self(CHListAndDetailViewDateFormatter), "timeDateFormatter");
  MindfulnessSessionViewModel.startDate.getter();
  isa = Date._bridgeToObjectiveC()().super.isa;
  v6 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v6(v3, v0);
  v7 = objc_msgSend(v4, "stringFromDate:", isa);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  MindfulnessSessionViewModel.endDate.getter(v11);
  v12 = Date._bridgeToObjectiveC()().super.isa;
  v6(v3, v0);
  v13 = objc_msgSend(v4, "stringFromDate:", v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v37 = v8;
  v38 = v10;
  v17._countAndFlagsBits = 9666786;
  v17._object = (void *)0xA300000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v14;
  v18._object = v16;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v16);
  v19 = v38;
  v20 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v20, v36);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v22 = (void *)objc_opt_self(UIColor);
  v23 = NSForegroundColorAttributeName;
  v24 = objc_msgSend(v22, "secondaryLabelColor");
  v25 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v24;
  *(_QWORD *)(inited + 64) = v25;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v26 = qword_10081DEB0;
  v27 = NSFontAttributeName;
  if (v26 != -1)
    swift_once(&qword_10081DEB0, sub_1004C2804);
  v28 = (void *)qword_100837090;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v28;
  v29 = v28;
  v30 = sub_100038C84(inited);
  v31 = objc_allocWithZone((Class)NSAttributedString);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  v33 = Dictionary._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v31, "initWithString:attributes:", v32, v33, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v34;
}

id sub_1004C54C0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  void *v26;
  NSString *v27;
  id result;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString *v33;
  void *v34;
  id v35;
  unint64_t v36;
  id v37;
  NSString v38;
  Class isa;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[112];

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v4, "mainBundle", swift_bridgeObjectRelease(v9).n128_f64[0]);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  sub_10001E724(0, &qword_10081E628, NSString_ptr);
  v17 = sub_100047110((uint64_t *)&unk_100827460);
  v18 = swift_allocObject(v17, 112, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  v19 = sub_100038CF8();
  *(_QWORD *)(v18 + 32) = a1;
  *(_QWORD *)(v18 + 40) = a2;
  *(_QWORD *)(v18 + 96) = &type metadata for String;
  *(_QWORD *)(v18 + 104) = v19;
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 72) = v14;
  *(_QWORD *)(v18 + 80) = v16;
  swift_bridgeObjectRetain(a2);
  v20 = swift_bridgeObjectRetain(v16);
  v21 = (void *)NSString.init(format:_:)(v10, v18, v20);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;
  v24 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v24, v45);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v26 = (void *)objc_opt_self(ARUIMetricColors);
  v27 = NSForegroundColorAttributeName;
  result = objc_msgSend(v26, "heartRateColors");
  if (result)
  {
    v29 = result;
    v30 = objc_msgSend(result, "nonGradientTextColor");

    v31 = sub_100047110(&qword_1008306A0);
    *(_QWORD *)(inited + 40) = v30;
    *(_QWORD *)(inited + 64) = v31;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v32 = qword_10081DEC0;
    v33 = NSFontAttributeName;
    if (v32 != -1)
      swift_once(&qword_10081DEC0, sub_1004C2864);
    v34 = (void *)qword_1008370A0;
    *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
    *(_QWORD *)(inited + 80) = v34;
    v35 = v34;
    v36 = sub_100038C84(inited);
    v37 = objc_allocWithZone((Class)NSMutableAttributedString);
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    type metadata accessor for Key(0);
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v40 = objc_msgSend(v37, "initWithString:attributes:", v38, isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

    v41 = String._bridgeToObjectiveC()();
    v42 = objc_msgSend(v21, "rangeOfString:", v41, swift_bridgeObjectRelease(v16).n128_f64[0]);
    v44 = v43;

    if (qword_10081DEC8 != -1)
      swift_once(&qword_10081DEC8, sub_1004C2888);
    objc_msgSend(v40, "addAttribute:value:range:", v33, qword_1008370A8, v42, v44, 2, 4);

    return v40;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004C58DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1004C5910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1004C36DC(a1, a2, a3, *(void (**)(id))(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1004C591C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004C5948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1004C3B30(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(id))(v3 + 24));
}

uint64_t sub_1004C595C()
{
  return 8;
}

uint64_t sub_1004C5968(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004C5970(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1004C5984(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004C599C()
{
  return 8;
}

uint64_t sub_1004C59BC()
{
  return 8;
}

unint64_t sub_1004C59D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100833770;
  if (!qword_100833770)
  {
    v1 = sub_100007050(&qword_100833760);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100833770);
  }
  return result;
}

void sub_1004C5A3C(uint64_t a1, Swift::UInt a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __n128 v16;
  char v17;
  unint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v7 = a3 & 1;
  v8 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MetricDetailViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10001BE90(a1, &qword_10081F218);
    v15 = sub_100439058(a2, v7);
    if ((v17 & 1) != 0)
    {
      v18 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
      v20 = *v4;
      v26 = *v4;
      *v4 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100400C10();
        v20 = v26;
      }
      sub_100047C88(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v12 + 72) * v18, (uint64_t)v10, type metadata accessor for MetricDetailViewModel);
      sub_1004D1580(v18, v20);
      v21 = *v4;
      *v4 = v20;
      v16 = swift_bridgeObjectRelease(v21);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, v22, 1, v11, v16);
    sub_10001BE90((uint64_t)v10, &qword_10081F218);
  }
  else
  {
    sub_100047C88(a1, (uint64_t)v14, type metadata accessor for MetricDetailViewModel);
    v23 = swift_isUniquelyReferenced_nonNull_native(*v4);
    v26 = *v4;
    *v4 = 0x8000000000000000;
    sub_1003FE710((uint64_t)v14, a2, v7, v23);
    v24 = *v4;
    *v4 = v26;
    swift_bridgeObjectRelease(v24);
  }
}

void sub_1004C5C20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TrendListMetric(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10001BE90(a1, &qword_10082EDD0);
    v13 = sub_100049DE0(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v18 = *v3;
      v24 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100401F40();
        v18 = v24;
      }
      sub_100047C88(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, (uint64_t)v8, type metadata accessor for TrendListMetric);
      sub_1004D21AC(v16, v18, type metadata accessor for TrendListMetric);
      v19 = *v3;
      *v3 = v18;
      v14 = swift_bridgeObjectRelease(v19);
      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v20, 1, v9, v14);
    sub_10001BE90((uint64_t)v8, &qword_10082EDD0);
  }
  else
  {
    sub_100047C88(a1, (uint64_t)v12, type metadata accessor for TrendListMetric);
    v21 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v24 = *v3;
    *v3 = 0x8000000000000000;
    sub_1003FF0C4((uint64_t)v12, a2, v21);
    v22 = *v3;
    *v3 = v24;
    swift_bridgeObjectRelease(v22);
  }
}

void sub_1004C5E00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetricDetailViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_10001BE90(a1, &qword_10081F218);
    v14 = sub_100049DE0(a2);
    if ((v16 & 1) != 0)
    {
      v17 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v19 = *v3;
      v25 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1004025C0();
        v19 = v25;
      }
      sub_100047C88(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v10 + 72) * v17, (uint64_t)v8, type metadata accessor for MetricDetailViewModel);
      sub_1004D21AC(v17, v19, type metadata accessor for MetricDetailViewModel);
      v20 = *v3;
      *v3 = v19;
      v15 = swift_bridgeObjectRelease(v20);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v21, 1, v9, v15);
    sub_10001BE90((uint64_t)v8, &qword_10081F218);
  }
  else
  {
    sub_100047C88(a1, (uint64_t)v13, type metadata accessor for MetricDetailViewModel);
    v22 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v25 = *v3;
    *v3 = 0x8000000000000000;
    sub_1003FF48C((uint64_t)v13, a2, v22);
    v23 = *v3;
    *v3 = v25;
    swift_bridgeObjectRelease(v23);
  }
}

void sub_1004C5FE0(uint64_t a1, char a2, Swift::UInt a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  char v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;

  v5 = v4;
  v9 = a4 & 1;
  v10 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MetricDetailViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(a1, 1, v13, v15) == 1)
  {
    sub_10001BE90(a1, &qword_10081F218);
    v18 = sub_1004398B4(a2, a3, v9);
    if ((v19 & 1) != 0)
    {
      v20 = v18;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
      v22 = *v5;
      v42 = *v5;
      *v5 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100402D14();
        v22 = v42;
      }
      sub_100047C88(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v14 + 72) * v20, (uint64_t)v12, type metadata accessor for MetricDetailViewModel);
      sub_1004D2398(v20, v22);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)*v5;
      *v5 = v22;
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      v31 = 0;
    }
    else
    {
      v31 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v31, 1, v13);
    sub_10001BE90((uint64_t)v12, &qword_10081F218);
  }
  else
  {
    sub_100047C88(a1, (uint64_t)v17, type metadata accessor for MetricDetailViewModel);
    v32 = swift_isUniquelyReferenced_nonNull_native(*v5);
    v42 = *v5;
    *v5 = 0x8000000000000000;
    sub_1003FF740((uint64_t)v17, a2, a3, v9, v32);
    v33 = (CHWorkoutDetailHeartRateTableViewCell *)*v5;
    *v5 = v42;
    swift_bridgeObjectRelease(v33, v34, v35, v36, v37, v38, v39, v40);
  }
}

void sub_1004C61D8(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  _OWORD v31[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_100038FD4((_OWORD *)a1, v31);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v30 = *v3;
    *v3 = 0x8000000000000000;
    sub_1003FF9D4(v31, a2, (uint64_t)a3, isUniquelyReferenced_nonNull_native);
    v8 = (CHWorkoutDetailHeartRateTableViewCell *)*v3;
    *v4 = v30;
    swift_bridgeObjectRelease(a3, v9, v10, v11, v12, v13, v14, v15);
    swift_bridgeObjectRelease(v8, v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    sub_10001BE90(a1, (uint64_t *)&unk_100828420);
    sub_1004D114C(a2, (uint64_t)a3, v31);
    swift_bridgeObjectRelease(a3, v23, v24, v25, v26, v27, v28, v29);
    sub_10001BE90((uint64_t)v31, (uint64_t *)&unk_100828420);
  }
}

double sub_1004C62AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Trainer(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10001BE90(a1, &qword_1008239C0);
    sub_1004D123C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    sub_10001BE90((uint64_t)v10, &qword_1008239C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, a1, v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_1003FFB04((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    v18 = *v4;
    *v4 = v20;
    swift_bridgeObjectRelease(a3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  return result;
}

void sub_1004C6420(uint64_t a1, uint64_t a2)
{
  CHWorkoutDetailHeartRateTableViewCell **v2;
  CHWorkoutDetailHeartRateTableViewCell **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;

  v3 = v2;
  v6 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutChartViewModel(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_10001BE90(a1, &qword_1008202F0);
    sub_1004D136C(a2, (uint64_t)v8);
    sub_10001BE90((uint64_t)v8, &qword_1008202F0);
  }
  else
  {
    sub_100047C88(a1, (uint64_t)v12, type metadata accessor for WorkoutChartViewModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v24 = *v3;
    *v3 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
    sub_100400180((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v24;
    swift_bridgeObjectRelease(v15, v16, v17, v18, v19, v20, v21, v22);
  }
}

BOOL sub_1004C6568(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  return sub_1004C66E8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for DateInterval, (uint64_t *)&unk_100827440);
}

uint64_t sub_1004C6590(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  id v17;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3)
         : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v17 = v8;
      v11 = a1(&v17);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v13 & 1;
      }
      v12 = v11;

      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        v13 = 1;
        return v13 & 1;
      }
      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  v13 = 0;
  return v13 & 1;
}

BOOL sub_1004C66C0(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  return sub_1004C66E8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, (uint64_t *)&unk_10082E690);
}

BOOL sub_1004C66E8(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v20;
  BOOL v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char v25;
  char v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  _BOOL8 v35;
  uint64_t (*v36)(char *);
  uint64_t v37;

  v7 = v5;
  v35 = a2;
  v36 = a1;
  v37 = a4(0);
  v9 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v11 = (char *)&v29 - v10;
  v12 = sub_100047110(a5);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v16 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v32 = *(_QWORD *)(v9 + 72);
    v33 = v11;
    v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v30 = a3;
    v17 = swift_bridgeObjectRetain(a3);
    while (1)
    {
      v18 = v37;
      v34(v14, v16, v37, v17);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v19)(v14, 0, 1, v18);
      v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v18);
      v21 = v20 != 1;
      if (v20 == 1)
      {
        a3 = v30;
        goto LABEL_13;
      }
      v31 = 1;
      v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v23 = v9;
      v24 = v33;
      v22(v33, v14, v18);
      v21 = v35;
      v25 = v36(v24);
      if (v7)
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v18);
        swift_bridgeObjectRelease(v30);
        return v21;
      }
      v26 = v25;
      v27 = v19;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v18);
      if ((v26 & 1) != 0)
        break;
      v16 += v32;
      --v15;
      v7 = 0;
      v9 = v23;
      if (!v15)
      {
        a3 = v30;
        goto LABEL_9;
      }
    }
    a3 = v30;
    v21 = v31;
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v17 = swift_bridgeObjectRetain(a3);
LABEL_9:
    v27(v14, 1, 1, v37, v17);
    v21 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v21;
}

uint64_t sub_1004C690C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;

  v57 = sub_100047110(&qword_1008372E0);
  __chkstk_darwin(v57);
  v56 = (uint64_t)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v55 = (char *)v45 - v5;
  __chkstk_darwin(v6);
  v54 = (char *)v45 - v7;
  v8 = type metadata accessor for WorkoutChartDataElement(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = &_swiftEmptyArrayStorage;
  if (!v11)
    return (uint64_t)v12;
  v45[1] = v1;
  v60 = &_swiftEmptyArrayStorage;
  sub_100121600(0, v11, 0);
  result = sub_1004D3558(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v46 = a1 + 80;
  v47 = v11;
  v50 = v10;
  v51 = a1;
  v48 = v14;
  v49 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = (unint64_t)v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v58 = v16;
    v59 = 1 << v15;
    v21 = v57;
    v22 = *(int *)(v57 + 48);
    v23 = *(_QWORD *)(a1 + 48);
    v24 = type metadata accessor for Date(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v28 = (uint64_t)v54;
    v27(v54, v26, v24);
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v15);
    *(_QWORD *)(v28 + v22) = v29;
    v30 = v55;
    v27(v55, v28, v24);
    *(_QWORD *)&v30[*(int *)(v21 + 48)] = v29;
    v31 = (uint64_t)v30;
    v32 = v56;
    sub_100045AD4(v31, v56, &qword_1008372E0);
    swift_retain_n(v29, 2);
    sub_10001BE90(v28, &qword_1008372E0);
    v33 = *(int *)(v21 + 48);
    v34 = (uint64_t)v50;
    v35 = *(_QWORD *)(v32 + v33);
    v27(v50, v32, v24);
    v36 = *(double *)(v35 + 16) / *(double *)(v35 + 24);
    v37 = v53;
    *(double *)(v34 + *(int *)(v53 + 20)) = v36;
    *(double *)(v34 + *(int *)(v37 + 24)) = v36;
    *(double *)(v34 + *(int *)(v37 + 28)) = v36;
    sub_10001BE90(v32, &qword_1008372E0);
    v12 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
    {
      sub_100121600(0, *(_QWORD *)v12->cellPadding + 1, 1);
      v12 = v60;
    }
    v39 = *(_QWORD *)v12->cellPadding;
    v38 = *(_QWORD *)v12->cellInset;
    if (v39 >= v38 >> 1)
    {
      sub_100121600(v38 > 1, v39 + 1, 1);
      v12 = v60;
    }
    *(_QWORD *)v12->cellPadding = v39 + 1;
    result = sub_100047C88(v34, (uint64_t)v12+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v39, type metadata accessor for WorkoutChartDataElement);
    a1 = v51;
    v18 = 1 << *(_BYTE *)(v51 + 32);
    if (v15 >= v18)
      goto LABEL_27;
    v17 = v49;
    v40 = *(_QWORD *)(v49 + 8 * v20);
    if ((v40 & v59) == 0)
      goto LABEL_28;
    LODWORD(v14) = v48;
    if (*(_DWORD *)(v51 + 36) != (_DWORD)v48)
      goto LABEL_29;
    v41 = v40 & (-2 << (v15 & 0x3F));
    if (v41)
    {
      v18 = __clz(__rbit64(v41)) | v15 & 0xFFFFFFFFFFFFFFC0;
      v19 = v47;
    }
    else
    {
      v42 = v20 + 1;
      v43 = (unint64_t)(v18 + 63) >> 6;
      v19 = v47;
      if (v20 + 1 < v43)
      {
        v44 = *(_QWORD *)(v49 + 8 * v42);
        if (v44)
        {
LABEL_22:
          v18 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v20)
          {
            v44 = *(_QWORD *)(v46 + 8 * v20++);
            if (v44)
            {
              v42 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v58 + 1;
    v15 = v18;
    if (v58 + 1 == v19)
      return (uint64_t)v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

double sub_1004C6CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  double result;
  _QWORD v28[3];
  _QWORD v29[4];

  v4 = v3;
  v8 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D0F28(a1, (uint64_t)v10);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if ((_DWORD)v13 == 1)
  {
    sub_10001BE90((uint64_t)v10, &qword_10081E650);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v15);
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v21 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = swift_allocObject(&unk_1007A4808, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v29[0] = 0;
    v29[1] = 0;
    v24 = v29;
    v29[2] = v18;
    v29[3] = v20;
  }
  v28[0] = 1;
  v28[1] = v24;
  v28[2] = v22;
  v25 = swift_task_create(v14, v28, (char *)&type metadata for () + 8, &unk_1008372F0, v23);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

double sub_1004C6E98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, void *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  double result;

  v8 = a2;
  v10 = *(void (**)(uint64_t, uint64_t, void *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v11 = sub_10001E724(0, &qword_10082D158, HKHeartRateSummaryReading_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v11);
  }
  if (a3)
  {
    v12 = sub_10001E724(0, &qword_10082D158, HKHeartRateSummaryReading_ptr);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v12);
  }
  swift_retain(v9);
  v13 = a4;
  v14 = a5;
  v10(v8, a3, a4, a5);
  swift_release(v9);

  swift_bridgeObjectRelease(a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

void sub_1004C6F7C(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, void *a3)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  void (*v6)(CHWorkoutDetailHeartRateTableViewCell *, void *);
  uint64_t v7;
  id v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v4 = a2;
  v6 = *(void (**)(CHWorkoutDetailHeartRateTableViewCell *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10001E724(0, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  swift_bridgeObjectRelease(v4, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1004C7008()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v2 = swift_getKeyPath(&unk_100641310);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1004C7078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void (*v13)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v11)
  {
    v12 = objc_msgSend(v11, "startDate", v8.n128_f64[0]);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

    v13 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v13(v10, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v10, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v10, 1, 1, v3, v8);
  }
  v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "startDate"));
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v15);

  return sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828370);
}

uint64_t sub_1004C7204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v18 - v8;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (!v10)
  {
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
LABEL_7:
    v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "endDate"));
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v16);

    return sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100828370);
  }
  v11 = objc_msgSend(v10, "endDate", v7);
  if (v11)
  {
    v12 = v11;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v11);

    v13 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 0, 1, v13);
  }
  else
  {
    v13 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  }
  sub_100045AD4((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_100828370);
  type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v13) == 1)
    goto LABEL_7;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v9, v13);
}

id sub_1004C73B8(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id result;
  id v34;
  id v35;
  id v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  _QWORD *v57;

  v7 = v6;
  v56 = a1;
  v13 = sub_100047110(&qword_1008372F8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore__chartData;
  v57 = _swiftEmptyDictionarySingleton;
  v18 = sub_100047110((uint64_t *)&unk_100837140);
  Published.init(initialValue:)(&v57, v18);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v20 = a5;
  v21 = a4;
  v19(v17, v16, v13);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v20;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator) = a3;
  swift_retain(v20);
  v22 = a3;
  v23 = objc_msgSend(a6, "fitnessUIFormattingManager");
  v24 = type metadata accessor for WorkoutChartDataElementFormattingManager();
  v25 = (_QWORD *)swift_allocObject(v24, 48, 7);
  v26 = a2;
  v27 = v56;
  v28 = sub_100133E38();
  v25[2] = v23;
  v25[3] = v27;
  v25[4] = a2;
  v25[5] = v28;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager) = v25;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings) = v21;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout) = v27;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity) = a2;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager) = a6;
  v29 = v27;
  v55 = v22;
  if (a2)
  {
    v30 = v26;
    v31 = v21;
    v32 = a6;
    result = objc_msgSend(v30, "fiui_activityType");
LABEL_4:
    *(_QWORD *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType) = result;
    v36 = result;
    v37 = sub_100547014(v36);
    v38 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10053962C();
    v39 = sub_1005475D0(v37, (uint64_t)v38);

    swift_release(v20);
    swift_bridgeObjectRelease(v37, v40, v41, v42, v43, v44, v45, v46);
    swift_bridgeObjectRelease(v38, v47, v48, v49, v50, v51, v52, v53);
    *(_QWORD *)(v7 + 16) = v39;
    return (id)v7;
  }
  v34 = v21;
  v35 = a6;
  result = objc_msgSend(v29, "fiui_activityType");
  if (result)
    goto LABEL_4;
  __break(1u);
  return result;
}

uint64_t sub_1004C7640(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 16), a2, a3, a4, a5, a6, a7, a8);
  v9 = v8 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore__chartData;
  v10 = sub_100047110(&qword_1008372F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  swift_release(*(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties));
  swift_release(*(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager));

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData), v11, v12, v13, v14, v15, v16, v17);
  return v8;
}

uint64_t sub_1004C7720(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;

  sub_1004C7640(a1, a2, a3, a4, a5, a6, a7, a8);
  return swift_deallocClassInstance(v8, *(unsigned int *)(*(_QWORD *)v8 + 48), *(unsigned __int16 *)(*(_QWORD *)v8 + 52));
}

uint64_t sub_1004C7744()
{
  return type metadata accessor for WorkoutChartDataStore(0);
}

uint64_t type metadata accessor for WorkoutChartDataStore(uint64_t a1)
{
  uint64_t result;

  result = qword_100837128;
  if (!qword_100837128)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartDataStore);
  return result;
}

void sub_1004C7788(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1004C7834(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = "\b";
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_1004C7834(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100837138)
  {
    v2 = sub_100007050((uint64_t *)&unk_100837140);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100837138);
  }
}

uint64_t sub_1004C788C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutChartDataStore(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_1004C78C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  char *v42;
  char v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t, __n128);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  const char *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  char v60;
  const char *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  uint64_t v110;
  char *v111;
  void (*v112)(char *, uint64_t);
  char *v113;
  char *v114;

  v1 = v0;
  v2 = type metadata accessor for WorkoutChartDataElement(0);
  v96 = *(_QWORD *)(v2 - 8);
  v97 = v2;
  __chkstk_darwin(v2);
  v98 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v4);
  v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DateInterval(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v114 = (char *)&v96 - v12;
  v13 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v13);
  v102 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v96 - v16;
  v18 = type metadata accessor for Date(0);
  v107 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v111 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v96 - v21;
  __chkstk_darwin(v23);
  v113 = (char *)&v96 - v24;
  v25 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  v108 = v17;
  if (v25)
  {
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1005AA694();
    v27 = (uint64_t)v113;
    v109 = v26;
    v101 = v25;
  }
  else
  {
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10032B7D0();
    v27 = (uint64_t)v113;
    v109 = v28;
    v101 = 0;
  }
  sub_1004C7078(v27);
  v103 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  v110 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
  v99 = &_swiftEmptyArrayStorage;
  v100 = v1;
  v29 = v107;
  v105 = v18;
  v106 = v22;
  v104 = v25;
  while (1)
  {
    if (!v25)
    {
      v37 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v108, 1, 1, v18);
LABEL_14:
      v38 = v1;
      v39 = objc_msgSend(*(id *)(v1 + v103), "endDate", v96);
      v40 = v37;
      v41 = v39;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

      sub_10001BE90(v40, (uint64_t *)&unk_100828370);
      goto LABEL_16;
    }
    v33 = objc_msgSend(v101, "endDate");
    if (v33)
    {
      v34 = v33;
      v35 = (uint64_t)v102;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v33);

      v36 = 0;
    }
    else
    {
      v36 = 1;
      v35 = (uint64_t)v102;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v35, v36, 1, v18);
    v37 = (uint64_t)v108;
    sub_100045AD4(v35, (uint64_t)v108, (uint64_t *)&unk_100828370);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v37, 1, v18) == 1)
      goto LABEL_14;
    v38 = v1;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v22, v37, v18);
LABEL_16:
    v42 = v113;
    v43 = static Date.< infix(_:_:)(v113, v22);
    v112 = *(void (**)(char *, uint64_t))(v29 + 8);
    v112(v22, v18);
    if ((v43 & 1) == 0)
      break;
    v44 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v45 = v111;
    v44(v111, v42, v18);
    v1 = v38;
    DateInterval.init(start:duration:)(v45, *(double *)(*(_QWORD *)(v38 + v110) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
    v46 = v109;
    v47 = *(_QWORD *)v109->cellPadding;
    if (!v47)
    {
      swift_bridgeObjectRetain(v109);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29 = v107;
      goto LABEL_24;
    }
    v48 = (char *)v109 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v49 = swift_bridgeObjectRetain(v109);
    v50 = *(_QWORD *)(v8 + 72);
    v51 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
    do
    {
      v51(v6, v48, v7, v49);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v52(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        swift_bridgeObjectRelease(v109, v53, v54, v55, v56, v57, v58, v59);
        v1 = v100;
        v25 = v104;
        v18 = v105;
LABEL_6:
        v29 = v107;
        goto LABEL_7;
      }
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v60 = DateInterval.intersects(_:)(v10);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if ((v60 & 1) != 0)
      {
        swift_bridgeObjectRelease(v109, v61, v62, v63, v64, v65, v66, v67);
        v75 = v98;
        v1 = v100;
        sub_1004CAB80();
        v76 = v97;
        *(_QWORD *)(v75 + *(int *)(v97 + 20)) = 0;
        *(_QWORD *)(v75 + *(int *)(v76 + 24)) = 0;
        *(_QWORD *)(v75 + *(int *)(v76 + 28)) = 0;
        v77 = (unint64_t)v99;
        if ((swift_isUniquelyReferenced_nonNull_native(v99) & 1) == 0)
          v77 = sub_10013FD24(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
        v25 = v104;
        v18 = v105;
        v79 = *(_QWORD *)(v77 + 16);
        v78 = *(_QWORD *)(v77 + 24);
        if (v79 >= v78 >> 1)
          v77 = sub_10013FD24(v78 > 1, v79 + 1, 1, v77);
        *(_QWORD *)(v77 + 16) = v79 + 1;
        v80 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
        v99 = (CHWorkoutDetailHeartRateTableViewCell *)v77;
        v30 = sub_100047C88(v98, v77 + v80 + *(_QWORD *)(v96 + 72) * v79, type metadata accessor for WorkoutChartDataElement);
        goto LABEL_6;
      }
      v48 += v50;
      --v47;
    }
    while (v47);
    v1 = v100;
    v29 = v107;
    v46 = v109;
LABEL_24:
    v52(v6, 1, 1, v7);
    swift_bridgeObjectRelease(v46, v68, v69, v70, v71, v72, v73, v74);
    v25 = v104;
    v18 = v105;
LABEL_7:
    v31 = v111;
    v32 = v113;
    Date.addingTimeInterval(_:)(v30, *(double *)(*(_QWORD *)(v1 + v110) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
    v112(v32, v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v114, v7);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v32, v31, v18);
    v22 = v106;
  }
  v112(v42, v18);
  swift_bridgeObjectRelease(v109, v81, v82, v83, v84, v85, v86, v87);
  v88 = *(CHWorkoutDetailHeartRateTableViewCell **)(v38
                                                  + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  *(_QWORD *)(v38 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData) = v99;
  swift_bridgeObjectRelease(v88, v89, v90, v91, v92, v93, v94, v95);
}

uint64_t sub_1004C7F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;

  v3[12] = a2;
  v3[13] = a3;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_10081E650) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v4);
  v3[15] = swift_task_alloc(v4);
  return swift_task_switch(sub_1004C7F80, 0, 0);
}

uint64_t sub_1004C7F80()
{
  uint64_t v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 104);
  swift_beginAccess(v1 + 16, v0 + 48, 0, 0);
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 16);
  v40 = *(_QWORD *)v2->cellPadding;
  if (v40)
  {
    v3 = type metadata accessor for TaskPriority(0);
    v39 = *(_QWORD *)(v3 - 8);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v39 + 56);
    v4 = swift_bridgeObjectRetain(v2);
    v5 = 0;
    while (1)
    {
      v16 = *(_QWORD *)(v0 + 112);
      v15 = *(_QWORD *)(v0 + 120);
      v17 = *(_QWORD *)(v0 + 104);
      v18 = v2;
      v19 = *((_BYTE *)&v2[1].super.super.super.super.isa + v5);
      v38(v15, 1, 1, v3, v4);
      v20 = swift_allocObject(&unk_1007A4250, 24, 7);
      swift_weakInit(v20 + 16, v17);
      v21 = swift_allocObject(&unk_1007A4278, 41, 7);
      *(_QWORD *)(v21 + 16) = 0;
      v22 = (uint64_t *)(v21 + 16);
      *(_QWORD *)(v21 + 24) = 0;
      *(_QWORD *)(v21 + 32) = v20;
      *(_BYTE *)(v21 + 40) = v19;
      sub_1004D0F28(v15, v16);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v16, 1, v3);
      v24 = *(_QWORD *)(v0 + 112);
      if ((_DWORD)v23 == 1)
      {
        sub_10001BE90(*(_QWORD *)(v0 + 112), &qword_10081E650);
        v25 = 0;
        v26 = *v22;
        if (!*v22)
          goto LABEL_8;
      }
      else
      {
        v32 = TaskPriority.rawValue.getter(v23);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v24, v3);
        v25 = v32;
        v26 = *v22;
        if (!*v22)
        {
LABEL_8:
          v29 = 0;
          v31 = 0;
          goto LABEL_9;
        }
      }
      v27 = *(_QWORD *)(v21 + 24);
      ObjectType = swift_getObjectType(v26);
      swift_unknownObjectRetain(v26);
      v29 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v27);
      v31 = v30;
      swift_unknownObjectRelease(v26);
LABEL_9:
      v33 = **(_QWORD **)(v0 + 96);
      v34 = swift_allocObject(&unk_1007A42A0, 32, 7);
      *(_QWORD *)(v34 + 16) = &unk_1008372B8;
      *(_QWORD *)(v34 + 24) = v21;
      v35 = v31 | v29;
      if (v31 | v29)
      {
        v35 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v29;
        *(_QWORD *)(v0 + 40) = v31;
      }
      v2 = v18;
      ++v5;
      v6 = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 72) = 1;
      *(_QWORD *)(v0 + 80) = v35;
      *(_QWORD *)(v0 + 88) = v33;
      v7 = swift_task_create(v25 | 0x3100, v0 + 72, (char *)&type metadata for () + 8, &unk_1008372C0, v34);
      swift_release(v7);
      sub_10001BE90(v6, &qword_10081E650);
      if (v40 == v5)
      {
        swift_bridgeObjectRelease(v18, v8, v9, v10, v11, v12, v13, v14);
        break;
      }
    }
  }
  v36 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004C8214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 64) = a5;
  *(_QWORD *)(v5 + 40) = a4;
  return swift_task_switch(sub_1004C8230, 0, 0);
}

uint64_t sub_1004C8230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 48) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = Strong;
  v4 = swift_task_alloc(dword_1008372CC);
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_1004C82D8;
  v5 = *(_BYTE *)(v0 + 64);
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 32) = v5;
  return swift_task_switch(sub_1004C8344, 0, 0);
}

uint64_t sub_1004C82D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1004C8328(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 32) = a1;
  return swift_task_switch(sub_1004C8344, 0, 0);
}

void sub_1004C8344()
{
  __asm { BR              X10 }
}

uint64_t sub_1004C8374()
{
  uint64_t v0;

  sub_1004C9910((uint64_t)sub_1004D4150, (uint64_t)sub_1004C6E98, (uint64_t)&unk_1007A4460, (SEL *)&selRef_heartRateDataForWorkout_workoutActivity_completion_);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004C8548()
{
  sub_1004C96F4(11, (uint64_t)&unk_1007A42C8, (uint64_t)sub_1004D1004, (uint64_t)&unk_1007A42E0, (SEL *)&selRef_cadenceSamplesForWorkout_workoutActivity_completion_);
  JUMPOUT(0x1004C8534);
}

uint64_t sub_1004C8578()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1004C85C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1[24] = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v1[25] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[26] = v3;
  v1[27] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v1[28] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[29] = v5;
  v1[30] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100828370) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v6);
  v1[32] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date(0);
  v1[33] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[34] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v9);
  v1[36] = swift_task_alloc(v9);
  v1[37] = swift_task_alloc(v9);
  v1[38] = swift_task_alloc(v9);
  v1[39] = swift_task_alloc(v9);
  return swift_task_switch(sub_1004C86D8, 0, 0);
}

void sub_1004C86D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char **v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v24;
  void *v25;
  double v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  uint64_t v37;
  double v38;
  void (*v39)(uint64_t, uint64_t);
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  float64x2_t v61;
  float64_t v62;
  char isUniquelyReferenced_nonNull_native;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  __n128 v71;
  uint64_t v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  uint64_t v81;
  uint64_t v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  unsigned int v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  void *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  CHWorkoutDetailHeartRateTableViewCell *v145;
  CHWorkoutDetailHeartRateTableViewCell *v146;
  char *aBlock;
  uint64_t v148;

  v1 = *(void **)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings);
  if ((uint64_t)objc_msgSend(v1, "count") < 2)
  {
LABEL_48:
    v127 = *(_QWORD *)(v0 + 304);
    v129 = *(_QWORD *)(v0 + 288);
    v128 = *(_QWORD *)(v0 + 296);
    v130 = *(_QWORD *)(v0 + 280);
    v132 = *(_QWORD *)(v0 + 248);
    v131 = *(_QWORD *)(v0 + 256);
    v133 = *(_QWORD *)(v0 + 240);
    v134 = *(_QWORD *)(v0 + 216);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = objc_msgSend(v1, "allValidLocations");
  v3 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
    goto LABEL_34;
  v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = &qword_10086A000;
  if (v12)
  {
    while (1)
    {
      if (v12 < 1)
      {
        __break(1u);
        goto LABEL_50;
      }
      v14 = 0;
      v15 = *(char **)(v0 + 192);
      v141 = v13[410];
      v143 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
      v139 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
      v16 = v4 & 0xC000000000000001;
      v17 = &selRef_setRightBarButtonItems_animated_;
      v148 = *(_QWORD *)(v0 + 272);
      v18 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
      __asm { FMOV            V0.2D, #1.0 }
      v135 = _Q0;
      v137 = v12;
      v138 = v4;
      aBlock = v15;
      v136 = v4 & 0xC000000000000001;
      while (1)
      {
        v24 = v16
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v4)
            : *(id *)(v4 + 8 * v14 + 32);
        v25 = v24;
        objc_msgSend(v24, v17[379], (_QWORD)v135);
        if (v26 > 0.0)
          break;

LABEL_7:
        if (v12 == ++v14)
          goto LABEL_39;
      }
      v145 = v18;
      v27 = objc_msgSend(v25, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

      v28 = *(void **)&v15[v141];
      if (!v28)
        break;
      v29 = *(_QWORD *)(v0 + 288);
      v31 = *(_QWORD *)(v0 + 256);
      v30 = *(_QWORD *)(v0 + 264);
      v32 = objc_msgSend(v28, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

      v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32);
      v33(v31, v29, v30);
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56);
      v34(v31, 0, 1, v30);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v31, 1, v30) == 1)
      {
        v15 = aBlock;
LABEL_16:
        v35 = *(_QWORD *)(v0 + 256);
        v36 = objc_msgSend(*(id *)&v15[v143], "startDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

        sub_10001BE90(v35, (uint64_t *)&unk_100828370);
        goto LABEL_18;
      }
      v33(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
      v15 = aBlock;
LABEL_18:
      v4 = *(_QWORD *)(v0 + 296);
      v37 = *(_QWORD *)(v0 + 264);
      v38 = Date.timeIntervalSince(_:)(v4);
      v39 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
      v39(v4, v37);
      v40 = *(double *)(*(_QWORD *)&v15[v139] + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      v41 = v38 / v40;
      if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) != 0)
      {
        if (v41 <= -9.22337204e18)
          goto LABEL_32;
        if (v41 >= 9.22337204e18)
          goto LABEL_33;
        if (v28)
        {
          v42 = *(_QWORD *)(v0 + 288);
          v43 = *(_QWORD *)(v0 + 264);
          v44 = *(_QWORD *)(v0 + 248);
          v45 = objc_msgSend(v28, "startDate");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v45);

          v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32);
          v46(v44, v42, v43);
          v34(v44, 0, 1, v43);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v44, 1, v43) != 1)
          {
            v47 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v46)(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 264));
            goto LABEL_26;
          }
        }
        else
        {
          v34(*(_QWORD *)(v0 + 248), 1, 1, *(_QWORD *)(v0 + 264));
        }
        v48 = *(_QWORD *)(v0 + 248);
        v49 = objc_msgSend(*(id *)&aBlock[v143], "startDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v49);

        v47 = sub_10001BE90(v48, (uint64_t *)&unk_100828370);
LABEL_26:
        v18 = v145;
        v50 = *(_QWORD *)(v0 + 304);
        v51 = *(_QWORD *)(v0 + 280);
        v52 = *(_QWORD *)(v0 + 264);
        Date.addingTimeInterval(_:)(v47, v40 * 0.5 + v40 * (double)(uint64_t)v41);
        v39(v51, v52);
        v39(v50, v52);
        if (*(_QWORD *)v145->cellPadding && (v53 = sub_10043939C(*(_QWORD *)(v0 + 312)), (v54 & 1) != 0))
        {
          v55 = *(_QWORD *)(*(_QWORD *)v145[1].cellInset + 8 * v53);
          *(_QWORD *)&v56 = swift_retain(v55).n128_u64[0];
        }
        else
        {
          v57 = type metadata accessor for WorkoutDataBucket();
          v55 = swift_allocObject(v57, 32, 7);
          *(_QWORD *)(v55 + 16) = 0;
          *(_QWORD *)(v55 + 24) = 0;
        }
        v58 = *(_QWORD *)(v0 + 312);
        v59 = *(_QWORD *)(v0 + 288);
        v60 = *(_QWORD *)(v0 + 264);
        objc_msgSend(v25, "altitude", v56);
        v61.f64[1] = *((float64_t *)&v135 + 1);
        v61.f64[0] = v62;
        *(float64x2_t *)(v55 + 16) = vaddq_f64(v61, *(float64x2_t *)(v55 + 16));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16))(v59, v58, v60);
        swift_retain(v55);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v145);
        sub_10040001C(v55, v59, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v64, v65, v66, v67, v68, v69, v70);
        v39(v59, v60);

        v71 = swift_release(v55);
        ((void (*)(uint64_t, uint64_t, __n128))v39)(v58, v60, v71);
        v12 = v137;
        v4 = v138;
        v15 = aBlock;
        v16 = v136;
        v17 = &selRef_setRightBarButtonItems_animated_;
        goto LABEL_7;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      if (v4 < 0)
        v72 = v4;
      else
        v72 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v12 = _CocoaArrayWrapper.endIndex.getter(v72);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v73, v74, v75, v76, v77, v78, v79);
      v13 = &qword_10086A000;
      if (!v12)
        goto LABEL_38;
    }
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56);
    v34(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 264));
    goto LABEL_16;
  }
LABEL_38:
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
LABEL_39:
  *(_QWORD *)(v0 + 320) = v18;
  v80 = v18;
  v81 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v5, v6, v7, v8, v9, v10, v11);
  swift_bridgeObjectRetain(v80);
  *(_QWORD *)(v0 + 328) = sub_1004C690C(v82);
  swift_bridgeObjectRelease(v80, v83, v84, v85, v86, v87, v88, v89);
  v90 = *(void **)(v81 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  v91 = objc_msgSend(v90, "fiui_activityType");
  if (v91)
  {
    v92 = v91;
    v93 = objc_msgSend(v91, "isDownhillSnowSport");

    if (v93)
    {
      v94 = v0 + 16;
      v95 = *(void **)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
      *(_QWORD *)(v0 + 56) = v0 + 184;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1004C903C;
      v96 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 128) = _NSConcreteStackBlock;
      v97 = (_QWORD *)(v0 + 128);
      v97[1] = 0x40000000;
      v97[2] = sub_1004CACC8;
      v97[3] = &unk_1007A43D0;
      v97[4] = v96;
      objc_msgSend(v95, "downhillRunsForWorkout:completion:", v90, v97);
      swift_continuation_await(v94);
      return;
    }
    v98 = *(void **)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    if (v98 && (v99 = objc_msgSend(v98, "fiui_elevationGain")) != 0
      || (v99 = objc_msgSend(v90, "fiui_elevationGain")) != 0)
    {
      v100 = (void *)objc_opt_self(HKUnit);
      v101 = v99;
      v102 = objc_msgSend(v100, "meterUnit");
      objc_msgSend(v101, "doubleValueForUnit:", v102);
      v104 = v103;

      v105 = 0;
    }
    else
    {
      v101 = 0;
      v105 = 1;
      v104 = 0;
    }
    v106 = *(_QWORD *)(v0 + 328);
    v107 = *(_QWORD *)(v0 + 240);
    v108 = *(_QWORD *)(v0 + 216);
    v144 = *(_QWORD *)(v0 + 224);
    v146 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 320);
    v109 = *(_QWORD *)(v0 + 200);
    v140 = *(_QWORD *)(v0 + 208);
    v142 = *(_QWORD *)(v0 + 232);
    v110 = *(_QWORD *)(v0 + 192);
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v112 = (void *)static OS_dispatch_queue.main.getter(v111);
    v113 = swift_allocObject(&unk_1007A4390, 48, 7);
    *(_QWORD *)(v113 + 16) = v104;
    *(_BYTE *)(v113 + 24) = v105;
    *(_QWORD *)(v113 + 32) = v110;
    *(_QWORD *)(v113 + 40) = v106;
    *(_QWORD *)(v0 + 112) = sub_1004D40FC;
    *(_QWORD *)(v0 + 120) = v113;
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 88) = 1107296256;
    *(_QWORD *)(v0 + 96) = sub_10002D0F8;
    *(_QWORD *)(v0 + 104) = &unk_1007A43A8;
    v114 = _Block_copy((const void *)(v0 + 80));
    swift_retain(v110);
    static DispatchQoS.unspecified.getter(v115);
    *(_QWORD *)(v0 + 176) = &_swiftEmptyArrayStorage;
    v116 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v117 = sub_100047110(&qword_100828C80);
    v118 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 176, v117, v118, v109, v116);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v107, v108, v114);
    _Block_release(v114);

    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v108, v109);
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v107, v144);
    v119 = *(_QWORD *)(v0 + 120);

    swift_release(v119);
    swift_bridgeObjectRelease(v146, v120, v121, v122, v123, v124, v125, v126);
    goto LABEL_48;
  }
LABEL_50:
  __break(1u);
}

uint64_t sub_1004C903C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 336) = v1;
  if (v1)
    v2 = sub_1004C94CC;
  else
    v2 = sub_1004C909C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004C909C(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;

  v9 = v8[23];
  v10 = 0;
  if (!v9)
    goto LABEL_18;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 >= 0)
      v25 = v9 & 0xFFFFFFFFFFFFFF8;
    else
      v25 = v8[23];
    swift_bridgeObjectRetain(v8[23]);
    v11 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v26, v27, v28, v29, v30, v31, v32);
    if (!v11)
    {
LABEL_16:
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, a2, a3, a4, a5, a6, a7, a8);
      v33 = type metadata accessor for DownhillRunsStats(0);
      swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
      v35 = DownhillRunsStats.init(downhillRuns:)(v34);
      v36 = (void *)DownhillRunsStats.elevationDescended.getter(v35);
      swift_release(v35);
      if (v36)
      {
        v37 = (void *)objc_opt_self(HKUnit);
        v38 = v36;
        v39 = objc_msgSend(v37, "meterUnit");
        objc_msgSend(v38, "doubleValueForUnit:", v39);
        v10 = v40;

        v72 = v38;
        v41 = 0;
LABEL_19:
        v42 = v8[41];
        v43 = v8[30];
        v73 = v8[29];
        v44 = v8[27];
        v74 = v8[28];
        v75 = (CHWorkoutDetailHeartRateTableViewCell *)v8[40];
        v46 = v8[25];
        v45 = v8[26];
        v47 = v8[24];
        sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
        v49 = (void *)static OS_dispatch_queue.main.getter(v48);
        v50 = swift_allocObject(&unk_1007A4390, 48, 7);
        *(_QWORD *)(v50 + 16) = v10;
        *(_BYTE *)(v50 + 24) = v41;
        *(_QWORD *)(v50 + 32) = v47;
        *(_QWORD *)(v50 + 40) = v42;
        v8[14] = sub_1004D40FC;
        v8[15] = v50;
        v8[10] = _NSConcreteStackBlock;
        v8[11] = 1107296256;
        v8[12] = sub_10002D0F8;
        v8[13] = &unk_1007A43A8;
        v51 = _Block_copy(v8 + 10);
        swift_retain(v47);
        static DispatchQoS.unspecified.getter(v52);
        v8[22] = &_swiftEmptyArrayStorage;
        v53 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v54 = sub_100047110(&qword_100828C80);
        v55 = sub_10002FB08();
        dispatch thunk of SetAlgebra.init<A>(_:)(v8 + 22, v54, v55, v46, v53);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v44, v51);
        _Block_release(v51);

        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v43, v74);
        v56 = v8[15];

        swift_release(v56);
        swift_bridgeObjectRelease(v75, v57, v58, v59, v60, v61, v62, v63);
        v64 = v8[38];
        v66 = v8[36];
        v65 = v8[37];
        v67 = v8[35];
        v69 = v8[31];
        v68 = v8[32];
        v70 = v8[30];
        v71 = v8[27];
        swift_task_dealloc(v8[39]);
        swift_task_dealloc(v64);
        swift_task_dealloc(v65);
        swift_task_dealloc(v66);
        swift_task_dealloc(v67);
        swift_task_dealloc(v68);
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        return ((uint64_t (*)(void))v8[1])();
      }
LABEL_18:
      v72 = 0;
      v41 = 1;
      goto LABEL_19;
    }
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      goto LABEL_16;
  }
  result = specialized ContiguousArray.reserveCapacity(_:)(v11);
  if ((v11 & 0x8000000000000000) == 0)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      do
      {
        v14 = v13 + 1;
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
        v16 = *(id *)(v15 + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
        v17 = swift_unknownObjectRelease(v15);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v18 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized ContiguousArray._endMutation()(v19);
        v13 = v14;
      }
      while (v11 != v14);
    }
    else
    {
      v20 = (CHWorkoutDetailHeartRateTableViewCell *)(v9 + 32);
      do
      {
        isa = v20->super.super.super.super.isa;
        v20 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v20 + 8);
        v22 = *(id *)((char *)isa + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v23 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
        v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
        specialized ContiguousArray._endMutation()(v24);
        --v11;
      }
      while (v11);
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C94CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;

  v2 = v1[42];
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v3 = v1[41];
  v4 = v1[30];
  v33 = v1[29];
  v5 = v1[27];
  v34 = v1[28];
  v35 = (CHWorkoutDetailHeartRateTableViewCell *)v1[40];
  v7 = v1[25];
  v6 = v1[26];
  v8 = v1[24];
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1007A4390, 48, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 24) = 1;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v3;
  v1[14] = sub_1004D40FC;
  v1[15] = v11;
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 1107296256;
  v1[12] = sub_10002D0F8;
  v1[13] = &unk_1007A43A8;
  v12 = _Block_copy(v1 + 10);
  swift_retain(v8);
  static DispatchQoS.unspecified.getter(v13);
  v1[22] = &_swiftEmptyArrayStorage;
  v14 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100047110(&qword_100828C80);
  v16 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 22, v15, v16, v7, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v12);
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v4, v34);
  swift_release(v1[15]);
  swift_bridgeObjectRelease(v35, v17, v18, v19, v20, v21, v22, v23);
  v24 = v1[38];
  v26 = v1[36];
  v25 = v1[37];
  v27 = v1[35];
  v29 = v1[31];
  v28 = v1[32];
  v30 = v1[30];
  v31 = v1[27];
  swift_task_dealloc(v1[39]);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return ((uint64_t (*)(void))v1[1])();
}

void sub_1004C96F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[5];
  uint64_t v19;

  v10 = v5;
  v12 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  v15 = swift_allocObject(&unk_1007A4250, 24, 7);
  swift_weakInit(v15 + 16, v10);
  v16 = swift_allocObject(a2, 25, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a1;
  v18[4] = a3;
  v19 = v16;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1004C6F7C;
  v18[3] = a4;
  v17 = _Block_copy(v18);
  objc_msgSend(v12, *a5, v13, v14, v17, swift_release(v19).n128_f64[0]);
  _Block_release(v17);
}

void sub_1004C9808()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = v0;
  v2 = *v0;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  v4 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  v5 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  v6 = swift_allocObject(&unk_1007A4250, 24, 7);
  swift_weakInit(v6 + 16, v1);
  v7 = swift_allocObject(&unk_1007A44E8, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v2;
  v9[4] = sub_1004D418C;
  v10 = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1004C6F7C;
  v9[3] = &unk_1007A4500;
  v8 = _Block_copy(v9);
  objc_msgSend(v3, "powerSamplesForWorkout:workoutActivity:completion:", v4, v5, v8, swift_release(v10).n128_f64[0]);
  _Block_release(v8);
}

void sub_1004C9910(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  uint64_t v15;

  v9 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  v12 = swift_allocObject(&unk_1007A4250, 24, 7);
  swift_weakInit(v12 + 16, v4);
  v14[4] = a1;
  v15 = v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = a2;
  v14[3] = a3;
  v13 = _Block_copy(v14);
  swift_release(v15);
  objc_msgSend(v9, *a4, v10, v11, v13);
  _Block_release(v13);
}

void sub_1004C99FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  os_log_type_t v21;
  void *v22;
  os_log_type_t v23;
  NSObject *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t Strong;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  void *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  double v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  const char *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  double v68;
  __n128 v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  int v97;
  _QWORD v98[3];
  char v99[8];
  uint64_t aBlock[5];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v97 = a4;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WorkoutChartDataElement(0);
  __chkstk_darwin(v15);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v20 = swift_errorRetain(a2);
    v21 = static os_log_type_t.error.getter(v20);
    v22 = (void *)HKLogWorkouts;
    v23 = v21;
    if (os_log_type_enabled(HKLogWorkouts, v21))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v24 = v22;
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      aBlock[0] = v26;
      *(_DWORD *)v25 = 136315138;
      swift_getErrorValue(a2, v99, v98);
      v27 = Error.localizedDescription.getter(v98[1], v98[2]);
      v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
      v102 = sub_10003E8EC(v27, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v25 + 4);
      swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v24, v23, "Error getting cadence: %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
  }
  else
  {
    v93 = v17;
    v91 = v16;
    v94 = v12;
    v95 = v14;
    v92 = v10;
    v96 = v8;
    swift_beginAccess(a3 + 16, &v102, 0, 0);
    Strong = swift_weakLoadStrong(a3 + 16);
    if (Strong)
    {
      v38 = (CHWorkoutDetailHeartRateTableViewCell *)Strong;
      if (!a1)
        goto LABEL_13;
      if ((unint64_t)a1 >> 62)
      {
        v80 = a1 >= 0 ? a1 & 0xFFFFFFFFFFFFFF8 : a1;
        swift_bridgeObjectRetain(a1);
        v39 = _CocoaArrayWrapper.endIndex.getter(v80);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v81, v82, v83, v84, v85, v86, v87);
      }
      else
      {
        v39 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v40 = v96;
      v41 = v11;
      if (v39
        && (v42 = v7, swift_retain(v38), sub_1004D3740(a1, v38, (uint64_t)v38), v44 = v43, swift_release(v38), v44))
      {
        v45 = v44;
        v89 = v42;
        v90 = v41;
        v46 = swift_allocObject(&unk_1007A4318, 24, 7);
        v47 = *(Class *)((char *)&v38->super.super.super.super.isa
                       + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
        v48 = v38;
        if (!v47)
          v47 = *(Class *)((char *)&v38->super.super.super.super.isa
                         + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
        objc_msgSend(v47, "fiui_averageCadence");
        v51 = v92;
        v50 = v93;
        v52 = v95;
        v53 = v97;
        *(double *)(v46 + 16) = v54;
        v55 = v45;
        if (v54 < 2.22044605e-16)
        {
          v56 = *(_QWORD *)v45->cellPadding;
          if (v56)
          {
            v57 = (uint64_t)v45
                + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
            v58 = *(_QWORD *)(v50 + 72);
            swift_bridgeObjectRetain(v45);
            v59 = 0.0;
            v60 = v91;
            do
            {
              sub_10004F8C8(v57, (uint64_t)v19, type metadata accessor for WorkoutChartDataElement);
              v59 = v59 + *(double *)&v19[*(int *)(v60 + 20)];
              sub_100011F54((uint64_t)v19, type metadata accessor for WorkoutChartDataElement);
              v57 += v58;
              --v56;
            }
            while (v56);
            v55 = v45;
            swift_bridgeObjectRelease(v45, v61, v62, v63, v64, v65, v66, v67);
            v68 = v59 / (double)*(uint64_t *)v45->cellPadding;
            v52 = v95;
            v53 = v97;
          }
          else
          {
            v68 = NAN;
          }
          *(double *)(v46 + 16) = v68;
          v40 = v96;
        }
        sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
        v70 = (void *)static OS_dispatch_queue.main.getter(v69);
        v71 = swift_allocObject(&unk_1007A4340, 48, 7);
        *(_QWORD *)(v71 + 16) = v38;
        *(_QWORD *)(v71 + 24) = v46;
        *(_BYTE *)(v71 + 32) = v53;
        *(_QWORD *)(v71 + 40) = v55;
        aBlock[4] = (uint64_t)sub_1004D4060;
        v101 = v71;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10002D0F8;
        aBlock[3] = (uint64_t)&unk_1007A4358;
        v72 = v46;
        v73 = _Block_copy(aBlock);
        v74 = v101;
        swift_retain(v48);
        swift_retain(v72);
        swift_release(v74);
        static DispatchQoS.unspecified.getter(v75);
        aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
        v76 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v77 = sub_100047110(&qword_100828C80);
        v78 = sub_10002FB08();
        v79 = v89;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v77, v78, v89, v76);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v51, v73);
        _Block_release(v73);
        swift_release(v48);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v51, v79);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v52, v90);
        v49 = (CHWorkoutDetailHeartRateTableViewCell *)v72;
      }
      else
      {
LABEL_13:
        v49 = v38;
      }
      swift_release(v49);
    }
  }
}

void sub_1004C9FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  __n128 v48;
  const char *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  double v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  char *v63;
  id v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  id v76;
  double v77;
  double v78;
  double v79;
  id v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  int v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  id v89;
  char *v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  const char *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  __int128 v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  CHWorkoutDetailHeartRateTableViewCell *v145;

  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v136 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v124 - v7;
  v9 = type metadata accessor for Date(0);
  v144 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v140 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v124 - v12;
  __chkstk_darwin(v14);
  v143 = (char *)&v124 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v124 - v17;
  __chkstk_darwin(v19);
  v128 = (char *)&v124 - v20;
  __chkstk_darwin(v21);
  v142 = (char *)&v124 - v22;
  v127 = type metadata accessor for DateInterval(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v24)
  {
    if (v24 < 1)
    {
      __break(1u);
      return;
    }
    v134 = v13;
    v135 = v8;
    v32 = 0;
    v133 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    v137 = a1 & 0xC000000000000001;
    v141 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
    v132 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
    v138 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    v124 = xmmword_100622F90;
    v139 = a2;
    v130 = v24;
    v131 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
    v129 = v18;
    while (1)
    {
      v56 = v137
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, a1)
          : *(id *)(a1 + 8 * v32 + 32);
      v57 = v56;
      v58 = objc_msgSend(v56, "quantityType", (_QWORD)v124, *((_QWORD *)&v124 + 1));
      v59 = objc_msgSend(v58, "aggregationStyle");

      v60 = 1.0;
      if (v59)
        break;
      v61 = objc_msgSend(v57, "startDate");
      v62 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
      v63 = v142;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v61);

      v64 = objc_msgSend(v57, "endDate");
      v65 = v128;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v64);

      v66 = v125;
      v67 = v63;
      a1 = (uint64_t)v62;
      v68 = DateInterval.init(start:end:)(v67, v65);
      v60 = DateInterval.duration.getter(v68);
      v69 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v66, v127);
      if (v60 > 0.0)
        break;
      v93 = static os_log_type_t.error.getter(v69);
      v94 = (void *)HKLogWorkouts;
      v95 = sub_100047110((uint64_t *)&unk_100827460);
      v96 = swift_allocObject(v95, 72, 7);
      *(_OWORD *)(v96 + 16) = v124;
      *(_QWORD *)(v96 + 56) = sub_10001E724(0, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
      *(_QWORD *)(v96 + 64) = sub_1004D4078();
      *(_QWORD *)(v96 + 32) = v57;
      v97 = v94;
      v98 = v57;
      os_log(_:dso:log:_:_:)(v93, &_mh_execute_header, v97, "Cumulative sample missing duration, rejecting data: %@", 54, 2, v96);

      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v96, v99, v100, v101, v102, v103, v104, v105);
LABEL_7:
      ++v32;
      a2 = v139;
      if (v24 == v32)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v49, v50, v51, v52, v53, v54, v55);
        v106 = v141;
        goto LABEL_39;
      }
    }
    v70 = objc_msgSend(v57, "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v70);

    v13 = *(char **)(a2 + v132);
    if (v13)
    {
      v71 = objc_msgSend(*(id *)(a2 + v132), "startDate");
      v72 = v142;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v71);

      v73 = v144;
      v74 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
      v75 = (uint64_t)v135;
      v74(v135, v72, v9);
      a1 = *(_QWORD *)(v73 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))a1)(v75, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v75, 1, v9) != 1)
      {
        v18 = v134;
        v74(v134, (char *)v75, v9);
        goto LABEL_18;
      }
    }
    else
    {
      a1 = *(_QWORD *)(v144 + 56);
      v75 = (uint64_t)v135;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))a1)(v135, 1, 1, v9);
    }
    v76 = objc_msgSend(*(id *)(a2 + v138), "startDate");
    v18 = v134;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v76);

    sub_10001BE90(v75, (uint64_t *)&unk_100828370);
LABEL_18:
    v77 = Date.timeIntervalSince(_:)(v18);
    v8 = *(char **)(v144 + 8);
    ((void (*)(char *, uint64_t))v8)(v18, v9);
    v78 = *(double *)(*(_QWORD *)(a2 + v133) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    v79 = v77 / v78;
    if ((~*(_QWORD *)&v79 & 0x7FF0000000000000) != 0)
    {
      if (v79 <= -9.22337204e18)
        goto LABEL_32;
      if (v79 >= 9.22337204e18)
        goto LABEL_33;
      if (v13)
      {
        v80 = objc_msgSend(v13, "startDate");
        v81 = v142;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v80);

        v82 = v144;
        v83 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
        v84 = (uint64_t)v136;
        v83(v136, v81, v9);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))a1)(v84, 0, 1, v9);
        v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v84, 1, v9);
        v86 = (uint64_t)v129;
        v87 = v141;
        if (v85 != 1)
        {
          v88 = ((uint64_t (*)(char *, uint64_t, uint64_t))v83)(v140, v84, v9);
          goto LABEL_26;
        }
      }
      else
      {
        v84 = (uint64_t)v136;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))a1)(v136, 1, 1, v9);
        v86 = (uint64_t)v129;
        v87 = v141;
      }
      v89 = objc_msgSend(*(id *)(v139 + v138), "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v89);

      v88 = sub_10001BE90(v84, (uint64_t *)&unk_100828370);
LABEL_26:
      a1 = (uint64_t)v131;
      v90 = v140;
      Date.addingTimeInterval(_:)(v88, v78 * 0.5 + v78 * (double)(uint64_t)v79);
      ((void (*)(char *, uint64_t))v8)(v90, v9);
      ((void (*)(char *, uint64_t))v8)(v143, v9);
      if (*(_QWORD *)v87->cellPadding && (v91 = sub_10043939C(v86), (v92 & 1) != 0))
      {
        v34 = *(_QWORD *)(*(_QWORD *)v87[1].cellInset + 8 * v91);
        swift_retain(v34);
      }
      else
      {
        v33 = type metadata accessor for WorkoutDataBucket();
        v34 = swift_allocObject(v33, 32, 7);
        *(_QWORD *)(v34 + 16) = 0;
        *(_QWORD *)(v34 + 24) = 0;
      }
      v35 = objc_msgSend(v57, "quantity");
      objc_msgSend(v35, "_value");
      v37 = v36;

      v38 = v60 + *(double *)(v34 + 24);
      *(double *)(v34 + 16) = v37 + *(double *)(v34 + 16);
      *(double *)(v34 + 24) = v38;
      v39 = (uint64_t)v142;
      (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v142, v86, v9);
      swift_retain(v34);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v87);
      v145 = v87;
      sub_10040001C(v34, v39, isUniquelyReferenced_nonNull_native);
      v141 = v145;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v41, v42, v43, v44, v45, v46, v47);
      ((void (*)(uint64_t, uint64_t))v8)(v39, v9);

      v48 = swift_release(v34);
      ((void (*)(uint64_t, uint64_t, __n128))v8)(v86, v9, v48);
      v24 = v130;
      goto LABEL_7;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    if (a1 < 0)
      v107 = a1;
    else
      v107 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v24 = _CocoaArrayWrapper.endIndex.getter(v107);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v25, v26, v27, v28, v29, v30, v31);
  v106 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
LABEL_39:
  swift_bridgeObjectRetain(v106);
  v109 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1004C690C(v108);
  swift_bridgeObjectRelease(v106, v110, v111, v112, v113, v114, v115, v116);
  if (!*(_QWORD *)v109->cellPadding)
    swift_bridgeObjectRelease(v109, v117, v118, v119, v120, v121, v122, v123);
  swift_bridgeObjectRelease(v106, v117, v118, v119, v120, v121, v122, v123);
}

uint64_t sub_1004CA860(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  void (*v40)(_BYTE *, _QWORD);
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[32];
  char v50[24];

  v46 = a4;
  v44 = a3;
  v43 = a2;
  v6 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v6);
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - v12;
  v47 = type metadata accessor for WorkoutChartViewModel(0);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a2 + 16;
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  swift_beginAccess(v16, v50, 0, 0);
  v24 = v21;
  v25 = v44;
  v26 = sub_100134F60(v24, (uint64_t)v23, *(_QWORD *)(v43 + 16), 0, v44);
  swift_bridgeObjectRelease(v23, v27, v28, v29, v30, v31, v32, v33);
  v34 = v26;
  v35 = v46;
  swift_bridgeObjectRetain(v46);
  sub_1004C7078((uint64_t)v13);
  sub_1004C7204((uint64_t)v10);
  v36 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain(v36);
  swift_retain(v17);
  sub_1002A23DC(v25, 0, 0, v34, v35, 0, (uint64_t)v13, (uint64_t)v10, (uint64_t)v15, v36, 0, v17);
  v37 = v48;
  sub_10004F8C8((uint64_t)v15, v48, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 1, v47);
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v39 = swift_getKeyPath(&unk_100641310);
  v40 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v49, a1, KeyPath, v39);
  sub_1004C6420(v37, v25);
  v40(v49, 0);

  swift_release(KeyPath);
  swift_release(v39);
  return sub_100011F54((uint64_t)v15, type metadata accessor for WorkoutChartViewModel);
}

uint64_t sub_1004CAB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t (*v6)(char *, uint64_t);
  uint64_t result;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004C7078((uint64_t)v4);
  v5 = Date.timeIntervalSince(_:)(v4);
  v6 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  result = v6(v4, v1);
  v8 = *(double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties)
                 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  v9 = v5 / v8;
  if ((~COERCE__INT64(v5 / v8) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    v10 = v8 * 0.5 + v8 * (double)(uint64_t)v9;
    v11 = sub_1004C7078((uint64_t)v4);
    Date.addingTimeInterval(_:)(v11, v10);
    return v6(v4, v1);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1004CACC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100047110(&qword_10082EEA0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v10 = 0;
    if (a2)
    {
      v12 = type metadata accessor for DownhillRunBridge();
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v12);
    }
    v13 = v10;
    sub_100045AD4((uint64_t)&v13, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_1008372E8);
    return swift_continuation_throwingResume(v3);
  }
}

id sub_1004CAD84(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  id result;
  void *v24;
  unsigned int v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  void (*v53)(_BYTE *, _QWORD);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[32];

  v8 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - v15;
  v17 = type metadata accessor for WorkoutChartViewModel(0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &qword_10086A000;
  v59 = v22;
  if ((a2 & 1) != 0)
  {
    v40 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
LABEL_8:
    v48 = v40;
    swift_bridgeObjectRetain(a4);
    sub_1004C7078((uint64_t)v16);
    sub_1004C7204((uint64_t)v13);
    v49 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
    v50 = *(_QWORD *)(a3 + v21[406]);
    swift_bridgeObjectRetain(v49);
    swift_retain(v50);
    sub_1002A23DC(2, 0, 0, v48, a4, 0, (uint64_t)v16, (uint64_t)v13, (uint64_t)v20, v49, 0, v50);
    sub_10004F8C8((uint64_t)v20, (uint64_t)v10, type metadata accessor for WorkoutChartViewModel);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v10, 0, 1, v17);
    KeyPath = swift_getKeyPath(&unk_1006412E8);
    v52 = swift_getKeyPath(&unk_100641310);
    v53 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v60, a3, KeyPath, v52);
    sub_1004C6420((uint64_t)v10, 2);
    v53(v60, 0);

    swift_release(KeyPath);
    swift_release(v52);
    return (id)sub_100011F54((uint64_t)v20, type metadata accessor for WorkoutChartViewModel);
  }
  v55 = a1;
  v56 = v13;
  v57 = v17;
  v58 = a4;
  result = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "fiui_activityType", v18);
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend(result, "isDownhillSnowSport");

    if (v25)
      v26 = (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006A21A0;
    else
      v26 = (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006A2170;
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, 0, 0);

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v21 = &qword_10086A000;
    swift_bridgeObjectRelease(v26, v33, v34, v35, v36, v37, v38, v39);

    v40 = sub_100134F60(v30, (uint64_t)v32, v55, 0, 2);
    swift_bridgeObjectRelease(v32, v41, v42, v43, v44, v45, v46, v47);
    v17 = v57;
    a4 = v58;
    v13 = v56;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1004CB120(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t Strong;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  double v41;
  double v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD v89[3];
  char v90[8];
  uint64_t aBlock[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = (void *)HKLogWorkouts;
    v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a2, v90, v89);
      v21 = Error.localizedDescription.getter(v89[1], v89[2]);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v93 = sub_10003E8EC(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting ground contact time data: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v93, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v32 = (uint64_t *)Strong;
  if (!a1)
    goto LABEL_26;
  v33 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v34 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_8;
LABEL_26:
    swift_release(v32);
    return;
  }
  if (a1 < 0)
    v73 = a1;
  else
    v73 = a1 & 0xFFFFFFFFFFFFFF8;
  v88 = (unint64_t)a1 >> 62;
  swift_bridgeObjectRetain(a1);
  v34 = _CocoaArrayWrapper.endIndex.getter(v73);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v74, v75, v76, v77, v78, v79, v80);
  v33 = v88;
  if (!v34)
    goto LABEL_26;
LABEL_8:
  v87 = v6;
  v88 = v33;
  v84 = v11;
  v85 = v10;
  v86 = v7;
  v83 = v32;
  sub_1004CB634(a1, v32);
  v82 = v35;
  if (v34 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v36 = 0;
    v37 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, a1);
      else
        v38 = *(id *)(a1 + 8 * v36 + 32);
      v39 = v38;
      ++v36;
      v40 = objc_msgSend(v38, "quantity");
      objc_msgSend(v40, "_value");
      v42 = v41;

      v37 = v37 + v42;
    }
    while (v34 != v36);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v43, v44, v45, v46, v47, v48, v49);
    if (v88)
    {
      if (a1 < 0)
        v51 = a1;
      else
        v51 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v50 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v52, v53, v54, v55, v56, v57, v58);
    }
    else
    {
      v50 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v60 = v86;
    v59 = v87;
    v61 = v84;
    v62 = v37 / (double)v50;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v64 = (void *)static OS_dispatch_queue.main.getter(v63);
    v65 = swift_allocObject(&unk_1007A4420, 40, 7);
    v66 = v83;
    *(_QWORD *)(v65 + 16) = v83;
    *(double *)(v65 + 24) = v62;
    *(_QWORD *)(v65 + 32) = v82;
    aBlock[4] = (uint64_t)sub_1004D412C;
    v92 = v65;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002D0F8;
    aBlock[3] = (uint64_t)&unk_1007A4438;
    v67 = _Block_copy(aBlock);
    v68 = v92;
    swift_retain(v66);
    swift_release(v68);
    static DispatchQoS.unspecified.getter(v69);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v70 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v71 = sub_100047110(&qword_100828C80);
    v72 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v71, v72, v59, v70);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v67);
    _Block_release(v67);
    swift_release(v66);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v59);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v85);
  }
}

void sub_1004CB634(int64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t i;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  _QWORD *v58;
  id v59;
  const char *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  id v69;
  id v70;
  char *v71;
  void (*v72)(uint64_t, char *, uint64_t);
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v74;
  double v75;
  double v76;
  double v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  uint64_t v84;
  id v85;
  double v86;
  double v87;
  unint64_t v88;
  char v89;
  id v90;
  unint64_t v91;
  SEL v92;
  char v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  char v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  void (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  id v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t *v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t *v134;
  double v135;
  uint64_t v136;
  uint64_t v137;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v139;
  unint64_t v140;
  SEL v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  unint64_t v153;
  uint64_t v154;
  CHWorkoutDetailHeartRateTableViewCell *v155;
  char *v156;
  char *v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t *v168;
  _QWORD *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  _QWORD *v177;
  _QWORD *v178;
  char v179;
  uint64_t v180;

  v168 = a2;
  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v156 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v157 = (char *)&v151 - v6;
  v7 = type metadata accessor for NSIndexSetIterator(0);
  v164 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v151 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v167 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v151 - v17);
  __chkstk_darwin(v19);
  v159 = (char *)&v151 - v20;
  __chkstk_darwin(v21);
  v158 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v151 - v22);
  __chkstk_darwin(v23);
  v174 = (char *)&v151 - v24;
  __chkstk_darwin(v25);
  v171 = (uint64_t)&v151 - v26;
  __chkstk_darwin(v27);
  v176 = (char *)&v151 - v28;
  v162 = type metadata accessor for WorkoutChartDataElement(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v175 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110(&qword_100820580);
  __chkstk_darwin(v30);
  v32 = (char *)&v151 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (uint64_t)&v151 - v34;
  v36 = (uint64_t)&v180;
  v155 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_98;
  v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = v37; ; i = _CocoaArrayWrapper.endIndex.getter(v150))
  {
    v172 = v14;
    v163 = v9;
    v165 = v35;
    v166 = v32;
    if (!i)
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v38, v39, v40, v41, v42, v43, v44);
      v46 = _swiftEmptyDictionarySingleton;
LABEL_43:
      v108 = v46[8];
      v169 = v46 + 8;
      v109 = 1 << *((_BYTE *)v46 + 32);
      v110 = -1;
      if (v109 < 64)
        v110 = ~(-1 << v109);
      a1 = v110 & v108;
      v170 = (char *)((unint64_t)(v109 + 63) >> 6);
      v168 = (uint64_t *)(v170 - 1);
      v111 = swift_bridgeObjectRetain(v46);
      v171 = 0;
      v18 = &_swiftEmptyArrayStorage;
      v9 = &qword_100820588;
      v173 = v12;
      v177 = v46;
      if (a1)
      {
LABEL_46:
        v174 = (char *)((a1 - 1) & a1);
        v112 = __clz(__rbit64(a1)) | (v171 << 6);
      }
      else
      {
        while (1)
        {
          v117 = v171 + 1;
          if (__OFADD__(v171, 1))
            goto LABEL_94;
          if (v117 < (uint64_t)v170)
          {
            v118 = v169[v117];
            if (v118)
              goto LABEL_51;
            v119 = v171 + 2;
            ++v171;
            if (v117 + 1 < (uint64_t)v170)
            {
              v118 = v169[v119];
              if (v118)
                goto LABEL_54;
              v171 = v117 + 1;
              if (v117 + 2 < (uint64_t)v170)
              {
                v118 = v169[v117 + 2];
                if (v118)
                {
                  v117 += 2;
                  goto LABEL_51;
                }
                v119 = v117 + 3;
                v171 = v117 + 2;
                if (v117 + 3 < (uint64_t)v170)
                  break;
              }
            }
          }
LABEL_65:
          v120 = sub_100047110(&qword_100820588);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v32, 1, 1, v120);
          v174 = 0;
LABEL_66:
          sub_100045AD4((uint64_t)v32, v35, &qword_100820580);
          v121 = sub_100047110(&qword_100820588);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 48))(v35, 1, v121) == 1)
          {
            swift_release(v46);
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46, v141, v142, v143, v144, v145, v146, v147);
            return;
          }
          v122 = *(void **)(v35 + *(int *)(v121 + 48));
          v123 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
          v124 = v13;
          v123(v176, v35, v13);
          v125 = v122;
          NSIndexSet.makeIterator()();

          v126 = sub_1000083D8(&qword_100820590, (uint64_t (*)(uint64_t))&type metadata accessor for NSIndexSetIterator, (uint64_t)&protocol conformance descriptor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
          if ((v179 & 1) != 0)
          {
            v127 = v12;
            v128 = *(void (**)(char *, uint64_t))(v164 + 8);
            v128(v127, v7);
            v129 = 0;
            v130 = v163;
          }
          else
          {
            v129 = (uint64_t)v178;
            dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
            v130 = v163;
            if ((v179 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v178 < v129)
                  v129 = (uint64_t)v178;
                dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
              }
              while (v179 != 1);
            }
            v131 = v12;
            v128 = *(void (**)(char *, uint64_t))(v164 + 8);
            v128(v131, v7);
          }
          v132 = v125;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
          if ((v179 & 1) != 0)
          {
            v128((char *)v130, v7);
            v133 = 0;
          }
          else
          {
            v134 = v130;
            v133 = (uint64_t)v178;
            dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
            if ((v179 & 1) == 0)
            {
              do
              {
                if (v133 <= (uint64_t)v178)
                  v133 = (uint64_t)v178;
                dispatch thunk of IteratorProtocol.next()(&v178, v7, v126);
              }
              while (v179 != 1);
            }
            v128((char *)v134, v7);
          }
          v135 = (double)v129;
          v136 = (uint64_t)v175;
          v13 = v124;
          v123(v175, (uint64_t)v176, v124);
          v137 = v162;
          *(double *)(v136 + *(int *)(v162 + 24)) = v135;
          *(double *)(v136 + *(int *)(v137 + 28)) = (double)v133;
          *(double *)(v136 + *(int *)(v137 + 20)) = (v135 + (double)v133) * 0.5;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
          v14 = v172;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(0, *(_QWORD *)v18->cellPadding + 1, 1, (unint64_t)v18);
          v46 = v177;
          v140 = *(_QWORD *)v18->cellPadding;
          v139 = *(_QWORD *)v18->cellInset;
          if (v140 >= v139 >> 1)
            v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(v139 > 1, v140 + 1, 1, (unint64_t)v18);
          *(_QWORD *)v18->cellPadding = v140 + 1;
          sub_100047C88((uint64_t)v175, (uint64_t)v18+ ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80))+ *(_QWORD *)(v161 + 72) * v140, type metadata accessor for WorkoutChartDataElement);

          v12 = v173;
          a1 = (int64_t)v174;
          v35 = v165;
          v32 = v166;
          v9 = &qword_100820588;
          if (v174)
            goto LABEL_46;
        }
        v118 = v169[v119];
        if (!v118)
        {
          while (1)
          {
            v117 = v119 + 1;
            if (__OFADD__(v119, 1))
              goto LABEL_103;
            if (v117 >= (uint64_t)v170)
            {
              v171 = (uint64_t)v168;
              goto LABEL_65;
            }
            v118 = v169[v117];
            ++v119;
            if (v118)
              goto LABEL_51;
          }
        }
LABEL_54:
        v117 = v119;
LABEL_51:
        v174 = (char *)((v118 - 1) & v118);
        v112 = __clz(__rbit64(v118)) + (v117 << 6);
        v171 = v117;
      }
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v14 + 16))(v32, v46[6] + *(_QWORD *)(v14 + 72) * v112, v13, v111);
      v113 = v46[7];
      v114 = sub_100047110(&qword_100820588);
      v115 = *(void **)(v113 + 8 * v112);
      *(_QWORD *)&v32[*(int *)(v114 + 48)] = v115;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v32, 0, 1, v114);
      v116 = v115;
      v12 = v173;
      goto LABEL_66;
    }
    if (i < 1)
      break;
    v152 = v18;
    v35 = 0;
    v160 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    v170 = *(char **)((char *)v168 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    v154 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    v153 = a1 & 0xC000000000000001;
    v46 = _swiftEmptyDictionarySingleton;
    v18 = v158;
    v151 = i;
    while (1)
    {
      v67 = v153
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, a1)
          : (char *)*(id *)(a1 + 8 * v35 + 32);
      v68 = (uint64_t)v157;
      v177 = v46;
      v173 = v67;
      v69 = objc_msgSend(v67, "startDate", v151);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v69);

      if (v170)
      {
        v70 = objc_msgSend(v170, "startDate");
        v71 = v159;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v70);

        v72 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
        v72(v68, v71, v13);
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v73(v68, 0, 1, v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v68, 1, v13) != 1)
        {
          v72((uint64_t)v18, (char *)v68, v13);
          v9 = v168;
          goto LABEL_17;
        }
      }
      else
      {
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v73(v68, 1, 1, v13);
      }
      v9 = v168;
      v74 = objc_msgSend(*(id *)((char *)v168 + v160), "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v74);

      sub_10001BE90(v68, (uint64_t *)&unk_100828370);
LABEL_17:
      a1 = (int64_t)v174;
      v75 = Date.timeIntervalSince(_:)(v18);
      v32 = *(char **)(v14 + 8);
      ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v32)(v18, v13);
      v76 = *(double *)(*(uint64_t *)((char *)v9 + v154)
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      v77 = v75 / v76;
      v36 = 0x7FF0000000000000;
      if ((~*(_QWORD *)&v77 & 0x7FF0000000000000) == 0)
        break;
      if (v77 <= -9.22337204e18)
        goto LABEL_89;
      if (v77 >= 9.22337204e18)
        goto LABEL_90;
      v169 = (_QWORD *)v35;
      if (!v170)
      {
        v81 = (uint64_t)v156;
        v73((uint64_t)v156, 1, 1, v13);
LABEL_24:
        v85 = objc_msgSend(*(id *)((char *)v168 + v160), "startDate");
        v83 = v152;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v85);

        v84 = sub_10001BE90(v81, (uint64_t *)&unk_100828370);
        goto LABEL_25;
      }
      v78 = objc_msgSend(v170, "startDate");
      v79 = v14;
      v80 = v159;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v78);

      v35 = *(_QWORD *)(v79 + 32);
      v81 = (uint64_t)v156;
      v82 = v80;
      v14 = v79;
      ((void (*)(char *, char *, uint64_t))v35)(v156, v82, v13);
      v73(v81, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v81, 1, v13) == 1)
        goto LABEL_24;
      v83 = v152;
      v84 = ((uint64_t (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t, uint64_t))v35)(v152, v81, v13);
LABEL_25:
      v46 = v177;
      v9 = (uint64_t *)v171;
      Date.addingTimeInterval(_:)(v84, v76 * 0.5 + v76 * (double)(uint64_t)v77);
      ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v32)(v83, v13);
      ((void (*)(char *, uint64_t))v32)(v174, v13);
      a1 = (int64_t)objc_msgSend(v173, "quantity");
      objc_msgSend((id)a1, "_value");
      v87 = v86;

      v18 = v158;
      if (v46[2] && (a1 = (int64_t)v46, v88 = sub_10043939C((uint64_t)v9), (v89 & 1) != 0))
      {
        v36 = 0x7FF0000000000000;
        if ((~*(_QWORD *)&v87 & 0x7FF0000000000000) == 0)
          goto LABEL_95;
        if (v87 <= -9.22337204e18)
          goto LABEL_96;
        if (v87 >= 9.22337204e18)
          goto LABEL_97;
        objc_msgSend(*(id *)(v46[7] + 8 * v88), "addIndex:", (uint64_t)v87);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v14 + 16))(v167, v9, v13);
        v36 = 0x7FF0000000000000;
        if ((~*(_QWORD *)&v87 & 0x7FF0000000000000) == 0)
          goto LABEL_91;
        if (v87 <= -9.22337204e18)
          goto LABEL_92;
        if (v87 >= 9.22337204e18)
          goto LABEL_93;
        v90 = objc_msgSend(objc_allocWithZone((Class)NSMutableIndexSet), "initWithIndex:", (uint64_t)v87);
        if (!v90)
        {
          swift_bridgeObjectRetain(v46);
          v91 = sub_10043939C(v167);
          v93 = (char)v92;
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46, v92, v94, v95, v96, v97, v98, v99);
          if ((v93 & 1) != 0)
          {
            v100 = swift_isUniquelyReferenced_nonNull_native(v46);
            v178 = v46;
            v58 = v169;
            if ((v100 & 1) == 0)
            {
              sub_100400E50();
              v46 = v178;
            }
            ((void (*)(unint64_t, uint64_t))v32)(v46[6] + *(_QWORD *)(v172 + 72) * v91, v13);
            v46 = v178;
            v59 = *(id *)(v178[7] + 8 * v91);
            sub_1004D32BC(v91, (uint64_t)v178, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (unint64_t *)&qword_1008214E8, (uint64_t)&protocol conformance descriptor for Date);
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v101, v102, v103, v104, v105, v106, v107);
          }
          else
          {
            v59 = 0;
            v58 = v169;
          }
          ((void (*)(uint64_t, uint64_t))v32)(v167, v13);

          v14 = v172;
          goto LABEL_8;
        }
        v47 = (uint64_t)v90;
        v48 = swift_isUniquelyReferenced_nonNull_native(v46);
        v178 = v46;
        v49 = v47;
        v50 = v167;
        sub_1003FE848(v49, v167, v48);
        v46 = v178;
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v51, v52, v53, v54, v55, v56, v57);
        ((void (*)(uint64_t, uint64_t))v32)(v50, v13);
        v14 = v172;
      }
      v58 = v169;
      v59 = v173;
LABEL_8:
      v35 = (uint64_t)v58 + 1;

      ((void (*)(uint64_t, uint64_t))v32)(v171, v13);
      a1 = (int64_t)v155;
      if (v151 == v35)
      {
        swift_bridgeObjectRelease(v155, v60, v61, v62, v63, v64, v65, v66);
        v35 = v165;
        v32 = v166;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    v148 = *(_QWORD *)(v36 - 256);
    if (a1 < 0)
      v149 = v148;
    else
      v149 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v155);
    v150 = v149;
    a1 = (int64_t)v155;
  }
  __break(1u);
LABEL_103:
  __break(1u);
}

void sub_1004CC434(int64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t i;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  _QWORD *v58;
  id v59;
  const char *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  id v69;
  id v70;
  char *v71;
  void (*v72)(uint64_t, char *, uint64_t);
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v74;
  double v75;
  double v76;
  double v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  uint64_t v84;
  id v85;
  double v86;
  double v87;
  double v88;
  unint64_t v89;
  char v90;
  id v91;
  unint64_t v92;
  SEL v93;
  char v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  char v101;
  SEL v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  id v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t *v131;
  char *v132;
  id v133;
  uint64_t v134;
  uint64_t *v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v140;
  unint64_t v141;
  SEL v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  CHWorkoutDetailHeartRateTableViewCell *v153;
  unint64_t v154;
  uint64_t v155;
  CHWorkoutDetailHeartRateTableViewCell *v156;
  char *v157;
  char *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t *v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  _QWORD *v178;
  _QWORD *v179;
  char v180;
  uint64_t v181;

  v169 = a2;
  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v157 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v158 = (char *)&v152 - v6;
  v7 = type metadata accessor for NSIndexSetIterator(0);
  v165 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v152 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v168 = (uint64_t)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v152 - v17);
  __chkstk_darwin(v19);
  v160 = (char *)&v152 - v20;
  __chkstk_darwin(v21);
  v159 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v152 - v22);
  __chkstk_darwin(v23);
  v175 = (char *)&v152 - v24;
  __chkstk_darwin(v25);
  v172 = (uint64_t)&v152 - v26;
  __chkstk_darwin(v27);
  v177 = (char *)&v152 - v28;
  v163 = type metadata accessor for WorkoutChartDataElement(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v176 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110(&qword_100820580);
  __chkstk_darwin(v30);
  v32 = (char *)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (uint64_t)&v152 - v34;
  v36 = (uint64_t)&v181;
  v156 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_98;
  v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = v37; ; i = _CocoaArrayWrapper.endIndex.getter(v151))
  {
    v173 = v14;
    v164 = v9;
    v166 = v35;
    v167 = v32;
    if (!i)
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v38, v39, v40, v41, v42, v43, v44);
      v46 = _swiftEmptyDictionarySingleton;
LABEL_43:
      v109 = v46[8];
      v170 = v46 + 8;
      v110 = 1 << *((_BYTE *)v46 + 32);
      v111 = -1;
      if (v110 < 64)
        v111 = ~(-1 << v110);
      a1 = v111 & v109;
      v171 = (char *)((unint64_t)(v110 + 63) >> 6);
      v169 = (uint64_t *)(v171 - 1);
      v112 = swift_bridgeObjectRetain(v46);
      v172 = 0;
      v18 = &_swiftEmptyArrayStorage;
      v9 = &qword_100820588;
      v174 = v12;
      v178 = v46;
      if (a1)
      {
LABEL_46:
        v175 = (char *)((a1 - 1) & a1);
        v113 = __clz(__rbit64(a1)) | (v172 << 6);
      }
      else
      {
        while (1)
        {
          v118 = v172 + 1;
          if (__OFADD__(v172, 1))
            goto LABEL_94;
          if (v118 < (uint64_t)v171)
          {
            v119 = v170[v118];
            if (v119)
              goto LABEL_51;
            v120 = v172 + 2;
            ++v172;
            if (v118 + 1 < (uint64_t)v171)
            {
              v119 = v170[v120];
              if (v119)
                goto LABEL_54;
              v172 = v118 + 1;
              if (v118 + 2 < (uint64_t)v171)
              {
                v119 = v170[v118 + 2];
                if (v119)
                {
                  v118 += 2;
                  goto LABEL_51;
                }
                v120 = v118 + 3;
                v172 = v118 + 2;
                if (v118 + 3 < (uint64_t)v171)
                  break;
              }
            }
          }
LABEL_65:
          v121 = sub_100047110(&qword_100820588);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v32, 1, 1, v121);
          v175 = 0;
LABEL_66:
          sub_100045AD4((uint64_t)v32, v35, &qword_100820580);
          v122 = sub_100047110(&qword_100820588);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v35, 1, v122) == 1)
          {
            swift_release(v46);
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46, v142, v143, v144, v145, v146, v147, v148);
            return;
          }
          v123 = *(void **)(v35 + *(int *)(v122 + 48));
          v124 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
          v125 = v13;
          v124(v177, v35, v13);
          v126 = v123;
          NSIndexSet.makeIterator()();

          v127 = sub_1000083D8(&qword_100820590, (uint64_t (*)(uint64_t))&type metadata accessor for NSIndexSetIterator, (uint64_t)&protocol conformance descriptor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
          if ((v180 & 1) != 0)
          {
            v128 = v12;
            v129 = *(void (**)(char *, uint64_t))(v165 + 8);
            v129(v128, v7);
            v130 = 0;
            v131 = v164;
          }
          else
          {
            v130 = (uint64_t)v179;
            dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
            v131 = v164;
            if ((v180 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v179 < v130)
                  v130 = (uint64_t)v179;
                dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
              }
              while (v180 != 1);
            }
            v132 = v12;
            v129 = *(void (**)(char *, uint64_t))(v165 + 8);
            v129(v132, v7);
          }
          v133 = v126;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
          if ((v180 & 1) != 0)
          {
            v129((char *)v131, v7);
            v134 = 0;
          }
          else
          {
            v135 = v131;
            v134 = (uint64_t)v179;
            dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
            if ((v180 & 1) == 0)
            {
              do
              {
                if (v134 <= (uint64_t)v179)
                  v134 = (uint64_t)v179;
                dispatch thunk of IteratorProtocol.next()(&v179, v7, v127);
              }
              while (v180 != 1);
            }
            v129((char *)v135, v7);
          }
          v136 = (double)v130;
          v137 = (uint64_t)v176;
          v13 = v125;
          v124(v176, (uint64_t)v177, v125);
          v138 = v163;
          *(double *)(v137 + *(int *)(v163 + 24)) = v136;
          *(double *)(v137 + *(int *)(v138 + 28)) = (double)v134;
          *(double *)(v137 + *(int *)(v138 + 20)) = (v136 + (double)v134) * 0.5;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
          v14 = v173;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(0, *(_QWORD *)v18->cellPadding + 1, 1, (unint64_t)v18);
          v46 = v178;
          v141 = *(_QWORD *)v18->cellPadding;
          v140 = *(_QWORD *)v18->cellInset;
          if (v141 >= v140 >> 1)
            v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(v140 > 1, v141 + 1, 1, (unint64_t)v18);
          *(_QWORD *)v18->cellPadding = v141 + 1;
          sub_100047C88((uint64_t)v176, (uint64_t)v18+ ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80))+ *(_QWORD *)(v162 + 72) * v141, type metadata accessor for WorkoutChartDataElement);

          v12 = v174;
          a1 = (int64_t)v175;
          v35 = v166;
          v32 = v167;
          v9 = &qword_100820588;
          if (v175)
            goto LABEL_46;
        }
        v119 = v170[v120];
        if (!v119)
        {
          while (1)
          {
            v118 = v120 + 1;
            if (__OFADD__(v120, 1))
              goto LABEL_103;
            if (v118 >= (uint64_t)v171)
            {
              v172 = (uint64_t)v169;
              goto LABEL_65;
            }
            v119 = v170[v118];
            ++v120;
            if (v119)
              goto LABEL_51;
          }
        }
LABEL_54:
        v118 = v120;
LABEL_51:
        v175 = (char *)((v119 - 1) & v119);
        v113 = __clz(__rbit64(v119)) + (v118 << 6);
        v172 = v118;
      }
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v14 + 16))(v32, v46[6] + *(_QWORD *)(v14 + 72) * v113, v13, v112);
      v114 = v46[7];
      v115 = sub_100047110(&qword_100820588);
      v116 = *(void **)(v114 + 8 * v113);
      *(_QWORD *)&v32[*(int *)(v115 + 48)] = v116;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v32, 0, 1, v115);
      v117 = v116;
      v12 = v174;
      goto LABEL_66;
    }
    if (i < 1)
      break;
    v153 = v18;
    v35 = 0;
    v161 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    v155 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    v171 = *(char **)((char *)v169 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    v154 = a1 & 0xC000000000000001;
    v46 = _swiftEmptyDictionarySingleton;
    v18 = v159;
    v152 = i;
    while (1)
    {
      v67 = v154
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, a1)
          : (char *)*(id *)(a1 + 8 * v35 + 32);
      v68 = (uint64_t)v158;
      v178 = v46;
      v174 = v67;
      v69 = objc_msgSend(v67, "startDate", v152);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v69);

      if (v171)
      {
        v70 = objc_msgSend(v171, "startDate");
        v71 = v160;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v70);

        v72 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
        v72(v68, v71, v13);
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v73(v68, 0, 1, v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v68, 1, v13) != 1)
        {
          v72((uint64_t)v18, (char *)v68, v13);
          v9 = v169;
          goto LABEL_17;
        }
      }
      else
      {
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v73(v68, 1, 1, v13);
      }
      v9 = v169;
      v74 = objc_msgSend(*(id *)((char *)v169 + v161), "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v74);

      sub_10001BE90(v68, (uint64_t *)&unk_100828370);
LABEL_17:
      a1 = (int64_t)v175;
      v75 = Date.timeIntervalSince(_:)(v18);
      v32 = *(char **)(v14 + 8);
      ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v32)(v18, v13);
      v76 = *(double *)(*(uint64_t *)((char *)v9 + v155)
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      v77 = v75 / v76;
      v36 = 0x7FF0000000000000;
      if ((~*(_QWORD *)&v77 & 0x7FF0000000000000) == 0)
        break;
      if (v77 <= -9.22337204e18)
        goto LABEL_89;
      if (v77 >= 9.22337204e18)
        goto LABEL_90;
      v170 = (_QWORD *)v35;
      if (!v171)
      {
        v81 = (uint64_t)v157;
        v73((uint64_t)v157, 1, 1, v13);
LABEL_24:
        v85 = objc_msgSend(*(id *)((char *)v169 + v161), "startDate");
        v83 = v153;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v85);

        v84 = sub_10001BE90(v81, (uint64_t *)&unk_100828370);
        goto LABEL_25;
      }
      v78 = objc_msgSend(v171, "startDate");
      v79 = v14;
      v80 = v160;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v78);

      v35 = *(_QWORD *)(v79 + 32);
      v81 = (uint64_t)v157;
      v82 = v80;
      v14 = v79;
      ((void (*)(char *, char *, uint64_t))v35)(v157, v82, v13);
      v73(v81, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v81, 1, v13) == 1)
        goto LABEL_24;
      v83 = v153;
      v84 = ((uint64_t (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t, uint64_t))v35)(v153, v81, v13);
LABEL_25:
      v46 = v178;
      v9 = (uint64_t *)v172;
      Date.addingTimeInterval(_:)(v84, v76 * 0.5 + v76 * (double)(uint64_t)v77);
      ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v32)(v83, v13);
      ((void (*)(char *, uint64_t))v32)(v175, v13);
      a1 = (int64_t)objc_msgSend(v174, "quantity");
      objc_msgSend((id)a1, "_value");
      v87 = v86;

      v88 = v87 * 100.0;
      v18 = v159;
      if (v46[2] && (a1 = (int64_t)v46, v89 = sub_10043939C((uint64_t)v9), (v90 & 1) != 0))
      {
        v36 = 0x7FF0000000000000;
        if ((~*(_QWORD *)&v88 & 0x7FF0000000000000) == 0)
          goto LABEL_95;
        if (v88 <= -9.22337204e18)
          goto LABEL_96;
        if (v88 >= 9.22337204e18)
          goto LABEL_97;
        objc_msgSend(*(id *)(v46[7] + 8 * v89), "addIndex:", (uint64_t)v88);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v14 + 16))(v168, v9, v13);
        v36 = 0x7FF0000000000000;
        if ((~*(_QWORD *)&v88 & 0x7FF0000000000000) == 0)
          goto LABEL_91;
        if (v88 <= -9.22337204e18)
          goto LABEL_92;
        if (v88 >= 9.22337204e18)
          goto LABEL_93;
        v91 = objc_msgSend(objc_allocWithZone((Class)NSMutableIndexSet), "initWithIndex:", (uint64_t)v88);
        if (!v91)
        {
          swift_bridgeObjectRetain(v46);
          v92 = sub_10043939C(v168);
          v94 = (char)v93;
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46, v93, v95, v96, v97, v98, v99, v100);
          if ((v94 & 1) != 0)
          {
            v101 = swift_isUniquelyReferenced_nonNull_native(v46);
            v179 = v46;
            v58 = v170;
            if ((v101 & 1) == 0)
            {
              sub_100400E50();
              v46 = v179;
            }
            ((void (*)(unint64_t, uint64_t))v32)(v46[6] + *(_QWORD *)(v173 + 72) * v92, v13);
            v46 = v179;
            v59 = *(id *)(v179[7] + 8 * v92);
            sub_1004D32BC(v92, (uint64_t)v179, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (unint64_t *)&qword_1008214E8, (uint64_t)&protocol conformance descriptor for Date);
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v102, v103, v104, v105, v106, v107, v108);
          }
          else
          {
            v59 = 0;
            v58 = v170;
          }
          ((void (*)(uint64_t, uint64_t))v32)(v168, v13);

          v14 = v173;
          goto LABEL_8;
        }
        v47 = (uint64_t)v91;
        v48 = swift_isUniquelyReferenced_nonNull_native(v46);
        v179 = v46;
        v49 = v47;
        v50 = v168;
        sub_1003FE848(v49, v168, v48);
        v46 = v179;
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v51, v52, v53, v54, v55, v56, v57);
        ((void (*)(uint64_t, uint64_t))v32)(v50, v13);
        v14 = v173;
      }
      v58 = v170;
      v59 = v174;
LABEL_8:
      v35 = (uint64_t)v58 + 1;

      ((void (*)(uint64_t, uint64_t))v32)(v172, v13);
      a1 = (int64_t)v156;
      if (v152 == v35)
      {
        swift_bridgeObjectRelease(v156, v60, v61, v62, v63, v64, v65, v66);
        v35 = v166;
        v32 = v167;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    v149 = *(_QWORD *)(v36 - 256);
    if (a1 < 0)
      v150 = v149;
    else
      v150 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v156);
    v151 = v150;
    a1 = (int64_t)v156;
  }
  __break(1u);
LABEL_103:
  __break(1u);
}

void sub_1004CD240(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, void *a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  os_log_type_t v44;
  void *v45;
  os_log_type_t v46;
  NSObject *v47;
  uint8_t *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  uint64_t v50;
  unint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t Strong;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  const char *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  id v86;
  int64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  id v91;
  void (*v92)(uint64_t, char *, uint64_t);
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v94;
  char *v95;
  id v96;
  double v97;
  double v98;
  double v99;
  void *v100;
  id v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  int v104;
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  id v111;
  id v112;
  double v113;
  double v114;
  unint64_t v115;
  char v116;
  id v117;
  unint64_t v118;
  SEL v119;
  char v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  int v127;
  void *v128;
  SEL v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  Class isa;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  __n128 v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  unint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  void *v154;
  void (*v155)(char *, uint64_t, uint64_t);
  id v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v159;
  id v160;
  char *v161;
  CHWorkoutDetailHeartRateTableViewCell *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  double v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  const char *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  CHWorkoutDetailHeartRateTableViewCell *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  BOOL v189;
  __n128 v190;
  void *v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  int64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  uint64_t v228;
  unint64_t v229;
  int64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  CHWorkoutDetailHeartRateTableViewCell *v236;
  CHWorkoutDetailHeartRateTableViewCell *v237;
  _QWORD v238[3];
  char v239[8];
  CHWorkoutDetailHeartRateTableViewCell *aBlock;
  uint64_t v241;
  uint64_t (*v242)(uint64_t);
  void *v243;
  uint64_t (*v244)();
  uint64_t v245;
  uint64_t v246;
  char v247[8];

  v234 = a5;
  v237 = a4;
  v208 = a3;
  v229 = (unint64_t)a1;
  v207 = type metadata accessor for DispatchWorkItemFlags(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v205 = (char *)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = type metadata accessor for DispatchQoS(0);
  v204 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v203 = (char *)&v202 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NSIndexSetIterator(0);
  v223 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v222 = (char *)&v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v225 = (char *)&v202 - v10;
  v221 = type metadata accessor for WorkoutChartDataElement(0);
  v224 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v220 = (char *)&v202 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v12);
  v226 = (char *)&v202 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v227 = (char *)&v202 - v15;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v202 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v202 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v202 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v202 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v202 - v30;
  __chkstk_darwin(v32);
  v34 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v202 - v33);
  __chkstk_darwin(v35);
  v37 = (char *)&v202 - v36;
  v38 = sub_100047110(&qword_100820580);
  __chkstk_darwin(v38);
  __chkstk_darwin(v39);
  if (v237)
  {
    v42 = v237;
    v43 = swift_errorRetain(v237);
    v44 = static os_log_type_t.error.getter(v43);
    v45 = (void *)HKLogWorkouts;
    v46 = v44;
    if (os_log_type_enabled(HKLogWorkouts, v44))
    {
      swift_errorRetain(v42);
      swift_errorRetain(v42);
      v47 = v45;
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)swift_slowAlloc(32, -1);
      aBlock = v49;
      *(_DWORD *)v48 = 136315138;
      swift_getErrorValue(v42, v239, v238);
      v50 = Error.localizedDescription.getter(v238[1], v238[2]);
      v52 = (CHWorkoutDetailHeartRateTableViewCell *)v51;
      v246 = sub_10003E8EC(v50, v51, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247, v48 + 4);
      swift_bridgeObjectRelease(v52, v53, v54, v55, v56, v57, v58, v59);
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v47, v46, "Error getting heart rates: %s", v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
      swift_errorRelease(v42);

    }
    else
    {
      swift_errorRelease(v42);
    }
    return;
  }
  v233 = (uint64_t)v37;
  v236 = v34;
  v218 = v31;
  v219 = v28;
  v216 = v25;
  v217 = v22;
  v214 = (uint64_t)&v202 - v40;
  v215 = v41;
  v232 = v19;
  v235 = v17;
  v60 = v234 + 16;
  swift_beginAccess(v234 + 16, &v246, 0, 0);
  Strong = swift_weakLoadStrong(v60);
  if (!Strong)
    return;
  v62 = Strong;
  v63 = v229;
  if (!v229)
  {
    swift_release(Strong);
    return;
  }
  v64 = v229 & 0xFFFFFFFFFFFFFF8;
  if (v229 >> 62)
  {
LABEL_109:
    if (v63 >= 0)
      v201 = v64;
    else
      v201 = v63;
    swift_bridgeObjectRetain(v63);
    v65 = _CocoaArrayWrapper.endIndex.getter(v201);
  }
  else
  {
    v65 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v229);
  }
  v66 = v235;
  v67 = v219;
  if (!v65)
  {
    swift_release(v62);
    v183 = (CHWorkoutDetailHeartRateTableViewCell *)v63;
LABEL_97:
    swift_bridgeObjectRelease(v183, v176, v177, v178, v179, v180, v181, v182);
    return;
  }
  v211 = (id)objc_opt_self(HKUnit);
  if (v65 < 1)
  {
    __break(1u);
    goto LABEL_114;
  }
  v68 = 0;
  v231 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
  v228 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  v213 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
  v212 = v63 & 0xC000000000000001;
  v69 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
  v210 = v65;
  v234 = v62;
  do
  {
    if (v212)
      v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v68, v63);
    else
      v86 = *(id *)(v63 + 8 * v68 + 32);
    v87 = (int64_t)v86;
    v237 = v69;
    v88 = objc_msgSend(v86, "date");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v88);

    v89 = *(void **)(v62 + v231);
    v90 = (uint64_t)v227;
    v230 = v87;
    if (v89)
    {
      v91 = objc_msgSend(v89, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v91);

      v92 = *(void (**)(uint64_t, char *, uint64_t))(v66 + 32);
      v92(v90, v67, v16);
      v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v93(v90, 0, 1, v16);
      v94 = v67;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v90, 1, v16) != 1)
      {
        v95 = v218;
        v92((uint64_t)v218, (char *)v90, v16);
        goto LABEL_22;
      }
    }
    else
    {
      v94 = v67;
      v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v93((uint64_t)v227, 1, 1, v16);
    }
    v96 = objc_msgSend(*(id *)(v62 + v228), "startDate");
    v95 = v218;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v96);

    sub_10001BE90(v90, (uint64_t *)&unk_100828370);
LABEL_22:
    v97 = Date.timeIntervalSince(_:)(v95);
    v63 = *(_QWORD *)(v66 + 8);
    ((void (*)(char *, uint64_t))v63)(v95, v16);
    v98 = *(double *)(*(_QWORD *)(v62 + v213) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    v99 = v97 / v98;
    v64 = *(_QWORD *)&v99;
    if ((~*(_QWORD *)&v99 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v64 = 0xC3E0000000000001;
    if (v99 <= -9.22337204e18)
      goto LABEL_100;
    v64 = 0x43E0000000000000;
    if (v99 >= 9.22337204e18)
      goto LABEL_101;
    v100 = *(void **)(v62 + v231);
    if (!v100)
    {
      v103 = (uint64_t)v226;
      v93((uint64_t)v226, 1, 1, v16);
      v105 = (uint64_t)v217;
      v106 = (void *)v230;
LABEL_29:
      v109 = objc_msgSend(*(id *)(v234 + v228), "startDate");
      v107 = v216;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v109);

      v108 = sub_10001BE90(v103, (uint64_t *)&unk_100828370);
      goto LABEL_30;
    }
    v101 = objc_msgSend(v100, "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v101);

    v102 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v103 = (uint64_t)v226;
    v102(v226, v94, v16);
    v93(v103, 0, 1, v16);
    v104 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v103, 1, v16);
    v105 = (uint64_t)v217;
    v106 = (void *)v230;
    if (v104 == 1)
      goto LABEL_29;
    v107 = v216;
    v108 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v216, v103, v16);
LABEL_30:
    v69 = v237;
    v110 = v233;
    Date.addingTimeInterval(_:)(v108, v98 * 0.5 + v98 * (double)(uint64_t)v99);
    ((void (*)(char *, uint64_t))v63)(v107, v16);
    ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v63)(v236, v16);
    v111 = objc_msgSend(v106, "quantity");
    v112 = objc_msgSend(v211, "_countPerMinuteUnit");
    objc_msgSend(v111, "doubleValueForUnit:", v112);
    v114 = v113;

    v62 = v110;
    v67 = v219;
    if (*(_QWORD *)v69->cellPadding && (v115 = sub_10043939C(v62), (v116 & 1) != 0))
    {
      v64 = *(_QWORD *)&v114;
      v62 = v234;
      v66 = v235;
      if ((~*(_QWORD *)&v114 & 0x7FF0000000000000) == 0)
        goto LABEL_106;
      v64 = 0xC3E0000000000001;
      if (v114 <= -9.22337204e18)
        goto LABEL_107;
      v64 = 0x43E0000000000000;
      if (v114 >= 9.22337204e18)
        goto LABEL_108;
      objc_msgSend(*(id *)(*(_QWORD *)v69[1].cellInset + 8 * v115), "addIndex:", (uint64_t)v114);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v235 + 16))(v105, v62, v16);
      v64 = *(_QWORD *)&v114;
      if ((~*(_QWORD *)&v114 & 0x7FF0000000000000) == 0)
        goto LABEL_102;
      v64 = 0xC3E0000000000001;
      if (v114 <= -9.22337204e18)
        goto LABEL_103;
      v64 = 0x43E0000000000000;
      if (v114 >= 9.22337204e18)
        goto LABEL_104;
      v117 = objc_msgSend(objc_allocWithZone((Class)NSMutableIndexSet), "initWithIndex:", (uint64_t)v114);
      if (v117)
      {
        v70 = (uint64_t)v117;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v69);
        aBlock = v69;
        sub_1003FE848(v70, v105, isUniquelyReferenced_nonNull_native);
        v69 = aBlock;
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v72, v73, v74, v75, v76, v77, v78);
        ((void (*)(uint64_t, uint64_t))v63)(v105, v16);
      }
      else
      {
        swift_bridgeObjectRetain(v69);
        v118 = sub_10043939C(v105);
        v120 = (char)v119;
        swift_bridgeObjectRelease(v69, v119, v121, v122, v123, v124, v125, v126);
        if ((v120 & 1) != 0)
        {
          v127 = swift_isUniquelyReferenced_nonNull_native(v69);
          aBlock = v69;
          if (!v127)
          {
            sub_100400E50();
            v69 = aBlock;
          }
          ((void (*)(unint64_t, uint64_t))v63)(*(_QWORD *)v69[1].cellPadding + *(_QWORD *)(v235 + 72) * v118, v16);
          v69 = aBlock;
          v128 = *(void **)(*(_QWORD *)aBlock[1].cellInset + 8 * v118);
          sub_1004D32BC(v118, (uint64_t)aBlock, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (unint64_t *)&qword_1008214E8, (uint64_t)&protocol conformance descriptor for Date);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v129, v130, v131, v132, v133, v134, v135);
        }
        else
        {
          v128 = 0;
        }
        ((void (*)(uint64_t, uint64_t))v63)(v105, v16);

        v106 = v128;
      }
      v62 = v234;
      v66 = v235;
    }
    ++v68;

    ((void (*)(uint64_t, uint64_t))v63)(v233, v16);
    v63 = v229;
  }
  while (v210 != v68);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v229, v79, v80, v81, v82, v83, v84, v85);
  isa = v69[2].super.super.super.super.isa;
  v229 = (unint64_t)&v69[2];
  v137 = 1 << LOBYTE(v69[1].super.super.super.super.isa);
  v138 = -1;
  if (v137 < 64)
    v138 = ~(-1 << v137);
  v139 = v138 & (unint64_t)isa;
  v230 = (unint64_t)(v137 + 63) >> 6;
  v228 = v230 - 1;
  v140 = swift_bridgeObjectRetain(v69);
  v231 = 0;
  v236 = &_swiftEmptyArrayStorage;
  v141 = v225;
  while (1)
  {
    v142 = v215;
    if (v139)
    {
      v233 = (v139 - 1) & v139;
      v143 = __clz(__rbit64(v139)) | (v231 << 6);
LABEL_53:
      (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v66 + 16))(v215, *(_QWORD *)v69[1].cellPadding + *(_QWORD *)(v66 + 72) * v143, v16, v140);
      v144 = *(_QWORD *)v69[1].cellInset;
      v145 = sub_100047110(&qword_100820588);
      v146 = *(void **)(v144 + 8 * v143);
      *(_QWORD *)(v142 + *(int *)(v145 + 48)) = v146;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v142, 0, 1, v145);
      v147 = v146;
      goto LABEL_72;
    }
    v64 = v231 + 1;
    if (__OFADD__(v231, 1))
      goto LABEL_105;
    if (v64 < v230)
    {
      v148 = *(_QWORD *)(v229 + 8 * v64);
      if (v148)
        goto LABEL_57;
      v149 = v231 + 2;
      ++v231;
      if (v64 + 1 < v230)
      {
        v148 = *(_QWORD *)(v229 + 8 * v149);
        if (v148)
          goto LABEL_60;
        v231 = v64 + 1;
        if (v64 + 2 < v230)
        {
          v148 = *(_QWORD *)(v229 + 8 * (v64 + 2));
          if (v148)
          {
            v64 += 2;
            goto LABEL_57;
          }
          v149 = v64 + 3;
          v231 = v64 + 2;
          if (v64 + 3 < v230)
            break;
        }
      }
    }
LABEL_71:
    v150 = sub_100047110(&qword_100820588);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v142, 1, 1, v150);
    v233 = 0;
LABEL_72:
    v151 = v214;
    sub_100045AD4(v142, v214, &qword_100820580);
    v152 = sub_100047110(&qword_100820588);
    v153 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 48))(v151, 1, v152);
    v237 = v69;
    if (v153 == 1)
    {
      *(_QWORD *)&v172 = swift_release(v69).n128_u64[0];
      v173 = v208;
      if (v208)
      {
        objc_msgSend(v208, "doubleValue", v172);
        v175 = v174;
      }
      else
      {
        v175 = 0;
      }
      v184 = v207;
      v185 = v206;
      v186 = v205;
      v187 = v203;
      v188 = v204;
      v189 = v173 == 0;
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v191 = (void *)static OS_dispatch_queue.main.getter(v190);
      v192 = swift_allocObject(&unk_1007A4498, 48, 7);
      *(_QWORD *)(v192 + 16) = v62;
      *(_QWORD *)(v192 + 24) = v175;
      *(_BYTE *)(v192 + 32) = v189;
      *(_QWORD *)(v192 + 40) = v236;
      v244 = sub_1004D415C;
      v245 = v192;
      aBlock = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
      v241 = 1107296256;
      v242 = sub_10002D0F8;
      v243 = &unk_1007A44B0;
      v193 = _Block_copy(&aBlock);
      v194 = v245;
      swift_retain(v62);
      swift_release(v194);
      static DispatchQoS.unspecified.getter(v195);
      aBlock = &_swiftEmptyArrayStorage;
      v196 = v62;
      v197 = v187;
      v198 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v199 = sub_100047110(&qword_100828C80);
      v200 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v199, v200, v184, v198);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v197, v186, v193);
      _Block_release(v193);
      swift_release(v196);

      (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v184);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v197, v209);
      v183 = v237;
      goto LABEL_97;
    }
    v154 = *(void **)(v151 + *(int *)(v152 + 48));
    v155 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
    v155(v232, v151, v16);
    v156 = v154;
    NSIndexSet.makeIterator()();

    v157 = sub_1000083D8(&qword_100820590, (uint64_t (*)(uint64_t))&type metadata accessor for NSIndexSetIterator, (uint64_t)&protocol conformance descriptor for NSIndexSetIterator);
    dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
    if ((v241 & 1) != 0)
    {
      v158 = *(void (**)(char *, uint64_t))(v223 + 8);
      v158(v141, v7);
      v159 = 0;
    }
    else
    {
      v159 = aBlock;
      dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
      if ((v241 & 1) == 0)
      {
        do
        {
          if ((uint64_t)aBlock < (uint64_t)v159)
            v159 = aBlock;
          dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
        }
        while (v241 != 1);
      }
      v158 = *(void (**)(char *, uint64_t))(v223 + 8);
      v158(v141, v7);
    }
    v160 = v156;
    v161 = v222;
    NSIndexSet.makeIterator()();

    dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
    if ((v241 & 1) != 0)
    {
      v158(v161, v7);
      v162 = 0;
    }
    else
    {
      v162 = aBlock;
      dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
      if ((v241 & 1) == 0)
      {
        do
        {
          if ((uint64_t)v162 <= (uint64_t)aBlock)
            v162 = aBlock;
          dispatch thunk of IteratorProtocol.next()(&aBlock, v7, v157);
        }
        while (v241 != 1);
      }
      v158(v161, v7);
    }
    v163 = (uint64_t)v220;
    v155(v220, (uint64_t)v232, v16);
    v164 = v221;
    *(double *)(v163 + *(int *)(v221 + 24)) = (double)(uint64_t)v159;
    *(double *)(v163 + *(int *)(v164 + 28)) = (double)(uint64_t)v162;
    *(double *)(v163 + *(int *)(v164 + 20)) = ((double)(uint64_t)v159 + (double)(uint64_t)v162) * 0.5;
    v165 = (unint64_t)v236;
    v166 = swift_isUniquelyReferenced_nonNull_native(v236);
    v141 = v225;
    if ((v166 & 1) == 0)
      v165 = sub_10013FD24(0, *(_QWORD *)(v165 + 16) + 1, 1, v165);
    v167 = v234;
    v69 = v237;
    v63 = *(_QWORD *)(v165 + 16);
    v168 = *(_QWORD *)(v165 + 24);
    v169 = v224;
    if (v63 >= v168 >> 1)
    {
      v171 = sub_10013FD24(v168 > 1, v63 + 1, 1, v165);
      v169 = v224;
      v165 = v171;
    }
    *(_QWORD *)(v165 + 16) = v63 + 1;
    v170 = (*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
    v236 = (CHWorkoutDetailHeartRateTableViewCell *)v165;
    sub_100047C88(v163, v165 + v170 + *(_QWORD *)(v169 + 72) * v63, type metadata accessor for WorkoutChartDataElement);

    v66 = v235;
    v62 = v167;
    v139 = v233;
  }
  v148 = *(_QWORD *)(v229 + 8 * v149);
  if (v148)
  {
LABEL_60:
    v64 = v149;
LABEL_57:
    v233 = (v148 - 1) & v148;
    v143 = __clz(__rbit64(v148)) + (v64 << 6);
    v231 = v64;
    goto LABEL_53;
  }
  while (1)
  {
    v64 = v149 + 1;
    if (__OFADD__(v149, 1))
      break;
    if (v64 >= v230)
    {
      v231 = v228;
      goto LABEL_71;
    }
    v148 = *(_QWORD *)(v229 + 8 * v64);
    ++v149;
    if (v148)
      goto LABEL_57;
  }
LABEL_114:
  __break(1u);
}

void sub_1004CE580(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_type_t v17;
  void *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  double v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  double v54;
  BOOL v55;
  double v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  char v81[8];
  uint64_t aBlock[5];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v16 = swift_errorRetain(a2);
    v17 = static os_log_type_t.error.getter(v16);
    v18 = (void *)HKLogWorkouts;
    v19 = v17;
    if (os_log_type_enabled(HKLogWorkouts, v17))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v20 = v18;
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_getErrorValue(a2, v81, v80);
      v23 = Error.localizedDescription.getter(v80[1], v80[2]);
      v25 = (CHWorkoutDetailHeartRateTableViewCell *)v24;
      v84 = sub_10003E8EC(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v21 + 4);
      swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "Error getting pace data: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v84, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v34 = Strong;
  if (!a1)
    goto LABEL_34;
  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_34:
    swift_release(v34);
    return;
  }
  if (a1 >= 0)
    v67 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v67 = a1;
  swift_bridgeObjectRetain(a1);
  v68 = _CocoaArrayWrapper.endIndex.getter(v67);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v69, v70, v71, v72, v73, v74, v75);
  if (!v68)
    goto LABEL_34;
LABEL_8:
  sub_1004C9FC8(a1, v34);
  if (!v35)
    goto LABEL_34;
  v79 = v35;
  v36 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v34
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "totalDistance"));
  if (v37)
  {
    v38 = v37;
    v39 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    v78 = v36;
    v40 = v39;
    objc_msgSend(v38, "doubleValueForUnit:", v39);
    v42 = v41;

    v36 = v78;
  }
  else
  {
    v42 = 0.0;
  }
  objc_msgSend(*(id *)(v34 + v36), "duration");
  v44 = v43;
  v45 = *(void **)(v34 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v46, "distanceType");
    if (v47)
    {
      v48 = v47;
      objc_msgSend(v46, "duration");
      v44 = v49;
      v50 = objc_msgSend(v46, "statisticsForType:", v48);
      v78 = (uint64_t)v46;
      if (v50)
      {
        v77 = v50;
        v51 = objc_msgSend(v50, "sumQuantity");
        if (v51)
        {
          v76 = v48;
          v52 = v51;
          v53 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
          objc_msgSend(v52, "doubleValueForUnit:", v53);
          v42 = v54;

          v48 = v76;
        }
        else
        {
          v42 = 0.0;
        }

        v48 = v77;
      }
      else
      {
        v42 = 0.0;
      }

      v46 = (id)v78;
    }

  }
  v55 = v44 <= 0.0;
  if (v44 > 0.0)
    v56 = v42 / v44;
  else
    v56 = 0.0;
  v57 = v55;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v78 = static OS_dispatch_queue.main.getter(v58);
  v59 = swift_allocObject(&unk_1007A4650, 48, 7);
  *(_QWORD *)(v59 + 16) = v34;
  *(double *)(v59 + 24) = v56;
  *(_BYTE *)(v59 + 32) = v57;
  *(_BYTE *)(v59 + 33) = a4;
  *(_QWORD *)(v59 + 40) = v79;
  aBlock[4] = (uint64_t)sub_1004D424C;
  v83 = v59;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_1007A4668;
  v60 = _Block_copy(aBlock);
  v61 = v83;
  swift_retain(v34);
  swift_release(v61);
  static DispatchQoS.unspecified.getter(v62);
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  v63 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v64 = sub_100047110(&qword_100828C80);
  v65 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v64, v65, v8, v63);
  v66 = (void *)v78;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v60);
  _Block_release(v60);
  swift_release(v34);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1004CEB40(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  char v25;
  uint64_t v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  void (*v44)(_BYTE *, _QWORD);
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[32];

  v51 = a5;
  v8 = a3 & 1;
  v9 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v9);
  v52 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  __chkstk_darwin(v11);
  v48 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  v16 = type metadata accessor for WorkoutChartViewModel(0);
  v49 = *(_QWORD *)(v16 - 8);
  v50 = v16;
  __chkstk_darwin(v16);
  v47 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = v8;
  v26 = a4;
  v27 = sub_100134F60(v22, (uint64_t)v24, a2, v25, a4);
  swift_bridgeObjectRelease(v24, v28, v29, v30, v31, v32, v33, v34);
  v35 = v27;
  v36 = v51;
  swift_bridgeObjectRetain(v51);
  sub_1004C7078((uint64_t)v15);
  v37 = v48;
  sub_1004C7204(v48);
  v38 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain(v38);
  swift_retain(v18);
  v46 = v38;
  v39 = v47;
  sub_1002A23DC(v26, 0, 0, v35, v36, 0, (uint64_t)v15, v37, v47, v46, 0, v18);
  v40 = v39;
  v41 = v52;
  sub_10004F8C8(v39, v52, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v41, 0, 1, v50);
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v43 = swift_getKeyPath(&unk_100641310);
  v44 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v53, a1, KeyPath, v43);
  sub_1004C6420(v41, v26);
  v44(v53, 0);

  swift_release(KeyPath);
  swift_release(v43);
  return sub_100011F54(v40, type metadata accessor for WorkoutChartViewModel);
}

void sub_1004CEE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  void *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  double v46;
  id v47;
  void *v48;
  id v49;
  double v50;
  BOOL v51;
  double v52;
  char v53;
  __n128 v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  char v77[8];
  uint64_t aBlock[5];
  uint64_t v79;
  char v80[32];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v80, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
    return;
  v15 = Strong;
  if (a2)
  {
    v16 = swift_errorRetain(a2);
    v17 = static os_log_type_t.error.getter(v16);
    v18 = (void *)HKLogWorkouts;
    v19 = v17;
    if (!os_log_type_enabled(HKLogWorkouts, v17))
    {
      swift_release(v15);
      swift_errorRelease(a2);
      return;
    }
    swift_errorRetain(a2);
    swift_errorRetain(a2);
    v20 = v18;
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_getErrorValue(a2, v77, v76);
    v23 = Error.localizedDescription.getter(v76[1], v76[2]);
    v25 = (CHWorkoutDetailHeartRateTableViewCell *)v24;
    v75 = sub_10003E8EC(v23, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v21 + 4);
    swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "Error getting pace data: %s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    swift_errorRelease(a2);

    goto LABEL_35;
  }
  if (!a1)
    goto LABEL_34;
  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_34:
    sub_1004C96F4(10, (uint64_t)&unk_1007A4600, (uint64_t)sub_1004D4210, (uint64_t)&unk_1007A4618, (SEL *)&selRef_distanceSamplesForWorkout_workoutActivity_completion_);
LABEL_35:
    swift_release(v15);
    return;
  }
  if (a1 >= 0)
    v63 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v63 = a1;
  swift_bridgeObjectRetain(a1);
  v64 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v65, v66, v67, v68, v69, v70, v71);
  if (!v64)
    goto LABEL_34;
LABEL_8:
  sub_1004C9FC8(a1, v15);
  if (!v33)
    goto LABEL_34;
  v74 = v33;
  v34 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  v35 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v15
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "totalDistance"));
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v36, "doubleValueForUnit:", v37);
    v39 = v38;

  }
  else
  {
    v39 = 0.0;
  }
  objc_msgSend(*(id *)(v15 + v34), "duration");
  v41 = v40;
  v42 = *(void **)(v15 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v43, "distanceType");
    if (v44)
    {
      v45 = v44;
      objc_msgSend(v43, "duration");
      v41 = v46;
      v47 = objc_msgSend(v43, "statisticsForType:", v45);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, "sumQuantity");
        if (v49)
        {
          v73 = v49;
          v72 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
          objc_msgSend(v73, "doubleValueForUnit:", v72);
          v39 = v50;

        }
        else
        {
          v39 = 0.0;
        }

      }
      else
      {
        v39 = 0.0;
        v48 = v45;
      }

    }
  }
  v51 = v41 <= 0.0;
  if (v41 > 0.0)
    v52 = v39 / v41;
  else
    v52 = 0.0;
  v53 = v51;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v73 = (id)static OS_dispatch_queue.main.getter(v54);
  v55 = swift_allocObject(&unk_1007A45B0, 48, 7);
  *(_QWORD *)(v55 + 16) = v15;
  *(double *)(v55 + 24) = v52;
  *(_BYTE *)(v55 + 32) = v53;
  *(_QWORD *)(v55 + 40) = v74;
  aBlock[4] = (uint64_t)sub_1004D41DC;
  v79 = v55;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_1007A45C8;
  v56 = _Block_copy(aBlock);
  v57 = v79;
  swift_retain(v15);
  swift_release(v57);
  static DispatchQoS.unspecified.getter(v58);
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  v59 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v60 = sub_100047110(&qword_100828C80);
  v61 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v60, v61, v6, v59);
  v62 = v73;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v56);
  _Block_release(v56);
  swift_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1004CF410(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  _BYTE *v36;
  uint64_t KeyPath;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  int v48;
  _BYTE v49[32];

  v48 = a6;
  v45 = a4;
  v43 = a2;
  v42 = a3 & 1;
  v8 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v8);
  v47 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Date(0);
  __chkstk_darwin(v10);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v41[-v14];
  v46 = type metadata accessor for WorkoutChartViewModel(0);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v17 = &v41[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = sub_100134F60(v22, (uint64_t)v24, v43, v42, a5);
  swift_bridgeObjectRelease(v24, v26, v27, v28, v29, v30, v31, v32);
  v33 = v25;
  v34 = v45;
  swift_bridgeObjectRetain(v45);
  sub_1004C7078((uint64_t)v15);
  sub_1004C7204((uint64_t)v12);
  v35 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain(v35);
  swift_retain(v18);
  sub_1002A23DC(a5, 0, 0, v33, v34, v48, (uint64_t)v15, (uint64_t)v12, (uint64_t)v17, v35, 0, v18);
  v36 = v47;
  sub_10004F8C8((uint64_t)v17, (uint64_t)v47, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v46);
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v38 = swift_getKeyPath(&unk_100641310);
  v39 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v49, a1, KeyPath, v38);
  sub_1004C6420((uint64_t)v36, a5);
  v39(v49, 0);

  swift_release(KeyPath);
  swift_release(v38);
  return sub_100011F54((uint64_t)v17, type metadata accessor for WorkoutChartViewModel);
}

void sub_1004CF718(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t Strong;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  __n128 v39;
  double *v40;
  void *v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD v60[3];
  char v61[8];
  uint64_t aBlock[5];
  double *v63;
  uint64_t v64;
  uint64_t v65;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = (void *)HKLogWorkouts;
    v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a2, v61, v60);
      v21 = Error.localizedDescription.getter(v60[1], v60[2]);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v64 = sub_10003E8EC(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting power data: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v64, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v32 = (uint64_t *)Strong;
  if (!a1)
    goto LABEL_20;
  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_20:
    swift_release(v32);
    return;
  }
  if (a1 >= 0)
    v48 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v48 = a1;
  swift_bridgeObjectRetain(a1);
  v49 = _CocoaArrayWrapper.endIndex.getter(v48);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v50, v51, v52, v53, v54, v55, v56);
  if (!v49)
    goto LABEL_20;
LABEL_8:
  sub_1004CB634(a1, v32);
  v34 = v33;
  if (objc_msgSend(*(id *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType), "identifier") == (id)13)
  {
    v59 = v34;
    v35 = *(uint64_t *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
    v36 = *(uint64_t *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    v58 = *(id *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager);
    if (objc_msgSend(v58, "hasAverageCyclingPowerForWorkout:workoutActivity:", v35, v36))
      objc_msgSend(v58, "averageCyclingPowerForWorkout:workoutActivity:", v35, v36);
    else
      v37 = sub_1004D35E0(a1);
    v38 = v37;
    v34 = v59;
  }
  else
  {
    v38 = sub_1004D35E0(a1);
  }
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v59 = static OS_dispatch_queue.main.getter(v39);
  v40 = (double *)swift_allocObject(&unk_1007A4538, 40, 7);
  *((_QWORD *)v40 + 2) = v32;
  v40[3] = v38;
  *((_QWORD *)v40 + 4) = v34;
  aBlock[4] = (uint64_t)sub_1004D41AC;
  v63 = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_1007A4550;
  v41 = _Block_copy(aBlock);
  v42 = v63;
  swift_retain(v32);
  swift_release(v42);
  static DispatchQoS.unspecified.getter(v43);
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  v44 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v45 = sub_100047110(&qword_100828C80);
  v46 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v46, v6, v44);
  v47 = (void *)v59;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v41);
  _Block_release(v41);
  swift_release(v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1004CFBC4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];

  v8 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v8);
  v49 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  __chkstk_darwin(v10);
  v46 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - v13;
  v15 = type metadata accessor for WorkoutChartViewModel(0);
  v47 = *(_QWORD *)(v15 - 8);
  v48 = v15;
  __chkstk_darwin(v15);
  v45 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = sub_100134F60(v21, (uint64_t)v23, *(uint64_t *)&a4, 0, a3);
  swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
  v32 = v24;
  v33 = a2;
  swift_bridgeObjectRetain(a2);
  sub_1004C7078((uint64_t)v14);
  v34 = v46;
  sub_1004C7204(v46);
  v35 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain(v35);
  swift_retain(v17);
  v43 = v35;
  v36 = v45;
  sub_1002A23DC(a3, 0, 0, v32, v33, 1, (uint64_t)v14, v34, v45, v43, 0, v17);
  v37 = v36;
  v38 = v49;
  sub_10004F8C8(v36, v49, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v38, 0, 1, v48);
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v40 = swift_getKeyPath(&unk_100641310);
  v41 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v50, a1, KeyPath, v40);
  sub_1004C6420(v38, a3);
  v41(v50, 0);

  swift_release(KeyPath);
  swift_release(v40);
  return sub_100011F54(v37, type metadata accessor for WorkoutChartViewModel);
}

void sub_1004CFED8(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t Strong;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  __n128 v38;
  double *v39;
  void *v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  _QWORD v59[3];
  char v60[8];
  uint64_t aBlock[5];
  double *v62;
  uint64_t v63;
  uint64_t v64;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = (void *)HKLogWorkouts;
    v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a2, v60, v59);
      v21 = Error.localizedDescription.getter(v59[1], v59[2]);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v63 = sub_10003E8EC(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting power data: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v63, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v32 = (uint64_t *)Strong;
  if (!a1)
    goto LABEL_17;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v47 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v47 = a1;
    swift_bridgeObjectRetain(a1);
    v48 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v49, v50, v51, v52, v53, v54, v55);
    if (v48)
      goto LABEL_8;
LABEL_17:
    swift_release(v32);
    return;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_17;
LABEL_8:
  sub_1004CB634(a1, v32);
  v57 = v33;
  v34 = *(uint64_t *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  v35 = *(uint64_t *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  v58 = *(id *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager);
  if (objc_msgSend(v58, "hasAverageCyclingSpeedForWorkout:workoutActivity:", v34, v35))
    objc_msgSend(v58, "averageCyclingSpeedForWorkout:workoutActivity:", v34, v35);
  else
    v36 = sub_1004D35E0(a1);
  v37 = v36;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v58 = (id)static OS_dispatch_queue.main.getter(v38);
  v39 = (double *)swift_allocObject(&unk_1007A46C8, 40, 7);
  *((_QWORD *)v39 + 2) = v32;
  v39[3] = v37;
  *((_QWORD *)v39 + 4) = v57;
  aBlock[4] = (uint64_t)sub_1004D4280;
  v62 = v39;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_1007A46E0;
  v40 = _Block_copy(aBlock);
  v41 = v62;
  swift_retain(v32);
  swift_release(v41);
  static DispatchQoS.unspecified.getter(v42);
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  v43 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v44 = sub_100047110(&qword_100828C80);
  v45 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v6, v43);
  v46 = v58;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v40);
  _Block_release(v40);
  swift_release(v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1004D0350(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t Strong;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  double v41;
  double v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD v89[3];
  char v90[8];
  uint64_t aBlock[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = (void *)HKLogWorkouts;
    v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a2, v90, v89);
      v21 = Error.localizedDescription.getter(v89[1], v89[2]);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v93 = sub_10003E8EC(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting stride length data: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v93, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v32 = (uint64_t *)Strong;
  if (!a1)
    goto LABEL_26;
  v33 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v34 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_8;
LABEL_26:
    swift_release(v32);
    return;
  }
  if (a1 < 0)
    v73 = a1;
  else
    v73 = a1 & 0xFFFFFFFFFFFFFF8;
  v88 = (unint64_t)a1 >> 62;
  swift_bridgeObjectRetain(a1);
  v34 = _CocoaArrayWrapper.endIndex.getter(v73);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v74, v75, v76, v77, v78, v79, v80);
  v33 = v88;
  if (!v34)
    goto LABEL_26;
LABEL_8:
  v87 = v6;
  v88 = v33;
  v84 = v11;
  v85 = v10;
  v86 = v7;
  v83 = v32;
  sub_1004CC434(a1, v32);
  v82 = v35;
  if (v34 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v36 = 0;
    v37 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, a1);
      else
        v38 = *(id *)(a1 + 8 * v36 + 32);
      v39 = v38;
      ++v36;
      v40 = objc_msgSend(v38, "quantity");
      objc_msgSend(v40, "_value");
      v42 = v41;

      v37 = v37 + v42;
    }
    while (v34 != v36);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v43, v44, v45, v46, v47, v48, v49);
    if (v88)
    {
      if (a1 < 0)
        v51 = a1;
      else
        v51 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v50 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v52, v53, v54, v55, v56, v57, v58);
    }
    else
    {
      v50 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v60 = v86;
    v59 = v87;
    v61 = v84;
    v62 = v37 / (double)v50 * 100.0;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v64 = (void *)static OS_dispatch_queue.main.getter(v63);
    v65 = swift_allocObject(&unk_1007A4740, 40, 7);
    v66 = v83;
    *(_QWORD *)(v65 + 16) = v83;
    *(double *)(v65 + 24) = v62;
    *(_QWORD *)(v65 + 32) = v82;
    aBlock[4] = (uint64_t)sub_1004D42C4;
    v92 = v65;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002D0F8;
    aBlock[3] = (uint64_t)&unk_1007A4758;
    v67 = _Block_copy(aBlock);
    v68 = v92;
    swift_retain(v66);
    swift_release(v68);
    static DispatchQoS.unspecified.getter(v69);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v70 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v71 = sub_100047110(&qword_100828C80);
    v72 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v71, v72, v59, v70);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v67);
    _Block_release(v67);
    swift_release(v66);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v59);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v85);
  }
}

void sub_1004D0870(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t Strong;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  double v41;
  double v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD v89[3];
  char v90[8];
  uint64_t aBlock[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = (void *)HKLogWorkouts;
    v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a2, v90, v89);
      v21 = Error.localizedDescription.getter(v89[1], v89[2]);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v93 = sub_10003E8EC(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting vertical oscillation data: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
    return;
  }
  swift_beginAccess(a3 + 16, &v93, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    return;
  v32 = (uint64_t *)Strong;
  if (!a1)
    goto LABEL_26;
  v33 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v34 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_8;
LABEL_26:
    swift_release(v32);
    return;
  }
  if (a1 < 0)
    v73 = a1;
  else
    v73 = a1 & 0xFFFFFFFFFFFFFF8;
  v88 = (unint64_t)a1 >> 62;
  swift_bridgeObjectRetain(a1);
  v34 = _CocoaArrayWrapper.endIndex.getter(v73);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v74, v75, v76, v77, v78, v79, v80);
  v33 = v88;
  if (!v34)
    goto LABEL_26;
LABEL_8:
  v87 = v6;
  v88 = v33;
  v84 = v11;
  v85 = v10;
  v86 = v7;
  v83 = v32;
  sub_1004CC434(a1, v32);
  v82 = v35;
  if (v34 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v36 = 0;
    v37 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, a1);
      else
        v38 = *(id *)(a1 + 8 * v36 + 32);
      v39 = v38;
      ++v36;
      v40 = objc_msgSend(v38, "quantity");
      objc_msgSend(v40, "_value");
      v42 = v41;

      v37 = v37 + v42;
    }
    while (v34 != v36);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v43, v44, v45, v46, v47, v48, v49);
    if (v88)
    {
      if (a1 < 0)
        v51 = a1;
      else
        v51 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v50 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v52, v53, v54, v55, v56, v57, v58);
    }
    else
    {
      v50 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v60 = v86;
    v59 = v87;
    v61 = v84;
    v62 = v37 * 100.0 / (double)v50;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v64 = (void *)static OS_dispatch_queue.main.getter(v63);
    v65 = swift_allocObject(&unk_1007A47B8, 40, 7);
    v66 = v83;
    *(_QWORD *)(v65 + 16) = v83;
    *(double *)(v65 + 24) = v62;
    *(_QWORD *)(v65 + 32) = v82;
    aBlock[4] = (uint64_t)sub_1004D4350;
    v92 = v65;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002D0F8;
    aBlock[3] = (uint64_t)&unk_1007A47D0;
    v67 = _Block_copy(aBlock);
    v68 = v92;
    swift_retain(v66);
    swift_release(v68);
    static DispatchQoS.unspecified.getter(v69);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v70 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v71 = sub_100047110(&qword_100828C80);
    v72 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v71, v72, v59, v70);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v67);
    _Block_release(v67);
    swift_release(v66);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v59);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v85);
  }
}

uint64_t sub_1004D0D90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v5 = swift_getKeyPath(&unk_100641310);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1004D0E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006412E8);
  v5 = swift_getKeyPath(&unk_100641310);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1004D0E84()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D0EA8()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 41);
}

uint64_t sub_1004D0EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc(dword_1008372AC);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1000DA0E4;
  *(_BYTE *)(v4 + 64) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  return swift_task_switch(sub_1004C8230, 0, 0);
}

uint64_t sub_1004D0F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081E650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D0F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1008372B4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1008372B0 + dword_1008372B0))(a1, v4);
}

uint64_t sub_1004D0FE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1004D1004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004C99FC(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1004D1010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10002252C(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100401A2C();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for IndexPath(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for ImpressionMetrics(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_1004D1D00(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for ImpressionMetrics(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

double sub_1004D114C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  unint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  int isUniquelyReferenced_nonNull_native;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double result;
  CHWorkoutDetailHeartRateTableViewCell *v35;

  v4 = v3;
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)*v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_100438F74(a1, a2);
  LOBYTE(a2) = (_BYTE)v10;
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v25 = *v4;
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)*v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10040357C();
      v25 = (uint64_t)v35;
    }
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)(v25 + 48) + 16 * v9 + 8), v18, v19, v20, v21, v22, v23, v24);
    sub_100038FD4((_OWORD *)(*(_QWORD *)(v25 + 56) + 32 * v9), a3);
    sub_1004D2800(v9, v25);
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)*v4;
    *v4 = v25;
    swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1004D123C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_100438F74(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v13 = *v4;
    v23 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100403760();
      v13 = v23;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v9 + 8));
    v14 = *(_QWORD *)(v13 + 56);
    v16 = type metadata accessor for Trainer(0, v15);
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 32))(a3, v14 + *(_QWORD *)(v17 + 72) * v9, v16);
    sub_1004D29D4(v9, v13);
    v18 = *v4;
    *v4 = v13;
    v19 = swift_bridgeObjectRelease(v18);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v17 + 56))(a3, 0, 1, v16, v19);
  }
  else
  {
    v21 = type metadata accessor for Trainer(0, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21, v22);
  }
}

uint64_t sub_1004D136C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  unint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;

  v3 = v2;
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)*v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100439D68(a1);
  LOBYTE(a1) = (_BYTE)v8;
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v16 = *v3;
    v30 = (CHWorkoutDetailHeartRateTableViewCell *)*v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10040438C();
      v16 = (uint64_t)v30;
    }
    v17 = *(_QWORD *)(v16 + 56);
    v18 = type metadata accessor for WorkoutChartViewModel(0);
    v19 = *(_QWORD *)(v18 - 8);
    sub_100047C88(v17 + *(_QWORD *)(v19 + 72) * v7, a2, type metadata accessor for WorkoutChartViewModel);
    sub_1004D2D64(v7, v16);
    v20 = (CHWorkoutDetailHeartRateTableViewCell *)*v3;
    *v3 = v16;
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v18);
  }
  else
  {
    v29 = type metadata accessor for WorkoutChartViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a2, 1, 1, v29);
  }
}

uint64_t sub_1004D1484(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  unint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  CHWorkoutDetailHeartRateTableViewCell *v27;

  v2 = v1;
  v4 = (CHWorkoutDetailHeartRateTableViewCell *)*v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100439A1C(a1);
  LOBYTE(a1) = (_BYTE)v6;
  swift_bridgeObjectRelease(v4, v6, v7, v8, v9, v10, v11, v12);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v27 = (CHWorkoutDetailHeartRateTableViewCell *)*v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100404998();
    v14 = (uint64_t)v27;
  }
  v15 = *(_QWORD *)(v14 + 48);
  v16 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v5, v16);
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v5);
  sub_1004D32BC(v5, v14, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&qword_100828330, (uint64_t)&protocol conformance descriptor for UUID);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)*v2;
  *v2 = v14;
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  return v17;
}

unint64_t sub_1004D1580(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = 16 * v6;
        v10 = *(_QWORD *)(a2 + 48) + 16 * v6;
        v11 = *(_QWORD *)v10;
        v12 = *(_BYTE *)(v10 + 8);
        Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
        if ((v12 & 1) == 0)
          Hasher._combine(_:)(3uLL);
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v13 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v13 < v8)
          goto LABEL_13;
LABEL_14:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (_OWORD *)(v14 + 16 * v3);
        v16 = (_OWORD *)(v14 + v9);
        if (16 * v3 != v9 || v15 >= v16 + 1)
          *v15 = *v16;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for MetricDetailViewModel(0) - 8) + 72);
        v19 = v18 * v3;
        result = v17 + v18 * v3;
        v20 = v18 * v6;
        v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack(result);
        }
        else
        {
          v3 = v6;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_23;
      }
      if (v13 < v8)
        goto LABEL_6;
LABEL_13:
      if (v3 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_14;
    }
LABEL_23:
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D1788(int64_t a1, uint64_t a2)
{
  return sub_1004D32BC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (unint64_t *)&qword_1008214E8, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_1004D17A4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1004D195C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48) + 16 * v6;
        v11 = *(void **)v10;
        v12 = *(void **)(v10 + 8);
        Hasher.init(_seed:)(v30, *(_QWORD *)(a2 + 40));
        v13 = v12;
        v14 = v11;
        NSObject.hash(into:)(v30);
        if (v12)
        {
          Hasher._combine(_:)(1u);
          v15 = v13;
          NSObject.hash(into:)(v30);

        }
        else
        {
          Hasher._combine(_:)(0);
        }
        v16 = Hasher._finalize()();

        v17 = v16 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v17 < v9)
            goto LABEL_5;
        }
        else if (v17 >= v9)
        {
          goto LABEL_14;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_14:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_OWORD *)(v18 + 16 * v3);
          v20 = (_OWORD *)(v18 + 16 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_QWORD *)(v21 + 8 * v3);
          v23 = (_QWORD *)(v21 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 1))
          {
            *v22 = *v23;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1004D1B6C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D1D00(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v40 = (result + 1) & v11;
      v12 = *(_QWORD *)(v41 + 72);
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v39(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1000083D8(&qword_100832B20, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v24 + v16 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ImpressionMetrics(0) - 8) + 72);
            v28 = v27 * a1;
            result = v26 + v27 * a1;
            v29 = v27 * v10;
            v30 = v26 + v27 * v10 + v27;
            if (v28 < v29 || result >= v30)
            {
              result = swift_arrayInitWithTakeFrontToBack(result);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v32 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D1FD4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ImpressionMetrics(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack(result);
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D2190(int64_t a1, uint64_t a2)
{
  return sub_1004D32BC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, &qword_100822030, (uint64_t)&protocol conformance descriptor for DateComponents);
}

unint64_t sub_1004D21AC(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  Swift::UInt v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28[9];

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
        Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v12 = result & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_BYTE *)(v13 + v4);
        v15 = (_BYTE *)(v13 + v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack(result);
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D2398(unint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  Swift::UInt v11;
  Swift::UInt v12;
  unsigned __int8 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v32[9];

  v2 = result;
  v3 = a2 + 64;
  v4 = -1 << *(_BYTE *)(a2 + 32);
  v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    v6 = ~v4;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v4);
    if ((*(_QWORD *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v7 = (result + 1) & v6;
      v8 = a2;
      while (1)
      {
        v9 = 24 * v5;
        v10 = (unsigned __int8 *)(*(_QWORD *)(v8 + 48) + 24 * v5);
        v11 = *v10;
        v12 = *((_QWORD *)v10 + 1);
        v13 = v10[16];
        Hasher.init(_seed:)(v32, *(_QWORD *)(v8 + 40));
        Hasher._combine(_:)(v11);
        if ((v13 & 1) == 0)
          Hasher._combine(_:)(3uLL);
        Hasher._combine(_:)(v12);
        result = Hasher._finalize()();
        v14 = result & v6;
        if (v2 >= (uint64_t)v7)
        {
          v8 = a2;
          if (v14 < v7)
            goto LABEL_5;
        }
        else
        {
          v8 = a2;
          if (v14 >= v7)
            goto LABEL_13;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_13:
          v15 = *(_QWORD *)(v8 + 48);
          v16 = v15 + 24 * v2;
          v17 = (__int128 *)(v15 + v9);
          if (24 * v2 < v9 || v16 >= (unint64_t)v17 + 24 || v2 != v5)
          {
            v18 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v18;
          }
          v19 = *(_QWORD *)(v8 + 56);
          v20 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for MetricDetailViewModel(0) - 8) + 72);
          v21 = v20 * v2;
          result = v19 + v20 * v2;
          v22 = v20 * v5;
          v23 = v19 + v20 * v5 + v20;
          if (v21 < v22 || result >= v23)
          {
            result = swift_arrayInitWithTakeFrontToBack(result);
            v2 = v5;
            v8 = a2;
          }
          else
          {
            v2 = v5;
            v8 = a2;
            if (v21 != v22)
            {
              result = swift_arrayInitWithTakeBackToFront(result);
              v2 = v5;
            }
          }
        }
LABEL_5:
        v5 = (v5 + 1) & v6;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_25;
      }
    }
    v8 = a2;
LABEL_25:
    v25 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    v27 = *v25;
    v26 = (-1 << v2) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v3 + 8 * (result >> 6));
    v26 = *v25;
    v27 = (-1 << result) - 1;
    v8 = a2;
  }
  *v25 = v26 & v27;
  v28 = *(_QWORD *)(v8 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v8 + 16) = v30;
    ++*(_DWORD *)(v8 + 36);
  }
  return result;
}

unint64_t sub_1004D25E8(unint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  Swift::UInt v10;
  Swift::UInt v11;
  unsigned __int8 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v2 = result;
  v3 = a2 + 64;
  v4 = -1 << *(_BYTE *)(a2 + 32);
  v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    v27 = a2;
    v6 = ~v4;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v4);
    if ((*(_QWORD *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v7 = (result + 1) & v6;
      a2 = v27;
      while (1)
      {
        v8 = 24 * v5;
        v9 = (unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 24 * v5);
        v10 = *v9;
        v11 = *((_QWORD *)v9 + 1);
        v12 = v9[16];
        Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v10);
        if ((v12 & 1) == 0)
          Hasher._combine(_:)(3uLL);
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v13 = result & v6;
        if (v2 >= (uint64_t)v7)
        {
          a2 = v27;
          if (v13 < v7)
            goto LABEL_5;
        }
        else
        {
          a2 = v27;
          if (v13 >= v7)
            goto LABEL_13;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_13:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = v14 + 24 * v2;
          v16 = (__int128 *)(v14 + v8);
          if (24 * v2 < v8 || v15 >= (unint64_t)v16 + 24 || v2 != v5)
          {
            v17 = *v16;
            *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)v15 = v17;
          }
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_QWORD *)(v18 + 8 * v2);
          v20 = (_QWORD *)(v18 + 8 * v5);
          if (v2 != v5 || (v2 = v5, v19 >= v20 + 1))
          {
            *v19 = *v20;
            v2 = v5;
          }
        }
LABEL_5:
        v5 = (v5 + 1) & v6;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_22;
      }
    }
    a2 = v27;
LABEL_22:
    v21 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    v23 = *v21;
    v22 = (-1 << v2) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v3 + 8 * (result >> 6));
    v22 = *v21;
    v23 = (-1 << result) - 1;
  }
  *v21 = v22 & v23;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D2800(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D29D4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v30, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v30, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v14 = v12 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v14 < v8)
          goto LABEL_11;
LABEL_12:
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_OWORD *)(v15 + 16 * v3);
        v17 = (_OWORD *)(v15 + 16 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Trainer(0, v13) - 8) + 72);
        v20 = v19 * v3;
        result = v18 + v19 * v3;
        v21 = v19 * v6;
        v22 = v18 + v19 * v6 + v19;
        if (v20 < v21 || result >= v22)
        {
          result = swift_arrayInitWithTakeFrontToBack(result);
        }
        else
        {
          v3 = v6;
          if (v20 == v21)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v14 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v14)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D2BD0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D2D64(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD v14[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
      __asm { BR              X8 }
    }
    v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v9 = *v8;
    v10 = (-1 << v3) - 1;
  }
  else
  {
    v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    v10 = *v8;
    v9 = (-1 << result) - 1;
  }
  *v8 = v10 & v9;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1004D30B8);
  }
  *(_QWORD *)(a2 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1004D30E8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004D32BC(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  uint64_t (*v40)(uint64_t);
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a4;
  v42 = a5;
  v40 = a3;
  v7 = a3(0);
  v43 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v10 = (char *)&v38 - v9;
  v11 = a2 + 64;
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(a2 + 64 + 8 * (v13 >> 6))) != 0)
  {
    v14 = ~v12;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v12);
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v39 = (result + 1) & v14;
      v15 = *(_QWORD *)(v43 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
      v16 = v14;
      do
      {
        v17 = v11;
        v18 = v15;
        v19 = v15 * v13;
        v20 = v16;
        v38(v10, *(_QWORD *)(a2 + 48) + v15 * v13, v7);
        v21 = *(_QWORD *)(a2 + 40);
        v22 = sub_1000083D8(v41, v40, v42);
        v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v21, v7, v22);
        result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v7);
        v16 = v20;
        v24 = v23 & v20;
        if (a1 >= (uint64_t)v39)
        {
          if (v24 >= v39 && a1 >= (uint64_t)v24)
          {
LABEL_16:
            v27 = *(_QWORD *)(a2 + 48);
            v15 = v18;
            result = v27 + v18 * a1;
            if (v18 * a1 < v19 || result >= v27 + v19 + v18)
            {
              result = swift_arrayInitWithTakeFrontToBack(result);
              v16 = v20;
              v11 = v17;
            }
            else
            {
              v28 = v18 * a1 == v19;
              v11 = v17;
              if (!v28)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v16 = v20;
              }
            }
            v29 = *(_QWORD *)(a2 + 56);
            v30 = (_QWORD *)(v29 + 8 * a1);
            v31 = (_QWORD *)(v29 + 8 * v13);
            if (a1 != v13 || (a1 = v13, v30 >= v31 + 1))
            {
              *v30 = *v31;
              a1 = v13;
            }
            goto LABEL_5;
          }
        }
        else if (v24 >= v39 || a1 >= (uint64_t)v24)
        {
          goto LABEL_16;
        }
        v11 = v17;
        v15 = v18;
LABEL_5:
        v13 = (v13 + 1) & v16;
      }
      while (((*(_QWORD *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    v32 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1004D3558(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

double sub_1004D35E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  v3 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v4)
    {
      swift_bridgeObjectRelease(a1);
      v6 = 0.0;
      goto LABEL_14;
    }
LABEL_3:
    v5 = 0;
    v6 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      else
        v7 = *(id *)(a1 + 8 * v5 + 32);
      v8 = v7;
      ++v5;
      v9 = objc_msgSend(v7, "quantity");
      objc_msgSend(v9, "_value");
      v11 = v10;

      v6 = v6 + v11;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease(a1);
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v3)
      goto LABEL_9;
LABEL_14:
    v13 = *(_QWORD *)(v2 + 16);
    return v6 / (double)v13;
  }
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v16 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (v16)
  {
    v4 = v16;
    if (v16 >= 1)
      goto LABEL_3;
    __break(1u);
  }
  swift_bridgeObjectRelease(a1);
  v6 = 0.0;
LABEL_9:
  if (a1 < 0)
    v12 = a1;
  else
    v12 = v2;
  swift_bridgeObjectRetain(a1);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(a1);
  return v6 / (double)v13;
}

void sub_1004D3740(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  __n128 v50;
  const char *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  double v62;
  id v63;
  char *v64;
  id v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  id v76;
  double v77;
  void (*v78)(char *, uint64_t);
  double v79;
  double v80;
  id v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  char *v90;
  _QWORD *v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  id v99;
  id v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  CHWorkoutDetailHeartRateTableViewCell *v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  const char *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  __int128 v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  unint64_t v142;
  uint64_t v143;
  CHWorkoutDetailHeartRateTableViewCell *v144;
  char *v145;
  _QWORD *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  _QWORD *v150;

  v140 = a3;
  v144 = a2;
  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v139 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v127 - v7;
  v9 = type metadata accessor for Date(0);
  v149 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v145 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v127 - v12;
  __chkstk_darwin(v14);
  v148 = (char *)&v127 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v127 - v17;
  __chkstk_darwin(v19);
  v131 = (char *)&v127 - v20;
  __chkstk_darwin(v21);
  v147 = (char *)&v127 - v22;
  v130 = type metadata accessor for DateInterval(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_36;
  v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v24)
  {
    if (v24 < 1)
    {
      __break(1u);
      return;
    }
    v32 = 0;
    v137 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    v138 = v13;
    v142 = a1 & 0xC000000000000001;
    v136 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
    v146 = _swiftEmptyDictionarySingleton;
    v143 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    v133 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType;
    v127 = xmmword_100622F90;
    v141 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
    v135 = v8;
    v134 = v24;
    v132 = v18;
    while (1)
    {
      v58 = v142
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, a1)
          : *(id *)(a1 + 8 * v32 + 32);
      v59 = v58;
      v60 = objc_msgSend(v58, "quantityType", (_QWORD)v127, *((_QWORD *)&v127 + 1));
      v61 = objc_msgSend(v60, "aggregationStyle");

      v62 = 1.0;
      a1 = (uint64_t)v144;
      if (v61)
        break;
      v63 = objc_msgSend(v59, "startDate");
      v64 = v147;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v63);

      v65 = objc_msgSend(v59, "endDate");
      v66 = v131;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v65);

      v67 = v128;
      v68 = DateInterval.init(start:end:)(v64, v66);
      v62 = DateInterval.duration.getter(v68);
      v69 = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v67, v130);
      if (v62 > 0.0)
        break;
      v94 = static os_log_type_t.error.getter(v69);
      v95 = (void *)HKLogWorkouts;
      v96 = sub_100047110((uint64_t *)&unk_100827460);
      v97 = swift_allocObject(v96, 72, 7);
      *(_OWORD *)(v97 + 16) = v127;
      *(_QWORD *)(v97 + 56) = sub_10001E724(0, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
      *(_QWORD *)(v97 + 64) = sub_1004D4078();
      *(_QWORD *)(v97 + 32) = v59;
      v98 = v8;
      v99 = v95;
      v100 = v59;
      os_log(_:dso:log:_:_:)(v94, &_mh_execute_header, v99, "Cumulative sample missing duration, rejecting data: %@", 54, 2, v97);

      v8 = v98;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v97, v101, v102, v103, v104, v105, v106, v107);
LABEL_9:
      ++v32;
      a1 = (uint64_t)v141;
      if (v24 == v32)
      {
        swift_bridgeObjectRelease(v141, v51, v52, v53, v54, v55, v56, v57);
        v108 = v146;
        goto LABEL_41;
      }
    }
    v70 = objc_msgSend(v59, "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v70);

    v13 = *(char **)(a1 + v136);
    if (v13)
    {
      v71 = objc_msgSend(*(id *)(a1 + v136), "startDate");
      v72 = v147;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v71);

      v73 = v149;
      v74 = *(void (**)(char *, char *, uint64_t))(v149 + 32);
      v74(v8, v72, v9);
      v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v75(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v8, 1, v9) != 1)
      {
        v18 = v138;
        v74(v138, v8, v9);
        goto LABEL_20;
      }
    }
    else
    {
      v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
      v75(v8, 1, 1, v9);
    }
    v76 = objc_msgSend(*(id *)(a1 + v143), "startDate");
    v18 = v138;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v76);

    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828370);
LABEL_20:
    v77 = Date.timeIntervalSince(_:)(v18);
    v78 = *(void (**)(char *, uint64_t))(v149 + 8);
    v78(v18, v9);
    v79 = *(double *)(*(_QWORD *)(a1 + v137) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    v80 = v77 / v79;
    if ((~*(_QWORD *)&v80 & 0x7FF0000000000000) != 0)
    {
      if (v80 <= -9.22337204e18)
        goto LABEL_34;
      if (v80 >= 9.22337204e18)
        goto LABEL_35;
      if (v13)
      {
        v81 = objc_msgSend(v13, "startDate");
        v82 = v147;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v81);

        v83 = v149;
        v84 = *(void (**)(char *, char *, uint64_t))(v149 + 32);
        v85 = (uint64_t)v139;
        v84(v139, v82, v9);
        v75((char *)v85, 0, 1, v9);
        v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v85, 1, v9);
        v87 = (uint64_t)v132;
        if (v86 != 1)
        {
          v88 = ((uint64_t (*)(char *, uint64_t, uint64_t))v84)(v145, v85, v9);
          goto LABEL_28;
        }
      }
      else
      {
        v85 = (uint64_t)v139;
        v75(v139, 1, 1, v9);
        v87 = (uint64_t)v132;
      }
      v89 = objc_msgSend(*(id *)((char *)&v144->super.super.super.super.isa + v143), "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v89);

      v88 = sub_10001BE90(v85, (uint64_t *)&unk_100828370);
LABEL_28:
      v90 = v145;
      Date.addingTimeInterval(_:)(v88, v79 * 0.5 + v79 * (double)(uint64_t)v80);
      v78(v90, v9);
      v78(v148, v9);
      v91 = v146;
      if (v146[2] && (v92 = sub_10043939C(v87), (v93 & 1) != 0))
      {
        v34 = *(_QWORD *)(v91[7] + 8 * v92);
        swift_retain(v34);
      }
      else
      {
        v33 = type metadata accessor for WorkoutDataBucket();
        v34 = swift_allocObject(v33, 32, 7);
        *(_QWORD *)(v34 + 16) = 0;
        *(_QWORD *)(v34 + 24) = 0;
      }
      v35 = objc_msgSend(*(id *)(v140 + v133), "identifier");
      v36 = objc_msgSend(v59, "quantity");
      objc_msgSend(v36, "_value");
      v38 = v37;

      v39 = v38 * 60.0;
      if (v35 == (id)13)
        v39 = v38;
      v40 = *(double *)(v34 + 24);
      *(double *)(v34 + 16) = v39 + *(double *)(v34 + 16);
      *(double *)(v34 + 24) = v62 + v40;
      v41 = (uint64_t)v147;
      (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v147, v87, v9);
      swift_retain(v34);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v91);
      v150 = v91;
      sub_10040001C(v34, v41, isUniquelyReferenced_nonNull_native);
      v146 = v150;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v43, v44, v45, v46, v47, v48, v49);
      v78((char *)v41, v9);

      v50 = swift_release(v34);
      ((void (*)(uint64_t, uint64_t, __n128))v78)(v87, v9, v50);
      v8 = v135;
      v24 = v134;
      goto LABEL_9;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (a1 < 0)
      v109 = a1;
    else
      v109 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v24 = _CocoaArrayWrapper.endIndex.getter(v109);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v25, v26, v27, v28, v29, v30, v31);
  v108 = _swiftEmptyDictionarySingleton;
LABEL_41:
  swift_bridgeObjectRetain(v108);
  v111 = (CHWorkoutDetailHeartRateTableViewCell *)v110;
  v112 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1004C690C(v110);
  swift_bridgeObjectRelease(v111, v113, v114, v115, v116, v117, v118, v119);
  if (!*(_QWORD *)v112->cellPadding)
    swift_bridgeObjectRelease(v112, v120, v121, v122, v123, v124, v125, v126);
  swift_bridgeObjectRelease(v111, v120, v121, v122, v123, v124, v125, v126);
}

uint64_t sub_1004D401C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D402C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004D4060()
{
  uint64_t v0;

  return sub_1004CA860(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1004D4078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008372D8;
  if (!qword_1008372D8)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1008372D8);
  }
  return result;
}

uint64_t sub_1004D40D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_1004D40FC()
{
  uint64_t v0;

  return sub_1004CAD84(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1004D410C(int64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004CB120(a1, a2, v2);
}

uint64_t sub_1004D4114()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1004D412C()
{
  uint64_t v0;

  return sub_1004CFBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), 5, *(double *)(v0 + 24));
}

void sub_1004D4150(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, void *a3, CHWorkoutDetailHeartRateTableViewCell *a4)
{
  uint64_t v4;

  sub_1004CD240(a1, a2, a3, a4, v4);
}

uint64_t sub_1004D415C()
{
  return sub_1004D41E8(0, 1);
}

uint64_t sub_1004D4168()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004D418C(int64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004CF718(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1004D4194()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1004D41AC()
{
  uint64_t v0;

  return sub_1004CFBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), 4, *(double *)(v0 + 24));
}

void sub_1004D41D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004CEE54(a1, a2, v2);
}

uint64_t sub_1004D41DC()
{
  return sub_1004D41E8(10, 0);
}

uint64_t sub_1004D41E8(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_1004CF410(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40), a1, a2);
}

void sub_1004D4210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004CE580(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1004D4220()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004D424C()
{
  uint64_t v0;

  return sub_1004CEB40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(_QWORD *)(v0 + 40));
}

void sub_1004D4260(int64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004CFED8(a1, a2, v2);
}

uint64_t sub_1004D4268()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1004D4280()
{
  uint64_t v0;

  return sub_1004CFBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), 9, *(double *)(v0 + 24));
}

void sub_1004D42A4(int64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004D0350(a1, a2, v2);
}

uint64_t sub_1004D42AC()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1004D42C4()
{
  uint64_t v0;

  return sub_1004CFBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), 6, *(double *)(v0 + 24));
}

void sub_1004D42E8(int64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004D0870(a1, a2, v2);
}

uint64_t sub_1004D42F0()
{
  return sub_1004D4308((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_1004D4308(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;

  a1(*(_QWORD *)(v3 + 16));
  a2(*(_QWORD *)(v3 + 32));
  return swift_deallocObject(v3, a3, 7);
}

uint64_t sub_1004D4350()
{
  uint64_t v0;

  return sub_1004CFBC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), 7, *(double *)(v0 + 24));
}

uint64_t sub_1004D4374()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004D4398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1008372B4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1008372B0 + dword_1008372B0))(a1, v4);
}

Swift::Int sub_1004D448C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _OWORD v31[4];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v1 = v0;
  Hasher.init()(v31);
  v2 = (int *)type metadata accessor for TrendsCard(0);
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  sub_1000EB3F4(*(_QWORD *)v3, v5, *(_BYTE *)(v3 + 16));
  sub_10054FFE4(v4, v5, v6);
  v8 = v7;
  String.hash(into:)(v31, v9, v7);
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)(v31, v4, v5);
      v17 = v4;
      v18 = v5;
      v19 = 1;
    }
    else
    {
      v17 = v4;
      v18 = v5;
      v19 = v6;
    }
    sub_1000EB41C(v17, v18, v19);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v2[6]));
  Hasher._combine(_:)(*(_BYTE *)(v1 + v2[7]));
  sub_10025C8AC(*(_QWORD *)(v1 + v2[9]), *(_BYTE *)(v1 + v2[9] + 8));
  v21 = v20;
  String.hash(into:)(v31, v22, v20);
  swift_bridgeObjectRelease(v21, v23, v24, v25, v26, v27, v28, v29);
  v35 = v31[2];
  v36 = v31[3];
  v37 = v32;
  v33 = v31[0];
  v34 = v31[1];
  return Hasher.finalize()();
}

uint64_t sub_1004D45F4()
{
  uint64_t v0;
  int *v1;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __int128 v28;
  char v29;
  _QWORD v30[2];

  v30[0] = 0;
  v30[1] = 0xE000000000000000;
  v1 = (int *)type metadata accessor for TrendsCard(0);
  v2 = (__int128 *)(v0 + v1[5]);
  v3 = *((_BYTE *)v2 + 16);
  v28 = *v2;
  v29 = v3;
  _print_unlocked<A, B>(_:_:)(&v28, v30, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v28) = *(_BYTE *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)(&v28, v30, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_10027F100();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object, v10, v11, v12, v13, v14, v15, v16);
  v17._countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  sub_10025C8AC(*(_QWORD *)(v0 + v1[9]), *(_BYTE *)(v0 + v1[9] + 8));
  v19 = (CHWorkoutDetailHeartRateTableViewCell *)v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
  return v30[0];
}

uint64_t type metadata accessor for TrendsCard(uint64_t a1)
{
  uint64_t result;

  result = qword_100837358;
  if (!qword_100837358)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrendsCard);
  return result;
}

_QWORD *sub_1004D4780(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = v17[8];
    *(_QWORD *)v16 = v18;
    v16[8] = (char)v17;
    swift_bridgeObjectRetain(v18);
  }
  return a1;
}

void sub_1004D4874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + *(int *)(a2 + 36)), v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1004D48CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = (uint64_t *)(a2 + v14);
  v17 = *v16;
  LOBYTE(v16) = *((_BYTE *)v16 + 8);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = (_BYTE)v16;
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t sub_1004D4994(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *(CHWorkoutDetailHeartRateTableViewCell **)v17;
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = (_BYTE)v18;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
  return a1;
}

uint64_t sub_1004D4A7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_1004D4B20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  v19 = *(CHWorkoutDetailHeartRateTableViewCell **)v16;
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = (_BYTE)v17;
  swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
  return a1;
}

uint64_t sub_1004D4BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D4BE4);
}

uint64_t sub_1004D4BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1004D4C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D4C68);
}

uint64_t sub_1004D4C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1004D4CE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100641358;
    v4[2] = &unk_100641370;
    v4[3] = &unk_100641370;
    v4[4] = &unk_100641370;
    v4[5] = &unk_100641388;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1004D4D68()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  objc_super v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_noteListener];
  swift_beginAccess(&v0[OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_noteListener], v10, 0, 0);
  sub_1002666C4(v1, (uint64_t)&v8);
  if (v9)
  {
    sub_100038FD4(&v8, &v11);
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = v12;
    v4 = sub_100016804(&v11, v12);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
    objc_msgSend(v2, "removeObserver:", v5);

    swift_unknownObjectRelease(v5);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v11);
  }
  else
  {
    sub_1000F996C((uint64_t)&v8);
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ActivitySummaryChangeListener();
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1004D4EB8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D4EDC()
{
  return sub_1000083D8(&qword_1008373E0, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641480);
}

uint64_t type metadata accessor for ActivityRingEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1008375B8;
  if (!qword_1008375B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityRingEntity);
  return result;
}

uint64_t sub_1004D4F44()
{
  return sub_1000083D8(&qword_1008373E8, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006414B8);
}

uint64_t sub_1004D4F70()
{
  return sub_1000083D8(&qword_1008373F0, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006414E8);
}

unint64_t sub_1004D4FA0()
{
  unint64_t result;

  result = qword_1008373F8;
  if (!qword_1008373F8)
  {
    result = swift_getWitnessTable(&unk_100644E60, &type metadata for ActivityRingEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1008373F8);
  }
  return result;
}

uint64_t sub_1004D4FE4()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1004D5004()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1004D5024()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1004D5044()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1004D5064()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1004D5084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _OWORD v3[2];
  uint64_t v4;

  sub_100047110(&qword_1008201E0);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v3, 0, sizeof(v3));
  v4 = 0;
  v1 = static AppDependencyManager.shared.getter(v0);
  result = AppDependency.__allocating_init(key:manager:)(v3, v1);
  qword_10086ACE8 = result;
  return result;
}

uint64_t sub_1004D50E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086ACF0);
  sub_10003CE9C(v7, (uint64_t)qword_10086ACF0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000027, 0x80000001006A2300);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1004D51F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100047110(&qword_100837698);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110((uint64_t *)&unk_1008376A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100837690);
  sub_100008398(v7, qword_10086AD08);
  sub_10003CE9C(v7, (uint64_t)qword_10086AD08);
  v8 = type metadata accessor for ActivityRingEntity(0);
  v9 = sub_1000083D8(&qword_100837400, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006413F0);
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, v8, v9);
  v10._object = (void *)0x80000001006927C0;
  v10._countAndFlagsBits = 0xD000000000000016;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return EntityURLRepresentation.init(stringInterpolation:)(v6, v8, v9);
}

void sub_1004D5394()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setDateFormat:", v1);

  qword_10086AD20 = (uint64_t)v0;
}

uint64_t sub_1004D5408()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002DLL, 0x80000001006A22D0);
  if (qword_10081DEF8 != -1)
    swift_once(&qword_10081DEF8, sub_1004D5394);
  v10 = (void *)qword_10086AD20;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v10, "stringFromDate:", isa);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  LocalizedStringResource.init(stringLiteral:)(v13, v15);
  v16.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000013, 0x8000000100689A20, 0, 0, v16);
  return DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
}

void sub_1004D55E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  dispatch_semaphore_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  dispatch_semaphore_t v70;
  id v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  id v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  dispatch_semaphore_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  id v128;

  v127 = a2;
  v111 = type metadata accessor for DispatchTimeInterval(0);
  v123 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v122 = (char **)((char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v124 = type metadata accessor for DispatchTime(0);
  v121 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v119 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v120 = (char *)&v98 - v6;
  v7 = type metadata accessor for DateComponents(0);
  v114 = *(_QWORD *)(v7 - 8);
  v115 = v7;
  __chkstk_darwin(v7);
  v117 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v116 = (char *)&v98 - v10;
  v11 = type metadata accessor for ActivityRingEntity(0);
  v113 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v113 + 64);
  __chkstk_darwin(v11);
  v118 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v98 - v14;
  __chkstk_darwin(v16);
  v112 = (dispatch_semaphore_t)((char *)&v98 - v17);
  v18 = type metadata accessor for Calendar.Component(0);
  v108 = *(_QWORD *)(v18 - 8);
  v109 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v21);
  v110 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Date(0);
  v24 = *(_QWORD *)(v23 - 8);
  v125 = v23;
  v126 = v24;
  __chkstk_darwin(v23);
  v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v98 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v98 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v98 - v34;
  v36 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v36);
  v40 = (char *)&v98 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(int *)(v11 + 40);
  v42 = *(void **)(*(_QWORD *)(a1 + v41) + 16);
  if (v42)
  {
    v43 = *(id *)(*(_QWORD *)(a1 + v41) + 16);
LABEL_12:
    *v127 = v43;
    v97 = v42;
    return;
  }
  v104 = v29;
  v101 = v26;
  v103 = v15;
  v102 = v41;
  v99 = v38;
  v100 = v37;
  v106 = v32;
  v107 = v11;
  v44 = v40;
  static Calendar.current.getter(v37);
  Calendar.startOfDay(for:)(a1);
  v46 = v108;
  v45 = v109;
  (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v20, enum case for Calendar.Component.day(_:), v109);
  v47 = (uint64_t)v110;
  v105 = v35;
  v98 = v44;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v20, 1, v35, 0);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v45);
  v48 = v112;
  sub_1004D83C0(a1, (uint64_t)v112);
  v49 = v125;
  v50 = v126;
  v51 = a1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v47, 1, v125) == 1)
  {
    v52 = v106;
    (*(void (**)(char *, dispatch_semaphore_t, uint64_t))(v50 + 16))(v106, v48, v49);
    sub_1004D8404((uint64_t)v48);
    sub_10001BE90(v47, (uint64_t *)&unk_100828370);
  }
  else
  {
    sub_1004D8404((uint64_t)v48);
    v52 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v106, v47, v49);
  }
  v53 = v107;
  v54 = (uint64_t)v101;
  v112 = dispatch_semaphore_create(0);
  v55 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v55(v104, v105, v49);
  v55((char *)v54, v52, v49);
  v56 = v51 + *(int *)(v53 + 52);
  v57 = v115;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
  v59 = (uint64_t)v116;
  v58(v116, v56, v115);
  v60 = (uint64_t)v117;
  v58(v117, v56, v57);
  v61 = v51;
  v62 = v51;
  v63 = (uint64_t)v103;
  sub_1004D83C0(v61, (uint64_t)v103);
  v64 = *(unsigned __int8 *)(v113 + 80);
  v65 = (v64 + 16) & ~v64;
  v66 = (v12 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  v67 = swift_allocObject(&unk_1007A4980, v66 + 8, v64 | 7);
  v68 = v63;
  v69 = v62;
  sub_1004D8554(v68, v67 + v65);
  v70 = v112;
  *(_QWORD *)(v67 + v66) = v112;
  v71 = objc_allocWithZone((Class)_HKActivityStatisticsQuery);
  v72 = v70;
  v73 = v54;
  v74 = v107;
  v75 = sub_10032AF5C((uint64_t)v104, v73, v59, v60, (uint64_t)sub_1004D8598, v67);
  AppDependency.wrappedValue.getter(&v128);
  v76 = v128;
  objc_msgSend(v128, "executeQuery:", v75);

  v77 = v119;
  static DispatchTime.now()(v78);
  v80 = v122;
  v79 = v123;
  *v122 = 15;
  v81 = v111;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v79 + 104))(v80, enum case for DispatchTimeInterval.seconds(_:), v111);
  v82 = v120;
  + infix(_:_:)(v77, v80);
  (*(void (**)(_QWORD *, uint64_t))(v79 + 8))(v80, v81);
  v83 = *(void (**)(char *, uint64_t))(v121 + 8);
  v84 = v124;
  v83(v77, v124);
  v85 = OS_dispatch_semaphore.wait(timeout:)(v82) & 1;
  v83(v82, v84);
  LOBYTE(v85) = static DispatchTimeoutResult.== infix(_:_:)(v85, 1);
  v86 = v118;
  sub_1004D83C0(v69, v118);
  if ((v85 & 1) != 0 || !*(_QWORD *)(*(_QWORD *)(v86 + *(int *)(v74 + 40)) + 16))
  {
    sub_1004D8404(v86);
    v87 = v102;
    v88 = *(_QWORD *)(v69 + v102);
    v89 = objc_msgSend(objc_allocWithZone((Class)_HKActivityStatisticsQueryResult), "init");
    v90 = *(void **)(v88 + 16);
    *(_QWORD *)(v88 + 16) = v89;

  }
  else
  {
    sub_1004D8404(v86);
    v87 = v102;
  }
  v91 = *(void **)(*(_QWORD *)(v69 + v87) + 16);
  v92 = v126;
  v93 = v106;
  v94 = v105;
  if (v91)
  {
    v43 = v91;

    v95 = *(void (**)(char *, uint64_t))(v92 + 8);
    v96 = v125;
    v95(v93, v125);
    v95(v94, v96);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
    v42 = 0;
    goto LABEL_12;
  }
  __break(1u);
}

double sub_1004D5D2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActivityRingEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = *(_QWORD *)(a4 + *(int *)(v18 + 44));
  sub_1004D83C0(a4, (uint64_t)v17);
  v19 = *(unsigned __int8 *)(v15 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1007A49A8, v22 + 8, v19 | 7);
  sub_1004D8554((uint64_t)v17, v23 + v20);
  *(_QWORD *)(v23 + v21) = a2;
  *(_QWORD *)(v23 + v22) = a5;
  aBlock[4] = sub_1004D872C;
  v36 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A49C0;
  v24 = _Block_copy(aBlock);
  v25 = a2;
  static DispatchQoS.unspecified.getter(a5);
  v34 = &_swiftEmptyArrayStorage;
  v26 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100047110(&qword_100828C80);
  v28 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v27, v28, v8, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

Swift::Int sub_1004D5F9C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ActivityRingEntity(0) + 40));
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a2;
  v5 = a2;

  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1004D5FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;

  v51 = a1;
  v3 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v3);
  v50 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v5);
  v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v46 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for ActivityRingEntity(0);
  v19 = v18[5];
  sub_100047110(&qword_100837610);
  LocalizedStringResource.init(stringLiteral:)(0x4520657669746341, 0xED0000796772656ELL);
  v20 = sub_100028384(&qword_100837620, &qword_100837628, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(a2 + v19) = EntityProperty<>.init(title:_get:)(v17, &unk_100837618, 0, v20);
  v21 = v18[6];
  sub_100047110(&qword_100837630);
  LocalizedStringResource.init(stringLiteral:)(0x6D69542065766F4DLL, 0xE900000000000065);
  v22 = sub_100028384(&qword_100837640, &qword_100837648, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(a2 + v21) = EntityProperty<>.init(title:_get:)(v17, &unk_100837638, 0, v22);
  v23 = v18[7];
  LocalizedStringResource.init(stringLiteral:)(0x6573696372657845, 0xED0000656D695420);
  *(_QWORD *)(a2 + v23) = EntityProperty<>.init(title:_get:)(v17, &unk_100837650, 0, v22);
  v24 = v18[8];
  sub_100047110(&qword_100837658);
  LocalizedStringResource.init(stringLiteral:)(0x6F4820646E617453, 0xEB00000000737275);
  v25 = sub_100028384(&qword_100837668, &qword_100837670, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(a2 + v24) = EntityProperty<>.init(title:_get:)(v17, &unk_100837660, 0, v25);
  v26 = v18[9];
  sub_100047110(&qword_1008201E0);
  v27 = type metadata accessor for AppDependencyManager(0);
  memset(v52, 0, sizeof(v52));
  v53 = 0;
  v28 = static AppDependencyManager.shared.getter(v27);
  *(_QWORD *)(a2 + v26) = AppDependency.__allocating_init(key:manager:)(v52, v28);
  v29 = v18[10];
  v30 = type metadata accessor for ActivityRingEntity.Cache();
  v31 = swift_allocObject(v30, 24, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(a2 + v29) = v31;
  v32 = v18[11];
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  *(_QWORD *)&v52[0] = &_swiftEmptyArrayStorage;
  v33 = sub_1000083D8(&qword_10082DEA0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v34 = sub_100047110(&qword_10082DEA8);
  v35 = sub_100028384(&qword_10082DEB0, &qword_10082DEA8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v52, v34, v35, v9, v33);
  v36 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v48);
  *(_QWORD *)(a2 + v32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000012, 0x80000001006A2290, v14, v11, v36, 0);
  v37 = v18[12];
  v38 = sub_100047110(&qword_100837678);
  v39 = swift_allocObject(v38, 20, 7);
  *(_DWORD *)(v39 + 16) = 0;
  *(_QWORD *)(a2 + v37) = v39;
  v40 = type metadata accessor for Calendar(0);
  v41 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v49, 1, 1, v40);
  v42 = type metadata accessor for TimeZone(0);
  v43 = v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v50, 1, 1, v42);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v41, v43, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  DateComponents.day.setter(1, 0);
  v44 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(a2, v51, v44);
}

double sub_1004D65B8@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_10081DEE0 != -1)
    swift_once(&qword_10081DEE0, sub_1004D5084);
  v2 = qword_10086ACE8;
  *a1 = qword_10086ACE8;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1004D6608()
{
  return sub_1000083D8(&qword_100837400, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006413F0);
}

uint64_t sub_1004D6634()
{
  return sub_1000083D8(&qword_100837408, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641520);
}

uint64_t sub_1004D6660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DEF0 != -1)
    swift_once(&qword_10081DEF0, sub_1004D51F8);
  v2 = sub_100047110(&qword_100837690);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086AD08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1004D66D4()
{
  return sub_1000083D8(&qword_100837410, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641548);
}

uint64_t sub_1004D6700()
{
  return sub_1000083D8(&qword_100837418, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641570);
}

uint64_t sub_1004D672C()
{
  return sub_1000083D8(&qword_100837420, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641598);
}

uint64_t sub_1004D6758()
{
  return sub_1000083D8((unint64_t *)&unk_100837428, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006415F0);
}

void sub_1004D6784(uint64_t *a1@<X8>)
{
  void *v2;
  Class isa;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_10081DEF8 != -1)
    swift_once(&qword_10081DEF8, sub_1004D5394);
  v2 = (void *)qword_10086AD20;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, "stringFromDate:", isa);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

uint64_t sub_1004D681C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1000083D8(&qword_100837688, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641448);
  v4 = URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_1004D687C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DEE8 != -1)
    swift_once(&qword_10081DEE8, sub_1004D50E8);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086ACF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1004D68EC()
{
  return sub_100028384(&qword_100837438, &qword_100837440, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1004D6918(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000083D8(&qword_100837400, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006413F0);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1004D6968()
{
  return sub_1000083D8(&qword_100837448, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_100641620);
}

uint64_t sub_1004D6998(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000083D8((unint64_t *)&unk_100837428, type metadata accessor for ActivityRingEntity, (uint64_t)&unk_1006415F0);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

double sub_1004D69EC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1004D8D38((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

unint64_t sub_1004D6A30()
{
  unint64_t result;

  result = qword_100837450;
  if (!qword_100837450)
  {
    result = swift_getWitnessTable(&unk_1006416D0, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837450);
  }
  return result;
}

unint64_t sub_1004D6A78()
{
  unint64_t result;

  result = qword_100837458;
  if (!qword_100837458)
  {
    result = swift_getWitnessTable(&unk_100641708, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837458);
  }
  return result;
}

unint64_t sub_1004D6AC0()
{
  unint64_t result;

  result = qword_100837460;
  if (!qword_100837460)
  {
    result = swift_getWitnessTable(&unk_100641738, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837460);
  }
  return result;
}

uint64_t sub_1004D6B04()
{
  return sub_100028384(&qword_100837468, &qword_100837470, (uint64_t)&protocol conformance descriptor for _TransientAppEntityQuery<A>);
}

uint64_t sub_1004D6B30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D8778();
  return static TransientAppEntity.defaultQuery.getter(a1, v2);
}

unint64_t sub_1004D6B6C()
{
  unint64_t result;

  result = qword_100837478;
  if (!qword_100837478)
  {
    result = swift_getWitnessTable(&unk_100641770, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837478);
  }
  return result;
}

unint64_t sub_1004D6BB4()
{
  unint64_t result;

  result = qword_100837480;
  if (!qword_100837480)
  {
    result = swift_getWitnessTable(&unk_100641798, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837480);
  }
  return result;
}

unint64_t sub_1004D6C00()
{
  unint64_t result;

  result = qword_100837488;
  if (!qword_100837488)
  {
    result = swift_getWitnessTable(&unk_100641818, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837488);
  }
  return result;
}

uint64_t sub_1004D6C44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D8778();
  return TransientAppEntity.id.getter(a1, v2);
}

uint64_t sub_1004D6C7C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x80000001006A22B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1004D6D64()
{
  return sub_100028384(&qword_100837490, &qword_100837498, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1004D6D90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024A278();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1004D6DCC()
{
  unint64_t result;

  result = qword_1008374A0;
  if (!qword_1008374A0)
  {
    result = swift_getWitnessTable(&unk_100641848, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_1008374A0);
  }
  return result;
}

uint64_t sub_1004D6E10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x80000001006A22B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v10 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 1, 1, v10);
  return DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
}

uint64_t sub_1004D6F58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004D6C00();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t type metadata accessor for ActivityRingEntity.Cache()
{
  return objc_opt_self(_TtCV10FitnessApp18ActivityRingEntityP33_B0EF780FDA4B2F7BC7B5ACCE70F71B985Cache);
}

uint64_t *sub_1004D6FB0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = v14;
    v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v15;
    v16 = a3[9];
    v17 = a3[10];
    v18 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v18;
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = v19;
    v20 = a3[11];
    v21 = a3[12];
    v22 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
    v23 = a3[13];
    v30 = (char *)a2 + v23;
    v31 = (char *)a1 + v23;
    v24 = *(uint64_t *)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = v24;
    v25 = type metadata accessor for DateComponents(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_retain(v10);
    swift_retain(v11);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v19);
    v26 = v22;
    swift_retain(v24);
    v29(v31, v30, v25);
  }
  return a1;
}

uint64_t sub_1004D7110(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6]));
  swift_release(*(_QWORD *)(a1 + a2[7]));
  swift_release(*(_QWORD *)(a1 + a2[8]));
  swift_release(*(_QWORD *)(a1 + a2[9]));
  swift_release(*(_QWORD *)(a1 + a2[10]));

  swift_release(*(_QWORD *)(a1 + a2[12]));
  v5 = a1 + a2[13];
  v6 = type metadata accessor for DateComponents(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1004D71CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = a3[9];
  v16 = a3[10];
  v17 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a3[11];
  v20 = a3[12];
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = a3[13];
  v28 = a2 + v22;
  v29 = a1 + v22;
  v23 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v23;
  v24 = type metadata accessor for DateComponents(0);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v17);
  swift_retain(v18);
  v25 = v21;
  swift_retain(v23);
  v27(v29, v28, v24);
  return a1;
}

uint64_t sub_1004D7300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = *(_QWORD *)(a2 + v13);
  v15 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = a3[8];
  v17 = *(_QWORD *)(a2 + v16);
  v18 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = a3[9];
  v20 = *(_QWORD *)(a2 + v19);
  v21 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = a3[10];
  v23 = *(_QWORD *)(a2 + v22);
  v24 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  swift_retain(v23);
  swift_release(v24);
  v25 = a3[11];
  v26 = *(void **)(a2 + v25);
  v27 = *(void **)(a1 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v28 = v26;

  v29 = a3[12];
  v30 = *(_QWORD *)(a2 + v29);
  v31 = *(_QWORD *)(a1 + v29);
  *(_QWORD *)(a1 + v29) = v30;
  swift_retain(v30);
  swift_release(v31);
  v32 = a3[13];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

uint64_t sub_1004D7458(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v11 = a3[13];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v14 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1004D7524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_release(v12);
  v13 = a3[8];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release(v14);
  v15 = a3[9];
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_release(v16);
  v17 = a3[10];
  v18 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_release(v18);
  v19 = a3[11];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[12];
  v22 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_release(v22);
  v23 = a3[13];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_1004D7640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D764C);
}

uint64_t sub_1004D764C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for DateComponents(0);
    v10 = a1 + *(int *)(a3 + 52);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1004D76F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D7700);
}

uint64_t sub_1004D7700(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for DateComponents(0);
    v12 = a1 + *(int *)(a4 + 52);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1004D77A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[10];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = type metadata accessor for DateComponents(319);
    if (v4 <= 0x3F)
    {
      v5[9] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 10, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingGoals()
{
  return &type metadata for ActivityRingGoals;
}

uint64_t sub_1004D7860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1004D7878, 0, 0);
}

void sub_1004D7878()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity(0) + 48));
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = sub_1004D8EBC;
  *(_QWORD *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  (*(void (**)(void **__return_ptr))(v4 + 16))(&v42);
  v5 = v42;
  os_unfair_lock_unlock(v2 + 4);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = objc_msgSend(v5, "activeEnergyResults");

  if (!v6)
    goto LABEL_14;
  v7 = sub_10001E724(0, &qword_100823FD0, _HKActivityStatisticsQuantityInfo_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v9, v10, v11, v12, v13, v14, v15);
    goto LABEL_14;
  }
  if (v8 < 0)
    v31 = v8;
  else
    v31 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v33, v34, v35, v36, v37, v38, v39);
  if (!v32)
    goto LABEL_13;
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
LABEL_7:
    v24 = v16;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v17, v18, v19, v20, v21, v22, v23);
    v25 = objc_msgSend(v24, "quantityValue");

    if (v25)
    {
      v26 = objc_msgSend((id)objc_opt_self(HKUnit), "largeCalorieUnit");
      objc_msgSend(v25, "doubleValueForUnit:", v26);
      v28 = v27;

      v29 = objc_msgSend((id)objc_opt_self(NSUnitEnergy), "kilocalories");
      v30 = sub_10001E724(0, &qword_100821ED0, NSUnitEnergy_ptr);
      Measurement.init(value:unit:)(v29, v30, v28);

LABEL_15:
      (*(void (**)(void))(v0 + 8))();
      return;
    }
LABEL_14:
    v40 = objc_msgSend((id)objc_opt_self(NSUnitEnergy), "kilocalories");
    v41 = sub_10001E724(0, &qword_100821ED0, NSUnitEnergy_ptr);
    Measurement.init(value:unit:)(v40, v41, 0.0);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v8 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1004D7B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1004D7B5C, 0, 0);
}

void sub_1004D7B5C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity(0) + 48));
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = sub_1004D8EBC;
  *(_QWORD *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  (*(void (**)(void **__return_ptr))(v4 + 16))(&v42);
  v5 = v42;
  os_unfair_lock_unlock(v2 + 4);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = objc_msgSend(v5, "appleMoveTimeResults");

  if (!v6)
    goto LABEL_14;
  v7 = sub_10001E724(0, &qword_100823FD0, _HKActivityStatisticsQuantityInfo_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v9, v10, v11, v12, v13, v14, v15);
    goto LABEL_14;
  }
  if (v8 < 0)
    v31 = v8;
  else
    v31 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v33, v34, v35, v36, v37, v38, v39);
  if (!v32)
    goto LABEL_13;
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
LABEL_7:
    v24 = v16;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v17, v18, v19, v20, v21, v22, v23);
    v25 = objc_msgSend(v24, "quantityValue");

    if (v25)
    {
      v26 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
      objc_msgSend(v25, "doubleValueForUnit:", v26);
      v28 = v27;

      v29 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
      v30 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
      Measurement.init(value:unit:)(v29, v30, v28);

LABEL_15:
      (*(void (**)(void))(v0 + 8))();
      return;
    }
LABEL_14:
    v40 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v41 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v40, v41, 0.0);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v8 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1004D7E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1004D7E40, 0, 0);
}

void sub_1004D7E40()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity(0) + 48));
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = sub_1004D8EBC;
  *(_QWORD *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  (*(void (**)(void **__return_ptr))(v4 + 16))(&v42);
  v5 = v42;
  os_unfair_lock_unlock(v2 + 4);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = objc_msgSend(v5, "appleExerciseTimeResults");

  if (!v6)
    goto LABEL_14;
  v7 = sub_10001E724(0, &qword_100823FD0, _HKActivityStatisticsQuantityInfo_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v9, v10, v11, v12, v13, v14, v15);
    goto LABEL_14;
  }
  if (v8 < 0)
    v31 = v8;
  else
    v31 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v33, v34, v35, v36, v37, v38, v39);
  if (!v32)
    goto LABEL_13;
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
LABEL_7:
    v24 = v16;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v17, v18, v19, v20, v21, v22, v23);
    v25 = objc_msgSend(v24, "quantityValue");

    if (v25)
    {
      v26 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
      objc_msgSend(v25, "doubleValueForUnit:", v26);
      v28 = v27;

      v29 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
      v30 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
      Measurement.init(value:unit:)(v29, v30, v28);

LABEL_15:
      (*(void (**)(void))(v0 + 8))();
      return;
    }
LABEL_14:
    v40 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v41 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v40, v41, 0.0);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v8 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1004D810C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1004D8124, 0, 0);
}

void sub_1004D8124()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  void *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity(0) + 48));
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = sub_1004D83A8;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  (*(void (**)(unint64_t *__return_ptr))(v4 + 16))(&v42);
  v6 = (void *)v42;
  os_unfair_lock_unlock(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v7 = objc_msgSend(v6, "appleStandHourResults");

  if (!v7)
  {
    v32 = 0;
LABEL_24:
    **(_QWORD **)(v0 + 16) = v32;
    (*(void (**)(__n128))(v0 + 8))(v8);
    return;
  }
  v9 = sub_10001E724(0, &qword_100823FD8, _HKActivityStatisticsStandHourInfo_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v9);

  v42 = (unint64_t)&_swiftEmptyArrayStorage;
  if (!((unint64_t)v10 >> 62))
  {
    v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_4;
LABEL_20:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v11, v12, v13, v14, v15, v16, v17);
    v31 = (unint64_t)&_swiftEmptyArrayStorage;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_25;
    goto LABEL_21;
  }
  if (v10 < 0)
    v33 = v10;
  else
    v33 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v18 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v34, v35, v36, v37, v38, v39, v40);
  if (!v18)
    goto LABEL_20;
LABEL_4:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      else
        v29 = *(id *)(v10 + 8 * i + 32);
      v30 = v29;
      if (objc_msgSend(v29, "state", v42))
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
        v20 = *(_QWORD *)(v42 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v30);
        specialized ContiguousArray._endMutation()(v21);
      }
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v22, v23, v24, v25, v26, v27, v28);
    v31 = v42;
    if ((v42 & 0x8000000000000000) != 0)
      goto LABEL_25;
LABEL_21:
    if ((v31 & 0x4000000000000000) == 0)
    {
      v32 = *(_QWORD *)(v31 + 16);
LABEL_23:
      v8 = swift_release(v31);
      goto LABEL_24;
    }
LABEL_25:
    swift_bridgeObjectRetain(v31);
    v32 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_release(v31);
    goto LABEL_23;
  }
  __break(1u);
}

void sub_1004D83A8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1004D55E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1004D83C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityRingEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D8404(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityRingEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004D8440()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ActivityRingEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6]));
  swift_release(*(_QWORD *)(v7 + v1[7]));
  swift_release(*(_QWORD *)(v7 + v1[8]));
  swift_release(*(_QWORD *)(v7 + v1[9]));
  swift_release(*(_QWORD *)(v7 + v1[10]));

  swift_release(*(_QWORD *)(v7 + v1[12]));
  v9 = v7 + v1[13];
  v10 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1004D8554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityRingEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1004D8598(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for ActivityRingEntity(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1004D5D2C(a1, a2, a3, v3 + v8, *(void **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1004D8600()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for ActivityRingEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release(*(_QWORD *)(v8 + v1[5]));
  swift_release(*(_QWORD *)(v8 + v1[6]));
  swift_release(*(_QWORD *)(v8 + v1[7]));
  swift_release(*(_QWORD *)(v8 + v1[8]));
  swift_release(*(_QWORD *)(v8 + v1[9]));
  swift_release(*(_QWORD *)(v8 + v1[10]));

  swift_release(*(_QWORD *)(v8 + v1[12]));
  v10 = v8 + v1[13];
  v11 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  return swift_deallocObject(v0, v7 + 8, v5);
}

Swift::Int sub_1004D872C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ActivityRingEntity(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1004D5F9C(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

unint64_t sub_1004D8778()
{
  unint64_t result;

  result = qword_100837680;
  if (!qword_100837680)
  {
    result = swift_getWitnessTable(&unk_100641648, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100837680);
  }
  return result;
}

void sub_1004D87BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a5;
  v31 = a6;
  v32 = a4;
  v33 = a3;
  v34 = a2;
  v35 = a1;
  v6 = sub_100047110(&qword_100822C50);
  __chkstk_darwin(v6);
  v29 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  v11 = sub_100047110(&qword_100821E28);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  v17 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100821E60);
  LocalizedStringResource.init(stringLiteral:)(0x4520657669746341, 0xED0000796772656ELL);
  v20 = EntityProperty<>.init(title:)(v19);
  sub_100047110(&qword_100822C58);
  swift_retain(v20);
  LocalizedStringResource.init(stringLiteral:)(0x6D69542065766F4DLL, 0xE900000000000065);
  v21 = EntityProperty<>.init(title:)(v19);
  swift_retain(v21);
  LocalizedStringResource.init(stringLiteral:)(0x6573696372657845, 0xED0000656D695420);
  v22 = EntityProperty<>.init(title:)(v19);
  swift_retain(v22);
  LocalizedStringResource.init(stringLiteral:)(0x6F4820646E617453, 0xEB00000000737275);
  v23 = EntityProperty<>.init(title:)(v19);
  swift_retain(v23);
  LocalizedStringResource.init(stringLiteral:)(0x756F48206C6C6F52, 0xEA00000000007372);
  v24 = EntityProperty<>.init(title:)(v19);
  sub_100021CC0(v35, (uint64_t)v16, &qword_100821E28);
  sub_100021CC0((uint64_t)v16, (uint64_t)v13, &qword_100821E28);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  EntityProperty.wrappedValue.setter(v13);
  sub_10001BE90((uint64_t)v16, &qword_100821E28);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  sub_100021CC0(v34, (uint64_t)v10, &qword_100822C50);
  v25 = v29;
  sub_100021CC0((uint64_t)v10, v29, &qword_100822C50);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  EntityProperty.wrappedValue.setter(v25);
  sub_10001BE90((uint64_t)v10, &qword_100822C50);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  sub_100021CC0(v33, (uint64_t)v10, &qword_100822C50);
  sub_100021CC0((uint64_t)v10, v25, &qword_100822C50);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  EntityProperty.wrappedValue.setter(v25);
  sub_10001BE90((uint64_t)v10, &qword_100822C50);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  sub_100021CC0(v32, (uint64_t)v10, &qword_100822C50);
  sub_100021CC0((uint64_t)v10, v25, &qword_100822C50);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  EntityProperty.wrappedValue.setter(v25);
  sub_10001BE90((uint64_t)v10, &qword_100822C50);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  v26 = v30;
  sub_100021CC0(v30, (uint64_t)v10, &qword_100822C50);
  sub_100021CC0((uint64_t)v10, v25, &qword_100822C50);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  EntityProperty.wrappedValue.setter(v25);
  sub_10001BE90((uint64_t)v10, &qword_100822C50);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  sub_10001BE90(v26, &qword_100822C50);
  sub_10001BE90(v32, &qword_100822C50);
  sub_10001BE90(v33, &qword_100822C50);
  sub_10001BE90(v34, &qword_100822C50);
  sub_10001BE90(v35, &qword_100821E28);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  v27 = v31;
  *v31 = v20;
  v27[1] = v21;
  v27[2] = v22;
  v27[3] = v23;
  v27[4] = v24;
}

uint64_t sub_1004D8D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100821E60);
  LocalizedStringResource.init(stringLiteral:)(0x4520657669746341, 0xED0000796772656ELL);
  v5 = EntityProperty<>.init(title:)(v4);
  sub_100047110(&qword_100822C58);
  LocalizedStringResource.init(stringLiteral:)(0x6D69542065766F4DLL, 0xE900000000000065);
  v6 = EntityProperty<>.init(title:)(v4);
  LocalizedStringResource.init(stringLiteral:)(0x6573696372657845, 0xED0000656D695420);
  v7 = EntityProperty<>.init(title:)(v4);
  LocalizedStringResource.init(stringLiteral:)(0x6F4820646E617453, 0xEB00000000737275);
  v8 = EntityProperty<>.init(title:)(v4);
  LocalizedStringResource.init(stringLiteral:)(0x756F48206C6C6F52, 0xEA00000000007372);
  result = EntityProperty<>.init(title:)(v4);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = result;
  return result;
}

void sub_1004D8EBC(_QWORD *a1@<X8>)
{
  sub_1004D83A8(a1);
}

id sub_1004D8ED0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  qword_1008376B0 = (uint64_t)result;
  return result;
}

char *sub_1004D8F14(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char *v24;
  id v25;
  objc_super v27;

  v9 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  if (qword_10081DF00 != -1)
    swift_once(&qword_10081DF00, sub_1004D8ED0);
  v13 = (void *)UILabel.withFont(_:)(qword_1008376B0);

  objc_msgSend(v13, "setTextAlignment:", 1);
  objc_msgSend(v13, "setLineBreakMode:", 0);
  v14 = UIView.forAutoLayout()(objc_msgSend(v13, "setNumberOfLines:", 2));

  *(_QWORD *)&v11[v9] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = UIView.forAutoLayout()(v16);

  *(_QWORD *)&v11[v15] = v17;
  v18 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v20 = UIView.forAutoLayout()(v19);

  *(_QWORD *)&v11[v18] = v20;
  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  v21 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v22 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  v23 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView];
  v24 = v21;
  v25 = objc_msgSend(v23, "layer");
  objc_msgSend(v25, "setMasksToBounds:", 1);

  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v21[v22]);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView]);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel]);
  sub_1004D91A8();

  return v24;
}

void sub_1004D91A8()
{
  char *v0;
  id v1;
  id v2;
  char v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  Class isa;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if ((v3 & 1) != 0)
    v4 = 16.0;
  else
    v4 = 8.0;
  if ((v3 & 1) != 0)
    v5 = 128.0;
  else
    v5 = 64.0;
  if ((v3 & 1) != 0)
    v6 = 20.0;
  else
    v6 = 10.0;
  v7 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView];
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setCornerRadius:", v5 * 0.5);

  v61 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100047110((uint64_t *)&unk_100828340);
  v10 = swift_allocObject(v9, 144, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100626C20;
  v11 = objc_msgSend(v7, "topAnchor");
  v12 = objc_msgSend(v0, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, v6);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v7, "trailingAnchor");
  v15 = objc_msgSend(v0, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, -v6);

  *(_QWORD *)(v10 + 40) = v16;
  v17 = objc_msgSend(v7, "leadingAnchor");
  v18 = objc_msgSend(v0, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, v6);

  *(_QWORD *)(v10 + 48) = v19;
  v20 = objc_msgSend(v7, "widthAnchor");
  v21 = objc_msgSend(v7, "heightAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v10 + 56) = v22;
  v23 = objc_msgSend(v7, "widthAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", v5);

  *(_QWORD *)(v10 + 64) = v24;
  v25 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView];
  v26 = objc_msgSend(v25, "topAnchor");
  v27 = objc_msgSend(v0, "topAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, v6);

  *(_QWORD *)(v10 + 72) = v28;
  v29 = objc_msgSend(v25, "trailingAnchor");
  v30 = objc_msgSend(v0, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, -v6);

  *(_QWORD *)(v10 + 80) = v31;
  v32 = objc_msgSend(v25, "leadingAnchor");
  v33 = objc_msgSend(v0, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, v6);

  *(_QWORD *)(v10 + 88) = v34;
  v35 = objc_msgSend(v25, "widthAnchor");
  v36 = objc_msgSend(v25, "heightAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v10 + 96) = v37;
  v38 = objc_msgSend(v25, "widthAnchor");
  v39 = objc_msgSend(v38, "constraintEqualToConstant:", v5);

  *(_QWORD *)(v10 + 104) = v39;
  v40 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel];
  v41 = objc_msgSend(v40, "topAnchor");
  v42 = objc_msgSend(v7, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, v4);

  *(_QWORD *)(v10 + 112) = v43;
  v44 = objc_msgSend(v40, "trailingAnchor");
  v45 = objc_msgSend(v0, "trailingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, -v6);

  *(_QWORD *)(v10 + 120) = v46;
  v47 = objc_msgSend(v40, "leadingAnchor");
  v48 = objc_msgSend(v0, "leadingAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, v6);

  *(_QWORD *)(v10 + 128) = v49;
  v50 = objc_msgSend(v40, "bottomAnchor");
  v51 = objc_msgSend(v0, "bottomAnchor");
  v52 = objc_msgSend(v50, "constraintLessThanOrEqualToAnchor:constant:", v51, -v6);

  *(_QWORD *)(v10 + 136) = v52;
  specialized Array._endMutation()(v53);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v54, v55, v56, v57, v58, v59, v60);
  objc_msgSend(v61, "activateConstraints:", isa);

}

void sub_1004D9864(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  NSString *v11;
  NSString *v12;
  Class isa;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  void *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  id v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  char **v37;
  id v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  NSString v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  id v55;
  Class v56;
  id v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  id v65;
  Class v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  double v76;
  id v77;
  void *v78;
  id v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;

  v2 = v1;
  v79 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v4 = objc_msgSend(a1, "contact");
  if (!v4)
    goto LABEL_12;
  v5 = v4;
  v6 = objc_msgSend(v4, "linkedContactStoreIdentifier");
  if (!v6)
  {

LABEL_12:
    return;
  }
  v7 = v6;
  v8 = sub_100047110((uint64_t *)&unk_100828340);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100624C90;
  *(_QWORD *)(v9 + 32) = CNContactThumbnailImageDataKey;
  *(_QWORD *)(v9 + 40) = CNContactGivenNameKey;
  *(_QWORD *)(v9 + 48) = CNContactNicknameKey;
  v80 = (CHWorkoutDetailHeartRateTableViewCell *)v9;
  specialized Array._endMutation()(v9);
  v10 = CNContactThumbnailImageDataKey;
  v11 = CNContactGivenNameKey;
  v12 = CNContactNicknameKey;
  sub_100047110((uint64_t *)&unk_100828950);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v80, v14, v15, v16, v17, v18, v19, v20);
  v80 = 0;
  v21 = objc_msgSend(v79, "unifiedContactWithIdentifier:keysToFetch:error:", v7, isa, &v80);

  v22 = v80;
  if (v21)
  {
    v23 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel);
    v24 = v80;
    v25 = objc_msgSend(v21, "nickname");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
    v36 = ((unint64_t)v28 >> 56) & 0xF;
    if (((unint64_t)v28 & 0x2000000000000000) == 0)
      v36 = v26 & 0xFFFFFFFFFFFFLL;
    if (v36)
      v37 = &selRef_nickname;
    else
      v37 = &selRef_givenName;
    v38 = objc_msgSend(v21, *v37);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40, v42, v43, v44, v45, v46, v47, v48);
    objc_msgSend(v23, "setText:", v41);

    v49 = objc_msgSend(v21, "thumbnailImageData");
    if (v49)
    {
      v50 = v49;
      v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v53 = v52;

      v54 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView);
      v55 = objc_allocWithZone((Class)UIImage);
      sub_1001AE60C(v51, v53);
      v56 = Data._bridgeToObjectiveC()().super.isa;
      v57 = objc_msgSend(v55, "initWithData:", v56);
      sub_10004D9E4(v51, v53);

      objc_msgSend(v54, "setImage:", v57);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView), "setHidden:", 1);
      objc_msgSend(v54, "setHidden:", 0);

      sub_10004D9E4(v51, v53);
    }
    else
    {
      v61 = objc_msgSend((id)objc_opt_self(CNAvatarViewControllerSettings), "settingsWithContactStore:threeDTouchEnabled:", v79, 0);
      v62 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "initWithSettings:", v61);
      v63 = swift_allocObject(v8, 40, 7);
      *(_OWORD *)(v63 + 16) = xmmword_100623630;
      *(_QWORD *)(v63 + 32) = v21;
      v80 = (CHWorkoutDetailHeartRateTableViewCell *)v63;
      specialized Array._endMutation()(v63);
      v64 = v80;
      sub_10001E724(0, (unint64_t *)&qword_100828970, CNContact_ptr);
      v65 = v21;
      v66 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v64, v67, v68, v69, v70, v71, v72, v73);
      objc_msgSend(v62, "setContacts:", v66);

      v74 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v75 = objc_msgSend(v74, "preferredContentSizeCategory");

      LOBYTE(v74) = UIContentSizeCategory.isAccessibilityCategory.getter(v75);
      if ((v74 & 1) != 0)
        v76 = 128.0;
      else
        v76 = 64.0;
      v77 = objc_msgSend(v62, "view");
      objc_msgSend(v77, "setFrame:", 0.0, 0.0, v76, v76);
      v78 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView);
      objc_msgSend(v78, "addSubview:", v77);
      objc_msgSend(v78, "setHidden:", 0);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView), "setHidden:", 1);

    }
  }
  else
  {
    v58 = v80;
    v59 = _convertNSErrorToError(_:)(v22);

    swift_willThrow(v60);
    swift_errorRelease(v59);
  }
}

void sub_1004D9E10()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  objc_msgSendSuper2(&v10, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView], "setImage:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel], "setText:", 0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView];
  v2 = objc_msgSend(v1, "subviews");
  v3 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v4, 2);
    objc_msgSend(v1, "setHidden:", 0);
    return;
  }
  if (v4 < 0)
    v9 = v4;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v5)
    goto LABEL_13;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
    goto LABEL_13;
  }
  __break(1u);
}

id sub_1004D9FD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseAwardDetailFriendCell()
{
  return objc_opt_self(_TtC10FitnessApp31TrophyCaseAwardDetailFriendCell);
}

void sub_1004DA070()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_10081DF00 != -1)
    swift_once(&qword_10081DF00, sub_1004D8ED0);
  v4 = (void *)UILabel.withFont(_:)(qword_1008376B0);

  objc_msgSend(v4, "setTextAlignment:", 1);
  objc_msgSend(v4, "setLineBreakMode:", 0);
  v5 = UIView.forAutoLayout()(objc_msgSend(v4, "setNumberOfLines:", 2));

  *(_QWORD *)&v1[v2] = v5;
  v6 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = UIView.forAutoLayout()(v7);

  *(_QWORD *)&v1[v6] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = UIView.forAutoLayout()(v10);

  *(_QWORD *)&v1[v9] = v11;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseAwardDetailFriendCell.swift", 48, 2, 44, 0);
  __break(1u);
}

char *sub_1004DA20C(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t DataType;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  char v33;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a2[3];
    v11 = a2[4];
    *((_QWORD *)a1 + 3) = v10;
    *((_QWORD *)a1 + 4) = v11;
    v13 = a2[5];
    v12 = a2[6];
    *((_QWORD *)a1 + 5) = v13;
    *((_QWORD *)a1 + 6) = v12;
    v36 = a2[7];
    v37 = v12;
    v14 = a3[12];
    v38 = (uint64_t)a2 + v14;
    v39 = &a1[v14];
    *((_QWORD *)a1 + 7) = v36;
    DataType = type metadata accessor for TrainingLoadDataType(0);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 16);
    v16 = v4;
    v17 = v8;
    v18 = v9;
    v19 = v10;
    v20 = v11;
    v21 = v13;
    swift_retain(v37);
    v22 = v36;
    v35(v39, v38, DataType);
    v23 = *(int *)(sub_100047110(&qword_1008376F8) + 28);
    v24 = *(_QWORD *)(v38 + v23);
    *(_QWORD *)&v39[v23] = v24;
    v25 = a3[13];
    v26 = a3[14];
    v27 = &v7[v25];
    v28 = (uint64_t)a2 + v25;
    *v27 = *(_BYTE *)v28;
    v29 = *(_QWORD *)(v28 + 8);
    *((_QWORD *)v27 + 1) = v29;
    v30 = &v7[v26];
    v31 = (uint64_t)a2 + v26;
    v32 = *(char **)((char *)a2 + v26);
    v33 = *(_BYTE *)(v31 + 8);
    swift_retain(v24);
    swift_retain(v29);
    sub_10010C5D0(v32, v33);
    *(_QWORD *)v30 = v32;
    v30[8] = v33;
  }
  return v7;
}

void sub_1004DA37C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t DataType;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 48));
  v4 = a1 + a2[12];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v4, DataType);
  v6 = sub_100047110(&qword_1008376F8);
  swift_release(*(_QWORD *)(v4 + *(int *)(v6 + 28)));
  swift_release(*(_QWORD *)(a1 + a2[13] + 8));
  sub_10010C5EC(*(id *)(a1 + a2[14]), *(_BYTE *)(a1 + a2[14] + 8));
}

_QWORD *sub_1004DA440(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DataType;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  void (*v32)(char *, uint64_t, uint64_t);
  void *v33;
  uint64_t v34;
  char *v35;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v7;
  v9 = *(void **)(a2 + 32);
  v10 = *(void **)(a2 + 40);
  a1[4] = v9;
  a1[5] = v10;
  v11 = *(_QWORD *)(a2 + 48);
  v12 = a3[12];
  v35 = (char *)a1 + v12;
  v33 = *(void **)(a2 + 56);
  v34 = a2 + v12;
  a1[6] = v11;
  a1[7] = v33;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 16);
  v14 = v5;
  v15 = v6;
  v16 = v8;
  v17 = v7;
  v18 = v9;
  v19 = v10;
  swift_retain(v11);
  v20 = v33;
  v32(v35, v34, DataType);
  v21 = *(int *)(sub_100047110(&qword_1008376F8) + 28);
  v22 = *(_QWORD *)(v34 + v21);
  *(_QWORD *)&v35[v21] = v22;
  v23 = a3[13];
  v24 = a3[14];
  v25 = (char *)a1 + v23;
  v26 = (char *)(a2 + v23);
  *v25 = *v26;
  v27 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v25 + 1) = v27;
  v28 = (char *)a1 + v24;
  v29 = a2 + v24;
  v30 = *(void **)(a2 + v24);
  LOBYTE(v11) = *(_BYTE *)(v29 + 8);
  swift_retain(v22);
  swift_retain(v27);
  sub_10010C5D0(v30, v11);
  *(_QWORD *)v28 = v30;
  v28[8] = v11;
  return a1;
}

uint64_t sub_1004DA580(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t DataType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  char v46;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 32);
  v19 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v18;
  v20 = v18;

  v21 = *(void **)(a2 + 40);
  v22 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v21;
  v23 = v21;

  v24 = *(_QWORD *)(a2 + 48);
  v25 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v24;
  swift_retain(v24);
  swift_release(v25);
  v26 = *(void **)(a1 + 56);
  v27 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v27;
  v28 = v27;

  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 24))(v30, v31, DataType);
  v33 = *(int *)(sub_100047110(&qword_1008376F8) + 28);
  v34 = *(_QWORD *)(v30 + v33);
  v35 = *(_QWORD *)(v31 + v33);
  *(_QWORD *)(v30 + v33) = v35;
  swift_retain(v35);
  swift_release(v34);
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  v39 = *(_QWORD *)(v37 + 8);
  v40 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v37 + 8) = v40;
  swift_retain(v40);
  swift_release(v39);
  v41 = a3[14];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(id *)v43;
  LOBYTE(a3) = *(_BYTE *)(v43 + 8);
  sub_10010C5D0(*(id *)v43, (char)a3);
  v45 = *(void **)v42;
  v46 = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = (_BYTE)a3;
  sub_10010C5EC(v45, v46);
  return a1;
}

_OWORD *sub_1004DA710(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t DataType;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[12];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 32))(v9, v10, DataType);
  v12 = sub_100047110(&qword_1008376F8);
  *(_QWORD *)&v9[*(int *)(v12 + 28)] = *(_QWORD *)&v10[*(int *)(v12 + 28)];
  v13 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

uint64_t sub_1004DA7C0(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t DataType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char v29;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = a2[5];

  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_release(v12);
  v13 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = a2[7];

  v14 = a3[12];
  v15 = a1 + v14;
  v16 = (char *)a2 + v14;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 40))(v15, v16, DataType);
  v18 = *(int *)(sub_100047110(&qword_1008376F8) + 28);
  v19 = *(_QWORD *)(v15 + v18);
  *(_QWORD *)(v15 + v18) = *(_QWORD *)&v16[v18];
  swift_release(v19);
  v20 = a3[13];
  v21 = a1 + v20;
  v22 = (char *)a2 + v20;
  *(_BYTE *)v21 = *v22;
  v23 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
  swift_release(v23);
  v24 = a3[14];
  v25 = a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  LOBYTE(v26) = v26[8];
  v28 = *(void **)v25;
  v29 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = (_BYTE)v26;
  sub_10010C5EC(v28, v29);
  return a1;
}

uint64_t sub_1004DA910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004DA91C);
}

uint64_t sub_1004DA91C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_1008376F8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 48)], a2, v8);
  }
}

uint64_t sub_1004DA99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004DA9A8);
}

char *sub_1004DA9A8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_1008376F8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LoadDetailsView(uint64_t a1)
{
  uint64_t result;

  result = qword_100837758;
  if (!qword_100837758)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadDetailsView);
  return result;
}

void sub_1004DAA5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = "\b";
  sub_1004DAB08(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = &unk_100641938;
    v4[10] = &unk_100641950;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
  }
}

void sub_1004DAB08(uint64_t a1)
{
  uint64_t DataType;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100837768)
  {
    DataType = type metadata accessor for TrainingLoadDataType(255);
    v3 = type metadata accessor for State(a1, DataType);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100837768);
  }
}

uint64_t sub_1004DAB5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9BC0, 1);
}

void sub_1004DAB6C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006419B8);
  v7 = v3;
  v5 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_WORD *)(v3 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter + 8);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter);
  *(_WORD *)(a2 + 8) = v6;
}

double sub_1004DAC0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  __int16 v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_WORD *)a1 + 4);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006419B8);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_1004DDFF8, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004DACB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, unsigned __int8 a11)
{
  uint64_t DataType;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *DetailsView;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  _QWORD v37[2];

  v33 = a7;
  v34 = a8;
  v32 = a6;
  v35 = a11;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v18 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v21 = v32;
  a9[4] = a5;
  a9[5] = v21;
  v22 = v34;
  a9[6] = v33;
  a9[7] = v22;
  DetailsView = (int *)type metadata accessor for LoadDetailsView(0);
  v24 = (_QWORD *)((char *)a9 + DetailsView[12]);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a10, DataType);
  State.init(wrappedValue:)(v24, v20, DataType);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a10, DataType);
  v25 = (char *)a9 + DetailsView[13];
  v36 = v35;
  State.init(wrappedValue:)(v37, &v36, &type metadata for Bool);
  v26 = v37[1];
  *v25 = v37[0];
  *((_QWORD *)v25 + 1) = v26;
  v27 = (char *)a9 + DetailsView[14];
  v28 = type metadata accessor for BalanceDataProvider(0);
  v29 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  result = Environment.init<A>(_:)(v28, v28, v29);
  *(_QWORD *)v27 = result;
  v27[8] = v31 & 1;
  return result;
}

uint64_t sub_1004DAE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DataType;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ViewModel;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  char v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  char *v46;
  char v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v73 = sub_100047110(&qword_100823530);
  __chkstk_darwin(v73);
  v72 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for Calendar.Identifier(0);
  v65 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v63 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Date(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v59 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for GregorianDayRange(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DayIndex(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v61 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v60 = (char *)&v56 - v12;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v14 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v56 = *(_QWORD *)(ViewModel - 8);
  v57 = ViewModel;
  __chkstk_darwin(ViewModel);
  v58 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = v0 + *(int *)(type metadata accessor for LoadDetailsView(0) + 56);
  v23 = *(id *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_10010C5D0(*(id *)v22, v24);
  v25 = (char *)sub_1003F70B8(v23, v24);
  v26 = v24;
  v27 = v9;
  sub_10010C5EC(v23, v26);
  v28 = *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v28);

  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v16);
  v29 = swift_release(v28);
  v30 = *(void (**)(char *, uint64_t, __n128))(v14 + 8);
  v31 = v8;
  v30(v16, DataType, v29);
  type metadata accessor for TrainingLoadViewModelProvider(0);
  v32 = v59;
  static Date.now.getter(v33);
  v34 = v65;
  v35 = v63;
  v36 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v63, enum case for Calendar.Identifier.gregorian(_:), v68);
  v37 = v62;
  Calendar.init(identifier:)(v35);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v32, 28, v37);
  v38 = v37;
  v39 = v56;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v71);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v32, v69);
  v41 = (uint64_t)v72;
  GregorianDayRange.dayIndexRange.getter(v40);
  v42 = v61;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v66);
  v43 = v41 + *(int *)(v73 + 36);
  v73 = v27;
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v45 = v60;
  v44(v60, v43, v31);
  sub_10001BE90(v41, &qword_100823530);
  v46 = v45;
  v47 = TrainingLoadViewModel.isPending(onDay:)(v45);
  v48 = v58;
  LOBYTE(v41) = v47;
  v49 = v57;
  (*(void (**)(char *, char *))(v39 + 16))(v58, v21);
  v50 = v46;
  v44(v42, (uint64_t)v46, v31);
  if ((v41 & 1) != 0)
  {
    v51 = 0;
    v52 = v48;
  }
  else
  {
    v52 = v48;
    v51 = TrainingLoadViewModel.isNoData(onDay:)(v42) ^ 1;
  }
  v53 = *(void (**)(char *, uint64_t))(v73 + 8);
  v53(v42, v31);
  v54 = *(void (**)(char *, uint64_t))(v39 + 8);
  v54(v52, v49);
  v53(v50, v31);
  v54(v21, v49);
  return v51 & 1;
}

uint64_t sub_1004DB2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t DataType;
  uint64_t v4;
  uint64_t v5;
  uint64_t DetailsView;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t DetailsStackedChartView;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  NSString v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;

  v2 = v1;
  v81 = a1;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v4 = *(_QWORD *)(DataType - 8);
  v77 = DataType;
  v78 = v4;
  __chkstk_darwin(DataType);
  v74 = (uint64_t *)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  DetailsView = type metadata accessor for LoadDetailsView(0);
  v7 = *(_QWORD *)(DetailsView - 8);
  v8 = DetailsView;
  v71 = DetailsView;
  v9 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(DetailsView);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100047110(&qword_1008377C0);
  __chkstk_darwin(v72);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008377C8);
  v14 = *(_QWORD *)(v13 - 8);
  v75 = v13;
  v76 = v14;
  __chkstk_darwin(v13);
  v82 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_1008377D0);
  v17 = *(_QWORD *)(v16 - 8);
  v79 = v16;
  v80 = v17;
  __chkstk_darwin(v16);
  v73 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DB7B0(v1, (uint64_t)v12);
  v19 = v1 + *(int *)(v8 + 52);
  v20 = *(_BYTE *)v19;
  v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(v19 + 8);
  LOBYTE(v87) = v20;
  v88 = v21;
  sub_100047110(&qword_100820D80);
  State.projectedValue.getter(&v83);
  v22 = v83;
  v23 = v84;
  v24 = v85;
  v68 = v10;
  sub_10004F8C8(v2, (uint64_t)v10, type metadata accessor for LoadDetailsView);
  v25 = *(unsigned __int8 *)(v7 + 80);
  v26 = (v25 + 16) & ~v25;
  v69 = v25 | 7;
  v70 = v26 + v9;
  v27 = swift_allocObject(&unk_1007A4B60, v26 + v9, v25 | 7);
  sub_1004DD850((uint64_t)v10, v27 + v26);
  DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  v67 = DetailsStackedChartView;
  v29 = sub_1004DD8D0();
  v30 = sub_1000083D8(&qword_100837850, type metadata accessor for LoadDetailsStackedChartView, (uint64_t)&unk_10063D780);
  v65 = DetailsStackedChartView;
  v31 = v72;
  View.sheet<A>(isPresented:onDismiss:content:)(v22, v23, v24, 0, 0, sub_1004DD894, v27, v72, v65, v29, v30);
  swift_release(v23);
  swift_release(v27);
  swift_release(v22);
  sub_10001BE90((uint64_t)v12, &qword_1008377C0);
  v32 = sub_100047110(&qword_1008376F8);
  v33 = v74;
  State.wrappedValue.getter(v74, v32);
  v34 = (uint64_t)v68;
  sub_10004F8C8(v2, (uint64_t)v68, type metadata accessor for LoadDetailsView);
  v35 = swift_allocObject(&unk_1007A4B88, v70, v69);
  sub_1004DD850(v34, v35 + v26);
  v83 = v31;
  v84 = v67;
  v85 = v29;
  v86 = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v37 = sub_1000083D8(&qword_100837858, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  v38 = v73;
  v39 = v33;
  v40 = v33;
  v41 = v75;
  v42 = v77;
  v43 = v82;
  View.onChange<A>(of:initial:_:)(v39, 0, sub_1004DDBA8, v35, v75, v77, OpaqueTypeConformance2, v37);
  v44 = swift_release(v35);
  v45 = v40;
  v46 = v42;
  (*(void (**)(_QWORD *, uint64_t, __n128))(v78 + 8))(v45, v42, v44);
  v47 = v41;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v41);
  v48 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v48, "localizedStringForKey:value:table:", v49, 0, 0);

  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  v87 = v51;
  v88 = v53;
  v83 = v47;
  v84 = v46;
  v85 = OpaqueTypeConformance2;
  v86 = v37;
  v54 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v55 = sub_100038CA0();
  v56 = v79;
  View.navigationTitle<A>(_:)(&v87, v79, &type metadata for String, v54, v55);
  swift_bridgeObjectRelease(v53, v57, v58, v59, v60, v61, v62, v63);
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v38, v56);
}

uint64_t sub_1004DB7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t DetailsView;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  char *v27;
  uint64_t v28;
  char ViewModel;
  __n128 v30;
  char *v31;
  id v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;

  v101 = a2;
  v100 = type metadata accessor for PlainListStyle(0);
  v95 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v94 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100837860);
  __chkstk_darwin(v4);
  v92 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100047110(&qword_100837808);
  v6 = __chkstk_darwin(v83);
  v90 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ListSectionSpacing(0, v6);
  v88 = *(_QWORD *)(v8 - 8);
  v89 = v8;
  __chkstk_darwin(v8);
  v87 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100047110(&qword_100837828);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100047110(&qword_100837818);
  __chkstk_darwin(v79);
  v84 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100047110(&qword_1008377F0);
  __chkstk_darwin(v102);
  v86 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100047110(&qword_100837868);
  v93 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v85 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v91 = (char *)&v78 - v15;
  v97 = sub_100047110(&qword_100837870);
  __chkstk_darwin(v97);
  v96 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100047110(&qword_10081EE68);
  v17 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsView = type metadata accessor for LoadDetailsView(0);
  __chkstk_darwin(DetailsView);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1 + *(int *)(v23 + 56);
  v25 = *(id *)v24;
  v26 = *(_BYTE *)(v24 + 8);
  sub_10010C5D0(*(id *)v24, v26);
  v27 = (char *)sub_1003F70B8(v25, v26);
  sub_10010C5EC(v25, v26);
  v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v28);

  ViewModel = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release(v28);
  sub_10004F8C8(a1, (uint64_t)v22, type metadata accessor for LoadDetailsView);
  if ((ViewModel & 1) != 0)
  {
    sub_100011F54((uint64_t)v22, type metadata accessor for LoadDetailsView);
LABEL_4:
    ProgressView<>.init<>()(v30);
    v37 = v96;
    v38 = v98;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v96, v19, v98);
    swift_storeEnumTagMultiPayload(v37, v97, 0);
    v39 = sub_100028384((unint64_t *)&qword_10081EE60, &qword_10081EE68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v40 = sub_1004DDA00();
    v103 = v102;
    v104 = v100;
    v105 = v40;
    v106 = &protocol witness table for PlainListStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v37, v38, v99, v39, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v38);
  }
  v31 = &v22[*(int *)(DetailsView + 56)];
  v32 = *(id *)v31;
  v33 = v31[8];
  sub_10010C5D0(*(id *)v31, v33);
  v34 = (char *)sub_1003F70B8(v32, v33);
  sub_10010C5EC(v32, v33);
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v35);

  LOBYTE(v32) = dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter();
  swift_release(v35);
  v36 = sub_100011F54((uint64_t)v22, type metadata accessor for LoadDetailsView);
  if ((v32 & 1) != 0)
    goto LABEL_4;
  __chkstk_darwin(v36);
  *(&v78 - 2) = a1;
  v43 = sub_100047110(&qword_100837878);
  v44 = sub_100028384(&qword_100837880, &qword_100837878, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v45 = v80;
  v46 = List<>.init(content:)(sub_1004DDC18, &v78 - 4, v43, v44);
  v47 = static Color.clear.getter(v46);
  v103 = v47;
  swift_retain(v47);
  v48 = AnyView.init<A>(_:)(&v103, &type metadata for Color, &protocol witness table for Color);
  v49 = v81;
  v50 = (uint64_t)v84;
  v51 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v84, v45, v82);
  v52 = swift_release(v47);
  *(_QWORD *)(v50 + *(int *)(v79 + 36)) = v48;
  v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v45, v51, v52);
  v54 = v87;
  static ListSectionSpacing.custom(_:)(v53, 25.0);
  v56 = v89;
  v55 = (uint64_t)v90;
  v57 = &v90[*(int *)(v83 + 36)];
  v58 = v88;
  v59 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v59(v57, v54, v89);
  v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56);
  v60(v57, 0, 1, v56);
  sub_100021CC0(v50, v55, &qword_100837818);
  KeyPath = swift_getKeyPath(&unk_1006419E0);
  v62 = (uint64_t)v92;
  v59(v92, v54, v56);
  v60((char *)v62, 0, 1, v56);
  v63 = (uint64_t)v86;
  v64 = (uint64_t *)&v86[*(int *)(v102 + 36)];
  v65 = sub_100047110(&qword_100837848);
  sub_100021CC0(v62, (uint64_t)v64 + *(int *)(v65 + 28), &qword_100837860);
  *v64 = KeyPath;
  sub_100021CC0(v55, v63, &qword_100837808);
  sub_10001BE90(v62, &qword_100837860);
  sub_10001BE90(v55, &qword_100837808);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v56);
  v66 = sub_10001BE90(v50, &qword_100837818);
  v67 = v94;
  PlainListStyle.init()(v66);
  v68 = sub_1004DDA00();
  v69 = v85;
  v70 = v102;
  v71 = v100;
  View.listStyle<A>(_:)(v67, v102, v100, v68, &protocol witness table for PlainListStyle);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v71);
  sub_10001BE90(v63, &qword_1008377F0);
  v72 = v93;
  v73 = v91;
  v74 = v99;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v91, v69, v99);
  v75 = v96;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v96, v73, v74);
  swift_storeEnumTagMultiPayload(v75, v97, 1);
  v76 = sub_100028384((unint64_t *)&qword_10081EE60, &qword_10081EE68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
  v103 = v70;
  v104 = v71;
  v105 = v68;
  v106 = &protocol witness table for PlainListStyle;
  v77 = swift_getOpaqueTypeConformance2(&v103, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  _ConditionalContent<>.init(storage:)(v75, v98, v74, v76, v77);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v73, v74);
}

uint64_t sub_1004DBFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v58[2];
  void *v59;
  char *v60;
  uint64_t ItemsList;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v63 = a2;
  ItemsList = type metadata accessor for LoadItemsList(0);
  __chkstk_darwin(ItemsList);
  v62 = (uint64_t)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (_QWORD **)((char *)v58 - v5);
  v7 = sub_100047110(&qword_100837888);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100837890);
  __chkstk_darwin(v11);
  v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v64 = (uint64_t)v58 - v15;
  v66 = a1;
  v16 = sub_100047110(&qword_100837898);
  v17 = sub_100007050(&qword_1008378A0);
  v18 = sub_100007050(&qword_1008378A8);
  v19 = sub_1004DDCCC();
  v67 = v18;
  v68 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v67 = v17;
  v68 = OpaqueTypeConformance2;
  v21 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
  v22 = Section<>.init(content:)(sub_1004DDCC4, v65, v16, v21);
  LOBYTE(v17) = static Edge.Set.top.getter(v22);
  v23 = EdgeInsets.init(_all:)(20.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  v30 = &v13[*(int *)(v11 + 36)];
  v60 = v13;
  *v30 = v17;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100045AD4((uint64_t)v13, v64, &qword_100837890);
  v31 = *(void **)a1;
  v32 = *(void **)(a1 + 8);
  v33 = *(void **)(a1 + 16);
  v34 = *(void **)(a1 + 24);
  v36 = *(void **)(a1 + 40);
  v35 = *(_QWORD *)(a1 + 48);
  v59 = *(void **)(a1 + 56);
  v37 = v59;
  v58[1] = (_QWORD *)(a1 + *(int *)(type metadata accessor for LoadDetailsView(0) + 48));
  v38 = ItemsList;
  v58[0] = (_QWORD *)((char *)v6 + *(int *)(ItemsList + 44));
  v39 = v37;
  v40 = v31;
  v41 = v32;
  v42 = v33;
  v43 = v34;
  v44 = v36;
  swift_retain(v35);
  v45 = sub_100047110(&qword_1008376F8);
  State.wrappedValue.getter(v58[0], v45);
  v46 = *(void **)(a1 + 32);
  *v6 = v40;
  v6[1] = v41;
  v6[2] = v42;
  v6[3] = v43;
  v6[4] = v44;
  v6[5] = v35;
  v6[6] = v59;
  *(_QWORD *)((char *)v6 + *(int *)(v38 + 48)) = v46;
  v47 = (char *)v6 + *(int *)(v38 + 52);
  v48 = type metadata accessor for BalanceDataProvider(0);
  v49 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  v50 = v46;
  *(_QWORD *)v47 = Environment.init<A>(_:)(v48, v48, v49);
  v47[8] = v51 & 1;
  v52 = v64;
  v53 = (uint64_t)v60;
  sub_100021CC0(v64, (uint64_t)v60, &qword_100837890);
  v54 = v62;
  sub_10004F8C8((uint64_t)v6, v62, type metadata accessor for LoadItemsList);
  v55 = v63;
  sub_100021CC0(v53, v63, &qword_100837890);
  v56 = sub_100047110(&qword_1008378C8);
  sub_10004F8C8(v54, v55 + *(int *)(v56 + 48), type metadata accessor for LoadItemsList);
  sub_100011F54((uint64_t)v6, type metadata accessor for LoadItemsList);
  sub_10001BE90(v52, &qword_100837890);
  sub_100011F54(v54, type metadata accessor for LoadItemsList);
  return sub_10001BE90(v53, &qword_100837890);
}

uint64_t sub_1004DC3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DetailsView;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];

  v42 = a2;
  DetailsView = type metadata accessor for LoadDetailsView(0);
  v40 = *(_QWORD *)(DetailsView - 8);
  v4 = *(_QWORD *)(v40 + 64);
  __chkstk_darwin(DetailsView);
  v39 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v5);
  v7 = (_OWORD *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100047110(&qword_1008378C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008378A8);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008378A0);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v17);
  *((_QWORD *)v10 + 1) = 0x4000000000000000;
  v10[16] = 0;
  v18 = sub_100047110(&qword_1008378D0);
  sub_1004DC6D0(a1, (uint64_t)&v10[*(int *)(v18 + 44)], v19);
  v20 = (char *)v7 + *(int *)(v5 + 20);
  v21 = enum case for RoundedCornerStyle.continuous(_:);
  v22 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  __asm { FMOV            V0.2D, #14.0 }
  *v7 = _Q0;
  v28 = (uint64_t)&v13[*(int *)(v11 + 36)];
  sub_10004F8C8((uint64_t)v7, v28, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v28 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v10, (uint64_t)v13, &qword_1008378C0);
  sub_100011F54((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10001BE90((uint64_t)v10, &qword_1008378C0);
  v29 = a1;
  v30 = v39;
  sub_10004F8C8(v29, v39, type metadata accessor for LoadDetailsView);
  v31 = *(unsigned __int8 *)(v40 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = swift_allocObject(&unk_1007A4BB0, v32 + v4, v31 | 7);
  sub_1004DD850(v30, v33 + v32);
  v34 = sub_1004DDCCC();
  View.onTapGesture(count:perform:)(1, sub_1004DDE6C, v33, v11, v34);
  swift_release(v33);
  v35 = sub_10001BE90((uint64_t)v13, &qword_1008378A8);
  v36 = static VerticalEdge.Set.all.getter(v35);
  v43[0] = v11;
  v43[1] = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v43, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  View.listRowSeparator(_:edges:)(2, v36, v14, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v16, v14);
}

uint64_t sub_1004DC6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t DataType;
  uint64_t v7;
  uint64_t ViewModel;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  __n128 v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  id v55;
  char v56;
  id v57;
  char *v58;
  uint64_t v59;
  void *v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v85 = a2;
  v4 = type metadata accessor for OvernightMetricsViewModel(0, a3);
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  __chkstk_darwin(v4);
  v81 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v79 = *(_QWORD *)(DataType - 8);
  v80 = DataType;
  __chkstk_darwin(DataType);
  v74 = (uint64_t *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v77 = *(_QWORD *)(ViewModel - 8);
  v78 = ViewModel;
  __chkstk_darwin(ViewModel);
  v73 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008378D8);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  __chkstk_darwin(v10);
  v72 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008378E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_1008378E8);
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_1008378F0);
  __chkstk_darwin(v18);
  v82 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v69 - v24;
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v26);
  *((_QWORD *)v14 + 1) = 0x4028000000000000;
  v14[16] = 0;
  v27 = sub_100047110(&qword_1008378F8);
  v28 = sub_1004DCC04(a1, (uint64_t)&v14[*(int *)(v27 + 44)]);
  v29 = static Edge.Set.vertical.getter(v28);
  v30 = EdgeInsets.init(_all:)(16.0);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_100021CC0((uint64_t)v14, (uint64_t)v17, &qword_1008378E0);
  v37 = &v17[*(int *)(v15 + 36)];
  *v37 = v29;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  v38 = sub_10001BE90((uint64_t)v14, &qword_1008378E0);
  v39 = static Alignment.center.getter(v38);
  v70 = v40;
  v71 = v39;
  v41 = &v22[*(int *)(v18 + 36)];
  v42 = a1 + *(int *)(type metadata accessor for LoadDetailsView(0) + 56);
  v43 = *(id *)v42;
  LOBYTE(v14) = *(_BYTE *)(v42 + 8);
  sub_10010C5D0(*(id *)v42, (char)v14);
  v44 = (char *)sub_1003F70B8(v43, (char)v14);
  v45 = v43;
  v46 = (uint64_t)v25;
  sub_10010C5EC(v45, (char)v14);
  v47 = *(_QWORD *)&v44[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v47);

  v48 = sub_100047110(&qword_1008376F8);
  v49 = v74;
  State.wrappedValue.getter(v74, v48);
  v50 = v73;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v49);
  v51 = swift_release(v47);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v79 + 8))(v49, v80, v51);
  v52 = v72;
  TrainingLoadViewModel.loadBandFlavoredGradientBackground(rotated:)(0);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v78);
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v41, v52, v76);
  v53 = (uint64_t *)&v41[*(int *)(sub_100047110(&qword_100837900) + 36)];
  v54 = v70;
  *v53 = v71;
  v53[1] = v54;
  sub_100045AD4((uint64_t)v17, (uint64_t)v22, &qword_1008378E8);
  sub_100045AD4((uint64_t)v22, v46, &qword_1008378F0);
  v55 = *(id *)v42;
  v56 = *(_BYTE *)(v42 + 8);
  sub_10010C5D0(*(id *)v42, v56);
  v57 = sub_1003F70B8(v55, v56);
  sub_10010C5EC(v55, v56);
  v58 = v81;
  v59 = dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  LOBYTE(v55) = OvernightMetricsViewModel.isWatchExperienceAvailable.getter(v59);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v84);

  if ((v55 & 1) != 0)
  {
    v62 = type metadata accessor for BalanceDataProvider(0);
    v63 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    v60 = (void *)Environment.init<A>(_:)(v62, v62, v63);
    v61 = v64 & 1;
  }
  else
  {
    v60 = 0;
    v61 = -1;
  }
  v65 = v82;
  sub_100021CC0(v46, v82, &qword_1008378F0);
  v66 = v85;
  sub_100021CC0(v65, v85, &qword_1008378F0);
  v67 = v66 + *(int *)(sub_100047110(&qword_100837908) + 48);
  *(_QWORD *)v67 = v60;
  *(_BYTE *)(v67 + 8) = v61;
  sub_1004DDE98(v60, v61);
  sub_10001BE90(v46, &qword_1008378F0);
  sub_1004DDEB0(v60, v61);
  return sub_10001BE90(v65, &qword_1008378F0);
}

uint64_t sub_1004DCC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t TypeScrollView;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char v35;
  id v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v57;
  void (*v58)(_QWORD *, uint64_t, __n128);
  uint64_t DataType;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t DetailsChartView;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t ViewModel;

  v80 = a2;
  v73 = type metadata accessor for Calendar.Identifier(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  __chkstk_darwin(v4);
  v68 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Date(0);
  v72 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for GregorianDayRange(0);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v66 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsChartView = type metadata accessor for LoadDetailsChartView(0);
  __chkstk_darwin(DetailsChartView);
  v77 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v67 = (char *)&v57 - v10;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v61 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v12 = (char **)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v60 = *(_QWORD *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  v57 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TypeScrollView = type metadata accessor for LoadTypeScrollView(0);
  __chkstk_darwin(TypeScrollView);
  v64 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - v17;
  v19 = *(int *)(type metadata accessor for LoadDetailsView(0) + 56);
  v63 = a1;
  v20 = a1 + v19;
  v21 = *(void **)(a1 + v19);
  v22 = *(_BYTE *)(v20 + 8);
  sub_10010C5D0(v21, v22);
  v23 = (char *)sub_1003F70B8(v21, v22);
  sub_10010C5EC(v21, v22);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v24);

  v25 = sub_100047110(&qword_1008376F8);
  State.wrappedValue.getter(v12, v25);
  v26 = v57;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v12);
  v27 = swift_release(v24);
  v58 = *(void (**)(_QWORD *, uint64_t, __n128))(v61 + 8);
  v28 = DataType;
  v58(v12, DataType, v27);
  v29 = *(int *)(TypeScrollView + 20);
  v30 = v18;
  v62 = v18;
  State.projectedValue.getter(&v18[v29]);
  v61 = *(_QWORD *)(v60 + 32);
  v31 = v18;
  v32 = v26;
  ((void (*)(char *, char *, uint64_t))v61)(v31, v26, ViewModel);
  v33 = &v30[*(int *)(TypeScrollView + 24)];
  v34 = type metadata accessor for BalanceDataProvider(0);
  v60 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  *(_QWORD *)v33 = Environment.init<A>(_:)(v34, v34, v60);
  v33[8] = v35 & 1;
  v36 = *(id *)v20;
  LOBYTE(v30) = *(_BYTE *)(v20 + 8);
  sub_10010C5D0(*(id *)v20, (char)v30);
  v37 = (char *)sub_1003F70B8(v36, (char)v30);
  sub_10010C5EC(v36, (char)v30);
  v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v38);

  State.wrappedValue.getter(v12, v25);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v12);
  v39 = swift_release(v38);
  v58(v12, v28, v39);
  type metadata accessor for TrainingLoadViewModelProvider(0);
  v40 = v65;
  static Date.now.getter(v41);
  v43 = v70;
  v42 = v71;
  v44 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, enum case for Calendar.Identifier.gregorian(_:), v73);
  v45 = v68;
  Calendar.init(identifier:)(v43);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  v46 = v66;
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v40, 28, v45);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v75);
  LOBYTE(v44) = sub_1004DAE40();
  v47 = (uint64_t)v67;
  ((void (*)(char *, char *, uint64_t))v61)(v67, v32, ViewModel);
  v48 = DetailsChartView;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v47 + *(int *)(DetailsChartView + 20), v46, v76);
  *(_BYTE *)(v47 + *(int *)(v48 + 24)) = v44 & 1;
  v49 = v47 + *(int *)(v48 + 28);
  *(_QWORD *)v49 = Environment.init<A>(_:)(v34, v34, v60);
  *(_BYTE *)(v49 + 8) = v50 & 1;
  v51 = (uint64_t)v62;
  v52 = v64;
  sub_10004F8C8((uint64_t)v62, v64, type metadata accessor for LoadTypeScrollView);
  v53 = v77;
  sub_10004F8C8(v47, v77, type metadata accessor for LoadDetailsChartView);
  v54 = v80;
  sub_10004F8C8(v52, v80, type metadata accessor for LoadTypeScrollView);
  v55 = sub_100047110(&qword_100837910);
  sub_10004F8C8(v53, v54 + *(int *)(v55 + 48), type metadata accessor for LoadDetailsChartView);
  sub_100011F54(v47, type metadata accessor for LoadDetailsChartView);
  sub_100011F54(v51, type metadata accessor for LoadTypeScrollView);
  sub_100011F54(v53, type metadata accessor for LoadDetailsChartView);
  return sub_100011F54(v52, type metadata accessor for LoadTypeScrollView);
}

double sub_1004DD220(uint64_t a1)
{
  double result;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[9];
  uint64_t v8;
  uint64_t v9;

  if ((sub_1004DAE40() & 1) != 0)
  {
    v3 = (char *)(a1 + *(int *)(type metadata accessor for LoadDetailsView(0) + 52));
    v4 = *v3;
    v5 = *((_QWORD *)v3 + 1);
    swift_retain(v5);
    v6 = sub_100047110(&qword_100820D80);
    State.wrappedValue.getter(&v9, v6);
    v7[1] = v4;
    v8 = v5;
    v7[0] = (v9 & 1) == 0;
    State.wrappedValue.setter(v7, v6);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_1004DD2C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = type metadata accessor for Calendar.Identifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar(0);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GregorianDayRange(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100834258);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for LoadDetailsView(0);
  sub_100047110(&qword_1008376F8);
  State.projectedValue.getter(v18);
  type metadata accessor for TrainingLoadViewModelProvider(0);
  static Date.now.getter(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Calendar.Identifier.gregorian(_:), v3);
  Calendar.init(identifier:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v12, 28, v9);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  v20 = *(void **)(a1 + 56);
  v21 = *(void **)(a1 + 32);
  v22 = v20;
  v23 = v21;
  return sub_10044F308((uint64_t)v18, (uint64_t)v15, v20, v21, v28);
}

void sub_1004DD4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DataType;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, __n128);
  int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  id v19;
  uint64_t KeyPath;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  double (*v24)();
  uint64_t v25;
  id v26;
  char v27;
  Swift::String v28;
  uint64_t v29;
  _BYTE v30[16];
  id v31;
  unint64_t v32;

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v6 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v9);
  v12 = (uint64_t *)&v30[-v11];
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13(&v30[-v11], a2, DataType, v10);
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v12, DataType);
  if (v14 == enum case for TrainingLoadDataType.workoutType(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v12, DataType);
    v15 = *v12;
    v16 = a3 + *(int *)(type metadata accessor for LoadDetailsView(0) + 56);
    v17 = *(id *)v16;
    v18 = *(_BYTE *)(v16 + 8);
    sub_10010C5D0(*(id *)v16, v18);
    v19 = sub_1003F70B8(v17, v18);
    sub_10010C5EC(v17, v18);
    KeyPath = swift_getKeyPath(&unk_1006419B8);
    __chkstk_darwin(KeyPath);
    v21 = &v30[-48];
    *(_QWORD *)&v30[-32] = v19;
    *(_QWORD *)&v30[-24] = v15;
    LOWORD(v29) = 258;
    v31 = v19;
    v22 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    v23 = (char *)&type metadata for () + 8;
    v24 = sub_1004DDBFC;
  }
  else
  {
    if (v14 == enum case for TrainingLoadDataType.allDay(_:))
      return;
    if (v14 != enum case for TrainingLoadDataType.workout(_:))
    {
      ((void (*)(_BYTE *, uint64_t, uint64_t))v13)(v8, a2, DataType);
      v31 = 0;
      v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(46);
      v28._object = (void *)0x80000001006A2420;
      v28._countAndFlagsBits = 0xD00000000000002CLL;
      String.append(_:)(v28);
      _print_unlocked<A, B>(_:_:)(v8, &v31, DataType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v31, v32, "FitnessApp/LoadDetailsView.swift", 32, 2, 120, 0);
      __break(1u);
      return;
    }
    v25 = a3 + *(int *)(type metadata accessor for LoadDetailsView(0) + 56);
    v26 = *(id *)v25;
    v27 = *(_BYTE *)(v25 + 8);
    sub_10010C5D0(*(id *)v25, v27);
    v19 = sub_1003F70B8(v26, v27);
    sub_10010C5EC(v26, v27);
    KeyPath = swift_getKeyPath(&unk_1006419B8);
    __chkstk_darwin(KeyPath);
    v21 = &v30[-48];
    *(_QWORD *)&v30[-32] = v19;
    *(_QWORD *)&v30[-24] = 0;
    LOWORD(v29) = 768;
    v31 = v19;
    v22 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    v23 = (char *)&type metadata for () + 8;
    v24 = sub_1004DDFF8;
  }
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v31, KeyPath, v24, v21, v23, v22);

  swift_release(KeyPath);
}

uint64_t sub_1004DD850(uint64_t a1, uint64_t a2)
{
  uint64_t DetailsView;

  DetailsView = type metadata accessor for LoadDetailsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DetailsView - 8) + 32))(a2, a1, DetailsView);
  return a2;
}

double sub_1004DD894@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsView(0) - 8) + 80);
  return sub_1004DD2C8(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_1004DD8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008377D8;
  if (!qword_1008377D8)
  {
    v1 = sub_100007050(&qword_1008377C0);
    sub_1004DD934();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008377D8);
  }
  return result;
}

unint64_t sub_1004DD934()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1008377E0;
  if (!qword_1008377E0)
  {
    v1 = sub_100007050(&qword_1008377E8);
    sub_100028384((unint64_t *)&qword_10081EE60, &qword_10081EE68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v2[0] = sub_100007050(&qword_1008377F0);
    v2[1] = type metadata accessor for PlainListStyle(255);
    v2[2] = sub_1004DDA00();
    v2[3] = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008377E0);
  }
  return result;
}

unint64_t sub_1004DDA00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008377F8;
  if (!qword_1008377F8)
  {
    v1 = sub_100007050(&qword_1008377F0);
    sub_1004DDA84();
    sub_100028384(&qword_100837840, &qword_100837848, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008377F8);
  }
  return result;
}

unint64_t sub_1004DDA84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837800;
  if (!qword_100837800)
  {
    v1 = sub_100007050(&qword_100837808);
    sub_1004DDB08();
    sub_100028384(&qword_100837830, &qword_100837838, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837800);
  }
  return result;
}

unint64_t sub_1004DDB08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837810;
  if (!qword_100837810)
  {
    v1 = sub_100007050(&qword_100837818);
    sub_100028384(&qword_100837820, &qword_100837828, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100028384(&qword_1008266D0, &qword_1008266B8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837810);
  }
  return result;
}

void sub_1004DDBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsView(0) - 8) + 80);
  sub_1004DD4F0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

double sub_1004DDBFC()
{
  uint64_t v0;

  return sub_1001724C4(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_WORD *)(v0 + 32));
}

uint64_t sub_1004DDC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004DBFDC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1004DDC20()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_1004DDC40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100047110(&qword_100837860);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a1, (uint64_t)v4, &qword_100837860);
  return EnvironmentValues.listSectionSpacing.setter(v4);
}

uint64_t sub_1004DDCC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004DC3B0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1004DDCCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008378B0;
  if (!qword_1008378B0)
  {
    v1 = sub_100007050(&qword_1008378A8);
    sub_100028384(&qword_1008378B8, &qword_1008378C0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008378B0);
  }
  return result;
}

uint64_t sub_1004DDD6C()
{
  uint64_t v0;
  int *DetailsView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DataType;
  uint64_t v10;

  DetailsView = (int *)type metadata accessor for LoadDetailsView(0);
  v2 = *((_QWORD *)DetailsView - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v7 + 48));
  v8 = v7 + DetailsView[12];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v8, DataType);
  v10 = sub_100047110(&qword_1008376F8);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  swift_release(*(_QWORD *)(v7 + DetailsView[13] + 8));
  sub_10010C5EC(*(id *)(v7 + DetailsView[14]), *(_BYTE *)(v7 + DetailsView[14] + 8));
  return swift_deallocObject(v0, v5, v6);
}

double sub_1004DDE6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadDetailsView(0) - 8) + 80);
  return sub_1004DD220(v0 + ((v1 + 16) & ~v1));
}

id sub_1004DDE98(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_10010C5D0(result, a2 & 1);
  return result;
}

void sub_1004DDEB0(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_10010C5EC(a1, a2 & 1);
}

uint64_t sub_1004DDEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t DataType;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  void *DetailsStackedChartView;
  unint64_t v10;
  uint64_t v11;

  v0 = sub_100007050(&qword_1008377D0);
  v1 = sub_100007050(&qword_1008377C8);
  DataType = type metadata accessor for TrainingLoadDataType(255);
  v8 = sub_100007050(&qword_1008377C0);
  DetailsStackedChartView = (void *)type metadata accessor for LoadDetailsStackedChartView(255);
  v10 = sub_1004DD8D0();
  v11 = sub_1000083D8(&qword_100837850, type metadata accessor for LoadDetailsStackedChartView, (uint64_t)&unk_10063D780);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v4 = sub_1000083D8(&qword_100837858, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t)&protocol conformance descriptor for TrainingLoadDataType);
  v8 = v1;
  DetailsStackedChartView = (void *)DataType;
  v10 = OpaqueTypeConformance2;
  v11 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v6 = sub_100038CA0();
  v8 = v0;
  DetailsStackedChartView = &type metadata for String;
  v10 = v5;
  v11 = v6;
  return swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
}

double sub_1004DDFF8()
{
  return sub_1004DDBFC();
}

double sub_1004DE00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v12 = swift_allocObject(&unk_1007A4C28, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  v13 = swift_allocObject(&unk_1007A4C50, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1004DE378;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A4C68;
  v14 = _Block_copy(aBlock);
  swift_retain(v12);
  static DispatchQoS.unspecified.getter(v15);
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_10002FAC0();
  v17 = sub_100047110(&qword_100828C80);
  v18 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v4, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = v24;
  swift_release(v12);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1004DE204()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004DE228(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  int v13;
  char v15[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
    *(_QWORD *)v7 = v10;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    v11 = v10;
    LOBYTE(v10) = _dispatchPreconditionTest(_:)(v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v10 & 1) != 0)
    {
      v12 = &v9[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      v13 = v9[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state + 8];
      sub_10035EC60(a2);
      if (v13 == 1)
      {
        sub_10035D018(a2);
        sub_100343FC8();
      }
      *(_QWORD *)v12 = a2;
      v12[8] = 0;

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1004DE354()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004DE378()
{
  uint64_t v0;

  sub_1004DE228(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t *assignWithCopy for Histogram1D(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for Histogram1D(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

_QWORD *sub_1004DE450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(char *, char *, uint64_t);
  _QWORD *result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  Swift::String v36;
  void *object;
  Swift::String v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  unint64_t v67;
  char *v68;

  v3 = v2;
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v68 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100047110(&qword_100837918);
  v11 = __chkstk_darwin(v60);
  v59 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v58 = (char *)&v46 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v57 = v14;
  if (v14)
  {
    v48 = v3;
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v47 = a1;
    v17 = a1 + v16;
    v53 = *(_QWORD *)(v9 + 72);
    v61 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v18 = (_BYTE *)(a2 + 48);
    v62 = _swiftEmptyArrayStorage;
    v19 = v49;
    v55 = v8;
    v56 = a2;
    v54 = v9;
    v61(v8, a1 + v16, v49);
    while (1)
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v52(v8, 0, 1, v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v19) == 1)
      {
        a1 = v47;
        goto LABEL_19;
      }
      v22 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
      result = (_QWORD *)v22(v68, v8, v19);
      v24 = *(_QWORD *)(a2 + 16);
      if (v15 == v24)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v68, v19);
        swift_bridgeObjectRelease(a2);
        a1 = v47;
        goto LABEL_20;
      }
      if (v15 >= v24)
        break;
      v63 = v17;
      v64 = v15;
      v26 = *((_QWORD *)v18 - 2);
      v25 = *((_QWORD *)v18 - 1);
      v27 = *v18;
      v28 = v60;
      v29 = (uint64_t)v58;
      v30 = &v58[*(int *)(v60 + 48)];
      v22(v58, v68, v19);
      *(_QWORD *)v30 = v26;
      *((_QWORD *)v30 + 1) = v25;
      v30[16] = v27;
      v31 = v59;
      sub_1000451F4(v29, v59);
      v32 = v31 + *(int *)(v28 + 48);
      if ((*(_BYTE *)(v32 + 16) & 1) != 0)
      {
        sub_10001BE90(v31, &qword_100837918);
        v8 = v55;
        a2 = v56;
        v9 = v54;
        v21 = v63;
        v20 = v64;
      }
      else
      {
        v34 = *(_QWORD *)v32;
        v33 = *(_QWORD *)(v32 + 8);
        v66 = 0;
        v67 = 0xE000000000000000;
        v35 = sub_1004DF4D4();
        v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v19, v35);
        object = v36._object;
        String.append(_:)(v36);
        swift_bridgeObjectRelease(object);
        v38._countAndFlagsBits = 2112032;
        v38._object = (void *)0xE300000000000000;
        String.append(_:)(v38);
        v65[0] = v34;
        v65[1] = v33;
        _print_unlocked<A, B>(_:_:)(v65, &v66, &type metadata for Aggregate, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v50 = v67;
        v51 = v66;
        sub_10001BE90(v31, &qword_100837918);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v62);
        v21 = v63;
        v20 = v64;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v62 = sub_10013F75C(0, v62[2] + 1, 1, v62);
        v8 = v55;
        a2 = v56;
        v41 = v62[2];
        v40 = v62[3];
        if (v41 >= v40 >> 1)
          v62 = sub_10013F75C((_QWORD *)(v40 > 1), v41 + 1, 1, v62);
        v42 = v62;
        v62[2] = v41 + 1;
        v43 = &v42[2 * v41];
        v44 = v50;
        v43[4] = v51;
        v43[5] = v44;
        v9 = v54;
      }
      v15 = v20 + 1;
      v17 = v21 + v53;
      v18 += 24;
      if (v57 == v15)
      {
        a1 = v47;
        v52(v8, 1, 1, v49);
        goto LABEL_19;
      }
      v61(v8, v17, v19);
    }
    __break(1u);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v62 = _swiftEmptyArrayStorage;
    v45(v8, 1, 1, v49);
LABEL_19:
    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828370);
    swift_bridgeObjectRelease(a2);
LABEL_20:
    swift_bridgeObjectRelease(a1);
    return v62;
  }
  return result;
}

void sub_1004DE8A8(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  const double *v48;
  uint64_t v49;
  const double *v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  double *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double *v66;
  double v67;
  double v68;
  double *v69;
  double *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  double *v76;
  __int128 v77;
  _QWORD *v78;
  _QWORD v79[3];
  double v80;
  double v81;
  double v82;
  double v83;
  float64x2x2_t v84;
  float64x2x2_t v85;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v71 - v11;
  if (!a1)
  {
LABEL_56:
    __break(1u);
    return;
  }
  v76 = a2;
  v13 = *(_QWORD *)v2;
  v14 = *(_QWORD *)(v2 + 8);
  v15 = *(double *)(v2 + 16);
  v16 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v16 % a1)
    v17 = v16 / a1 + 1;
  else
    v17 = v16 / a1;
  v18 = *(_QWORD *)(v14 + 16);
  if (v18)
  {
    v19 = Date.init(timeIntervalSinceReferenceDate:)(v10, *(double *)(v14 + 32));
    v20 = *(double *)(v14 + 32);
  }
  else
  {
    v20 = 0.0;
    v19 = Date.init(timeIntervalSinceReferenceDate:)(v10, 0.0);
  }
  v21 = Date.init(timeIntervalSinceReferenceDate:)(v19, v15 * (double)v18 + v20);
  v22 = Date.timeIntervalSinceReferenceDate.getter(v21);
  v24 = Date.timeIntervalSinceReferenceDate.getter(v23);
  sub_10003D1C0(v17, (uint64_t)v79, v22, v24);
  v26 = (_QWORD *)v79[0];
  v25 = v79[1];
  v27 = v80;
  v75 = v79[2];
  v28 = v81;
  v29 = v82;
  v30 = v83;
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v9, v5);
  v31(v12, v5);
  swift_bridgeObjectRetain(v13);
  v32 = sub_1004DEF9C(0, v16, a1, v13, a1);
  swift_bridgeObjectRelease(v13);
  v33 = v32[2];
  if (!v33)
  {
    swift_bridgeObjectRelease(v32);
    v35 = _swiftEmptyArrayStorage;
    v58 = _swiftEmptyArrayStorage[2];
    if (v58)
      goto LABEL_36;
    goto LABEL_53;
  }
  v73 = v26;
  v74 = v25;
  v78 = _swiftEmptyArrayStorage;
  sub_1000419C0(0, v33, 0);
  v34 = 0;
  v35 = v78;
  v72 = v32;
  v36 = v32 + 4;
  do
  {
    v37 = v36[v34];
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      swift_bridgeObjectRetain(v36[v34]);
      v39 = (_BYTE *)(v37 + 48);
      v40 = _swiftEmptyArrayStorage;
      do
      {
        if ((*v39 & 1) == 0)
        {
          v77 = *((_OWORD *)v39 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
            v40 = sub_10013FD18(0, v40[2] + 1, 1, v40);
          v42 = v40[2];
          v41 = v40[3];
          if (v42 >= v41 >> 1)
            v40 = sub_10013FD18((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
          v40[2] = v42 + 1;
          *(_OWORD *)&v40[2 * v42 + 4] = v77;
        }
        v39 += 24;
        --v38;
      }
      while (v38);
    }
    else
    {
      swift_bridgeObjectRetain(v36[v34]);
      v40 = _swiftEmptyArrayStorage;
    }
    v43 = v40[2];
    if (!v43)
    {
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v40);
      v46 = 0.0;
      v47 = 0.0;
      goto LABEL_32;
    }
    if (v43 >= 4)
    {
      v44 = v43 & 0x7FFFFFFFFFFFFFFCLL;
      v48 = (const double *)(v40 + 8);
      v45 = 0.0;
      v49 = v43 & 0x7FFFFFFFFFFFFFFCLL;
      do
      {
        v50 = v48 - 4;
        v84 = vld2q_f64(v50);
        v85 = vld2q_f64(v48);
        v84.val[0] = vmulq_f64(v84.val[0], v84.val[1]);
        v85.val[0] = vmulq_f64(v85.val[0], v85.val[1]);
        v45 = v45 + v84.val[0].f64[0] + v84.val[0].f64[1] + v85.val[0].f64[0] + v85.val[0].f64[1];
        v48 += 8;
        v49 -= 4;
      }
      while (v49);
      if (v43 == v44)
        goto LABEL_29;
    }
    else
    {
      v44 = 0;
      v45 = 0.0;
    }
    v51 = v43 - v44;
    v52 = (double *)&v40[2 * v44 + 5];
    do
    {
      v45 = v45 + *(v52 - 1) * *v52;
      v52 += 2;
      --v51;
    }
    while (v51);
LABEL_29:
    v47 = 0.0;
    v53 = 5;
    v54 = v40[2];
    do
    {
      v47 = v47 + *(double *)&v40[v53];
      v53 += 2;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v40);
    v46 = v45 / v47;
LABEL_32:
    v78 = v35;
    v56 = v35[2];
    v55 = v35[3];
    if (v56 >= v55 >> 1)
    {
      sub_1000419C0(v55 > 1, v56 + 1, 1);
      v35 = v78;
    }
    ++v34;
    v35[2] = v56 + 1;
    v57 = (double *)&v35[3 * v56];
    v57[4] = v46;
    v57[5] = v47;
    *((_BYTE *)v57 + 48) = v43 == 0;
  }
  while (v34 != v33);
  swift_bridgeObjectRelease(v72);
  v25 = v74;
  v26 = v73;
  v58 = v35[2];
  if (v58)
  {
LABEL_36:
    v59 = 0;
    v60 = 0;
    v61 = (_QWORD *)v79[0];
    v62 = v80;
    v63 = v82;
    while (1)
    {
      v66 = (double *)&v35[v59];
      if ((v35[v59 + 6] & 1) != 0 || v60 >= v61[2])
      {
        v64 = v29;
        v65 = v30;
      }
      else
      {
        v67 = v66[4];
        v68 = v66[5];
        if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) != 0)
          v26 = v61;
        else
          v26 = sub_1004DEE58(v61);
        if (v60 >= v26[2])
        {
          __break(1u);
          goto LABEL_56;
        }
        v64 = v67;
        v65 = v68;
        v69 = (double *)&v26[v59];
        v69[4] = v67;
        v69[5] = v68;
        *((_BYTE *)v69 + 48) = 0;
        if (v62 < v67)
        {
          v28 = v68;
          v27 = v67;
          v62 = v67;
        }
        if (v63 < 0.0 || v63 > v67)
        {
          v63 = v67;
        }
        else
        {
          v64 = v29;
          v65 = v30;
        }
        v61 = v26;
      }
      ++v60;
      v59 += 3;
      v29 = v64;
      v30 = v65;
      if (v58 == v60)
        goto LABEL_54;
    }
  }
LABEL_53:
  v64 = v29;
  v65 = v30;
LABEL_54:
  swift_bridgeObjectRelease(v35);
  v70 = v76;
  *(_QWORD *)v76 = v26;
  *((_QWORD *)v70 + 1) = v25;
  *((_QWORD *)v70 + 2) = v75;
  v70[3] = v27;
  v70[4] = v28;
  v70[5] = v64;
  v70[6] = v65;
}

BOOL sub_1004DEDE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  return (sub_1002A09BC(*a1, *a2) & 1) != 0 && sub_1002A0A2C(v2, v3);
}

_QWORD *sub_1004DEE30(_QWORD *a1)
{
  return sub_10013FA9C(0, a1[2], 0, a1);
}

_QWORD *sub_1004DEE44(_QWORD *a1)
{
  return sub_10013FABC(0, a1[2], 0, a1);
}

_QWORD *sub_1004DEE58(_QWORD *a1)
{
  return sub_10003D330(0, a1[2], 0, a1);
}

_QWORD *sub_1004DEE6C(_QWORD *a1)
{
  return sub_10013FD80(0, a1[2], 0, a1);
}

uint64_t sub_1004DEE80(unint64_t a1)
{
  return sub_10013FECC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1004DEE94(_QWORD *a1)
{
  return sub_1001406EC(0, a1[2], 0, a1);
}

uint64_t sub_1004DEEA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

_QWORD *sub_1004DEF10(_QWORD *a1)
{
  return sub_10013FD04(0, a1[2], 0, a1);
}

_QWORD *sub_1004DEF24(_QWORD *a1)
{
  return sub_100140ED4(0, a1[2], 0, a1);
}

uint64_t sub_1004DEF38(unint64_t a1)
{
  return sub_10013FCF0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1004DEF4C(unint64_t a1)
{
  return sub_1001413B4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1004DEF60(_QWORD *a1)
{
  return sub_10013F75C(0, a1[2], 0, a1);
}

uint64_t sub_1004DEF74(unint64_t a1)
{
  return sub_100141844(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1004DEF88(unint64_t a1)
{
  return sub_100141A98(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1004DEF9C(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  _BOOL4 v10;
  BOOL v11;
  _QWORD *result;
  int64_t v13;
  BOOL v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  size_t v28;
  char *v29;
  char *v30;
  size_t v31;
  BOOL v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  BOOL v46;
  uint64_t v47;
  size_t v48;
  char *v49;
  char *v50;
  size_t v51;
  uint64_t v52;
  _QWORD *v55;
  _QWORD *v56;

  v6 = a3;
  v7 = a1;
  v8 = 0;
  v9 = a1;
  while (1)
  {
    v10 = v9 <= a2;
    if (a3 > 0)
      v10 = v9 >= a2;
    if (v10)
      break;
    v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11)
      v9 = (v9 >> 63) ^ 0x8000000000000000;
    v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  sub_100121570(0, v8, 0);
  result = _swiftEmptyArrayStorage;
  if (v8)
  {
    v52 = *(_QWORD *)(a4 + 16);
    v13 = a2;
    while (1)
    {
      v14 = v7 <= v13;
      if (v6 > 0)
        v14 = v7 >= v13;
      if (v14)
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      if (__OFADD__(v7, v6))
        v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      else
        v15 = v7 + v6;
      if (__OFADD__(v7, a5))
        goto LABEL_72;
      if (v52 >= v7 + a5)
        v16 = v7 + a5;
      else
        v16 = v52;
      v17 = v16 - v7;
      if (v16 < v7)
        goto LABEL_73;
      if (v7 < 0)
        goto LABEL_74;
      v55 = result;
      v18 = v6;
      v19 = type metadata accessor for __ContiguousArrayStorageBase(0);
      swift_bridgeObjectRetain(a4);
      v21 = swift_unknownObjectRetain_n(v20, 2);
      v22 = (_QWORD *)swift_dynamicCastClass(v21, v19);
      if (!v22)
      {
        swift_bridgeObjectRelease(a4);
        v22 = _swiftEmptyArrayStorage;
      }
      v23 = v22[2];
      swift_release(v22);
      if (v23 == v17)
      {
        v24 = (char *)swift_dynamicCastClass(a4, v19);
        v6 = v18;
        v13 = a2;
        if (!v24)
        {
          swift_bridgeObjectRelease(a4);
          v24 = (char *)_swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease(a4);
        v24 = (char *)_swiftEmptyArrayStorage;
        v6 = v18;
        v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0)
              goto LABEL_78;
          }
          else
          {
            v27 = sub_100047110(&qword_1008214C8);
            v24 = (char *)swift_allocObject(v27, 24 * v17 + 32, 7);
            v28 = j__malloc_size(v24);
            *((_QWORD *)v24 + 2) = v17;
            *((_QWORD *)v24 + 3) = 2 * ((uint64_t)(v28 - 32) / 24);
          }
          v29 = v24 + 32;
          v30 = (char *)(a4 + 32 + 24 * v7);
          v31 = 24 * v17;
          if (v30 < &v24[24 * v17 + 32] && v29 < &v30[v31])
          {
LABEL_79:
            result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            goto LABEL_80;
          }
          memcpy(v29, v30, v31);
        }
      }
      swift_bridgeObjectRelease(a4);
      result = v55;
      v26 = v55[2];
      v25 = v55[3];
      if (v26 >= v25 >> 1)
      {
        sub_100121570(v25 > 1, v26 + 1, 1);
        v13 = a2;
        result = v55;
      }
      result[2] = v26 + 1;
      result[v26 + 4] = v24;
      v7 = v15;
      if (!--v8)
        goto LABEL_41;
    }
  }
  v15 = v7;
  v13 = a2;
LABEL_41:
  v32 = v15 <= v13;
  if (v6 > 0)
    v32 = v15 >= v13;
  if (!v32)
  {
    while (1)
    {
      v33 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5))
        break;
      if (*(_QWORD *)(a4 + 16) >= v15 + a5)
        v34 = v15 + a5;
      else
        v34 = *(_QWORD *)(a4 + 16);
      v35 = v34 - v15;
      if (v34 < v15)
        goto LABEL_76;
      if (v15 < 0)
        goto LABEL_77;
      v36 = result;
      v37 = type metadata accessor for __ContiguousArrayStorageBase(0);
      swift_bridgeObjectRetain(a4);
      v39 = swift_unknownObjectRetain_n(v38, 2);
      v40 = (_QWORD *)swift_dynamicCastClass(v39, v37);
      if (!v40)
      {
        swift_bridgeObjectRelease(a4);
        v40 = _swiftEmptyArrayStorage;
      }
      v41 = v40[2];
      swift_release(v40);
      if (v41 == v35)
      {
        v42 = (char *)swift_dynamicCastClass(a4, v37);
        if (!v42)
        {
          swift_bridgeObjectRelease(a4);
          v42 = (char *)_swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease(a4);
        v42 = (char *)_swiftEmptyArrayStorage;
        if (v34 != v15)
        {
          if (v35 < 1)
          {
            if (v35 < 0)
              goto LABEL_78;
          }
          else
          {
            v47 = sub_100047110(&qword_1008214C8);
            v42 = (char *)swift_allocObject(v47, 24 * v35 + 32, 7);
            v48 = j__malloc_size(v42);
            *((_QWORD *)v42 + 2) = v35;
            *((_QWORD *)v42 + 3) = 2 * ((uint64_t)(v48 - 32) / 24);
          }
          v49 = v42 + 32;
          v50 = (char *)(a4 + 32 + 24 * v15);
          v51 = 24 * v35;
          if (v50 < &v42[24 * v35 + 32] && v49 < &v50[v51])
            goto LABEL_79;
          memcpy(v49, v50, v51);
        }
      }
      swift_bridgeObjectRelease(a4);
      result = v36;
      v56 = v36;
      v44 = v36[2];
      v43 = v36[3];
      v45 = a2;
      if (v44 >= v43 >> 1)
      {
        sub_100121570(v43 > 1, v44 + 1, 1);
        v45 = a2;
        result = v56;
      }
      result[2] = v44 + 1;
      result[v44 + 4] = v42;
      v46 = v33 <= v45;
      if (v6 > 0)
        v46 = v33 >= v45;
      v15 = v33;
      if (v46)
        return result;
    }
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
LABEL_80:
    __break(1u);
  }
  return result;
}

unint64_t sub_1004DF4D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081EEC8;
  if (!qword_10081EEC8)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_10081EEC8);
  }
  return result;
}

id sub_1004DF51C(uint64_t a1)
{
  return sub_1004DF53C(16.0, a1, &qword_100837920);
}

id sub_1004DF52C(uint64_t a1)
{
  return sub_1004DF53C(14.0, a1, &qword_100837928);
}

id sub_1004DF53C(double a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", a1, UIFontWeightMedium);
  *a3 = result;
  return result;
}

uint64_t sub_1004DF598()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.systemFont(ofSize:weight:design:)(*(_QWORD *)&UIFontWeightMedium, 0, UIFontDescriptorSystemDesignRounded, 30.0);
  qword_100837930 = result;
  return result;
}

id sub_1004DF5F8()
{
  id result;

  result = sub_1004DF614();
  qword_100837938 = (uint64_t)result;
  return result;
}

id sub_1004DF614()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSString *v8;
  id v9;
  id v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  Class isa;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  id v32;
  _BYTE v34[64];
  _BYTE v35[48];

  v0 = sub_100047110(&qword_10082FB08);
  inited = swift_initStackObject(v0, v35);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v2 = sub_100047110(&qword_10082FB10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100622F90;
  v4 = sub_100047110(&qword_10082FB18);
  v5 = swift_initStackObject(v4, v34);
  *(_OWORD *)(v5 + 16) = xmmword_100620BC0;
  v6 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 40) = 38;
  v7 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 56) = 1;
  v8 = UIFontDescriptorFeatureSettingsAttribute;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v3 + 32) = sub_100038DB0(v5);
  *(_QWORD *)(inited + 40) = v3;
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435C18(inited);
  if (qword_10081DF18 != -1)
    swift_once(&qword_10081DF18, sub_1004DF598);
  v12 = objc_msgSend((id)qword_100837930, "fontDescriptor", 1, 2);
  sub_1002F74FC((uint64_t)v11);
  v14 = v13;
  swift_bridgeObjectRelease(v11, v15, v16, v17, v18, v19, v20, v21);
  type metadata accessor for AttributeName(0);
  sub_1000083D8((unint64_t *)&qword_10081E830, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10062267C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14, v23, v24, v25, v26, v27, v28, v29);
  v30 = objc_msgSend(v12, "fontDescriptorByAddingAttributes:", isa);

  objc_msgSend((id)qword_100837930, "pointSize");
  v32 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v30, v31);

  return v32;
}

void sub_1004DF838()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
  v1 = objc_msgSend(v0, "CGColor");

  qword_100837940 = (uint64_t)v1;
}

id sub_1004DF89C()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  result = objc_msgSend(v0, "setAlignment:", 0);
  qword_100837948 = (uint64_t)v0;
  return result;
}

uint64_t sub_1004DF8E8()
{
  uint64_t v0;

  v0 = type metadata accessor for DispatchTimeInterval(0);
  sub_100008398(v0, qword_100837950);
  *(_QWORD *)sub_10003CE9C(v0, (uint64_t)qword_100837950) = 5;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

Swift::Int sub_1004DF950(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v3 = a2 + 16;
  v4 = objc_msgSend(a1, "string");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  swift_beginAccess(v3, v10, 1, 0);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v7;
  swift_bridgeObjectRelease(v8);
  return OS_dispatch_semaphore.signal()();
}

unint64_t sub_1004DF9D8(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  os_log_type_t v6;
  void *v7;
  os_log_type_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(a1);
  if ((v2 & 1) != 0)
    return 0;
  v3 = v1;
  v4 = v1;
  result = 0;
  switch(v4)
  {
    case 0:
    case 1:
      result = 0xD000000000000023;
      break;
    case 2:
      return result;
    case 3:
      result = 0xD000000000000020;
      break;
    default:
      v6 = static os_log_type_t.fault.getter(0);
      v7 = (void *)HKLogActivity;
      v8 = v6;
      if (os_log_type_enabled(HKLogActivity, v6))
      {
        v9 = v7;
        v10 = swift_slowAlloc(22, -1);
        v11 = swift_slowAlloc(32, -1);
        v13 = v11;
        *(_DWORD *)v10 = 136315394;
        v12 = sub_10003E8EC(0xD000000000000019, 0x80000001006A24C0, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10 + 4);
        *(_WORD *)(v10 + 12) = 2048;
        v12 = v3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10 + 14);
        _os_log_impl((void *)&_mh_execute_header, v9, v8, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to nil",
          (uint8_t *)v10,
          0x16u);
        swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v11, -1, -1);
        swift_slowDealloc(v10, -1, -1);

      }
      return 0;
  }
  return result;
}

void sub_1004DFBBC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGColorSpaceRef DeviceRGB;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  const __CFArray *isa;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  CGGradient *v25;
  uint64_t v26;
  CGContext *v27;
  CGContext *v28;
  os_log_type_t v29;
  void *v30;
  os_log_type_t v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  CGColorSpace *space;
  uint64_t v36;
  uint64_t v37;
  CGPoint v38;
  CGPoint v39;
  CGRect v40;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v9 = sub_100047110((uint64_t *)&unk_100828340);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100629280;
  v11 = (void *)objc_opt_self(UIColor);
  space = DeviceRGB;
  v12 = objc_msgSend(v11, "clearColor");
  v13 = objc_msgSend(v12, "CGColor");

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v11, "blackColor");
  v15 = objc_msgSend(v14, "CGColor");

  *(_QWORD *)(v10 + 40) = v15;
  v37 = v10;
  specialized Array._endMutation()(v16);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v10, v18, v19, v20, v21, v22, v23, v24);
  v25 = CGGradientCreateWithColors(space, isa, 0);

  if (v25)
  {
    v27 = UIGraphicsGetCurrentContext();
    if (v27)
    {
      v28 = v27;
      v40.origin.x = a1;
      v40.origin.y = a2;
      v40.size.width = a3;
      v40.size.height = a4;
      v39.y = CGRectGetMaxY(v40);
      v38.y = 0.0;
      v38.x = (a1 + a3) * 0.5;
      v39.x = v38.x;
      CGContextDrawLinearGradient(v28, v25, v38, v39, 0);

      goto LABEL_7;
    }

  }
  v29 = static os_log_type_t.error.getter(v26);
  v30 = (void *)HKLogActivity;
  v31 = v29;
  if (os_log_type_enabled(HKLogActivity, v29))
  {
    v32 = v30;
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v37 = v34;
    *(_DWORD *)v33 = 136315138;
    v36 = sub_10003E8EC(0xD000000000000022, 0x80000001006A2470, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v33 + 4);
    _os_log_impl((void *)&_mh_execute_header, v32, v31, "%s - failed to draw gradient", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    return;
  }
LABEL_7:

}

void sub_1004DFEBC(double a1, double a2, uint64_t a3, CHWorkoutDetailHeartRateTableViewCell *a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  id v17;
  NSString *v18;
  id v19;
  NSString *v20;
  void *v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class isa;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  _BYTE v42[152];

  v11 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v11, v42);
  *(_OWORD *)(inited + 16) = xmmword_100624A40;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v13 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 40) = a5;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v14 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = a6;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 112) = NSParagraphStyleAttributeName;
  v15 = qword_10081DF30;
  v16 = NSFontAttributeName;
  v17 = a5;
  v18 = NSForegroundColorAttributeName;
  v19 = a6;
  v20 = NSParagraphStyleAttributeName;
  if (v15 != -1)
    swift_once(&qword_10081DF30, sub_1004DF89C);
  v21 = (void *)qword_100837948;
  *(_QWORD *)(inited + 144) = sub_10001E724(0, &qword_100837968, NSParagraphStyle_ptr);
  *(_QWORD *)(inited + 120) = v21;
  v22 = v21;
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v24 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a4);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4, v26, v27, v28, v29, v30, v31, v32);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23, v34, v35, v36, v37, v38, v39, v40);
  v41 = objc_msgSend(v24, "initWithString:attributes:", v25, isa);

  objc_msgSend(v41, "drawAtPoint:", a1, a2);
}

void sub_1004E00DC(double a1, double a2, uint64_t a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString *v20;
  id v21;
  NSString *v22;
  void *v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  id v26;
  NSString v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Class isa;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  NSString v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSString *v49;
  _BYTE v50[160];

  v12 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v12, v50);
  *(_OWORD *)(inited + 16) = xmmword_100624A40;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v14 = qword_10081DF18;
  v49 = NSFontAttributeName;
  if (v14 != -1)
    swift_once(&qword_10081DF18, sub_1004DF598);
  v15 = (void *)qword_100837930;
  v16 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 64) = v16;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v17 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = a7;
  *(_QWORD *)(inited + 104) = v17;
  *(_QWORD *)(inited + 112) = NSParagraphStyleAttributeName;
  v18 = qword_10081DF30;
  v19 = v15;
  v20 = NSForegroundColorAttributeName;
  v21 = a7;
  v22 = NSParagraphStyleAttributeName;
  if (v18 != -1)
    swift_once(&qword_10081DF30, sub_1004DF89C);
  v23 = (void *)qword_100837948;
  *(_QWORD *)(inited + 144) = sub_10001E724(0, &qword_100837968, NSParagraphStyle_ptr);
  *(_QWORD *)(inited + 120) = v23;
  v24 = v23;
  v25 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v26 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(a4);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4, v28, v29, v30, v31, v32, v33, v34);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25, v36, v37, v38, v39, v40, v41, v42);
  v43 = objc_msgSend(v26, "initWithString:attributes:", v27, isa);

  if (a6)
  {
    v44 = String._bridgeToObjectiveC()();
    v45 = String._bridgeToObjectiveC()();
    v46 = objc_msgSend(v44, "rangeOfString:", v45);
    v48 = v47;

    if (qword_10081DF20 != -1)
      swift_once(&qword_10081DF20, sub_1004DF5F8);
    objc_msgSend(v43, "addAttribute:value:range:", v49, qword_100837938, v46, v48);
  }
  objc_msgSend(v43, "drawAtPoint:", a1, a2);

}

BOOL sub_1004E03C8(uint64_t a1)
{
  unint64_t v1;
  char v2;
  unint64_t v3;
  _BOOL8 result;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(a1);
  if ((v2 & 1) != 0)
    return 0;
  v3 = v1;
  if (v1 < 4)
    return (7u >> (v1 & 0xF)) & 1;
  v5 = static os_log_type_t.fault.getter(v1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  result = os_log_type_enabled(HKLogActivity, v5);
  if (result)
  {
    v8 = v6;
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(32, -1);
    v12 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_10003E8EC(0xD00000000000001CLL, 0x80000001006A24A0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4);
    *(_WORD *)(v9 + 12) = 2048;
    v11 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 14);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to false",
      (uint8_t *)v9,
      0x16u);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    return 0;
  }
  return result;
}

void sub_1004E0550(double a1, double a2, CGFloat a3, double a4)
{
  CGContext *v8;
  CGContext *v9;
  os_log_type_t v10;
  void *v11;
  os_log_type_t v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v15;
  CGPath *path;
  uint64_t v17;
  uint64_t v18[6];

  v8 = UIGraphicsGetCurrentContext();
  if (v8)
  {
    v9 = v8;
    path = CGPathCreateMutable();
    v18[0] = 0x3FF0000000000000;
    v18[1] = 0;
    v18[2] = 0;
    v18[3] = 0x3FF0000000000000;
    v18[4] = 0;
    v18[5] = 0;
    CGMutablePathRef.move(to:transform:)(v18, a1, a2);
    CGMutablePathRef.addLine(to:transform:)(v18, a1, a2 + a4);
    CGPathCloseSubpath(path);
    CGContextAddPath(v9, path);
    if (qword_10081DF28 != -1)
      swift_once(&qword_10081DF28, sub_1004DF838);
    CGContextSetStrokeColorWithColor(v9, (CGColorRef)qword_100837940);
    CGContextSetLineWidth(v9, a3);
    CGContextSetLineCap(v9, kCGLineCapRound);
    CGContextStrokePath(v9);

  }
  else
  {
    v10 = static os_log_type_t.error.getter(0);
    v11 = (void *)HKLogActivity;
    v12 = v10;
    if (os_log_type_enabled(HKLogActivity, v10))
    {
      v13 = v11;
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v18[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v17 = sub_10003E8EC(0xD000000000000022, 0x80000001006A2470, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v14 + 4);
      _os_log_impl((void *)&_mh_execute_header, v13, v12, "%s - failed to draw keyline", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
  }
}

void sub_1004E0790(uint64_t a1, uint64_t a2, char *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  NSString v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat Height;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  void *v54;
  void *v55;
  id v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  NSString v66;
  id v67;
  uint64_t v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  void *v71;
  id v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  void *v85;
  id v86;
  void *v87;
  id v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  NSString v97;
  id v98;
  uint64_t v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  void *v102;
  id v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  id v112;
  NSString v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  dispatch_semaphore_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  _QWORD *v122;
  NSObject *v123;
  id v124;
  __n128 v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char v131;
  uint64_t v132;
  char **v133;
  os_log_type_t v134;
  void *v135;
  os_log_type_t v136;
  NSObject *v137;
  uint8_t *v138;
  void **v139;
  NSObject *v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  uint64_t v142;
  id v143;
  NSString v144;
  id v145;
  uint64_t v146;
  CHWorkoutDetailHeartRateTableViewCell *v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  id v149;
  void *v150;
  id v151;
  SEL v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  SEL v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  uint64_t v166;
  id v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  void **aBlock;
  uint64_t v175;
  void (*v176)(uint64_t, void *, void *);
  void *v177;
  void (*v178)(void *);
  uint64_t v179;
  CGRect v180;
  CGRect v181;

  v172 = a3;
  v171 = type metadata accessor for DispatchTime(0);
  v169 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v168 = (char *)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v170 = (char *)&v166 - v15;
  sub_1004DF9D8(a1);
  if (v16)
  {
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v18);

    objc_msgSend(v19, "drawInRect:", a4, a5, a6, a7);
    swift_bridgeObjectRelease(v17, v20, v21, v22, v23, v24, v25, v26);

  }
  sub_1004DFBBC(a4, a5, a6, a7);
  v28 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v27);
  v29 = objc_msgSend(v28, "source");

  LODWORD(v28) = objc_msgSend(v29, "_hasFirstPartyBundleID");
  if ((_DWORD)v28)
  {
    v31 = sub_1004C4E3C(a1);
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v31, "size");
      v34 = v33;
      objc_msgSend(v32, "size");
      v36 = fmin(v34 / v35, 1.0);
      objc_msgSend(v32, "size");
      v38 = v37;
      objc_msgSend(v32, "size");
      v40 = fmin(v38 / v39, 1.0);
      v180.origin.x = 16.0;
      v180.origin.y = 16.0;
      v180.size.width = 40.0;
      v180.size.height = 40.0;
      v41 = v36 * CGRectGetWidth(v180);
      v181.origin.x = 16.0;
      v181.origin.y = 16.0;
      v181.size.width = 40.0;
      v181.size.height = 40.0;
      Height = CGRectGetHeight(v181);
      CGRect.centered(in:)(16.0, 16.0, 40.0, 40.0, 0.0, 0.0, v41, Height * v40);
      objc_msgSend(v32, "drawInRect:");

    }
  }
  else
  {
    v43 = MindfulnessSessionViewModel.sourceRevision.getter(v30);
    v44 = objc_msgSend((id)v43, "source");

    LOBYTE(v43) = objc_msgSend(v44, "_isAppleWatch");
    if ((v43 & 1) != 0)
    {
      v45 = sub_1004C4F08(40.0);
      v46 = (void *)objc_opt_self(CHIconCache);
      v178 = sub_1004C28F4;
      v179 = 0;
      aBlock = _NSConcreteStackBlock;
      v175 = 1107296256;
      v176 = sub_1001ABA78;
      v177 = &unk_1007A4DD8;
      v47 = _Block_copy(&aBlock);
      objc_msgSend(v46, "fetchWatchIconWithParameters:completion:", v45, v47, swift_release(v179).n128_f64[0]);
    }
    else
    {
      v45 = sub_1004C5064(40.0);
      v48 = (void *)objc_opt_self(CHIconCache);
      v178 = sub_1004C28F4;
      v179 = 0;
      aBlock = _NSConcreteStackBlock;
      v175 = 1107296256;
      v176 = sub_1001ABA78;
      v177 = &unk_1007A4D38;
      v47 = _Block_copy(&aBlock);
      objc_msgSend(v48, "fetchPhoneIconWithParameters:completion:", v45, v47, swift_release(v179).n128_f64[0]);
    }
    _Block_release(v47);

  }
  v49 = sub_1004C3E8C(a1, a2);
  v50 = objc_msgSend(v49, "string");

  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  if (qword_10081DF08 != -1)
    swift_once(&qword_10081DF08, sub_1004DF51C);
  v54 = (void *)qword_100837920;
  v55 = (void *)objc_opt_self(UIColor);
  v56 = objc_msgSend(v55, "whiteColor");
  sub_1004DFEBC(16.0, 104.0, v51, v53, v54, v56);

  swift_bridgeObjectRelease(v53, v57, v58, v59, v60, v61, v62, v63);
  v64 = (void *)objc_opt_self(NSBundle);
  v65 = objc_msgSend(v64, "mainBundle");
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v65, "localizedStringForKey:value:table:", v66, 0, 0);

  v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
  v70 = v69;

  if (qword_10081DF10 != -1)
    swift_once(&qword_10081DF10, sub_1004DF52C);
  v71 = (void *)qword_100837928;
  v72 = objc_msgSend(v55, "secondaryLabelColor");
  sub_1004DFEBC(16.0, 140.0, v68, v70, v71, v72);
  swift_bridgeObjectRelease(v70, v73, v74, v75, v76, v77, v78, v79);

  v80 = sub_1004C313C();
  v81 = objc_msgSend(v80, "string");

  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
  v84 = v83;

  v85 = (void *)objc_opt_self(ARUIMetricColors);
  v86 = objc_msgSend(v85, "elapsedTimeColors");
  if (!v86)
  {
    __break(1u);
    goto LABEL_27;
  }
  v87 = v86;
  v88 = objc_msgSend(v86, "nonGradientTextColor");

  if (!v88)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1004E00DC(16.0, 152.0, v82, v84, 0, 0, v88);

  swift_bridgeObjectRelease(v84, v89, v90, v91, v92, v93, v94, v95);
  if (!sub_1004E03C8(a1))
    return;
  v167 = v85;
  sub_1004E0550(134.0, 141.0, 2.0, 42.0);
  v96 = objc_msgSend(v64, "mainBundle");
  v97 = String._bridgeToObjectiveC()();
  v98 = objc_msgSend(v96, "localizedStringForKey:value:table:", v97, 0, 0);

  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  v102 = (void *)qword_100837928;
  v103 = objc_msgSend(v55, "secondaryLabelColor");
  sub_1004DFEBC(148.0, 140.0, v99, v101, v102, v103);
  swift_bridgeObjectRelease(v101, v104, v105, v106, v107, v108, v109, v110);

  v111 = swift_allocObject(&unk_1007A4D70, 32, 7);
  v112 = objc_msgSend(v64, "mainBundle");
  v113 = String._bridgeToObjectiveC()();
  v114 = objc_msgSend(v112, "localizedStringForKey:value:table:", v113, 0, 0);

  v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
  v117 = v116;

  *(_QWORD *)(v111 + 16) = v115;
  *(_QWORD *)(v111 + 24) = v117;
  v118 = dispatch_semaphore_create(0);
  v119 = swift_allocObject(&unk_1007A4D98, 32, 7);
  *(_QWORD *)(v119 + 16) = v111;
  *(_QWORD *)(v119 + 24) = v118;
  v120 = v172;
  v121 = *(_QWORD *)&v172[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore];
  v122 = (_QWORD *)swift_allocObject(&unk_1007A4DC0, 40, 7);
  v122[2] = v120;
  v122[3] = sub_1004E1334;
  v122[4] = v119;
  swift_retain(v111);
  v123 = v118;
  v124 = v120;
  v125 = swift_retain(v119);
  static MindfulnessSessionDataCalculator.endingHeartRate(for:healthStore:completion:)(a1, v121, sub_1004E1368, v122, v125);
  swift_release(v119);
  swift_release(v122);
  v126 = v168;
  static DispatchTime.now()(v127);
  if (qword_10081DF38 != -1)
    swift_once(&qword_10081DF38, sub_1004DF8E8);
  v128 = type metadata accessor for DispatchTimeInterval(0);
  v129 = sub_10003CE9C(v128, (uint64_t)qword_100837950);
  v130 = v170;
  + infix(_:_:)(v126, v129);
  v172 = *(char **)(v169 + 8);
  ((void (*)(char *, uint64_t))v172)(v126, v171);
  v131 = OS_dispatch_semaphore.wait(timeout:)(v130);
  v132 = static DispatchTimeoutResult.== infix(_:_:)(v131 & 1, 0);
  v133 = &selRef_headerStringForSection_isRecentAndRelevant_;
  if ((v132 & 1) == 0)
  {
    v134 = static os_log_type_t.error.getter(v132);
    v135 = (void *)HKLogActivity;
    v136 = v134;
    if (os_log_type_enabled(HKLogActivity, v134))
    {
      v137 = v135;
      v138 = (uint8_t *)swift_slowAlloc(12, -1);
      v139 = (void **)swift_slowAlloc(32, -1);
      aBlock = v139;
      *(_DWORD *)v138 = 136315138;
      v173 = sub_10003E8EC(0xD000000000000022, 0x80000001006A2470, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, &aBlock, v138 + 4);
      v140 = v137;
      v133 = &selRef_headerStringForSection_isRecentAndRelevant_;
      _os_log_impl((void *)&_mh_execute_header, v140, v136, "%s failed to fetch heart rate; semaphore timed out",
        v138,
        0xCu);
      swift_arrayDestroy(v139, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v139, -1, -1);
      swift_slowDealloc(v138, -1, -1);

    }
  }
  swift_beginAccess(v111 + 16, &aBlock, 0, 0);
  v142 = *(_QWORD *)(v111 + 16);
  v141 = *(CHWorkoutDetailHeartRateTableViewCell **)(v111 + 24);
  v143 = objc_msgSend(v64, "mainBundle", swift_bridgeObjectRetain(v141).n128_f64[0]);
  v144 = String._bridgeToObjectiveC()();
  v145 = objc_msgSend(v143, "localizedStringForKey:value:table:", v144, 0, 0);

  v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v145);
  v148 = v147;

  v149 = objc_msgSend(v167, "heartRateColors");
  if (!v149)
    goto LABEL_28;
  v150 = v149;
  v151 = objc_msgSend(v149, v133[475]);

  if (!v151)
  {
LABEL_29:
    __break(1u);
    return;
  }
  sub_1004E00DC(148.0, 152.0, v142, v141, v146, (uint64_t)v148, v151);

  swift_bridgeObjectRelease(v141, v152, v153, v154, v155, v156, v157, v158);
  swift_bridgeObjectRelease(v148, v159, v160, v161, v162, v163, v164, v165);

  ((void (*)(char *, uint64_t))v172)(v170, v171);
  swift_release(v111);
}

uint64_t sub_1004E12E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004E1308()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_1004E1334(void *a1)
{
  uint64_t v1;

  return sub_1004DF950(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004E133C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004E1368(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1004C3384(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id, __n128))(v2 + 24));
}

void sub_1004E1378(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGContext *v8;
  id v9;
  CGColor *v10;
  os_log_type_t v11;
  void *v12;
  os_log_type_t v13;
  NSObject *v14;
  uint8_t *v15;
  uint64_t v16;
  CGContext *c;
  uint64_t v18;
  uint64_t v19;
  CGRect v20;

  v8 = UIGraphicsGetCurrentContext();
  if (v8)
  {
    c = v8;
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    v10 = (CGColor *)objc_msgSend(v9, "CGColor");

    CGContextSetFillColorWithColor(c, v10);
    v20.origin.x = a1;
    v20.origin.y = a2;
    v20.size.width = a3;
    v20.size.height = a4;
    CGContextFillRect(c, v20);

  }
  else
  {
    v11 = static os_log_type_t.error.getter(0);
    v12 = (void *)HKLogActivity;
    v13 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      v14 = v12;
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v19 = v16;
      *(_DWORD *)v15 = 136315138;
      v18 = sub_10003E8EC(0xD000000000000022, 0x80000001006A2470, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v15 + 4);
      _os_log_impl((void *)&_mh_execute_header, v14, v13, "%s - failed to draw background", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
  }
}

void sub_1004E156C(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  void *v24;
  void *v25;
  id v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  NSString v35;
  id v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  void *v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  id v54;
  void *v55;
  id v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void **v64;
  uint64_t v65;
  void (*v66)(uint64_t, void *, void *);
  void *v67;
  id (*v68)(id);
  uint64_t v69;

  sub_1004E1378(a3, a4, a5, a6);
  v9 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v8);
  v10 = objc_msgSend(v9, "source");

  LODWORD(v9) = objc_msgSend(v10, "_hasFirstPartyBundleID");
  if ((_DWORD)v9)
  {
    v12 = sub_1004C4E3C(a1);
    if (!v12)
      goto LABEL_9;
    v13 = v12;
    objc_msgSend(v12, "drawInRect:", 16.0, 16.0, 40.0, 40.0);
  }
  else
  {
    v14 = MindfulnessSessionViewModel.sourceRevision.getter(v11);
    v15 = objc_msgSend((id)v14, "source");

    LOBYTE(v14) = objc_msgSend(v15, "_isAppleWatch");
    if ((v14 & 1) != 0)
    {
      v13 = sub_1004C4F08(28.0);
      v16 = (void *)objc_opt_self(CHIconCache);
      v68 = sub_1004C29EC;
      v69 = 0;
      v64 = _NSConcreteStackBlock;
      v65 = 1107296256;
      v66 = sub_1001ABA78;
      v67 = &unk_1007A4E28;
      v17 = _Block_copy(&v64);
      objc_msgSend(v16, "fetchWatchIconWithParameters:completion:", v13, v17, swift_release(v69).n128_f64[0]);
    }
    else
    {
      v13 = sub_1004C5064(28.0);
      v18 = (void *)objc_opt_self(CHIconCache);
      v68 = sub_1004C29EC;
      v69 = 0;
      v64 = _NSConcreteStackBlock;
      v65 = 1107296256;
      v66 = sub_1001ABA78;
      v67 = &unk_1007A4E00;
      v17 = _Block_copy(&v64);
      objc_msgSend(v18, "fetchPhoneIconWithParameters:completion:", v13, v17, swift_release(v69).n128_f64[0]);
    }
    _Block_release(v17);
  }

LABEL_9:
  v19 = sub_1004C3E8C(a1, a2);
  v20 = objc_msgSend(v19, "string");

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (qword_10081DF08 != -1)
    swift_once(&qword_10081DF08, sub_1004DF51C);
  v24 = (void *)qword_100837920;
  v25 = (void *)objc_opt_self(UIColor);
  v26 = objc_msgSend(v25, "whiteColor");
  sub_1004DFEBC(68.0, 18.0, v21, v23, v24, v26);

  swift_bridgeObjectRelease(v23, v27, v28, v29, v30, v31, v32, v33);
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, 0, 0);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  if (qword_10081DF10 != -1)
    swift_once(&qword_10081DF10, sub_1004DF52C);
  v40 = (void *)qword_100837928;
  v41 = objc_msgSend(v25, "secondaryLabelColor");
  sub_1004DFEBC(68.0, 36.0, v37, v39, v40, v41);
  swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);

  v49 = sub_1004C313C();
  v50 = objc_msgSend(v49, "string");

  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  v54 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "elapsedTimeColors");
  if (v54)
  {
    v55 = v54;
    v56 = objc_msgSend(v54, "nonGradientTextColor");

    if (v56)
    {
      sub_1004E00DC(176.0, 18.0, v51, v53, 0, 0, v56);
      swift_bridgeObjectRelease(v53, v57, v58, v59, v60, v61, v62, v63);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *sub_1004E1A00(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for MetricPlatterType(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain(v7);
    v14 = v8;
    v13(v10, v11, v12);
    v15 = a3[7];
    v16 = a3[8];
    v17 = *(uint64_t *)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = v17;
    v18 = (char *)v4 + v16;
    v19 = (char *)a2 + v16;
    v20 = type metadata accessor for WorkoutChartProperties(0);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain(v17);
    v21(v18, v19, v20);
    v22 = a3[9];
    v23 = *(void **)((char *)a2 + v22);
    *(uint64_t *)((char *)v4 + v22) = (uint64_t)v23;
    v24 = v23;
  }
  return v4;
}

void sub_1004E1B10(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(a1 + 8));

  v4 = a1 + a2[6];
  v5 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  v6 = a1 + a2[8];
  v7 = type metadata accessor for WorkoutChartProperties(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

_QWORD *sub_1004E1BA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void *v22;
  id v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for MetricPlatterType(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain(v6);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[7];
  v15 = a3[8];
  v16 = *(_QWORD *)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v19 = type metadata accessor for WorkoutChartProperties(0);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain(v16);
  v20(v17, v18, v19);
  v21 = a3[9];
  v22 = *(void **)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  v23 = v22;
  return a1;
}

_QWORD *sub_1004E1C88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)((char *)a2 + v15);
  v17 = *(_QWORD *)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for WorkoutChartProperties(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[9];
  v23 = *(void **)((char *)a2 + v22);
  v24 = *(void **)((char *)a1 + v22);
  *(_QWORD *)((char *)a1 + v22) = v23;
  v25 = v23;

  return a1;
}

uint64_t sub_1004E1D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for WorkoutChartProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

_QWORD *sub_1004E1E34(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = (void *)a1[2];
  a1[2] = a2[2];

  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[7];
  v14 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for WorkoutChartProperties(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[9];
  v20 = *(void **)((char *)a1 + v19);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);

  return a1;
}

uint64_t sub_1004E1F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E1F18);
}

uint64_t sub_1004E1F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for WorkoutChartProperties(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1004E1FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E1FC4);
}

uint64_t sub_1004E1FC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for WorkoutChartProperties(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MirrorGraphicsMetricsView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008379C8;
  if (!qword_1008379C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorGraphicsMetricsView);
  return result;
}

uint64_t sub_1004E209C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  v5[0] = &unk_100641AD0;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterType(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = type metadata accessor for WorkoutChartProperties(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_initStructMetadata(a1, 256, 6, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004E2148(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9C48, 1);
}

void sub_1004E2158(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  uint64_t v70;
  uint64_t OpaqueTypeConformance2;
  uint64_t v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t KeyPath;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  __n128 v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  id v138;
  void *v139;
  uint64_t v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  CHWorkoutDetailHeartRateTableViewCell *v142;
  uint64_t v143;
  uint64_t v144;
  SEL v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  uint64_t v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  void *v170;
  uint64_t v171;
  CHWorkoutDetailHeartRateTableViewCell *v172;
  CHWorkoutDetailHeartRateTableViewCell *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  SEL v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  void (*v195)(char *, char *, uint64_t);
  char *v196;
  uint64_t v197;
  void (*v198)(char *, char *, uint64_t);
  uint64_t v199;
  void (*v200)(char *, char *, uint64_t);
  char *v201;
  char *v202;
  int *v203;
  char *v204;
  char *v205;
  void (*v206)(char *, uint64_t);
  void (*v207)(char *, uint64_t);
  void (*v208)(char *, uint64_t);
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t (*v244)(char *, uint64_t);
  uint64_t v245;
  char *v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;

  v215 = a2;
  v250 = sub_100047110(&qword_10081EF90);
  v220 = *(_QWORD *)(v250 - 8);
  __chkstk_darwin(v250);
  v4 = (char *)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v219 = (char *)&v210 - v6;
  v251 = sub_100047110(&qword_10081EF80);
  v258 = *(_QWORD **)(v251 - 8);
  __chkstk_darwin(v251);
  v8 = (char *)&v210 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v210 - v10;
  __chkstk_darwin(v12);
  v213 = (char *)&v210 - v13;
  __chkstk_darwin(v14);
  v214 = (char *)&v210 - v15;
  __chkstk_darwin(v16);
  v218 = (char *)&v210 - v17;
  __chkstk_darwin(v18);
  v257 = (char *)&v210 - v19;
  v225 = type metadata accessor for WorkoutChartProperties(0);
  v223 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v224 = (char *)&v210 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for MetricPlatterType(0);
  v234 = *(_QWORD *)(v235 - 8);
  v21 = __chkstk_darwin(v235);
  v233 = (char *)&v210 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = type metadata accessor for SessionChart(0, v21);
  v238 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v237 = (char *)&v210 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100047110(&qword_100837A18);
  __chkstk_darwin(v24);
  v240 = (char *)&v210 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_100047110(&qword_100837A20);
  __chkstk_darwin(v236);
  v241 = (uint64_t)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_100047110(&qword_100837A28);
  __chkstk_darwin(v227);
  v228 = (char *)&v210 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = sub_100047110(&qword_100837A30);
  v265 = *(_QWORD *)(v255 - 8);
  __chkstk_darwin(v255);
  v247 = (char *)&v210 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v226 = (char *)&v210 - v30;
  __chkstk_darwin(v31);
  v264 = (char *)&v210 - v32;
  v268 = type metadata accessor for AccessibilityChildBehavior(0);
  v243 = *(_QWORD *)(v268 - 8);
  __chkstk_darwin(v268);
  v267 = (char *)&v210 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for WorkoutViewStyle(0);
  v259 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v253 = (char *)&v210 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = sub_100047110(&qword_10081EFB0);
  v260 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v248 = (char *)&v210 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v222 = (char *)&v210 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v210 - v39;
  v249 = sub_100047110(&qword_10081EF98);
  __chkstk_darwin(v249);
  v212 = (char *)&v210 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v217 = (char *)&v210 - v43;
  __chkstk_darwin(v44);
  v46 = (char *)&v210 - v45;
  v47 = sub_100047110(&qword_100837A38);
  __chkstk_darwin(v47);
  v49 = (char *)&v210 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_100047110(&qword_100837A40);
  v231 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v230 = (char *)&v210 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100047110(&qword_100837A48);
  v262 = *(_QWORD *)(v51 - 8);
  v263 = v51;
  __chkstk_darwin(v51);
  v246 = (char *)&v210 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  v229 = (char *)&v210 - v54;
  __chkstk_darwin(v55);
  v261 = (char *)&v210 - v56;
  v57 = type metadata accessor for MirrorGraphicsMetricsView(0);
  v256 = *(int *)(v57 + 28);
  v58 = *(_QWORD *)(a1 + v256);
  if (!*(_QWORD *)(v58 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  v59 = v57;
  v210 = v4;
  v242 = v11;
  v211 = v8;
  v60 = *(_QWORD *)(v58 + 32);
  v252 = *(int *)(v57 + 36);
  v61 = *(_QWORD *)(a1 + v252);
  v221 = a1;
  v64 = a1 + 8;
  v63 = *(_QWORD *)(a1 + 8);
  v62 = *(_QWORD *)(v64 + 8);
  swift_retain(v63);
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(v60, v62, v61, v63);
  swift_release(v63);
  if (!*(_QWORD *)(v58 + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v65 = (id)HKWorkoutMetricTypeDescription(*(_QWORD *)(v58 + 32));
  if (!v65)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v66 = v65;
  v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v69 = v68;

  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v70, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
  v72 = v266;
  v245 = OpaqueTypeConformance2;
  View.accessibilityIdentifier(_:)(v67, v69, v266, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v69, v73, v74, v75, v76, v77, v78, v79);
  v244 = *(uint64_t (**)(char *, uint64_t))(v260 + 8);
  v80 = v244(v40, v72);
  v81 = v221;
  v216 = v221 + *(int *)(v59 + 32);
  v82 = WorkoutChartProperties.tintColor.getter(v80);
  v83 = Color.init(_:)(v82);
  KeyPath = swift_getKeyPath(&unk_100641B38);
  sub_100021CC0((uint64_t)v46, (uint64_t)v49, &qword_10081EF98);
  v85 = (uint64_t *)&v49[*(int *)(v47 + 36)];
  *v85 = KeyPath;
  v85[1] = v83;
  sub_10001BE90((uint64_t)v46, &qword_10081EF98);
  v86 = v259;
  v87 = v253;
  v88 = v254;
  v260 = *(_QWORD *)(v259 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v260)(v253, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v254);
  v89 = sub_1004E3324();
  v90 = v230;
  View.workoutViewStyle(_:)(v87, v47, v89);
  v259 = *(_QWORD *)(v86 + 8);
  ((void (*)(char *, uint64_t))v259)(v87, v88);
  v91 = sub_10001BE90((uint64_t)v49, &qword_100837A38);
  v92 = v267;
  static AccessibilityChildBehavior.combine.getter(v91);
  v269 = v47;
  v270 = v89;
  v93 = v81;
  v94 = swift_getOpaqueTypeConformance2(&v269, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v95 = v229;
  v96 = v232;
  View.accessibilityElement(children:)(v92, v232, v94);
  v243 = *(_QWORD *)(v243 + 8);
  ((void (*)(char *, uint64_t))v243)(v92, v268);
  (*(void (**)(char *, uint64_t))(v231 + 8))(v90, v96);
  (*(void (**)(char *, char *, uint64_t))(v262 + 32))(v261, v95, v263);
  v97 = v234;
  v98 = v233;
  v99 = v235;
  (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v233, v81 + *(int *)(v59 + 24), v235);
  v100 = (*(uint64_t (**)(char *, uint64_t))(v97 + 88))(v98, v99);
  if (v100 == enum case for MetricPlatterType.power(_:))
  {
    v101 = *(_QWORD *)(v81 + 8);
    v102 = swift_retain(v101);
    v103 = MetricsPublisher.powerMetricsPublisher.getter(v102);
    v104 = swift_release(v101);
    v105 = (CHWorkoutDetailHeartRateTableViewCell *)PowerMetricsPublisher.powerChartData.getter(v104);
    v106 = swift_release(v103);
    v107 = (uint64_t)v228;
    v108 = v227;
    v109 = v226;
    v110 = v225;
    v111 = v224;
    v112 = v223;
  }
  else
  {
    v108 = v227;
    v109 = v226;
    v112 = v223;
    if (v100 == enum case for MetricPlatterType.elevation(_:))
    {
      v113 = *(_QWORD *)(v93 + 8);
      v114 = swift_retain(v113);
      v105 = (CHWorkoutDetailHeartRateTableViewCell *)MetricsPublisher.elevationChartData.getter(v114);
      v106 = swift_release(v113);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
      v105 = &_swiftEmptyArrayStorage;
    }
    v107 = (uint64_t)v228;
    v110 = v225;
    v111 = v224;
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v112 + 16))(v111, v216, v110, v106);
  v115 = v237;
  SessionChart.init(data:chartProperties:faking:)(v105, v111, 0);
  v116 = sub_1000083D8(&qword_100837A58, (uint64_t (*)(uint64_t))&type metadata accessor for SessionChart, (uint64_t)&protocol conformance descriptor for SessionChart);
  v117 = (uint64_t)v240;
  v118 = v239;
  View.accessibilityIdentifier(_:)(0x7261684361746144, 0xE900000000000074, v239, v116);
  v119 = (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v115, v118);
  LOBYTE(v118) = static Edge.Set.top.getter(v119);
  v120 = EdgeInsets.init(_all:)(4.0);
  v122 = v121;
  v124 = v123;
  v126 = v125;
  v127 = v241;
  sub_100021CC0(v117, v241, &qword_100837A18);
  v128 = v127 + *(int *)(v236 + 36);
  *(_BYTE *)v128 = v118;
  *(double *)(v128 + 8) = v120;
  *(_QWORD *)(v128 + 16) = v122;
  *(_QWORD *)(v128 + 24) = v124;
  *(_QWORD *)(v128 + 32) = v126;
  *(_BYTE *)(v128 + 40) = 0;
  v129 = sub_10001BE90(v117, &qword_100837A18);
  LOBYTE(v118) = static Edge.Set.bottom.getter(v129);
  sub_100021CC0(v127, v107, &qword_100837A20);
  v130 = v107 + *(int *)(v108 + 36);
  *(_BYTE *)v130 = v118;
  *(_OWORD *)(v130 + 8) = 0u;
  *(_OWORD *)(v130 + 24) = 0u;
  *(_BYTE *)(v130 + 40) = 1;
  sub_10001BE90(v127, &qword_100837A20);
  ((void (*)(char *, _QWORD, uint64_t))v260)(v87, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v88);
  v131 = sub_1000F4518(&qword_100837A60, &qword_100837A28, (void (*)(void))sub_1004E33A8);
  View.workoutViewStyle(_:)(v87, v108, v131);
  ((void (*)(char *, uint64_t))v259)(v87, v88);
  sub_10001BE90(v107, &qword_100837A28);
  (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v264, v109, v255);
  v132 = *(_QWORD *)(v93 + v256);
  if (*(_QWORD *)(v132 + 16) < 2uLL)
    goto LABEL_19;
  v133 = *(_QWORD *)(v132 + 40);
  v134 = *(_QWORD *)(v93 + v252);
  v136 = *(_QWORD *)(v93 + 8);
  v135 = *(_QWORD *)(v93 + 16);
  swift_retain(v136);
  v137 = v222;
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(v133, v135, v134, v136);
  swift_release(v136);
  if (*(_QWORD *)(v132 + 16) < 2uLL)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v138 = (id)HKWorkoutMetricTypeDescription(*(_QWORD *)(v132 + 40));
  if (!v138)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v139 = v138;
  v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v138);
  v142 = v141;

  v143 = (uint64_t)v217;
  v144 = v266;
  View.accessibilityIdentifier(_:)(v140, v142, v266, v245);
  swift_bridgeObjectRelease(v142, v145, v146, v147, v148, v149, v150, v151);
  v244(v137, v144);
  v152 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  ((void (*)(char *, _QWORD, uint64_t))v260)(v87, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v88);
  v153 = sub_1000E25D4();
  v154 = v219;
  v155 = v249;
  View.workoutViewStyle(_:)(v87, v249, v153);
  ((void (*)(char *, uint64_t))v259)(v87, v88);
  v156 = sub_10001BE90(v143, &qword_10081EF98);
  v157 = v267;
  static AccessibilityChildBehavior.combine.getter(v156);
  v269 = v155;
  v270 = v153;
  v158 = swift_getOpaqueTypeConformance2(&v269, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v159 = v218;
  v160 = v250;
  View.accessibilityElement(children:)(v157, v250, v158);
  ((void (*)(char *, uint64_t))v243)(v157, v268);
  v161 = *(void (**)(char *, uint64_t))(v220 + 8);
  v161(v154, v160);
  v162 = (void (*)(char *, char *, uint64_t))v258[4];
  v162(v257, v159, v251);
  v163 = *(_QWORD *)(v93 + v256);
  if (*(_QWORD *)(v163 + 16) < 3uLL)
    goto LABEL_21;
  v164 = *(_QWORD *)(v163 + 48);
  v165 = *(_QWORD *)(v93 + v252);
  v168 = v93 + 8;
  v167 = *(_QWORD *)(v93 + 8);
  v166 = *(_QWORD *)(v168 + 8);
  swift_retain(v167);
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(v164, v166, v165, v167);
  swift_release(v167);
  if (*(_QWORD *)(v163 + 16) < 3uLL)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v169 = (id)HKWorkoutMetricTypeDescription(*(_QWORD *)(v163 + 48));
  if (v169)
  {
    v170 = v169;
    v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v169);
    v173 = v172;

    v174 = (uint64_t)v212;
    v175 = v171;
    v176 = v266;
    v177 = v248;
    View.accessibilityIdentifier(_:)(v175, v173, v266, v245);
    swift_bridgeObjectRelease(v173, v178, v179, v180, v181, v182, v183, v184);
    v244(v177, v176);
    v185 = v253;
    v186 = v152;
    v187 = v254;
    ((void (*)(char *, uint64_t, uint64_t))v260)(v253, v186, v254);
    v188 = v210;
    View.workoutViewStyle(_:)(v185, v249, v153);
    ((void (*)(char *, uint64_t))v259)(v185, v187);
    v189 = sub_10001BE90(v174, &qword_10081EF98);
    v190 = v267;
    static AccessibilityChildBehavior.combine.getter(v189);
    v191 = v213;
    v192 = v250;
    View.accessibilityElement(children:)(v190, v250, v158);
    ((void (*)(char *, uint64_t))v243)(v190, v268);
    v161(v188, v192);
    v193 = v214;
    v194 = v251;
    v162(v214, v191, v251);
    v195 = *(void (**)(char *, char *, uint64_t))(v262 + 16);
    v196 = v246;
    v197 = v263;
    v195(v246, v261, v263);
    v198 = *(void (**)(char *, char *, uint64_t))(v265 + 16);
    v199 = v255;
    v198(v247, v264, v255);
    v200 = (void (*)(char *, char *, uint64_t))v258[2];
    v200(v242, v257, v194);
    v201 = v211;
    v200(v211, v193, v194);
    v202 = v215;
    v195(v215, v196, v197);
    v203 = (int *)sub_100047110(&qword_100837A78);
    v204 = v247;
    v198(&v202[v203[12]], v247, v199);
    v205 = v242;
    v200(&v202[v203[16]], v242, v194);
    v200(&v202[v203[20]], v201, v194);
    v206 = (void (*)(char *, uint64_t))v258[1];
    v206(v193, v194);
    v206(v257, v194);
    v207 = *(void (**)(char *, uint64_t))(v265 + 8);
    v207(v264, v199);
    v208 = *(void (**)(char *, uint64_t))(v262 + 8);
    v209 = v263;
    v208(v261, v263);
    v206(v201, v194);
    v206(v205, v194);
    v207(v204, v199);
    v208(v246, v209);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1004E328C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(char *, uint64_t, uint64_t, uint64_t);
  char *v6;
  uint64_t v7;

  if (*(_QWORD *)(*(_QWORD *)(v2 + *(int *)(a1 + 28)) + 16) > 2uLL)
  {
    sub_1004E2158(v2, a2);
    v4 = sub_100047110(&qword_100837A10);
    v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v4 = sub_100047110(&qword_100837A10);
    v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t sub_1004E3310(double a1, double a2, double a3, double a4)
{
  return sub_1004E35BC(a1, a2, a3, a4);
}

unint64_t sub_1004E3324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837A50;
  if (!qword_100837A50)
  {
    v1 = sub_100007050(&qword_100837A38);
    sub_1000E25D4();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837A50);
  }
  return result;
}

uint64_t sub_1004E33A8()
{
  return sub_1000F4518(&qword_100837A68, &qword_100837A20, (void (*)(void))sub_1004E33C4);
}

unint64_t sub_1004E33C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837A70;
  if (!qword_100837A70)
  {
    v1 = sub_100007050(&qword_100837A18);
    sub_1000083D8(&qword_100837A58, (uint64_t (*)(uint64_t))&type metadata accessor for SessionChart, (uint64_t)&protocol conformance descriptor for SessionChart);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837A70);
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorGraphicsMetricsViewLayout()
{
  return &type metadata for MirrorGraphicsMetricsViewLayout;
}

unint64_t sub_1004E3474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837A80;
  if (!qword_100837A80)
  {
    v1 = sub_100007050(&qword_100837A88);
    sub_1004E34D8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100837A80);
  }
  return result;
}

unint64_t sub_1004E34D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837A90;
  if (!qword_100837A90)
  {
    v1 = sub_100007050(&qword_100837A10);
    sub_100028384(&qword_1008350E8, &qword_1008350F0, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_100837A98, &qword_100837AA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837A90);
  }
  return result;
}

unint64_t sub_1004E3578()
{
  unint64_t result;

  result = qword_100837AA8;
  if (!qword_100837AA8)
  {
    result = swift_getWitnessTable(&unk_100641B90, &type metadata for MirrorGraphicsMetricsViewLayout);
    atomic_store(result, (unint64_t *)&qword_100837AA8);
  }
  return result;
}

uint64_t sub_1004E35BC(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v27;
  id v28;
  char v29;
  double v30;
  id v31;
  char v32;
  double v33;
  id v34;
  char v35;
  double v36;
  double v37;
  id v38;
  char v39;
  double v40;
  id v41;
  char v42;
  id v43;
  char v44;
  double v45;
  id v46;
  char v47;
  __n128 v48;
  __n128 v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  uint64_t v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for LayoutSubview(0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for MetricPlatterConstants(0);
  v87 = *(double *)(v89 - 8);
  __chkstk_darwin(v89);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v83 - v17;
  v19 = type metadata accessor for LayoutSubviews(0);
  v20 = sub_1000083D8((unint64_t *)&qword_10081EFF0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(&v92, v19, v20);
  dispatch thunk of Collection.endIndex.getter(&v91, v19, v20);
  v21 = dispatch thunk of Collection.distance(from:to:)(&v92, &v91, v19, v20);
  if (v21 >= 2)
  {
    MetricPlatterConstants.init()(v21);
    v27 = (void *)objc_opt_self(UIDevice);
    v28 = objc_msgSend(v27, "currentDevice");
    v29 = UIDevice.isLargeDisplayZoomEnabled.getter();

    v30 = 60.0;
    if ((v29 & 1) != 0)
      v30 = 61.0;
    v86 = v30;
    v31 = objc_msgSend(v27, "currentDevice");
    v32 = UIDevice.isLargeDisplayZoomEnabled.getter();

    v33 = 69.0;
    if ((v32 & 1) != 0)
      v33 = 80.0;
    v85 = v33;
    v34 = objc_msgSend(v27, "currentDevice");
    v35 = UIDevice.isLargeDisplayZoomEnabled.getter();

    v83 = a2;
    v36 = 65.0;
    if ((v35 & 1) != 0)
      v37 = 84.0;
    else
      v37 = 65.0;
    v84 = v37;
    v38 = objc_msgSend(v27, "currentDevice", *(_QWORD *)&v83);
    v39 = UIDevice.isLargeDisplayZoomEnabled.getter();

    if ((v39 & 1) != 0)
      v40 = 78.0;
    else
      v40 = 73.0;
    v41 = objc_msgSend(v27, "currentDevice");
    v42 = UIDevice.isLargeDisplayZoomEnabled.getter();

    if ((v42 & 1) != 0)
      v36 = 78.0;
    v43 = objc_msgSend(v27, "currentDevice");
    v44 = UIDevice.isLargeDisplayZoomEnabled.getter();

    if ((v44 & 1) != 0)
      v45 = 84.0;
    else
      v45 = 74.0;
    v46 = objc_msgSend(v27, "currentDevice");
    v47 = UIDevice.isLargeDisplayZoomEnabled.getter();

    if ((v47 & 1) != 0)
      v50 = 84.0;
    else
      v50 = 74.0;
    v48.n128_f64[0] = v84;
    v51 = v40;
    v52 = a3;
    v49.n128_f64[0] = v36;
    v53 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(v86, v85, v48, v51, v49, v45, v50);
    v54 = v83;
    v84 = v83 + a4 - v53;
    v57 = MetricPlatterConstants.metricMaxHeight.getter(v55);
    v58 = a4 - v53 - v57 * 4.0;
    if (v58 < 0.0)
      v59 = 0.0;
    else
      v59 = v58 / 3.0;
    v86 = *(double *)&v18;
    v60 = MetricPlatterConstants.heightOfChartLabels.getter(v56);
    v85 = (v52 + -7.0) * 0.5;
    v62 = MetricPlatterConstants.init()(v61);
    v63 = MetricPlatterConstants.metricMaxHeight.getter(v62);
    v64 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v87 + 8);
    v65 = v15;
    v66 = v89;
    v64(v65, v89);
    v87 = v63;
    v67 = LayoutSubviews.subscript.getter(0);
    v68 = static UnitPoint.topLeading.getter(v67);
    LOBYTE(v92) = 0;
    LOBYTE(v91) = 0;
    ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double))LayoutSubview.place(at:anchor:proposal:))(*(_QWORD *)&v52, 0, v57 + v59, 0, a1, v54 + 4.0, v68, v69);
    v70 = *(void (**)(char *, uint64_t))(v88 + 8);
    v71 = v90;
    v70(v13, v90);
    v72 = LayoutSubviews.subscript.getter(1);
    v73 = static UnitPoint.topLeading.getter(v72);
    LOBYTE(v92) = 0;
    LOBYTE(v91) = 0;
    ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double))LayoutSubview.place(at:anchor:proposal:))(*(_QWORD *)&v52, 0, v60 + v57 + v57 + v59, 0, a1, v57 + v59 + v54, v73, v74);
    v70(v13, v71);
    dispatch thunk of Collection.startIndex.getter(&v92, v19, v20);
    dispatch thunk of Collection.endIndex.getter(&v91, v19, v20);
    if (dispatch thunk of Collection.distance(from:to:)(&v92, &v91, v19, v20) >= 3)
    {
      v75 = LayoutSubviews.subscript.getter(2);
      v76 = v84 - v57;
      v77 = static UnitPoint.topLeading.getter(v75);
      LOBYTE(v92) = 0;
      LOBYTE(v91) = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v85, 0, *(_QWORD *)&v87, 0, a1, v76, v77, v78);
      v70(v13, v71);
    }
    dispatch thunk of Collection.startIndex.getter(&v92, v19, v20);
    dispatch thunk of Collection.endIndex.getter(&v91, v19, v20);
    if (dispatch thunk of Collection.distance(from:to:)(&v92, &v91, v19, v20) > 3)
    {
      v79 = LayoutSubviews.subscript.getter(3);
      v80 = v84 - v57;
      v81 = static UnitPoint.topLeading.getter(v79);
      LOBYTE(v92) = 0;
      LOBYTE(v91) = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v85, 0, *(_QWORD *)&v87, 0, v52 * 0.5 + a1 + 3.5, v80, v81, v82);
      v70(v13, v71);
    }
    return ((uint64_t (*)(_QWORD, uint64_t))v64)(*(_QWORD *)&v86, v66);
  }
  else
  {
    v22 = static WOLog.dataLink.getter(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Received less than 2 subviews in the Graphics Metrics View Layout", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t getEnumTagSinglePayload for ActivityTrendType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityTrendType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1004E3D6C + 4 * byte_100641C65[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1004E3DA0 + 4 * byte_100641C60[v4]))();
}

uint64_t sub_1004E3DA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E3DA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E3DB0);
  return result;
}

uint64_t sub_1004E3DBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E3DC4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1004E3DC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E3DD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1004E3DDC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1004E3E0C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

void sub_1004E4168(char a1)
{
  __asm { BR              X10 }
}

id sub_1004E41A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11, uint64_t a12, uint64_t a13, objc_super a14, objc_super a15, objc_super a16, uint64_t a17, uint64_t a18, objc_super a19, uint64_t a20,uint64_t a21,objc_super a22,uint64_t a23,uint64_t a24,objc_super a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  Class isa;
  Class v49;
  objc_class *v50;
  char *v51;
  id v52;
  Class v53;
  objc_class *v54;
  char *v55;
  objc_super v57;
  objc_super v58;

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.84706, 1.0, 1.0).super.isa;
  v49 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.62727, 1.0).super.isa;
  v50 = (objc_class *)type metadata accessor for GradientColors();
  v51 = (char *)objc_allocWithZone(v50);
  *(_QWORD *)&v51[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(_QWORD *)&v51[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v49;
  v58.receiver = v51;
  v58.super_class = v50;
  v52 = objc_msgSendSuper2(&v58, *(SEL *)(v47 + 560));
  v53 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.96471, 1.0).super.isa;
  v54 = (objc_class *)type metadata accessor for MetricColors();
  v55 = (char *)objc_allocWithZone(v54);
  *(_QWORD *)&v55[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v52;
  *(_QWORD *)&v55[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v53;
  v57.receiver = v55;
  v57.super_class = v54;
  return objc_msgSendSuper2(&v57, *(SEL *)(v47 + 560));
}

void sub_1004E4B54(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1004E4B8C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

void sub_1004E4CE8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1004E4D18()
{
  id v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x1004E5008);
  }
  v1 = v0;
  objc_msgSend(v0, "isStandalonePhoneFitnessMode");

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

void sub_1004E5034(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1004E5064()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

void sub_1004E537C(int a1, id a2, uint64_t a3, char a4)
{
  id v6;
  id v7;

  v6 = objc_msgSend(a2, "userActiveEnergyBurnedUnit");
  v7 = objc_msgSend((id)objc_opt_self(HKUnit), "kilocalorieUnit");
  sub_10001E724(0, (unint64_t *)&qword_1008274D0, HKUnit_ptr);
  static NSObject.== infix(_:_:)(v6, v7);

  objc_msgSend(a2, "userDistanceUnitForDistanceType:", 1);
  __asm { BR              X10 }
}

uint64_t sub_1004E5454()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

unint64_t sub_1004E5D3C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1004E5E6C(*a1);
  *a2 = result;
  return result;
}

void sub_1004E5D64(_QWORD *a1@<X8>)
{
  *a1 = &off_10077B648;
}

uint64_t sub_1004E5D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004E5E7C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004E5DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004E5E7C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1004E5E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837AB0;
  if (!qword_100837AB0)
  {
    v1 = sub_100007050(&qword_100837AB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100837AB0);
  }
  return result;
}

unint64_t sub_1004E5E6C(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

unint64_t sub_1004E5E7C()
{
  unint64_t result;

  result = qword_100837AC8;
  if (!qword_100837AC8)
  {
    result = swift_getWitnessTable(&unk_100641D2C, &type metadata for ActivityTrendType);
    atomic_store(result, (unint64_t *)&qword_100837AC8);
  }
  return result;
}

void sub_1004E5EC0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for URL(0);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_1004E5F90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  NSString *v43;
  NSString *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  id v46;
  NSString v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  Class isa;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;

  URL.init(string:)(0xD000000000000042, 0x80000001006A2B50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v0) == 1)
  {
    v14 = sub_10012089C(v3);
    v15 = static os_log_type_t.fault.getter(v14);
    v16 = (void *)HKLogActivity;
    v17 = v15;
    if (os_log_type_enabled(HKLogActivity, v15))
    {
      v25 = v16;
      swift_bridgeObjectRetain(0x80000001006A2B50);
      v26 = swift_slowAlloc(22, -1);
      v27 = swift_slowAlloc(64, -1);
      *(_QWORD *)(v6 - 88) = v27;
      *(_DWORD *)v26 = 136315394;
      *(_QWORD *)(v6 - 96) = sub_10003E8EC(v4 - 28, 0x80000001006A2980, (uint64_t *)(v6 - 88));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 96, v6 - 88, v26 + 4);
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain(0x80000001006A2B50);
      *(_QWORD *)(v6 - 96) = sub_10003E8EC(0xD000000000000042, 0x80000001006A2B50, (uint64_t *)(v6 - 88));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 96, v6 - 88, v26 + 14);
      swift_bridgeObjectRelease_n(0x80000001006A2B50, 3);
      _os_log_impl((void *)&_mh_execute_header, v25, v17, "%s unable to create health URL from %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x80000001006A2B50, v18, v19, v20, v21, v22, v23, v24);
    }
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x80000001006A2B50, v7, v8, v9, v10, v11, v12, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v3, v0);
    v28 = sub_100047110((uint64_t *)&unk_100828340);
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100629280;
    v30 = objc_allocWithZone((Class)NSAttributedString);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "initWithString:", v31);

    *(_QWORD *)(v29 + 32) = v32;
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

    v38 = sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v38, v6 - 208);
    *(_OWORD *)(inited + 16) = xmmword_100620BC0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v40 = sub_100047110((uint64_t *)&unk_10082EE00);
    *(_QWORD *)(inited + 40) = v1;
    *(_QWORD *)(inited + 64) = v40;
    *(_QWORD *)(inited + 72) = NSLinkAttributeName;
    *(_QWORD *)(inited + 104) = v0;
    v41 = sub_10004C480((_QWORD *)(inited + 80));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 16))(v41, v2, v0);
    v42 = v1;
    v43 = NSLinkAttributeName;
    v44 = NSFontAttributeName;
    v45 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
    v46 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v37);
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37, v48, v49, v50, v51, v52, v53, v54);
    type metadata accessor for Key(0);
    sub_100135B1C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v45, v56, v57, v58, v59, v60, v61, v62);
    v63 = objc_msgSend(v46, "initWithString:attributes:", v47, isa);
    swift_bridgeObjectRelease(v37, v64, v65, v66, v67, v68, v69, v70);

    *(_QWORD *)(v29 + 40) = v63;
    *(_QWORD *)(v6 - 88) = v29;
    v72 = specialized Array._endMutation()(v71);
    v73 = *(_QWORD *)(v6 - 88);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v2, v0, v72);
  }
  return v73;
}

uint64_t sub_1004E6440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Language;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Band;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  void (*v39)(char *, char *, uint64_t);
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  char *v45;
  Swift::String v46;
  Swift::String v47;
  _QWORD v48[6];
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;

  v76 = a2;
  v55 = type metadata accessor for Calendar.Component(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v53 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Calendar(0);
  v51 = *(_QWORD *)(v52 - 8);
  v3 = __chkstk_darwin(v52);
  v50 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0, v3);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  v6 = __chkstk_darwin(v5);
  v64 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0, v6);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v63 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Date.FormatStyle(0);
  v62 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v61 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v66 = (char *)v48 - v11;
  v12 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  __chkstk_darwin(v12);
  v58 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v14 = type metadata accessor for Date(0);
  v74 = *(_QWORD *)(v14 - 8);
  v75 = v14;
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v71 = (char *)v48 - v16;
  __chkstk_darwin(v17);
  v72 = (char *)v48 - v18;
  __chkstk_darwin(v19);
  v73 = (char *)v48 - v20;
  Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
  __chkstk_darwin(Language);
  v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v77 = (uint64_t)v48 - v25;
  v26 = sub_100047110(&qword_100836920);
  __chkstk_darwin(v26);
  v28 = (char *)v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  Band = type metadata accessor for TrainingLoadBand(0);
  v30 = *(_QWORD *)(Band - 8);
  __chkstk_darwin(Band);
  v32 = (char *)v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)v48 - v35;
  TrainingLoadViewModel.trainingLoadBandForToday.getter(v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, Band) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v36, v28, Band);
    v39 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v49 = v36;
    v39(v32, v36, Band);
    v48[5] = v30;
    v40 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v32, Band);
    if (v40 == enum case for TrainingLoadBand.wellBelow(_:)
      || v40 == enum case for TrainingLoadBand.below(_:)
      || v40 == enum case for TrainingLoadBand.near(_:)
      || v40 == enum case for TrainingLoadBand.above(_:)
      || v40 == enum case for TrainingLoadBand.wellAbove(_:))
    {
      v41 = v77;
      sub_1004E74A8(v76, v77);
      v42 = sub_1004E81BC();
      v44 = v43;
      sub_1004E8920(v41, (uint64_t)v23);
      v45 = (char *)&loc_1004E6984
          + *((int *)qword_1004E7458 + swift_getEnumCaseMultiPayload(v23, Language));
      v48[4] = v42;
      LODWORD(v76) = v44;
      __asm { BR              X10 }
    }
    v78 = 0;
    v79 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v46._object = (void *)0x80000001006A3270;
    v46._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v46);
    _print_unlocked<A, B>(_:_:)(v49, &v78, Band, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v47._countAndFlagsBits = 46;
    v47._object = (void *)0xE100000000000000;
    String.append(_:)(v47);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v78, v79, "FitnessApp/TrainingLoadLanguageGenerator.swift", 46, 2, 86, 0);
    __break(1u);
    JUMPOUT(0x1004E7458);
  }
  sub_10001BE90((uint64_t)v28, &qword_100836920);
  return sub_1004E85D4(v37);
}

uint64_t type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(uint64_t a1)
{
  uint64_t result;

  result = qword_100837B68;
  if (!qword_100837B68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrainingLoadLanguageGenerator.LastWorkoutState);
  return result;
}

uint64_t sub_1004E74A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t Language;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v55 = a2;
  v3 = type metadata accessor for Calendar.Component(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v11);
  v52 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  v54 = v17;
  __chkstk_darwin(v16);
  v51 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v50 - v23;
  v26 = Date.init()(v25);
  static Calendar.current.getter(v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Calendar.Component.day(_:), v3);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v6, -1, v24, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  KeyPath = swift_getKeyPath(&unk_100641E20);
  v56 = a1;
  v28 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v56, KeyPath, v28);
  swift_release(KeyPath);
  v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek);
  if (!*(_QWORD *)(v29 + 16))
  {
    sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_100828370);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v53);
    Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
    return swift_storeEnumTagMultiPayload(v55, Language, 4);
  }
  v30 = v55;
  sub_1000252E0(v29 + 32, (uint64_t)v57);
  v31 = v58;
  v32 = v59;
  sub_100016804(v57, v58);
  (*(void (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
  LOBYTE(v31) = Date.isSameDay(as:)(v24);
  v34 = v53;
  v33 = v54;
  v35 = *(void (**)(char *, uint64_t))(v54 + 8);
  v35(v21, v53);
  if ((v31 & 1) == 0)
  {
    v41 = (uint64_t)v15;
    v42 = v52;
    sub_100021CC0((uint64_t)v15, v52, (uint64_t *)&unk_100828370);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v42, 1, v34) == 1)
    {
      sub_10001BE90(v42, (uint64_t *)&unk_100828370);
    }
    else
    {
      v43 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v51, v42, v34);
      v44 = v58;
      v45 = v59;
      sub_100016804(v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
      LOBYTE(v44) = Date.isSameDay(as:)(v43);
      v35(v21, v34);
      if ((v44 & 1) != 0)
      {
        v46 = v58;
        v47 = v59;
        sub_100016804(v57, v58);
        (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
        v35(v43, v34);
        sub_10001BE90(v41, (uint64_t *)&unk_100828370);
        v35(v24, v34);
        v36 = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
        v37 = v30;
        v38 = 0;
        goto LABEL_11;
      }
      v35(v43, v34);
    }
    v48 = v58;
    v49 = v59;
    sub_100016804(v57, v58);
    (*(void (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
    sub_10001BE90(v41, (uint64_t *)&unk_100828370);
    v35(v24, v34);
    v36 = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
    v37 = v30;
    v38 = 1;
    goto LABEL_11;
  }
  sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_100828370);
  v35(v24, v34);
  v36 = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
  v37 = v30;
  v38 = 3;
LABEL_11:
  swift_storeEnumTagMultiPayload(v37, v36, v38);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v57);
}

uint64_t sub_1004E794C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t BaselineComparison;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t SampleDaySummary;
  uint64_t v19;
  uint64_t ChronicBaseline;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;

  v0 = type metadata accessor for LocalizationFeature(0);
  v54 = *(_QWORD *)(v0 - 8);
  v55 = v0;
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison(0, v1);
  v5 = *(_QWORD *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100837AD8);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100837AE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v54 - v16;
  TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter(v15);
  SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary(0);
  v19 = *(_QWORD *)(SampleDaySummary - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, SampleDaySummary) == 1)
  {
    sub_10001BE90((uint64_t)v10, &qword_100837AD8);
    ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ChronicBaseline - 8) + 56))(v17, 1, 1, ChronicBaseline);
  }
  else
  {
    TrainingLoadSampleDaySummary.trainingLoad.getter();
    v21 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v10, SampleDaySummary);
    TrainingLoadBaselineComparison.chronicBaseline.getter(v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, BaselineComparison);
    ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(ChronicBaseline - 8) + 56))(v17, 0, 1, ChronicBaseline);
  }
  sub_100021CC0((uint64_t)v17, (uint64_t)v13, &qword_100837AE0);
  type metadata accessor for TrainingLoadChronicBaseline(0);
  v22 = *(_QWORD *)(ChronicBaseline - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, ChronicBaseline) == 1)
  {
    sub_10001BE90((uint64_t)v13, &qword_100837AE0);
LABEL_10:
    v51 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v51, "localizedStringForKey:value:table:", v52, 0, 0);

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    goto LABEL_11;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v13, ChronicBaseline) != enum case for TrainingLoadChronicBaseline.insufficientData(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, ChronicBaseline);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v22 + 96))(v13, ChronicBaseline);
  v23 = sub_100047110(&qword_100837AF0);
  v24 = *(_QWORD *)&v13[*(int *)(v23 + 48)];
  v25 = *(_QWORD *)&v13[*(int *)(v23 + 64)];
  result = sub_10001BE90((uint64_t)v13, &qword_100837AE8);
  v27 = __OFSUB__(v25, v24);
  v28 = v25 - v24;
  if (!v27)
  {
    v30 = v54;
    v29 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v3, enum case for LocalizationFeature.workout(_:), v55);
    v31 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000031, 0x80000001006A3380, v3);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v29);
    v34 = sub_100047110((uint64_t *)&unk_100827460);
    v35 = swift_allocObject(v34, 72, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100622F90;
    *(_QWORD *)(v35 + 56) = &type metadata for Int;
    *(_QWORD *)(v35 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v35 + 32) = v28;
    v36 = static String.localizedStringWithFormat(_:_:)(v31, v33, v35);
    swift_bridgeObjectRelease(v33, v37, v38, v39, v40, v41, v42, v43);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v35, v44, v45, v46, v47, v48, v49, v50);
LABEL_11:
    sub_10001BE90((uint64_t)v17, &qword_100837AE0);
    return v36;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004E7D84()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t Band;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t SampleDaySummary;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  CHWorkoutDetailHeartRateTableViewCell *View;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int8 v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _BYTE *v36;
  void (*v37)(_BYTE *, _QWORD, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  _BYTE v62[4];
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  _BYTE *v70;
  char *v71;
  int v72;
  unsigned int v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v0 = sub_100047110(&qword_100836920);
  __chkstk_darwin(v0);
  v2 = &v62[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Band = type metadata accessor for TrainingLoadBand(0);
  v4 = *(_QWORD *)(Band - 8);
  __chkstk_darwin(Band);
  v6 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v62[-v8];
  __chkstk_darwin(v10);
  v74 = &v62[-v11];
  SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary(0);
  v13 = *(_QWORD *)(SampleDaySummary - 8);
  v14 = __chkstk_darwin(SampleDaySummary);
  v16 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  View = (CHWorkoutDetailHeartRateTableViewCell *)TrainingLoadViewModel.chronologicalTrainingLoadDaySummaries.getter(v14);
  v25 = View;
  v26 = *(_QWORD *)View->cellPadding;
  if (v26)
  {
    v70 = v6;
    v27 = v13;
    v28 = 0;
    v29 = 0;
    v75 = v27;
    v71 = (char *)View + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v73 = enum case for TrainingLoadBand.wellAbove(_:);
    v63 = enum case for TrainingLoadBand.above(_:);
    v65 = v4;
    v66 = v2;
    v68 = View;
    v69 = SampleDaySummary;
    v64 = v26;
    v67 = v16;
    while (v26 + v28 <= *(_QWORD *)v25->cellPadding)
    {
      v35 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v75 + 16))(v16, &v71[*(_QWORD *)(v75 + 72) * (v26 + v28 - 1)], SampleDaySummary);
      TrainingLoadSampleDaySummary.band.getter(v35);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, Band) == 1)
      {
        (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v16, SampleDaySummary);
        swift_bridgeObjectRelease(v25, v54, v55, v56, v57, v58, v59, v60);
        sub_10001BE90((uint64_t)v2, &qword_100836920);
        return -v28;
      }
      v72 = v29;
      v36 = v74;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v74, v2, Band);
      v37 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104);
      v37(v9, v73, Band);
      v38 = sub_1000083D8(&qword_100837AD0, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadBand, (uint64_t)&protocol conformance descriptor for TrainingLoadBand);
      dispatch thunk of RawRepresentable.rawValue.getter(&v77, Band, v38);
      dispatch thunk of RawRepresentable.rawValue.getter(&v76, Band, v38);
      v40 = v76;
      v39 = v77;
      v41 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
      v41(v9, Band);
      v42 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16);
      v43 = v70;
      v42(v70, v36, Band);
      if (v39 == v40)
      {
        v41(v43, Band);
        v30 = v72;
        v16 = v67;
      }
      else
      {
        v37(v9, v63, Band);
        dispatch thunk of RawRepresentable.rawValue.getter(&v77, Band, v38);
        dispatch thunk of RawRepresentable.rawValue.getter(&v76, Band, v38);
        v45 = v76;
        v44 = v77;
        v41(v9, Band);
        v41(v43, Band);
        v46 = v44 == v45;
        v30 = v72;
        v16 = v67;
        if (!v46)
        {
          v41(v74, Band);
          (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v16, v69);
          swift_bridgeObjectRelease(v68, v47, v48, v49, v50, v51, v52, v53);
          return -v28;
        }
      }
      v37(v9, v73, Band);
      v31 = v74;
      dispatch thunk of RawRepresentable.rawValue.getter(&v77, Band, v38);
      dispatch thunk of RawRepresentable.rawValue.getter(&v76, Band, v38);
      v33 = v76;
      v32 = v77;
      v41(v9, Band);
      v41(v31, Band);
      SampleDaySummary = v69;
      (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v16, v69);
      v34 = v30;
      if ((v30 & 0xFE) == 0)
        v34 = 1;
      if (v32 == v33)
        v29 = 2;
      else
        v29 = v34;
      --v28;
      v26 = v64;
      v4 = v65;
      v2 = v66;
      v25 = v68;
      if (!(v64 + v28))
        goto LABEL_19;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease(v25, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    swift_bridgeObjectRelease(View, v18, v19, v20, v21, v22, v23, v24);
  }
  return v26;
}

uint64_t sub_1004E81BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1004E7D84();
  if (result >= 6)
  {
    if (v5)
      return result;
    v6 = static WOLog.trainingLoad.getter(result);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      swift_slowDealloc(v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return 0;
}

uint64_t sub_1004E82D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v0 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v0 - 8);
  v43 = v0;
  __chkstk_darwin(v0);
  v41 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Date(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v12);
  v13 = sub_100047110((uint64_t *)&unk_100828720);
  v14 = type metadata accessor for Calendar.Component(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v13, v17 + *(_QWORD *)(v15 + 72), v16 | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100622F90;
  v19 = v18 + v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v19, enum case for Calendar.Component.dayOfYear(_:), v14);
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v18);
  swift_setDeallocating(v18);
  swift_arrayDestroy(v19, 1, v14);
  v21 = swift_deallocClassInstance(v18, 32, 7);
  Date.init()(v21);
  Calendar.dateComponents(_:from:)(v20, v4);
  swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v4, v46);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v44);
  v30 = DateComponents.dayOfYear.getter(v29);
  LOBYTE(v19) = v31;
  v32 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v19 & 1) != 0)
  {
    v35 = v41;
    v36 = static WOLog.trainingLoad.getter(v32);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Could not determine the day of the year, defaulting to variant 1.", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return 49;
  }
  else
  {
    if (v30 <= 0)
      v33 = -(-v30 & 3);
    else
      v33 = v30 & 3;
    v47 = v33 + 1;
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  }
}

uint64_t sub_1004E85D4(__n128 a1)
{
  uint64_t BaselineComparison;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t SampleDaySummary;
  uint64_t v16;
  uint64_t ChronicBaseline;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v25;

  BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison(0, a1);
  v2 = *(_QWORD *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100837AD8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100837AE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter(v12);
  SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary(0);
  v16 = *(_QWORD *)(SampleDaySummary - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, SampleDaySummary) == 1)
  {
    sub_10001BE90((uint64_t)v7, &qword_100837AD8);
    ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ChronicBaseline - 8) + 56))(v14, 1, 1, ChronicBaseline);
  }
  else
  {
    TrainingLoadSampleDaySummary.trainingLoad.getter();
    v18 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, SampleDaySummary);
    TrainingLoadBaselineComparison.chronicBaseline.getter(v18);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, BaselineComparison);
    ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(ChronicBaseline - 8) + 56))(v14, 0, 1, ChronicBaseline);
  }
  sub_100021CC0((uint64_t)v14, (uint64_t)v10, &qword_100837AE0);
  type metadata accessor for TrainingLoadChronicBaseline(0);
  v19 = *(_QWORD *)(ChronicBaseline - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, ChronicBaseline) == 1)
  {
    sub_10001BE90((uint64_t)v10, &qword_100837AE0);
LABEL_9:
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_10;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, ChronicBaseline) != enum case for TrainingLoadChronicBaseline.insufficientData(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, ChronicBaseline);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v10, ChronicBaseline);
  sub_10001BE90((uint64_t)v10, &qword_100837AE8);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_10:
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, 0, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  sub_10001BE90((uint64_t)v14, &qword_100837AE0);
  return v23;
}

uint64_t sub_1004E8920(uint64_t a1, uint64_t a2)
{
  uint64_t Language;

  Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Language - 8) + 16))(a2, a1, Language);
  return a2;
}

uint64_t sub_1004E8964(uint64_t a1)
{
  uint64_t Language;

  Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Language - 8) + 8))(a1, Language);
  return a1;
}

uint64_t *sub_1004E89A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1004E8A94(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 1)
  {
    v4 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1004E8AE0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1004E8BA4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1004E8964((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_1004E8C78(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1004E8D3C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1004E8964((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1004E8E10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void sub_1004E8E74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  int *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;

  v14 = (int *)type metadata accessor for MirrorView(0);
  v15 = (_QWORD *)((char *)a8 + v14[9]);
  v16 = (char *)a8 + v14[10];
  LOBYTE(v41) = 0;
  State.init(wrappedValue:)(&v43, &v41, &type metadata for Bool);
  v17 = *((_QWORD *)&v43 + 1);
  *v16 = v43;
  *((_QWORD *)v16 + 1) = v17;
  *(_QWORD *)((char *)a8 + v14[11]) = 0;
  *(_QWORD *)((char *)a8 + v14[12]) = 0;
  v18 = v14[13];
  v19.n128_u64[0] = 28.0;
  v20.n128_u64[0] = 26.0;
  *(double *)((char *)a8 + v18) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(18.0, 30.0, v19, 32.0, v20, 36.0, 36.0);
  v21 = v14[14];
  v22.n128_u64[0] = 8.0;
  v23.n128_u64[0] = 4.0;
  *(double *)((char *)a8 + v21) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(2.0, 4.0, v22, 8.0, v23, 13.0, 13.0);
  v24 = v14[15];
  v25.n128_u64[0] = 6.0;
  v26.n128_u64[0] = 0;
  *(double *)((char *)a8 + v24) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(19.0, 6.0, v25, 10.0, v26, 9.0, 15.0);
  v27 = v14[16];
  v41 = 0;
  v28 = sub_100047110(&qword_100826010);
  State.init(wrappedValue:)(&v43, &v41, v28);
  *(_OWORD *)((char *)a8 + v27) = v43;
  v29 = (char *)a8 + v14[17];
  v41 = 0;
  v42 = 1;
  v30 = sub_100047110(&qword_1008221A0);
  State.init(wrappedValue:)(&v43, &v41, v30);
  v31 = BYTE8(v43);
  v32 = v44;
  *(_QWORD *)v29 = v43;
  v29[8] = v31;
  *((_QWORD *)v29 + 2) = v32;
  v33 = type metadata accessor for LowPowerModeMonitor(0);
  v34 = sub_1000083D8(&qword_100831F48, (uint64_t (*)(uint64_t))&type metadata accessor for LowPowerModeMonitor, (uint64_t)&protocol conformance descriptor for LowPowerModeMonitor);
  swift_retain(a1);
  *a8 = ObservedObject.init(wrappedValue:)(v35, v33, v34);
  a8[1] = v36;
  a8[2] = a2;
  a8[3] = a3;
  v37 = type metadata accessor for MirrorControlsState(0);
  v38 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  Bindable<A>.init(wrappedValue:)(a4, v37, v38);
  swift_release(a1);
  *(_QWORD *)((char *)a8 + v14[8]) = a5;
  *v15 = a6;
  v15[1] = a7;
}

uint64_t type metadata accessor for MirrorView(uint64_t a1)
{
  uint64_t result;

  result = qword_100837C08;
  if (!qword_100837C08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorView);
  return result;
}

uint64_t *sub_1004E90F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  id v39;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v9 = (void *)a2[2];
    v8 = a2[3];
    v4[2] = (uint64_t)v9;
    v4[3] = v8;
    v10 = a3[7];
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    swift_retain(v7);
    v13 = v9;
    swift_retain(v8);
    v14 = sub_100047110(&qword_100837BA8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = a3[8];
    v16 = a3[9];
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    v18 = (uint64_t *)((char *)v4 + v16);
    v19 = (char *)a2 + v16;
    v20 = *(uint64_t *)((char *)a2 + v16);
    v21 = v17;
    if (v20)
    {
      v22 = *((_QWORD *)v19 + 1);
      *v18 = v20;
      v18[1] = v22;
      swift_retain(v22);
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    v24 = a3[10];
    v25 = a3[11];
    v26 = (char *)v4 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 1) = v28;
    *(uint64_t *)((char *)v4 + v25) = *(uint64_t *)((char *)a2 + v25);
    v29 = a3[13];
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)v4 + v29) = *(uint64_t *)((char *)a2 + v29);
    v30 = a3[15];
    *(uint64_t *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)v4 + v30) = *(uint64_t *)((char *)a2 + v30);
    v31 = a3[16];
    v32 = a3[17];
    v33 = (uint64_t *)((char *)v4 + v31);
    v34 = (char *)a2 + v31;
    v36 = *(void **)v34;
    v35 = *((_QWORD *)v34 + 1);
    *v33 = *(_QWORD *)v34;
    v33[1] = v35;
    v37 = (char *)v4 + v32;
    v38 = (char *)a2 + v32;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = v38[8];
    v23 = *((_QWORD *)v38 + 2);
    *((_QWORD *)v37 + 2) = v23;
    swift_retain(v28);
    v39 = v36;
    swift_retain(v35);
  }
  swift_retain(v23);
  return v4;
}

double sub_1004E9280(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));

  swift_release(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[7];
  v5 = sub_100047110(&qword_100837BA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = (_QWORD *)(a1 + a2[9]);
  if (*v6)
    swift_release(v6[1]);
  swift_release(*(_QWORD *)(a1 + a2[10] + 8));
  v7 = a1 + a2[16];

  swift_release(*(_QWORD *)(v7 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[17] + 16)).n128_u64[0];
  return result;
}

_QWORD *sub_1004E9340(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  id v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = (void *)a2[2];
  v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  swift_retain(v6);
  v12 = v8;
  swift_retain(v7);
  v13 = sub_100047110(&qword_100837BA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
  v14 = a3[8];
  v15 = a3[9];
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (char *)a2 + v15;
  v19 = *(_QWORD *)((char *)a2 + v15);
  v20 = v16;
  if (v19)
  {
    v21 = *((_QWORD *)v18 + 1);
    *v17 = v19;
    v17[1] = v21;
    swift_retain(v21);
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *v24 = *v25;
  v26 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 1) = v26;
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v27 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  v28 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  v29 = a3[16];
  v30 = a3[17];
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (char *)a2 + v29;
  v34 = *(void **)v32;
  v33 = *((_QWORD *)v32 + 1);
  *v31 = *(_QWORD *)v32;
  v31[1] = v33;
  v35 = (char *)a1 + v30;
  v36 = (char *)a2 + v30;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = *((_QWORD *)v36 + 2);
  *((_QWORD *)v35 + 2) = v37;
  swift_retain(v26);
  v38 = v34;
  swift_retain(v33);
  swift_retain(v37);
  return a1;
}

_QWORD *sub_1004E94A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = v8;
  v10 = v8;

  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_100047110(&qword_100837BA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[8];
  v18 = *(void **)((char *)a2 + v17);
  v19 = *(void **)((char *)a1 + v17);
  *(_QWORD *)((char *)a1 + v17) = v18;
  v20 = v18;

  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a1 + v21);
  v25 = *(_QWORD *)((char *)a2 + v21);
  if (!v24)
  {
    if (v25)
    {
      v28 = *((_QWORD *)v23 + 1);
      *v22 = v25;
      v22[1] = v28;
      swift_retain(v28);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    goto LABEL_8;
  }
  if (!v25)
  {
    swift_release(v22[1]);
    goto LABEL_7;
  }
  v26 = *((_QWORD *)v23 + 1);
  v27 = v22[1];
  *v22 = v25;
  v22[1] = v26;
  swift_retain(v26);
  swift_release(v27);
LABEL_8:
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *v30 = *v31;
  v32 = *((_QWORD *)v30 + 1);
  v33 = *((_QWORD *)v31 + 1);
  *((_QWORD *)v30 + 1) = v33;
  swift_retain(v33);
  swift_release(v32);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v34 = a3[16];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (char *)a2 + v34;
  v37 = *(void **)((char *)a1 + v34);
  v38 = *(void **)((char *)a2 + v34);
  *v35 = v38;
  v39 = v38;

  v40 = v35[1];
  v41 = *((_QWORD *)v36 + 1);
  v35[1] = v41;
  swift_retain(v41);
  swift_release(v40);
  v42 = a3[17];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)v44;
  v43[8] = v44[8];
  *(_QWORD *)v43 = v45;
  v46 = *((_QWORD *)v43 + 2);
  v47 = *((_QWORD *)v44 + 2);
  *((_QWORD *)v43 + 2) = v47;
  swift_retain(v47);
  swift_release(v46);
  return a1;
}

_OWORD *sub_1004E969C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100047110(&qword_100837BA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = *v13;
  if (*v13)
  {
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  v16 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v17 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v18 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  return a1;
}

_QWORD *sub_1004E979C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = (void *)a1[2];
  a1[2] = a2[2];

  v9 = a1[3];
  a1[3] = a2[3];
  swift_release(v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_100047110(&qword_100837BA8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  v15 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);

  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  v20 = *(_QWORD *)((char *)a2 + v16);
  if (!v19)
  {
    if (v20)
    {
      v23 = *((_QWORD *)v18 + 1);
      *v17 = v20;
      v17[1] = v23;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    goto LABEL_8;
  }
  if (!v20)
  {
    swift_release(v17[1]);
    goto LABEL_7;
  }
  v21 = *((_QWORD *)v18 + 1);
  v22 = v17[1];
  *v17 = v20;
  v17[1] = v21;
  swift_release(v22);
LABEL_8:
  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *v25 = *v26;
  v27 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release(v27);
  v28 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  v29 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v30 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(void **)((char *)a1 + v30);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);

  v34 = *((_QWORD *)v31 + 1);
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_release(v34);
  v35 = a3[17];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = *((_QWORD *)v36 + 2);
  *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
  swift_release(v38);
  return a1;
}

uint64_t sub_1004E9944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E9950);
}

uint64_t sub_1004E9950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_100837BA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1004E99D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E99DC);
}

uint64_t sub_1004E99DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_100837BA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1004E9A54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = &unk_100641EA8;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1004E9B14(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_100641EC0;
    v4[6] = &unk_100641EC0;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[9] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[10] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[12] = &unk_100641EC0;
    v4[13] = &unk_100641ED8;
    swift_initStructMetadata(a1, 256, 14, v4, a1 + 16);
  }
}

void sub_1004E9B14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100837C18)
  {
    v2 = type metadata accessor for MirrorControlsState(255);
    v3 = type metadata accessor for Bindable(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100837C18);
  }
}

uint64_t sub_1004E9B68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9D00, 1);
}

uint64_t sub_1004E9B78()
{
  return EnvironmentValues.legibilityWeight.getter();
}

uint64_t sub_1004E9B98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100047110(&qword_10082E8E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a1, (uint64_t)v4, &qword_10082E8E0);
  return EnvironmentValues.legibilityWeight.setter(v4);
}

void sub_1004E9C18(double a1, double a2, __n128 a3, double a4, __n128 a5)
{
  a5.n128_u64[0] = 0x4032800000000000;
  a3.n128_u64[0] = 20.0;
  qword_10086AD28 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(20.0, 20.0, a3, 21.0, a5, 21.0, 22.0);
}

uint64_t sub_1004E9C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v53 = a1;
  v3 = sub_100047110(&qword_10082E8E0);
  __chkstk_darwin(v3);
  v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100837C78);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for MirrorView(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100047110(&qword_100837C80);
  __chkstk_darwin(v47);
  v19 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_100047110(&qword_100837C88);
  v51 = *(_QWORD *)(v20 - 8);
  v52 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v19 = static Alignment.center.getter(v23);
  v19[1] = v24;
  v25 = (_QWORD *)((char *)v19 + *(int *)(sub_100047110(&qword_100837C90) + 44));
  sub_10004F8C8(v2, (uint64_t)v17, type metadata accessor for MirrorView);
  v26 = *(unsigned __int8 *)(v15 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = swift_allocObject(&unk_1007A5080, v27 + v16, v26 | 7);
  sub_1004EC548((uint64_t)v17, v28 + v27);
  sub_1004EBC04(v2, (uint64_t)v13);
  sub_100021CC0((uint64_t)v13, (uint64_t)v10, &qword_100837C78);
  *v25 = sub_1004EC58C;
  v25[1] = v28;
  v29 = sub_100047110(&qword_100837C98);
  sub_100021CC0((uint64_t)v10, (uint64_t)v25 + *(int *)(v29 + 48), &qword_100837C78);
  swift_retain(v28);
  sub_10001BE90((uint64_t)v13, &qword_100837C78);
  sub_10001BE90((uint64_t)v10, &qword_100837C78);
  v30 = swift_release(v28);
  v32 = v49;
  v31 = v50;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v49 + 104))(v7, enum case for DynamicTypeSize.large(_:), v50, v30);
  v33 = sub_100028384(&qword_100837CA0, &qword_100837C80, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.dynamicTypeSize(_:)(v7, v47, v33);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
  sub_10001BE90((uint64_t)v19, &qword_100837C80);
  KeyPath = swift_getKeyPath(&unk_100641F40);
  v35 = enum case for LegibilityWeight.regular(_:);
  v36 = type metadata accessor for LegibilityWeight(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v48, v35, v36);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
  v39 = sub_100047110(&qword_100837CA8);
  v40 = v53;
  v41 = (uint64_t *)(v53 + *(int *)(v39 + 36));
  v42 = sub_100047110(&qword_10082E9B0);
  sub_100021CC0(v38, (uint64_t)v41 + *(int *)(v42 + 28), &qword_10082E8E0);
  *v41 = KeyPath;
  v44 = v51;
  v43 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v40, v22, v52);
  sub_10001BE90(v38, &qword_10082E8E0);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v22, v43);
}

uint64_t sub_1004EA030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a3 = static Alignment.top.getter();
  a3[1] = v6;
  v7 = sub_100047110(&qword_100837D08);
  return sub_1004EA084(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_1004EA084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t KeyPath;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  CHWorkoutDetailHeartRateTableViewCell *v43;
  unint64_t v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  id v60;
  uint64_t v61;
  __n128 v62;
  __n128 v63;
  unsigned int *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t OpaqueTypeConformance2;
  char *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  unsigned __int8 v111;
  uint64_t v112;
  uint64_t v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  uint64_t v115;
  uint64_t v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  uint64_t v118;
  unsigned __int8 v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  _OWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned __int8 v164;
  unsigned __int8 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  _OWORD v172[2];
  CHWorkoutDetailHeartRateTableViewCell *v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  double v186;
  char *v187;
  unsigned __int8 v188;
  _OWORD v189[5];
  _QWORD v190[5];
  uint64_t v191;
  unsigned __int8 v192;
  uint64_t v193;
  unsigned __int8 v194;
  uint64_t v195;
  uint64_t v196;

  v158 = a2;
  v160 = a3;
  v4 = type metadata accessor for WorkoutAnimationStyle(0);
  v154 = *(_QWORD *)(v4 - 8);
  v155 = v4;
  __chkstk_darwin(v4);
  v153 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100837BA8);
  v159 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v137 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MirrorView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100837D10);
  __chkstk_darwin(v12);
  v14 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)sub_100047110(&qword_100837D18);
  __chkstk_darwin(v15);
  v17 = (char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100047110(&qword_100837D20);
  __chkstk_darwin(v139);
  v138 = (uint64_t)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100047110(&qword_100837D28);
  __chkstk_darwin(v144);
  v143 = (uint64_t)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100837D30);
  v148 = *(_QWORD *)(v20 - 8);
  v149 = v20;
  __chkstk_darwin(v20);
  v146 = (char *)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_100837D38);
  v151 = *(_QWORD *)(v22 - 8);
  v152 = v22;
  __chkstk_darwin(v22);
  v150 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100047110(&qword_100837D40);
  __chkstk_darwin(v147);
  v162 = (uint64_t)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v145 = (char *)&v136 - v26;
  __chkstk_darwin(v27);
  v163 = (uint64_t)&v136 - v28;
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v29);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 0;
  v30 = sub_100047110(&qword_100837D48);
  sub_1004EAB10(a1, (uint64_t)&v14[*(int *)(v30 + 44)]);
  sub_10004F8C8(a1, (uint64_t)v11, type metadata accessor for MirrorView);
  v31 = *(unsigned __int8 *)(v9 + 80);
  v32 = (v31 + 16) & ~v31;
  v140 = v31 | 7;
  v141 = v32 + v10;
  v33 = swift_allocObject(&unk_1007A5148, v32 + v10, v31 | 7);
  v142 = v32;
  v157 = v11;
  sub_1004EC548((uint64_t)v11, v33 + v32);
  v34 = type metadata accessor for DataLinkMonitor();
  v35 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
  v36 = EnvironmentObject.init()(v34, v35);
  sub_100233730(v36, v37, (uint64_t)sub_1004EC810, v33, (uint64_t)v189);
  v38 = *(int *)(v8 + 28);
  v161 = a1;
  v39 = v137;
  v156 = a1 + v38;
  Bindable.projectedValue.getter(v6);
  KeyPath = swift_getKeyPath(&unk_100641F70);
  Bindable<A>.subscript.getter(&v173, KeyPath, v6);
  v41 = swift_release(KeyPath);
  v42 = *(void (**)(char *, uint64_t, __n128))(v159 + 8);
  v159 = v6;
  v42(v39, v6, v41);
  v43 = v173;
  v44 = v174;
  LOBYTE(v6) = v175;
  v45 = &v17[v15[13]];
  v46 = v189[3];
  *((_OWORD *)v45 + 2) = v189[2];
  *((_OWORD *)v45 + 3) = v46;
  *((_OWORD *)v45 + 4) = v189[4];
  v47 = v189[1];
  *(_OWORD *)v45 = v189[0];
  *((_OWORD *)v45 + 1) = v47;
  sub_100045AD4((uint64_t)v14, (uint64_t)v17, &qword_100837D10);
  v48 = &v17[v15[14]];
  *(_QWORD *)v48 = v43;
  *((_QWORD *)v48 + 1) = v44;
  v48[16] = v6;
  *(_QWORD *)&v17[v15[15]] = 0;
  *(_QWORD *)&v17[v15[16]] = 0;
  if (qword_10081DCD0 != -1)
    swift_once(&qword_10081DCD0, sub_1003D1FAC);
  v49 = qword_10086A840;
  swift_retain(qword_10086A840);
  v51 = static Edge.Set.all.getter(v50);
  v52 = v138;
  sub_100021CC0((uint64_t)v17, v138, &qword_100837D18);
  v53 = v52 + *(int *)(v139 + 36);
  *(_QWORD *)v53 = v49;
  *(_BYTE *)(v53 + 8) = v51;
  sub_10001BE90((uint64_t)v17, &qword_100837D18);
  v54 = *(void **)(v161 + 16);
  v55 = v161;
  v56 = static ObservableObject.environmentStore.getter(v34, v35);
  v57 = v143;
  sub_100021CC0(v52, v143, &qword_100837D20);
  v58 = v144;
  v59 = (uint64_t *)(v57 + *(int *)(v144 + 36));
  *v59 = v56;
  v59[1] = (uint64_t)v54;
  v60 = v54;
  sub_10001BE90(v52, &qword_100837D20);
  v61 = *(_QWORD *)(v55 + 8);
  v62 = swift_retain(v61);
  LOBYTE(v52) = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter(v62);
  v63 = swift_release(v61);
  v64 = (unsigned int *)&enum case for WorkoutAnimationStyle.reduced(_:);
  v66 = v153;
  v65 = v154;
  if ((v52 & 1) == 0)
    v64 = (unsigned int *)&enum case for WorkoutAnimationStyle.fullSpeed(_:);
  v67 = v155;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v154 + 104))(v153, *v64, v155, v63);
  v68 = sub_1004EC824();
  v69 = v146;
  View.workoutAnimationStyle(_:)(v66, v58, v68);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  sub_10001BE90(v57, &qword_100837D28);
  v70 = *(_QWORD *)(v55 + 8);
  v71 = swift_retain(v70);
  LOBYTE(v67) = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter(v71);
  swift_release(v70);
  LOBYTE(v166) = v67 & 1;
  v72 = (uint64_t)v157;
  sub_10004F8C8(v55, (uint64_t)v157, type metadata accessor for MirrorView);
  v74 = v140;
  v73 = v141;
  v75 = swift_allocObject(&unk_1007A5170, v141, v140);
  v76 = v142;
  sub_1004EC548(v72, v75 + v142);
  v173 = (CHWorkoutDetailHeartRateTableViewCell *)v58;
  v174 = v68;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v173, &opaque type descriptor for <<opaque return type of View.workoutAnimationStyle(_:)>>, 1);
  v79 = v149;
  v78 = v150;
  View.onChange<A>(of:initial:_:)(&v166, 0, sub_1004EC600, v75, v149, &type metadata for Bool, OpaqueTypeConformance2, &protocol witness table for Bool);
  v80 = swift_release(v75);
  (*(void (**)(char *, uint64_t, __n128))(v148 + 8))(v69, v79, v80);
  sub_10004F8C8(v161, v72, type metadata accessor for MirrorView);
  v81 = swift_allocObject(&unk_1007A5198, v73, v74);
  sub_1004EC548(v72, v81 + v76);
  v83 = v151;
  v82 = v152;
  v84 = (uint64_t)v145;
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v145, v78, v152);
  v85 = (void (**)())(v84 + *(int *)(v147 + 36));
  *v85 = sub_1004EC600;
  v85[1] = (void (*)())v81;
  v85[2] = 0;
  v85[3] = 0;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v78, v82);
  sub_100045AD4(v84, v163, &qword_100837D40);
  v86 = sub_100047110((uint64_t *)&unk_10082BDC0);
  v87 = swift_allocObject(v86, 48, 7);
  *(_OWORD *)(v87 + 16) = xmmword_100620BC0;
  v88 = static Color.black.getter(v87);
  *(_QWORD *)(v87 + 32) = v88;
  v89 = static Color.clear.getter(v88);
  *(_QWORD *)(v87 + 40) = v89;
  v173 = (CHWorkoutDetailHeartRateTableViewCell *)v87;
  specialized Array._endMutation()(v89);
  v90 = v173;
  swift_bridgeObjectRetain(v173);
  Gradient.init(colors:)(v91);
  v92 = 1.0;
  LinearGradient.init(gradient:startPoint:endPoint:)(v190, v93, 0.5, 0.5, 0.5, 1.0);
  v161 = v190[0];
  v94 = v190[1];
  v95 = v190[2];
  v96 = v190[3];
  v97 = v190[4];
  swift_bridgeObjectRelease(v90, v98, v99, v100, v101, v102, v103, v104);
  v105 = GeometryProxy.safeAreaInsets.getter();
  v107 = v106 + v106;
  v108 = static Alignment.center.getter(v105);
  v110 = _FrameLayout.init(width:height:alignment:)(&v191, 0, 1, *(_QWORD *)&v107, 0, v108, v109);
  LODWORD(v151) = v192;
  v157 = (char *)v193;
  v158 = v191;
  v111 = v194;
  v154 = v196;
  v155 = v195;
  v112 = static Edge.Set.top.getter(v110);
  LODWORD(v153) = v112;
  v152 = static SafeAreaRegions.all.getter(v112);
  v113 = v159;
  Bindable.wrappedValue.getter(&v173, v159);
  v114 = v173;
  v115 = swift_getKeyPath(&unk_100641F70);
  v173 = v114;
  v116 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v173, v115, v116);
  swift_release(v115);
  LODWORD(v107) = v114->cellPadding[0];
  swift_release(v114);
  if (!LODWORD(v107))
    v92 = 0.0;
  v150 = (char *)static Animation.easeIn(duration:)(0.2);
  Bindable.wrappedValue.getter(&v173, v113);
  v117 = v173;
  v118 = swift_getKeyPath(&unk_100641F70);
  v173 = v117;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v173, v118, v116);
  swift_release(v118);
  v119 = v117->cellPadding[0];
  swift_release(v117);
  v165 = v151;
  v164 = v111;
  v120 = v162;
  sub_100021CC0(v163, v162, &qword_100837D40);
  LOBYTE(v118) = v165;
  LODWORD(v156) = v165;
  v121 = v164;
  LODWORD(v159) = v164;
  v122 = v160;
  sub_100021CC0(v120, v160, &qword_100837D40);
  v123 = (_OWORD *)(v122 + *(int *)(sub_100047110(&qword_100837D78) + 48));
  v124 = v161;
  *(_QWORD *)&v166 = v161;
  *((_QWORD *)&v166 + 1) = v94;
  *(_QWORD *)&v167 = v95;
  *((_QWORD *)&v167 + 1) = v96;
  *(_QWORD *)&v168 = v97;
  v125 = (uint64_t)v157;
  v126 = v158;
  *((_QWORD *)&v168 + 1) = v158;
  LOBYTE(v169) = v118;
  *((_QWORD *)&v169 + 1) = v157;
  LOBYTE(v170) = v121;
  v127 = v154;
  v128 = v155;
  *((_QWORD *)&v170 + 1) = v155;
  *(_QWORD *)&v171 = v154;
  v129 = v152;
  *((_QWORD *)&v171 + 1) = v152;
  v130 = (char)v153;
  LOBYTE(v172[0]) = (_BYTE)v153;
  *((double *)v172 + 1) = v92;
  v131 = v150;
  *(_QWORD *)&v172[1] = v150;
  BYTE8(v172[1]) = v119;
  v132 = v167;
  *v123 = v166;
  v123[1] = v132;
  v133 = v171;
  v123[4] = v170;
  v123[5] = v133;
  v123[6] = v172[0];
  *(_OWORD *)((char *)v123 + 105) = *(_OWORD *)((char *)v172 + 9);
  v134 = v169;
  v123[2] = v168;
  v123[3] = v134;
  sub_1004EC94C((uint64_t *)&v166);
  sub_10001BE90(v163, &qword_100837D40);
  v173 = (CHWorkoutDetailHeartRateTableViewCell *)v124;
  v174 = v94;
  v175 = v95;
  v176 = v96;
  v177 = v97;
  v178 = v126;
  v179 = v156;
  v180 = v125;
  v181 = v159;
  v182 = v128;
  v183 = v127;
  v184 = v129;
  v185 = v130;
  v186 = v92;
  v187 = v131;
  v188 = v119;
  sub_1004EC980(&v173);
  return sub_10001BE90(v162, &qword_100837D40);
}

uint64_t sub_1004EAB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  int v77;
  int v78;
  double v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  char v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _BYTE v115[12];
  int v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  unsigned __int8 v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  char v157;
  _QWORD v158[7];
  char v159;
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  char v165;
  double v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  char v176;

  v132 = a2;
  v3 = (int *)type metadata accessor for MirrorView(0);
  v134 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v136 = v4;
  v137 = (uint64_t)&v115[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v135 = &v115[-v6];
  v7 = type metadata accessor for MirrorStatusView(0);
  __chkstk_darwin(v7);
  v9 = &v115[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v131 = sub_100047110(&qword_1008226E0);
  __chkstk_darwin(v131);
  v11 = &v115[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v133 = sub_100047110(&qword_100837D80);
  __chkstk_darwin(v133);
  v140 = &v115[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v115[-v14];
  __chkstk_darwin(v16);
  v141 = &v115[-v17];
  v18 = type metadata accessor for MirrorPlatterView(0);
  __chkstk_darwin(v18);
  v139 = &v115[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v115[-v21];
  v23 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR___WODataLinkMonitor_publisher);
  v25 = *(id *)(a1 + v3[8]);
  swift_retain(v24);
  swift_retain(v23);
  v138 = v22;
  sub_1001C4060(v25, v24, v23, (uint64_t)v22);
  swift_retain(v24);
  sub_1003A8408(v26, (uint64_t)v9);
  v28 = static Edge.Set.leading.getter(v27);
  v29 = v28;
  v30 = static Edge.Set.trailing.getter(v28);
  v31 = Edge.Set.init(rawValue:)(0);
  v32 = Edge.Set.init(rawValue:)(v31);
  if (Edge.Set.init(rawValue:)(v32 & v29) != v29)
    v31 = Edge.Set.init(rawValue:)(v31 | v29);
  v33 = Edge.Set.init(rawValue:)(v31);
  if (Edge.Set.init(rawValue:)(v33 & v30) != v30)
    LOBYTE(v31) = Edge.Set.init(rawValue:)(v31 | v30);
  if (qword_10081DF40 != -1)
    swift_once(&qword_10081DF40, sub_1004E9C18);
  v34 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD28);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_10004F8C8((uint64_t)v9, (uint64_t)v11, type metadata accessor for MirrorStatusView);
  v41 = (double *)&v11[*(int *)(v131 + 36)];
  *(_BYTE *)v41 = v31;
  v41[1] = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  *((_BYTE *)v41 + 40) = 0;
  v42 = sub_100011F54((uint64_t)v9, type metadata accessor for MirrorStatusView);
  v43 = static Edge.Set.top.getter(v42);
  v44 = EdgeInsets.init(_all:)(*(double *)(a1 + v3[14]));
  v46 = v45;
  v48 = v47;
  v50 = v49;
  sub_100021CC0((uint64_t)v11, (uint64_t)v15, &qword_1008226E0);
  v51 = (double *)&v15[*(int *)(v133 + 36)];
  *(_BYTE *)v51 = v43;
  v51[1] = v44;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v50;
  *((_BYTE *)v51 + 40) = 0;
  sub_10001BE90((uint64_t)v11, &qword_1008226E0);
  sub_100045AD4((uint64_t)v15, (uint64_t)v141, &qword_100837D80);
  v52 = sub_100047110(&qword_100837BA8);
  Bindable.wrappedValue.getter(v158, v52);
  v131 = v158[0];
  v53 = v135;
  sub_10004F8C8(a1, (uint64_t)v135, type metadata accessor for MirrorView);
  v54 = *(unsigned __int8 *)(v134 + 80);
  v55 = (v54 + 16) & ~v54;
  v56 = v55 + v136;
  v57 = v54 | 7;
  v133 = swift_allocObject(&unk_1007A51C0, v55 + v136, v54 | 7);
  sub_1004EC548((uint64_t)v53, v133 + v55);
  v58 = v137;
  sub_10004F8C8(a1, v137, type metadata accessor for MirrorView);
  v130 = swift_allocObject(&unk_1007A51E8, v56, v57);
  sub_1004EC548(v58, v130 + v55);
  v59 = type metadata accessor for DataLinkMonitor();
  v60 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
  v61 = EnvironmentObject.init()(v59, v60);
  v119 = v62;
  v129 = static Edge.Set.top.getter(v61);
  v63 = EdgeInsets.init(_all:)(*(double *)(a1 + v3[13]));
  v127 = v64;
  v128 = v63;
  v125 = v66;
  v126 = v65;
  v124 = static Edge.Set.bottom.getter(v67);
  v68 = EdgeInsets.init(_all:)(*(double *)(a1 + v3[15]));
  v122 = v69;
  v123 = v68;
  v120 = v71;
  v121 = v70;
  v73 = static Edge.Set.leading.getter(v72);
  v74 = v73;
  v75 = static Edge.Set.trailing.getter(v73);
  v76 = Edge.Set.init(rawValue:)(0);
  v77 = Edge.Set.init(rawValue:)(v76);
  if (Edge.Set.init(rawValue:)(v77 & v74) != v74)
    v76 = Edge.Set.init(rawValue:)(v76 | v74);
  v78 = Edge.Set.init(rawValue:)(v76);
  if (Edge.Set.init(rawValue:)(v78 & v75) != v75)
    LOBYTE(v76) = Edge.Set.init(rawValue:)(v76 | v75);
  v143 = 0;
  v142 = 0;
  v79 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD28);
  v136 = v80;
  v137 = *(_QWORD *)&v79;
  v134 = v82;
  v135 = v81;
  v83 = v143;
  v84 = v142;
  v117 = v142;
  v118 = v143;
  v144 = 0;
  v85 = v139;
  sub_10004F8C8((uint64_t)v138, (uint64_t)v139, type metadata accessor for MirrorPlatterView);
  v86 = v140;
  sub_100021CC0((uint64_t)v141, (uint64_t)v140, &qword_100837D80);
  v116 = v144;
  v87 = v132;
  sub_10004F8C8((uint64_t)v85, v132, type metadata accessor for MirrorPlatterView);
  v88 = sub_100047110(&qword_100837D88);
  sub_100021CC0((uint64_t)v86, v87 + *(int *)(v88 + 48), &qword_100837D80);
  v89 = v87 + *(int *)(v88 + 64);
  v90 = v119;
  *(_QWORD *)&v145 = v61;
  *((_QWORD *)&v145 + 1) = v119;
  v91 = v131;
  *(_QWORD *)&v146 = v131;
  *((_QWORD *)&v146 + 1) = sub_1004ECA10;
  v92 = v133;
  *(_QWORD *)&v147 = v133;
  *((_QWORD *)&v147 + 1) = sub_1004ECB64;
  v132 = v61;
  v93 = v130;
  *(_QWORD *)&v148 = v130;
  LOBYTE(v86) = v129;
  BYTE8(v148) = v129;
  v95 = v127;
  v94 = v128;
  *(double *)&v149 = v128;
  *((_QWORD *)&v149 + 1) = v127;
  v97 = v125;
  v96 = v126;
  *(_QWORD *)&v150 = v126;
  *((_QWORD *)&v150 + 1) = v125;
  LOBYTE(v151) = v83;
  v98 = v124;
  BYTE8(v151) = v124;
  v100 = v122;
  v99 = v123;
  *(double *)&v152 = v123;
  *((_QWORD *)&v152 + 1) = v122;
  v102 = v120;
  v101 = v121;
  *(_QWORD *)&v153 = v121;
  *((_QWORD *)&v153 + 1) = v120;
  LOBYTE(v154) = v84;
  BYTE8(v154) = v76;
  *(_QWORD *)&v155 = v137;
  *((_QWORD *)&v155 + 1) = v136;
  *(_QWORD *)&v156 = v135;
  *((_QWORD *)&v156 + 1) = v134;
  v103 = v116;
  v157 = v116;
  v104 = v152;
  v105 = v153;
  *(_OWORD *)(v89 + 96) = v151;
  *(_OWORD *)(v89 + 112) = v104;
  v106 = v154;
  v107 = v155;
  v108 = v156;
  *(_BYTE *)(v89 + 192) = v103;
  v109 = v103;
  *(_OWORD *)(v89 + 160) = v107;
  *(_OWORD *)(v89 + 176) = v108;
  *(_OWORD *)(v89 + 128) = v105;
  *(_OWORD *)(v89 + 144) = v106;
  v110 = v145;
  v111 = v146;
  v112 = v150;
  *(_OWORD *)(v89 + 64) = v149;
  *(_OWORD *)(v89 + 80) = v112;
  v113 = v148;
  *(_OWORD *)(v89 + 32) = v147;
  *(_OWORD *)(v89 + 48) = v113;
  *(_OWORD *)v89 = v110;
  *(_OWORD *)(v89 + 16) = v111;
  sub_1004ECBA0((uint64_t)&v145);
  sub_10001BE90((uint64_t)v141, &qword_100837D80);
  sub_100011F54((uint64_t)v138, type metadata accessor for MirrorPlatterView);
  v158[0] = v132;
  v158[1] = v90;
  v158[2] = v91;
  v158[3] = sub_1004ECA10;
  v158[4] = v92;
  v158[5] = sub_1004ECB64;
  v158[6] = v93;
  v159 = (char)v86;
  v160 = v94;
  v161 = v95;
  v162 = v96;
  v163 = v97;
  v164 = v118;
  v165 = v98;
  v166 = v99;
  v167 = v100;
  v168 = v101;
  v169 = v102;
  v170 = v117;
  v171 = v76;
  v172 = v137;
  v173 = v136;
  v174 = v135;
  v175 = v134;
  v176 = v109;
  sub_1004ECBF4((uint64_t)v158);
  sub_10001BE90((uint64_t)v140, &qword_100837D80);
  return sub_100011F54((uint64_t)v139, type metadata accessor for MirrorPlatterView);
}

double sub_1004EB2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  type metadata accessor for MirrorView(0);
  v0 = sub_100047110(&qword_100837BA8);
  Bindable.wrappedValue.getter(&v7, v0);
  v1 = v7;
  KeyPath = swift_getKeyPath(&unk_100641F70);
  v7 = v1;
  v3 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v3);
  swift_release(KeyPath);
  v7 = v1;
  v4 = swift_getKeyPath(&unk_100641F70);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(&v7, v4, v3);
  swift_release(v4);
  *(_BYTE *)(v1 + 16) = (*(_BYTE *)(v1 + 16) & 1) == 0;
  v7 = v1;
  v5 = swift_getKeyPath(&unk_100641F70);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(&v7, v5, v3);
  swift_release(v1);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1004EB3FC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  v4 = static Animation.linear(duration:)(0.5);
  v5 = Animation.delay(_:)(a2);
  swift_release(v4);
  v6[2] = a1;
  withAnimation<A>(_:_:)(v5, sub_1004ECC44, v6, (char *)&type metadata for () + 8);
  swift_release(v5);
}

double sub_1004EB484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  _BYTE v9[16];
  uint64_t v10;
  char v11;
  uint64_t v12;

  type metadata accessor for MirrorView(0);
  v0 = sub_100047110(&qword_100837BA8);
  Bindable.wrappedValue.getter(&v12, v0);
  v1 = v12;
  KeyPath = swift_getKeyPath(&unk_100641F70);
  v10 = v1;
  v11 = 0;
  v12 = v1;
  v3 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_1004ECD44, v9, (char *)&type metadata for () + 8, v3);
  swift_release(v1);
  swift_release(KeyPath);
  Bindable.wrappedValue.getter(&v12, v0);
  v4 = v12;
  v5 = swift_getKeyPath(&unk_100641F98);
  v7[2] = v4;
  v8 = 0;
  v12 = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, v5, sub_1004ECD58, v7, (char *)&type metadata for () + 8, v3);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1004EB5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  v5[2] = a1;
  v3 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v3, a2, v5, (char *)&type metadata for () + 8);
  return swift_release(v3);
}

double sub_1004EB658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  _BYTE v9[16];
  uint64_t v10;
  char v11;
  uint64_t v12;

  type metadata accessor for MirrorView(0);
  v0 = sub_100047110(&qword_100837BA8);
  Bindable.wrappedValue.getter(&v12, v0);
  v1 = v12;
  KeyPath = swift_getKeyPath(&unk_100641F98);
  v10 = v1;
  v11 = 1;
  v12 = v1;
  v3 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_1004EC9D4, v9, (char *)&type metadata for () + 8, v3);
  swift_release(v1);
  swift_release(KeyPath);
  Bindable.wrappedValue.getter(&v12, v0);
  v4 = v12;
  v5 = swift_getKeyPath(&unk_100641F70);
  v7[2] = v4;
  v8 = 0;
  v12 = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, v5, sub_1004EC9F0, v7, (char *)&type metadata for () + 8, v3);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_1004EB7D4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(char *, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, void *);
  uint64_t v30;
  _QWORD *v31;
  double v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 aBlock;
  void (*v53)(uint64_t, void *);
  void *v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  id v57;
  char v58;

  v1 = v0;
  v2 = (int *)type metadata accessor for MirrorView(0);
  v49 = *((_QWORD *)v2 - 1);
  __chkstk_darwin(v2);
  v50 = v3;
  v51 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - v9;
  v12 = static WOLog.dataLink.getter(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Resetting timer", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v10, v4);
  v17 = (_QWORD *)(v1 + v2[16]);
  v18 = v17[1];
  *(_QWORD *)&aBlock = *v17;
  v19 = aBlock;
  *((_QWORD *)&aBlock + 1) = v18;
  v20 = sub_100047110((uint64_t *)&unk_100836580);
  State.wrappedValue.getter(&v57, v20);
  v21 = v57;
  objc_msgSend(v57, "invalidate");

  *(_QWORD *)&aBlock = v19;
  *((_QWORD *)&aBlock + 1) = v18;
  v57 = 0;
  State.wrappedValue.setter(&v57, v20);
  v22 = v1 + v2[10];
  v23 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(aBlock) = v23;
  *((_QWORD *)&aBlock + 1) = v24;
  LOBYTE(v57) = 0;
  v25 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(&v57, v25);
  v26 = v1 + v2[17];
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  v29 = *(void (**)(uint64_t, void *))(v26 + 16);
  *(_QWORD *)&aBlock = v27;
  BYTE8(aBlock) = v28;
  v53 = v29;
  v30 = sub_100047110(&qword_100837D00);
  v31 = State.wrappedValue.getter(&v57, v30);
  if ((v58 & 1) == 0)
  {
    v32 = *(double *)&v57;
    v33 = static WOLog.dataLink.getter(v31);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v36 = 134217984;
      *(double *)&aBlock = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v36 + 4);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Bringing screen back to %f", v36, 0xCu);
      swift_slowDealloc(v36, -1, -1);
    }

    v16(v7, v4);
    v37 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v37, "setBrightness:", v32);

  }
  v38 = *(_QWORD *)(v1 + 8);
  v39 = swift_retain(v38);
  v40 = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter(v39);
  swift_release(v38);
  if ((v40 & 1) != 0)
  {
    v41 = (void *)objc_opt_self(NSTimer);
    v42 = v51;
    sub_10004F8C8(v1, v51, type metadata accessor for MirrorView);
    v43 = *(unsigned __int8 *)(v49 + 80);
    v44 = (v43 + 16) & ~v43;
    v45 = swift_allocObject(&unk_1007A50F8, v44 + v50, v43 | 7);
    sub_1004EC548(v42, v45 + v44);
    v55 = sub_1004EC7B8;
    v56 = v45;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v53 = sub_1000277E8;
    v54 = &unk_1007A5110;
    v46 = _Block_copy(&aBlock);
    swift_release(v56);
    v47 = objc_msgSend(v41, "scheduledTimerWithTimeInterval:repeats:block:", 0, v46, 8.0);
    _Block_release(v46);
    aBlock = *(_OWORD *)v17;
    v57 = v47;
    State.wrappedValue.setter(&v57, v20);
  }
}

uint64_t sub_1004EBC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v81 = a2;
  v68 = type metadata accessor for LocalCoordinateSpace(0);
  v3 = __chkstk_darwin(v68);
  v66 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DragGesture(0, v3);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin(v5);
  v73 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082F628);
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  v8 = __chkstk_darwin(v7);
  v76 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for PlainButtonStyle(0, v8);
  v65 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MirrorView(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100837CB0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100837CB8);
  v70 = *(_QWORD *)(v20 - 8);
  v71 = v20;
  __chkstk_darwin(v20);
  v69 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_100837CC0);
  v79 = *(_QWORD *)(v22 - 8);
  v80 = v22;
  __chkstk_darwin(v22);
  v67 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1 + *(int *)(v12 + 40);
  v25 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  LOBYTE(v82) = v25;
  v83 = v26;
  v27 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v86, v27);
  if (v86 == 1)
  {
    v64 = a1;
    sub_10004F8C8(a1, (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MirrorView);
    v28 = *(unsigned __int8 *)(v13 + 80);
    v29 = (v28 + 16) & ~v28;
    v63 = v29 + v14;
    v62 = v28 | 7;
    v30 = swift_allocObject(&unk_1007A50A8, v29 + v14, v28 | 7);
    sub_1004EC548((uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29);
    v31 = sub_100047110(&qword_100837CC8);
    v32 = sub_1004EC604();
    v33 = Button.init(action:label:)(sub_1004EC600, v30, sub_1004EC184, 0, v31, v32);
    PlainButtonStyle.init()(v33);
    v34 = sub_100028384(&qword_100837CF8, &qword_100837CB0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v61 = v34;
    v35 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    v36 = v69;
    v37 = v72;
    View.buttonStyle<A>(_:)(v11, v16, v72, v34, v35);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v37);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v39 = v66;
    static CoordinateSpaceProtocol<>.local.getter(v38);
    v40 = v73;
    DragGesture.init<A>(minimumDistance:coordinateSpace:)(v39, v68, &protocol witness table for LocalCoordinateSpace, 10.0);
    sub_10004F8C8(v64, (uint64_t)v15, type metadata accessor for MirrorView);
    v41 = swift_allocObject(&unk_1007A50D0, v63, v62);
    sub_1004EC548((uint64_t)v15, v41 + v29);
    v42 = sub_1000083D8(&qword_10082F670, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
    v43 = sub_1000083D8(&qword_10082F678, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
    v44 = v75;
    v45 = v76;
    Gesture<>.onChanged(_:)(sub_1004EC77C, v41, v75, v42, v43);
    v46 = swift_release(v41);
    v47 = (*(uint64_t (**)(char *, uint64_t, __n128))(v74 + 8))(v40, v44, v46);
    v48 = static GestureMask.all.getter(v47);
    v82 = v16;
    v83 = v37;
    v84 = v61;
    v85 = v35;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v50 = sub_100028384(&qword_10082F680, &qword_10082F628, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
    v51 = v67;
    v52 = v71;
    v53 = v78;
    View.simultaneousGesture<A>(_:including:)(v45, v48, v71, v78, OpaqueTypeConformance2, v50);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v53);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v52);
    v55 = v79;
    v54 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v81, v51, v80);
    v56 = 0;
    v57 = v54;
    v58 = v55;
  }
  else
  {
    v56 = 1;
    v58 = v79;
    v57 = v80;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v81, v56, 1, v57);
}

uint64_t sub_1004EC184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v3 = static Alignment.center.getter(a1);
  sub_1003ECFCC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v21, 0.0, 1, INFINITY, 0, v3, v4);
  v5 = v22;
  v19 = v23;
  v20 = v21;
  v6 = v24;
  v7 = v25;
  v8 = v26;
  v9 = v27;
  v10 = v28;
  v11 = v29;
  v12 = v30;
  v13 = v32;
  v17 = v33;
  v18 = v31;
  v16 = v34;
  result = static Color.clear.getter(v14);
  *(_QWORD *)a2 = v20;
  *(_BYTE *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v19;
  *(_BYTE *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_BYTE *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v11;
  *(_BYTE *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v18;
  *(_BYTE *)(a2 + 88) = v13;
  *(_QWORD *)(a2 + 96) = v17;
  *(_QWORD *)(a2 + 104) = v16;
  *(_QWORD *)(a2 + 112) = result;
  *(_BYTE *)(a2 + 120) = 0;
  return result;
}

void sub_1004EC2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static WOLog.dataLink.getter(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Dimming the screen", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __chkstk_darwin(v12);
  *(&v25 - 2) = a2;
  v14 = static Animation.default.getter(v13);
  withAnimation<A>(_:_:)(v14, sub_1004EC7F4, &v25 - 4, (char *)&type metadata for () + 8);
  swift_release(v14);
  v15 = (void *)objc_opt_self(UIScreen);
  v16 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v16, "brightness");
  v18 = v17;

  v19 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MirrorView(0) + 68));
  v20 = *v19;
  v21 = *((_BYTE *)v19 + 8);
  v22 = v19[2];
  v27 = v20;
  v28 = v21;
  v29 = v22;
  v25 = v18;
  v26 = 0;
  v23 = sub_100047110(&qword_100837D00);
  State.wrappedValue.setter(&v25, v23);
  v24 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v24, "setBrightness:", 0.1);

}

uint64_t sub_1004EC4D0(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for MirrorView(0) + 40));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_1004EC548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EC58C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorView(0) - 8) + 80);
  return sub_1004EA030(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1004EC5D8()
{
  return EnvironmentValues.legibilityWeight.getter();
}

unint64_t sub_1004EC604()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837CD0;
  if (!qword_100837CD0)
  {
    v1 = sub_100007050(&qword_100837CC8);
    sub_1004EC688();
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837CD0);
  }
  return result;
}

unint64_t sub_1004EC688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837CD8;
  if (!qword_100837CD8)
  {
    v1 = sub_100007050(&qword_100837CE0);
    sub_1004EC70C();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837CD8);
  }
  return result;
}

unint64_t sub_1004EC70C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837CE8;
  if (!qword_100837CE8)
  {
    v1 = sub_100007050(&qword_100837CF0);
    sub_1002D7500();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837CE8);
  }
  return result;
}

void sub_1004EC77C()
{
  type metadata accessor for MirrorView(0);
  sub_1004EB7D4();
}

void sub_1004EC7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorView(0) - 8) + 80);
  sub_1004EC2C0(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1004EC7F4()
{
  uint64_t v0;

  return sub_1004EC4D0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004EC810()
{
  return sub_1004ECA1C((uint64_t)sub_1004EC9B4);
}

unint64_t sub_1004EC824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837D50;
  if (!qword_100837D50)
  {
    v1 = sub_100007050(&qword_100837D28);
    sub_1004EC8A8();
    sub_100028384(&qword_100837D68, &qword_100837D70, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837D50);
  }
  return result;
}

unint64_t sub_1004EC8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837D58;
  if (!qword_100837D58)
  {
    v1 = sub_100007050(&qword_100837D20);
    sub_100028384(&qword_100837D60, &qword_100837D18, (uint64_t)&unk_100643C30);
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837D58);
  }
  return result;
}

uint64_t *sub_1004EC94C(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain(a1[14]);
  swift_bridgeObjectRetain(v2);
  return a1;
}

_QWORD *sub_1004EC980(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[14];
  swift_bridgeObjectRelease(*a1);
  swift_release(v2);
  return a1;
}

double sub_1004EC9B4()
{
  return sub_1004EB658();
}

uint64_t sub_1004EC9D4()
{
  uint64_t v0;

  return sub_1005C4370(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004EC9F0()
{
  uint64_t v0;

  return sub_1005C41B0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004ECA10()
{
  return sub_1004ECA1C((uint64_t)sub_1004ECC5C);
}

uint64_t sub_1004ECA1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorView(0) - 8) + 80);
  return sub_1004EB5FC(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1004ECA60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for MirrorView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));

  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v7 = v0 + v4 + v1[7];
  v8 = sub_100047110(&qword_100837BA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = (_QWORD *)(v0 + v4 + v1[9]);
  if (*v9)
    swift_release(v9[1]);
  v10 = v3 | 7;
  v11 = v4 + v5;
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  v12 = v6 + v1[16];

  swift_release(*(_QWORD *)(v12 + 8));
  swift_release(*(_QWORD *)(v6 + v1[17] + 16));
  return swift_deallocObject(v0, v11, v10);
}

void sub_1004ECB64(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorView(0) - 8) + 80);
  sub_1004EB3FC(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1004ECBA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(id *)a1;
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_1004ECBF4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(v4);
  swift_release(v3);

  return a1;
}

double sub_1004ECC44()
{
  return sub_1004EB484();
}

double sub_1004ECC5C()
{
  return sub_1004EB2D4();
}

unint64_t sub_1004ECC78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100837D90;
  if (!qword_100837D90)
  {
    v1 = sub_100007050(&qword_100837CA8);
    v2[0] = sub_100007050(&qword_100837C80);
    v2[1] = sub_100028384(&qword_100837CA0, &qword_100837C80, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_100028384(&qword_100837D98, &qword_10082E9B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837D90);
  }
  return result;
}

uint64_t sub_1004ECD44()
{
  return sub_1004EC9F0();
}

uint64_t sub_1004ECD58()
{
  return sub_1004EC9D4();
}

void sub_1004ECD6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  NSString v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  NSString v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  NSString v48;
  id v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  NSString v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  NSString v65;
  id v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  id v69;
  NSString v70;
  id v71;
  const char *v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  NSString v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  NSString v91;
  void *v92;
  id v93;

  v4 = v3;
  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v6 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "secondaryLabelColor");
  v9 = (void *)UILabel.withTextColor(_:)(v8);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v12 = objc_msgSend(v7, "secondaryLabelColor");
  v13 = (void *)UILabel.withTextColor(_:)(v12);

  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v20);

  swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
  if (objc_msgSend(a3, "supportsDistanceForWorkout:workoutActivity:", a1, 0))
  {
    v28 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v29 = objc_msgSend(v7, "secondaryLabelColor");
    v30 = (void *)UILabel.withTextColor(_:)(v29);

    v31 = objc_msgSend(v14, "mainBundle");
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v35 = v34;

    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setText:", v36);

    swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
    v44 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v45 = objc_msgSend(v7, "secondaryLabelColor");
    v46 = (void *)UILabel.withTextColor(_:)(v45);

    v47 = objc_msgSend(v14, "mainBundle");
    v48 = String._bridgeToObjectiveC()();
    v49 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v51 = v50;

    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "setText:", v52);

    swift_bridgeObjectRelease(v51, v53, v54, v55, v56, v57, v58, v59);
LABEL_10:

    objc_msgSend(*(id *)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", 1);
    sub_1001BB604();
    return;
  }
  v60 = a3;
  v61 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v62 = objc_msgSend(v7, "secondaryLabelColor");
  v63 = (void *)UILabel.withTextColor(_:)(v62);

  if (a2 != 1)
  {
    v91 = String._bridgeToObjectiveC()();
    objc_msgSend(v63, "setText:", v91);

    v92 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v93 = objc_msgSend(v7, "secondaryLabelColor");
    v90 = (void *)UILabel.withTextColor(_:)(v93);

    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v90, "setText:", v52, a2);
    goto LABEL_9;
  }
  v64 = objc_msgSend(v60, "fitnessUIFormattingManager");
  v65 = String._bridgeToObjectiveC()();
  v66 = objc_msgSend(v64, "localizationKeyForEnergyBaseKey:", v65);

  if (v66)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v68 = v67;

    v69 = objc_msgSend(v14, "mainBundle");
    v70 = String._bridgeToObjectiveC()();
    v71 = objc_msgSend(v69, "localizedStringForKey:value:table:", v70, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v73 = (CHWorkoutDetailHeartRateTableViewCell *)v72;
    swift_bridgeObjectRelease(v68, v72, v74, v75, v76, v77, v78, v79);

    v80 = String._bridgeToObjectiveC()();
    objc_msgSend(v63, "setText:", v80);

    swift_bridgeObjectRelease(v73, v81, v82, v83, v84, v85, v86, v87);
    v88 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v89 = objc_msgSend(v7, "secondaryLabelColor");
    v90 = (void *)UILabel.withTextColor(_:)(v89);

    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v90, "setText:", v52, 1);
LABEL_9:

    goto LABEL_10;
  }
  __break(1u);
}

id sub_1004ED628()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnTrackLapTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailFourColumnTrackLapTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailFourColumnTrackLapTableViewCell);
}

void sub_1004ED678(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v7;
  uint64_t v8;
  id v14;
  void *v15;
  id v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  void *v20;
  NSString v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  void *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  double v44;
  double v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  id v53;
  void *v54;
  uint64_t v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  id v58;
  void *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  unint64_t v62;
  uint64_t v63;
  const char *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  id v88;
  NSString v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  void *v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  NSString v105;
  SEL v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v114;
  id v115;

  v8 = v7;
  if (!a1)
  {
    sub_1004ECD6C(a2, a5, a7);
    return;
  }
  v14 = a1;
  v115 = objc_msgSend(a7, "fitnessUIFormattingManager");
  sub_100255018(a6 & 1);
  v15 = (void *)objc_opt_self(NSNumberFormatter);
  v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v14, "lapIndex"));
  v17 = objc_msgSend(v15, "localizedStringFromNumber:numberStyle:", v16, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v21);
  swift_bridgeObjectRelease(v19, v22, v23, v24, v25, v26, v27, v28);

  v29 = objc_msgSend(v14, "formattedDurationValueWithFormattingManager:", v115);
  v30 = v29;
  if (v29)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v33 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
    v30 = String._bridgeToObjectiveC()();
  }
  else
  {
    v32 = 0;
    v33 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
  }
  objc_msgSend(v33, "setText:", v30, a4);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  if (!objc_msgSend(a7, "supportsDistanceForWorkout:workoutActivity:", a2, 0))
  {
    if (a5 == 1)
    {
      v46 = objc_msgSend(v115, "unitManager");
      if (!v46)
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      v47 = v46;
      v48 = objc_msgSend(v46, "userActiveEnergyBurnedUnit");

      v49 = objc_msgSend(v14, "formattedActiveEnergyValueForUnit:", v48);
      if (v49)
      {
        v50 = v49;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v52 = v51;

      }
      else
      {
        v52 = 0;
      }
      v100 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
      v101 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "energyColors");
      if (!v101)
        goto LABEL_32;
      v102 = v101;
      v103 = objc_msgSend(v101, "nonGradientTextColor");

      objc_msgSend(v100, "setTextColor:", v103);
      v104 = v100;

      if (v52)
        v105 = String._bridgeToObjectiveC()();
      else
        v105 = 0;
      objc_msgSend(v104, "setText:", v105);

      swift_bridgeObjectRelease(v52, v106, v107, v108, v109, v110, v111, v112);
    }

    return;
  }
  v41 = objc_msgSend(v14, "distance");
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v42, "doubleValueForUnit:", v43);
    v45 = v44;

  }
  else
  {
    v45 = 0.0;
  }
  v53 = objc_msgSend(v115, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", a3, 0, objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "defaultPrecisionForDistanceUnit:", a3), 2, 1, v45);
  if (v53)
  {
    v54 = v53;
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v57 = v56;

    v58 = objc_msgSend(v115, "localizedShortUnitStringForDistanceUnit:", a3);
    if (v58)
    {
      v59 = v58;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v61 = v60;

      v62 = sub_100038CA0();
      v63 = StringProtocol.localizedUppercase.getter(&type metadata for String, v62);
      v65 = (CHWorkoutDetailHeartRateTableViewCell *)v64;
      swift_bridgeObjectRelease(v61, v64, v66, v67, v68, v69, v70, v71);
      if (qword_10081D688 != -1)
        swift_once(&qword_10081D688, sub_1001A536C);
      v72 = sub_1000387C4(v55, (uint64_t)v57, v63, (uint64_t)v65, (void *)qword_100869FF8);
      swift_bridgeObjectRelease(v65, v73, v74, v75, v76, v77, v78, v79);
      swift_bridgeObjectRelease(v57, v80, v81, v82, v83, v84, v85, v86);
      objc_msgSend(*(id *)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel), "setAttributedText:", v72);

      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_19:
  v87 = FIUIPaceFormatForWorkoutActivityType(v114);
  v88 = objc_msgSend(v14, "formattedPaceUsingFormatType:formattingManager:distanceType:", v87, v115, FIUIDistanceTypeForActivityType(v114));
  v89 = v88;
  if (v88)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
    v91 = v90;

    v92 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
    v89 = String._bridgeToObjectiveC()();
  }
  else
  {
    v91 = 0;
    v92 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
  }
  objc_msgSend(v92, "setText:", v89);
  swift_bridgeObjectRelease(v91, v93, v94, v95, v96, v97, v98, v99);

}

void sub_1004EDC88(void *a1@<X1>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  double v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  unsigned __int8 v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  unsigned __int8 v106;
  double v107;
  double v108;
  double v109;
  double v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  __n128 v130;
  __n128 v131;
  __n128 v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  unsigned __int8 v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  char v157;
  __int128 v158;
  _OWORD *v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  void *v180;
  char v181;
  double v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  double v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  double v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  unsigned __int8 v262;
  double v263;
  double v264;
  double v265;
  double v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  id v270;
  uint64_t v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  __n128 v276;
  __n128 v277;
  uint64_t v278;
  char v279;
  double v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  id v316;
  id v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  char v321;
  double v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  _QWORD *v337;
  id v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void (*v349)(uint64_t, uint64_t, uint64_t);
  uint64_t v350;
  uint64_t v351;
  __n128 v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  id v357;
  id v358;
  id v359;
  id v360;
  _QWORD *v361;
  _QWORD *v362;
  uint64_t v363;
  char v364;
  double v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t *v375;
  uint64_t v376;
  uint64_t v377;
  unint64_t v378;
  uint64_t v379;
  uint64_t v380;
  id v381;
  uint64_t v382;
  _QWORD *v383;
  id v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  void *v412;
  uint64_t v413;
  char v414;
  double v415;
  uint64_t *v416;
  id v417;
  id v418;
  uint64_t v419;
  id v420;
  _QWORD *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  unint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD *v441;
  id v442;
  int *v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  id v447;
  id v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  char v452;
  double v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  uint64_t v466;
  _QWORD *v467;
  id v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  void (*v479)(uint64_t, uint64_t, uint64_t);
  uint64_t v480;
  uint64_t v481;
  __n128 v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  id v487;
  id v488;
  id v489;
  id v490;
  _QWORD *v491;
  _QWORD *v492;
  uint64_t v493;
  char v494;
  double v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  unint64_t v506;
  unint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  id v513;
  id v514;
  uint64_t v515;
  uint64_t v516;
  void *v517;
  uint64_t v518;
  uint64_t v519;
  id v520;
  uint64_t v521;
  uint64_t v522;
  char v523;
  double v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  uint64_t v533;
  uint64_t *v534;
  uint64_t v535;
  uint64_t v536;
  unint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  _QWORD *v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  _QWORD *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  int *v550;
  uint64_t *v551;
  id v552;
  id v553;
  uint64_t v554;
  uint64_t v555;
  id v556;
  __n128 v557;
  __n128 v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  char v571;
  double v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  _OWORD *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  char *v587;
  Swift::String v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  void *v592;
  void *v593;
  Swift::String v594;
  Swift::String v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  void *v600;
  void *v601;
  uint64_t *v602;
  char v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  unint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  __n128 v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t *v616;
  uint64_t v617;
  char *v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  uint64_t v627;
  uint64_t v628;
  char *v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  char *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t *v639;
  char *v640;
  uint64_t v641;
  uint64_t v642;
  char *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  char *v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t *v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t *v656;
  char *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t *v660;
  char *v661;
  uint64_t v662;
  uint64_t *v663;
  uint64_t v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  char *v670;
  uint64_t v671;
  uint64_t v672;
  _OWORD *v673;
  char *v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  char *v679;
  uint64_t v680;
  uint64_t v681;
  _QWORD *v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  _QWORD *v687;
  id v688;
  id v689;
  id v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  char v696;
  _BYTE v697[7];
  char v698;
  uint64_t v699;
  uint64_t v700;
  id v701;
  _QWORD *v702;
  id v703;
  unint64_t v704;
  double v705;
  double v706;
  double v707;
  double v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  __int16 v712;
  __int128 v713;
  __int128 v714;
  __int128 v715;
  __int128 v716;
  __int128 v717;
  __int128 v718;
  uint64_t v719;
  char v720;
  char v721;

  v633 = a4;
  v688 = a3;
  v689 = a2;
  v690 = a1;
  v695 = a5;
  v5 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v5);
  v618 = (char *)&v614 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v658 = sub_100047110(&qword_100837DC8);
  __chkstk_darwin(v658);
  v660 = (uint64_t *)((char *)&v614 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v654 = sub_100047110(&qword_100837DD0);
  __chkstk_darwin(v654);
  v656 = (uint64_t *)((char *)&v614 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v659 = sub_100047110(&qword_100825A50);
  __chkstk_darwin(v659);
  v657 = (char *)&v614 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v678 = sub_100047110(&qword_100825A40);
  __chkstk_darwin(v678);
  v661 = (char *)&v614 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v650 = type metadata accessor for MirrorRaceMetricPlatterView(0);
  __chkstk_darwin(v650);
  v652 = (uint64_t *)((char *)&v614 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v655 = sub_100047110(&qword_100825A60);
  v12 = __chkstk_darwin(v655);
  v651 = (uint64_t)&v614 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v653 = (uint64_t)&v614 - v14;
  v631 = type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
  __chkstk_darwin(v631);
  v621 = (char *)&v614 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v627 = sub_100047110(&qword_1008259E8);
  v16 = __chkstk_darwin(v627);
  v620 = (uint64_t)&v614 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v622 = (uint64_t)&v614 - v18;
  v675 = sub_100047110(&qword_100837DD8);
  __chkstk_darwin(v675);
  v677 = (uint64_t)&v614 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v671 = sub_100047110(&qword_100837DE0);
  __chkstk_darwin(v671);
  v673 = (_OWORD *)((char *)&v614 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v624 = sub_100047110(&qword_100837DE8);
  __chkstk_darwin(v624);
  v625 = (uint64_t)&v614 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v672 = sub_100047110(&qword_1008259C0);
  __chkstk_darwin(v672);
  v626 = (char *)&v614 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v676 = sub_100047110(&qword_1008259B0);
  __chkstk_darwin(v676);
  v674 = (char *)&v614 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v694 = sub_100047110(&qword_1008259A0);
  __chkstk_darwin(v694);
  v679 = (char *)&v614 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v614 = type metadata accessor for MirrorSpeedometerPlatterView(0);
  __chkstk_darwin(v614);
  v616 = (uint64_t *)((char *)&v614 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v623 = sub_100047110(&qword_1008259D0);
  v26 = __chkstk_darwin(v623);
  v615 = (uint64_t)&v614 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v617 = (uint64_t)&v614 - v28;
  v637 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter(0);
  __chkstk_darwin(v637);
  v635 = (char *)&v614 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v664 = sub_100047110(&qword_100825988);
  v30 = __chkstk_darwin(v664);
  v634 = (uint64_t)&v614 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v636 = (uint64_t)&v614 - v32;
  v662 = sub_100047110(&qword_100837DF0);
  __chkstk_darwin(v662);
  v663 = (uint64_t *)((char *)&v614 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v669 = sub_100047110(&qword_100825950);
  __chkstk_darwin(v669);
  v665 = (char *)&v614 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v641 = type metadata accessor for MirrorActivityRingsPlatterView(0);
  __chkstk_darwin(v641);
  v643 = (char *)&v614 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v647 = sub_100047110(&qword_100825938);
  v36 = __chkstk_darwin(v647);
  v642 = (uint64_t)&v614 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v644 = (uint64_t)&v614 - v38;
  v666 = sub_100047110(&qword_100837DF8);
  __chkstk_darwin(v666);
  v668 = (uint64_t)&v614 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v645 = sub_100047110(&qword_100837E00);
  __chkstk_darwin(v645);
  v646 = (uint64_t)&v614 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v667 = sub_100047110(&qword_100825928);
  __chkstk_darwin(v667);
  v648 = (char *)&v614 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v686 = sub_100047110(&qword_100825918);
  __chkstk_darwin(v686);
  v670 = (char *)&v614 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v632 = type metadata accessor for MirrorGraphicsMetricsView(0);
  v43 = __chkstk_darwin(v632);
  v629 = (char *)&v614 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v46 = (uint64_t *)((char *)&v614 - v45);
  v649 = sub_100047110(&qword_100825900);
  v47 = __chkstk_darwin(v649);
  v628 = (uint64_t)&v614 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v47);
  v630 = (uint64_t)&v614 - v50;
  v51 = __chkstk_darwin(v49);
  v53 = (char *)&v614 - v52;
  __chkstk_darwin(v51);
  v619 = (uint64_t)&v614 - v54;
  v638 = sub_100047110(&qword_100837E08);
  __chkstk_darwin(v638);
  v639 = (uint64_t *)((char *)&v614 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v681 = sub_100047110(&qword_1008258F0);
  __chkstk_darwin(v681);
  v640 = (char *)&v614 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v691 = sub_100047110(&qword_100837E10);
  __chkstk_darwin(v691);
  v693 = (uint64_t)&v614 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v683 = sub_100047110(&qword_100837E18);
  __chkstk_darwin(v683);
  v685 = (uint64_t)&v614 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v680 = sub_100047110(&qword_100837E20);
  __chkstk_darwin(v680);
  v60 = (char *)&v614 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v684 = sub_100047110(&qword_1008258B8);
  __chkstk_darwin(v684);
  v682 = (uint64_t *)((char *)&v614 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v692 = sub_100047110(&qword_1008258A8);
  __chkstk_darwin(v692);
  v687 = (uint64_t *)((char *)&v614 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = type metadata accessor for MetricPlatterType(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = __chkstk_darwin(v63);
  v67 = (char *)&v614 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __chkstk_darwin(v65);
  v70 = (char *)&v614 - v69;
  v71 = __chkstk_darwin(v68);
  v73 = (char *)&v614 - v72;
  MetricPlatter.type.getter(v71);
  v74 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v73, v63);
  if ((_DWORD)v74 == enum case for MetricPlatterType.standard(_:)
    || (_DWORD)v74 == enum case for MetricPlatterType.standardSecond(_:))
  {
    v96 = ((uint64_t (*)(void))MetricPlatter.metrics.getter)();
    if (v96)
      v97 = (_QWORD *)v96;
    else
      v97 = _swiftEmptyArrayStorage;
    v98 = type metadata accessor for MetricsPublisher(0);
    v99 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v100 = v688;
    v101 = v689;
    swift_retain(v690);
    v103 = ObservedObject.init(wrappedValue:)(v102, v98, v99);
    v105 = v104;
    v106 = static Edge.Set.top.getter(v103);
    if (qword_10081DF48 != -1)
      swift_once(&qword_10081DF48, sub_1004F1810);
    v107 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD30);
    v699 = v103;
    v700 = (uint64_t)v105;
    v701 = v101;
    v702 = v97;
    v703 = v100;
    v704 = v106;
    v705 = v107;
    v706 = v108;
    v707 = v109;
    v708 = v110;
    LOWORD(v709) = 0;
    goto LABEL_13;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.interval(_:))
  {
    v75 = COERCE_DOUBLE(v688);
    v76 = v689;
    v77 = v690;
    swift_retain(v690);
    v79 = MetricsPublisher.intervalsMetricsPublisher.getter(v78);
    v80 = type metadata accessor for IntervalsMetricsPublisher(0);
    v81 = sub_1000083D8(&qword_10082F228, (uint64_t (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher, (uint64_t)&protocol conformance descriptor for IntervalsMetricsPublisher);
    v82 = ObservedObject.init(wrappedValue:)(v79, v80, v81);
    v84 = v83;
    v85 = MetricsPublisher.workoutStatePublisher.getter(v82);
    v86 = type metadata accessor for WorkoutStatePublisher(0);
    v87 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
    v88 = ObservedObject.init(wrappedValue:)(v85, v86, v87);
    v90 = v89;
    v91 = static Edge.Set.top.getter(v88);
    if (qword_10081DF50 != -1)
      swift_once(&qword_10081DF50, sub_1004F1850);
    v92 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD38);
    v699 = (uint64_t)v77;
    v700 = v82;
    v701 = v84;
    v702 = (_QWORD *)v88;
    v703 = v90;
    v704 = (unint64_t)v76;
    v705 = v75;
    *(_QWORD *)&v706 = v91;
    v707 = v92;
    v708 = v93;
    v709 = v94;
    v710 = v95;
    v711 = 0;
    v712 = 0;
LABEL_19:
    swift_retain(v77);
    swift_retain(v84);
    swift_retain(v90);
    v689 = v76;
    v688 = *(id *)&v75;
    v151 = sub_100047110(&qword_100825A10);
    v152 = sub_100047110(&qword_100825A28);
    v153 = sub_1001C73CC();
    v154 = sub_1001C742C();
    _ConditionalContent<>.init(storage:)(&v699, v151, v152, v153, v154);
    v155 = v719;
    v156 = v720;
    v157 = v721;
    v158 = v714;
    v159 = v673;
    *v673 = v713;
    v159[1] = v158;
    v160 = v716;
    v159[2] = v715;
    v159[3] = v160;
    v161 = v718;
    v159[4] = v717;
    v159[5] = v161;
    *((_QWORD *)v159 + 12) = v155;
    *((_BYTE *)v159 + 104) = v156;
    *((_BYTE *)v159 + 105) = v157;
    swift_storeEnumTagMultiPayload(v159, v671, 1);
    v162 = sub_100047110(&qword_100825A00);
    v163 = sub_1001C720C();
    v164 = sub_1001C7338();
    v165 = (uint64_t)v674;
    _ConditionalContent<>.init(storage:)(v159, v672, v162, v163, v164);
    v166 = v677;
    sub_100021CC0(v165, v677, &qword_1008259B0);
    swift_storeEnumTagMultiPayload(v166, v675, 0);
    v167 = sub_1001C71E8();
    v168 = sub_1001C748C();
    v169 = (uint64_t)v679;
    _ConditionalContent<>.init(storage:)(v166, v676, v678, v167, v168);
    sub_10001BE90(v165, &qword_1008259B0);
    v170 = v693;
    sub_100021CC0(v169, v693, &qword_1008259A0);
    swift_storeEnumTagMultiPayload(v170, v691, 1);
    v171 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v172 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v170, v692, v694, v171, v172);
    sub_10001BE90(v169, &qword_1008259A0);

    swift_release(v90);
    swift_release(v84);
    v129 = v77;
    goto LABEL_20;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.intervalSecond(_:))
  {
    sub_1003254C8();
    v76 = v689;
    v77 = v690;
    v130 = swift_retain(v690);
    v75 = COERCE_DOUBLE(static FIUIWorkoutActivityType.outdoorCycle.getter(v130));
    v131.n128_u64[0] = -1.0;
    v132.n128_u64[0] = 3.0;
    v133 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(1.0, 3.0, v131, 3.0, v132, 4.0, 4.0);
    swift_retain(v77);
    v135 = MetricsPublisher.intervalsMetricsPublisher.getter(v134);
    v136 = type metadata accessor for IntervalsMetricsPublisher(0);
    v137 = sub_1000083D8(&qword_10082F228, (uint64_t (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher, (uint64_t)&protocol conformance descriptor for IntervalsMetricsPublisher);
    v138 = ObservedObject.init(wrappedValue:)(v135, v136, v137);
    v84 = v139;
    v140 = MetricsPublisher.workoutStatePublisher.getter(v138);
    v141 = type metadata accessor for WorkoutStatePublisher(0);
    v142 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
    v143 = ObservedObject.init(wrappedValue:)(v140, v141, v142);
    v90 = v144;
    swift_release(v77);
    v146 = static Edge.Set.top.getter(v145);
    if (qword_10081DF50 != -1)
      swift_once(&qword_10081DF50, sub_1004F1850);
    v147 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD38);
    v699 = (uint64_t)v77;
    v700 = v138;
    v701 = v84;
    v702 = (_QWORD *)v143;
    v703 = v90;
    v704 = (unint64_t)v76;
    v705 = v75;
    v706 = v133;
    *(_QWORD *)&v707 = v146;
    v708 = v147;
    v709 = v148;
    v710 = v149;
    v711 = v150;
    v712 = 256;
    goto LABEL_19;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.pacer(_:))
  {
    v173 = type metadata accessor for MetricsPublisher(0);
    v174 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v175 = v688;
    v176 = v689;
    swift_retain(v690);
    v178 = ObservedObject.init(wrappedValue:)(v177, v173, v174);
    v180 = v179;
    v181 = static Edge.Set.top.getter(v178);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v182 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40 + 2.0);
    v184 = v183;
    v186 = v185;
    v188 = v187;
    v190 = static Edge.Set.bottom.getter(v189);
    if (qword_10081DF60 != -1)
      swift_once(&qword_10081DF60, sub_1004F18D8);
    v191 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD48);
    v698 = 0;
    v696 = 0;
    v192 = v663;
    *v663 = v178;
    v192[1] = (uint64_t)v180;
    v192[2] = (uint64_t)v176;
    v192[3] = (uint64_t)v175;
    *((_OWORD *)v192 + 2) = xmmword_100642000;
    *((_OWORD *)v192 + 3) = xmmword_100642010;
    *((_BYTE *)v192 + 64) = v181;
    *(_DWORD *)((char *)v192 + 65) = v713;
    *((_DWORD *)v192 + 17) = *(_DWORD *)((char *)&v713 + 3);
    *((double *)v192 + 9) = v182;
    v192[10] = v184;
    v192[11] = v186;
    v192[12] = v188;
    *((_BYTE *)v192 + 104) = 0;
    *((_DWORD *)v192 + 27) = *(_DWORD *)((char *)&v699 + 3);
    *(_DWORD *)((char *)v192 + 105) = v699;
    *((_BYTE *)v192 + 112) = v190;
    *((_DWORD *)v192 + 29) = *(_DWORD *)&v697[3];
    *(_DWORD *)((char *)v192 + 113) = *(_DWORD *)v697;
    *((double *)v192 + 15) = v191;
    v192[16] = v193;
    v192[17] = v194;
    v192[18] = v195;
    *((_BYTE *)v192 + 152) = v696;
    swift_storeEnumTagMultiPayload(v192, v662, 0);
    swift_retain(v180);
    v196 = v176;
    v197 = v175;
    v198 = sub_100047110(&qword_100825960);
    v199 = sub_1001C70C4();
    v200 = sub_1001C7140();
    v201 = (uint64_t)v665;
    _ConditionalContent<>.init(storage:)(v192, v198, v664, v199, v200);
    v202 = v668;
    sub_100021CC0(v201, v668, &qword_100825950);
    swift_storeEnumTagMultiPayload(v202, v666, 1);
    v203 = sub_1001C6FF8();
    v204 = sub_1001C70A0();
    v205 = (uint64_t)v670;
    _ConditionalContent<>.init(storage:)(v202, v667, v669, v203, v204);
    sub_10001BE90(v201, &qword_100825950);
    v206 = v685;
    sub_100021CC0(v205, v685, &qword_100825918);
    swift_storeEnumTagMultiPayload(v206, v683, 1);
    v207 = sub_1001C6E44();
    v208 = sub_1001C6FD4();
    v209 = v687;
    _ConditionalContent<>.init(storage:)(v206, v684, v686, v207, v208);
    sub_10001BE90(v205, &qword_100825918);
    v210 = v693;
    sub_100021CC0((uint64_t)v209, v693, &qword_1008258A8);
    swift_storeEnumTagMultiPayload(v210, v691, 0);
    v211 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v212 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v210, v692, v694, v211, v212);
    sub_10001BE90((uint64_t)v209, &qword_1008258A8);

    v129 = v180;
    goto LABEL_20;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.race(_:))
  {
    v213 = type metadata accessor for MetricsPublisher(0);
    v214 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v215 = v688;
    v216 = v689;
    swift_retain(v690);
    v218 = ObservedObject.init(wrappedValue:)(v217, v213, v214);
    v219 = v652;
    *v652 = v218;
    v219[1] = v220;
    v219[2] = (uint64_t)v216;
    v219[3] = (uint64_t)v215;
    v221 = MetricPlatterConstants.init()(v218);
    v222 = static Edge.Set.top.getter(v221);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v223 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40);
    v225 = v224;
    v227 = v226;
    v229 = v228;
    v230 = v651;
    sub_10004F8C8((uint64_t)v219, v651, type metadata accessor for MirrorRaceMetricPlatterView);
    v231 = v655;
    v232 = v230 + *(int *)(v655 + 36);
    *(_BYTE *)v232 = v222;
    *(double *)(v232 + 8) = v223;
    *(_QWORD *)(v232 + 16) = v225;
    *(_QWORD *)(v232 + 24) = v227;
    *(_QWORD *)(v232 + 32) = v229;
    *(_BYTE *)(v232 + 40) = 0;
    sub_100011F54((uint64_t)v219, type metadata accessor for MirrorRaceMetricPlatterView);
    v233 = &qword_100825A60;
    v234 = v653;
    sub_100045AD4(v230, v653, &qword_100825A60);
    v235 = v656;
    sub_100021CC0(v234, (uint64_t)v656, &qword_100825A60);
    swift_storeEnumTagMultiPayload(v235, v654, 0);
    v236 = sub_100047110(&qword_100825A78);
    v237 = sub_1001C7518();
    v238 = sub_1001C759C();
    v239 = (uint64_t)v657;
    _ConditionalContent<>.init(storage:)(v235, v231, v236, v237, v238);
    v240 = v660;
    sub_100021CC0(v239, (uint64_t)v660, &qword_100825A50);
    swift_storeEnumTagMultiPayload(v240, v658, 0);
    v241 = sub_1001C735C(&qword_100825A48, &qword_100825A50, (void (*)(void))sub_1001C7518, (void (*)(void))sub_1001C759C);
    v242 = (uint64_t)v661;
    _ConditionalContent<>.init(storage:)(v240, v659, &type metadata for Text, v241, &protocol witness table for Text);
    sub_10001BE90(v239, &qword_100825A50);
    v243 = &qword_100825A40;
    v244 = v677;
    sub_100021CC0(v242, v677, &qword_100825A40);
    v245 = v244;
    v246 = v675;
    v247 = 1;
    goto LABEL_31;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.segment(_:))
  {
    v256 = MetricPlatter.metrics.getter(v74);
    if (v256)
      v97 = (_QWORD *)v256;
    else
      v97 = _swiftEmptyArrayStorage;
    v257 = type metadata accessor for MetricsPublisher(0);
    v258 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v100 = v688;
    v101 = v689;
    swift_retain(v690);
    v260 = ObservedObject.init(wrappedValue:)(v259, v257, v258);
    v105 = v261;
    v262 = static Edge.Set.top.getter(v260);
    if (qword_10081DF48 != -1)
      swift_once(&qword_10081DF48, sub_1004F1810);
    v263 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD30);
    v699 = v260;
    v700 = (uint64_t)v105;
    v701 = v101;
    v702 = v97;
    v703 = v100;
    v704 = v262;
    v705 = v263;
    v706 = v264;
    v707 = v265;
    v708 = v266;
    LOWORD(v709) = 256;
LABEL_13:
    v111 = v100;
    v690 = v101;
    swift_retain(v105);
    swift_bridgeObjectRetain(v97);
    v112 = sub_100047110(&qword_1008258D8);
    v113 = sub_1001C6ECC();
    _ConditionalContent<>.init(storage:)(&v699, v112, v112, v113, v113);
    v114 = v718;
    v115 = BYTE1(v718);
    v116 = v714;
    *(_OWORD *)v60 = v713;
    *((_OWORD *)v60 + 1) = v116;
    v117 = v716;
    *((_OWORD *)v60 + 2) = v715;
    *((_OWORD *)v60 + 3) = v117;
    *((_OWORD *)v60 + 4) = v717;
    v60[80] = v114;
    v60[81] = v115;
    swift_storeEnumTagMultiPayload(v60, v680, 0);
    v118 = sub_100047110(&qword_1008258C8);
    v119 = sub_1001C6E68();
    v120 = sub_1001C6F2C();
    v121 = v682;
    _ConditionalContent<>.init(storage:)(v60, v118, v681, v119, v120);
LABEL_14:
    v122 = v685;
    sub_100021CC0((uint64_t)v121, v685, &qword_1008258B8);
    swift_storeEnumTagMultiPayload(v122, v683, 0);
    v123 = sub_1001C6E44();
    v124 = sub_1001C6FD4();
    v125 = v687;
    _ConditionalContent<>.init(storage:)(v122, v684, v686, v123, v124);
    sub_10001BE90((uint64_t)v121, &qword_1008258B8);
    v126 = v693;
    sub_100021CC0((uint64_t)v125, v693, &qword_1008258A8);
    swift_storeEnumTagMultiPayload(v126, v691, 0);
    v127 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v128 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v126, v692, v694, v127, v128);
    sub_10001BE90((uint64_t)v125, &qword_1008258A8);

    swift_bridgeObjectRelease(v97);
    v129 = v105;
LABEL_20:
    swift_release(v129);
    return;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.activityRings(_:))
  {
    v267 = MetricsPublisher.activitySummaryMetricsPublisher.getter(v74);
    v268 = v641;
    v269 = v643;
    v270 = v689;
    MetricPlatter.type.getter(v270);
    v271 = type metadata accessor for ActivitySummaryMetricsPublisher(0);
    v272 = sub_1000083D8(&qword_100830DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ActivitySummaryMetricsPublisher, (uint64_t)&protocol conformance descriptor for ActivitySummaryMetricsPublisher);
    v273 = v688;
    *v269 = ObservedObject.init(wrappedValue:)(v267, v271, v272);
    v269[1] = v274;
    v269[2] = v270;
    *(_QWORD *)((char *)v269 + *(int *)(v268 + 28)) = v273;
    v275 = *(int *)(v268 + 32);
    v276.n128_u64[0] = 0x4071200000000000;
    v277.n128_u64[0] = 0x4071200000000000;
    *(double *)((char *)v269 + v275) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(200.0, 274.0, v276, 274.0, v277, 308.0, 308.0);
    v279 = static Edge.Set.top.getter(v278);
    if (qword_10081DF50 != -1)
      swift_once(&qword_10081DF50, sub_1004F1850);
    v280 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD38);
    v282 = v281;
    v284 = v283;
    v286 = v285;
    v287 = v642;
    sub_10004F8C8((uint64_t)v269, v642, type metadata accessor for MirrorActivityRingsPlatterView);
    v288 = v647;
    v289 = v287 + *(int *)(v647 + 36);
    *(_BYTE *)v289 = v279;
    *(double *)(v289 + 8) = v280;
    *(_QWORD *)(v289 + 16) = v282;
    *(_QWORD *)(v289 + 24) = v284;
    *(_QWORD *)(v289 + 32) = v286;
    *(_BYTE *)(v289 + 40) = 0;
    sub_100011F54((uint64_t)v269, type metadata accessor for MirrorActivityRingsPlatterView);
    v233 = &qword_100825938;
    v234 = v644;
    sub_100045AD4(v287, v644, &qword_100825938);
    v290 = v646;
    sub_100021CC0(v234, v646, &qword_100825938);
    swift_storeEnumTagMultiPayload(v290, v645, 1);
    v291 = sub_1001C6F50();
    v292 = sub_1001C701C();
    v293 = (uint64_t)v648;
    v294 = v290;
    v295 = v649;
    v296 = v288;
LABEL_43:
    _ConditionalContent<>.init(storage:)(v294, v295, v296, v291, v292);
    v297 = &qword_100825928;
    v298 = v668;
    sub_100021CC0(v293, v668, &qword_100825928);
    v299 = v298;
    v300 = v666;
    v301 = 0;
LABEL_44:
    swift_storeEnumTagMultiPayload(v299, v300, v301);
    v302 = sub_1001C6FF8();
    v303 = sub_1001C70A0();
    v304 = (uint64_t)v670;
    _ConditionalContent<>.init(storage:)(v298, v667, v669, v302, v303);
    sub_10001BE90(v293, v297);
    v305 = v685;
    sub_100021CC0(v304, v685, &qword_100825918);
    swift_storeEnumTagMultiPayload(v305, v683, 1);
    v306 = sub_1001C6E44();
    v307 = sub_1001C6FD4();
    v308 = v687;
    _ConditionalContent<>.init(storage:)(v305, v684, v686, v306, v307);
    sub_10001BE90(v304, &qword_100825918);
    v251 = &qword_1008258A8;
    v309 = v693;
    sub_100021CC0((uint64_t)v308, v693, &qword_1008258A8);
    swift_storeEnumTagMultiPayload(v309, v691, 0);
    v310 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v311 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v309, v692, v694, v310, v311);
    v255 = (uint64_t)v308;
    goto LABEL_45;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.split(_:))
  {
    v313 = MetricPlatter.metrics.getter(v74);
    if (v313)
      v97 = (_QWORD *)v313;
    else
      v97 = _swiftEmptyArrayStorage;
    v314 = type metadata accessor for MetricsPublisher(0);
    v315 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v316 = v688;
    v317 = v689;
    swift_retain(v690);
    v319 = ObservedObject.init(wrappedValue:)(v318, v314, v315);
    v105 = v320;
    v321 = static Edge.Set.top.getter(v319);
    if (qword_10081DF48 != -1)
      swift_once(&qword_10081DF48, sub_1004F1810);
    v322 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD30);
    v323 = v639;
    *v639 = v319;
    v323[1] = (uint64_t)v105;
    v323[2] = (uint64_t)v317;
    v323[3] = (uint64_t)v97;
    v323[4] = (uint64_t)v316;
    *((_BYTE *)v323 + 40) = v321;
    *((double *)v323 + 6) = v322;
    v323[7] = v324;
    v323[8] = v325;
    v323[9] = v326;
    *((_BYTE *)v323 + 80) = 0;
    swift_storeEnumTagMultiPayload(v323, v638, 0);
    v111 = v316;
    v690 = v317;
    swift_retain(v105);
    swift_bridgeObjectRetain(v97);
    v327 = sub_100047110(&qword_1008258D8);
    v328 = sub_1001C6ECC();
    v329 = sub_1001C6F50();
    v330 = (uint64_t)v640;
    _ConditionalContent<>.init(storage:)(v323, v327, v649, v328, v329);
    sub_100021CC0(v330, (uint64_t)v60, &qword_1008258F0);
    swift_storeEnumTagMultiPayload(v60, v680, 1);
    v331 = sub_100047110(&qword_1008258C8);
    v332 = sub_1001C6E68();
    v333 = sub_1001C6F2C();
    v121 = v682;
    _ConditionalContent<>.init(storage:)(v60, v331, v681, v332, v333);
    sub_10001BE90(v330, &qword_1008258F0);
    goto LABEL_14;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.heartRateZones(_:))
  {
    v334 = MetricPlatter.metrics.getter(v74);
    v335 = _swiftEmptyArrayStorage;
    if (v334)
      v335 = (_QWORD *)v334;
    v682 = v335;
    v336 = v637;
    v337 = v635;
    v688 = v688;
    v689 = v689;
    v338 = v690;
    swift_retain(v690);
    MetricPlatterConstants.init()(v339);
    v340 = *(int *)(v336 + 40);
    v341 = sub_100047110(qword_100837E40);
    v342 = type metadata accessor for WorkoutViewStyle(0);
    v343 = *(_QWORD *)(v342 - 8);
    v344 = *(_QWORD *)(v343 + 72);
    v345 = *(unsigned __int8 *)(v343 + 80);
    v346 = (v345 + 32) & ~v345;
    v347 = swift_allocObject(v341, v346 + 4 * v344, v345 | 7);
    *(_OWORD *)(v347 + 16) = xmmword_100624D00;
    v348 = v347 + v346;
    v349 = *(void (**)(uint64_t, uint64_t, uint64_t))(v343 + 104);
    v349(v348, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v342);
    v349(v348 + v344, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v342);
    v350 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v349(v348 + 2 * v344, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v342);
    v349(v348 + 3 * v344, v350, v342);
    v351 = (uint64_t)v337;
    *(_QWORD *)((char *)v337 + v340) = v347;
    *v337 = v338;
    v352 = swift_retain(v338);
    v353 = MetricsPublisher.heartRateMetricsPublisher.getter(v352);
    v354 = type metadata accessor for HeartRateMetricsPublisher(0);
    v355 = sub_1000083D8(&qword_100826328, (uint64_t (*)(uint64_t))&type metadata accessor for HeartRateMetricsPublisher, (uint64_t)&protocol conformance descriptor for HeartRateMetricsPublisher);
    v337[1] = ObservedObject.init(wrappedValue:)(v353, v354, v355);
    v337[2] = v356;
    v357 = v689;
    v358 = v688;
    v337[3] = v689;
    v337[4] = v358;
    v359 = v358;
    v360 = v357;
    v361 = v682;
    v362 = sub_10046D910(v682);
    swift_bridgeObjectRelease(v361);
    swift_release(v338);

    *(_QWORD *)(v351 + *(int *)(v637 + 36)) = v362;
    v364 = static Edge.Set.top.getter(v363);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v365 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40);
    v367 = v366;
    v369 = v368;
    v371 = v370;
    v372 = v634;
    sub_10004F8C8(v351, v634, type metadata accessor for MirrorHeartRateZonesMetricsPlatter);
    v373 = v664;
    v374 = v372 + *(int *)(v664 + 36);
    *(_BYTE *)v374 = v364;
    *(double *)(v374 + 8) = v365;
    *(_QWORD *)(v374 + 16) = v367;
    *(_QWORD *)(v374 + 24) = v369;
    *(_QWORD *)(v374 + 32) = v371;
    *(_BYTE *)(v374 + 40) = 0;
    sub_100011F54(v351, type metadata accessor for MirrorHeartRateZonesMetricsPlatter);
    v233 = &qword_100825988;
    v234 = v636;
    sub_100045AD4(v372, v636, &qword_100825988);
    v375 = v663;
    sub_100021CC0(v234, (uint64_t)v663, &qword_100825988);
    swift_storeEnumTagMultiPayload(v375, v662, 1);
    v376 = sub_100047110(&qword_100825960);
    v377 = sub_1001C70C4();
    v378 = sub_1001C7140();
    v293 = (uint64_t)v665;
    _ConditionalContent<>.init(storage:)(v375, v376, v373, v377, v378);
    v297 = &qword_100825950;
    v298 = v668;
    sub_100021CC0(v293, v668, &qword_100825950);
    v299 = v298;
    v300 = v666;
    v301 = 1;
    goto LABEL_44;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.multisport(_:))
  {
    v379 = type metadata accessor for MetricsPublisher(0);
    v380 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v381 = v689;
    swift_retain(v690);
    v686 = ObservedObject.init(wrappedValue:)(v382, v379, v380);
    v687 = v383;
    v384 = v381;
    v385 = MetricsPublisher.multisportMetricsPublisher.getter(v384);
    v386 = type metadata accessor for MultisportMetricsPublisher(0);
    v387 = sub_1000083D8(&qword_100837E28, (uint64_t (*)(uint64_t))&type metadata accessor for MultisportMetricsPublisher, (uint64_t)&protocol conformance descriptor for MultisportMetricsPublisher);
    v683 = ObservedObject.init(wrappedValue:)(v385, v386, v387);
    v688 = v388;
    v389 = MetricsPublisher.energyMetricsPublisher.getter();
    v390 = type metadata accessor for EnergyMetricsPublisher(0);
    v391 = sub_1000083D8(&qword_100837E30, (uint64_t (*)(uint64_t))&type metadata accessor for EnergyMetricsPublisher, (uint64_t)&protocol conformance descriptor for EnergyMetricsPublisher);
    v392 = ObservedObject.init(wrappedValue:)(v389, v390, v391);
    v689 = v393;
    v394 = ((uint64_t (*)(void))MetricsPublisher.heartRateMetricsPublisher.getter)();
    v395 = type metadata accessor for HeartRateMetricsPublisher(0);
    v396 = sub_1000083D8(&qword_100826328, (uint64_t (*)(uint64_t))&type metadata accessor for HeartRateMetricsPublisher, (uint64_t)&protocol conformance descriptor for HeartRateMetricsPublisher);
    v397 = ObservedObject.init(wrappedValue:)(v394, v395, v396);
    v399 = v398;
    v400 = MetricsPublisher.lapsMetricsPublisher.getter();
    v401 = type metadata accessor for LapsMetricsPublisher(0);
    v402 = sub_1000083D8(&qword_100837E38, (uint64_t (*)(uint64_t))&type metadata accessor for LapsMetricsPublisher, (uint64_t)&protocol conformance descriptor for LapsMetricsPublisher);
    v403 = ObservedObject.init(wrappedValue:)(v400, v401, v402);
    v405 = v404;
    v406 = MetricsPublisher.workoutStatePublisher.getter(v403);
    v407 = type metadata accessor for WorkoutStatePublisher(0);
    v408 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
    v409 = ObservedObject.init(wrappedValue:)(v406, v407, v408);
    v411 = v410;
    v412 = v384;

    v414 = static Edge.Set.top.getter(v413);
    if (qword_10081DF50 != -1)
      swift_once(&qword_10081DF50, sub_1004F1850);
    v415 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD38);
    LOBYTE(v699) = 0;
    v416 = v656;
    v417 = v688;
    *v656 = v683;
    v416[1] = (uint64_t)v417;
    v416[2] = v392;
    v418 = v689;
    v416[3] = (uint64_t)v689;
    v416[4] = v397;
    v416[5] = v399;
    v416[6] = v403;
    v685 = v399;
    v416[7] = v405;
    v416[8] = v409;
    v684 = v405;
    v419 = v686;
    v416[9] = v411;
    v416[10] = v419;
    v420 = v417;
    v421 = v687;
    v416[11] = (uint64_t)v687;
    v416[12] = (uint64_t)v412;
    v416[13] = v633;
    *((_BYTE *)v416 + 112) = v414;
    *((_DWORD *)v416 + 29) = *(_DWORD *)((char *)&v713 + 3);
    *(_DWORD *)((char *)v416 + 113) = v713;
    *((double *)v416 + 15) = v415;
    v416[16] = v422;
    v416[17] = v423;
    v416[18] = v424;
    *((_BYTE *)v416 + 152) = v699;
    swift_storeEnumTagMultiPayload(v416, v654, 1);
    swift_retain(v420);
    swift_retain(v418);
    swift_retain(v399);
    swift_retain(v405);
    swift_retain(v411);
    swift_retain(v421);
    v690 = v412;
    v425 = sub_100047110(&qword_100825A78);
    v426 = sub_1001C7518();
    v427 = sub_1001C759C();
    v428 = (uint64_t)v657;
    _ConditionalContent<>.init(storage:)(v416, v655, v425, v426, v427);
    v429 = v660;
    sub_100021CC0(v428, (uint64_t)v660, &qword_100825A50);
    swift_storeEnumTagMultiPayload(v429, v658, 0);
    v430 = sub_1001C735C(&qword_100825A48, &qword_100825A50, (void (*)(void))sub_1001C7518, (void (*)(void))sub_1001C759C);
    v431 = (uint64_t)v661;
    _ConditionalContent<>.init(storage:)(v429, v659, &type metadata for Text, v430, &protocol witness table for Text);
    sub_10001BE90(v428, &qword_100825A50);
    v432 = v677;
    sub_100021CC0(v431, v677, &qword_100825A40);
    swift_storeEnumTagMultiPayload(v432, v675, 1);
    v433 = sub_1001C71E8();
    v434 = sub_1001C748C();
    v435 = (uint64_t)v679;
    _ConditionalContent<>.init(storage:)(v432, v676, v678, v433, v434);
    sub_10001BE90(v431, &qword_100825A40);
    v436 = v693;
    sub_100021CC0(v435, v693, &qword_1008259A0);
    swift_storeEnumTagMultiPayload(v436, v691, 1);
    v437 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v438 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v436, v692, v694, v437, v438);
    sub_10001BE90(v435, &qword_1008259A0);

    swift_release(v421);
    swift_release(v411);
    swift_release(v684);
    swift_release(v685);
    swift_release(v689);
    v129 = v688;
    goto LABEL_20;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.power(_:))
  {
    v439 = MetricPlatter.type.getter(v74);
    v440 = MetricPlatter.metrics.getter(v439);
    if (v440)
      v441 = (_QWORD *)v440;
    else
      v441 = _swiftEmptyArrayStorage;
    v442 = objc_msgSend((id)objc_opt_self(HKUnit), "wattUnit");
    v443 = (int *)v632;
    v444 = v629;
    static WorkoutChartProperties.power(unit:)();

    v445 = type metadata accessor for MetricsPublisher(0);
    v446 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v447 = v688;
    v448 = v689;
    swift_retain(v690);
    *(_QWORD *)v444 = ObservedObject.init(wrappedValue:)(v449, v445, v446);
    *((_QWORD *)v444 + 1) = v450;
    *((_QWORD *)v444 + 2) = v448;
    v451 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 32))(&v444[v443[6]], v70, v63);
    *(_QWORD *)&v444[v443[7]] = v441;
    *(_QWORD *)&v444[v443[9]] = v447;
    v452 = static Edge.Set.top.getter(v451);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v453 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40);
    v455 = v454;
    v457 = v456;
    v459 = v458;
    v460 = v628;
    sub_10004F8C8((uint64_t)v444, v628, type metadata accessor for MirrorGraphicsMetricsView);
    v461 = v649;
    v462 = v460 + *(int *)(v649 + 36);
    *(_BYTE *)v462 = v452;
    *(double *)(v462 + 8) = v453;
    *(_QWORD *)(v462 + 16) = v455;
    *(_QWORD *)(v462 + 24) = v457;
    *(_QWORD *)(v462 + 32) = v459;
    *(_BYTE *)(v462 + 40) = 0;
    sub_100011F54((uint64_t)v444, type metadata accessor for MirrorGraphicsMetricsView);
    v233 = &qword_100825900;
    v234 = v630;
    sub_100045AD4(v460, v630, &qword_100825900);
    v463 = v646;
    sub_100021CC0(v234, v646, &qword_100825900);
    swift_storeEnumTagMultiPayload(v463, v645, 0);
    v291 = sub_1001C6F50();
    v292 = sub_1001C701C();
    v293 = (uint64_t)v648;
    v294 = v463;
    v295 = v461;
    v296 = v647;
    goto LABEL_43;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.powerZones(_:))
  {
    v464 = ((uint64_t (*)(void))MetricPlatter.metrics.getter)();
    v465 = _swiftEmptyArrayStorage;
    if (v464)
      v465 = (_QWORD *)v464;
    v687 = v465;
    v466 = v631;
    v467 = v621;
    v688 = v688;
    v689 = v689;
    v468 = v690;
    swift_retain(v690);
    MetricPlatterConstants.init()(v469);
    v470 = *(int *)(v466 + 40);
    v471 = sub_100047110(qword_100837E40);
    v472 = type metadata accessor for WorkoutViewStyle(0);
    v473 = *(_QWORD *)(v472 - 8);
    v474 = *(_QWORD *)(v473 + 72);
    v475 = *(unsigned __int8 *)(v473 + 80);
    v476 = (v475 + 32) & ~v475;
    v477 = swift_allocObject(v471, v476 + 4 * v474, v475 | 7);
    *(_OWORD *)(v477 + 16) = xmmword_100624D00;
    v478 = v477 + v476;
    v479 = *(void (**)(uint64_t, uint64_t, uint64_t))(v473 + 104);
    v479(v478, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v472);
    v479(v478 + v474, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v472);
    v480 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v479(v478 + 2 * v474, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v472);
    v479(v478 + 3 * v474, v480, v472);
    v481 = (uint64_t)v467;
    *(_QWORD *)((char *)v467 + v470) = v477;
    *v467 = v468;
    v482 = swift_retain(v468);
    v483 = MetricsPublisher.powerMetricsPublisher.getter(v482);
    v484 = type metadata accessor for PowerMetricsPublisher(0);
    v485 = sub_1000083D8(&qword_100826320, (uint64_t (*)(uint64_t))&type metadata accessor for PowerMetricsPublisher, (uint64_t)&protocol conformance descriptor for PowerMetricsPublisher);
    v467[1] = ObservedObject.init(wrappedValue:)(v483, v484, v485);
    v467[2] = v486;
    v487 = v689;
    v488 = v688;
    v467[3] = v689;
    v467[4] = v488;
    v489 = v488;
    v490 = v487;
    v491 = v687;
    v492 = sub_1004FA36C(v687);
    swift_bridgeObjectRelease(v491);
    swift_release(v468);

    *(_QWORD *)(v481 + *(int *)(v631 + 36)) = v492;
    v494 = static Edge.Set.top.getter(v493);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v495 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40);
    v497 = v496;
    v499 = v498;
    v501 = v500;
    v502 = v620;
    sub_10004F8C8(v481, v620, type metadata accessor for MirrorPowerZonesMetricsPlatter);
    v503 = v627;
    v504 = v502 + *(int *)(v627 + 36);
    *(_BYTE *)v504 = v494;
    *(double *)(v504 + 8) = v495;
    *(_QWORD *)(v504 + 16) = v497;
    *(_QWORD *)(v504 + 24) = v499;
    *(_QWORD *)(v504 + 32) = v501;
    *(_BYTE *)(v504 + 40) = 0;
    sub_100011F54(v481, type metadata accessor for MirrorPowerZonesMetricsPlatter);
    v233 = &qword_1008259E8;
    v234 = v622;
    sub_100045AD4(v502, v622, &qword_1008259E8);
    v505 = v625;
    sub_100021CC0(v234, v625, &qword_1008259E8);
    swift_storeEnumTagMultiPayload(v505, v624, 1);
    v506 = sub_1001C7230();
    v507 = sub_1001C72B4();
    v508 = (uint64_t)v626;
    v509 = v505;
    v510 = v623;
    v511 = v503;
LABEL_85:
    _ConditionalContent<>.init(storage:)(v509, v510, v511, v506, v507);
    v583 = v673;
    sub_100021CC0(v508, (uint64_t)v673, &qword_1008259C0);
    swift_storeEnumTagMultiPayload(v583, v671, 0);
    v584 = sub_100047110(&qword_100825A00);
    v585 = sub_1001C720C();
    v586 = sub_1001C7338();
    v242 = (uint64_t)v674;
    _ConditionalContent<>.init(storage:)(v583, v672, v584, v585, v586);
    sub_10001BE90(v508, &qword_1008259C0);
    v243 = &qword_1008259B0;
    v244 = v677;
    sub_100021CC0(v242, v677, &qword_1008259B0);
    v245 = v244;
    v246 = v675;
    v247 = 0;
LABEL_31:
    swift_storeEnumTagMultiPayload(v245, v246, v247);
    v248 = sub_1001C71E8();
    v249 = sub_1001C748C();
    v250 = (uint64_t)v679;
    _ConditionalContent<>.init(storage:)(v244, v676, v678, v248, v249);
    sub_10001BE90(v242, v243);
    v251 = &qword_1008259A0;
    v252 = v693;
    sub_100021CC0(v250, v693, &qword_1008259A0);
    swift_storeEnumTagMultiPayload(v252, v691, 1);
    v253 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v254 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v252, v692, v694, v253, v254);
    v255 = v250;
LABEL_45:
    sub_10001BE90(v255, v251);
    v312 = v234;
LABEL_46:
    sub_10001BE90(v312, v233);
    return;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.elevation(_:))
  {
    v512 = v632;
    v513 = v689;
    v514 = v690;
    swift_retain(v690);
    v516 = MetricPlatter.type.getter(v515);
    v517 = (void *)MetricsPublisher.elevationChartUnit.getter(v516);
    static WorkoutChartProperties.elevation(unit:)();

    v518 = type metadata accessor for MetricsPublisher(0);
    v519 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v520 = v688;
    v521 = ObservedObject.init(wrappedValue:)(v514, v518, v519);
    *v46 = v521;
    v46[1] = v522;
    v46[2] = (uint64_t)v513;
    *(uint64_t *)((char *)v46 + *(int *)(v512 + 28)) = (uint64_t)&off_10077F9A0;
    *(uint64_t *)((char *)v46 + *(int *)(v512 + 36)) = (uint64_t)v520;
    v523 = static Edge.Set.top.getter(v521);
    if (qword_10081DF58 != -1)
      swift_once(&qword_10081DF58, sub_1004F1890);
    v524 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD40);
    v526 = v525;
    v528 = v527;
    v530 = v529;
    sub_10004F8C8((uint64_t)v46, (uint64_t)v53, type metadata accessor for MirrorGraphicsMetricsView);
    v531 = v649;
    v532 = &v53[*(int *)(v649 + 36)];
    *v532 = v523;
    *((double *)v532 + 1) = v524;
    *((_QWORD *)v532 + 2) = v526;
    *((_QWORD *)v532 + 3) = v528;
    *((_QWORD *)v532 + 4) = v530;
    v532[40] = 0;
    sub_100011F54((uint64_t)v46, type metadata accessor for MirrorGraphicsMetricsView);
    v233 = &qword_100825900;
    v533 = v619;
    sub_100045AD4((uint64_t)v53, v619, &qword_100825900);
    v534 = v639;
    sub_100021CC0(v533, (uint64_t)v639, &qword_100825900);
    swift_storeEnumTagMultiPayload(v534, v638, 1);
    v535 = sub_100047110(&qword_1008258D8);
    v536 = sub_1001C6ECC();
    v537 = sub_1001C6F50();
    v538 = (uint64_t)v640;
    _ConditionalContent<>.init(storage:)(v534, v535, v531, v536, v537);
    sub_100021CC0(v538, (uint64_t)v60, &qword_1008258F0);
    swift_storeEnumTagMultiPayload(v60, v680, 1);
    v539 = sub_100047110(&qword_1008258C8);
    v540 = sub_1001C6E68();
    v541 = sub_1001C6F2C();
    v542 = v682;
    _ConditionalContent<>.init(storage:)(v60, v539, v681, v540, v541);
    sub_10001BE90(v538, &qword_1008258F0);
    v543 = v685;
    sub_100021CC0((uint64_t)v542, v685, &qword_1008258B8);
    swift_storeEnumTagMultiPayload(v543, v683, 0);
    v544 = sub_1001C6E44();
    v545 = sub_1001C6FD4();
    v546 = v687;
    _ConditionalContent<>.init(storage:)(v543, v684, v686, v544, v545);
    sub_10001BE90((uint64_t)v542, &qword_1008258B8);
    v547 = v693;
    sub_100021CC0((uint64_t)v546, v693, &qword_1008258A8);
    swift_storeEnumTagMultiPayload(v547, v691, 0);
    v548 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
    v549 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
    _ConditionalContent<>.init(storage:)(v547, v692, v694, v548, v549);
    sub_10001BE90((uint64_t)v546, &qword_1008258A8);
    v312 = v533;
    goto LABEL_46;
  }
  if ((_DWORD)v74 == enum case for MetricPlatterType.speedometer(_:))
  {
    v550 = (int *)v614;
    v551 = v616;
    v552 = v689;
    v553 = v690;
    swift_retain(v690);
    MetricPlatter.type.getter(v554);
    *(uint64_t *)((char *)v551 + v550[9]) = 0x402BC71C72268E09;
    *(uint64_t *)((char *)v551 + v550[10]) = 0x402AD288CE703AFBLL;
    v555 = v550[11];
    v556 = v688;
    v557.n128_u64[0] = 0x4071200000000000;
    v558.n128_u64[0] = 0x4071200000000000;
    *(double *)((char *)v551 + v555) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(200.0, 274.0, v557, 274.0, v558, 308.0, 308.0);
    v559 = type metadata accessor for MetricsPublisher(0);
    v560 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    swift_retain(v553);
    v562 = ObservedObject.init(wrappedValue:)(v561, v559, v560);
    *v551 = v562;
    v551[1] = v563;
    v564 = MetricsPublisher.workoutStatePublisher.getter(v562);
    v565 = type metadata accessor for WorkoutStatePublisher(0);
    v566 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
    v567 = ObservedObject.init(wrappedValue:)(v564, v565, v566);
    v569 = v568;
    swift_release(v553);
    v551[2] = v567;
    v551[3] = v569;
    v551[4] = (uint64_t)v552;
    *(uint64_t *)((char *)v551 + v550[8]) = (uint64_t)v556;
    v571 = static Edge.Set.top.getter(v570);
    if (qword_10081DF50 != -1)
      swift_once(&qword_10081DF50, sub_1004F1850);
    v572 = EdgeInsets.init(_all:)(*(double *)&qword_10086AD38);
    v574 = v573;
    v576 = v575;
    v578 = v577;
    v579 = v615;
    sub_10004F8C8((uint64_t)v551, v615, type metadata accessor for MirrorSpeedometerPlatterView);
    v580 = v623;
    v581 = v579 + *(int *)(v623 + 36);
    *(_BYTE *)v581 = v571;
    *(double *)(v581 + 8) = v572;
    *(_QWORD *)(v581 + 16) = v574;
    *(_QWORD *)(v581 + 24) = v576;
    *(_QWORD *)(v581 + 32) = v578;
    *(_BYTE *)(v581 + 40) = 0;
    sub_100011F54((uint64_t)v551, type metadata accessor for MirrorSpeedometerPlatterView);
    v233 = &qword_1008259D0;
    v234 = v617;
    sub_100045AD4(v579, v617, &qword_1008259D0);
    v582 = v625;
    sub_100021CC0(v234, v625, &qword_1008259D0);
    swift_storeEnumTagMultiPayload(v582, v624, 0);
    v506 = sub_1001C7230();
    v507 = sub_1001C72B4();
    v508 = (uint64_t)v626;
    v509 = v582;
    v510 = v580;
    v511 = v627;
    goto LABEL_85;
  }
  v587 = v618;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
  v588._countAndFlagsBits = 0x2072657474616C50;
  v588._object = (void *)0xE800000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v588);
  v590 = MetricPlatter.type.getter(v589);
  v591 = MetricPlatterType.rawValue.getter(v590);
  v593 = v592;
  v690 = *(id *)(v64 + 8);
  ((void (*)(char *, uint64_t))v690)(v67, v63);
  v594._countAndFlagsBits = v591;
  v594._object = v593;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v594);
  swift_bridgeObjectRelease(v593);
  v595._object = (void *)0x80000001006A3410;
  v595._countAndFlagsBits = 0xD000000000000010;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v595);
  v596 = LocalizedStringKey.init(stringInterpolation:)(v587);
  v597 = Text.init(_:tableName:bundle:comment:)(v596);
  v599 = v598;
  v601 = v600;
  v602 = v660;
  *v660 = v597;
  v602[1] = v598;
  LOBYTE(v587) = v603 & 1;
  *((_BYTE *)v602 + 16) = v603 & 1;
  v602[3] = (uint64_t)v600;
  v689 = v600;
  swift_storeEnumTagMultiPayload(v602, v658, 1);
  sub_1000E439C(v597, v599, (char)v587);
  v604 = sub_1001C735C(&qword_100825A48, &qword_100825A50, (void (*)(void))sub_1001C7518, (void (*)(void))sub_1001C759C);
  swift_bridgeObjectRetain(v601);
  v605 = (uint64_t)v661;
  _ConditionalContent<>.init(storage:)(v602, v659, &type metadata for Text, v604, &protocol witness table for Text);
  v606 = v677;
  sub_100021CC0(v605, v677, &qword_100825A40);
  swift_storeEnumTagMultiPayload(v606, v675, 1);
  v607 = sub_1001C71E8();
  v608 = sub_1001C748C();
  v609 = (uint64_t)v679;
  _ConditionalContent<>.init(storage:)(v606, v676, v678, v607, v608);
  sub_10001BE90(v605, &qword_100825A40);
  v610 = v693;
  sub_100021CC0(v609, v693, &qword_1008259A0);
  swift_storeEnumTagMultiPayload(v610, v691, 1);
  v611 = sub_1001C735C(&qword_1008258A0, &qword_1008258A8, (void (*)(void))sub_1001C6E44, (void (*)(void))sub_1001C6FD4);
  v612 = sub_1001C735C(&qword_100825998, &qword_1008259A0, (void (*)(void))sub_1001C71E8, (void (*)(void))sub_1001C748C);
  _ConditionalContent<>.init(storage:)(v610, v692, v694, v611, v612);
  sub_10001BE90(v609, &qword_1008259A0);
  sub_1000E4458(v597, v599, (char)v587);
  v613 = swift_bridgeObjectRelease(v689);
  ((void (*)(char *, uint64_t, __n128))v690)(v73, v63, v613);
}

void sub_1004F1810(double a1, double a2, __n128 a3, double a4, __n128 a5)
{
  a3.n128_u64[0] = 24.0;
  a5.n128_u64[0] = 24.0;
  qword_10086AD30 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(19.0, 12.0, a3, 33.0, a5, 31.0, 18.0);
}

void sub_1004F1850(double a1, double a2, __n128 a3, double a4, __n128 a5)
{
  a3.n128_u64[0] = 14.0;
  a5.n128_u64[0] = 21.0;
  qword_10086AD38 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(27.0, 12.0, a3, 33.0, a5, 21.0, 9.0);
}

void sub_1004F1890(double a1, double a2, __n128 a3, double a4, __n128 a5)
{
  a3.n128_u64[0] = 28.0;
  a5.n128_u64[0] = 28.0;
  qword_10086AD40 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(23.0, 16.0, a3, 37.0, a5, 35.0, 22.0);
}

void sub_1004F18D8()
{
  void *v0;
  id v1;
  char v2;
  double v3;
  double v4;
  id v5;
  char v6;
  double v7;
  id v8;
  char v9;
  double v10;
  id v11;
  char v12;
  id v13;
  char v14;
  double v15;
  id v16;
  char v17;
  __n128 v18;
  __n128 v19;
  double v20;

  v0 = (void *)objc_opt_self(UIDevice);
  v1 = objc_msgSend(v0, "currentDevice");
  v2 = UIDevice.isLargeDisplayZoomEnabled.getter();

  v3 = 79.0;
  if ((v2 & 1) != 0)
    v4 = 79.0;
  else
    v4 = 68.0;
  v5 = objc_msgSend(v0, "currentDevice");
  v6 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v6 & 1) != 0)
    v7 = 84.0;
  else
    v7 = 65.0;
  v8 = objc_msgSend(v0, "currentDevice");
  v9 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v9 & 1) != 0)
    v10 = 78.0;
  else
    v10 = 73.0;
  v11 = objc_msgSend(v0, "currentDevice");
  v12 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v12 & 1) == 0)
    v3 = 65.0;
  v13 = objc_msgSend(v0, "currentDevice");
  v14 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v14 & 1) != 0)
    v15 = 84.0;
  else
    v15 = 75.0;
  v16 = objc_msgSend(v0, "currentDevice");
  v17 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v17 & 1) != 0)
    v20 = 84.0;
  else
    v20 = 75.0;
  v18.n128_f64[0] = v7;
  v19.n128_f64[0] = v3;
  qword_10086AD48 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(60.0, v4, v18, v10, v19, v15, v20);
}

void sub_1004F1AA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_1004B3A38(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100642050;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = &unk_100642068;
    v4[6] = &unk_100642080;
    swift_initStructMetadata(a1, 0, 7, v4, a1 + 32);
  }
}

uint64_t *sub_1004F1B3C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  __int128 v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    v19 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = a3[13];
    v21 = a3[14];
    v22 = (char *)v4 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = *((_QWORD *)v23 + 3);
    v28 = *(_OWORD *)(v23 + 8);
    *(_OWORD *)(v22 + 8) = v28;
    *((_QWORD *)v22 + 3) = v24;
    v25 = (uint64_t *)((char *)v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v12 = v26[1];
    *v25 = *v26;
    v25[1] = v12;
    swift_unknownObjectRetain(v18);
    swift_retain(v28);
    swift_retain(v24);
  }
  swift_retain(v12);
  return v4;
}

double sub_1004F1C94(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double result;

  v4 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_unknownObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));
  v6 = (char *)a1 + a2[13];
  swift_release(*((_QWORD *)v6 + 1));
  swift_release(*((_QWORD *)v6 + 3));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[14] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_1004F1D38(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v27;

  v6 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[9];
  v13 = a3[10];
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  v17 = a3[12];
  *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  v18 = a3[13];
  v19 = a3[14];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 3);
  v27 = *(_OWORD *)(v21 + 8);
  *(_OWORD *)(v20 + 8) = v27;
  *((_QWORD *)v20 + 3) = v22;
  v23 = (uint64_t *)((char *)a1 + v19);
  v24 = (uint64_t *)((char *)a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_unknownObjectRetain(v16);
  swift_retain(v27);
  swift_retain(v22);
  swift_retain(v25);
  return a1;
}

uint64_t *sub_1004F1E68(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_100828058);
    v6 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[9];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRelease(v16);
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  v17 = a3[13];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  *v18 = *(uint64_t *)((char *)a2 + v17);
  v20 = *(uint64_t *)((char *)a1 + v17 + 8);
  v21 = *(uint64_t *)((char *)a2 + v17 + 8);
  v18[1] = v21;
  swift_retain(v21);
  swift_release(v20);
  v22 = *((_QWORD *)v19 + 3);
  v23 = v18[3];
  v18[2] = *((_QWORD *)v19 + 2);
  v18[3] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = a3[14];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  *v25 = *v26;
  v27 = v25[1];
  v28 = v26[1];
  v25[1] = v28;
  swift_retain(v28);
  swift_release(v27);
  return a1;
}

char *sub_1004F1FE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[13];
  v11 = a3[14];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_1004F20C8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_100828058);
    v6 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[9];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_unknownObjectRelease(v13);
  v14 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)&a2[v15];
  v18 = *(_QWORD *)&a1[v15 + 8];
  *((_QWORD *)v16 + 1) = *(_QWORD *)&a2[v15 + 8];
  swift_release(v18);
  v19 = *((_QWORD *)v16 + 3);
  *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
  swift_release(v19);
  v20 = a3[14];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_release(v23);
  return a1;
}

uint64_t sub_1004F2214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F2220);
}

uint64_t sub_1004F2220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100834268);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1004F22A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F22B0);
}

uint64_t sub_1004F22B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100834268);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WorkoutDetailColumnMetricView);
}

uint64_t sub_1004F233C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1006B9DC0, 1);
}

void sub_1004F2370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  double v9;
  uint64_t v10;
  double (*v11)(uint64_t, uint64_t, uint64_t);
  double v12;
  uint64_t v13;
  double v14;
  id v15;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + *(int *)(a1 + 36) + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 24);
  swift_unknownObjectRetain(v4);
  v8 = v7(v6, v5);
  swift_unknownObjectRelease(v4);
  if (v8 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = 0.0;
    if (v8)
    {
      v10 = 0;
      v11 = *(double (**)(uint64_t, uint64_t, uint64_t))(v5 + 56);
      v12 = *(double *)(v2 + *(int *)(a1 + 48));
      do
      {
        v13 = *(_QWORD *)(v2 + 8 + *(int *)(a1 + 36));
        swift_unknownObjectRetain(v13);
        v14 = v11(v10, v6, v5);
        swift_unknownObjectRelease(v13);
        v9 = v9 + v12 + v14;
        ++v10;
      }
      while (v8 != v10);
    }
    v15 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v15, "bounds");

  }
}

double sub_1004F24B4(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v11;

  v2 = sub_100047110(&qword_100837ED8);
  GestureState.wrappedValue.getter(&v11, v2);
  v3 = v11;
  v4 = sub_100047110(&qword_10082F610);
  State.wrappedValue.getter(&v11, v4);
  v5 = v3 + v11;
  sub_1004F2370(a1);
  if (v5 >= v6)
  {
    if (v5 > 0.0)
      return pow(v5, 0.7);
  }
  else
  {
    sub_1004F2370(a1);
    v8 = v7;
    sub_1004F2370(a1);
    return v8 - pow(v9 - v5, 0.7);
  }
  return v5;
}

uint64_t sub_1004F25CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t (**v37)(uint64_t, double *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  _QWORD v69[2];
  __int128 v70;

  v64 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalCoordinateSpace(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DragGesture(0, v8);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100837EC8);
  __chkstk_darwin(v65);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100837ED0);
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  __chkstk_darwin(v16);
  v61 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v18);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v10, v7, &protocol witness table for LocalCoordinateSpace, 10.0);
  v19 = *(int *)(a1 + 52);
  v57 = v2;
  v20 = (uint64_t *)(v2 + v19);
  v21 = v20[1];
  v66 = *v20;
  v67 = v21;
  v68 = *((_OWORD *)v20 + 1);
  v22 = sub_100047110(&qword_100837ED8);
  GestureState.projectedValue.getter(v69, v22);
  v23 = v69[0];
  v53 = v69[1];
  v52 = v70;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v58(v6, v2, a1);
  v24 = *(unsigned __int8 *)(v4 + 80);
  v25 = v4;
  v26 = (v24 + 32) & ~v24;
  v56 = v26 + v5;
  v27 = v24 | 7;
  v28 = swift_allocObject(&unk_1007A52B8, v26 + v5, v24 | 7);
  v54 = *(_QWORD *)(a1 + 16);
  v55 = *(_QWORD *)(a1 + 24);
  v29 = v55;
  *(_QWORD *)(v28 + 16) = v54;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v30(v28 + v26, v6, a1);
  v31 = v59;
  v32 = v13;
  v33 = v13;
  v34 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v15, v33, v60);
  v35 = v65;
  v36 = &v15[*(int *)(v65 + 44)];
  *(_QWORD *)v36 = v23;
  *((_QWORD *)v36 + 1) = v53;
  *((_OWORD *)v36 + 1) = v52;
  v37 = (uint64_t (**)(uint64_t, double *, uint64_t, uint64_t))&v15[*(int *)(v35 + 48)];
  *v37 = sub_1004F5A2C;
  v37[1] = (uint64_t (*)(uint64_t, double *, uint64_t, uint64_t))v28;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v34);
  v38 = v6;
  v39 = v6;
  v40 = v57;
  v58(v39, v57, a1);
  v41 = swift_allocObject(&unk_1007A52E0, v56, v27);
  v42 = v54;
  v43 = v55;
  *(_QWORD *)(v41 + 16) = v54;
  *(_QWORD *)(v41 + 24) = v43;
  v30(v41 + v26, v38, a1);
  v44 = sub_100028384(&qword_100837EE0, &qword_100837EC8, (uint64_t)&protocol conformance descriptor for GestureStateGesture<A, B>);
  v45 = (uint64_t)v61;
  Gesture.onEnded(_:)(sub_1004F5AA0, v41, v65, v44);
  swift_release(v41);
  v46 = sub_10001BE90((uint64_t)v15, &qword_100837EC8);
  v47 = static HorizontalAlignment.leading.getter(v46);
  v48 = v64;
  *v64 = v47;
  v48[1] = 0;
  *((_BYTE *)v48 + 16) = 1;
  v49 = v48;
  v50 = sub_100047110(&qword_100837EE8);
  sub_1004F2C28(v40, v45, v42, v43, (uint64_t)v49 + *(int *)(v50 + 44));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v45, v63);
}

uint64_t sub_1004F298C(uint64_t a1, double *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t result;
  double v14;
  uint64_t v15;

  v3 = type metadata accessor for LayoutDirection(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - v8;
  sub_1003F74E0((uint64_t)&v15 - v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
  v10 = static LayoutDirection.== infix(_:_:)(v9, v6);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v12 = ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
  result = DragGesture.Value.translation.getter(v12);
  if ((v10 & 1) == 0)
    v14 = -v14;
  *a2 = v14;
  return result;
}

uint64_t sub_1004F2A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;

  v7 = type metadata accessor for LayoutDirection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - v12;
  sub_1003F74E0((uint64_t)&v29 - v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for LayoutDirection.leftToRight(_:), v7);
  v14 = static LayoutDirection.== infix(_:_:)(v13, v10);
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v15(v13, v7);
  v17 = type metadata accessor for WorkoutDetailColumnMetricView(0, a3, a4, v16);
  v18 = (uint64_t *)(a2 + *(int *)(v17 + 56));
  v19 = *v18;
  v20 = v18[1];
  v30 = *v18;
  v31 = v20;
  v21 = sub_100047110(&qword_10082F610);
  v22 = State.wrappedValue.getter(&v32, v21);
  v23 = v32;
  DragGesture.Value.translation.getter(v22);
  if ((v14 & 1) == 0)
    v24 = -v24;
  v25 = v23 + v24;
  if (v25 <= 0.0)
    v26 = v25;
  else
    v26 = 0.0;
  sub_1004F2370(v17);
  v30 = v19;
  if (v26 > v27)
    v27 = v26;
  v31 = v20;
  v32 = v27;
  return State.wrappedValue.setter(&v32, v21);
}

uint64_t sub_1004F2C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];

  v30 = a5;
  v31 = a2;
  v8 = type metadata accessor for PlainListStyle(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100837EF0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100837EF8);
  v29 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a3;
  v34 = a4;
  v35 = a1;
  v18 = sub_100047110(&qword_100837F00);
  v19 = sub_1004F5D60(&qword_100837F08, &qword_100837F00, (void (*)(void))sub_1004F5B04);
  v20 = List<>.init(content:)(sub_1004F5AF8, v32, v18, v19);
  PlainListStyle.init()(v20);
  v21 = sub_100028384(&qword_100837FC0, &qword_100837EF0, (uint64_t)&protocol conformance descriptor for List<A, B>);
  View.listStyle<A>(_:)(v10, v11, v8, v21, &protocol witness table for PlainListStyle);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v23 = static GestureMask.all.getter(v22);
  v24 = sub_100047110(&qword_100837ED0);
  v36[0] = v11;
  v36[1] = v8;
  v36[2] = v21;
  v36[3] = &protocol witness table for PlainListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v36, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v26 = sub_100028384(&qword_100837FC8, &qword_100837ED0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  View.gesture<A>(_:including:)(v31, v23, v15, v24, OpaqueTypeConformance2, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v15);
}

uint64_t sub_1004F2E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[2];

  v7 = type metadata accessor for WorkoutDetailColumnMetricView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)v22 - v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v10);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v22[0] = 0;
    v22[1] = result;
    KeyPath = swift_getKeyPath(&unk_100642100);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a1, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(&unk_1007A5308, v16 + v9, v15 | 7);
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = a3;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, v12, v7);
    v18 = sub_100047110(&qword_100821138);
    v19 = sub_100047110(&qword_100837F18);
    v20 = sub_10011DC2C();
    v21 = sub_1004F5B04();
    return ForEach<>.init(_:id:content:)(v22, KeyPath, sub_1004F5F1C, v17, v18, v19, v20, &protocol witness table for Int, v21);
  }
  return result;
}

uint64_t sub_1004F2FEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a5;
  v51 = sub_100047110(&qword_100837F48);
  __chkstk_darwin(v51);
  v50 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100047110(&qword_100837F38);
  v54 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v53 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100047110(&qword_100837F20);
  __chkstk_darwin(v55);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100837FD0);
  v57 = *(_QWORD *)(v13 - 8);
  v58 = v13;
  __chkstk_darwin(v13);
  v52 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WorkoutDetailColumnMetricView(0, a3, a4, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v50 - v18;
  v20 = *a1;
  v22 = *(_QWORD *)(a2 + *(int *)(v21 + 36) + 8);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain(v22);
  v24 = v23(v20, a3, a4);
  swift_unknownObjectRelease(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  if (v24 < 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_5;
  }
  v25 = *(_QWORD *)&v19[*(int *)(v16 + 36) + 8];
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  swift_unknownObjectRetain(v25);
  v27 = v26(a3, a4);
  swift_unknownObjectRelease(v25);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v27 <= 0)
  {
LABEL_5:
    v48 = 1;
    v45 = v58;
    v47 = v59;
    v46 = v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, v48, 1, v45);
  }
  v28 = v50;
  v29 = sub_1004F33DC(v20, v16, v50);
  __chkstk_darwin(v29);
  *(&v50 - 4) = a3;
  *(&v50 - 3) = a4;
  *(&v50 - 2) = a2;
  *(&v50 - 1) = v20;
  v30 = sub_100047110(&qword_100837F78);
  v31 = sub_1000E0A18(&qword_100837F40, &qword_100837F48, (void (*)(void))sub_1004F5CC4);
  v32 = sub_1004F5D60(&qword_100837F70, &qword_100837F78, (void (*)(void))sub_1004F5DC4);
  v33 = v53;
  Section<>.init(header:content:)(v28, sub_1004F5F28, &v50 - 6, v51, v30, v31, v32);
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v35 = Color.init(_:)(v34);
  v36 = static Edge.Set.all.getter(v35);
  v37 = v54;
  v38 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v12, v33, v56);
  v39 = v55;
  v40 = &v12[*(int *)(v55 + 36)];
  *(_QWORD *)v40 = v35;
  v40[8] = v36;
  v41 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v33, v38);
  v42 = static VerticalEdge.Set.all.getter(v41);
  v43 = sub_1004F5B90();
  v44 = v52;
  View.listSectionSeparator(_:edges:)(2, v42, v39, v43);
  sub_10001BE90((uint64_t)v12, &qword_100837F20);
  v46 = v57;
  v45 = v58;
  v47 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v59, v44, v58);
  v48 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, v48, 1, v45);
}

uint64_t sub_1004F33DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v7 = sub_100047110(&qword_100837F68);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100837F58);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v14 = sub_100047110(&qword_100838028);
  sub_1004F3D18(v3, a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), &v9[*(int *)(v14 + 44)]);
  sub_100021CC0((uint64_t)v9, (uint64_t)v12, &qword_100837F68);
  v15 = &v12[*(int *)(v10 + 36)];
  v15[32] = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = sub_10001BE90((uint64_t)v9, &qword_100837F68);
  v17 = static Edge.Set.top.getter(v16);
  v18 = EdgeInsets.init(_all:)(8.0);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_100021CC0((uint64_t)v12, a3, &qword_100837F58);
  v25 = a3 + *(int *)(sub_100047110(&qword_100837F48) + 36);
  *(_BYTE *)v25 = v17;
  *(double *)(v25 + 8) = v18;
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v22;
  *(_QWORD *)(v25 + 32) = v24;
  *(_BYTE *)(v25 + 40) = 0;
  return sub_10001BE90((uint64_t)v12, &qword_100837F58);
}

uint64_t sub_1004F3578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];

  v28[1] = a5;
  v9 = type metadata accessor for WorkoutDetailColumnMetricView(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v13 = (char *)v28 - v12;
  v15 = *(_QWORD *)(a1 + *(int *)(v14 + 36) + 8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain(v15);
  v28[0] = a2;
  v17 = v16(a2, a3, a4);
  result = swift_unknownObjectRelease(v15);
  if (v17 < 0)
  {
    __break(1u);
  }
  else
  {
    v29[0] = 0;
    v29[1] = v17;
    KeyPath = swift_getKeyPath(&unk_100642100);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    v20 = *(unsigned __int8 *)(v10 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_1007A5330, v22 + 8, v20 | 7);
    *(_QWORD *)(v23 + 16) = a3;
    *(_QWORD *)(v23 + 24) = a4;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23 + v21, v13, v9);
    *(_QWORD *)(v23 + v22) = v28[0];
    v24 = sub_100047110(&qword_100821138);
    v25 = sub_100047110(&qword_100837F88);
    v26 = sub_10011DC2C();
    v27 = sub_1004F5DC4();
    return ForEach<>.init(_:id:content:)(v29, KeyPath, sub_1004F6024, v23, v24, v25, v26, &protocol witness table for Int, v27);
  }
  return result;
}

uint64_t sub_1004F372C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t OpaqueTypeConformance2;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v62 = a3;
  v67 = a6;
  v64 = sub_100047110(&qword_100837FD8);
  __chkstk_darwin(v64);
  v66 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100837FA8);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100837F90);
  __chkstk_darwin(v65);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - v17;
  v63 = sub_100047110(&qword_100837FE0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v59 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v60 = (char *)&v59 - v21;
  v22 = *a1;
  v24 = type metadata accessor for WorkoutDetailColumnMetricView(0, a4, a5, v23);
  v25 = *(_QWORD *)(a2 + *(int *)(v24 + 36) + 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 72);
  swift_unknownObjectRetain(v25);
  LOBYTE(a5) = v26(a4, a5);
  swift_unknownObjectRelease(v25);
  if ((a5 & 1) == 0 || v22)
  {
    sub_1004F3C24(v22, v62, v24, (uint64_t)v13);
    v47 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v47, "bounds");
    v49 = v48;

    v51 = static Alignment.leading.getter(v50);
    _FrameLayout.init(width:height:alignment:)(&v70, v49, 0, 0, 1, v51, v52);
    sub_100021CC0((uint64_t)v13, (uint64_t)v15, &qword_100837FA8);
    v53 = v65;
    v54 = &v15[*(int *)(v65 + 36)];
    v55 = v71;
    *(_OWORD *)v54 = v70;
    *((_OWORD *)v54 + 1) = v55;
    *((_OWORD *)v54 + 2) = v72;
    sub_10001BE90((uint64_t)v13, &qword_100837FA8);
    sub_100045AD4((uint64_t)v15, (uint64_t)v18, &qword_100837F90);
    v56 = v66;
    sub_100021CC0((uint64_t)v18, v66, &qword_100837F90);
    swift_storeEnumTagMultiPayload(v56, v64, 1);
    v57 = sub_1000E0A18(&qword_100837F98, &qword_100837F90, (void (*)(void))sub_1004F5E7C);
    v68 = v53;
    v69 = v57;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.listRowSeparatorTint(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v56, v63, v53, OpaqueTypeConformance2, v57);
    return sub_10001BE90((uint64_t)v18, &qword_100837F90);
  }
  else
  {
    sub_1004F3C24(0, v62, v24, (uint64_t)v13);
    v27 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v27, "bounds");
    v29 = v28;

    v31 = static Alignment.leading.getter(v30);
    _FrameLayout.init(width:height:alignment:)(&v70, v29, 0, 0, 1, v31, v32);
    sub_100021CC0((uint64_t)v13, (uint64_t)v18, &qword_100837FA8);
    v33 = v65;
    v34 = &v18[*(int *)(v65 + 36)];
    v35 = v71;
    *(_OWORD *)v34 = v70;
    *((_OWORD *)v34 + 1) = v35;
    *((_OWORD *)v34 + 2) = v72;
    sub_10001BE90((uint64_t)v13, &qword_100837FA8);
    v37 = static Color.gray.getter(v36);
    v38 = static VerticalEdge.Set.all.getter(v37);
    v39 = sub_1000E0A18(&qword_100837F98, &qword_100837F90, (void (*)(void))sub_1004F5E7C);
    v40 = v59;
    View.listRowSeparatorTint(_:edges:)(v37, v38, v33, v39);
    swift_release(v37);
    sub_10001BE90((uint64_t)v18, &qword_100837F90);
    v42 = v60;
    v41 = v61;
    v43 = v63;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v40, v63);
    v44 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v66, v42, v43);
    swift_storeEnumTagMultiPayload(v44, v64, 0);
    v68 = v33;
    v69 = v39;
    v45 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.listRowSeparatorTint(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v44, v43, v33, v45, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
}

uint64_t sub_1004F3C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = v4;
  v10 = sub_100047110(&qword_100837FB8);
  __chkstk_darwin(v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v13);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v14 = sub_100047110(&qword_100837FE8);
  sub_1004F5234(v5, a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), &v12[*(int *)(v14 + 44)]);
  sub_100021CC0((uint64_t)v12, a4, &qword_100837FB8);
  v15 = a4 + *(int *)(sub_100047110(&qword_100837FA8) + 36);
  *(_BYTE *)(v15 + 32) = 0;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  return sub_10001BE90((uint64_t)v12, &qword_100837FB8);
}

uint64_t sub_1004F3D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  __int128 v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;

  v107 = a2;
  v109 = a1;
  v117 = a5;
  v9 = sub_100047110(&qword_100838030);
  __chkstk_darwin(v9);
  v113 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100047110(&qword_100838038);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v115 = (uint64_t)&v103 - v13;
  v105 = type metadata accessor for DynamicTypeSize(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100838040);
  v111 = *(_QWORD *)(v16 - 8);
  v112 = v16;
  __chkstk_darwin(v16);
  v106 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v110 = (char *)&v103 - v19;
  v108 = type metadata accessor for WorkoutDetailColumnMetricView(0, a3, a4, v20);
  v21 = *(_QWORD *)(a1 + *(int *)(v108 + 36) + 8);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 40);
  swift_unknownObjectRetain(v21);
  v23 = v22(a2, a3, a4);
  v25 = v24;
  swift_unknownObjectRelease(v21);
  *(_QWORD *)&v118 = v23;
  *((_QWORD *)&v118 + 1) = v25;
  v26 = sub_100038CA0();
  v27 = Text.init<A>(_:)(&v118, &type metadata for String, v26);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v34 = static Font.headline.getter();
  v36 = Text.font(_:)(v34, v27, v29, v33, v31, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_release(v34);
  v43 = v40 & 1;
  sub_1000E4458(v27, v29, v33);
  swift_bridgeObjectRelease(v31, v44, v45, v46, v47, v48, v49, v50);
  v52 = static Color.white.getter(v51);
  v53 = Text.foregroundColor(_:)(v52, v36, v38, v43, v42);
  v55 = v54;
  LOBYTE(v33) = v56;
  v58 = v57;
  swift_release(v52);
  sub_1000E4458(v36, v38, v43);
  swift_bridgeObjectRelease(v42, v59, v60, v61, v62, v63, v64, v65);
  LOBYTE(v52) = static Edge.Set.leading.getter(v66);
  v67 = EdgeInsets.init(_all:)(20.0);
  *(_QWORD *)&v118 = v53;
  *((_QWORD *)&v118 + 1) = v55;
  LOBYTE(v119) = v33 & 1;
  *((_QWORD *)&v119 + 1) = v58;
  LOBYTE(v120) = v52;
  *((double *)&v120 + 1) = v67;
  v121 = v68;
  v122 = v69;
  v123 = v70;
  v124 = 0;
  v71 = v104;
  v72 = v105;
  (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v15, enum case for DynamicTypeSize.large(_:), v105);
  v73 = sub_100047110(&qword_100823EE0);
  v74 = sub_10016F0EC((unint64_t *)&qword_100823ED8, &qword_100823EE0);
  v75 = v106;
  View.dynamicTypeSize(_:)(v15, v73, v74);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v72);
  v76 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)&v119 + 1);
  sub_1000E4458(v118, *((uint64_t *)&v118 + 1), v119);
  swift_bridgeObjectRelease(v76, v77, v78, v79, v80, v81, v82, v83);
  v84 = v111;
  v85 = v112;
  v86 = v110;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v75, v112);
  v87 = v113;
  sub_1004F425C(v108, v113);
  v88 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v88, "bounds");
  v90 = v89;

  v92 = static Alignment.leading.getter(v91);
  _FrameLayout.init(width:height:alignment:)(&v118, v90, 0, 0, 1, v92, v93);
  v94 = v114;
  sub_100021CC0(v87, v114, &qword_100838030);
  v95 = (_OWORD *)(v94 + *(int *)(v116 + 36));
  v96 = v119;
  *v95 = v118;
  v95[1] = v96;
  v95[2] = v120;
  sub_10001BE90(v87, &qword_100838030);
  v97 = v115;
  sub_100045AD4(v94, v115, &qword_100838038);
  v98 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v98(v75, v86, v85);
  sub_100021CC0(v97, v94, &qword_100838038);
  v99 = v117;
  v98(v117, v75, v85);
  v100 = sub_100047110(&qword_100838048);
  sub_100021CC0(v94, (uint64_t)&v99[*(int *)(v100 + 48)], &qword_100838038);
  sub_10001BE90(v97, &qword_100838038);
  v101 = *(void (**)(char *, uint64_t))(v84 + 8);
  v101(v86, v85);
  sub_10001BE90(v94, &qword_100838038);
  return ((uint64_t (*)(char *, uint64_t))v101)(v75, v85);
}

uint64_t sub_1004F425C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_100047110(&qword_100838050);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.bottom.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v9 = sub_100047110(&qword_100838058);
  sub_1004F4334(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)&v7[*(int *)(v9 + 44)]);
  sub_100021CC0((uint64_t)v7, a2, &qword_100838050);
  v10 = a2 + *(int *)(sub_100047110(&qword_100838030) + 36);
  *(_BYTE *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  return sub_10001BE90((uint64_t)v7, &qword_100838050);
}

uint64_t sub_1004F4334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  void (*v27)(_QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double (*v32)(_QWORD, uint64_t, uint64_t);
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[3];

  v76 = a4;
  v7 = sub_100047110(&qword_100838060);
  __chkstk_darwin(v7);
  v73 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100047110(&qword_100838068);
  __chkstk_darwin(v75);
  v72 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v74 = (uint64_t)&v60 - v11;
  v61 = type metadata accessor for AttributedString(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100838070);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100838078);
  __chkstk_darwin(v65);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100047110(&qword_100838080);
  __chkstk_darwin(v67);
  v64 = (uint64_t)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100047110(&qword_100838088);
  __chkstk_darwin(v71);
  v68 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_100838090);
  __chkstk_darwin(v70);
  v66 = (uint64_t)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v69 = (uint64_t)&v60 - v23;
  v25 = (int *)type metadata accessor for WorkoutDetailColumnMetricView(0, a2, a3, v24);
  v26 = *(_QWORD *)(a1 + v25[9] + 8);
  v27 = *(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 48);
  swift_unknownObjectRetain(v26);
  v63 = a2;
  v27(0, a2, a3);
  swift_unknownObjectRelease(v26);
  sub_1004F491C((uint64_t)v13, (uint64_t)v25, v28, v29, v30, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v61);
  v31 = *(_QWORD *)(a1 + v25[9] + 8);
  v62 = a3;
  v32 = *(double (**)(_QWORD, uint64_t, uint64_t))(a3 + 56);
  swift_unknownObjectRetain(v31);
  v33 = v32(0, a2, a3);
  v34 = swift_unknownObjectRelease(v31);
  v35 = static Alignment.bottomLeading.getter(v34);
  _FrameLayout.init(width:height:alignment:)(v77, *(_QWORD *)&v33, 0, 0, 1, v35, v36);
  sub_100021CC0((uint64_t)v16, (uint64_t)v18, &qword_100838070);
  v37 = &v18[*(int *)(v65 + 36)];
  v38 = v77[1];
  *(_OWORD *)v37 = v77[0];
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v77[2];
  v39 = sub_10001BE90((uint64_t)v16, &qword_100838070);
  v40 = a1;
  v41 = *(_QWORD *)(a1 + v25[10]);
  v42 = *(_QWORD *)(a1 + v25[12]);
  LOBYTE(v31) = static Edge.Set.all.getter(v39);
  v43 = v64;
  sub_100021CC0((uint64_t)v18, v64, &qword_100838078);
  v44 = v43 + *(int *)(v67 + 36);
  *(_BYTE *)v44 = v31;
  *(_QWORD *)(v44 + 8) = 0;
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = 0;
  *(_QWORD *)(v44 + 32) = v42;
  *(_BYTE *)(v44 + 40) = 0;
  sub_10001BE90((uint64_t)v18, &qword_100838078);
  v45 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v46 = Color.init(_:)(v45);
  LOBYTE(v42) = static Edge.Set.all.getter(v46);
  v47 = v68;
  sub_100021CC0(v43, v68, &qword_100838080);
  v48 = v47 + *(int *)(v71 + 36);
  *(_QWORD *)v48 = v46;
  *(_BYTE *)(v48 + 8) = v42;
  sub_10001BE90(v43, &qword_100838080);
  v49 = v66;
  sub_100021CC0(v47, v66, &qword_100838088);
  *(_QWORD *)(v49 + *(int *)(v70 + 36)) = 0x3FF0000000000000;
  sub_10001BE90(v47, &qword_100838088);
  v50 = v69;
  sub_100045AD4(v49, v69, &qword_100838090);
  v51 = v73;
  sub_1004F497C(v40, v63, v62, v52, v73);
  v53 = sub_1004F24B4((uint64_t)v25);
  v54 = v72;
  sub_100021CC0(v51, v72, &qword_100838060);
  v55 = (double *)(v54 + *(int *)(v75 + 36));
  *v55 = v53;
  v55[1] = 0.0;
  sub_10001BE90(v51, &qword_100838060);
  v56 = v74;
  sub_100045AD4(v54, v74, &qword_100838068);
  sub_100021CC0(v50, v49, &qword_100838090);
  sub_100021CC0(v56, v54, &qword_100838068);
  v57 = v76;
  sub_100021CC0(v49, v76, &qword_100838090);
  v58 = sub_100047110(&qword_100838098);
  sub_100021CC0(v54, v57 + *(int *)(v58 + 48), &qword_100838068);
  sub_10001BE90(v56, &qword_100838068);
  sub_10001BE90(v50, &qword_100838090);
  sub_10001BE90(v54, &qword_100838068);
  return sub_10001BE90(v49, &qword_100838090);
}

uint64_t sub_1004F491C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;

  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v10 = sub_100047110(&qword_1008380B8);
  return sub_1004F4DBC(a1, v6, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (_QWORD *)(a6 + *(int *)(v10 + 44)));
}

uint64_t sub_1004F497C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];

  v26[1] = a5;
  v8 = type metadata accessor for WorkoutDetailColumnMetricView(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v12 = (char *)v26 - v11;
  v14 = *(_QWORD *)(a1 + *(int *)(v13 + 36) + 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  swift_unknownObjectRetain(v14);
  v16 = v15(a2, a3);
  result = swift_unknownObjectRelease(v14);
  if (v16 < 1)
  {
    __break(1u);
  }
  else
  {
    v27[0] = 1;
    v27[1] = v16;
    KeyPath = swift_getKeyPath(&unk_100642100);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v19 = *(unsigned __int8 *)(v9 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject(&unk_1007A5380, v20 + v10, v19 | 7);
    *(_QWORD *)(v21 + 16) = a2;
    *(_QWORD *)(v21 + 24) = a3;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v12, v8);
    v22 = sub_100047110(&qword_100821138);
    v23 = sub_100047110(&qword_100838080);
    v24 = sub_10011DC2C();
    v25 = sub_1000E0A18(&qword_1008380A0, &qword_100838080, (void (*)(void))sub_1004F6480);
    return ForEach<>.init(_:id:content:)(v27, KeyPath, sub_1004F63FC, v21, v22, v23, v24, &protocol witness table for Int, v25);
  }
  return result;
}

uint64_t sub_1004F4B30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double (*v26)(uint64_t, uint64_t, uint64_t);
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];

  v47 = a5;
  v9 = type metadata accessor for AttributedString(0);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100838070);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100047110(&qword_100838078);
  __chkstk_darwin(v46);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v19 = type metadata accessor for WorkoutDetailColumnMetricView(0, a3, a4, v18);
  v20 = *(_QWORD *)(a2 + *(int *)(v19 + 36) + 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 48);
  swift_unknownObjectRetain(v20);
  v21(v17, a3, a4);
  swift_unknownObjectRelease(v20);
  sub_1004F491C((uint64_t)v11, v19, v22, v23, v24, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
  v25 = *(_QWORD *)(a2 + *(int *)(v19 + 36) + 8);
  v26 = *(double (**)(uint64_t, uint64_t, uint64_t))(a4 + 56);
  swift_unknownObjectRetain(v25);
  v27 = v26(v17, a3, a4);
  v28 = swift_unknownObjectRelease(v25);
  v29 = static Alignment.bottomLeading.getter(v28);
  _FrameLayout.init(width:height:alignment:)(v48, *(_QWORD *)&v27, 0, 0, 1, v29, v30);
  sub_100021CC0((uint64_t)v14, (uint64_t)v16, &qword_100838070);
  v31 = &v16[*(int *)(v46 + 36)];
  v32 = v48[1];
  *(_OWORD *)v31 = v48[0];
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v48[2];
  v33 = sub_10001BE90((uint64_t)v14, &qword_100838070);
  LOBYTE(v26) = static Edge.Set.trailing.getter(v33);
  v34 = EdgeInsets.init(_all:)(*(double *)(a2 + *(int *)(v19 + 48)));
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = v47;
  sub_100021CC0((uint64_t)v16, v47, &qword_100838078);
  v42 = v41 + *(int *)(sub_100047110(&qword_100838080) + 36);
  *(_BYTE *)v42 = (_BYTE)v26;
  *(double *)(v42 + 8) = v34;
  *(_QWORD *)(v42 + 16) = v36;
  *(_QWORD *)(v42 + 24) = v38;
  *(_QWORD *)(v42 + 32) = v40;
  *(_BYTE *)(v42 + 40) = 0;
  return sub_10001BE90((uint64_t)v16, &qword_100838078);
}

uint64_t sub_1004F4DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;

  v93 = a3;
  v94 = a4;
  v95 = a2;
  v96 = a5;
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008319B8);
  v87 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  __chkstk_darwin(v10);
  v85 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_1008319C0);
  __chkstk_darwin(v84);
  v90 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100047110(&qword_1008319C8);
  __chkstk_darwin(v86);
  v91 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100047110(&qword_1008380C0);
  __chkstk_darwin(v89);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v92 = (uint64_t)&v83 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v17);
  v19 = Text.init(_:)(v9);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v26 = v23 & 1;
  v27 = Font.init(_:)((id)qword_100869FE8);
  v29 = Text.font(_:)(v27, v19, v21, v26, v25, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  swift_release(v27);
  LOBYTE(v27) = v33 & 1;
  sub_1000E4458(v19, v21, v26);
  swift_bridgeObjectRelease(v25, v36, v37, v38, v39, v40, v41, v42);
  v97 = v29;
  v98 = v31;
  v99 = v33 & 1;
  v100 = v35;
  v43 = v85;
  View.hyphenationFactor(_:)(&type metadata for Text, &protocol witness table for Text, 0.1);
  sub_1000E4458(v29, v31, v27);
  swift_bridgeObjectRelease(v35, v44, v45, v46, v47, v48, v49, v50);
  v51 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v52 = Color.init(_:)(v51);
  KeyPath = swift_getKeyPath(&unk_100642118);
  v55 = v87;
  v54 = v88;
  v56 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v90, v43, v88);
  v57 = (uint64_t *)(v56 + *(int *)(v84 + 36));
  *v57 = KeyPath;
  v57[1] = v52;
  v58 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v43, v54);
  LOBYTE(v52) = static Edge.Set.bottom.getter(v58);
  v60 = type metadata accessor for WorkoutDetailColumnMetricView(0, v93, v94, v59);
  v61 = EdgeInsets.init(_all:)(*(double *)(v95 + *(int *)(v60 + 44)));
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v68 = v91;
  sub_100021CC0(v56, v91, &qword_1008319C0);
  v69 = v68 + *(int *)(v86 + 36);
  *(_BYTE *)v69 = v52;
  *(double *)(v69 + 8) = v61;
  *(_QWORD *)(v69 + 16) = v63;
  *(_QWORD *)(v69 + 24) = v65;
  *(_QWORD *)(v69 + 32) = v67;
  *(_BYTE *)(v69 + 40) = 0;
  v70 = sub_10001BE90(v56, &qword_1008319C0);
  LOBYTE(v52) = static Edge.Set.trailing.getter(v70);
  v71 = EdgeInsets.init(_all:)(8.0);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  sub_100021CC0(v68, (uint64_t)v15, &qword_1008319C8);
  v78 = &v15[*(int *)(v89 + 36)];
  *v78 = v52;
  *((double *)v78 + 1) = v71;
  *((_QWORD *)v78 + 2) = v73;
  *((_QWORD *)v78 + 3) = v75;
  *((_QWORD *)v78 + 4) = v77;
  v78[40] = 0;
  sub_10001BE90(v68, &qword_1008319C8);
  v79 = v92;
  sub_100045AD4((uint64_t)v15, v92, &qword_1008380C0);
  sub_100021CC0(v79, (uint64_t)v15, &qword_1008380C0);
  v80 = v96;
  *v96 = 0;
  *((_BYTE *)v80 + 8) = 1;
  v81 = sub_100047110(&qword_1008380C8);
  sub_100021CC0((uint64_t)v15, (uint64_t)v80 + *(int *)(v81 + 48), &qword_1008380C0);
  sub_10001BE90(v79, &qword_1008380C0);
  return sub_10001BE90((uint64_t)v15, &qword_1008380C0);
}

uint64_t *sub_1004F5234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  double (*v23)(_QWORD, uint64_t, uint64_t);
  double v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  _BYTE *v33;
  double *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[7];
  _BYTE v71[7];
  unsigned __int8 v72;
  _BYTE v73[7];
  _BYTE v74[7];
  unsigned __int8 v75;
  _BYTE v76[7];
  unsigned __int8 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86[2];
  char v87;
  _BYTE v88[7];
  uint64_t v89;
  char v90;
  _BYTE v91[7];
  uint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE v95[7];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  _BYTE v101[7];
  uint64_t v102;
  char v103;
  _BYTE v104[7];
  uint64_t v105;

  v52 = a3;
  v12 = sub_100047110(&qword_100837FF0);
  __chkstk_darwin(v12);
  v57 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = sub_100047110(&qword_100837FF8);
  __chkstk_darwin(v58);
  v56 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v60 = &v49[-v16];
  v18 = (int *)type metadata accessor for WorkoutDetailColumnMetricView(0, a4, a5, v17);
  v19 = *(_QWORD *)(a1 + v18[9] + 8);
  v20 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a5 + 64);
  swift_unknownObjectRetain(v19);
  v21 = v20(a2, 0, a3, a4, a5);
  swift_unknownObjectRelease(v19);
  v22 = *(_QWORD *)(a1 + v18[9] + 8);
  v23 = *(double (**)(_QWORD, uint64_t, uint64_t))(a5 + 56);
  swift_unknownObjectRetain(v22);
  v24 = v23(0, a4, a5);
  swift_unknownObjectRelease(v22);
  v26 = static Alignment.leading.getter(v25);
  v28 = _FrameLayout.init(width:height:alignment:)(&v64, *(_QWORD *)&v24, 0, 0, 1, v26, v27);
  v63 = v64;
  LOBYTE(v22) = v65;
  v51 = v66;
  LOBYTE(v23) = v67;
  v59 = v69;
  v55 = *(_QWORD *)(a1 + v18[10]);
  v29 = *(_QWORD *)(a1 + v18[12]);
  v53 = v68;
  v54 = v29;
  v50 = static Edge.Set.all.getter(v28);
  v30 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v62 = Color.init(_:)(v30);
  v61 = static Edge.Set.all.getter(v62);
  v77 = v22;
  v75 = v23;
  v72 = 0;
  v31 = (uint64_t)v57;
  sub_1004F56FC(a1, a2, v52, a4, a5);
  v32 = sub_1004F24B4((uint64_t)v18);
  v33 = v56;
  sub_100021CC0(v31, (uint64_t)v56, &qword_100837FF0);
  v34 = (double *)&v33[*(int *)(v58 + 36)];
  *v34 = v32;
  v34[1] = 0.0;
  sub_10001BE90(v31, &qword_100837FF0);
  v35 = v60;
  sub_100045AD4((uint64_t)v33, (uint64_t)v60, &qword_100837FF8);
  LOBYTE(a4) = v77;
  LODWORD(v52) = v77;
  LOBYTE(a5) = v75;
  LODWORD(v57) = v75;
  LOBYTE(v22) = v72;
  LODWORD(v58) = v72;
  sub_100021CC0((uint64_t)v35, (uint64_t)v33, &qword_100837FF8);
  v36 = v21;
  *(_QWORD *)&v78 = v21;
  *((_QWORD *)&v78 + 1) = v63;
  LOBYTE(v79) = a4;
  *(_DWORD *)((char *)&v79 + 1) = *(_DWORD *)v76;
  DWORD1(v79) = *(_DWORD *)&v76[3];
  v37 = v51;
  *((_QWORD *)&v79 + 1) = v51;
  LOBYTE(v80) = a5;
  *(_DWORD *)((char *)&v80 + 1) = *(_DWORD *)v74;
  DWORD1(v80) = *(_DWORD *)&v74[3];
  v39 = v53;
  v38 = v54;
  *((_QWORD *)&v80 + 1) = v53;
  *(_QWORD *)&v81 = v59;
  LOBYTE(v21) = v50;
  BYTE8(v81) = v50;
  HIDWORD(v81) = *(_DWORD *)&v73[3];
  *(_DWORD *)((char *)&v81 + 9) = *(_DWORD *)v73;
  v40 = v55;
  *(_QWORD *)&v82 = 0;
  *((_QWORD *)&v82 + 1) = v55;
  *(_QWORD *)&v83 = 0;
  *((_QWORD *)&v83 + 1) = v54;
  LOBYTE(v84) = v22;
  *(_DWORD *)((char *)&v84 + 1) = *(_DWORD *)v71;
  DWORD1(v84) = *(_DWORD *)&v71[3];
  *((_QWORD *)&v84 + 1) = v62;
  LOBYTE(v85) = v61;
  DWORD1(v85) = *(_DWORD *)&v70[3];
  *(_DWORD *)((char *)&v85 + 1) = *(_DWORD *)v70;
  *((_QWORD *)&v85 + 1) = 0x3FF0000000000000;
  v41 = v78;
  v42 = v79;
  v43 = v81;
  a6[2] = v80;
  a6[3] = v43;
  *a6 = v41;
  a6[1] = v42;
  v44 = v82;
  v45 = v83;
  v46 = v85;
  a6[6] = v84;
  a6[7] = v46;
  a6[4] = v44;
  a6[5] = v45;
  v47 = sub_100047110(&qword_100838000);
  sub_100021CC0((uint64_t)v33, (uint64_t)a6 + *(int *)(v47 + 48), &qword_100837FF8);
  sub_1004F60A0(&v78);
  sub_10001BE90((uint64_t)v60, &qword_100837FF8);
  sub_10001BE90((uint64_t)v33, &qword_100837FF8);
  v86[0] = v36;
  v86[1] = v63;
  v87 = v52;
  *(_DWORD *)v88 = *(_DWORD *)v76;
  *(_DWORD *)&v88[3] = *(_DWORD *)&v76[3];
  v89 = v37;
  v90 = (char)v57;
  *(_DWORD *)v91 = *(_DWORD *)v74;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v74[3];
  v92 = v39;
  v93 = v59;
  v94 = v21;
  *(_DWORD *)&v95[3] = *(_DWORD *)&v73[3];
  *(_DWORD *)v95 = *(_DWORD *)v73;
  v96 = 0;
  v97 = v40;
  v98 = 0;
  v99 = v38;
  v100 = v58;
  *(_DWORD *)v101 = *(_DWORD *)v71;
  *(_DWORD *)&v101[3] = *(_DWORD *)&v71[3];
  v102 = v62;
  v103 = v61;
  *(_DWORD *)&v104[3] = *(_DWORD *)&v70[3];
  *(_DWORD *)v104 = *(_DWORD *)v70;
  v105 = 0x3FF0000000000000;
  return sub_1004F60D4(v86);
}

uint64_t sub_1004F56FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v29 = a2;
  v30 = a3;
  v8 = type metadata accessor for WorkoutDetailColumnMetricView(0, a4, a5, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v12 = (char *)&v27 - v11;
  v14 = *(_QWORD *)(a1 + *(int *)(v13 + 36) + 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  swift_unknownObjectRetain(v14);
  v16 = v15(a4, a5);
  result = swift_unknownObjectRelease(v14);
  if (v16 < 1)
  {
    __break(1u);
  }
  else
  {
    v31[0] = 1;
    v31[1] = v16;
    KeyPath = swift_getKeyPath(&unk_100642100);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = *(unsigned __int8 *)(v9 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_1007A5358, v21 + 8, v18 | 7);
    *(_QWORD *)(v22 + 16) = a4;
    *(_QWORD *)(v22 + 24) = a5;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22 + v19, v12, v8);
    *(_QWORD *)(v22 + v20) = v29;
    *(_QWORD *)(v22 + v21) = v30;
    v23 = sub_100047110(&qword_100821138);
    v24 = sub_100047110(&qword_100838008);
    v25 = sub_10011DC2C();
    v26 = sub_1004F6288();
    return ForEach<>.init(_:id:content:)(v31, KeyPath, sub_1004F6200, v22, v23, v24, v25, &protocol witness table for Int, v26);
  }
  return result;
}

void sub_1004F58C0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  double (*v18)(uint64_t, uint64_t, uint64_t);
  double v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v8 = a5;
  v13 = *a1;
  v14 = type metadata accessor for WorkoutDetailColumnMetricView(0, a5, a6, a4);
  v15 = *(_QWORD *)(a2 + *(int *)(v14 + 36) + 8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 64);
  swift_unknownObjectRetain(v15);
  v32 = v16(a3, v13, a4, v8, a6);
  swift_unknownObjectRelease(v15);
  v17 = *(_QWORD *)(a2 + *(int *)(v14 + 36) + 8);
  v18 = *(double (**)(uint64_t, uint64_t, uint64_t))(a6 + 56);
  swift_unknownObjectRetain(v17);
  v19 = v18(v13, v8, a6);
  swift_unknownObjectRelease(v17);
  v21 = static Alignment.leading.getter(v20);
  v23 = _FrameLayout.init(width:height:alignment:)(&v33, *(_QWORD *)&v19, 0, 0, 1, v21, v22);
  v24 = v33;
  LOBYTE(v8) = v34;
  v25 = v35;
  LOBYTE(v18) = v36;
  v27 = v37;
  v26 = v38;
  LOBYTE(v17) = static Edge.Set.trailing.getter(v23);
  v28 = EdgeInsets.init(_all:)(*(double *)(a2 + *(int *)(v14 + 48)));
  *(_QWORD *)a7 = v32;
  *(_QWORD *)(a7 + 8) = v24;
  *(_BYTE *)(a7 + 16) = v8;
  *(_QWORD *)(a7 + 24) = v25;
  *(_BYTE *)(a7 + 32) = (_BYTE)v18;
  *(_QWORD *)(a7 + 40) = v27;
  *(_QWORD *)(a7 + 48) = v26;
  *(_BYTE *)(a7 + 56) = v17;
  *(double *)(a7 + 64) = v28;
  *(_QWORD *)(a7 + 72) = v29;
  *(_QWORD *)(a7 + 80) = v30;
  *(_QWORD *)(a7 + 88) = v31;
  *(_BYTE *)(a7 + 96) = 0;
}

uint64_t sub_1004F5A2C(uint64_t a1, double *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for WorkoutDetailColumnMetricView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_1004F298C(a1, a2);
}

uint64_t sub_1004F5AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailColumnMetricView(0, v6, v7, a4) - 8)
                          + 80);
  return sub_1004F2A88(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1004F5AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1004F2E78(v4[4], v4[2], v4[3], a4);
}

unint64_t sub_1004F5B04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100837F10;
  if (!qword_100837F10)
  {
    v1 = sub_100007050(&qword_100837F18);
    v2[0] = sub_100007050(&qword_100837F20);
    v2[1] = sub_1004F5B90();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listSectionSeparator(_:edges:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100837F10);
  }
  return result;
}

unint64_t sub_1004F5B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837F28;
  if (!qword_100837F28)
  {
    v1 = sub_100007050(&qword_100837F20);
    sub_1004F5C14();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837F28);
  }
  return result;
}

unint64_t sub_1004F5C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837F30;
  if (!qword_100837F30)
  {
    v1 = sub_100007050(&qword_100837F38);
    sub_1000E0A18(&qword_100837F40, &qword_100837F48, (void (*)(void))sub_1004F5CC4);
    sub_1004F5D60(&qword_100837F70, &qword_100837F78, (void (*)(void))sub_1004F5DC4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100837F30);
  }
  return result;
}

unint64_t sub_1004F5CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837F50;
  if (!qword_100837F50)
  {
    v1 = sub_100007050(&qword_100837F58);
    sub_100028384(&qword_100837F60, &qword_100837F68, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837F50);
  }
  return result;
}

uint64_t sub_1004F5D60(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004F5DC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100837F80;
  if (!qword_100837F80)
  {
    v1 = sub_100007050(&qword_100837F88);
    v2[0] = sub_100007050(&qword_100837F90);
    v2[1] = sub_1000E0A18(&qword_100837F98, &qword_100837F90, (void (*)(void))sub_1004F5E7C);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparatorTint(_:edges:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837F80);
  }
  return result;
}

unint64_t sub_1004F5E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100837FA0;
  if (!qword_100837FA0)
  {
    v1 = sub_100007050(&qword_100837FA8);
    sub_100028384(&qword_100837FB0, &qword_100837FB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100837FA0);
  }
  return result;
}

uint64_t sub_1004F5F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004F6408(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1004F2FEC, a3, a4);
}

uint64_t sub_1004F5F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1004F3578(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_1004F5F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;

  v5 = (int *)type metadata accessor for WorkoutDetailColumnMetricView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (_QWORD *)(v4 + v8);
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v4 + v8, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4 + v8, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = ((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease(*(_QWORD *)((char *)v10 + v5[9] + 8));
  v14 = (char *)v10 + v5[13];
  swift_release(*((_QWORD *)v14 + 1));
  swift_release(*((_QWORD *)v14 + 3));
  swift_release(*(_QWORD *)((char *)v10 + v5[14] + 8));
  return swift_deallocObject(v4, v13, v7 | 7);
}

uint64_t sub_1004F6024@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(type metadata accessor for WorkoutDetailColumnMetricView(0, v6, v7, a2) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_1004F372C(a1, v3 + v9, *(_QWORD *)(v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)), v6, v7, a3);
}

_QWORD *sub_1004F60A0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[13];
  swift_retain(*a1);
  swift_retain(v2);
  return a1;
}

uint64_t *sub_1004F60D4(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_release(a1[13]);
  swift_release(v2);
  return a1;
}

uint64_t sub_1004F6108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;

  v5 = (int *)type metadata accessor for WorkoutDetailColumnMetricView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (_QWORD *)(v4 + v8);
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v4 + v8, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4 + v8, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = ((((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease(*(_QWORD *)((char *)v10 + v5[9] + 8));
  v14 = (char *)v10 + v5[13];
  swift_release(*((_QWORD *)v14 + 1));
  swift_release(*((_QWORD *)v14 + 3));
  swift_release(*(_QWORD *)((char *)v10 + v5[14] + 8));
  return swift_deallocObject(v4, v13, v7 | 7);
}

void sub_1004F6200(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(type metadata accessor for WorkoutDetailColumnMetricView(0, v6, v7, a2) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004F58C0(a1, v3 + v9, *(_QWORD *)(v3 + v10), *(_QWORD *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)), v6, v7, a3);
}

unint64_t sub_1004F6288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838010;
  if (!qword_100838010)
  {
    v1 = sub_100007050(&qword_100838008);
    sub_10016F0EC(&qword_100838018, &qword_100838020);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838010);
  }
  return result;
}

uint64_t sub_1004F6318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (int *)type metadata accessor for WorkoutDetailColumnMetricView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (_QWORD *)(v4 + v8);
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v4 + v8, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4 + v8, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = v8 + v9;
  swift_unknownObjectRelease(*(_QWORD *)((char *)v10 + v5[9] + 8));
  v14 = (char *)v10 + v5[13];
  swift_release(*((_QWORD *)v14 + 1));
  swift_release(*((_QWORD *)v14 + 3));
  swift_release(*(_QWORD *)((char *)v10 + v5[14] + 8));
  return swift_deallocObject(v4, v13, v7 | 7);
}

uint64_t sub_1004F63FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004F6408(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1004F4B30, a3, a4);
}

uint64_t sub_1004F6408(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailColumnMetricView(0, v6, v7, a4) - 8)
                          + 80);
  return a2(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

unint64_t sub_1004F6480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008380A8;
  if (!qword_1008380A8)
  {
    v1 = sub_100007050(&qword_100838078);
    sub_100028384(&qword_1008380B0, &qword_100838070, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008380A8);
  }
  return result;
}

uint64_t sub_1004F650C()
{
  return sub_100028384(&qword_1008380D0, &qword_1008380D8, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

ValueMetadata *type metadata accessor for ActivitySharingFriendListCompetitionItem()
{
  return &type metadata for ActivitySharingFriendListCompetitionItem;
}

Swift::Int sub_1004F6548(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _OWORD v28[4];
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  Hasher.init()(v28);
  v12 = objc_msgSend(a1, "UUID");
  if (v12)
  {
    v13 = v12;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v12);

    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, v14, 1, v2);
  sub_10004D954((uint64_t)v11, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    v15 = sub_1000DC0E8();
    dispatch thunk of Hashable.hash(into:)(v28, v2, v15);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_10004D914((uint64_t)v11);
  v16 = objc_msgSend(a1, "currentCompetition");
  if (v16)
  {
    v17 = v16;
    Hasher._combine(_:)((Swift::UInt64)objc_msgSend(v16, "currentCacheIndex"));
    v18 = objc_msgSend(v17, "scores");
    if (v18)
    {
      v19 = v18;
      v20 = sub_1002D5C9C();
      v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v21);
      sub_1001247E8((uint64_t)v28, v21);
      swift_bridgeObjectRelease_n(v21, 2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v22 = objc_msgSend(v17, "opponentScores");
    if (v22)
    {
      v23 = v22;
      v24 = sub_1002D5C9C();
      v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v25);
      sub_1001247E8((uint64_t)v28, v25);

      swift_bridgeObjectRelease_n(v25, 2);
    }
    else
    {
      Hasher._combine(_:)(0);

    }
  }
  v32 = v28[2];
  v33 = v28[3];
  v34 = v29;
  v30 = v28[0];
  v31 = v28[1];
  return Hasher.finalize()();
}

Swift::Int sub_1004F6830@<X0>(Swift::Int *a1@<X8>)
{
  void **v1;
  Swift::Int result;

  result = sub_1004F6548(*v1);
  *a1 = result;
  return result;
}

id sub_1004F6858()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id result;

  v1 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
  v2 = (void *)*(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView)
                                  + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
  if ((_DWORD)v2 != 1)
  {
    sub_10047FF70(v2);
    v1 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
  }
  result = (id)*(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView)
                                  + v1);
  if ((_DWORD)result != 1)
    return sub_10047FF70(result);
  return result;
}

double sub_1004F68D8()
{
  uint64_t v0;
  char *v1;
  double v2;
  uint64_t v3;
  char *v4;
  char *v5;
  double v6;
  uint64_t v7;
  char *v8;
  double result;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView);
  v2 = dbl_100642228[v1[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection]];
  v3 = swift_allocObject(&unk_1007A5450, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  sub_100151A58((uint64_t)sub_1001F6140, v3, v2);
  swift_release(v3);
  v5 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView);
  v6 = dbl_100642228[v5[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection]];
  v7 = swift_allocObject(&unk_1007A5478, 24, 7);
  *(_QWORD *)(v7 + 16) = v5;
  v8 = v5;
  sub_100151A58((uint64_t)sub_100218814, v7, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

char *sub_1004F69DC(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  NSString v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v48;
  objc_super v49;

  swift_getObjectType(v3);
  v6 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  type metadata accessor for TrendListMetricView();
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_1005AEF5C();
  v8 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  *(_QWORD *)&v7[v8] = sub_1005AEF5C();
  v9 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  *(_QWORD *)&v7[v9] = sub_1005AEF5C();
  v10 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  v11 = (void *)objc_opt_self(UIButton);
  v12 = objc_msgSend(v11, "buttonWithType:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v10] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton;
  v14 = objc_msgSend(v11, "buttonWithType:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v13] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  *(_QWORD *)&v7[v15] = sub_1005AEF5C();
  v16 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  *(_QWORD *)&v7[v16] = sub_1005AEF5C();
  v17 = &v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction];
  *(_QWORD *)v17 = ASFriendListDisplayMode.id.getter;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric];
  v19 = type metadata accessor for TrendListMetric(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(&v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric], 1, 1, v19);

  if (a3)
  {
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v22, v23, v24, v25, v26, v27, v28);
  }
  else
  {
    v21 = 0;
  }
  v49.receiver = v7;
  v49.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  v29 = (char *)objc_msgSendSuper2(&v49, "initWithStyle:reuseIdentifier:", a1, v21);

  v30 = *(void **)&v29[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView];
  v31 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  v48 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  v32 = v29;
  v33 = v30;
  v34 = sub_100032478();
  objc_msgSend(v33, "setBackgroundColor:", v34);

  v35 = objc_msgSend(*(id *)&v29[v31], "layer");
  objc_msgSend(v35, "setCornerRadius:", sub_10003249C());

  v36 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  v37 = *(id *)&v32[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
  v38 = sub_100032478();
  objc_msgSend(v37, "setBackgroundColor:", v38);

  v39 = objc_msgSend(*(id *)&v32[v36], "layer");
  objc_msgSend(v39, "setCornerRadius:", sub_10003249C());

  v40 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton], "addTarget:action:forControlEvents:", v32, "selectionButtonTappedWithSender:", 64);
  objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton], "addTarget:action:forControlEvents:", v32, "selectionButtonTappedWithSender:", 64);
  v41 = objc_msgSend(v32, "contentView");
  v42 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView]);

  v43 = *(void **)&v32[v42];
  objc_msgSend(v43, "setAlignment:", 0);
  objc_msgSend(v43, "setDistribution:", 1);
  objc_msgSend(v43, "setSpacing:", 0.0);
  objc_msgSend(v43, "setAxis:", 0);
  objc_msgSend(v43, "addArrangedSubview:", *(_QWORD *)&v32[v40]);
  v44 = objc_msgSend(v32, "contentView");
  v45 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  objc_msgSend(v44, "addSubview:", *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView]);

  v46 = *(void **)&v32[v45];
  objc_msgSend(v46, "setAlignment:", 0);
  objc_msgSend(v46, "setDistribution:", 1);
  objc_msgSend(v46, "setSpacing:", 8.0);
  objc_msgSend(v46, "setAxis:", 0);
  objc_msgSend(v46, "setUserInteractionEnabled:", 0);
  objc_msgSend(v46, "addArrangedSubview:", *(_QWORD *)&v29[v48]);
  sub_1004F71CC();

  return v32;
}

uint64_t sub_1004F6EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, __n128);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, __n128);
  uint64_t v27;
  __n128 v28;
  _BYTE v30[24];

  v2 = v1;
  v4 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v30[-v8 - 8];
  v10 = type metadata accessor for TrendListMetric(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v30[-v15 - 8];
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton)) & 1) != 0)
  {
    v17 = v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric;
    swift_beginAccess(v2 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric, v30, 0, 0);
    sub_1001F62D8(v17, (uint64_t)v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      return sub_10001BE90((uint64_t)v9, &qword_10082EDD0);
    sub_1001F6320((uint64_t)v9, (uint64_t)v16);
    v20 = v2 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction;
    v21 = *(void (**)(_BYTE *, __n128))(v2
                                                 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
    v22 = *(_QWORD *)(v20 + 8);
    v23 = swift_retain(v22);
    v21(v16, v23);
    swift_release(v22);
    v24 = (uint64_t)v16;
  }
  else
  {
    result = static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton));
    if ((result & 1) == 0)
      return result;
    v19 = v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess(v2 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric, v30, 0, 0);
    sub_1001F62D8(v19, (uint64_t)v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      return sub_10001BE90((uint64_t)v6, &qword_10082EDD0);
    sub_1001F6320((uint64_t)v6, (uint64_t)v13);
    v25 = v2 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction;
    v26 = *(void (**)(_BYTE *, __n128))(v2
                                                 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
    v27 = *(_QWORD *)(v25 + 8);
    v28 = swift_retain(v27);
    v26(v13, v28);
    swift_release(v27);
    v24 = (uint64_t)v13;
  }
  return sub_100011F54(v24, type metadata accessor for TrendListMetric);
}

void sub_1004F71CC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  Class isa;
  CHWorkoutDetailHeartRateTableViewCell *v56;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView];
  v3 = objc_msgSend(v2, "leadingAnchor");
  v4 = objc_msgSend(v0, "contentView");
  v5 = objc_msgSend(v4, "leadingAnchor");

  v54 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v5, 16.0);
  v6 = objc_msgSend(v2, "trailingAnchor");
  v7 = objc_msgSend(v0, "contentView");
  v8 = objc_msgSend(v7, "trailingAnchor");

  v52 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, -16.0);
  v9 = objc_msgSend(v2, "topAnchor");
  v10 = objc_msgSend(v0, "contentView");
  v11 = objc_msgSend(v10, "topAnchor");

  v51 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, sub_100032C24());
  v12 = objc_msgSend(v2, "bottomAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "bottomAnchor");

  sub_100032C24();
  v49 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v14, -v15);

  v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView];
  v17 = objc_msgSend(v16, "leadingAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "leadingAnchor");

  v50 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
  v20 = objc_msgSend(v16, "trailingAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "trailingAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
  v24 = objc_msgSend(v16, "topAnchor");
  v25 = objc_msgSend(v1, "contentView");
  v26 = objc_msgSend(v25, "topAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
  v28 = objc_msgSend(v16, "bottomAnchor");
  v29 = objc_msgSend(v1, "contentView");
  v30 = objc_msgSend(v29, "bottomAnchor");

  v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);
  v48 = (id)objc_opt_self(NSLayoutConstraint);
  v32 = sub_100047110((uint64_t *)&unk_100828340);
  v33 = swift_allocObject(v32, 96, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100624C80;
  *(_QWORD *)(v33 + 32) = v54;
  *(_QWORD *)(v33 + 40) = v52;
  *(_QWORD *)(v33 + 48) = v51;
  *(_QWORD *)(v33 + 56) = v49;
  *(_QWORD *)(v33 + 64) = v50;
  *(_QWORD *)(v33 + 72) = v23;
  *(_QWORD *)(v33 + 80) = v27;
  *(_QWORD *)(v33 + 88) = v31;
  v56 = (CHWorkoutDetailHeartRateTableViewCell *)v33;
  specialized Array._endMutation()(v33);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v47 = v54;
  v53 = v52;
  v34 = v51;
  v35 = v49;
  v36 = v50;
  v37 = v23;
  v38 = v27;
  v39 = v31;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v56, v40, v41, v42, v43, v44, v45, v46);
  objc_msgSend(v48, "activateConstraints:", isa);

}

uint64_t sub_1004F771C(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE v34[24];

  v3 = v2;
  v33 = a2;
  v30 = type metadata accessor for TrendListMetric(0);
  v32 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TrendPairTableViewCell.TrailingMetricType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008283F0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v29 - v17;
  v19 = (char *)&v29 + *(int *)(v16 + 48) - v17;
  sub_10004F8C8(a1, (uint64_t)&v29 - v17, type metadata accessor for TrendListMetric);
  sub_10004F8C8((uint64_t)v33, (uint64_t)v19, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_1004AB160(v18);
  v20 = (uint64_t)&v15[*(int *)(v12 + 48)];
  v31 = v18;
  sub_10004F8C8((uint64_t)v18, (uint64_t)v15, type metadata accessor for TrendListMetric);
  sub_10004F8C8((uint64_t)v19, v20, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_1001F6320((uint64_t)v15, (uint64_t)v11);
  v21 = v32;
  v22 = v30;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v33(v11, 0, 1, v30);
  v23 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric;
  swift_beginAccess(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric, v34, 33, 0);
  sub_100335BC4((uint64_t)v11, v23);
  swift_endAccess(v34);
  sub_100011F54(v20, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_10004F8C8((uint64_t)v19, (uint64_t)v8, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 2, v22);
  if (v24)
  {
    if (v24 == 1)
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView), "insertArrangedSubview:atIndex:", *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView), 1);
    v33(v11, 1, 1, v22);
    v25 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric, v34, 33, 0);
    sub_100335BC4((uint64_t)v11, v25);
    swift_endAccess(v34);
  }
  else
  {
    v26 = v29;
    sub_1001F6320((uint64_t)v8, (uint64_t)v29);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView), "insertArrangedSubview:atIndex:", *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView), 1);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView), "insertArrangedSubview:atIndex:", *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton), 1);
    sub_1004AB160(v26);
    sub_10004F8C8((uint64_t)v26, (uint64_t)v11, type metadata accessor for TrendListMetric);
    v33(v11, 0, 1, v22);
    v27 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric, v34, 33, 0);
    sub_100335BC4((uint64_t)v11, v27);
    swift_endAccess(v34);
    sub_100011F54((uint64_t)v26, type metadata accessor for TrendListMetric);
  }
  return sub_10001BE90((uint64_t)v31, &qword_1008283F0);
}

id sub_1004F7AF0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  objc_msgSendSuper2(&v6, "prepareForReuse");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView];
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView];
  objc_msgSend(v1, "removeArrangedSubview:", v2);
  objc_msgSend(v2, "removeFromSuperview");
  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
  objc_msgSend(v1, "removeArrangedSubview:", v3);
  objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView], "removeArrangedSubview:", v4);
  return objc_msgSend(v4, "removeFromSuperview");
}

uint64_t sub_1004F7C04(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  v26 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  type metadata accessor for TrendListMetricView();
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1005AEF5C();
  v6 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  v25 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  *(_QWORD *)&v5[v6] = sub_1005AEF5C();
  v7 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  v24 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  *(_QWORD *)&v5[v7] = sub_1005AEF5C();
  v8 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  v23 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  v9 = (void *)objc_opt_self(UIButton);
  v10 = objc_msgSend(v9, "buttonWithType:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v8] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton;
  v12 = objc_msgSend(v9, "buttonWithType:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v11] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  *(_QWORD *)&v5[v13] = sub_1005AEF5C();
  v14 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  v15 = sub_1005AEF5C();

  *(_QWORD *)&v5[v14] = v15;
  v16 = &v5[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction];
  *(_QWORD *)v16 = ASFriendListDisplayMode.id.getter;
  *((_QWORD *)v16 + 1) = 0;
  v17 = (uint64_t)&v5[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric];
  v18 = type metadata accessor for TrendListMetric(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v20 = (uint64_t)&v5[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric];
  v19((uint64_t)&v5[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric], 1, 1, v18);

  swift_release(*((_QWORD *)v16 + 1));
  sub_10001BE90(v17, &qword_10082EDD0);
  sub_10001BE90(v20, &qword_10082EDD0);

  v21 = type metadata accessor for TrendPairTableViewCell(0);
  swift_deallocPartialClassInstance(v5, v21, *(unsigned int *)((swift_isaMask & *(_QWORD *)v5) + 0x30), *(unsigned __int16 *)((swift_isaMask & *(_QWORD *)v5) + 0x34));
  return 0;
}

id sub_1004F7EB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004F7FBC()
{
  return type metadata accessor for TrendPairTableViewCell(0);
}

void sub_1004F7FC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];
  uint64_t v5;
  uint64_t v6;

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for () + 64;
  sub_1001F5FF4(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

id sub_1004F8058()
{
  return sub_1004F6858();
}

double sub_1004F8078()
{
  return sub_1004F68D8();
}

uint64_t sub_1004F8098()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t type metadata accessor for TrendPairTableViewCell.TrailingMetricType(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_1008381C8, (uint64_t)&nominal type descriptor for TrendPairTableViewCell.TrailingMetricType);
}

uint64_t *sub_1004F80D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for TrendListMetric(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = *(int *)(v7 + 28);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for AttributedString(0);
      v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      v16 = swift_bridgeObjectRetain(v10);
      v15(v12, v13, v14, v16);
      v17 = *(int *)(v7 + 32);
      v18 = (uint64_t *)((char *)a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
      v22 = swift_bridgeObjectRetain(v20);
      v21(a1, 0, 2, v7, v22);
    }
  }
  return a1;
}

void sub_1004F81F4(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v2 = type metadata accessor for TrendListMetric(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2))
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16), v3, v4, v5, v6, v7, v8, v9);
    v10 = a1 + *(int *)(v2 + 28);
    v11 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + *(int *)(v2 + 32) + 8), v12, v13, v14, v15, v16, v17, v18);
  }
}

_QWORD *sub_1004F8288(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v20;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(v6 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    v14 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v14);
    v15 = *(int *)(v6 + 32);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
    v20 = swift_bridgeObjectRetain(v18);
    v19(a1, 0, 2, v6, v20);
  }
  return a1;
}

uint64_t sub_1004F8388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v25 = *(_QWORD *)(a2 + 16);
      v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v25;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
      v34 = *(int *)(v6 + 28);
      v35 = a1 + v34;
      v36 = a2 + v34;
      v37 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
      v38 = *(int *)(v6 + 32);
      v39 = (_QWORD *)(a1 + v38);
      v40 = (_QWORD *)(a2 + v38);
      *v39 = *v40;
      v41 = v40[1];
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)v39[1];
      v39[1] = v41;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease(v42, v43, v44, v45, v46, v47, v48, v49);
      return a1;
    }
    sub_100011F54(a1, type metadata accessor for TrendListMetric);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = *(int *)(v6 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
  v17 = swift_bridgeObjectRetain(v11);
  v16(v13, v14, v15, v17);
  v18 = *(int *)(v6 + 32);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v19[1] = v21;
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
  v23 = swift_bridgeObjectRetain(v21);
  v22(a1, 0, 2, v6, v23);
  return a1;
}

_WORD *sub_1004F8558(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
    v8 = *(int *)(v6 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_1004F8630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      v23 = *(_QWORD *)(a2 + 16);
      v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v23;
      swift_bridgeObjectRelease(v24, v11, v12, v13, v14, v15, v16, v17);
      v25 = *(int *)(v6 + 28);
      v26 = a1 + v25;
      v27 = a2 + v25;
      v28 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      v29 = *(int *)(v6 + 32);
      v30 = (_QWORD *)(a1 + v29);
      v31 = (uint64_t *)(a2 + v29);
      v33 = *v31;
      v32 = v31[1];
      v34 = (CHWorkoutDetailHeartRateTableViewCell *)v30[1];
      *v30 = v33;
      v30[1] = v32;
      swift_bridgeObjectRelease(v34, v35, v36, v37, v38, v39, v40, v41);
      return a1;
    }
    sub_100011F54(a1, type metadata accessor for TrendListMetric);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v18 = *(int *)(v6 + 28);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  *(_OWORD *)(a1 + *(int *)(v6 + 32)) = *(_OWORD *)(a2 + *(int *)(v6 + 32));
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1004F87A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F87AC);
}

uint64_t sub_1004F87AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for TrendListMetric(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1004F87F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F8804);
}

uint64_t sub_1004F8804(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for TrendListMetric(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1004F8858(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrendListMetric(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1004F8890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrendListMetric(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_1004F88D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for TrendListMetric(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

char *sub_1004F8928(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v9 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  v10 = objc_allocWithZone((Class)CAShapeLayer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  *(_QWORD *)&v11[v12] = sub_1005AEF5C();
  v13 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  *(_QWORD *)&v11[v13] = sub_1004C2368();
  v14 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2;
  *(_QWORD *)&v11[v14] = sub_1004C2368();
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for TrendAveragePlatterView();
  v15 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v16 = objc_msgSend(v15, "layer");
  v17 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  objc_msgSend(v16, "addSublayer:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill]);

  v18 = *(void **)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack];
  objc_msgSend(v15, "addSubview:", v18);
  objc_msgSend(v18, "addArrangedSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1]);
  sub_1004F8D5C();
  v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v19, "addObserver:selector:name:object:", v15, "setupFontsAndConstants", UIContentSizeCategoryDidChangeNotification, 0);

  v20 = *(void **)&v15[v17];
  objc_msgSend(v20, "setShadowRadius:", 1.0);
  LODWORD(v21) = 1.0;
  objc_msgSend(v20, "setShadowOpacity:", v21);
  objc_msgSend(v20, "setShadowOffset:", 0.0, 0.0);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v20;
  v24 = objc_msgSend(v22, "blackColor");
  v25 = objc_msgSend(v24, "CGColor");

  objc_msgSend(v23, "setShadowColor:", v25);
  return v15;
}

uint64_t sub_1004F8BF0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  v5 = objc_allocWithZone((Class)CAShapeLayer);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  *(_QWORD *)&v6[v7] = sub_1005AEF5C();
  v8 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  *(_QWORD *)&v6[v8] = sub_1004C2368();
  v9 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2;
  v10 = sub_1004C2368();

  *(_QWORD *)&v6[v9] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = 0;
  v12 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = 0;

  v13 = *(void **)&v6[v12];
  v14 = type metadata accessor for TrendAveragePlatterView();
  swift_deallocPartialClassInstance(v6, v14, 56, 7);
  return 0;
}

void sub_1004F8D5C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  Class isa;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack];
  objc_msgSend(v2, "setAxis:", 1);
  objc_msgSend(v2, "setDistribution:", 0);
  objc_msgSend(v2, "setAlignment:", 3);
  objc_msgSend(v2, "setSpacing:", 0.0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1];
  v6 = objc_msgSend(v3, "blackColor");
  objc_msgSend(v5, "setTextColor:", v6);

  v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2];
  v8 = objc_msgSend(v3, "blackColor");
  objc_msgSend(v7, "setTextColor:", v8);

  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(v1, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 4.0);

  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(v1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, -4.0);

  v15 = objc_msgSend(v2, "topAnchor");
  v16 = objc_msgSend(v1, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(v1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = sub_100047110((uint64_t *)&unk_100828340);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100623750;
  *(_QWORD *)(v23 + 32) = v11;
  *(_QWORD *)(v23 + 40) = v14;
  *(_QWORD *)(v23 + 48) = v17;
  *(_QWORD *)(v23 + 56) = v20;
  v40 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
  specialized Array._endMutation()(v23);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v24 = v11;
  v25 = v14;
  v26 = v17;
  v39 = v20;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v40, v28, v29, v30, v31, v32, v33, v34);
  objc_msgSend(v21, "activateConstraints:", isa);

  v35 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = v24;
  v36 = v24;

  v37 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = v25;
  v38 = v25;

  sub_1004F912C();
}

id sub_1004F912C()
{
  char *v0;
  void *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  double v34;
  double v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1];
  v2 = (void *)objc_opt_self(UIFont);
  result = objc_msgSend(v2, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleFootnote, 1280, UIContentSizeCategoryExtraExtraExtraLarge);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = result;
  objc_msgSend(v1, "setFont:", result);

  v5 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2];
  result = objc_msgSend(v2, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1280, UIContentSizeCategoryExtraExtraExtraLarge);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v6 = result;
  objc_msgSend(v5, "setFont:", result);

  v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack], "arrangedSubviews");
  v8 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v36 = v9;
    else
      v36 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v17 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v37, v38, v39, v40, v41, v42, v43);
  }
  else
  {
    v17 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v10, v11, v12, v13, v14, v15, v16);
  v18 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint];
  if (v17 == 1)
  {
    if (!v18)
      goto LABEL_9;
    v19 = v18;
    result = objc_msgSend(v1, "font");
    if (result)
    {
      v20 = result;
      objc_msgSend(result, "_scaledValueForValue:", 5.0);
      v22 = v21;

      objc_msgSend(v19, "setConstant:", v22);
LABEL_9:
      v23 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
      if (v23)
      {
        v24 = v23;
        result = objc_msgSend(v1, "font");
        if (result)
        {
          v25 = result;
          objc_msgSend(result, "_scaledValueForValue:", -5.0);
          v27 = v26;

          objc_msgSend(v24, "setConstant:", v27);
LABEL_18:

          return objc_msgSend(v0, "setNeedsLayout");
        }
        goto LABEL_27;
      }
      return objc_msgSend(v0, "setNeedsLayout");
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v18)
  {
    v28 = v18;
    result = objc_msgSend(v5, "font");
    if (!result)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v29 = result;
    objc_msgSend(result, "_scaledValueForValue:", 4.0);
    v31 = v30;

    objc_msgSend(v28, "setConstant:", v31);
  }
  v32 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
  if (!v32)
    return objc_msgSend(v0, "setNeedsLayout");
  v24 = v32;
  result = objc_msgSend(v5, "font");
  if (result)
  {
    v33 = result;
    objc_msgSend(result, "_scaledValueForValue:", -4.0);
    v35 = v34;

    objc_msgSend(v24, "setConstant:", v35);
    goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1004F9498(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  NSString v5;
  void *v6;
  id v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack), "removeArrangedSubview:", v3);
  objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5);

  v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill);
  v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp12MetricColors_text), "CGColor");
  objc_msgSend(v6, "setFillColor:", v7);

}

void sub_1004F958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  void *v28;
  void *v29;
  NSString v30;
  NSString v31;
  void *v32;
  id v34;

  v10 = objc_msgSend(objc_allocWithZone((Class)FIUIWorkoutActivityType), "initWithActivityTypeIdentifier:isIndoor:", 52, 0);
  v11 = objc_msgSend(a6, "localizedSpeedUnitStringForActivityType:", v10);
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v15 = 0xE400000000000000;
    v13 = 1414090325;
  }
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, 0, 0);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = sub_100047110((uint64_t *)&unk_100827460);
  v23 = swift_allocObject(v22, 112, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v23 + 56) = &type metadata for String;
  v24 = sub_100038CF8();
  *(_QWORD *)(v23 + 32) = a4;
  *(_QWORD *)(v23 + 40) = a5;
  *(_QWORD *)(v23 + 96) = &type metadata for String;
  *(_QWORD *)(v23 + 104) = v24;
  *(_QWORD *)(v23 + 64) = v24;
  *(_QWORD *)(v23 + 72) = v13;
  *(_QWORD *)(v23 + 80) = v15;
  swift_bridgeObjectRetain(a5);
  static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
  v26 = v25;
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v23).n128_u64[0];
  v28 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2);
  objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack), "addArrangedSubview:", v28, v27);
  v29 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v30);

  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setText:", v31, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v32 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill);
  v34 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp12MetricColors_text), "CGColor");
  objc_msgSend(v32, "setFillColor:", v34);

}

void sub_1004F9820(char *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  CGRect v33;

  v2 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill];
  objc_msgSend(a1, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack], "arrangedSubviews");
  v4 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v24 = v5;
    else
      v24 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v13 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v5, v25, v26, v27, v28, v29, v30, v31);
  }
  else
  {
    v13 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v5, v6, v7, v8, v9, v10, v11, v12);
  objc_msgSend(v2, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = 8.0;
  if (v13 == 1)
  {
    objc_msgSend(v2, "bounds");
    v22 = CGRectGetHeight(v33) * 0.5;
  }
  v32 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v15, v17, v19, v21, v22);
  v23 = objc_msgSend(v32, "CGPath");
  objc_msgSend(v2, "setPath:", v23);

}

id sub_1004F9A60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendAveragePlatterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendAveragePlatterView()
{
  return objc_opt_self(_TtC10FitnessApp23TrendAveragePlatterView);
}

uint64_t sub_1004F9B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t OpaqueTypeConformance2;
  _QWORD v31[2];
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + *(int *)(v5 + 36));
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v5 + 40)) + 16);
  swift_bridgeObjectRetain(v6);
  sub_100363920(v8, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v6, v11, v12, v13, v14, v15, v16, v17);
  v32 = v10;
  KeyPath = swift_getKeyPath(&unk_100642318);
  sub_1004FA5E0(v1, (uint64_t)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_1007A54C8, v20 + v4, v19 | 7);
  sub_1004FA6E0((uint64_t)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  v22 = swift_allocObject(&unk_1007A54F0, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1004FA724;
  *(_QWORD *)(v22 + 24) = v21;
  v23 = sub_100047110(&qword_10081EF78);
  v24 = sub_100047110(&qword_1008382D8);
  v25 = sub_100028384(&qword_10081EF88, &qword_10081EF78, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = sub_100007050(&qword_100835088);
  v27 = sub_10046E1E8();
  v31[0] = v26;
  v31[1] = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v32, KeyPath, sub_1000E25AC, v22, v23, v24, v25, &protocol witness table for Int, OpaqueTypeConformance2);
}

int *sub_1004F9CE0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  int *result;
  void *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  unint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v37 = a4;
  v38 = a1;
  v36 = type metadata accessor for WorkoutViewStyle(0);
  v6 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008350A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100047110(&qword_100835088);
  __chkstk_darwin(v34);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100047110(&qword_1008382D8);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a3;
  sub_1004F9F3C(a2, a3, (uint64_t)v11);
  result = (int *)(id)HKWorkoutMetricTypeDescription(a2);
  if (result)
  {
    v18 = result;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v21 = v20;

    v22 = sub_10046E26C();
    View.accessibilityIdentifier(_:)(v19, v21, v9, v22);
    swift_bridgeObjectRelease(v21, v23, v24, v25, v26, v27, v28, v29);
    sub_10001BE90((uint64_t)v11, &qword_1008350A0);
    result = (int *)type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
    if ((v38 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v30 = *(_QWORD *)((char *)v16 + result[10]);
      if (*(_QWORD *)(v30 + 16) > v38)
      {
        v31 = v36;
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v30+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v38, v36);
        v32 = sub_10046E1E8();
        View.workoutViewStyle(_:)(v8, v34, v32);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
        sub_10001BE90((uint64_t)v13, &qword_100835088);
        return (int *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v37, v15, v35);
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004F9F3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v32 = a3;
  v5 = sub_100047110(&qword_10081EFB0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110(&qword_1008350C0);
  __chkstk_darwin(v30);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ZoneViewType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ZoneMetricView(0, v13);
  v29 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 47 && (sub_1004FA24C() & 1) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for ZoneViewType.powerZone(_:), v11);
    type metadata accessor for LivePowerZone(0);
    v21 = static LivePowerZone.minCanonicalPowerZones()();
    v22 = sub_100047110(&qword_1008382E0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v23 = LiveZones.init(zones:currentZoneIndex:isStale:)(v21, 0, 1, 1);
    v33[3] = v22;
    v33[4] = sub_100028384(&qword_1008382E8, &qword_1008382E0, (uint64_t)&protocol conformance descriptor for LiveZones<A>);
    v33[0] = v23;
    ZoneMetricView.init(zoneViewType:liveZones:value:isStale:)(v15, v33, 0, 1, 1);
    v24 = v29;
    v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v10, v17, v31);
    swift_storeEnumTagMultiPayload(v10, v30, 0);
    v26 = sub_1000083D8(&qword_1008350B8, (uint64_t (*)(uint64_t))&type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v26, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    _ConditionalContent<>.init(storage:)(v10, v25, v5, v26, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  else
  {
    static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(a1, a2[3], a2[4], *a2);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    swift_storeEnumTagMultiPayload(v10, v30, 1);
    v18 = sub_1000083D8(&qword_1008350B8, (uint64_t (*)(uint64_t))&type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    v19 = swift_getOpaqueTypeConformance2(v18, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    _ConditionalContent<>.init(storage:)(v10, v31, v5, v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1004FA24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_retain(v1);
  v3 = PowerMetricsPublisher.livePowerZones.getter(v2);
  v4 = swift_release(v1);
  if (!v3)
    goto LABEL_12;
  v5 = dispatch thunk of LiveZones.zones.getter(v4);
  swift_release(v3);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v11)
    {
      v12 = type metadata accessor for Zone(0);
      swift_bridgeObjectRetain(v5);
      v7 = _bridgeCocoaArray<A>(_:)(v10, v12);
      swift_bridgeObjectRelease(v5);
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    swift_bridgeObjectRelease(v5);
LABEL_12:
    v9 = 0;
    return v9 & 1;
  }
  v6 = swift_bridgeObjectRetain(v5);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
  type metadata accessor for Zone(0);
  v7 = v5;
LABEL_5:
  swift_bridgeObjectRelease(v5);
  type metadata accessor for CyclingPowerZonesConfigurationEditor(0);
  v8 = static CyclingPowerZonesConfigurationEditor.hasAllEmptyZones(_:)(v7);
  swift_bridgeObjectRelease(v7);
  v9 = v8 ^ 1;
  return v9 & 1;
}

_QWORD *sub_1004FA36C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if (a1[2] >= 3uLL && a1[4] == 47)
  {
    v2 = a1[5];
    swift_bridgeObjectRetain(a1);
    if (v2 == 11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
        v1 = sub_1004DEE94(v1);
      *((_OWORD *)v1 + 2) = xmmword_100642270;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
  }
  return v1;
}

uint64_t sub_1004FA3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FA3F8);
}

uint64_t sub_1004FA3F8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterConstants(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_1004FA474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FA480);
}

char *sub_1004FA480(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricPlatterConstants(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MirrorPowerZonesMetricsPlatter(uint64_t a1)
{
  uint64_t result;

  result = qword_100838288;
  if (!qword_100838288)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorPowerZonesMetricsPlatter);
  return result;
}

uint64_t sub_1004FA530(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_1006422B0;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterConstants(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004FA5D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B9F8C, 1);
}

uint64_t sub_1004FA5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004FA624()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v1 = (int *)type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v7 + 16));

  v8 = v7 + v1[8];
  v9 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[9]), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[10]), v17, v18, v19, v20, v21, v22, v23);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004FA6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorPowerZonesMetricsPlatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *sub_1004FA724@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorPowerZonesMetricsPlatter(0) - 8) + 80);
  return sub_1004F9CE0(a1, a2, (_QWORD *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t sub_1004FA778()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1004FA7A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008382F0;
  if (!qword_1008382F0)
  {
    v1 = sub_100007050(&qword_1008382F8);
    sub_100028384(&qword_1008350E8, &qword_1008350F0, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1004FA824();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008382F0);
  }
  return result;
}

unint64_t sub_1004FA824()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100838300;
  if (!qword_100838300)
  {
    v1 = sub_100007050(&qword_100838308);
    v2[0] = sub_100007050(&qword_100835088);
    v2[1] = sub_10046E1E8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100838300);
  }
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1004FA8B0(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1001214C4(0, v1, 0);
    v3 = *(_QWORD *)(type metadata accessor for InvitationDestination(0) - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    do
    {
      v6 = InvitationDestination.serviceIdentifier.getter();
      v8 = v7;
      v10 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v9 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v10 >= v9 >> 1)
        sub_1001214C4(v9 > 1, v10 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v10 + 1;
      v11 = (char *)&_swiftEmptyArrayStorage + 16 * v10;
      *((_QWORD *)v11 + 4) = v6;
      *((_QWORD *)v11 + 5) = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return &_swiftEmptyArrayStorage;
}

Swift::Int sub_1004FA9AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v6[10];

  v6[9] = *v2;
  Hasher.init(_seed:)(v6, 0);
  dispatch thunk of Hashable.hash(into:)(v6, a1, a2);
  return Hasher._finalize()();
}

uint64_t sub_1004FAA0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004FCBA8();
  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1004FAA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

_QWORD *sub_1004FAAA0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1004FAAD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FCBA8();
  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_1004FAAF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004FCBA8();
  return _BridgedNSError._code.getter(a1, v2);
}

unint64_t sub_1004FAB20()
{
  return 0xD000000000000027;
}

uint64_t sub_1004FAB3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004FCBA8();
  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

id sub_1004FAB94(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

id sub_1004FAC50(uint64_t a1)
{
  return sub_1000F62A0(a1, type metadata accessor for ReachableDestination);
}

uint64_t type metadata accessor for ReachableDestination()
{
  return objc_opt_self(CHReachableDestination);
}

id sub_1004FACCC()
{
  void *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[5];

  v1 = sub_100047110(&qword_10081E650);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InvitationDestinationCache(0, v2);
  v6 = v0;
  v14 = sub_1004FC57C(&_swiftEmptyArrayStorage, v7, v8, v9, v10, v11, v12, v13);
  v15 = InvitationDestinationCache.__allocating_init(invitationDestinationMap:)(v14);
  v26[3] = v5;
  v26[4] = &protocol witness table for InvitationDestinationCache;
  v26[0] = v15;
  v16 = InvitationDestinationService.init(cache:)(v26);
  SecureCloudClient.init()(v16);

  v17 = (objc_class *)type metadata accessor for InvitationDestinationCoordinator(0);
  v25.receiver = v6;
  v25.super_class = v17;
  v18 = objc_msgSendSuper2(&v25, "init");
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v20 = swift_allocObject(&unk_1007A5578, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v18);
  v21 = (_QWORD *)swift_allocObject(&unk_1007A5618, 40, 7);
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v20;
  v22 = sub_10020DB28((uint64_t)v4, (uint64_t)&unk_1008383D8, (uint64_t)v21);
  swift_release(v22);
  return v18;
}

uint64_t sub_1004FAE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for SecureCloudClient(0, a2);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004FAE98, 0, 0);
}

uint64_t sub_1004FAE98()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  v3 = *(_QWORD *)(v0 + 72);
  if (Strong)
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(v3, (uint64_t)Strong + OBJC_IVAR___CHInvitationDestinationCoordinator_secureCloudClient, *(_QWORD *)(v0 + 56));

    v4 = (_QWORD *)swift_task_alloc(async function pointer to SecureCloudClient.activate()[1]);
    *(_QWORD *)(v0 + 88) = v4;
    *v4 = v0;
    v4[1] = sub_1004FAF58;
    return SecureCloudClient.activate()();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004FAF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_1004FAFCC, 0, 0);
}

uint64_t sub_1004FAFCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FB02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to InvitationDestinationService.fetchInvitationDestinationGroups(for:)[1]);
  v4[8] = v6;
  *v6 = v4;
  v6[1] = sub_1004FB090;
  return InvitationDestinationService.fetchInvitationDestinationGroups(for:)(a1);
}

uint64_t sub_1004FB090(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v2 + 64);
  v4 = *v2;
  *(_QWORD *)(v4 + 72) = a1;
  swift_task_dealloc(v3);
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch(sub_1004FB104, 0, 0);
}

uint64_t sub_1004FB104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  NSObject *v34;
  uint8_t *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 32);
  v43 = *(_QWORD *)(v1 + 16);
  if (v43)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v44 = v1 + 32;
    v3 = swift_bridgeObjectRetain(v1);
    v4 = 0;
    while (1)
    {
      v5 = *(_QWORD *)(v2 + 16);
      if (!v5)
        break;
      v6 = (uint64_t *)(v44 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      ++v4;
      v9 = *(_QWORD *)(v0 + 72);
      v10 = *(_QWORD *)(type metadata accessor for InvitationDestinationGroup(0, v3) - 8);
      v11 = v9 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v12 = *(_QWORD *)(v10 + 72);
      swift_bridgeObjectRetain(v7);
      v13 = swift_bridgeObjectRetain(v9);
      while (1)
      {
        v14 = InvitationDestinationGroup.destination.getter(v13);
        v16 = v15;
        if (v14 == v8 && v15 == v7)
        {
          swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
          v18 = v7;
          goto LABEL_12;
        }
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v8, v7, 0);
        v13 = swift_bridgeObjectRelease(v16);
        if ((v17 & 1) != 0)
          break;
        v11 += v12;
        if (!--v5)
        {
          v27 = *(_QWORD *)(v0 + 32);
          swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
          swift_bridgeObjectRelease(v7);
          v28 = v27;
          goto LABEL_15;
        }
      }
      v18 = *(_QWORD *)(v0 + 72);
LABEL_12:
      swift_bridgeObjectRelease(v18);
      v3 = swift_bridgeObjectRelease(v7);
      if (v4 == v43)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
        goto LABEL_14;
      }
    }
    v28 = *(_QWORD *)(v0 + 32);
LABEL_15:
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
    v30 = static os_log_type_t.default.getter(v29);
    v31 = (void *)HKLogActivity;
    v32 = v30;
    if (os_log_type_enabled(HKLogActivity, v30))
    {
      v33 = *(_QWORD *)(v0 + 32);
      swift_bridgeObjectRetain_n(v33, 2);
      v34 = v31;
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v45 = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = swift_bridgeObjectRetain(v33);
      v38 = Array.description.getter(v37);
      v40 = v39;
      swift_bridgeObjectRelease(v33);
      *(_QWORD *)(v0 + 16) = sub_10003E8EC(v38, v40, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v35 + 4);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease_n(v33, 2);
      _os_log_impl((void *)&_mh_execute_header, v34, v32, "Not all destinations reachable to send invite %s", v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

    }
    v41 = sub_1004FC694();
    swift_allocError(&type metadata for CHInvitationDestinationError, v41, 0, 0);
    *v42 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
LABEL_14:
    v20 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 72);
    v22 = (_QWORD *)swift_task_alloc(48);
    *(_QWORD *)(v0 + 80) = v22;
    v22[2] = v19;
    v22[3] = v21;
    v22[4] = v20;
    v23 = (_QWORD *)swift_task_alloc(async function pointer to Collection.asyncForEach(_:)[1]);
    *(_QWORD *)(v0 + 88) = v23;
    v24 = sub_100047110(&qword_1008383B0);
    v25 = sub_1004FC740();
    *v23 = v0;
    v23[1] = sub_1004FB470;
    return Collection.asyncForEach(_:)(&unk_1008383A8, v22, v24, v25);
  }
}

uint64_t sub_1004FB470()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1004FB4F0, 0, 0);
  v5 = *(_QWORD *)(v3 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + 72));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1004FB4F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FB52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = type metadata accessor for InvitationDestination(0);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004FB590, 0, 0);
}

uint64_t sub_1004FB590(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v23;

  v3 = v1[8];
  v2 = v1[9];
  v4 = v1[7];
  v23 = InvitationDestinationGroup.destination.getter(a1);
  v6 = v5;
  v1[10] = v5;
  v7 = InvitationDestinationGroup.preferredDestination.getter();
  v8 = InvitationDestination.serviceIdentifier.getter(v7);
  v10 = v9;
  v1[11] = v9;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)InvitationDestinationGroup.additionalDestinations.getter(v11);
  v13 = sub_1004FA8B0((uint64_t)v12);
  v1[12] = v13;
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  v21 = (_QWORD *)swift_task_alloc(async function pointer to SecureCloudClient.sendInvitation(destination:callerIdentifier:serviceIdentifier:additionalServiceIdentifiers:)[1]);
  v1[13] = v21;
  *v21 = v1;
  v21[1] = sub_1004FB698;
  return SecureCloudClient.sendInvitation(destination:callerIdentifier:serviceIdentifier:additionalServiceIdentifiers:)(v23, v6, v1[5], v1[6], v8, v10, v13);
}

uint64_t sub_1004FB698()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;

  v2 = *(_QWORD *)(*v1 + 104);
  v3 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc(v2);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 88);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 96);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 80);
  if (v0)
  {
    swift_bridgeObjectRelease(v11, v4, v5, v6, v7, v8, v9, v10);
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
    swift_bridgeObjectRelease(v13, v21, v22, v23, v24, v25, v26, v27);
    return swift_task_switch(sub_1004FB750, 0, 0);
  }
  else
  {
    v29 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRelease(v11, v4, v5, v6, v7, v8, v9, v10);
    swift_bridgeObjectRelease(v12, v30, v31, v32, v33, v34, v35, v36);
    swift_bridgeObjectRelease(v13, v37, v38, v39, v40, v41, v42, v43);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_1004FB750()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FB784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v12;
  uint64_t v14;

  v8[2] = a8;
  v8[3] = v14;
  v12 = (_QWORD *)swift_task_alloc(dword_10083838C);
  v8[4] = v12;
  *v12 = v8;
  v12[1] = sub_1004FB7FC;
  return sub_1004FB02C(a5, a6, a7);
}

uint64_t sub_1004FB7FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 40) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004FB8E4;
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v7 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v2 + 48) = static MainActor.shared.getter(v7);
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    v10 = v9;
    v4 = sub_1004FB8A4;
    v5 = v8;
    v6 = v10;
  }
  return swift_task_switch(v4, v5, v6);
}

uint64_t sub_1004FB8A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  v1(1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FB8E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[7] = _convertErrorToNSError(_:)(v0[5]);
  v1 = type metadata accessor for MainActor(0);
  v0[8] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004FB958, v2, v3);
}

uint64_t sub_1004FB958()
{
  _QWORD *v0;
  void *v1;
  void (*v2)(_QWORD, void *, __n128);
  __n128 v3;

  v1 = (void *)v0[7];
  v2 = (void (*)(_QWORD, void *, __n128))v0[2];
  v3 = swift_release(v0[8]);
  v2(0, v1, v3);

  return swift_task_switch(sub_1004FB9B0, 0, 0);
}

uint64_t sub_1004FB9B0()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FBB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v8 = type metadata accessor for InvitationDestination(0);
  v7[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[12] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[13] = swift_task_alloc(v10);
  v7[14] = swift_task_alloc(v10);
  v12 = type metadata accessor for InvitationDestinationGroup(0, v11);
  v7[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[16] = v13;
  v7[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004FBBF8, 0, 0);
}

uint64_t sub_1004FBBF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[7] + 16;
  swift_beginAccess(v1, v0 + 2, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v0[18] = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(async function pointer to InvitationDestinationService.fetchInvitationDestinationGroups(for:)[1]);
    v0[19] = v3;
    *v3 = v0;
    v3[1] = sub_1004FBD20;
    return InvitationDestinationService.fetchInvitationDestinationGroups(for:)(v0[8]);
  }
  else
  {
    v5 = sub_1004FC694();
    v6 = swift_allocError(&type metadata for CHInvitationDestinationError, v5, 0, 0);
    *v7 = 1;
    swift_willThrow(v6);
    v0[24] = v6;
    v0[25] = _convertErrorToNSError(_:)(v6);
    v8 = type metadata accessor for MainActor(0);
    v0[26] = static MainActor.shared.getter(v8);
    v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
    return swift_task_switch(sub_1004FC1C4, v9, v10);
  }
}

uint64_t sub_1004FBD20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 152);
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1004FC0D8;
  }
  else
  {

    v5 = sub_1004FBD94;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004FBD94(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  int64_t v42;
  char *v43;
  uint64_t (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  double (*v67)(_QWORD, uint64_t, _QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);

  v9 = *(_QWORD *)(v8 + 160);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(v8 + 128);
    v12 = *(_QWORD *)(v8 + 96);
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    v13 = 0;
    v69 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v70 = v11;
    v67 = *(double (**)(_QWORD, uint64_t, _QWORD))(v11 + 16);
    v68 = *(_QWORD *)(v11 + 72);
    v65 = v12;
    v66 = v10;
    do
    {
      v24 = *(_QWORD *)(v8 + 112);
      v25 = *(_QWORD *)(v8 + 88);
      v26.n128_f64[0] = v67(*(_QWORD *)(v8 + 136), v69 + v13 * v68, *(_QWORD *)(v8 + 120));
      v27 = InvitationDestinationGroup.destination.getter(v26);
      v75 = v28;
      v29 = InvitationDestinationGroup.preferredDestination.getter();
      v30 = InvitationDestination.serviceIdentifier.getter(v29);
      v73 = v31;
      v74 = v30;
      v77 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
      v32 = v77(v24, v25);
      v33 = (CHWorkoutDetailHeartRateTableViewCell *)InvitationDestinationGroup.additionalDestinations.getter(v32);
      v41 = v33;
      v42 = *(_QWORD *)v33->cellPadding;
      if (v42)
      {
        v72 = v13;
        sub_1001214C4(0, v42, 0);
        v71 = v41;
        v43 = (char *)v41
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        v76 = *(_QWORD *)(v12 + 72);
        v44 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 16);
        do
        {
          v45 = *(_QWORD *)(v8 + 104);
          v46 = *(_QWORD *)(v8 + 88);
          v47 = v44(v45, v43, v46);
          v48 = InvitationDestination.serviceIdentifier.getter(v47);
          v50 = v49;
          v77(v45, v46);
          if ((swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyArrayStorage) & 1) == 0)
            sub_1001214C4(0, *(_QWORD *)_swiftEmptyArrayStorage.cellPadding + 1, 1);
          v59 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
          v58 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
          if (v59 >= v58 >> 1)
            sub_1001214C4(v58 > 1, v59 + 1, 1);
          *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v59 + 1;
          v60 = (char *)&_swiftEmptyArrayStorage + 16 * v59;
          *((_QWORD *)v60 + 4) = v48;
          *((_QWORD *)v60 + 5) = v50;
          v43 += v76;
          --v42;
        }
        while (v42);
        swift_bridgeObjectRelease(v71, v51, v52, v53, v54, v55, v56, v57);
        v12 = v65;
        v10 = v66;
        v13 = v72;
      }
      else
      {
        swift_bridgeObjectRelease(v33, v34, v35, v36, v37, v38, v39, v40);
      }
      ++v13;
      v14 = *(_QWORD *)(v8 + 136);
      v15 = *(_QWORD *)(v8 + 120);
      v16 = (objc_class *)type metadata accessor for ReachableDestination();
      v17 = (char *)objc_allocWithZone(v16);
      v18 = (uint64_t *)&v17[OBJC_IVAR___CHReachableDestination_destination];
      *v18 = v27;
      v18[1] = v75;
      v19 = &v17[OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier];
      *(_QWORD *)v19 = v74;
      *((_QWORD *)v19 + 1) = v73;
      *(_QWORD *)&v17[OBJC_IVAR___CHReachableDestination_additionalServiceIdentifiers] = &_swiftEmptyArrayStorage;
      *(_QWORD *)(v8 + 40) = v17;
      *(_QWORD *)(v8 + 48) = v16;
      v20 = objc_msgSendSuper2((objc_super *)(v8 + 40), "init");
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8))(v14, v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      specialized ContiguousArray._endMutation()(v23);
    }
    while (v13 != v10);
  }
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 160), a2, a3, a4, a5, a6, a7, a8);
  *(_QWORD *)(v8 + 176) = &_swiftEmptyArrayStorage;
  v61 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 184) = static MainActor.shared.getter(v61);
  v62 = dispatch thunk of Actor.unownedExecutor.getter(v61, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004FC158, v62, v63);
}

uint64_t sub_1004FC0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 192) = v1;
  *(_QWORD *)(v0 + 200) = _convertErrorToNSError(_:)(v1);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004FC1C4, v3, v4);
}

uint64_t sub_1004FC158()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 184));
  v2(v1, 0);
  swift_bridgeObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FC1C4()
{
  _QWORD *v0;
  void *v1;
  void (*v2)(CHWorkoutDetailHeartRateTableViewCell *, void *, __n128);
  __n128 v3;

  v1 = (void *)v0[25];
  v2 = (void (*)(CHWorkoutDetailHeartRateTableViewCell *, void *, __n128))v0[9];
  v3 = swift_release(v0[26]);
  v2(&_swiftEmptyArrayStorage, v1, v3);

  return swift_task_switch(sub_1004FC220, 0, 0);
}

uint64_t sub_1004FC220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 192));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004FC3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa;

  type metadata accessor for ReachableDestination();
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class, uint64_t))(a3 + 16))(a3, isa, a2);

}

id sub_1004FC438()
{
  return sub_1000F62A0(0, (uint64_t (*)(void))type metadata accessor for InvitationDestinationCoordinator);
}

uint64_t sub_1004FC4B0()
{
  return type metadata accessor for InvitationDestinationCoordinator(0);
}

uint64_t type metadata accessor for InvitationDestinationCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_100838378;
  if (!qword_100838378)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InvitationDestinationCoordinator);
  return result;
}

uint64_t sub_1004FC4F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  result = type metadata accessor for InvitationDestinationService(319, a2);
  if (v4 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SecureCloudClient(319, v4);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_1004FC57C(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *cellPadding;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v9 = *(_QWORD *)a1->cellPadding;
  if (!v9)
  {
    v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100047110(&qword_1008383E0);
  v10 = static _DictionaryStorage.allocate(capacity:)(v9);
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)a1->cellPadding;
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1, a2, a3, a4, a5, a6, a7, a8);
    return (unint64_t)v11;
  }
  swift_retain(v10);
  cellPadding = a1[1].cellPadding;
  while (1)
  {
    v14 = *((_QWORD *)cellPadding - 2);
    v15 = *((_QWORD *)cellPadding - 1);
    v16 = *(_QWORD *)cellPadding;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    result = sub_10027EF58(v14, v15);
    if ((v18 & 1) != 0)
      break;
    *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v19 = (uint64_t *)(v11[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    *(_QWORD *)(v11[7] + 8 * result) = v16;
    v20 = v11[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v11[2] = v22;
    cellPadding += 24;
    if (!--v12)
    {
      swift_release(v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004FC694()
{
  unint64_t result;

  result = qword_100838398;
  if (!qword_100838398)
  {
    result = swift_getWitnessTable(&unk_1006424D8, &type metadata for CHInvitationDestinationError);
    atomic_store(result, &qword_100838398);
  }
  return result;
}

uint64_t sub_1004FC6D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008383A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_1004FB52C(a1, v4, v5, v6);
}

unint64_t sub_1004FC740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008383B8;
  if (!qword_1008383B8)
  {
    v1 = sub_100007050(&qword_1008383B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, &qword_1008383B8);
  }
  return result;
}

uint64_t sub_1004FC78C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004FC7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004FC3D8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1004FC7B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FC7DC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004FC818(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_100838394);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000EA380;
  return sub_1004FBB5C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1004FC8A4(char a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_1004FC8BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1004FC900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = swift_task_alloc(dword_1008383C4);
  v6 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1000DA0E4;
  *(_OWORD *)(v5 + 16) = v6;
  v7 = (uint64_t *)swift_task_alloc(dword_10083838C);
  *(_QWORD *)(v5 + 32) = v7;
  *v7 = v5;
  v7[1] = (uint64_t)sub_1004FB7FC;
  return sub_1004FB02C(v2, v3, v4);
}

uint64_t sub_1004FC994()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004FC9C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008383D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1004FAE38(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for CHInvitationDestinationError()
{
  return &type metadata for CHInvitationDestinationError;
}

unint64_t sub_1004FCA44()
{
  unint64_t result;

  result = qword_1008383E8;
  if (!qword_1008383E8)
  {
    result = swift_getWitnessTable(&unk_1006423C0, &type metadata for CHInvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_1008383E8);
  }
  return result;
}

unint64_t sub_1004FCA8C()
{
  unint64_t result;

  result = qword_1008383F0;
  if (!qword_1008383F0)
  {
    result = swift_getWitnessTable(&unk_100642470, &type metadata for CHInvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_1008383F0);
  }
  return result;
}

unint64_t sub_1004FCAD4()
{
  unint64_t result;

  result = qword_1008383F8;
  if (!qword_1008383F8)
  {
    result = swift_getWitnessTable(&unk_100642438, &type metadata for CHInvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_1008383F8);
  }
  return result;
}

unint64_t sub_1004FCB1C()
{
  unint64_t result;

  result = qword_100838400;
  if (!qword_100838400)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100838400);
  }
  return result;
}

unint64_t sub_1004FCB64()
{
  unint64_t result;

  result = qword_100838408;
  if (!qword_100838408)
  {
    result = swift_getWitnessTable(&unk_1006424B0, &type metadata for CHInvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_100838408);
  }
  return result;
}

unint64_t sub_1004FCBA8()
{
  unint64_t result;

  result = qword_100838410;
  if (!qword_100838410)
  {
    result = swift_getWitnessTable(&unk_1006423F0, &type metadata for CHInvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_100838410);
  }
  return result;
}

uint64_t sub_1004FCBF0(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

id sub_1004FCD80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSectionHeader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailSectionHeader()
{
  return objc_opt_self(_TtC10FitnessApp26WorkoutDetailSectionHeader);
}

uint64_t sub_1004FCDD0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FCDF4(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

id sub_1004FCE08()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  NSString v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  NSString v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  NSString v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t inited;
  NSString *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  void *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  id v50;
  NSString v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  Class isa;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  NSString v68;
  id v69;
  uint64_t v70;
  id v71;
  NSString v72;
  id v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  id v76;
  NSString v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  NSString *v89;
  NSString *v90;
  id v91;
  NSString *v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  id v94;
  NSString v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  Class v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  NSString *v114;
  uint64_t v115;
  id v116;
  id v117;
  void *v118;
  uint64_t v119;
  id v120;
  id v121;
  char v122[152];
  char v123[112];
  objc_super v124;

  v124.receiver = v0;
  v124.super_class = (Class)type metadata accessor for WorkoutDetailAppleWeatherFooterView();
  v1 = objc_msgSendSuper2(&v124, "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setScrollEnabled:", 0);
  objc_msgSend(v1, "setEditable:", 0);
  objc_msgSend(v1, "_setInteractiveTextSelectionDisabled:", 1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "tertiaryLabelColor");
  objc_msgSend(v1, "setTintColor:", v3);

  objc_msgSend(v1, "textContainerInset");
  v5 = v4;
  objc_msgSend(v1, "textContainerInset");
  objc_msgSend(v1, "setTextContainerInset:", v5, 10.0, v6, 10.0);
  v7 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleFootnote);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
  v121 = objc_msgSend(v7, "defaultFontForTextStyle:", v10);

  v120 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v120, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  sub_10001E724(0, &qword_10081E628, NSString_ptr);
  v24 = objc_msgSend(v120, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28, v30, v31, v32, v33, v34, v35, v36);
  v37 = sub_100047110((uint64_t *)&unk_100827460);
  v38 = swift_allocObject(v37, 72, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100622F90;
  *(_QWORD *)(v38 + 56) = &type metadata for String;
  *(_QWORD *)(v38 + 64) = sub_100038CF8();
  v113 = v23;
  *(_QWORD *)(v38 + 32) = v21;
  *(_QWORD *)(v38 + 40) = v23;
  v39 = swift_bridgeObjectRetain(v23);
  v40 = NSString.init(format:_:)(v29, v38, v39);

  v119 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v119, v123);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v42 = NSForegroundColorAttributeName;
  v43 = objc_msgSend(v2, "tertiaryLabelColor");
  v44 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v43;
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v45 = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 104) = v45;
  *(_QWORD *)(inited + 80) = v121;
  v114 = NSFontAttributeName;
  v117 = v121;
  v46 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v47 = (void *)v40;
  v118 = (void *)v40;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v49 = v48;
  v50 = objc_allocWithZone((Class)NSMutableAttributedString);
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49, v52, v53, v54, v55, v56, v57, v58);
  type metadata accessor for Key(0);
  sub_100135B1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46, v60, v61, v62, v63, v64, v65, v66);
  v67 = objc_msgSend(v50, "initWithString:attributes:", v51, isa);

  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v47, "rangeOfString:", v68);
  v115 = v70;
  v116 = v69;

  v71 = objc_msgSend(v120, "mainBundle");
  v72 = String._bridgeToObjectiveC()();
  v73 = objc_msgSend(v71, "localizedStringForKey:value:table:", v72, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
  v75 = v74;

  v76 = objc_allocWithZone((Class)NSURL);
  v77 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v75, v78, v79, v80, v81, v82, v83, v84);
  v85 = objc_msgSend(v76, "initWithString:", v77);

  v86 = swift_initStackObject(v119, v122);
  *(_OWORD *)(v86 + 16) = xmmword_100624A40;
  *(_QWORD *)(v86 + 32) = v114;
  *(_QWORD *)(v86 + 40) = v121;
  *(_QWORD *)(v86 + 64) = v45;
  *(_QWORD *)(v86 + 72) = NSLinkAttributeName;
  v87 = sub_100047110(&qword_100838468);
  *(_QWORD *)(v86 + 80) = v85;
  *(_QWORD *)(v86 + 104) = v87;
  *(_QWORD *)(v86 + 112) = NSUnderlineStyleAttributeName;
  *(_QWORD *)(v86 + 144) = &type metadata for Int;
  *(_QWORD *)(v86 + 120) = 1;
  v88 = v117;
  v89 = v114;
  v90 = NSLinkAttributeName;
  v91 = v85;
  v92 = NSUnderlineStyleAttributeName;
  v93 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v86);
  v94 = objc_allocWithZone((Class)NSAttributedString);
  v95 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v113, v96, v97, v98, v99, v100, v101, v102);
  v103 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v93, v104, v105, v106, v107, v108, v109, v110);
  v111 = objc_msgSend(v94, "initWithString:attributes:", v95, v103);

  objc_msgSend(v67, "replaceCharactersInRange:withAttributedString:", v116, v115, v111);
  objc_msgSend(v1, "setAttributedText:", v67);

  return v1;
}

id sub_1004FD5FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAppleWeatherFooterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailAppleWeatherFooterView()
{
  return objc_opt_self(CHWorkoutDetailAppleWeatherFooterView);
}

id sub_1004FD64C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double v23;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 1)
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, 0, 0);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText);
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText + 8);
    *v9 = v6;
    v9[1] = v8;
    swift_bridgeObjectRelease(v10);
    v11 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel);
    v12 = v9[1];
    if (v12)
    {
      swift_bridgeObjectRetain(v12);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v11, "setText:", v13);
    v23 = 0.0;
  }
  else
  {
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v3, "localizedStringForKey:value:table:", v14, 0, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText);
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText + 8);
    *v19 = v16;
    v19[1] = v18;
    swift_bridgeObjectRelease(v20);
    v21 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel);
    v22 = v19[1];
    if (v22)
    {
      swift_bridgeObjectRetain(v22);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v21, "setText:", v13);
    v23 = 1.0;
  }

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair), "setAlpha:", v23);
}

char *sub_1004FD89C(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  _BYTE *v3;
  objc_class *v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  UIColor v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  NSString v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  UIColor v56;
  uint64_t v57;
  void *v58;
  objc_class *v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  uint64_t *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  NSString v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  NSString v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  char *v102;
  id v103;
  id v104;
  id v105;
  id v108;
  char *v110;
  objc_super v111;

  v3[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = 0;
  v4 = (objc_class *)type metadata accessor for DayViewTitleAndValueLabelPair();
  v5 = objc_allocWithZone(v4);
  v110 = v3;
  v6 = (char *)objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v108 = (id)objc_opt_self(UIColor);
  v7 = objc_msgSend(v108, "labelColor");
  v8 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v9 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v7;
  v10 = v7;

  v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v6[v8]);

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v12.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v13 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v12;
  v15 = v12.super.isa;

  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v6[v13]);
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v24 = *(CHWorkoutDetailHeartRateTableViewCell **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText
                                                     + 8];
  *v23 = v20;
  v23[1] = (uint64_t)v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  v32 = *(void **)&v6[v11];
  v33 = (CHWorkoutDetailHeartRateTableViewCell *)v23[1];
  if (v33)
  {
    swift_bridgeObjectRetain(v23[1]);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33, v35, v36, v37, v38, v39, v40, v41);
  }
  else
  {
    v34 = 0;
  }
  v42 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair;
  objc_msgSend(v32, "setText:", v34);
  swift_bridgeObjectRelease(v22, v43, v44, v45, v46, v47, v48, v49);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v110[v42] = v6;
  v50 = (char *)objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v51 = objc_msgSend(v108, "labelColor");
  v52 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v53 = *(void **)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v51;
  v54 = v51;

  v55 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v50[v52]);

  v56.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v57 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v58 = *(void **)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v56;
  v59 = v56.super.isa;

  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v50[v57]);
  v60 = objc_msgSend(v16, "mainBundle");
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v60, "localizedStringForKey:value:table:", v61, 0, 0);

  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  v66 = (uint64_t *)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v67 = *(CHWorkoutDetailHeartRateTableViewCell **)&v50[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText
                                                      + 8];
  *v66 = v63;
  v66[1] = (uint64_t)v65;
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRelease(v67, v68, v69, v70, v71, v72, v73, v74);
  v75 = *(void **)&v50[v55];
  v76 = (CHWorkoutDetailHeartRateTableViewCell *)v66[1];
  if (v76)
  {
    swift_bridgeObjectRetain(v66[1]);
    v77 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v76, v78, v79, v80, v81, v82, v83, v84);
  }
  else
  {
    v77 = 0;
  }
  v85 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair;
  objc_msgSend(v75, "setText:", v77);
  swift_bridgeObjectRelease(v65, v86, v87, v88, v89, v90, v91, v92);

  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v110[v85] = v50;

  if (a3)
  {
    v93 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v94, v95, v96, v97, v98, v99, v100);
  }
  else
  {
    v93 = 0;
  }
  v111.receiver = v110;
  v111.super_class = (Class)type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  v101 = objc_msgSendSuper2(&v111, "initWithStyle:reuseIdentifier:", a1, v93);

  v102 = (char *)v101;
  v103 = objc_msgSend(v108, "systemBackgroundColor");
  objc_msgSend(v102, "setBackgroundColor:", v103);

  v104 = objc_msgSend(v102, "contentView");
  objc_msgSend(v104, "addSubview:", *(_QWORD *)&v102[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair]);

  v105 = objc_msgSend(v102, "contentView");
  objc_msgSend(v105, "addSubview:", *(_QWORD *)&v102[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair]);

  sub_1004FDEE0();
  return v102;
}

void sub_1004FDEE0()
{
  char *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double Width;
  double v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  Class isa;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CGRect v65;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v65.origin.x = v3;
  v65.origin.y = v5;
  v65.size.width = v7;
  v65.size.height = v9;
  Width = CGRectGetWidth(v65);
  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  v11 = UIRoundToScale(Width * 0.42, *(double *)&qword_10086AA00);
  v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair];
  v13 = objc_msgSend(v12, "leadingAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v62 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, v11);
  v16 = objc_msgSend(v12, "trailingAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "trailingAnchor");

  v60 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, 0.0);
  v19 = objc_msgSend(v12, "topAnchor");
  v20 = objc_msgSend(v0, "contentView");
  v21 = objc_msgSend(v20, "topAnchor");

  v59 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
  v22 = objc_msgSend(v12, "bottomAnchor");
  v23 = objc_msgSend(v0, "contentView");
  v24 = objc_msgSend(v23, "bottomAnchor");

  v57 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
  v25 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair];
  v26 = objc_msgSend(v25, "leadingAnchor");
  v27 = objc_msgSend(v0, "contentView");
  v28 = objc_msgSend(v27, "leadingAnchor");

  v58 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, 16.0);
  v29 = objc_msgSend(v25, "trailingAnchor");
  v30 = objc_msgSend(v12, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, -8.0);

  v32 = objc_msgSend(v25, "topAnchor");
  v33 = objc_msgSend(v0, "contentView");
  v34 = objc_msgSend(v33, "topAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:", v34);
  v36 = objc_msgSend(v25, "bottomAnchor");
  v37 = objc_msgSend(v0, "contentView");
  v38 = objc_msgSend(v37, "bottomAnchor");

  v54 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
  v56 = (id)objc_opt_self(NSLayoutConstraint);
  v39 = sub_100047110((uint64_t *)&unk_100828340);
  v40 = swift_allocObject(v39, 96, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100624C80;
  *(_QWORD *)(v40 + 32) = v62;
  *(_QWORD *)(v40 + 40) = v60;
  *(_QWORD *)(v40 + 48) = v59;
  *(_QWORD *)(v40 + 56) = v57;
  *(_QWORD *)(v40 + 64) = v58;
  *(_QWORD *)(v40 + 72) = v31;
  *(_QWORD *)(v40 + 80) = v35;
  *(_QWORD *)(v40 + 88) = v54;
  v64 = (CHWorkoutDetailHeartRateTableViewCell *)v40;
  specialized Array._endMutation()(v40);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v55 = v62;
  v61 = v60;
  v41 = v59;
  v42 = v57;
  v43 = v58;
  v44 = v31;
  v45 = v35;
  v46 = v54;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v64, v47, v48, v49, v50, v51, v52, v53);
  objc_msgSend(v56, "activateConstraints:", isa);

}

void sub_1004FE4AC(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  NSString v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;

  v9 = *(_BYTE *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair);
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair);
  v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
  v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                              + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
  v13 = v12;
  if ((v9 & 1) != 0)
  {
    if (!v12)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v14 = a2;
LABEL_6:
    v15 = sub_10003A994(v14);
    v17 = v16;

    v18 = (uint64_t *)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelText);
    v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v10
                                                    + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelText
                                                    + 8);
    *v18 = v15;
    v18[1] = v17;
    swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
    v27 = *(void **)(v10 + v11);
    objc_msgSend(v27, "setAttributedText:", 0);
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)v18[1];
    if (v28)
    {
      swift_bridgeObjectRetain(v18[1]);
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28, v30, v31, v32, v33, v34, v35, v36);
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(v27, "setText:", v29);

    v37 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair);
    v38 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
    v39 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v37
                                                                + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
    if (v39)
    {
      v40 = v39;
      v41 = sub_10003A7D8(a3, a4, v39);

      v42 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText;
      v43 = *(void **)(v37 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText);
      *(_QWORD *)(v37 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText) = v41;
      v45 = v41;

      v44 = *(void **)(v37 + v38);
      objc_msgSend(v44, "setText:", 0);
      objc_msgSend(v44, "setAttributedText:", *(_QWORD *)(v37 + v42));

      return;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (v12)
  {
    v14 = a1;
    goto LABEL_6;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1004FE688(void *a1)
{
  _BYTE *v1;
  id v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  UIColor v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  NSString v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  UIColor v55;
  uint64_t v56;
  void *v57;
  objc_class *v58;
  id v59;
  NSString v60;
  id v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  NSString v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  uint64_t v93;
  id v95;
  objc_class *v96;

  v1[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = 0;
  v96 = (objc_class *)type metadata accessor for DayViewTitleAndValueLabelPair();
  v2 = objc_allocWithZone(v96);
  v3 = v1;
  v4 = (char *)objc_msgSend(v2, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v95 = (id)objc_opt_self(UIColor);
  v5 = objc_msgSend(v95, "labelColor");
  v6 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v5;
  v8 = v5;

  v9 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v4[v6]);

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v10.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v12 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v10;
  v13 = v10.super.isa;

  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v4[v11]);
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = (uint64_t *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v22 = *(CHWorkoutDetailHeartRateTableViewCell **)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText
                                                     + 8];
  *v21 = v18;
  v21[1] = (uint64_t)v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
  v30 = *(void **)&v4[v9];
  v31 = (CHWorkoutDetailHeartRateTableViewCell *)v21[1];
  if (v31)
  {
    swift_bridgeObjectRetain(v21[1]);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31, v33, v34, v35, v36, v37, v38, v39);
  }
  else
  {
    v32 = 0;
  }
  v40 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair;
  objc_msgSend(v30, "setText:", v32);
  swift_bridgeObjectRelease(v20, v41, v42, v43, v44, v45, v46, v47);

  v48 = v40;
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v40] = v4;
  v49 = (char *)objc_msgSend(objc_allocWithZone(v96), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v50 = objc_msgSend(v95, "labelColor");
  v51 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v52 = *(void **)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v50;
  v53 = v50;

  v54 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v49[v51]);

  v55.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v56 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v57 = *(void **)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v55;
  v58 = v55.super.isa;

  objc_msgSend(*(id *)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v49[v56]);
  v59 = objc_msgSend(v14, "mainBundle");
  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v59, "localizedStringForKey:value:table:", v60, 0, 0);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
  v64 = v63;

  v65 = (uint64_t *)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v66 = *(CHWorkoutDetailHeartRateTableViewCell **)&v49[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText
                                                      + 8];
  *v65 = v62;
  v65[1] = (uint64_t)v64;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRelease(v66, v67, v68, v69, v70, v71, v72, v73);
  v74 = *(void **)&v49[v54];
  v75 = (CHWorkoutDetailHeartRateTableViewCell *)v65[1];
  if (v75)
  {
    swift_bridgeObjectRetain(v65[1]);
    v76 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v75, v77, v78, v79, v80, v81, v82, v83);
  }
  else
  {
    v76 = 0;
  }
  v84 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair;
  objc_msgSend(v74, "setText:", v76);
  swift_bridgeObjectRelease(v64, v85, v86, v87, v88, v89, v90, v91);

  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v84] = v49;

  v92 = *(void **)&v3[v84];
  v93 = type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  swift_deallocPartialClassInstance(v3, v93, 32, 7);
  return 0;
}

id sub_1004FEBD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DayViewStepsAndDistanceTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell);
}

void sub_1004FEC58(uint64_t a1, uint64_t a2)
{
  sub_1004FECA4(a1, a2, (SEL *)&selRef_startDate, (void (*)(void))&static Date._unconditionallyBridgeFromObjectiveC(_:));
}

void sub_1004FEC6C(uint64_t a1, uint64_t a2)
{
  sub_1004FECA4(a1, a2, (SEL *)&selRef_endDate, (void (*)(void))&static Date._unconditionallyBridgeFromObjectiveC(_:));
}

id sub_1004FEC80()
{
  id *v0;

  return objc_msgSend(*v0, "duration");
}

void sub_1004FEC90(uint64_t a1, uint64_t a2)
{
  sub_1004FECA4(a1, a2, (SEL *)&selRef_UUID, (void (*)(void))&static UUID._unconditionallyBridgeFromObjectiveC(_:));
}

void sub_1004FECA4(uint64_t a1, uint64_t a2, SEL *a3, void (*a4)(void))
{
  id *v4;
  id v6;

  v6 = objc_msgSend(*v4, *a3);
  a4();

}

uint64_t sub_1004FECF8(uint64_t a1)
{
  uint64_t result;

  result = sub_1000083D8(&qword_1008384B0, (uint64_t (*)(uint64_t))sub_10027D46C, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1004FED34()
{
  return MindfulnessSessionViewModel.startDate.getter();
}

uint64_t sub_1004FED54(uint64_t a1)
{
  return MindfulnessSessionViewModel.endDate.getter(a1);
}

uint64_t sub_1004FED74()
{
  return MindfulnessSessionViewModel.duration.getter();
}

uint64_t sub_1004FED94(uint64_t a1)
{
  uint64_t result;

  result = sub_1000083D8(&qword_1008384B8, (uint64_t (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

id sub_1004FEED4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider);
  }
  else
  {
    v4 = v0;
    sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
    v5 = sub_1005AEEC8();
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

char *sub_1004FEF50(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  objc_super v27;

  v5 = v4;
  v10 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v5;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v14 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v15 = (void *)UILabel.withFont(_:)(v14);

  v16 = (void *)objc_opt_self(UIColor);
  v17 = objc_msgSend(v16, "labelColor");
  v18 = (void *)UILabel.withTextColor(_:)(v17);

  LODWORD(v19) = 1148846080;
  objc_msgSend(v18, "setContentHuggingPriority:forAxis:", 1, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v18, "setContentCompressionResistancePriority:forAxis:", 1, v20);
  *(_QWORD *)&v5[v10] = v18;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = 0;

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for DayViewTableViewSectionHeader();
  v21 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v22 = objc_msgSend(v16, "systemBackgroundColor");
  objc_msgSend(v21, "setBackgroundColor:", v22);

  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label]);
  v23 = v21;
  v24 = sub_1004FEED4();
  objc_msgSend(v23, "addSubview:", v24);

  sub_1004FF31C();
  v25 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v25, "addObserver:selector:name:object:", v23, "updateFonts", UIContentSizeCategoryDidChangeNotification, 0);

  return v23;
}

id sub_1004FF21C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline];
  if (v1)
  {
    v2 = (void *)objc_opt_self(UIFont);
    v3 = v1;
    v4 = objc_msgSend(v2, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v4, "_scaledValueForValue:", 42.0);
    v6 = v5;

    objc_msgSend(v3, "setConstant:", v6);
  }
  objc_msgSend(v0, "invalidateIntrinsicContentSize");
  return objc_msgSend(v0, "setNeedsLayout");
}

void sub_1004FF31C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  Class isa;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label];
  v3 = objc_msgSend(v2, "leadingAnchor");
  v4 = objc_msgSend(v1, "leadingAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v4, 16.0);

  v6 = objc_msgSend(v2, "trailingAnchor");
  v7 = objc_msgSend(v1, "trailingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, -16.0);

  v9 = objc_msgSend(v2, "firstBaselineAnchor");
  v10 = objc_msgSend(v1, "topAnchor");
  v11 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v11, "_scaledValueForValue:", 42.0);
  v13 = v12;

  v14 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, v13);
  v15 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline];
  v50 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = v14;

  v16 = sub_1004FEED4();
  v17 = objc_msgSend(v16, "leadingAnchor");

  v18 = objc_msgSend(v1, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 16.0);

  v20 = sub_1004FEED4();
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v1, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  v24 = sub_1004FEED4();
  v25 = objc_msgSend(v24, "topAnchor");

  v26 = objc_msgSend(v1, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  v28 = sub_1004FEED4();
  v29 = objc_msgSend(v28, "heightAnchor");

  if (qword_10081DD78 != -1)
    swift_once(&qword_10081DD78, sub_100442F3C);
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", *(double *)&qword_10086AA08);

  v48 = (id)objc_opt_self(NSLayoutConstraint);
  v31 = sub_100047110((uint64_t *)&unk_100828340);
  v32 = swift_allocObject(v31, 80, 7);
  *(_OWORD *)(v32 + 16) = xmmword_10062B740;
  *(_QWORD *)(v32 + 32) = v5;
  *(_QWORD *)(v32 + 40) = v8;
  *(_QWORD *)(v32 + 48) = v19;
  *(_QWORD *)(v32 + 56) = v23;
  *(_QWORD *)(v32 + 64) = v27;
  *(_QWORD *)(v32 + 72) = v30;
  v51 = (CHWorkoutDetailHeartRateTableViewCell *)v32;
  specialized Array._endMutation()(v32);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v49 = v5;
  v33 = v8;
  v34 = v19;
  v35 = v23;
  v36 = v27;
  v37 = v30;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v51, v39, v40, v41, v42, v43, v44, v45);
  objc_msgSend(v48, "activateConstraints:", isa);

  v46 = *(void **)&v1[v50];
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v47, "setActive:", 1);

  }
}

uint64_t sub_1004FF7A0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);
  v8 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v9 = (void *)UILabel.withFont(_:)(v8);

  v10 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v11 = (void *)UILabel.withTextColor(_:)(v10);

  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setContentHuggingPriority:forAxis:", 1, v12);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 1, v13);

  *(_QWORD *)&v2[v4] = v11;
  v14 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider] = 0;
  v15 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = 0;

  v16 = *(void **)&v6[v15];
  v17 = type metadata accessor for DayViewTableViewSectionHeader();
  swift_deallocPartialClassInstance(v6, v17, 32, 7);
  return 0;
}

id sub_1004FF974()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewTableViewSectionHeader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DayViewTableViewSectionHeader()
{
  return objc_opt_self(_TtC10FitnessApp29DayViewTableViewSectionHeader);
}

void sub_1004FFA0C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_1007A5B70, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_1004FCDF4, v9);
  swift_release(v6);
  swift_release(v9);

}

uint64_t sub_1004FFABC@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v28[2];
  uint64_t v29;
  uint64_t v30;

  v28[1] = a1;
  v1 = type metadata accessor for Date(0);
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v8);
  v9 = sub_100047110((uint64_t *)&unk_100828720);
  v10 = type metadata accessor for Calendar.Component(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v9, v14 + 3 * v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100624A40;
  v16 = v15 + v14;
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104);
  v17(v16, enum case for Calendar.Component.month(_:), v10);
  v17(v16 + v12, enum case for Calendar.Component.year(_:), v10);
  v17(v16 + 2 * v12, enum case for Calendar.Component.era(_:), v10);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v15);
  swift_setDeallocating(v15);
  swift_arrayDestroy(v16, 3, v10);
  swift_deallocClassInstance(v15, 32, 7);
  v19 = objc_msgSend(v28[0], "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

  Calendar.dateComponents(_:from:)(v18, v3);
  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1004FFCB8(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  char *v14;
  char *v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  __int16 v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t ObjCClassFromMetadata;
  NSString v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  NSString v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  NSString v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  NSString v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  void *v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v120;
  id v122;
  id v123;
  id v124;
  _BYTE v125[24];
  objc_super v126;

  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataSource] = 0;
  v21 = &v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  *(_QWORD *)v21 = 0;
  *((_WORD *)v21 + 4) = 512;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers] = _swiftEmptyArrayStorage;
  v22 = &v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
  *(_QWORD *)v22 = 0;
  *((_WORD *)v22 + 4) = 1792;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider] = a1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext] = a2;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager] = a3;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager] = a4;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore] = a5;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model] = a6;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager] = a8;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory] = a7;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider] = a9;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator] = a10;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider] = a11;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider] = a12;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager] = a13;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_stackFormattingManager] = a14;
  v126.receiver = v14;
  v126.super_class = (Class)type metadata accessor for HistoryListViewController();
  v23 = a1;
  v118 = a2;
  v117 = a3;
  v116 = a4;
  v115 = a5;
  v114 = a6;
  v120 = a8;
  v122 = a7;
  v24 = a9;
  v25 = a10;
  v26 = a11;
  v27 = a12;
  v123 = a13;
  v124 = a14;
  v28 = (char *)objc_msgSendSuper2(&v126, "initWithNibName:bundle:", 0, 0);
  v29 = *(void **)&v28[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  v30 = *(_WORD *)&v28[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 8];
  v31 = v28;
  v32 = sub_1003C1EA0(v29, v30);
  v34 = v33;
  v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v32;
  swift_bridgeObjectRelease(v35);
  v36 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v34;
  swift_bridgeObjectRelease(v36);
  v37 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, v31);
  v38 = objc_allocWithZone((Class)type metadata accessor for HistoryFilterUIViewController());
  v39 = sub_1001F2D1C((uint64_t)sub_10050659C, v37);
  v40 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController;
  v41 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = v39;

  v42 = *(void **)&v31[v40];
  if (!v42)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v112 = v27;
  v113 = v26;
  v43 = v42;
  sub_1003C165C();
  v45 = v44;
  if (*(_QWORD *)(v44 + 16))
  {
    v46 = *(_QWORD *)&v43[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes];
    *(_QWORD *)&v43[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = v44;
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRelease(v46);
    sub_1001F2EC0();
  }

  swift_bridgeObjectRelease(v45);
  v47 = (void *)objc_opt_self(NSBundle);
  v48 = v31;
  v49 = objc_msgSend(v47, "mainBundle");
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v49, "localizedStringForKey:value:table:", v50, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v53 = v52;

  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v48, "setTitle:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v55 = objc_msgSend(v48, "tableView");
  if (!v55)
    goto LABEL_25;
  v56 = v55;
  objc_msgSend(v55, "setSectionHeaderTopPadding:", 0.0);

  v57 = objc_msgSend(v48, "tableView");
  if (!v57)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v58 = v57;
  objc_msgSend(v57, "setSeparatorStyle:", 0);

  v59 = objc_msgSend(v48, "tableView");
  if (!v59)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v60 = v59;
  v61 = *(void **)&v31[v40];
  if (!v61)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v62 = objc_msgSend(v61, "view");
  if (!v62)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v63 = v62;
  objc_msgSend(v62, "frame");
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;

  v72 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v65, v67, v69, v71);
  objc_msgSend(v60, "setTableHeaderView:", v72);

  v73 = objc_msgSend(v48, "tableView");
  if (!v73)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v74 = v73;
  v75 = objc_msgSend(v73, "tableHeaderView");

  if (v75)
  {
    v76 = *(void **)&v31[v40];
    if (!v76)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v77 = objc_msgSend(v76, "view");
    if (!v77)
    {
LABEL_37:
      __break(1u);
      return;
    }
    v78 = v77;
    objc_msgSend(v75, "addSubview:", v77);

  }
  v79 = objc_msgSend(v48, "tableView");
  if (!v79)
    goto LABEL_31;
  v80 = v79;
  v81 = sub_10001E724(0, &qword_100821820, off_1007765F8);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v81);
  v83 = String._bridgeToObjectiveC()();
  objc_msgSend(v80, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v83);

  v84 = objc_msgSend(v48, "tableView");
  if (!v84)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v85 = v84;
  v86 = sub_10001E724(0, &qword_100821828, off_1007765F0);
  v87 = swift_getObjCClassFromMetadata(v86);
  v88 = String._bridgeToObjectiveC()();
  objc_msgSend(v85, "registerClass:forCellReuseIdentifier:", v87, v88);

  v89 = objc_msgSend(v48, "tableView");
  if (!v89)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v90 = v89;
  v91 = type metadata accessor for MindfulnessSessionListTableViewCell();
  v92 = swift_getObjCClassFromMetadata(v91);
  v93 = String._bridgeToObjectiveC()();
  objc_msgSend(v90, "registerClass:forCellReuseIdentifier:", v92, v93);

  v94 = objc_msgSend(v48, "tableView");
  if (!v94)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v95 = v94;
  v96 = type metadata accessor for WorkoutsListTableViewCell();
  v97 = swift_getObjCClassFromMetadata(v96);
  v98 = String._bridgeToObjectiveC()();
  objc_msgSend(v95, "registerClass:forCellReuseIdentifier:", v97, v98);

  v99 = objc_msgSend(v48, "tableView");
  if (!v99)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v100 = v99;
  v101 = type metadata accessor for StackListTableViewCell(0);
  v102 = swift_getObjCClassFromMetadata(v101);
  v103 = String._bridgeToObjectiveC()();
  objc_msgSend(v100, "registerClass:forCellReuseIdentifier:", v102, v103);

  sub_1005012BC();
  v104 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v104 + 16, v48);
  v105 = swift_allocObject(&unk_1007A5CB0, 32, 7);
  *(_QWORD *)(v105 + 16) = sub_1005065A4;
  *(_QWORD *)(v105 + 24) = v104;
  v106 = &v23[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess(&v23[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers], v125, 33, 0);
  v107 = *(_QWORD **)v106;
  swift_retain_n(v104, 2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v107);
  *(_QWORD *)v106 = v107;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v107 = sub_10004C908(0, v107[2] + 1, 1, v107);
    *(_QWORD *)v106 = v107;
  }
  v110 = v107[2];
  v109 = v107[3];
  if (v110 >= v109 >> 1)
  {
    v107 = sub_10004C908((_QWORD *)(v109 > 1), v110 + 1, 1, v107);
    *(_QWORD *)v106 = v107;
  }
  v107[2] = v110 + 1;
  v111 = &v107[2 * v110];
  v111[4] = sub_10003BD6C;
  v111[5] = v105;
  swift_endAccess(v125);
  swift_release_n(v104, 2);
  sub_100500A9C();

}

void sub_10050065C(void *a1, __int16 a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  _BYTE v17[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue;
    *(_QWORD *)v8 = a1;
    *(_WORD *)(v8 + 8) = a2;
    v9 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);
    v10 = sub_1003C1EA0(a1, a2);
    v12 = v11;

    v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
    *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v10;
    swift_bridgeObjectRelease(v13);
    v14 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
    *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v12;
    v15 = objc_msgSend(v7, "tableView", swift_bridgeObjectRelease(v14).n128_f64[0]);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100500758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  void *v5;
  __int16 v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue);
    v6 = *(_WORD *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 8);
    v7 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);
    v8 = sub_1003C1EA0(v5, v6);
    v10 = v9;

    v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v8;
    swift_bridgeObjectRelease(v11);
    v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v10;
    swift_bridgeObjectRelease(v12);
    sub_1005012BC();

  }
}

id sub_100500820()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  objc_super v10;
  _QWORD v11[3];
  uint64_t v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = v1 + 32;
    swift_bridgeObjectRetain_n(v1, 2);
    do
    {
      sub_10003E9BC(v4, (uint64_t)v11);
      v5 = objc_msgSend(v3, "defaultCenter");
      v6 = v12;
      v7 = sub_100016804(v11, v12);
      v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
      objc_msgSend(v5, "removeObserver:", v8);

      swift_unknownObjectRelease(v8);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for HistoryListViewController();
  return objc_msgSendSuper2(&v10, "dealloc");
}

double sub_100500A9C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[5];
  uint64_t v11;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v3 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v10[4] = sub_1005058E0;
  v11 = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000398D4;
  v10[3] = &unk_1007A5AE8;
  v4 = _Block_copy(v10);
  v5 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", UIApplicationSignificantTimeChangeNotification, 0, v2, v4, swift_release(v11).n128_f64[0]);
  _Block_release(v4);

  v6 = sub_100047110(&qword_10082CEC0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100622F90;
  *(_QWORD *)(v7 + 56) = swift_getObjectType(v5);
  *(_QWORD *)(v7 + 32) = v5;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers) = v7;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

void sub_100500C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  v3 = static os_log_type_t.default.getter(a1);
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "HistoryListViewController did receive significantTimeChangeNotification notification", 84, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v2, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "tableView");

    if (v7)
    {
      objc_msgSend(v7, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100500CEC(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v3);
  v15 = swift_allocObject(&unk_1007A5AA8, 34, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a1;
  *(_WORD *)(v15 + 32) = a2;
  aBlock[4] = sub_1005058D4;
  v25 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A5AC0;
  v16 = _Block_copy(aBlock);
  swift_release(v25);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100047110(&qword_100828C80);
  v20 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

void sub_100500F20(uint64_t a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  os_log_type_t v13;
  void *v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  NSObject *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  NSObject *log;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  char v46[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider;
    sub_1003C165C();
    v10 = v9;
    v11 = sub_1002D3DD8((uint64_t)a2, a3, v9);
    swift_bridgeObjectRelease(v10);
    v13 = static os_log_type_t.default.getter(v12);
    v14 = (void *)HKLogActivity;
    v15 = os_log_type_enabled(HKLogActivity, v13);
    if ((v11 & 1) == 0)
    {
      if (v15)
      {
        v35 = v14;
        v36 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v45 = v37;
        *(_DWORD *)v36 = 136315138;
        v43 = (uint64_t)a2;
        v44 = a3;
        v38 = String.init<A>(describing:)(&v43, &type metadata for HistoryItemFilterValue);
        v40 = v39;
        v43 = sub_10003E8EC(v38, v39, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v36 + 4);
        swift_bridgeObjectRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v35, v13, "DEEPLINK: unable to filter to %s", v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

      }
      v41 = &v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
      *(_QWORD *)v41 = a2;
      *((_WORD *)v41 + 4) = a3;
      goto LABEL_12;
    }
    if (v15)
    {
      log = v14;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v45 = v17;
      *(_DWORD *)v16 = 136315138;
      v43 = (uint64_t)a2;
      v44 = a3;
      v18 = String.init<A>(describing:)(&v43, &type metadata for HistoryItemFilterValue);
      v20 = v19;
      v43 = sub_10003E8EC(v18, v19, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v16 + 4);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, log, v13, "DEEPLINK: filtering history to %s", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    v21 = &v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
    *(_QWORD *)v21 = a2;
    *((_WORD *)v21 + 4) = a3;
    v22 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController;
    v23 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
    if (v23)
    {
      v24 = v23 + OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType;
      *(_QWORD *)v24 = a2;
      *(_WORD *)(v24 + 8) = a3;
      v25 = *(void **)&v7[v22];
      if (v25)
      {
        v26 = v25;
        sub_1001F2EC0();

        v27 = *(id *)&v7[v8];
        v28 = sub_1003C1EA0(a2, a3);
        v30 = v29;

        v31 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
        *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v28;
        swift_bridgeObjectRelease(v31);
        v32 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
        *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v30;
        v33 = objc_msgSend(v7, "tableView", swift_bridgeObjectRelease(v32).n128_f64[0]);
        if (v33)
        {
          v34 = v33;
          objc_msgSend(v33, "reloadData");

LABEL_12:
          return;
        }
LABEL_16:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_1005012BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = swift_allocObject(&unk_1007A5A58, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = ObjectType;
  aBlock[4] = sub_1005058A8;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007A5A70;
  v14 = _Block_copy(aBlock);
  swift_release(v23);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100047110(&qword_100828C80);
  v18 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1005014F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  os_log_type_t v6;
  void *v7;
  os_log_type_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int16 v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = static os_log_type_t.default.getter(Strong);
    v7 = (void *)HKLogActivity;
    v8 = v6;
    if (os_log_type_enabled(HKLogActivity, v6))
    {
      v9 = v7;
      v10 = swift_slowAlloc(22, -1);
      v11 = swift_slowAlloc(64, -1);
      v26 = v11;
      *(_DWORD *)v10 = 136315394;
      v12 = _typeName(_:qualified:)(a2, 0);
      v14 = v13;
      v25 = sub_10003E8EC(v12, v13, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v10 + 4);
      swift_bridgeObjectRelease(v14);
      *(_WORD *)(v10 + 12) = 2080;
      v25 = sub_10003E8EC(0xD000000000000012, 0x800000010068A130, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v10 + 14);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "%s::%s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    v15 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
    if (v15)
    {
      v16 = v15;
      sub_1003C165C();
      v18 = v17;
      if (*(_QWORD *)(v17 + 16))
      {
        v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes];
        *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = v17;
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRelease(v19);
        sub_1001F2EC0();
      }

      swift_bridgeObjectRelease(v18);
      v20 = &v5[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
      v21 = *(_WORD *)&v5[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter + 8];
      if ((v21 & 0xFF00) != 0x700)
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        *((_WORD *)v20 + 4) = 1792;
        sub_100500CEC(v22, v21);
      }
      v23 = objc_msgSend(v5, "tableView");
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, "reloadData");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_100501770(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id result;
  void *v25;
  NSString v26;
  Class isa;
  id v28;
  id v29;
  void *v30;
  char *v31;
  void *v32;
  id v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  NSString v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  const char *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  NSString v70;
  Class v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  const char *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  objc_class *v89;
  const char *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  objc_class *v97;
  objc_class *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  unint64_t v106;
  void *v107;
  __n128 v108;
  void *v109;
  NSString v110;
  Class v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  NSString v125;
  Class v126;
  id v127;
  unint64_t v128;
  char *v129;
  id v130;
  uint64_t v131;
  void *v132;
  uint64_t *v133;
  char *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  char *v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  unint64_t v142;
  const char *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  id v150;
  SEL v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  void *v161;
  id v162;
  char *v163;
  uint64_t v164;
  void *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  unint64_t v171;
  void *v172;
  __n128 v173;
  uint64_t v174;
  id v175;
  SEL v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  _OWORD v193[16];
  _BYTE v194[40];
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;

  v3 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v3);
  v5 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FitnessPlusStackViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v190 = v6;
  v191 = v7;
  __chkstk_darwin(v6);
  v189 = (uint64_t)&v183 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v187);
  v188 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v12 = (char *)&v183 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DateComponents(0);
  v184 = *(_QWORD *)(v13 - 8);
  v185 = v13;
  __chkstk_darwin(v13);
  v183 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v19 = (char *)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = v1;
  v20 = &v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  if (v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 == 512
    || IndexPath.row.getter(v17))
  {
    v21 = v192;
    sub_100503BB8(a1, (uint64_t)v194);
    sub_1005054E0((uint64_t)v194, (uint64_t)&v195);
    if (*((_QWORD *)&v196 + 1))
    {
      v22 = sub_100047110((uint64_t *)&unk_10082E5B0);
      v23 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      if ((swift_dynamicCast(v193, &v195, v22, v23, 6) & 1) != 0)
      {

        result = objc_msgSend(v21, "tableView");
        if (result)
        {
          v25 = result;
          v26 = String._bridgeToObjectiveC()();
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v28 = objc_msgSend(v25, "dequeueReusableCellWithIdentifier:forIndexPath:", v26, isa);

          sub_1005054E0((uint64_t)v194, (uint64_t)&v195);
          if (*((_QWORD *)&v196 + 1))
          {
            v29 = v28;
            v28 = v28;
            if ((swift_dynamicCast(v193, &v195, v22, v23, 6) & 1) != 0)
            {
              v31 = v192;
              v30 = *(void **)&v193[0];
              v32 = *(void **)&v192[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
              v33 = objc_msgSend(*(id *)&v193[0], "UUID");
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v33);

              UUID.uuidString.getter(v34);
              v36 = v35;
              (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v186);
              v37 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v36, v38, v39, v40, v41, v42, v43, v44);
              v45 = objc_msgSend(v32, "achievementsForWorkoutIdentifier:", v37);

              v46 = sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
              v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

              v48 = type metadata accessor for WorkoutsListTableViewCell();
              if (swift_dynamicCastClass(v28, v48))
              {
                v56 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
                v57 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
                if ((unint64_t)v47 >> 62)
                {
                  if (v47 < 0)
                    v174 = v47;
                  else
                    v174 = v47 & 0xFFFFFFFFFFFFFF8;
                  v175 = v28;
                  swift_bridgeObjectRetain(v47);
                  v58 = _CocoaArrayWrapper.endIndex.getter(v174);
                  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v47, v176, v177, v178, v179, v180, v181, v182);
                }
                else
                {
                  v58 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
                  v59 = v28;
                }
                swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v47, v60, v61, v62, v63, v64, v65, v66);
                sub_100110A00(v30, v56, v57, v58, 1, 0, 0);

              }
              else
              {
                swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v47, v49, v50, v51, v52, v53, v54, v55);
              }
              v164 = v187;
              v163 = v188;
              v165 = *(void **)&v192[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
              v166 = v30;
              sub_1001641A8(v166, v165, &v195);
              *(_QWORD *)&v193[0] = &_swiftEmptyArrayStorage;
              sub_100112010(&v195);
              v167 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
              v168 = sub_100047110((uint64_t *)&unk_10083D740);
              v169 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
              dispatch thunk of SetAlgebra.init<A>(_:)(v193, v168, v169, v164, v167);
              v193[12] = v207;
              v193[13] = v208;
              v193[14] = v209;
              v193[15] = v210;
              v193[8] = v203;
              v193[9] = v204;
              v193[10] = v205;
              v193[11] = v206;
              v193[4] = v199;
              v193[5] = v200;
              v193[6] = v201;
              v193[7] = v202;
              v193[0] = v195;
              v193[1] = v196;
              v193[2] = v197;
              v193[3] = v198;
              v170 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
              v171 = sub_100112214();
              v172 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v193, v163, &type metadata for WorkoutEntity, v171);
              UIView.annotate(with:)(v172, v173);

              sub_100112258(&v195);
              goto LABEL_54;
            }
            goto LABEL_39;
          }
          goto LABEL_36;
        }
        goto LABEL_71;
      }
    }
    else
    {
      sub_10001BE90((uint64_t)&v195, &qword_100831878);
    }
    sub_1005054E0((uint64_t)v194, (uint64_t)&v195);
    if (*((_QWORD *)&v196 + 1))
    {
      v67 = sub_100047110((uint64_t *)&unk_10082E5B0);
      v68 = type metadata accessor for MindfulnessSessionViewModel(0);
      if ((swift_dynamicCast(v193, &v195, v67, v68, 6) & 1) != 0)
      {

        result = objc_msgSend(v21, "tableView");
        if (!result)
        {
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        v69 = result;
        v70 = String._bridgeToObjectiveC()();
        v71 = IndexPath._bridgeToObjectiveC()().super.isa;
        v28 = objc_msgSend(v69, "dequeueReusableCellWithIdentifier:forIndexPath:", v70, v71);

        sub_1005054E0((uint64_t)v194, (uint64_t)&v195);
        if (!*((_QWORD *)&v196 + 1))
        {
LABEL_36:
          sub_10001BE90((uint64_t)&v195, &qword_100831878);
          goto LABEL_54;
        }
        v29 = v28;
        v28 = v28;
        if ((swift_dynamicCast(v193, &v195, v67, v68, 6) & 1) == 0)
        {
LABEL_39:

          v28 = v29;
          goto LABEL_54;
        }
        v72 = *(void **)&v193[0];
        v73 = type metadata accessor for MindfulnessSessionListTableViewCell();
        v74 = swift_dynamicCastClass(v28, v73);
        if (v74)
        {
          v75 = v74;
          v76 = *(char **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
          v77 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
          v78 = swift_allocObject(&unk_1007A5A30, 24, 7);
          swift_unknownObjectWeakInit(v78 + 16, v75);
          v79 = v28;
          swift_retain(v78);
          sub_1004474CC(v72, v76, v77, (uint64_t)sub_10012F3BC, v78);

          v74 = swift_release_n(v78, 2);
        }
        v80 = MindfulnessSessionViewModel.mindfulnessSessions.getter(v74);
        v88 = v80;
        if ((unint64_t)v80 >> 62)
        {
          if (v80 >= 0)
            v80 &= 0xFFFFFFFFFFFFFF8uLL;
          result = (id)_CocoaArrayWrapper.endIndex.getter(v80);
          if (result)
            goto LABEL_22;
        }
        else
        {
          result = *(id *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (result)
          {
LABEL_22:
            if ((v88 & 0xC000000000000001) != 0)
            {
              v89 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v88);
              goto LABEL_25;
            }
            if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v89 = (objc_class *)*(id *)(v88 + 32);
LABEL_25:
              v97 = v89;
              swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v88, v90, v91, v92, v93, v94, v95, v96);
              v98 = v97;
              v99 = (void *)sub_10021F998(v98);
              *(_QWORD *)&v195 = &_swiftEmptyArrayStorage;
              v100 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
              v101 = v99;
              v102 = sub_100047110((uint64_t *)&unk_10083D740);
              v103 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
              v104 = v188;
              dispatch thunk of SetAlgebra.init<A>(_:)(&v195, v102, v103, v187, v100);
              *(_QWORD *)&v195 = v101;
              v105 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
              v106 = sub_10021F580();
              v107 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v195, v104, &type metadata for MindfulnessSessionEntity, v106);
              UIView.annotate(with:)(v107, v108);

LABEL_54:
              v133 = &qword_100831878;
              v134 = v194;
              goto LABEL_55;
            }
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
        }
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v88, v81, v82, v83, v84, v85, v86, v87);
        sub_10001BE90((uint64_t)v194, &qword_100831878);

        goto LABEL_56;
      }
    }
    else
    {
      sub_10001BE90((uint64_t)&v195, &qword_100831878);
    }
    result = objc_msgSend(v21, "tableView");
    if (result)
    {
      v109 = result;
      v110 = String._bridgeToObjectiveC()();
      v111 = IndexPath._bridgeToObjectiveC()().super.isa;
      v112 = objc_msgSend(v109, "dequeueReusableCellWithIdentifier:forIndexPath:", v110, v111);

      sub_1005054E0((uint64_t)v194, (uint64_t)&v195);
      v113 = *((_QWORD *)&v196 + 1);
      v28 = v112;
      if (v113)
      {
        v114 = sub_100047110((uint64_t *)&unk_10082E5B0);
        v115 = v190;
        v116 = swift_dynamicCast(v5, &v195, v114, v190, 6);
        v117 = v191;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v5, v116 ^ 1u, 1, v115);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v5, 1, v115) != 1)
        {
          v118 = v189;
          sub_10027D4A8((uint64_t)v5, v189);
          v119 = type metadata accessor for StackListTableViewCell(0);
          v120 = swift_dynamicCastClass(v28, v119);
          if (v120)
          {
            v121 = v120;
            v122 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
            v123 = swift_allocObject(&unk_1007A5A08, 24, 7);
            swift_unknownObjectWeakInit(v123 + 16, v121);
            swift_retain(v123);
            sub_1002B56C0(v118, v122, (uint64_t)sub_100218594, v123);

            swift_release_n(v123, 2);
          }
          else
          {

          }
          sub_100149D44(v118);
          goto LABEL_54;
        }
      }
      else
      {
        sub_10001BE90((uint64_t)&v195, &qword_100831878);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v5, 1, 1, v190);
      }

      sub_10001BE90((uint64_t)v194, &qword_100831878);
      v133 = (uint64_t *)&unk_100828380;
      v134 = v5;
LABEL_55:
      sub_10001BE90((uint64_t)v134, v133);
      goto LABEL_56;
    }
    goto LABEL_70;
  }
  result = objc_msgSend(v192, "tableView");
  if (result)
  {
    v124 = result;
    v125 = String._bridgeToObjectiveC()();
    v126 = IndexPath._bridgeToObjectiveC()().super.isa;
    v127 = objc_msgSend(v124, "dequeueReusableCellWithIdentifier:forIndexPath:", v125, v126);

    if (v20[9] << 8 == 1280)
    {
      v28 = v127;
      v128 = IndexPath.section.getter(v28);
      v129 = v192;
      v130 = (id)sub_1005025D4(v128);
      v131 = objc_opt_self(CHListSummaryTableViewCell);
      v132 = (void *)swift_dynamicCastObjCClass(v28, v131);
      if (v132)
      {
        objc_msgSend(v132, "setMindfulnessSessionsStatistics:formattingManager:", v130, *(_QWORD *)&v129[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager]);
LABEL_59:

        goto LABEL_56;
      }

      goto LABEL_50;
    }
    v135 = v127;
    v136 = IndexPath.section.getter(v135);
    IndexPath.init(row:section:)(1, v136);
    sub_100503BB8((uint64_t)v19, (uint64_t)&v195);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    if (!*((_QWORD *)&v196 + 1))
    {

      sub_10001BE90((uint64_t)&v195, &qword_100831878);
      v28 = v135;
      goto LABEL_56;
    }
    v28 = v135;
    v137 = sub_100047110((uint64_t *)&unk_10082E5B0);
    v138 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    if ((swift_dynamicCast(v193, &v195, v137, v138, 6) & 1) != 0)
    {
      v130 = *(id *)&v193[0];
      v139 = v183;
      sub_1004FFABC(v183);

      v140 = v192;
      v141 = *(CHWorkoutDetailHeartRateTableViewCell **)&v192[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
      if (*(_QWORD *)v141->cellPadding)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v192[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics]);
        v142 = sub_100439544((uint64_t)v139);
        if ((v143 & 1) != 0)
        {
          v150 = *(id *)(*(_QWORD *)v141[1].cellInset + 8 * v142);
          swift_bridgeObjectRelease(v141, v151, v152, v153, v154, v155, v156, v157);
          (*(void (**)(void *, uint64_t))(v184 + 8))(v139, v185);
          v158 = objc_opt_self(CHListSummaryTableViewCell);
          v159 = swift_dynamicCastObjCClass(v28, v158);
          if (v159)
          {
            v160 = (void *)v159;
            v161 = (void *)objc_opt_self(CHWorkoutTypeKey);
            v150 = v150;
            v162 = objc_msgSend(v161, "initForWorkout:", v130);
            objc_msgSend(v160, "setWorkoutStatistics:activityTypeKey:formattingManager:", v150, v162, *(_QWORD *)&v140[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager]);

            objc_msgSend(v160, "setIsForAllWorkouts:", v20[9] << 8 == 768);
          }

          goto LABEL_50;
        }
        swift_bridgeObjectRelease(v141, v143, v144, v145, v146, v147, v148, v149);
      }
      (*(void (**)(void *, uint64_t))(v184 + 8))(v139, v185);
      goto LABEL_59;
    }
LABEL_50:

LABEL_56:
    objc_msgSend(v28, "setSelectionStyle:", 0);
    return v28;
  }
LABEL_73:
  __break(1u);
  return result;
}

unint64_t sub_1005025D4(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  double *heartRateController;
  uint64_t v50;
  uint64_t v51;
  double *v52;
  double v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  objc_class *v61;
  char *v62;
  objc_super v63;
  id v64;
  _BYTE v65[40];
  _QWORD v66[5];
  unint64_t v67;

  v67 = (unint64_t)&_swiftEmptyArrayStorage;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
    if (*(_QWORD *)(v2 + 16) > result)
    {
      v3 = v2 + 8 * result;
      v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 32);
      v5 = *(_QWORD *)v4->cellPadding;
      if (v5)
      {
        v6 = (uint64_t)&v4[1];
        swift_bridgeObjectRetain(*(_QWORD *)(v3 + 32));
        do
        {
          sub_1000252E0(v6, (uint64_t)v66);
          sub_1000252E0((uint64_t)v66, (uint64_t)v65);
          v15 = sub_100047110((uint64_t *)&unk_10082E5B0);
          v16 = type metadata accessor for MindfulnessSessionViewModel(0);
          if (swift_dynamicCast(&v64, v65, v15, v16, 6))
          {

            sub_1000252E0((uint64_t)v66, (uint64_t)v65);
            if ((swift_dynamicCast(&v64, v65, v15, v16, 6) & 1) != 0)
            {
              v17 = v64;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
              v19 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v18 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v19 >= v18 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
              v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
              specialized Array._endMutation()(v7);

            }
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v66);
          v6 += 40;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease(v4, v8, v9, v10, v11, v12, v13, v14);
        v20 = v67;
        if (!(v67 >> 62))
          goto LABEL_12;
      }
      else
      {
        v20 = (uint64_t)&_swiftEmptyArrayStorage;
        if (!((unint64_t)&_swiftEmptyArrayStorage >> 62))
        {
LABEL_12:
          v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_13;
        }
      }
      if (v20 < 0)
        v41 = v20;
      else
        v41 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v21 = _CocoaArrayWrapper.endIndex.getter(v41);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v42, v43, v44, v45, v46, v47, v48);
LABEL_13:
      swift_bridgeObjectRetain(v20);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100128EFC(v22);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v24, v25, v26, v27, v28, v29, v30);
      v38 = *(_QWORD *)v23->cellPadding;
      if (v38)
      {
        if (v38 == 1)
        {
          v39 = 0;
          v40 = 0.0;
        }
        else
        {
          v39 = v38 & 0x7FFFFFFFFFFFFFFELL;
          heartRateController = (double *)v23[1].heartRateController;
          v40 = 0.0;
          v50 = v38 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            v40 = v40 + *(heartRateController - 1) + *heartRateController;
            heartRateController += 2;
            v50 -= 2;
          }
          while (v50);
          if (v38 == v39)
            goto LABEL_27;
        }
        v51 = v38 - v39;
        v52 = (double *)(&v23[1].super.super.super.super.isa + v39);
        do
        {
          v53 = *v52++;
          v40 = v40 + v53;
          --v51;
        }
        while (v51);
      }
      else
      {
        v40 = 0.0;
      }
LABEL_27:
      swift_bridgeObjectRelease(v23, v31, v32, v33, v34, v35, v36, v37);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v54, v55, v56, v57, v58, v59, v60);
      v61 = (objc_class *)type metadata accessor for MindfulnessSessionsStatistics();
      v62 = (char *)objc_allocWithZone(v61);
      *(_QWORD *)&v62[OBJC_IVAR___CHMindfulnessSessionsStatistics_sessionCount] = v21;
      *(double *)&v62[OBJC_IVAR___CHMindfulnessSessionsStatistics_totalDuration] = v40;
      v63.receiver = v62;
      v63.super_class = v61;
      return (unint64_t)objc_msgSendSuper2(&v63, "init");
    }
  }
  __break(1u);
  return result;
}

void sub_100502918(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  Class isa;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v9 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
  if (*(_QWORD *)(v10 + 16) <= a2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!*(_QWORD *)(*(_QWORD *)(v10 + 8 * a2 + 32) + 16))
    return;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:", v11);

  v13 = *(_QWORD *)(v2 + v9);
  if (*(_QWORD *)(v13 + 16) <= a2)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v14 = *(_QWORD *)(v13 + 8 * a2 + 32);
  if (*(_QWORD *)(v14 + 16))
  {
    sub_1000252E0(v14 + 32, (uint64_t)v24);
    if (v12)
    {
      v15 = objc_opt_self(CHListTableHeaderView);
      v16 = swift_dynamicCastObjCClass(v12, v15);
      if (v16)
      {
        v17 = (void *)v16;
        v18 = v25;
        v19 = v26;
        sub_100016804(v24, v25);
        v20 = *(void (**)(uint64_t, uint64_t))(v19 + 32);
        v21 = v12;
        v20(v18, v19);
        isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        objc_msgSend(v17, "setDate:", isa);

      }
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v24);
  }
}

Class sub_100502D24(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  UIMenu v21;
  Swift::String v22;
  Swift::OpaquePointer v24;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v26;
  UIImage_optional v27;

  v3 = objc_opt_self(CHWorkoutDetailViewController);
  v4 = swift_dynamicCastObjCClass(a2, v3);
  if (v4)
  {
    v5 = v4;
    sub_10001E724(0, &qword_100823C90, UIAction_ptr);
    v6 = (void *)objc_opt_self(NSBundle);
    v7 = a2;
    v8 = objc_msgSend(v6, "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v14);

    *(_QWORD *)(swift_allocObject(&unk_1007A5C88, 24, 7) + 16) = v5;
    v16 = v7;
    v17 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v13, 0, 0, v15, 0, 0, 0, 0);
    sub_10001E724(0, (unint64_t *)&unk_10082EEC0, UIMenu_ptr);
    v18 = sub_100047110((uint64_t *)&unk_100828340);
    v19 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100623630;
    *(_QWORD *)(v19 + 32) = v17;
    preferredElementSize = v19;
    specialized Array._endMutation()(v19);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v26.value.super.isa = 0;
    v26.is_nil = 0;
    v21.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v20, (Swift::String_optional)0, v26, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;

  }
  else
  {
    sub_10001E724(0, (unint64_t *)&unk_10082EEC0, UIMenu_ptr);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v27.value.super.isa = 0;
    v27.is_nil = 0;
    return (Class)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)&_swiftEmptyArrayStorage, v24);
  }
  return v21.super.super.isa;
}

void sub_100503074(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  v3 = a1[3];
  v4 = sub_100016804(a1, v3);
  swift_beginAccess(v2, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100503468((uint64_t)v4, v3);

  }
}

uint64_t sub_100503170(void *a1, uint64_t a2)
{
  Class isa;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;

  sub_100503BB8(a2, (uint64_t)&v7);
  if (!v8)
    return sub_10001BE90((uint64_t)&v7, &qword_100831878);
  sub_10002411C(&v7, (uint64_t)v9);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  v4 = v10;
  v5 = sub_100016804(v9, v10);
  sub_100503468((uint64_t)v5, v4);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v9);
}

uint64_t sub_1005032D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v12[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_100503D18(a6);

  }
  return a3(1);
}

void sub_100503468(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  char *v7;

  v5 = objc_msgSend(v2, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = sub_1005034FC(a1, a2);
    objc_msgSend(v6, "pushViewController:animated:", v7, 1);

  }
}

char *sub_1005034FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  id v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char *v79;
  char *result;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  id v92;

  v4 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v4);
  v87 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = (_QWORD *)type metadata accessor for FitnessPlusStackViewModel(0);
  v86 = (_QWORD *)*(v90 - 1);
  __chkstk_darwin(v90);
  v88 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v89 = (uint64_t)&v81 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v81 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - v22;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v81 - v26;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16);
  v29((char *)&v81 - v26, a1, a2, v25);
  v30 = type metadata accessor for MindfulnessSessionViewModel(0);
  if (swift_dynamicCast(&v92, v27, a2, v30, 6))
  {

    ((void (*)(char *, uint64_t, uint64_t))v29)(v23, a1, a2);
    if (swift_dynamicCast(&v92, v23, a2, v30, 6))
    {
      v31 = v92;
      v32 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
      v33 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
      v34 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
      return sub_1002C26F0(v31, v32, v33);
    }
    return (char *)objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
  }
  ((void (*)(char *, uint64_t, uint64_t))v29)(v20, a1, a2);
  v36 = v20;
  v37 = v90;
  if (swift_dynamicCast(v11, v36, a2, v90, 6))
  {
    sub_100149D44((uint64_t)v11);
    ((void (*)(char *, uint64_t, uint64_t))v29)(v17, a1, a2);
    v38 = (uint64_t)v87;
    v39 = swift_dynamicCast(v87, v17, a2, v37, 6);
    v40 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v86[7];
    if (!v39)
    {
      v40(v38, 1, 1, v37);
      sub_10001BE90(v38, (uint64_t *)&unk_100828380);
      return (char *)objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
    }
    v40(v38, 0, 1, v37);
    v41 = v38;
    v42 = v89;
    sub_10027D4A8(v41, v89);
    sub_100149D00(v42, v88);
    v43 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider];
    v44 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager];
    v45 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
    v46 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore];
    v47 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model];
    v48 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory];
    v49 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager];
    v50 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider];
    v51 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator];
    v52 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider];
    v53 = *(void **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_stackFormattingManager];
    v84 = *(id *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
    v85 = v53;
    v87 = *(char **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
    v90 = *(_QWORD **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
    v91 = (char *)objc_allocWithZone((Class)type metadata accessor for StackDetailViewController(0));
    v86 = v43;
    v83 = v44;
    v82 = v45;
    v54 = v46;
    v55 = v47;
    v56 = v48;
    v57 = v49;
    v58 = v50;
    v59 = v51;
    v60 = v52;
    v61 = v84;
    v62 = v85;
    v63 = v87;
    v64 = v90;
    v65 = sub_100234484(v88, v86, v83, v82, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64);
    sub_100149D44(v89);
    return v65;
  }
  ((void (*)(char *, uint64_t, uint64_t))v29)(v14, a1, a2);
  v66 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (swift_dynamicCast(&v92, v14, a2, v66, 6))
  {
    v67 = v92;
    v68 = *(_QWORD **)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore];
    v89 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model];
    v90 = v68;
    v88 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
    v69 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
    v70 = *(_QWORD *)(*(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider]
                    + OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider);
    v71 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory];
    v72 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager];
    v73 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider];
    v74 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator];
    v75 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider];
    v76 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager];
    v77 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
    v78 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
    v79 = (char *)objc_msgSend(v78, "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v67, 0, v90, v89, v88, v69, v70, v71, v72, v73, v74, v75, v76, v77);
    if (v79)
    {
      v65 = v79;

      return v65;
    }
    result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000047, 0x8000000100692090, "FitnessApp/HistoryListViewController.swift", 42, 2, 446, 0);
  }
  else
  {
    result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x8000000100692040, "FitnessApp/HistoryListViewController.swift", 42, 2, 429, 0);
  }
  __break(1u);
  return result;
}

void sub_100503BB8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = IndexPath.row.getter(a1);
  v5 = v2[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 != 512;
  v6 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
    __break(1u);
    goto LABEL_13;
  }
  v7 = IndexPath.section.getter(v4);
  v8 = objc_msgSend(v2, "tableView");
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "numberOfSections");

  if (v7 >= (uint64_t)v10 || v6 < 0)
  {
LABEL_11:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v11 = objc_msgSend(v2, "tableView");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "numberOfRowsInSection:", IndexPath.section.getter(v11));

    if (v6 < (uint64_t)v13)
    {
      v15 = IndexPath.section.getter(v14);
      if ((v15 & 0x8000000000000000) == 0)
      {
        v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
        if (v15 < *(_QWORD *)(v16 + 16))
        {
          v17 = *(_QWORD *)(v16 + 8 * v15 + 32);
          if ((unint64_t)v6 < *(_QWORD *)(v17 + 16))
          {
            sub_1000252E0(v17 + 40 * v6 + 32, a2);
            return;
          }
          goto LABEL_15;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_100503D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  Class isa;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  _QWORD *v44;
  os_log_type_t v45;
  void *v46;
  os_log_type_t v47;
  NSObject *v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  const char *v61;
  os_log_type_t v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  __int128 aBlock;
  void (*v77)(uint64_t, uint64_t, void *);
  void *v78;
  void (*v79)(uint64_t, uint64_t);
  _QWORD *v80;
  id v81;
  _QWORD v82[5];

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  sub_100503BB8(a1, (uint64_t)&aBlock);
  if (!v78)
    return sub_10001BE90((uint64_t)&aBlock, &qword_100831878);
  sub_10002411C(&aBlock, (uint64_t)v82);
  v8 = swift_allocObject(&unk_1007A57D8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = swift_allocObject(&unk_1007A58F0, v10 + v7, v9 | 7);
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1000252E0((uint64_t)v82, (uint64_t)&aBlock);
  v12 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v13 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (!swift_dynamicCast(&v81, &aBlock, v12, v13, 6))
  {
    sub_1000252E0((uint64_t)v82, (uint64_t)&aBlock);
    v17 = type metadata accessor for MindfulnessSessionViewModel(0);
    v18 = swift_dynamicCast(&v81, &aBlock, v12, v17, 6);
    if ((_DWORD)v18)
    {
      v19 = v81;
      v20 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore);
      swift_retain(v11);
      v22 = MindfulnessSessionViewModel.mindfulnessSessions.getter(v21);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      if ((unint64_t)v22 >> 62)
      {
        if (v22 < 0)
          v74 = v22;
        else
          v74 = v22 & 0xFFFFFFFFFFFFFF8;
        v75 = sub_10001E724(0, &qword_100821808, HKObject_ptr);
        v32 = (CHWorkoutDetailHeartRateTableViewCell *)_bridgeCocoaArray<A>(_:)(v74, v75);
      }
      else
      {
        swift_bridgeObjectRetain(v22);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
        sub_10001E724(0, &qword_100821808, HKObject_ptr);
        v32 = v23;
      }
      swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
      sub_10001E724(0, &qword_100821808, HKObject_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);
      v41 = swift_allocObject(&unk_1007A57D8, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16);
      v42 = (_QWORD *)swift_allocObject(&unk_1007A5918, 40, 7);
      v42[2] = v41;
      v42[3] = v19;
      v42[4] = ObjectType;
      v79 = sub_100505194;
      v80 = v42;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v77 = sub_1000064EC;
      v78 = &unk_1007A5930;
      v43 = _Block_copy(&aBlock);
      v44 = v80;
      v15 = v19;
      objc_msgSend(v20, "_deleteObjects:options:completion:", isa, 0, v43, swift_release(v44).n128_f64[0]);

      _Block_release(v43);
      goto LABEL_10;
    }
    v62 = static os_log_type_t.error.getter(v18);
    v63 = (void *)HKLogActivity;
    v47 = v62;
    if (os_log_type_enabled(HKLogActivity, v62))
    {
      v48 = v63;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v50;
      *(_DWORD *)v49 = 136315138;
      v64 = _typeName(_:qualified:)(ObjectType, 0);
      v66 = (CHWorkoutDetailHeartRateTableViewCell *)v65;
      v81 = (id)sub_10003E8EC(v64, v65, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v49 + 4);
      swift_bridgeObjectRelease(v66, v67, v68, v69, v70, v71, v72, v73);
      v61 = "%s unable to resolve mindfulness session from history item";
      goto LABEL_15;
    }
LABEL_16:
    swift_release(v11);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v82);
  }

  sub_1000252E0((uint64_t)v82, (uint64_t)&aBlock);
  v14 = swift_dynamicCast(&v81, &aBlock, v12, v13, 6);
  if (!(_DWORD)v14)
  {
    v45 = static os_log_type_t.error.getter(v14);
    v46 = (void *)HKLogActivity;
    v47 = v45;
    if (os_log_type_enabled(HKLogActivity, v45))
    {
      v48 = v46;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v50;
      *(_DWORD *)v49 = 136315138;
      v51 = _typeName(_:qualified:)(ObjectType, 0);
      v53 = (CHWorkoutDetailHeartRateTableViewCell *)v52;
      v81 = (id)sub_10003E8EC(v51, v52, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v49 + 4);
      swift_bridgeObjectRelease(v53, v54, v55, v56, v57, v58, v59, v60);
      v61 = "%s unable to resolve workout from history item";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v48, v47, v61, v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
      swift_release(v11);

      return _s10FitnessApp24HistoryViewActionContextVwxx_0(v82);
    }
    goto LABEL_16;
  }
  v15 = v81;
  swift_retain(v11);
  sub_100504658(v15, (uint64_t)sub_1005050C0, v11);
LABEL_10:

  swift_release_n(v11, 2);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v82);
}

void sub_1005042A4(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  char *v7;
  _BOOL8 v8;
  BOOL v9;
  char *v10;
  void *v11;
  char *v12;
  char *v13;
  char v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "tableView");
    if (v4)
    {
      v5 = v4;
      v6 = (char *)objc_msgSend(v4, "numberOfRowsInSection:", IndexPath.section.getter());

      v7 = &v3[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
      v8 = v3[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 != 512;
      v9 = __OFSUB__(v6, v8);
      v10 = &v6[-v8];
      if (!v9)
      {
        if (v10 != (char *)1)
        {
LABEL_7:

          return;
        }
        *(_QWORD *)v7 = 0;
        *((_WORD *)v7 + 4) = 512;
        v11 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
        if (v11)
        {
          v12 = v11;

          v13 = &v12[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType];
          *(_QWORD *)v13 = 0;
          *((_WORD *)v13 + 4) = 512;
          v3 = v12;
          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        return;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1005043B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  char *Strong;
  void *v10;
  id v11;
  id v12;
  os_log_type_t v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v8 = a3 + 16;
  swift_beginAccess(a3 + 16, v33, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = Strong;
    if (a2)
    {
      v11 = objc_retain(*(id *)(*(_QWORD *)&Strong[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext]
                              + OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider));
      v12 = a4;
      sub_1005051A0(v12, (uint64_t)v11);

      return;
    }

  }
  v13 = static os_log_type_t.error.getter(Strong);
  v14 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v13))
  {
    swift_errorRetain(a2);
    swift_errorRetain(a2);
    v15 = v14;
    v16 = swift_slowAlloc(22, -1);
    v17 = (uint64_t *)swift_slowAlloc(8, -1);
    v18 = swift_slowAlloc(32, -1);
    v32 = v18;
    *(_DWORD *)v16 = 136315394;
    v19 = _typeName(_:qualified:)(a5, 0);
    v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
    v31 = sub_10003E8EC(v19, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v16 + 4);
    swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
    *(_WORD *)(v16 + 12) = 2112;
    if (a2)
    {
      swift_errorRetain(a2);
      v29 = _swift_stdlib_bridgeErrorToNSError(a2);
      v31 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v16 + 14);
    }
    else
    {
      v31 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v16 + 14);
      v29 = 0;
    }
    *v17 = v29;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v15, v13, "%s failed to delete mindfulness session with error %@", (uint8_t *)v16, 0x16u);
    v30 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v17, 1, v30);
    swift_slowDealloc(v17, -1, -1);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
}

void sub_100504658(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  NSString v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  NSString v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSString v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  NSString v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  NSString v62;
  id v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  uint64_t v66;
  _QWORD *v67;
  id v68;
  NSString v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  NSString v80;
  id v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  NSString v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v97;
  void **aBlock;
  uint64_t v99;
  void (*v100)(uint64_t, void *);
  void *v101;
  void *v102;
  _QWORD *v103;

  v4 = objc_msgSend(a1, "_activityMoveMode");
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v94 = v4;
  v7 = String._bridgeToObjectiveC()();
  if (v4 == (id)2)
  {
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, v8);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

    v12 = objc_msgSend(v5, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    v18 = objc_msgSend(v5, "mainBundle");
    v19 = String._bridgeToObjectiveC()();
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, v20);

  }
  else
  {
    v22 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v11 = v23;

    v24 = objc_msgSend(v5, "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v17 = v27;

    v18 = objc_msgSend(v5, "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v20, 0, 0);
  }

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v29 = v28;

  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v31, v32, v33, v34, v35, v36, v37);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17, v39, v40, v41, v42, v43, v44, v45);
  v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v30, v38, 1);

  v47 = swift_allocObject(&unk_1007A57D8, 24, 7);
  v48 = v97;
  swift_unknownObjectWeakInit(v47 + 16);
  v49 = (_QWORD *)swift_allocObject(&unk_1007A5800, 48, 7);
  v49[2] = v47;
  v49[3] = a1;
  v49[4] = a2;
  v49[5] = a3;
  swift_retain(v47);
  v93 = a1;
  sub_10003AFE0(a2, a3);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29, v51, v52, v53, v54, v55, v56, v57);
  v102 = sub_100505094;
  v103 = v49;
  aBlock = _NSConcreteStackBlock;
  v99 = 1107296256;
  v100 = sub_1000277E8;
  v101 = &unk_1007A5818;
  v58 = _Block_copy(&aBlock);
  swift_release(v103);
  v59 = (void *)objc_opt_self(UIAlertAction);
  v60 = objc_msgSend(v59, "actionWithTitle:style:handler:", v50, 0, v58);
  _Block_release(v58);
  swift_release(v47);

  objc_msgSend(v46, "addAction:", v60);
  if (v94 != (id)2)
  {
    v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v65 = v64;

    v66 = swift_allocObject(&unk_1007A57D8, 24, 7);
    swift_unknownObjectWeakInit(v66 + 16);
    v67 = (_QWORD *)swift_allocObject(&unk_1007A5850, 48, 7);
    v67[2] = v66;
    v67[3] = v93;
    v67[4] = a2;
    v67[5] = a3;
    v68 = v93;
    v48 = v97;
    sub_10003AFE0(a2, a3);
    swift_retain(v66);
    v69 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v65, v70, v71, v72, v73, v74, v75, v76);
    v102 = sub_1005050A4;
    v103 = v67;
    aBlock = _NSConcreteStackBlock;
    v99 = 1107296256;
    v100 = sub_1000277E8;
    v101 = &unk_1007A5868;
    v77 = _Block_copy(&aBlock);
    v78 = objc_msgSend(v59, "actionWithTitle:style:handler:", v69, 0, v77, swift_release(v103).n128_f64[0]);
    _Block_release(v77);
    swift_release(v66);

    objc_msgSend(v46, "addAction:", v78);
  }
  v79 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v80 = String._bridgeToObjectiveC()();
  v81 = objc_msgSend(v79, "localizedStringForKey:value:table:", v80, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
  v83 = v82;

  v84 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v83, v85, v86, v87, v88, v89, v90, v91);
  v92 = objc_msgSend(v59, "actionWithTitle:style:handler:", v84, 0, 0);

  objc_msgSend(v46, "addAction:", v92);
  objc_msgSend(v48, "presentViewController:animated:completion:", v46, 1, 0);

}

double sub_100504E34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  void *v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);

    v13 = swift_allocObject(&unk_1007A58C8, 32, 7);
    *(_QWORD *)(v13 + 16) = a4;
    *(_QWORD *)(v13 + 24) = a5;
    sub_10003AFE0(a4, a5);
    sub_1003C2FD8(a3, 1, (uint64_t)sub_1005050B4, v13);

    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_100504F00(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  _BYTE v13[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);

    v12 = swift_allocObject(&unk_1007A58A0, 32, 7);
    *(_QWORD *)(v12 + 16) = a4;
    *(_QWORD *)(v12 + 24) = a5;
    sub_10003AFE0(a4, a5);
    sub_1003C2FD8(a3, 0, (uint64_t)sub_1005050B4, v12);
    swift_release(v12);

  }
}

uint64_t type metadata accessor for HistoryListViewController()
{
  return objc_opt_self(_TtC10FitnessApp25HistoryListViewController);
}

uint64_t sub_10050506C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100505094(uint64_t a1)
{
  uint64_t v1;

  return sub_100504E34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1005050A4(uint64_t a1)
{
  uint64_t v1;

  sub_100504F00(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1005050C0()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_1005042A4(*(_QWORD *)(v0 + 16));
}

id sub_1005050F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(CHWorkoutDetailHeartRateTableViewCell *, __n128);
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  __n128 v7;
  void *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v4 = *(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10001E724(0, &qword_10082E068, UIMenuElement_ptr);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6, v9, v10, v11, v12, v13, v14, v15);
  return v8;
}

uint64_t sub_100505168()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100505194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005043B0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1005051A0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(uint64_t);
  void (*v33)(char *, uint64_t);
  void (*v34)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __int128 v40;
  __int128 v41;
  _QWORD v42[2];
  _QWORD v43[5];

  v4 = sub_100047110((uint64_t *)&unk_100836170);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v40 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v40 - v12;
  v43[3] = type metadata accessor for MindfulnessSessionViewModel(0);
  v43[4] = &off_10078FAD0;
  v43[0] = a1;
  v14 = MindfulnessSessionViewModel.metadata.getter(a1);
  if (!v14)
  {
    v40 = 0u;
    v41 = 0u;
    goto LABEL_9;
  }
  v15 = v14;
  v16 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  v18 = v17;
  if (!*(_QWORD *)(v15 + 16) || (v19 = sub_100438F74(v16, v17), (v20 & 1) == 0))
  {
    v40 = 0u;
    v41 = 0u;
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v15);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)(v15 + 56) + 32 * v19, (uint64_t)&v40);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v15);
  if (!*((_QWORD *)&v41 + 1))
  {
LABEL_9:
    sub_10001BE90((uint64_t)&v40, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
  }
  if (swift_dynamicCast(v42, &v40, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
    v21 = v42[0];
    v22 = v42[1];
    v23 = (_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient);
    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient + 24);
    v25 = v23[4];
    sub_100016804(v23, v24);
    dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)(v21, v22, v24, v25);
    swift_bridgeObjectRelease(v22);
    sub_1000252E0((uint64_t)v43, (uint64_t)&v40);
    v26 = swift_allocObject(&unk_1007A5968, 56, 7);
    sub_10002411C(&v40, v26 + 16);
    v27 = swift_allocObject(&unk_1007A5990, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_1005054C0;
    *(_QWORD *)(v27 + 24) = v26;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    v28 = *(unsigned __int8 *)(v5 + 80);
    v29 = (v28 + 16) & ~v28;
    v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = swift_allocObject(&unk_1007A59B8, v30 + 16, v28 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v31 + v29, v8, v4);
    v32 = (uint64_t (**)(uint64_t))(v31 + v30);
    *v32 = sub_10010FFFC;
    v32[1] = (uint64_t (*)(uint64_t))v27;
    Promise.init(asyncOperation:)(sub_10039F50C, v31, (char *)&type metadata for () + 8);
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33(v11, v4);
    v34 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v4);
    v36 = v35;
    v37 = swift_allocObject(&unk_1007A59E0, 32, 7);
    *(_QWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = 0;
    v34(sub_100110028, v37);
    swift_release(v36);
    v38 = swift_release(v37);
    ((void (*)(char *, uint64_t, __n128))v33)(v13, v4, v38);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
}

double sub_1005054C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100397DB4(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1005054E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100505528(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(uint64_t (*)(), uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __int128 v41;
  __int128 v42;
  _QWORD v43[2];
  _QWORD v44[5];

  v4 = sub_100047110((uint64_t *)&unk_100836170);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v41 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v41 - v12;
  v44[3] = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v44[4] = &off_10078FAE8;
  v44[0] = a1;
  v14 = objc_msgSend(a1, "metadata");
  if (!v14)
  {
    v41 = 0u;
    v42 = 0u;
    goto LABEL_9;
  }
  v15 = v14;
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v17 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  v19 = v18;
  if (!*(_QWORD *)(v16 + 16) || (v20 = sub_100438F74(v17, v18), (v21 & 1) == 0))
  {
    v41 = 0u;
    v42 = 0u;
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v16);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v41);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v16);
  if (!*((_QWORD *)&v42 + 1))
  {
LABEL_9:
    sub_10001BE90((uint64_t)&v41, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
  }
  if (swift_dynamicCast(v43, &v41, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
    v22 = v43[0];
    v23 = v43[1];
    v24 = (_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient);
    v25 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient + 24);
    v26 = v24[4];
    sub_100016804(v24, v25);
    dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)(v22, v23, v25, v26);
    swift_bridgeObjectRelease(v23);
    sub_1000252E0((uint64_t)v44, (uint64_t)&v41);
    v27 = swift_allocObject(&unk_1007A5CD8, 56, 7);
    sub_10002411C(&v41, v27 + 16);
    v28 = swift_allocObject(&unk_1007A5D00, 32, 7);
    *(_QWORD *)(v28 + 16) = sub_100506628;
    *(_QWORD *)(v28 + 24) = v27;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    v29 = *(unsigned __int8 *)(v5 + 80);
    v30 = (v29 + 16) & ~v29;
    v31 = (v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_1007A5D28, v31 + 16, v29 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v32 + v30, v8, v4);
    v33 = (_QWORD *)(v32 + v31);
    *v33 = sub_1001104C4;
    v33[1] = v28;
    Promise.init(asyncOperation:)(sub_10039F50C, v32, (char *)&type metadata for () + 8);
    v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v11, v4);
    v35 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v4);
    v37 = v36;
    v38 = swift_allocObject(&unk_1007A5D50, 32, 7);
    *(_QWORD *)(v38 + 16) = 0;
    *(_QWORD *)(v38 + 24) = 0;
    v35(sub_1001104CC, v38);
    swift_release(v37);
    v39 = swift_release(v38);
    ((void (*)(char *, uint64_t, __n128))v34)(v13, v4, v39);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
}

uint64_t sub_100505884()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005058A8()
{
  uint64_t v0;

  sub_1005014F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005058B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 34, 7);
}

void sub_1005058D4()
{
  uint64_t v0;

  sub_100500F20(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int16 *)(v0 + 32));
}

void sub_1005058E0(uint64_t a1)
{
  uint64_t v1;

  sub_100500C18(a1, v1);
}

void sub_1005058E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  const char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  unint64_t v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  _BYTE v39[40];

  v1 = v0;
  v2 = type metadata accessor for DateComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = IndexPath.section.getter(v6);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v8 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
  if (v7 >= *(_QWORD *)(v9 + 16))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!*(_QWORD *)(*(_QWORD *)(v9 + 8 * v7 + 32) + 16))
    return;
  if (IndexPath.row.getter(v7))
    return;
  v10 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9);
  switch(v10)
  {
    case 2:
      return;
    case 3:
      v11 = (void *)objc_opt_self(CHListSummaryTableViewCell);
      v12 = "heightForAllWorkoutSummary";
      goto LABEL_12;
    case 5:
      v11 = (void *)objc_opt_self(CHListSummaryTableViewCell);
      v12 = "heightForMindfulnessSessions";
LABEL_12:
      objc_msgSend(v11, v12);
      return;
  }
  v13 = IndexPath.section.getter(0);
  if ((v13 & 0x8000000000000000) != 0)
    goto LABEL_24;
  v14 = *(_QWORD *)(v0 + v8);
  if (v13 >= *(_QWORD *)(v14 + 16))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v15 = *(_QWORD *)(v14 + 8 * v13 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    sub_1000252E0(v15 + 32, (uint64_t)v39);
    v16 = sub_100047110((uint64_t *)&unk_10082E5B0);
    v17 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    if ((swift_dynamicCast(&v38, v39, v16, v17, 6) & 1) != 0)
    {
      v18 = v38;
      sub_1004FFABC(v5);

      v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1
                                                      + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics);
      if (*(_QWORD *)v19->cellPadding)
      {
        swift_bridgeObjectRetain(v19);
        v20 = sub_100439544((uint64_t)v5);
        if ((v21 & 1) != 0)
        {
          v28 = *(id *)(*(_QWORD *)v19[1].cellInset + 8 * v20);
          swift_bridgeObjectRelease(v19, v29, v30, v31, v32, v33, v34, v35);
          (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
          v36 = (void *)objc_opt_self(CHListSummaryTableViewCell);
          v37 = objc_msgSend((id)objc_opt_self(CHWorkoutTypeKey), "initForWorkout:", v18);
          objc_msgSend(v36, "heightForWorkoutActivityTypeKey:statistics:", v37, v28);

          return;
        }
        swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
      }
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);

    }
  }
}

id sub_100505B9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  Class isa;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  __int128 aBlock;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  sub_100503BB8(a1, (uint64_t)&aBlock);
  if (v18)
  {
    sub_10002411C(&aBlock, (uint64_t)v21);
    v1 = v22;
    v2 = sub_100016804(v21, v22);
    v3 = sub_1005034FC((uint64_t)v2, v1);
    v4 = swift_allocObject(&unk_1007A5BE8, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = v3;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v7 = swift_allocObject(&unk_1007A5C10, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;
    v8 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v19 = sub_10012F3AC;
    v20 = v4;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v17 = sub_1004B91FC;
    v18 = &unk_1007A5C28;
    v9 = _Block_copy(&aBlock);
    v10 = v20;
    swift_retain_n(v4, 2);
    v11 = v5;
    swift_release(v10);
    v19 = sub_100506580;
    v20 = v7;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v17 = sub_1005050F0;
    v18 = &unk_1007A5C50;
    v12 = _Block_copy(&aBlock);
    v13 = v20;
    swift_retain(v7);
    v14 = objc_msgSend(v8, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v9, v12, swift_release(v13).n128_f64[0]);

    swift_release(v4);
    swift_release(v7);
    _Block_release(v12);
    _Block_release(v9);

    swift_release(v4);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v21);
  }
  else
  {
    sub_10001BE90((uint64_t)&aBlock, &qword_100831878);
    return 0;
  }
  return v14;
}

uint64_t sub_100505D9C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t *v20;
  __int128 *p_aBlock;
  __int128 aBlock;
  uint64_t (*v23)(uint64_t);
  void *v24;
  void (*v25)();
  uint64_t v26;
  __int128 v27[2];
  _QWORD v28[5];

  v5 = sub_100047110(&qword_100832500);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&aBlock = objc_msgSend(a1, "identifier", v10);
  v13 = sub_100047110(&qword_100821818);
  v14 = swift_dynamicCast(v7, &aBlock, v13, v8, 6);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (!v14)
  {
    v15(v7, 1, 1, v8);
    goto LABEL_6;
  }
  v15(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    v20 = &qword_100832500;
    p_aBlock = (__int128 *)v7;
    return sub_10001BE90((uint64_t)p_aBlock, v20);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  sub_100503BB8((uint64_t)v12, (uint64_t)&aBlock);
  if (v24)
  {
    sub_10002411C(&aBlock, (uint64_t)v28);
    v16 = swift_allocObject(&unk_1007A57D8, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v2);
    sub_1000252E0((uint64_t)v28, (uint64_t)v27);
    v17 = swift_allocObject(&unk_1007A5B98, 64, 7);
    sub_10002411C(v27, v17 + 16);
    *(_QWORD *)(v17 + 56) = v16;
    v25 = sub_100506550;
    v26 = v17;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v23 = sub_10002D0F8;
    v24 = &unk_1007A5BB0;
    v18 = _Block_copy(&aBlock);
    objc_msgSend(a2, "addCompletion:", v18, swift_release(v26).n128_f64[0]);
    _Block_release(v18);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v28);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v20 = &qword_100831878;
  p_aBlock = &aBlock;
  return sub_10001BE90((uint64_t)p_aBlock, v20);
}

id sub_100506018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  const char *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  id v38;
  Class isa;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  __int128 aBlock;
  void (*v51)(uint64_t, void *, void *, void *);
  void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v54;
  id v55;
  _QWORD v56[5];

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_100503BB8(a1, (uint64_t)&aBlock);
  if (v52)
  {
    v49 = a1;
    sub_10002411C(&aBlock, (uint64_t)v56);
    sub_1000252E0((uint64_t)v56, (uint64_t)&aBlock);
    v5 = sub_100047110((uint64_t *)&unk_10082E5B0);
    v6 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    if (swift_dynamicCast(&v55, &aBlock, v5, v6, 6))
    {

      v7 = (CHWorkoutDetailHeartRateTableViewCell *)0xEE0054554F4B524FLL;
    }
    else
    {
      v7 = (CHWorkoutDetailHeartRateTableViewCell *)0x800000010068A2D0;
    }
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
    swift_bridgeObjectRelease(v7, v12, v14, v15, v16, v17, v18, v19);

    v20 = swift_allocObject(&unk_1007A57D8, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v49, v2);
    v21 = *(unsigned __int8 *)(v3 + 80);
    v22 = (v21 + 24) & ~v21;
    v23 = swift_allocObject(&unk_1007A5B20, v22 + v4, v21 | 7);
    *(_QWORD *)(v23 + 16) = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v23 + v22, (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    swift_retain(v20);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13, v25, v26, v27, v28, v29, v30, v31);
    v53 = sub_100506498;
    v54 = v23;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v51 = sub_1004FFA0C;
    v52 = &unk_1007A5B38;
    v32 = _Block_copy(&aBlock);
    v33 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v24, v32);

    _Block_release(v32);
    v34 = v54;
    swift_release(v20);
    swift_release(v34);
    v35 = sub_100047110((uint64_t *)&unk_100828340);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100623630;
    *(_QWORD *)(v36 + 32) = v33;
    *(_QWORD *)&aBlock = v36;
    specialized Array._endMutation()(v36);
    v37 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock;
    sub_10001E724(0, &qword_100821810, UIContextualAction_ptr);
    v38 = v33;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v37, v40, v41, v42, v43, v44, v45, v46);
    v8 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

    _s10FitnessApp24HistoryViewActionContextVwxx_0(v56);
  }
  else
  {
    sub_10001BE90((uint64_t)&aBlock, &qword_100831878);
    return 0;
  }
  return v8;
}

void sub_1005063BC()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataSource] = 0;
  v1 = &v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  *(_QWORD *)v1 = 0;
  *((_WORD *)v1 + 4) = 512;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers] = _swiftEmptyArrayStorage;
  v2 = &v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
  *(_QWORD *)v2 = 0;
  *((_WORD *)v2 + 4) = 1792;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/HistoryListViewController.swift", 42, 2, 553, 0);
  __break(1u);
}

uint64_t sub_100506498(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_1005032D8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_100506500()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100506524()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100506550()
{
  uint64_t v0;

  sub_100503074((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10050655C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

Class sub_100506580(uint64_t a1)
{
  uint64_t v1;

  return sub_100502D24(a1, *(void **)(v1 + 16));
}

id sub_100506588()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "shareTapped:", 0);
}

void sub_10050659C(void *a1, __int16 a2)
{
  uint64_t v2;

  sub_10050065C(a1, a2, v2);
}

void sub_1005065A4(uint64_t a1)
{
  uint64_t v1;

  sub_100500758(a1, v1);
}

uint64_t sub_1005065AC()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005065D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100506628(uint64_t a1)
{
  return sub_1005054C0(a1);
}

_QWORD *sub_100506664(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, a2, v6);
    v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    *((_BYTE *)v4 + v7[5]) = *((_BYTE *)a2 + v7[5]);
    v8 = v7[6];
    v9 = (_QWORD *)((char *)v4 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v7[7];
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v13;
    v14 = v7[8];
    v15 = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *((_BYTE *)v4 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    v16 = v7[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain(v11);
    v21 = v13;
    v22 = swift_bridgeObjectRetain(v15);
    v20(v17, v18, v19, v22);
    ((void (*)(char *, char *, uint64_t))v20)((char *)v4 + v7[11], (char *)a2 + v7[11], v19);
    v23 = v7[12];
    v24 = *(_QWORD *)((char *)a2 + v23);
    *(_QWORD *)((char *)v4 + v23) = v24;
    v25 = v7[13];
    v26 = *(_QWORD *)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v26;
    v27 = v7[14];
    v28 = *(_QWORD *)((char *)a2 + v27);
    *(_QWORD *)((char *)v4 + v27) = v28;
    *(_QWORD *)((char *)v4 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
    *(_QWORD *)((char *)v4 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
    *(_OWORD *)((char *)v4 + v7[17]) = *(_OWORD *)((char *)a2 + v7[17]);
    *(_QWORD *)((char *)v4 + v7[18]) = *(_QWORD *)((char *)a2 + v7[18]);
    v29 = v7[19];
    v30 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)v4 + v29) = v30;
    v31 = v7[20];
    v32 = *(void **)((char *)a2 + v31);
    *(_QWORD *)((char *)v4 + v31) = v32;
    v33 = *(int *)(a3 + 20);
    v34 = *(_QWORD *)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = v34;
    swift_bridgeObjectRetain(v24);
    swift_retain(v26);
    swift_retain(v28);
    v35 = v30;
    v36 = v32;
  }
  swift_retain(v34);
  return v4;
}

double sub_100506844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[6] + 8), v6, v7, v8, v9, v10, v11, v12);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[8]), v13, v14, v15, v16, v17, v18, v19);
  v20 = a1 + v5[10];
  v21 = type metadata accessor for Date(0);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
  v22(v20, v21);
  v22(a1 + v5[11], v21);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[12]), v23, v24, v25, v26, v27, v28, v29);
  swift_release(*(_QWORD *)(a1 + v5[13]));
  swift_release(*(_QWORD *)(a1 + v5[14]));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_100506940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;

  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v6[5]) = *(_BYTE *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v6[7];
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = v6[8];
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v15 = v6[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain(v10);
  v20 = v12;
  v21 = swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18, v21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + v6[11], a2 + v6[11], v18);
  v22 = v6[12];
  v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = v6[13];
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v6[14];
  v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
  *(_QWORD *)(a1 + v6[16]) = *(_QWORD *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(_QWORD *)(a1 + v6[18]) = *(_QWORD *)(a2 + v6[18]);
  v28 = v6[19];
  v29 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v30 = v6[20];
  v31 = *(void **)(a2 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  v32 = *(int *)(a3 + 20);
  v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  swift_bridgeObjectRetain(v23);
  swift_retain(v25);
  swift_retain(v27);
  v34 = v29;
  v35 = v31;
  swift_retain(v33);
  return a1;
}

uint64_t sub_100506AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = v7[7];
  v21 = *(void **)(a2 + v20);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  v23 = v21;

  v24 = v7[8];
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v34 = v7[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Date(0);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24);
  v38(v35, v36, v37);
  v38(a1 + v7[11], a2 + v7[11], v37);
  v39 = v7[12];
  v40 = *(_QWORD *)(a2 + v39);
  v41 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v39);
  *(_QWORD *)(a1 + v39) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = v7[13];
  v50 = *(_QWORD *)(a1 + v49);
  v51 = *(_QWORD *)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v51;
  swift_retain(v51);
  swift_release(v50);
  v52 = v7[14];
  v53 = *(_QWORD *)(a2 + v52);
  v54 = *(_QWORD *)(a1 + v52);
  *(_QWORD *)(a1 + v52) = v53;
  swift_retain(v53);
  swift_release(v54);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v55 = v7[17];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v58 = v7[19];
  v59 = *(void **)(a2 + v58);
  v60 = *(void **)(a1 + v58);
  *(_QWORD *)(a1 + v58) = v59;
  v61 = v59;

  v62 = v7[20];
  v63 = *(void **)(a2 + v62);
  v64 = *(void **)(a1 + v62);
  *(_QWORD *)(a1 + v62) = v63;
  v65 = v63;

  v66 = *(int *)(a3 + 20);
  v67 = *(_QWORD *)(a2 + v66);
  v68 = *(_QWORD *)(a1 + v66);
  *(_QWORD *)(a1 + v66) = v67;
  swift_retain(v67);
  swift_release(v68);
  return a1;
}

uint64_t sub_100506D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v8 = v7[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_QWORD *)(a1 + v7[13]) = *(_QWORD *)(a2 + v7[13]);
  *(_QWORD *)(a1 + v7[14]) = *(_QWORD *)(a2 + v7[14]);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(a2 + v7[19]);
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100506E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = v7[7];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = v7[8];
  v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v32 = v7[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for Date(0);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v36(a1 + v7[11], a2 + v7[11], v35);
  v37 = v7[12];
  v38 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
  v46 = v7[13];
  v47 = *(_QWORD *)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  swift_release(v47);
  v48 = v7[14];
  v49 = *(_QWORD *)(a1 + v48);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_release(v49);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v50 = v7[19];
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  v52 = v7[20];
  v53 = *(void **)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);

  v54 = *(int *)(a3 + 20);
  v55 = *(_QWORD *)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  swift_release(v55);
  return a1;
}

uint64_t sub_100507018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100507024);
}

uint64_t sub_100507024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WorkoutChartViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005070A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005070AC);
}

uint64_t sub_1005070AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WorkoutChartViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutDetailChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_100838628;
  if (!qword_100838628)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailChartView);
  return result;
}

uint64_t sub_100507160(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for WorkoutChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1005071D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA388, 1);
}

uint64_t sub_1005071E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = static Color.gray.getter();
  v1 = Color.opacity(_:)(0.5);
  result = swift_release(v0);
  qword_10086AD70 = v1;
  return result;
}

double sub_100507220@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  int v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = sub_100047110(&qword_100838678);
  __chkstk_darwin(v4);
  v62 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - v7;
  v9 = *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 24);
  v61 = a1;
  v10 = (uint64_t *)(a1 + v9);
  v11 = *v10;
  v12 = v10[1];
  v63 = *v10;
  v64 = v12;
  v13 = sub_100038CA0();
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  if ((StringProtocol.isEmptyOrWhiteSpace.getter(&type metadata for String, v13) & 1) == 0)
  {
    v63 = v11;
    v64 = v12;
    swift_bridgeObjectRetain(v12);
    v18 = Text.init<A>(_:)(&v63, &type metadata for String, v13);
    v20 = v19;
    v22 = v21;
    v24 = v23 & 1;
    v26 = static Color.white.getter(v25);
    v27 = Text.foregroundColor(_:)(v26, v18, v20, v24, v22);
    v58 = v27;
    v29 = v28;
    v31 = v30;
    v60 = v32;
    swift_release(v26);
    v59 = v31 & 1;
    sub_1000E4458(v18, v20, v24);
    swift_bridgeObjectRelease(v22, v33, v34, v35, v36, v37, v38, v39);
    v40 = static Font.headline.getter();
    v41 = v27;
    v42 = v60;
    v14 = Text.font(_:)(v40, v41, v29, v31 & 1, v60, v43);
    v15 = v44;
    LOBYTE(v20) = v45;
    v17 = v46;
    swift_release(v40);
    v16 = v20 & 1;
    sub_1000E4458(v58, v29, v59);
    swift_bridgeObjectRelease(v42, v47, v48, v49, v50, v51, v52, v53);
  }
  sub_100507478((uint64_t)v8);
  v54 = v62;
  sub_100021CC0((uint64_t)v8, v62, &qword_100838678);
  *a2 = v14;
  a2[1] = v15;
  a2[2] = v16;
  a2[3] = v17;
  v55 = sub_100047110(&qword_100838680);
  sub_100021CC0(v54, (uint64_t)a2 + *(int *)(v55 + 48), &qword_100838678);
  sub_100182758(v14, v15, v16, v17);
  sub_10001BE90((uint64_t)v8, &qword_100838678);
  sub_10001BE90(v54, &qword_100838678);
  return sub_100182728(v14, v15, v16, v17);
}

uint64_t sub_100507478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;
  char v66[16];
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;

  v2 = v1;
  v63 = a1;
  v3 = type metadata accessor for WorkoutChart(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100047110(&qword_100838688);
  v58 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100838690);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  __chkstk_darwin(v8);
  v55 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100047110(&qword_100838698);
  __chkstk_darwin(v57);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100047110(&qword_1008386A0);
  __chkstk_darwin(v62);
  v59 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(v2, (uint64_t)v5, type metadata accessor for WorkoutChartViewModel);
  v13 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WorkoutDetailChartView(0) + 20));
  v14 = &v5[*(int *)(v3 + 20)];
  v15 = type metadata accessor for WorkoutChartProperties(0);
  v16 = sub_1000083D8(&qword_10083B9B0, type metadata accessor for WorkoutChartProperties, (uint64_t)&unk_1006314F0);
  swift_retain(v13);
  *(_QWORD *)v14 = ObservedObject.init(wrappedValue:)(v17, v15, v16);
  *((_QWORD *)v14 + 1) = v18;
  v67 = v2;
  v19 = sub_100047110(&qword_1008386A8);
  v20 = sub_1000083D8(&qword_100831720, type metadata accessor for WorkoutChart, (uint64_t)&unk_10063723C);
  v21 = sub_10050A04C();
  View.chartXAxis<A>(content:)(sub_10050A02C, v66, v3, v19, v20, v21);
  sub_100011F54((uint64_t)v5, type metadata accessor for WorkoutChart);
  v65 = v2;
  v22 = sub_100047110(&qword_1008386D8);
  *(_QWORD *)&v68 = v3;
  *((_QWORD *)&v68 + 1) = v19;
  *(_QWORD *)&v69 = v20;
  *((_QWORD *)&v69 + 1) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  v24 = sub_100028384(&qword_1008386E0, &qword_1008386D8, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  v25 = v55;
  v26 = v56;
  View.chartYAxis<A>(content:)(sub_10050A0F0, v64, v56, v22, OpaqueTypeConformance2, v24);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v7, v26);
  v28 = static Alignment.topTrailing.getter(v27);
  v30 = v29;
  sub_100507F38(v2, (uint64_t)&v68);
  v31 = v68;
  LOBYTE(v2) = v69;
  v32 = *((_QWORD *)&v69 + 1);
  v33 = v70;
  v35 = v60;
  v34 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v11, v25, v61);
  v36 = &v11[*(int *)(v57 + 36)];
  *(_OWORD *)v36 = v31;
  v36[16] = v2;
  *((_QWORD *)v36 + 3) = v32;
  *((_OWORD *)v36 + 2) = v33;
  *((_QWORD *)v36 + 6) = v28;
  *((_QWORD *)v36 + 7) = v30;
  v37 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v25, v34);
  LOBYTE(v28) = static Edge.Set.top.getter(v37);
  v38 = EdgeInsets.init(_all:)(20.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = v59;
  sub_100021CC0((uint64_t)v11, v59, &qword_100838698);
  v46 = v45 + *(int *)(v62 + 36);
  *(_BYTE *)v46 = v28;
  *(double *)(v46 + 8) = v38;
  *(_QWORD *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v42;
  *(_QWORD *)(v46 + 32) = v44;
  *(_BYTE *)(v46 + 40) = 0;
  v47 = sub_10001BE90((uint64_t)v11, &qword_100838698);
  v48 = static Alignment.center.getter(v47);
  _FrameLayout.init(width:height:alignment:)(&v68, 0, 1, 0x405B800000000000, 0, v48, v49);
  v50 = v63;
  sub_100021CC0(v45, v63, &qword_1008386A0);
  v51 = (_OWORD *)(v50 + *(int *)(sub_100047110(&qword_100838678) + 36));
  v52 = v69;
  *v51 = v68;
  v51[1] = v52;
  v51[2] = v70;
  return sub_10001BE90(v45, &qword_1008386A0);
}

uint64_t sub_1005078EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  unint64_t v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;

  v2 = v1;
  v65 = a1;
  v3 = sub_100047110(&qword_1008386D0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3);
  v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v5);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WorkoutDetailChartView(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008386C0);
  v59 = *(_QWORD *)(v14 - 8);
  v60 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + *(int *)(type metadata accessor for WorkoutChartViewModel(0)
                                                                       + 28)), "string"));
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v66 = v18;
  v67 = v20;
  v21 = sub_100038CA0();
  LOBYTE(v18) = StringProtocol.isEmptyOrWhiteSpace.getter(&type metadata for String, v21);
  swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
  v29 = sub_1002697E8();
  sub_10004F8C8(v2, (uint64_t)v13, type metadata accessor for WorkoutDetailChartView);
  v30 = *(unsigned __int8 *)(v11 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = v31 + v12;
  v33 = v30 | 7;
  if ((v18 & 1) != 0)
  {
    v34 = swift_allocObject(&unk_1007A5DA0, v32, v33);
    v35 = sub_100047C88((uint64_t)v13, v34 + v31, type metadata accessor for WorkoutDetailChartView);
    v36 = static AxisMarkPreset.automatic.getter(v35);
    v37 = v64;
    static AxisMarkPosition.automatic.getter(v36);
    v38 = sub_100047110(&qword_100838728);
    v39 = type metadata accessor for Date(0);
    v40 = sub_10050A358();
    AxisMarks.init<A>(preset:position:values:content:)(v9, v37, v29, sub_10050A2F0, v34, v38, v39, v40, &protocol witness table for Date);
    v42 = v59;
    v41 = v60;
    v43 = v65;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v65, v16, v60);
    v44 = sub_100047110(&qword_100838720);
    swift_storeEnumTagMultiPayload(v43, v44, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v16, v41);
  }
  else
  {
    v46 = swift_allocObject(&unk_1007A5D78, v32, v33);
    v47 = sub_100047C88((uint64_t)v13, v46 + v31, type metadata accessor for WorkoutDetailChartView);
    v48 = static AxisMarkPreset.automatic.getter(v47);
    v49 = v64;
    static AxisMarkPosition.automatic.getter(v48);
    v50 = sub_100047110(&qword_1008386F0);
    v51 = type metadata accessor for Date(0);
    v52 = sub_10050A108();
    v53 = v61;
    AxisMarks.init<A>(preset:position:values:content:)(v9, v49, v29, sub_10050A0FC, v46, v50, v51, v52, &protocol witness table for Date);
    v55 = v62;
    v54 = v63;
    v56 = v65;
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v65, v53, v63);
    v57 = sub_100047110(&qword_100838720);
    swift_storeEnumTagMultiPayload(v56, v57, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v53, v54);
  }
}

uint64_t sub_100507CA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  _QWORD v15[4];

  v2 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100821568);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100622F90;
  v10 = type metadata accessor for WorkoutChartViewModel(0);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(a1 + *(int *)(v10 + 68));
  v11 = static AxisMarkPreset.automatic.getter(v10);
  static AxisMarkPosition.automatic.getter(v11);
  v12 = sub_100047110(&qword_1008386E8);
  v15[0] = type metadata accessor for AxisGridLine(255);
  v15[1] = &type metadata for Color;
  v15[2] = &protocol witness table for AxisGridLine;
  v15[3] = &protocol witness table for Color;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v15, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
  return AxisMarks.init<A>(preset:position:values:content:)(v7, v4, v9, sub_100507E20, 0, v12, &type metadata for Double, OpaqueTypeConformance2, &protocol witness table for Double);
}

uint64_t sub_100507E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v0 = type metadata accessor for AxisGridLine(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v7, 0, 0, &_swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  v9[0] = v7[0];
  v9[1] = v7[1];
  v10 = v8;
  AxisGridLine.init(centered:stroke:)(2, v9);
  if (qword_10081DF68 != -1)
    swift_once(&qword_10081DF68, sub_1005071E4);
  v6 = qword_10086AD70;
  AxisMark.foregroundStyle<A>(_:)(&v6, v0, &type metadata for Color, &protocol witness table for AxisGridLine, &protocol witness table for Color);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100507F38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  double v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;

  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  v8 = *(double *)(a1 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 64));
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    v51 = (uint64_t)v8;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v51, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
    v10 = LocalizedStringKey.init(stringInterpolation:)(v6);
    v11 = Text.init(_:tableName:bundle:comment:)(v10);
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
    v19 = static Font.footnote.getter(v18);
    v21 = Text.font(_:)(v19, v11, v13, v17, v15, v20);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    swift_release(v19);
    LOBYTE(v19) = v25 & 1;
    sub_1000E4458(v11, v13, v17);
    swift_bridgeObjectRelease(v15, v28, v29, v30, v31, v32, v33, v34);
    v36 = static Color.secondary.getter(v35);
    v51 = v36;
    v37 = Text.foregroundStyle<A>(_:)(&v51, v21, v23, v25 & 1, v27, &type metadata for Color, &protocol witness table for Color);
    v39 = v38;
    LOBYTE(v17) = v40;
    v42 = v41;
    sub_1000E4458(v21, v23, v19);
    swift_release(v36);
    swift_bridgeObjectRelease(v27, v43, v44, v45, v46, v47, v48, v49);
    *(_QWORD *)a2 = v37;
    *(_QWORD *)(a2 + 8) = v39;
    *(_BYTE *)(a2 + 16) = v17 & 1;
    *(_QWORD *)(a2 + 24) = v42;
    *(_OWORD *)(a2 + 32) = xmmword_1006426A0;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10050816C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _OWORD v74[2];
  uint64_t v75;
  _OWORD v76[2];
  uint64_t v77;

  v68 = a1;
  v71 = a2;
  v65 = sub_100047110(&qword_100838778);
  __chkstk_darwin(v65);
  v63 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100838708);
  __chkstk_darwin(v3);
  v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100047110(&qword_100838718);
  v61 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v64 = (char *)&v58 - v7;
  v8 = type metadata accessor for AxisGridLine(0);
  v59 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100047110(&qword_1008386E8);
  v70 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v72 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v69 = (char *)&v58 - v13;
  v14 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100831790);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = AxisValue.index.getter(v24);
  v26 = AxisValue.count.getter();
  if (__OFSUB__(v26, 1))
  {
    __break(1u);
LABEL_7:
    swift_once(&qword_10081DF68, sub_1005071E4);
    goto LABEL_5;
  }
  if (v25 == v26 - 1)
  {
    __chkstk_darwin(v26);
    v28 = static AxisValueLabelCollisionResolution.automatic.getter(v27);
    static AxisValueLabelOrientation.automatic.getter(v28);
    v56 = sub_100047110(&qword_10082A308);
    v57 = sub_1002619A4();
    v55 = &v54;
    ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, _BYTE, _QWORD, _BYTE, uint64_t (*)()))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0x3FF0000000000000, 0x3FE0000000000000, 0, 0, 0, 1, v19, 2, v16, 0, 0, 0, 0, sub_10050A540);
    v29 = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v71, v23, v20);
    v30 = sub_100047110(&qword_100838790);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v74, 0, 0, &_swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  v76[0] = v74[0];
  v76[1] = v74[1];
  v77 = v75;
  AxisGridLine.init(centered:stroke:)(2, v76);
  if (qword_10081DF68 != -1)
    goto LABEL_7;
LABEL_5:
  v73 = qword_10086AD70;
  v32 = v72;
  AxisMark.foregroundStyle<A>(_:)(&v73, v8, &type metadata for Color, &protocol witness table for AxisGridLine, &protocol witness table for Color);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v8);
  v33 = v70;
  v59 = *(_QWORD *)(v70 + 32);
  v34 = v69;
  v35 = v62;
  v36 = ((uint64_t (*)(char *, char *, uint64_t))v59)(v69, v32, v62);
  __chkstk_darwin(v36);
  v38 = static AxisValueLabelCollisionResolution.automatic.getter(v37);
  static AxisValueLabelOrientation.automatic.getter(v38);
  v56 = sub_100047110(&qword_100838780);
  v57 = sub_100028384(&qword_100838788, &qword_100838780, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v55 = &v54;
  v39 = v64;
  ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, _BYTE, _QWORD, _BYTE, double (*)@<D0>(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0, 0, 1, 0, 0, 1, v19, 2, v16, 0, 0, 0, 0, sub_10050A4D4);
  v40 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v41 = v72;
  v40(v72, v34, v35);
  v42 = v61;
  v43 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v44 = v60;
  v45 = v66;
  v43(v60, v39, v66);
  v46 = v63;
  v40(v63, v41, v35);
  sub_100028384(&qword_100838710, &qword_100838718, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  v47 = v65;
  v48 = &v46[*(int *)(v65 + 48)];
  v43(v48, v44, v45);
  v49 = (uint64_t)v67;
  ((void (*)(char *, char *, uint64_t))v59)(v67, v46, v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v49 + *(int *)(v47 + 48), v48, v45);
  v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v44, v45);
  v51 = *(void (**)(char *, uint64_t))(v70 + 8);
  v51(v72, v35);
  v52 = v71;
  sub_100021CC0(v49, v71, &qword_100838708);
  v53 = sub_100047110(&qword_100838790);
  swift_storeEnumTagMultiPayload(v52, v53, 1);
  sub_10001BE90(v49, &qword_100838708);
  v50(v39, v45);
  return ((uint64_t (*)(char *, uint64_t))v51)(v69, v35);
}

__n128 sub_1005087F8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  __n128 v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_100508870(a1, (uint64_t)&v10);
  v5 = v11;
  v6 = v12;
  result = v10;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 72) = v9;
  return result;
}

void sub_100508870(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  _QWORD v71[2];
  char v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;

  v4 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = AxisValue.index.getter(v7);
  v9 = a1;
  sub_100508A94(v8, (uint64_t)v71);
  v10 = v71[0];
  v11 = v71[1];
  v12 = v72;
  v70 = v73;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  if (!AxisValue.index.getter(v13))
  {
    v18 = type metadata accessor for WorkoutChartViewModel(0);
    v67 = v9;
    v68 = v18;
    AttributedString.init(_:)(*(id *)(v9 + *(int *)(v18 + 28)));
    v19 = Text.init(_:)(v6);
    v21 = v20;
    v23 = v22;
    v25 = v24 & 1;
    v27 = static Font.footnote.getter(v26);
    v65 = Text.font(_:)(v27, v19, v21, v25, v23, v28);
    v66 = v10;
    v30 = v29;
    v32 = v31;
    v69 = v33;
    swift_release(v27);
    v64 = v32 & 1;
    sub_1000E4458(v19, v21, v25);
    swift_bridgeObjectRelease(v23, v34, v35, v36, v37, v38, v39, v40);
    sub_100538FFC(*(_BYTE *)(v67 + *(int *)(v68 + 20)));
    v42 = Color.init(_:)(v41);
    v43 = v65;
    v14 = Text.foregroundColor(_:)(v42, v65, v30, v32 & 1, v69);
    v15 = v44;
    LOBYTE(v25) = v45;
    v17 = v46;
    swift_release(v42);
    v16 = v25 & 1;
    v47 = v30;
    v10 = v66;
    sub_1000E4458(v43, v47, v64);
    swift_bridgeObjectRelease(v69, v48, v49, v50, v51, v52, v53, v54);
  }
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  v55 = v70;
  *(_QWORD *)(a2 + 24) = v70;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v17;
  sub_1000E439C(v10, v11, v12);
  swift_bridgeObjectRetain(v55);
  sub_100182758(v14, v15, v16, v17);
  sub_100182728(v14, v15, v16, v17);
  sub_1000E4458(v10, v11, v12);
  swift_bridgeObjectRelease(v55, v56, v57, v58, v59, v60, v61, v62);
}

void sub_100508A94(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  NSString v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  char v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _QWORD v75[2];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WorkoutDetailChartView(0);
  v8 = sub_1002697E8();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = (CHWorkoutDetailHeartRateTableViewCell *)v8;
    if (*(_QWORD *)(v8 + 16) > a1)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * a1, v4);
      swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
      if (qword_10081E078 == -1)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_12:
  swift_once(&qword_10081E078, sub_1005B8F9C);
LABEL_4:
  v17 = (void *)qword_10083C640;
  sub_1005B9248();
  if (v18)
  {
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v17, "setDateFormat:", v20);

  isa = Date._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v17, "stringFromDate:", isa);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v75[0] = v30;
  v75[1] = v32;
  v33 = sub_100038CA0();
  v34 = Text.init<A>(_:)(v75, &type metadata for String, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39 & 1;
  v42 = static Font.footnote.getter(v41);
  v44 = Text.font(_:)(v42, v34, v36, v40, v38, v43);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  swift_release(v42);
  sub_1000E4458(v34, v36, v40);
  swift_bridgeObjectRelease(v38, v51, v52, v53, v54, v55, v56, v57);
  if (qword_10081DF68 != -1)
    swift_once(&qword_10081DF68, sub_1005071E4);
  v58 = v48 & 1;
  v59 = qword_10086AD70;
  v75[0] = qword_10086AD70;
  swift_retain(qword_10086AD70);
  v60 = Text.foregroundStyle<A>(_:)(v75, v44, v46, v58, v50, &type metadata for Color, &protocol witness table for Color);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  sub_1000E4458(v44, v46, v58);
  swift_release(v59);
  swift_bridgeObjectRelease(v50, v67, v68, v69, v70, v71, v72, v73);
  *(_QWORD *)a2 = v60;
  *(_QWORD *)(a2 + 8) = v62;
  *(_BYTE *)(a2 + 16) = v64 & 1;
  *(_QWORD *)(a2 + 24) = v66;
}

uint64_t sub_100508D54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _OWORD v74[2];
  uint64_t v75;
  _OWORD v76[2];
  uint64_t v77;

  v68 = a1;
  v71 = a2;
  v65 = sub_100047110(&qword_100838758);
  __chkstk_darwin(v65);
  v63 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100838740);
  __chkstk_darwin(v3);
  v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100047110(&qword_100838750);
  v61 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v64 = (char *)&v58 - v7;
  v8 = type metadata accessor for AxisGridLine(0);
  v59 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100047110(&qword_1008386E8);
  v70 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v72 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v69 = (char *)&v58 - v13;
  v14 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100831790);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = AxisValue.index.getter(v24);
  v26 = AxisValue.count.getter();
  if (__OFSUB__(v26, 1))
  {
    __break(1u);
LABEL_7:
    swift_once(&qword_10081DF68, sub_1005071E4);
    goto LABEL_5;
  }
  if (v25 == v26 - 1)
  {
    __chkstk_darwin(v26);
    v28 = static AxisValueLabelCollisionResolution.automatic.getter(v27);
    static AxisValueLabelOrientation.automatic.getter(v28);
    v56 = sub_100047110(&qword_10082A308);
    v57 = sub_1002619A4();
    v55 = &v54;
    ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, _BYTE, _QWORD, _BYTE, void (*)(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0x3FF0000000000000, 0x3FE0000000000000, 0, 0, 0, 1, v19, 2, v16, 0, 0, 0, 0, sub_10050A4CC);
    v29 = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v71, v23, v20);
    v30 = sub_100047110(&qword_100838770);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v74, 0, 0, &_swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  v76[0] = v74[0];
  v76[1] = v74[1];
  v77 = v75;
  AxisGridLine.init(centered:stroke:)(2, v76);
  if (qword_10081DF68 != -1)
    goto LABEL_7;
LABEL_5:
  v73 = qword_10086AD70;
  v32 = v72;
  AxisMark.foregroundStyle<A>(_:)(&v73, v8, &type metadata for Color, &protocol witness table for AxisGridLine, &protocol witness table for Color);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v8);
  v33 = v70;
  v59 = *(_QWORD *)(v70 + 32);
  v34 = v69;
  v35 = v62;
  v36 = ((uint64_t (*)(char *, char *, uint64_t))v59)(v69, v32, v62);
  __chkstk_darwin(v36);
  v38 = static AxisValueLabelCollisionResolution.automatic.getter(v37);
  static AxisValueLabelOrientation.automatic.getter(v38);
  v56 = sub_100047110(&qword_100838760);
  v57 = sub_100028384(&qword_100838768, &qword_100838760, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v55 = &v54;
  v39 = v64;
  ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, _BYTE, _QWORD, _BYTE, double (*)@<D0>(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0, 0, 1, 0, 0, 1, v19, 2, v16, 0, 0, 0, 0, sub_10050A4C4);
  v40 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v41 = v72;
  v40(v72, v34, v35);
  v42 = v61;
  v43 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v44 = v60;
  v45 = v66;
  v43(v60, v39, v66);
  v46 = v63;
  v40(v63, v41, v35);
  sub_100028384(&qword_100838748, &qword_100838750, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  v47 = v65;
  v48 = &v46[*(int *)(v65 + 48)];
  v43(v48, v44, v45);
  v49 = (uint64_t)v67;
  ((void (*)(char *, char *, uint64_t))v59)(v67, v46, v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v49 + *(int *)(v47 + 48), v48, v45);
  v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v44, v45);
  v51 = *(void (**)(char *, uint64_t))(v70 + 8);
  v51(v72, v35);
  v52 = v71;
  sub_100021CC0(v49, v71, &qword_100838740);
  v53 = sub_100047110(&qword_100838770);
  swift_storeEnumTagMultiPayload(v52, v53, 1);
  sub_10001BE90(v49, &qword_100838740);
  v50(v39, v45);
  return ((uint64_t (*)(char *, uint64_t))v51)(v69, v35);
}

__n128 sub_1005093E0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  char v11;
  __int128 v12;
  __int128 v13;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_100509454(a1, (uint64_t)v10);
  v5 = v11;
  result = (__n128)v10[0];
  v7 = v10[1];
  v8 = v12;
  v9 = v13;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v7;
  *(_BYTE *)(a2 + 56) = v5;
  *(_OWORD *)(a2 + 64) = v8;
  *(_OWORD *)(a2 + 80) = v9;
  return result;
}

double sub_100509454@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = AxisValue.index.getter(a1);
  if (v3)
  {
    v4 = AxisValue.index.getter(v3);
    sub_1005095BC(v4, (uint64_t)&v20);
    v16 = v20;
    v17 = v21;
    v18 = v22;
    v19 = 1;
  }
  else
  {
    v5 = AxisValue.index.getter(0);
    sub_100508A94(v5, (uint64_t)&v20);
    v16 = v20;
    v17 = v21;
    v18 = v22;
    v19 = 0;
  }
  v6 = _ConditionalContent<>.init(storage:)(&v16, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  v7 = v20;
  v8 = v21;
  v9 = v22;
  v10 = v23;
  v11 = AxisValue.index.getter(v6);
  sub_1005097EC(v11, (uint64_t *)&v20);
  v12 = v20;
  v13 = v21;
  v14 = v22;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v14;
  sub_100116B48(v7, *((uint64_t *)&v7 + 1), v8, v9);
  sub_100182758(v12, *((uint64_t *)&v12 + 1), v13, v14);
  sub_100182728(v12, *((uint64_t *)&v12 + 1), v13, v14);
  return sub_100116B88(v7, *((uint64_t *)&v7 + 1), v8, v9);
}

void sub_1005095BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  _QWORD v68[2];

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = sub_100047110((uint64_t *)&unk_100827460);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100622F90;
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = a1;
  v12 = static String.localizedStringWithFormat(_:_:)(v7, v9, v11);
  v14 = v13;
  swift_bridgeObjectRelease(v9, v13, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v11, v21, v22, v23, v24, v25, v26, v27);
  v68[0] = v12;
  v68[1] = v14;
  v28 = sub_100038CA0();
  v29 = Text.init<A>(_:)(v68, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v37 = static Font.footnote.getter(v36);
  v39 = Text.font(_:)(v37, v29, v31, v35, v33, v38);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  swift_release(v37);
  sub_1000E4458(v29, v31, v35);
  swift_bridgeObjectRelease(v33, v46, v47, v48, v49, v50, v51, v52);
  if (qword_10081DF68 != -1)
    swift_once(&qword_10081DF68, sub_1005071E4);
  v53 = v43 & 1;
  v54 = Text.foregroundColor(_:)(qword_10086AD70, v39, v41, v53, v45);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  sub_1000E4458(v39, v41, v53);
  swift_bridgeObjectRelease(v45, v61, v62, v63, v64, v65, v66, v67);
  *(_QWORD *)a2 = v54;
  *(_QWORD *)(a2 + 8) = v56;
  *(_BYTE *)(a2 + 16) = v58 & 1;
  *(_QWORD *)(a2 + 24) = v60;
}

uint64_t sub_1005097EC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  unint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t *v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v80 = a2;
  v4 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v4);
  v77 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for WorkoutChartDataElement(0);
  v6 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v79 = (uint64_t)&v73 - v9;
  v10 = sub_100047110(&qword_10082BFA8);
  __chkstk_darwin(v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - v14;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v73 - v21;
  type metadata accessor for WorkoutDetailChartView(0);
  v82 = v2;
  result = sub_1002697E8();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v24 = (CHWorkoutDetailHeartRateTableViewCell *)result;
    if (*(_QWORD *)(result + 16) > a1)
    {
      v25 = result
          + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
          + *(_QWORD *)(v17 + 72) * a1;
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
      v26(v19, v25, v16);
      swift_bridgeObjectRelease(v24, v27, v28, v29, v30, v31, v32, v33);
      v34 = (uint64_t)v22;
      sub_100269FC4();
      v35 = *(void (**)(char *, uint64_t))(v17 + 8);
      v35(v19, v16);
      v36 = (uint64_t)v15;
      sub_1002A2C58(v34, (uint64_t)v15);
      sub_100021CC0((uint64_t)v15, (uint64_t)v12, &qword_10082BFA8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v81) == 1)
      {
        sub_10001BE90((uint64_t)v15, &qword_10082BFA8);
        v35((char *)v34, v16);
        result = sub_10001BE90((uint64_t)v12, &qword_10082BFA8);
      }
      else
      {
        v37 = v79;
        sub_100047C88((uint64_t)v12, v79, type metadata accessor for WorkoutChartDataElement);
        v38 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
        v39 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
        v40 = objc_msgSend(v38, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v39);

        if (v40)
        {
          v75 = v40;
          v76 = v16;
          v41 = v16;
          v42 = (uint64_t)v78;
          v26(v78, v37, v41);
          v43 = v81;
          v44 = *(_QWORD *)(v37 + *(int *)(v81 + 24));
          *(_QWORD *)(v42 + *(int *)(v81 + 20)) = v44;
          *(_QWORD *)(v42 + *(int *)(v43 + 24)) = v44;
          *(_QWORD *)(v42 + *(int *)(v43 + 28)) = v44;
          v45 = type metadata accessor for WorkoutChartViewModel(0);
          v46 = v82;
          v74 = sub_100134350(v42, v40);
          v47 = v77;
          AttributedString.init(_:)(v74);
          v48 = Text.init(_:)(v47);
          v81 = (uint64_t)v35;
          v49 = v48;
          v51 = v50;
          v53 = v52;
          v55 = v54 & 1;
          sub_100538FFC(*(_BYTE *)(v46 + *(int *)(v45 + 20)));
          v57 = Color.init(_:)(v56);
          v83 = v57;
          v58 = Text.foregroundStyle<A>(_:)(&v83, v49, v51, v55, v53, &type metadata for Color, &protocol witness table for Color);
          v82 = v34;
          v60 = v59;
          v62 = v61;
          v77 = v36;
          v64 = v63 & 1;
          sub_1000E4458(v49, v51, v55);
          swift_release(v57);

          swift_bridgeObjectRelease(v53, v65, v66, v67, v68, v69, v70, v71);
          sub_100011F54(v42, type metadata accessor for WorkoutChartDataElement);
          sub_100011F54(v79, type metadata accessor for WorkoutChartDataElement);
          sub_10001BE90(v77, &qword_10082BFA8);
          result = ((uint64_t (*)(uint64_t, uint64_t))v81)(v82, v76);
LABEL_9:
          v72 = v80;
          *v80 = v58;
          v72[1] = v60;
          v72[2] = v64;
          v72[3] = v62;
          return result;
        }
        sub_100011F54(v37, type metadata accessor for WorkoutChartDataElement);
        sub_10001BE90(v36, &qword_10082BFA8);
        result = ((uint64_t (*)(uint64_t, uint64_t))v35)(v34, v16);
      }
      v58 = 0;
      v60 = 0;
      v64 = 0;
      v62 = 0;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_100509CB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  double v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;

  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  v8 = *(double *)(a1 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 60));
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    v51 = (uint64_t)v8;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v51, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
    v10 = LocalizedStringKey.init(stringInterpolation:)(v6);
    v11 = Text.init(_:tableName:bundle:comment:)(v10);
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
    v19 = static Font.footnote.getter(v18);
    v21 = Text.font(_:)(v19, v11, v13, v17, v15, v20);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    swift_release(v19);
    LOBYTE(v19) = v25 & 1;
    sub_1000E4458(v11, v13, v17);
    swift_bridgeObjectRelease(v15, v28, v29, v30, v31, v32, v33, v34);
    v36 = static Color.secondary.getter(v35);
    v51 = v36;
    v37 = Text.foregroundStyle<A>(_:)(&v51, v21, v23, v25 & 1, v27, &type metadata for Color, &protocol witness table for Color);
    v39 = v38;
    LOBYTE(v17) = v40;
    v42 = v41;
    sub_1000E4458(v21, v23, v19);
    swift_release(v36);
    swift_bridgeObjectRelease(v27, v43, v44, v45, v46, v47, v48, v49);
    *(_QWORD *)a2 = v37;
    *(_QWORD *)(a2 + 8) = v39;
    *(_BYTE *)(a2 + 16) = v17 & 1;
    *(_QWORD *)(a2 + 24) = v42;
    *(_OWORD *)(a2 + 32) = xmmword_100628E90;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_100509EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100838660);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v9 = sub_100047110(&qword_100838668);
  v10 = sub_100507220(v0, (uint64_t *)&v7[*(int *)(v9 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v2 + 104))(v4, enum case for DynamicTypeSize.large(_:), v1, v10);
  v11 = sub_100028384(&qword_100838670, &qword_100838660, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.dynamicTypeSize(_:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10001BE90((uint64_t)v7, &qword_100838660);
}

uint64_t sub_10050A02C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005078EC(a1);
}

unint64_t sub_10050A04C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008386B0;
  if (!qword_1008386B0)
  {
    v1 = sub_100007050(&qword_1008386A8);
    sub_100028384(&qword_1008386B8, &qword_1008386C0, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
    sub_100028384(&qword_1008386C8, &qword_1008386D0, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008386B0);
  }
  return result;
}

uint64_t sub_10050A0F0()
{
  uint64_t v0;

  return sub_100507CA8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10050A0FC(uint64_t a1)
{
  return sub_10050A2FC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10050816C);
}

unint64_t sub_10050A108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008386F8;
  if (!qword_1008386F8)
  {
    v1 = sub_100007050(&qword_1008386F0);
    sub_100028384(&qword_100831788, &qword_100831790, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    sub_10050A3FC(&qword_100838700, &qword_100838708, &qword_100838710, &qword_100838718);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008386F8);
  }
  return result;
}

uint64_t sub_10050A1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = type metadata accessor for WorkoutDetailChartView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[6] + 8), v10, v11, v12, v13, v14, v15, v16);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[8]), v17, v18, v19, v20, v21, v22, v23);
  v24 = v7 + v9[10];
  v25 = type metadata accessor for Date(0);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(v24, v25);
  v26(v7 + v9[11], v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[12]), v27, v28, v29, v30, v31, v32, v33);
  swift_release(*(_QWORD *)(v7 + v9[13]));
  swift_release(*(_QWORD *)(v7 + v9[14]));

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20)));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10050A2F0(uint64_t a1)
{
  return sub_10050A2FC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100508D54);
}

uint64_t sub_10050A2FC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailChartView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_10050A358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838730;
  if (!qword_100838730)
  {
    v1 = sub_100007050(&qword_100838728);
    sub_100028384(&qword_100831788, &qword_100831790, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    sub_10050A3FC(&qword_100838738, &qword_100838740, &qword_100838748, &qword_100838750);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838730);
  }
  return result;
}

uint64_t sub_10050A3FC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  void *v10;
  void *v11;
  void *v12;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007050(a2);
    OpaqueTypeConformance2 = type metadata accessor for AxisGridLine(255);
    v10 = &type metadata for Color;
    v11 = &protocol witness table for AxisGridLine;
    v12 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&OpaqueTypeConformance2, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
    v10 = (void *)sub_100028384(a3, a4, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v8);
    atomic_store(result, a1);
  }
  return result;
}

double sub_10050A4C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1005093E0(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

void sub_10050A4CC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100509CB4(*(_QWORD *)(v1 + 16), a1);
}

double sub_10050A4D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1005087F8(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10050A4DC()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100838660);
  v1[1] = sub_100028384(&qword_100838670, &qword_100838660, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
}

char *sub_10050A544(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  NSString v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  objc_super v40;

  v6 = OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_goalView] = 0;
  v9 = &v8[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);

  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    v10 = 0;
  }
  v40.receiver = v8;
  v40.super_class = (Class)type metadata accessor for ActivityGoalDayCell();
  v18 = (char *)objc_msgSendSuper2(&v40, "initWithStyle:reuseIdentifier:", a1, v10);

  v19 = OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel;
  v20 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel];
  v21 = v18;
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "addSubview:", v20);

  v23 = objc_msgSend(*(id *)&v18[v19], "topAnchor");
  v24 = objc_msgSend(v21, "contentView");
  v25 = objc_msgSend(v24, "topAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
  objc_msgSend(v26, "setActive:", 1);

  v27 = objc_msgSend(*(id *)&v18[v19], "leadingAnchor");
  v28 = objc_msgSend(v21, "contentView");
  v29 = objc_msgSend(v28, "leadingAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
  objc_msgSend(v30, "setActive:", 1);

  v31 = objc_msgSend(*(id *)&v18[v19], "bottomAnchor");
  v32 = objc_msgSend(v21, "contentView");
  v33 = objc_msgSend(v32, "bottomAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
  objc_msgSend(v34, "setActive:", 1);

  v35 = *(void **)&v18[v19];
  v36 = (void *)objc_opt_self(UIFont);
  v37 = v35;
  v38 = objc_msgSend(v36, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v37, "setFont:", v38);

  return v21;
}

id sub_10050A9B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityGoalDayCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivityGoalDayCell()
{
  return objc_opt_self(_TtC10FitnessApp19ActivityGoalDayCell);
}

uint64_t sub_10050AB04(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  CGColor *v8;
  size_t NumberOfComponents;
  CGColorSpace *v10;
  CGColorSpace *v11;
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  CGColorSpace *v16;
  char v17;
  CGColorSpace *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  size_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  size_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  double *v33;
  double *v34;
  unint64_t v35;
  double v36;
  double v37;
  unint64_t v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  CGColorRef v46;
  const char *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  CGColorRef v54;
  uint64_t v55;
  uint64_t result;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;

  v5 = Color.cgColor.getter(a2);
  if (!v5)
    goto LABEL_33;
  v6 = (void *)v5;
  v7 = Color.cgColor.getter(a1);
  if (!v7)
  {

    goto LABEL_33;
  }
  v8 = (CGColor *)v7;
  NumberOfComponents = CGColorGetNumberOfComponents((CGColorRef)v6);
  if (NumberOfComponents != CGColorGetNumberOfComponents(v8))
    goto LABEL_27;
  v10 = CGColorGetColorSpace((CGColorRef)v6);
  v11 = CGColorGetColorSpace(v8);
  v12 = v11;
  if (v10)
  {
    if (!v11)
    {

      goto LABEL_33;
    }
    type metadata accessor for CGColorSpace(0);
    v14 = v13;
    v15 = sub_10050AE50();
    v16 = v10;
    v17 = static _CFObject.== infix(_:_:)(v16, v12, v14, v15);

    if ((v17 & 1) == 0)
      goto LABEL_27;
  }
  else if (v11)
  {
    goto LABEL_28;
  }
  v18 = CGColorGetColorSpace((CGColorRef)v6);
  if (!v18)
  {
LABEL_27:

LABEL_33:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001006A3E30, "FitnessApp/Color+Extensions.swift", 33, 2, 24, 0);
    goto LABEL_34;
  }
  v12 = v18;
  v19 = CGColorRef.components.getter();
  if (!v19)
  {
LABEL_28:

    goto LABEL_33;
  }
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
  v21 = CGColorRef.components.getter();
  if (!v21)
  {

    swift_bridgeObjectRelease(v20, v57, v58, v59, v60, v61, v62, v63);
    goto LABEL_33;
  }
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)v21;
  v23 = CGColorGetNumberOfComponents((CGColorRef)v6);
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v31 = v23;
  if (v23)
  {
    if (v23 - 1 < *(_QWORD *)v20->cellPadding)
    {
      if (v23 - 1 < *(_QWORD *)v22->cellPadding)
      {
        v32 = sub_100140A58(0, 1, 1, (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage, v27, v28, v29, v30);
        v33 = (double *)&v20[1];
        v34 = (double *)&v22[1];
        v35 = *(_QWORD *)v32->cellPadding;
        do
        {
          v36 = *v33;
          v37 = *v34;
          v38 = *(_QWORD *)v32->cellInset;
          if (v35 >= v38 >> 1)
            v32 = sub_100140A58((CHWorkoutDetailHeartRateTableViewCell *)(v38 > 1), v35 + 1, 1, v32, v27, v28, v29, v30);
          *(_QWORD *)v32->cellPadding = v35 + 1;
          *((double *)&v32[1].super.super.super.super.isa + v35) = (1.0 - a3) * v36 + v37 * a3;
          ++v34;
          ++v33;
          ++v35;
          --v31;
        }
        while (v31);
        goto LABEL_22;
      }
      goto LABEL_26;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
LABEL_22:
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  swift_bridgeObjectRelease(v20, v39, v40, v41, v42, v43, v44, v45);
  v46 = CGColorCreate(v12, (const CGFloat *)&v32[1]);
  if (v46)
  {
    v54 = v46;
    swift_bridgeObjectRelease(v32, v47, v48, v49, v50, v51, v52, v53);
    v55 = Color.init(_:)(v54);

    return v55;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000019, 0x80000001006A3E50, "FitnessApp/Color+Extensions.swift", 33, 2, 32, 0);
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_10050AE50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838838;
  if (!qword_100838838)
  {
    type metadata accessor for CGColorSpace(255);
    result = swift_getWitnessTable(&unk_10062260C, v1);
    atomic_store(result, (unint64_t *)&qword_100838838);
  }
  return result;
}

Swift::Int sub_10050AE98()
{
  void **v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  v2 = v1;
  NSObject.hash(into:)(v4);

  return Hasher._finalize()();
}

void sub_10050AEE4(uint64_t a1)
{
  id *v1;
  id v3;

  v3 = *v1;
  NSObject.hash(into:)(a1);

}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherChannelView()
{
  return &type metadata for WorkoutDetailWeatherChannelView;
}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherChannelView.ViewModel()
{
  return &type metadata for WorkoutDetailWeatherChannelView.ViewModel;
}

Swift::Int sub_10050AF48(uint64_t a1)
{
  void **v1;
  void *v2;
  id v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  v3 = v2;
  NSObject.hash(into:)(v5);

  return Hasher._finalize()();
}

uint64_t sub_10050AF90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  sub_100139CE8();
  return static NSObject.== infix(_:_:)(v2, v3) & 1;
}

unint64_t sub_10050AFD4()
{
  unint64_t result;

  result = qword_100838840;
  if (!qword_100838840)
  {
    result = swift_getWitnessTable(&unk_1006427CC, &type metadata for WorkoutDetailWeatherChannelView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_100838840);
  }
  return result;
}

uint64_t sub_10050B018(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA480, 1);
}

uint64_t sub_10050B028(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  Class isa;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050B1CC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10001BE90((uint64_t)v4, &qword_10081E640);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v11);
  v13 = v12;
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435758((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_10050BB18();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  objc_msgSend(v10, "openURL:options:completionHandler:", v13, isa, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10050B1CC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  Swift::String v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  Swift::String v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  unint64_t v112;
  __n128 v113;
  uint64_t v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  char *v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  id v129;
  id v130;
  uint64_t v131;
  CHWorkoutDetailHeartRateTableViewCell *v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  SEL v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;

  v163 = a1;
  v3 = sub_100047110(&qword_100838850);
  __chkstk_darwin(v3);
  v155 = (char *)&v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale.Language(0);
  v158 = *(_QWORD *)(v5 - 8);
  v159 = v5;
  __chkstk_darwin(v5);
  v156 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for Locale(0);
  v157 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v154 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v146 - v9;
  v11 = sub_100047110(&qword_100825CB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for URLQueryItem(0);
  v14 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v161 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v153 = (char *)&v146 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v146 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v146 - v22;
  v24 = sub_100047110(&qword_10082E5E0);
  __chkstk_darwin(v24);
  v26 = (char *)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for URLComponents(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD000000000000021, 0x80000001006A3E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_10001BE90((uint64_t)v26, &qword_10082E5E0);
    v31 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  v150 = v27;
  v151 = a2;
  v149 = v28;
  v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v27);
  v34 = URLComponents.queryItems.getter(v33);
  if (v34)
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)v34;
  else
    v35 = &_swiftEmptyArrayStorage;
  v152 = sub_100047110((uint64_t *)&unk_100827460);
  v36 = swift_allocObject(v152, 72, 7);
  v148 = xmmword_100622F90;
  *(_OWORD *)(v36 + 16) = xmmword_100622F90;
  v37 = v163;
  objc_msgSend(v163, "coordinate");
  *(_QWORD *)(v36 + 56) = &type metadata for Double;
  *(_QWORD *)(v36 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v36 + 32) = v38.n128_u64[0];
  v39 = String.init(format:_:)(1714564645, 0xE400000000000000, v36, v38);
  v41 = v40;
  URLQueryItem.init(name:value:)(7627116, 0xE300000000000000, v39, v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
  v147 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(0, *(_QWORD *)v35->cellPadding + 1, 1, (unint64_t)v35);
  v51 = *(_QWORD *)v35->cellPadding;
  v50 = *(_QWORD *)v35->cellInset;
  if (v51 >= v50 >> 1)
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(v50 > 1, v51 + 1, 1, (unint64_t)v35);
  *(_QWORD *)v35->cellPadding = v51 + 1;
  v163 = (char *)((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v162 = *(_QWORD *)(v14 + 72);
  v52 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v53 = v23;
  v54 = v164;
  v52(&v163[(_QWORD)v35 + v162 * v51], v53, v164);
  v55 = swift_allocObject(v152, 72, 7);
  *(_OWORD *)(v55 + 16) = v148;
  objc_msgSend(v37, "coordinate");
  *(_QWORD *)(v55 + 56) = &type metadata for Double;
  *(_QWORD *)(v55 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v55 + 32) = v56;
  v58 = String.init(format:_:)(1714564645, 0xE400000000000000, v55, v57);
  v60 = v59;
  URLQueryItem.init(name:value:)(7237484, 0xE300000000000000, v58, v59);
  swift_bridgeObjectRelease(v60, v61, v62, v63, v64, v65, v66, v67);
  v69 = *(_QWORD *)v35->cellPadding;
  v68 = *(_QWORD *)v35->cellInset;
  if (v69 >= v68 >> 1)
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(v68 > 1, v69 + 1, 1, (unint64_t)v35);
  *(_QWORD *)v35->cellPadding = v69 + 1;
  *(_QWORD *)&v148 = v52;
  v70 = ((uint64_t (*)(char *, char *, uint64_t))v52)(&v163[(_QWORD)v35 + v69 * v162], v20, v54);
  v71 = static Locale.current.getter(v70);
  v72 = v156;
  Locale.language.getter(v71);
  v73 = *(uint64_t (**)(char *, uint64_t))(v157 + 8);
  v74 = v160;
  v75 = v73(v10, v160);
  Locale.Language.languageCode.getter(v75);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v72, v159);
  v76 = type metadata accessor for Locale.LanguageCode(0);
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v13, 1, v76) == 1)
  {
    sub_10001BE90((uint64_t)v13, &qword_100825CB0);
  }
  else
  {
    Locale.LanguageCode.identifier.getter();
    v79 = v78;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v13, v76);
    v80 = String.uppercased()();
    swift_bridgeObjectRelease(v79, (SEL)v80._object, v81, v82, v83, v84, v85, v86);
    v87 = v154;
    v89 = static Locale.current.getter(v88);
    v90 = (uint64_t)v155;
    Locale.region.getter(v89);
    v73(v87, v74);
    v91 = type metadata accessor for Locale.Region(0);
    v92 = *(_QWORD *)(v91 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91) != 1)
    {
      Locale.Region.identifier.getter();
      v103 = v102;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v91);
      v104 = String.uppercased()();
      swift_bridgeObjectRelease(v103, (SEL)v104._object, v105, v106, v107, v108, v109, v110);
      v111 = swift_allocObject(v152, 112, 7);
      *(_OWORD *)(v111 + 16) = xmmword_100620BC0;
      *(_QWORD *)(v111 + 56) = &type metadata for String;
      v112 = sub_100038CF8();
      *(Swift::String *)(v111 + 32) = v80;
      *(_QWORD *)(v111 + 96) = &type metadata for String;
      *(_QWORD *)(v111 + 104) = v112;
      *(_QWORD *)(v111 + 64) = v112;
      *(Swift::String *)(v111 + 72) = v104;
      v114 = String.init(format:_:)(0x40255F4025, 0xE500000000000000, v111, v113);
      v116 = v115;
      v117 = v153;
      URLQueryItem.init(name:value:)(0x656C61636F6CLL, 0xE600000000000000, v114, v115);
      swift_bridgeObjectRelease(v116, v118, v119, v120, v121, v122, v123, v124);
      v126 = *(_QWORD *)v35->cellPadding;
      v125 = *(_QWORD *)v35->cellInset;
      if (v126 >= v125 >> 1)
        v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(v125 > 1, v126 + 1, 1, (unint64_t)v35);
      v127 = v163;
      v54 = v164;
      v100 = v161;
      v128 = v162;
      v101 = (void (*)(char *, char *, uint64_t))v148;
      *(_QWORD *)v35->cellPadding = v126 + 1;
      v101(&v127[(_QWORD)v35 + v126 * v128], v117, v54);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v80._object, v93, v94, v95, v96, v97, v98, v99);
    sub_10001BE90(v90, &qword_100838850);
    v54 = v164;
  }
  v100 = v161;
  v101 = (void (*)(char *, char *, uint64_t))v148;
LABEL_20:
  v129 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v130 = objc_msgSend(v129, "processName");

  v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(v130);
  v133 = v132;

  URLQueryItem.init(name:value:)(7496048, 0xE300000000000000, v131, v133);
  swift_bridgeObjectRelease(v133, v134, v135, v136, v137, v138, v139, v140);
  v142 = *(_QWORD *)v35->cellPadding;
  v141 = *(_QWORD *)v35->cellInset;
  if (v142 >= v141 >> 1)
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(v141 > 1, v142 + 1, 1, (unint64_t)v35);
  v143 = v149;
  *(_QWORD *)v35->cellPadding = v142 + 1;
  v101(&v163[(_QWORD)v35 + v142 * v162], v100, v54);
  v144 = v147;
  v145 = URLComponents.queryItems.setter(v35);
  URLComponents.url.getter(v145);
  return (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v144, v150);
}

uint64_t sub_10050BA14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(_:bundle:)(0xD000000000000014, 0x80000001006A3E70, 0);
  *a1 = result;
  return result;
}

uint64_t sub_10050BA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  void *v4;
  uint64_t v5;
  id v6;

  v4 = *v2;
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  sub_100047110(&qword_100838848);
  v5 = swift_allocObject(&unk_1007A5E70, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = v4;
  return Button.init(action:label:)(sub_10050BB10, v5, sub_10050BA14, 0, &type metadata for Image, &protocol witness table for Image);
}

uint64_t sub_10050BAEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050BB10()
{
  uint64_t v0;

  return sub_10050B028(*(char **)(v0 + 16));
}

unint64_t sub_10050BB18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081E820;
  if (!qword_10081E820)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_100622638, v1);
    atomic_store(result, (unint64_t *)&qword_10081E820);
  }
  return result;
}

unint64_t sub_10050BB64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838858;
  if (!qword_100838858)
  {
    v1 = sub_100007050(&qword_100838860);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100838858);
  }
  return result;
}

uint64_t sub_10050BBB0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *Card;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v24 = a5;
  v11 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = (int *)type metadata accessor for LoadCard(0);
  v19 = a6 + Card[5];
  *(_OWORD *)v19 = xmmword_100623580;
  *(_BYTE *)(v19 + 16) = 3;
  sub_10004D954(a1, (uint64_t)v13);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  if ((_DWORD)v20 == 1)
  {
    UUID.init()(v20);
    sub_10004D914(a1);
    sub_10004D914((uint64_t)v13);
    v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    sub_10004D914(a1);
    v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v21(v17, v13, v14);
  }
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(a6, v17, v14);
  *(_BYTE *)(a6 + Card[6]) = a2 & 1;
  *(_BYTE *)(a6 + Card[7]) = a3 & 1;
  *(_BYTE *)(a6 + Card[8]) = a4 & 1;
  *(_QWORD *)(a6 + Card[9]) = v24;
  return result;
}

Swift::Int sub_10050BD44()
{
  uint64_t v0;
  uint64_t v1;
  int *Card;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  _OWORD v22[4];
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = v0;
  Hasher.init()(v22);
  Card = (int *)type metadata accessor for LoadCard(0);
  v3 = v0 + Card[5];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  sub_1000EB3F4(*(_QWORD *)v3, v5, *(_BYTE *)(v3 + 16));
  sub_10054FFE4(v4, v5, v6);
  v8 = v7;
  String.hash(into:)(v22, v9, v7);
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)(v22, v4, v5);
      v17 = v4;
      v18 = v5;
      v19 = 1;
    }
    else
    {
      v17 = v4;
      v18 = v5;
      v19 = v6;
    }
    sub_1000EB41C(v17, v18, v19);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + Card[6]));
  Hasher._combine(_:)(*(_BYTE *)(v1 + Card[7]));
  v20 = *(id *)(v1 + Card[9]);
  NSObject.hash(into:)(v22);

  v26 = v22[2];
  v27 = v22[3];
  v28 = v23;
  v24 = v22[0];
  v25 = v22[1];
  return Hasher.finalize()();
}

uint64_t sub_10050BE94()
{
  uint64_t v0;
  int *Card;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  id v18;
  id v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  Swift::String v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __int128 v32;
  char v33;
  _QWORD v34[2];

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  Card = (int *)type metadata accessor for LoadCard(0);
  v2 = (__int128 *)(v0 + Card[5]);
  v3 = *((_BYTE *)v2 + 16);
  v32 = *v2;
  v33 = v3;
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v32) = *(_BYTE *)(v0 + Card[6]);
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_10027F100();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object, v10, v11, v12, v13, v14, v15, v16);
  v17._countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  v18 = *(id *)(v0 + Card[9]);
  v19 = objc_msgSend(v18, "description");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);

  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  return v34[0];
}

uint64_t type metadata accessor for LoadCard(uint64_t a1)
{
  uint64_t result;

  result = qword_1008388C0;
  if (!qword_1008388C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadCard);
  return result;
}

_QWORD *sub_10050C04C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = v16;
  }
  return a1;
}

void sub_10050C130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));

}

uint64_t sub_10050C188(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v15;
  return a1;
}

uint64_t sub_10050C240(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  return a1;
}

uint64_t sub_10050C314(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10050C3A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  return a1;
}

uint64_t sub_10050C450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050C45C);
}

uint64_t sub_10050C45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10050C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050C4E4);
}

uint64_t sub_10050C4E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_10050C55C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1006428B0;
    v4[2] = &unk_1006428C8;
    v4[3] = &unk_1006428C8;
    v4[4] = &unk_1006428C8;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_10050C650()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoverySheetConstants();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DiscoverySheetConstants()
{
  return objc_opt_self(_TtC10FitnessApp23DiscoverySheetConstants);
}

void destroy for MirrorDistanceRemainingView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

}

uint64_t *initializeWithCopy for MirrorDistanceRemainingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = (uint64_t)v6;
  a1[3] = v5;
  swift_retain(v3);
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for MirrorDistanceRemainingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = (uint64_t)v6;
  v8 = v6;

  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for MirrorDistanceRemainingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for MirrorDistanceRemainingView()
{
  return &type metadata for MirrorDistanceRemainingView;
}

uint64_t sub_10050C7D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA518, 1);
}

uint64_t sub_10050C7E0(double a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t result;

  v5 = (void *)WorkoutStep.goal.getter();
  v6 = objc_msgSend(v5, "value");

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v6, "doubleValueForUnit:", v7);
    v9 = v8;

    if (v9 - a1 > 0.0)
      v10 = v9 - a1;
    else
      v10 = 0.0;
    v11 = (void *)WorkoutStep.goal.getter();
    v12 = objc_msgSend(v11, "value");

    if (v12)
    {
      v13 = objc_msgSend(v12, "_unit");
      v14 = FIUIDistanceUnitForHKUnit();

      v15 = (void *)WorkoutStep.goal.getter();
      v16 = objc_msgSend(v15, "value");

      if (v16)
      {
        v17 = (void *)objc_opt_self(FIUIFormattingManager);
        v18 = objc_msgSend(v16, "_unit");
        v19 = FIUIDistanceUnitForHKUnit();

        v20 = objc_msgSend(a3, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", v14, 0, objc_msgSend(v17, "defaultPrecisionForDistanceUnit:", v19), 3, 1, v10);
        if (v20)
        {
          v21 = v20;
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

          return v22;
        }
        __break(1u);
      }
    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x80000001006A3F70, "FitnessApp/MirrorDistanceRemainingView.swift", 44, 2, 33, 0);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x80000001006A3F70, "FitnessApp/MirrorDistanceRemainingView.swift", 44, 2, 24, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10050CA14(uint64_t a1, id a2, double a3)
{
  int v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (qword_10081DF70 != -1)
    a1 = swift_once(&qword_10081DF70, sub_10050CDB8);
  v5 = byte_100838930;
  v6 = (void *)WorkoutStep.goal.getter(a1);
  v7 = objc_msgSend(v6, "value");

  if (v5 == 1)
  {
    if (!v7)
      goto LABEL_11;
    v8 = objc_msgSend(v7, "_unit");
    v9 = FIUIDistanceUnitForHKUnit(v8);

    sub_10050CEC0(a3);
    a2 = objc_msgSend(a2, "localizedLongUnitStringForDistanceUnit:distanceInUnit:", v9);
    if (a2)
    {
LABEL_9:
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);

      return v12;
    }
    __break(1u);
  }
  if (v7)
  {
    v10 = objc_msgSend(v7, "_unit");
    v11 = FIUIDistanceUnitForHKUnit(v10);

    a2 = objc_msgSend(a2, "localizedShortUnitStringForDistanceUnit:", v11);
    if (a2)
      goto LABEL_9;
    __break(1u);
  }
LABEL_11:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x80000001006A3F70, "FitnessApp/MirrorDistanceRemainingView.swift", 44, 2, 33, 0);
  __break(1u);
  return result;
}

uint64_t sub_10050CBD8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  const char *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  _QWORD v43[4];

  v43[1] = a3;
  v7 = type metadata accessor for LocalizationFeature(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10050C7E0(a4, a1, a2);
  v13 = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7);
  v14 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000002BLL, 0x80000001006A3F10, v10);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = sub_100047110((uint64_t *)&unk_100827460);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100622F90;
  v19 = sub_10050CA14(a1, a2, a4);
  v21 = v20;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_100038CF8();
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  v23 = String.init(format:_:)(v14, v16, v18, v22);
  v25 = (CHWorkoutDetailHeartRateTableViewCell *)v24;
  swift_bridgeObjectRelease(v16, v24, v26, v27, v28, v29, v30, v31);
  v43[2] = v23;
  v43[3] = v25;
  v32 = sub_100038CA0();
  v33 = StringProtocol.localizedUppercase.getter(&type metadata for String, v32);
  v35 = v34;
  swift_bridgeObjectRelease(v25, v34, v36, v37, v38, v39, v40, v41);
  return MetricText.init(value:unit:description:stale:includesSlashes:)(v11, v13, 0, 0, v33, v35, 0, 0);
}

uint64_t sub_10050CDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10050CBD8(*(_QWORD *)v1, *(void **)(v1 + 16), a1, *(double *)(v1 + 8));
}

uint64_t sub_10050CDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;

  v0 = type metadata accessor for LocalizationFeature(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizationFeature.workout(_:), v0);
  v4 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000002FLL, 0x80000001006A3FB0, v3);
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4 == 49 && v6 == 0xE100000000000000)
  {
    result = swift_bridgeObjectRelease(0xE100000000000000);
    v8 = 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 49, 0xE100000000000000, 0);
    result = swift_bridgeObjectRelease(v6);
  }
  byte_100838930 = v8 & 1;
  return result;
}

void sub_10050CEC0(double a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = (void *)WorkoutStep.goal.getter();
  v3 = objc_msgSend(v2, "value");

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    v5 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v4, a1);

    v6 = objc_msgSend(v3, "_unit");
    objc_msgSend(v5, "doubleValueForUnit:", v6);

  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x80000001006A3F70, "FitnessApp/MirrorDistanceRemainingView.swift", 44, 2, 40, 0);
    __break(1u);
  }
}

double sub_10050D004()
{
  double result;

  result = 222.0;
  xmmword_100838938 = xmmword_100642990;
  return result;
}

void sub_10050D01C(uint64_t a1)
{
  sub_10050D03C(14.0, a1, &qword_100838948);
}

void sub_10050D02C(uint64_t a1)
{
  sub_10050D03C(12.0, a1, &qword_100838950);
}

void sub_10050D03C(double a1, uint64_t a2, _QWORD *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;

  v5 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend(v5, "defaultFontForTextStyle:", v8);

  if (v9)
  {
    v10 = objc_msgSend(v9, "fu_fontWithSize:", a1);

    *a3 = v10;
  }
  else
  {
    __break(1u);
  }
}

char *sub_10050D0F4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  objc_super v28;

  v9 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_insetContentView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = (void *)UIView.withContentMode(_:)(2);

  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v16, "setCornerRadius:", 3.0);

  objc_msgSend(v15, "setClipsToBounds:", 1);
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v15, "setBackgroundColor:", v17);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v13] = v15;
  v18 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 1);
  if (qword_10081DF80 != -1)
    swift_once(&qword_10081DF80, sub_10050D01C);
  objc_msgSend(v19, "setFont:", qword_100838948);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v18] = v19;
  v20 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel;
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, "setLineBreakMode:", 0);
  objc_msgSend(v21, "setNumberOfLines:", 1);
  if (qword_10081DF88 != -1)
    swift_once(&qword_10081DF88, sub_10050D02C);
  objc_msgSend(v21, "setFont:", qword_100838950);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v20] = v21;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  v22 = &v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  v24 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView];
  v26 = v24;
  objc_msgSend(v26, "addSubview:", v25);
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel]);
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel]);
  sub_10050D494();

  return v26;
}

void sub_10050D494()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  Class isa;

  v1 = v0;
  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 112, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10062EF60;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "centerXAnchor");
  v10 = objc_msgSend(v1, "centerXAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = objc_msgSend(v4, "widthAnchor");
  if (qword_10081DF78 != -1)
    swift_once(&qword_10081DF78, sub_10050D004);
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", *(double *)&xmmword_100838938);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = objc_msgSend(v4, "heightAnchor");
  v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(v14, "constraintEqualToConstant:", *((double *)&xmmword_100838938
                                                                                           + 1)));

  *(_QWORD *)(v3 + 56) = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel];
  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v4, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 10.0);

  *(_QWORD *)(v3 + 64) = v19;
  v20 = objc_msgSend(v16, "leadingAnchor");
  v21 = objc_msgSend(v1, "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v3 + 72) = v22;
  v23 = objc_msgSend(v16, "trailingAnchor");
  v24 = objc_msgSend(v1, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v3 + 80) = v25;
  v26 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel];
  v27 = objc_msgSend(v26, "topAnchor");
  v28 = objc_msgSend(v16, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v3 + 88) = v29;
  v30 = objc_msgSend(v26, "leadingAnchor");
  v31 = objc_msgSend(v1, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v3 + 96) = v32;
  v33 = objc_msgSend(v26, "trailingAnchor");
  v34 = objc_msgSend(v1, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v3 + 104) = v35;
  specialized Array._endMutation()(v36);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v37, v38, v39, v40, v41, v42, v43);
  objc_msgSend(v44, "activateConstraints:", isa);

}

uint64_t sub_10050D928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[17] = a4;
  v9 = sub_100047110(&qword_100822168);
  v8[22] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[23] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[24] = v11;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v12);
  v8[26] = swift_task_alloc(v12);
  v13 = sub_100047110(&qword_100830B70);
  v8[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[28] = v14;
  v8[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v8[30] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v8[31] = v16;
  v8[32] = v17;
  return swift_task_switch(sub_10050DA08, v16, v17);
}

uint64_t sub_10050DA08()
{
  uint64_t v0;
  _QWORD *v1;

  sub_100016804(*(_QWORD **)(v0 + 136), *(_QWORD *)(*(_QWORD *)(v0 + 136) + 24));
  v1 = (_QWORD *)swift_task_alloc(dword_100820A3C);
  *(_QWORD *)(v0 + 264) = v1;
  *v1 = v0;
  v1[1] = sub_10050DA64;
  return sub_10010C754(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_10050DA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 264);
  *(_QWORD *)(*v2 + 272) = a1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = *(_QWORD *)(v3 + 248);
    v6 = *(_QWORD *)(v3 + 256);
    v7 = sub_10050DE20;
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 248);
    v6 = *(_QWORD *)(v3 + 256);
    v7 = sub_10050DAD8;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10050DAD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  NSString v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t (**v60)(void **);
  uint64_t v61;

  v1 = v0[20] + 16;
  swift_beginAccess(v1, v0 + 2, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = objc_msgSend(*(id *)(v0[34] + OBJC_IVAR___CHCatalogItemViewModel_title), "string");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8 = (uint64_t *)&v3[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
    v9 = *(CHWorkoutDetailHeartRateTableViewCell **)&v3[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title
                                                      + 8];
    *v8 = v5;
    v8[1] = v7;

    swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
  }
  v17 = v0[20] + 16;
  swift_beginAccess(v17, v0 + 5, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v17);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = v0[34];
    v21 = objc_retain(*(id *)(v18
                            + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel));

    v22 = objc_msgSend(*(id *)(v20 + OBJC_IVAR___CHCatalogItemViewModel_title), "string");
    if (!v22)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v24 = v23;
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
    }
    objc_msgSend(v21, "setText:", v22);

  }
  v32 = v0[20] + 16;
  swift_beginAccess(v32, v0 + 8, 0, 0);
  v33 = swift_unknownObjectWeakLoadStrong(v32);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = v0[34];
    v36 = objc_retain(*(id *)(v33
                            + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel));

    v37 = objc_msgSend(*(id *)(v35 + OBJC_IVAR___CHCatalogItemViewModel_subtitle), "string");
    if (!v37)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v39 = v38;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
    }
    objc_msgSend(v36, "setText:", v37);

  }
  v47 = (_QWORD *)v0[21];
  v48 = v47[3];
  v49 = v47[4];
  sub_100016804(v47, v48);
  if (qword_10081DF78 != -1)
    swift_once(&qword_10081DF78, sub_10050D004);
  v51 = v0[25];
  v50 = v0[26];
  v52 = v0[23];
  v53 = v0[24];
  v54 = v0[22];
  dispatch thunk of ArtworkImageLoading.fetchFallbackArtwork(for:)(v48, v49, *(double *)&xmmword_100838938, *((double *)&xmmword_100838938 + 1));
  v55 = swift_allocObject(&unk_1007A6018, 32, 7);
  *(_QWORD *)(v55 + 16) = sub_10050E2FC;
  *(_QWORD *)(v55 + 24) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v51, v50, v54);
  v56 = *(unsigned __int8 *)(v52 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = (v53 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = swift_allocObject(&unk_1007A6040, v58 + 16, v56 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v59 + v57, v51, v54);
  v60 = (uint64_t (**)(void **))(v59 + v58);
  *v60 = sub_10050E910;
  v60[1] = (uint64_t (*)(void **))v55;
  v61 = sub_100047110(&qword_100827568);
  Promise.init(asyncOperation:)(sub_10050E994, v59, v61);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v54);
  return swift_task_switch(sub_10050DE70, 0, 0);
}

uint64_t sub_10050DE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 240));
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050DE70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = v0[29];
  v2 = swift_task_alloc(64);
  v0[35] = v2;
  *(_QWORD *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/App Recommendation/Cells/SeymourW"
                         "orkoutRecommendationCollectionViewCell.swift";
  *(_QWORD *)(v2 + 24) = 139;
  *(_BYTE *)(v2 + 32) = 2;
  *(_QWORD *)(v2 + 40) = 92;
  *(_QWORD *)(v2 + 48) = v1;
  v5 = (char *)&dword_100832C50 + dword_100832C50;
  v3 = (_QWORD *)swift_task_alloc(unk_100832C54);
  v0[36] = v3;
  *v3 = v0;
  v3[1] = sub_10050DF2C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, double (*)(uint64_t), uint64_t))v5)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_10050E9FC, v2);
}

uint64_t sub_10050DF2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10050E0AC;
    v6 = 0;
    v7 = 0;
  }
  else
  {
    v9 = v3[28];
    v8 = v3[29];
    v10 = v3[27];
    swift_task_dealloc(v3[35]);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v6 = v3[31];
    v7 = v3[32];
    v5 = sub_10050DFC4;
  }
  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_10050DFC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  __int128 v6;
  _QWORD *v7;

  v1 = *(void **)(v0 + 296);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 160) + 16;
    swift_beginAccess(v2, v0 + 112, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      v4 = (void *)Strong;
      v5 = objc_retain(*(id *)(Strong
                             + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView));

      objc_msgSend(v5, "setImage:", v1);
    }

  }
  sub_100016804(*(_QWORD **)(v0 + 136), *(_QWORD *)(*(_QWORD *)(v0 + 136) + 24));
  v6 = xmmword_100838938;
  v7 = (_QWORD *)swift_task_alloc(dword_100820A14);
  *(_QWORD *)(v0 + 312) = v7;
  *v7 = v0;
  v7[1] = sub_10050E164;
  return sub_10010CC58(*(_QWORD *)(v0 + 272), *(double *)&v6, *((double *)&v6 + 1));
}

uint64_t sub_10050E0AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[28];
  v1 = v0[29];
  v3 = v0[27];
  swift_task_dealloc(v0[35]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_10050E104, v0[31], v0[32]);
}

uint64_t sub_10050E104()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 240));

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050E164(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 312);
  *(_QWORD *)(*v2 + 320) = a1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = *(_QWORD *)(v3 + 248);
    v6 = *(_QWORD *)(v3 + 256);
    v7 = sub_10050E2A4;
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 248);
    v6 = *(_QWORD *)(v3 + 256);
    v7 = sub_10050E1D8;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10050E1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 240));
  v1 += 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = *(void **)(v0 + 320);
  v4 = *(void **)(v0 + 272);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView));

    objc_msgSend(v6, "setImage:", v3);
    v4 = v6;
  }

  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050E2A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 240));

  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10050E2FC@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

void sub_10050E328()
{
  char *v0;
  char *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_super v20;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  objc_msgSendSuper2(&v20, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView], "setImage:", 0);
  v1 = &v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation
                                                    + 8];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  swift_bridgeObjectRelease(v2, v3, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  swift_release(v10);
  v11 = &v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title
                                                     + 8];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
}

id sub_10050E410()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell()
{
  return objc_opt_self(_TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell);
}

uint64_t sub_10050E4F0(void **a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject(&unk_1007A6068, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  v7 = v5;
  swift_retain(a3);
  v8 = sub_100047110(&qword_100827568);
  return Promise.init(asyncOperation:)(sub_10050EA38, v6, v8);
}

void sub_10050E574(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;

  v7 = *a5;
  a3(&v8, &v7);
  v6 = v8;
  v9 = 0;
  a1(&v8);
  sub_1003A34FC(v6, 0);
}

void sub_10050E5F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_insetContentView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = (void *)UIView.withContentMode(_:)(2);

  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v7, "setCornerRadius:", 3.0);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v6, "setBackgroundColor:", v8);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v4] = v6;
  v9 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 1);
  if (qword_10081DF80 != -1)
    swift_once(&qword_10081DF80, sub_10050D01C);
  objc_msgSend(v10, "setFont:", qword_100838948);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v9] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setLineBreakMode:", 0);
  objc_msgSend(v12, "setNumberOfLines:", 1);
  if (qword_10081DF88 != -1)
    swift_once(&qword_10081DF88, sub_10050D02C);
  objc_msgSend(v12, "setFont:", qword_100838950);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v11] = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  v13 = &v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/SeymourWorkoutRecommendationCollectionViewCell.swift", 63, 2, 114, 0);
  __break(1u);
}

uint64_t sub_10050E8EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10050E910(void **a1)
{
  uint64_t v1;

  return sub_10050E4F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10050E918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100047110(&qword_100822168);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10050E994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(sub_100047110(&qword_100822168) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10039B39C(a1, a2, v2 + v6, *v7, v7[1]);
}

double sub_10050E9FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100406230(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10050EA0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10050EA38(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_10050E574(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

void destroy for AwardsCardFactory(uint64_t a1)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);

}

uint64_t initializeWithCopy for AwardsCardFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = v5;
  v9 = v6;
  v10 = v7;
  return a1;
}

_QWORD *assignWithCopy for AwardsCardFactory(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  sub_1000F1A58(a1, a2);
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  v7 = (void *)a2[6];
  v8 = (void *)a1[6];
  a1[6] = v7;
  v9 = v7;

  v10 = (void *)a2[7];
  v11 = (void *)a1[7];
  a1[7] = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for AwardsCardFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for AwardsCardFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardsCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardsCardFactory()
{
  return &type metadata for AwardsCardFactory;
}

_QWORD *sub_10050EC4C(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  return sub_10050EE44(a1, a2, a3);
}

uint64_t sub_10050EC60(uint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v8)(__int128 *);
  unint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(__int128 *);
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD *v29;

  v4 = a3;
  v5 = _swiftEmptyArrayStorage;
  v29 = _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = (uint64_t (*)(__int128 *))result;
    v9 = 0;
    v10 = a3 + 32;
    v23 = (uint64_t (*)(__int128 *))result;
    v24 = a3;
    v22 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      sub_1000252E0(v10, (uint64_t)v28);
      v5 = a2;
      v11 = v8(v28);
      if (v3)
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v28);
        swift_bridgeObjectRelease(v4);
        swift_release(v29);
        return (uint64_t)v5;
      }
      if ((v11 & 1) != 0)
      {
        sub_10002411C(v28, (uint64_t)v25);
        v12 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        {
          sub_10012176C(0, v12[2] + 1, 1);
          v12 = v29;
        }
        v14 = v12[2];
        v13 = v12[3];
        if (v14 >= v13 >> 1)
          sub_10012176C(v13 > 1, v14 + 1, 1);
        v15 = v26;
        v16 = v27;
        v17 = sub_10017C044((uint64_t)v25, v26);
        __chkstk_darwin(v17);
        v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1003C5B8C(v14, (uint64_t)v19, (uint64_t *)&v29, v15, v16);
        result = _s10FitnessApp24HistoryViewActionContextVwxx_0(v25);
        v8 = v23;
        v4 = v24;
        v6 = v22;
      }
      else
      {
        result = _s10FitnessApp24HistoryViewActionContextVwxx_0(v28);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return (uint64_t)v5;
  }
  return result;
}

_QWORD *sub_10050EE44(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = _swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

void sub_10050EFE8(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  _QWORD *v7;
  _QWORD *v8;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  char *v44;
  int v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  int *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  int v64;
  int *v65;
  char *v66;
  char *v67;
  id v68;
  int v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;

  v8 = v7;
  v69 = a6;
  v68 = a5;
  v13 = a3;
  v14 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v67 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110((uint64_t *)&unk_10082E690);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v66 = (char *)&v62 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v62 - v22;
  v24 = type metadata accessor for AwardsCard(0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13 < 3 || a1 ^ 3 | a2)
  {
    *(_QWORD *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
  }
  else
  {
    v65 = (int *)v25;
    v64 = a4 & 1;
    v28 = v8[3];
    v29 = v8[4];
    sub_100016804(v8, v28);
    v30 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()(v28, v29);
    v31 = v30;
    if ((unint64_t)v30 >> 62)
    {
      if (v30 < 0)
        v61 = v30;
      else
        v61 = v30 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v30);
      v32 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease(v31);
    }
    else
    {
      v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v33 = v14;
    v34 = v70;
    if (v32 == 3 && (v63 = (id)sub_10050F4E8()) != 0)
    {
      v62 = v31;
      sub_100021CC0((uint64_t)v68, (uint64_t)v71, &qword_100832410);
      v35 = v72;
      if (v72)
      {
        v36 = v73;
        sub_100016804(v71, v72);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v23, 0, 1, v33);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v71);
      }
      else
      {
        sub_10001BE90((uint64_t)v71, &qword_100832410);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v23, 1, 1, v33);
      }
      v41 = (void *)v8[5];
      v40 = (void *)v8[6];
      v42 = (void *)v8[7];
      v43 = (uint64_t)v66;
      v44 = &v27[v65[5]];
      *(_OWORD *)v44 = xmmword_1006235B0;
      v44[16] = 3;
      sub_100021CC0((uint64_t)v23, v43, (uint64_t *)&unk_10082E690);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v43, 1, v33);
      v68 = v63;
      v46 = v40;
      v47 = v41;
      v48 = v42;
      if (v45 == 1)
      {
        v49 = v42;
        v50 = v41;
        v51 = v40;
        v52 = v43;
        v53 = v67;
        UUID.init()(v48);
        v54 = (uint64_t)v23;
        v55 = v53;
        sub_10001BE90(v54, (uint64_t *)&unk_10082E690);
        v56 = v52;
        v40 = v51;
        v41 = v50;
        v42 = v49;
        sub_10001BE90(v56, (uint64_t *)&unk_10082E690);
        v57 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
      }
      else
      {
        sub_10001BE90((uint64_t)v23, (uint64_t *)&unk_10082E690);
        v57 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
        v55 = v67;
        v57(v67, v43, v33);
      }
      v58 = v62;
      v57(v27, (uint64_t)v55, v33);
      v59 = v65;
      v27[v65[6]] = v64;
      v27[v59[7]] = v69 & 1;
      v27[v59[8]] = 1;
      *(_QWORD *)&v27[v59[9]] = v58;
      *(_QWORD *)&v27[v59[10]] = v63;
      *(_QWORD *)&v27[v59[11]] = v40;
      *(_QWORD *)&v27[v59[12]] = v41;
      *(_QWORD *)&v27[v59[13]] = v42;
      *(_QWORD *)(a7 + 24) = v59;
      *(_QWORD *)(a7 + 32) = &off_100793248;
      v60 = sub_10004C480((_QWORD *)a7);
      sub_100047C88((uint64_t)v27, (uint64_t)v60, type metadata accessor for AwardsCard);

    }
    else
    {
      swift_bridgeObjectRelease(v31);
      sub_100021CC0((uint64_t)v68, (uint64_t)v71, &qword_100832410);
      v37 = v72;
      if (v72)
      {
        v38 = v73;
        sub_100016804(v71, v72);
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v19, 0, 1, v33);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v71);
      }
      else
      {
        sub_10001BE90((uint64_t)v71, &qword_100832410);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v19, 1, 1, v33);
      }
      *(_QWORD *)(a7 + 24) = v65;
      *(_QWORD *)(a7 + 32) = &off_100793248;
      v39 = sub_10004C480((_QWORD *)a7);
      sub_10028CBFC((uint64_t)v19, v64, v69 & 1, 0, 0, 0, 0, 0, (uint64_t)v39, 0);
    }
  }
}

uint64_t sub_10050F4E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, _QWORD, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  char v42;
  id v43;
  id v44;
  char v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t j;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, _QWORD, uint64_t);
  _QWORD *v72;
  unint64_t v73;

  v1 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[3];
  v6 = v0[4];
  v72 = v0;
  sub_100016804(v0, v5);
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v7(v4, enum case for AAUIAwardsDataProviderSection.limitedEdtion(_:), v1);
  v8 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)(v4, v5, v6);
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  v73 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v8);
    v17 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_24;
    goto LABEL_19;
  }
  if (v8 < 0)
    v18 = v8;
  else
    v18 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v8);
  if (!v10)
    goto LABEL_18;
LABEL_3:
  if (v10 < 1)
    goto LABEL_47;
  v70 = v9;
  v71 = v7;
  for (i = 0; i != v10; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
    else
      v14 = *(id *)(v8 + 8 * i + 32);
    v15 = v14;
    v16 = objc_msgSend(v14, "unearned");
    if ((_DWORD)v16)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v12 = *(_QWORD *)(v73 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v15);
      specialized ContiguousArray._endMutation()(v13);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v8);
  v17 = v73;
  v9 = v70;
  v7 = v71;
  if ((v73 & 0x8000000000000000) == 0)
  {
LABEL_19:
    if ((v17 & 0x4000000000000000) != 0)
      goto LABEL_24;
    if (*(_QWORD *)(v17 + 16))
      goto LABEL_21;
    goto LABEL_25;
  }
LABEL_24:
  while (1)
  {
    swift_bridgeObjectRetain(v17);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_release(v17);
    if (!v20)
      break;
LABEL_21:
    if ((v17 & 0xC000000000000001) != 0)
      goto LABEL_76;
    if (*(_QWORD *)(v17 + 16))
      goto LABEL_73;
    __break(1u);
  }
LABEL_25:
  swift_release(v17);
  v21 = v72[3];
  v22 = v72[4];
  sub_100016804(v72, v21);
  v7(v4, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v1);
  v2 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)(v4, v21, v22);
  v9(v4, v1);
  if ((unint64_t)v2 >> 62)
    goto LABEL_48;
  v23 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  while (v23)
  {
    v24 = v2 & 0xC000000000000001;
    v25 = 4;
    v26 = &selRef_systemBlueColor;
    v70 = (void (*)(char *, uint64_t))v23;
    v71 = (void (*)(char *, _QWORD, uint64_t))v2;
    v69 = v2 & 0xC000000000000001;
    while (1)
    {
      v31 = v24 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25 - 4, v2) : *(id *)(v2 + 8 * v25);
      v32 = v31;
      v33 = v25 - 3;
      if (__OFADD__(v25 - 4, 1))
        break;
      if (!objc_msgSend(v31, v26[74]))
        goto LABEL_30;
      v34 = objc_msgSend(v32, "progress");
      if (!v34)
        goto LABEL_30;
      v35 = v34;
      v36 = objc_msgSend(v32, "goal");
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v35, "_unit");
        v39 = (void *)objc_opt_self(HKUnit);
        v40 = v38;
        v41 = objc_msgSend(v39, "countUnit");
        sub_100105CC8();
        v42 = static NSObject.== infix(_:_:)(v41, v40);

        if ((v42 & 1) != 0)
        {
          objc_msgSend(v37, "doubleValueForUnit:", v40);
          v28 = v27;
          objc_msgSend(v35, "doubleValueForUnit:", v40);
          v30 = v29;

          v23 = (uint64_t)v70;
          v2 = (uint64_t)v71;
          v24 = v69;
          if (v28 - v30 <= 1.0)
            goto LABEL_45;
          goto LABEL_29;
        }
        v43 = v40;
        v44 = objc_msgSend(v39, "largeCalorieUnit");
        v45 = static NSObject.== infix(_:_:)(v44, v43);

        v24 = v69;
        if ((v45 & 1) != 0)
        {
          objc_msgSend(v35, "doubleValueForUnit:", v43);
          v47 = v46;
          objc_msgSend(v37, "doubleValueForUnit:", v43);
          v49 = v48;

          v23 = (uint64_t)v70;
          v2 = (uint64_t)v71;
          if (v49 * 0.9 < v47)
          {
LABEL_45:
            swift_bridgeObjectRelease_n(v2, 2);
            return (uint64_t)v32;
          }
          goto LABEL_29;
        }

        v23 = (uint64_t)v70;
        v2 = (uint64_t)v71;
      }
      else
      {
        v37 = v32;
        v43 = v35;
      }

      v32 = v43;
LABEL_29:
      v26 = &selRef_systemBlueColor;
LABEL_30:

      ++v25;
      if (v33 == v23)
        goto LABEL_52;
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    if (v2 < 0)
      v50 = v2;
    else
      v50 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v23 = _CocoaArrayWrapper.endIndex.getter(v50);
  }
LABEL_52:
  swift_bridgeObjectRelease_n(v2, 2);
  v51 = v72[3];
  v52 = v72[4];
  sub_100016804(v72, v51);
  v53 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()(v51, v52);
  v54 = v53;
  v73 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v53 >> 62)
  {
    if (v53 >= 0)
      v53 &= 0xFFFFFFFFFFFFFF8uLL;
    v55 = _CocoaArrayWrapper.endIndex.getter(v53);
    if (v55)
    {
LABEL_54:
      if (v55 < 1)
      {
        __break(1u);
        goto LABEL_85;
      }
      for (j = 0; j != v55; ++j)
      {
        if ((v54 & 0xC000000000000001) != 0)
          v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v54);
        else
          v58 = *(id *)(v54 + 8 * j + 32);
        v59 = v58;
        v60 = objc_msgSend(v58, "unearned");
        if ((v60 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v60);
          v51 = *(_QWORD *)(v73 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v51);
          v57 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v59);
          specialized ContiguousArray._endMutation()(v57);
        }
      }
      swift_bridgeObjectRelease(v54);
      v17 = v73;
      if ((v73 & 0x8000000000000000) != 0)
        goto LABEL_77;
      goto LABEL_69;
    }
  }
  else
  {
    v55 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v55)
      goto LABEL_54;
  }
  swift_bridgeObjectRelease(v54);
  v17 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_77;
LABEL_69:
  if ((v17 & 0x4000000000000000) == 0)
  {
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_78;
    goto LABEL_71;
  }
LABEL_77:
  swift_bridgeObjectRetain(v17);
  v51 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_release(v17);
  if (v51)
  {
LABEL_71:
    if ((v17 & 0xC000000000000001) != 0)
    {
LABEL_76:
      v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
      goto LABEL_74;
    }
    if (*(_QWORD *)(v17 + 16))
    {
LABEL_73:
      v61 = *(id *)(v17 + 32);
LABEL_74:
      v32 = v61;
      swift_release(v17);
      return (uint64_t)v32;
    }
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
LABEL_78:
  swift_release(v17);
  v64 = v72[3];
  v65 = v72[4];
  sub_100016804(v72, v64);
  v51 = dispatch thunk of AAUIAwardsDataProviding.topThreeAchievements()(v64, v65);
  if (!((unint64_t)v51 >> 62))
  {
    result = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_80;
LABEL_90:
    swift_bridgeObjectRelease(v51);
    return 0;
  }
LABEL_86:
  if (v51 < 0)
    v67 = v51;
  else
    v67 = v51 & 0xFFFFFFFFFFFFFF8;
  result = _CocoaArrayWrapper.endIndex.getter(v67);
  if (!result)
    goto LABEL_90;
LABEL_80:
  if ((v51 & 0xC000000000000001) != 0)
  {
    v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v51);
    goto LABEL_83;
  }
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v66 = *(id *)(v51 + 32);
LABEL_83:
    v32 = v66;
    swift_bridgeObjectRelease(v51);
    return (uint64_t)v32;
  }
  __break(1u);
  return result;
}

uint64_t sub_10050FBF8()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10050FC28()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10050FC58()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_100008398(v0, qword_10086AD78);
  sub_10003CE9C(v0, (uint64_t)qword_10086AD78);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x80000001006A4190);
}

uint64_t sub_10050FCB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v18;

  v0 = sub_100047110(&qword_100838B68);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100838B70);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1002EFC84();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 3, &type metadata for WorkoutTotalDistanceIntent, v6);
  v7._countAndFlagsBits = 0x746F7420776F6853;
  v7._object = (void *)0xEB00000000206C61;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100643348);
  v9 = sub_100047110(&qword_100838B78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0x636E617473696420;
  v10._object = (void *)0xEA00000000002065;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100643370);
  v12 = sub_100047110(&qword_100838B80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(&unk_100643398);
  v15 = sub_100047110(&qword_100838B88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v14, v3, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for WorkoutTotalDistanceIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for WorkoutTotalDistanceIntent, v6);
}

uint64_t sub_10050FEBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IntentDialog(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100821E10);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10050FF68, 0, 0);
}

uint64_t sub_10050FF68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v0 + 88) = **(_QWORD **)(v0 + 24);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 112));
  v1 = qword_1006433C0[*(char *)(v0 + 112)];
  v2 = (_QWORD *)swift_task_alloc(dword_100838B5C);
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_10050FFE0;
  return sub_100510280(*(_QWORD *)(v0 + 80), v1);
}

uint64_t sub_10050FFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100510234;
  else
    v3 = sub_100510044;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100510044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  Swift::String v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 113));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v31 = *(_QWORD *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v33 = *(_QWORD *)(v0 + 40);
  v34 = *(_QWORD *)(v0 + 72);
  v4 = sub_1005146A4(v1, qword_1006433C0[*(char *)(v0 + 113)]);
  v6 = v5;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 3);
  v7._countAndFlagsBits = 0x746F742072756F59;
  v7._object = (void *)0xEB00000000206C61;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 114));
  v8 = sub_1005129EC();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(v0 + 114, &type metadata for WorkoutTotalDistanceIntent.ModalityType, v8);
  v9._countAndFlagsBits = 0x636E617473696420;
  v9._object = (void *)0xED00002073692065;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  v10._countAndFlagsBits = v4;
  v10._object = v6;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v10);
  swift_bridgeObjectRelease(v6, v11, v12, v13, v14, v15, v16, v17);
  v18._countAndFlagsBits = 0x20726F6620;
  v18._object = (void *)0xE500000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  sub_100510B3C();
  object = (CHWorkoutDetailHeartRateTableViewCell *)v19._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v19);
  swift_bridgeObjectRelease(object, v21, v22, v23, v24, v25, v26, v27);
  v28._countAndFlagsBits = 46;
  v28._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
  IntentDialog.init(stringInterpolation:)(v3);
  v29 = sub_100028384(&qword_100838B60, &qword_100821E10, (uint64_t)&protocol conformance descriptor for Measurement<A>);
  static IntentResult.result<A>(value:dialog:)(v1, v2, v31, v29);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v2, v33);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v1, v31);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100510234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100510280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_100047110(&qword_100824858);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[10] = v7;
  v3[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateInterval(0);
  v3[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[13] = v9;
  v3[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100510338, 0, 0);
}

uint64_t sub_100510338()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void *v6;
  Class isa;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  Class v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0[14];
  v2 = v0[10];
  v3 = v0[11];
  v4 = v0[9];
  IntentParameter.wrappedValue.getter(v0 + 20);
  v5 = *((unsigned __int8 *)v0 + 160);
  IntentParameter.wrappedValue.getter((_QWORD *)((char *)v0 + 161));
  sub_10051111C(v5, *((_BYTE *)v0 + 161), v1);
  v6 = (void *)objc_opt_self(HKQuery);
  DateInterval.start.getter(v6);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  v9 = v8(v3, v4);
  DateInterval.end.getter(v9);
  v10 = Date._bridgeToObjectiveC()().super.isa;
  v8(v3, v4);
  v11 = objc_msgSend(v6, "predicateForSamplesWithStartDate:endDate:options:", isa, v10, 1);
  v0[15] = v11;

  v12 = sub_100047110(&qword_100824868);
  v13 = sub_100047110(&qword_100824860);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100622F90;
  v15 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v16 = v11;
  static HKSamplePredicate.workout(_:)(v11, v15);

  v17 = sub_100047110(&qword_100824870);
  v18 = sub_100047110(&qword_100824878);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100622F90;
  KeyPath = swift_getKeyPath(&unk_100643320);
  SortDescriptor.init<A>(_:order:)(KeyPath, 1);
  HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v14, v19, 0, 1, v15);
  AppDependency.wrappedValue.getter(v0 + 2);
  v21 = v0[2];
  v0[16] = v21;
  v22 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
  v0[17] = v22;
  *v22 = v0;
  v22[1] = sub_1005105B0;
  return HKSampleQueryDescriptor.result(for:)(v21, v0[6]);
}

uint64_t sub_1005105B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v5 = *(void **)(*v2 + 128);
  v4 = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc(v4);

  if (v1)
    v6 = sub_100510AA8;
  else
    v6 = sub_100510620;
  return swift_task_switch(v6, 0, 0);
}

id sub_100510620()
{
  uint64_t v0;
  id result;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  char **v16;
  id v17;
  void *v18;
  id v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t i;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  double v53;
  double v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;

  result = (id)_HKWorkoutDistanceTypeForActivityType(*(_QWORD *)(v0 + 32));
  v86 = result;
  if (result)
  {
    v9 = *(_QWORD *)(v0 + 144);
    if ((unint64_t)v9 >> 62)
      goto LABEL_40;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
    while (v10)
    {
      v12 = 0;
      v13 = v9 & 0xC000000000000001;
      v14 = v9 & 0xFFFFFFFFFFFFFF8;
      v81 = v10;
      v82 = v11 + 1;
      v15 = 0.0;
      v16 = &selRef_systemBlueColor;
      v79 = v9 & 0xFFFFFFFFFFFFFF8;
      v80 = v9 & 0xC000000000000001;
      while (1)
      {
        if (v13)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, *(_QWORD *)(v0 + 144));
        }
        else
        {
          if (v12 >= *(_QWORD *)(v14 + 16))
            goto LABEL_38;
          v17 = *((id *)&v82->super.super.super.super.isa + v12);
        }
        v18 = v17;
        if (__OFADD__(v12++, 1))
          break;
        v20 = *(id *)(v0 + 32);
        if (objc_msgSend(v17, v16[160]) == v20)
        {
          v21 = objc_msgSend(v18, "statisticsForType:", v86);
          if (v21)
          {
            v22 = v21;
            v9 = (uint64_t)objc_msgSend(v21, "sumQuantity");

            if (v9)
            {
              v23 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
              objc_msgSend((id)v9, "doubleValueForUnit:", v23);
              v25 = v24;

              v15 = v15 + v25;
              goto LABEL_6;
            }
          }
LABEL_5:

          goto LABEL_6;
        }
        if (objc_msgSend(v18, v16[160]) != (id)82)
          goto LABEL_5;
        v84 = v18;
        v26 = objc_msgSend(v18, "workoutActivities");
        v27 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
        v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

        if ((unint64_t)v28 >> 62)
        {
          if (v28 < 0)
            v55 = v28;
          else
            v55 = v28 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v28);
          v36 = _CocoaArrayWrapper.endIndex.getter(v55);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v28, v56, v57, v58, v59, v60, v61, v62);
          if (!v36)
          {
LABEL_35:
            swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v28, v29, v30, v31, v32, v33, v34, v35);

            v16 = &selRef_systemBlueColor;
            goto LABEL_6;
          }
        }
        else
        {
          v36 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v36)
            goto LABEL_35;
        }
        if (v36 < 1)
          goto LABEL_39;
        for (i = 0; i != v36; ++i)
        {
          if ((v28 & 0xC000000000000001) != 0)
            v45 = (CHWorkoutDetailHeartRateTableViewCell *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
          else
            v45 = (CHWorkoutDetailHeartRateTableViewCell *)*(id *)(v28 + 8 * i + 32);
          v9 = (uint64_t)v45;
          v46 = *(id *)(v0 + 32);
          v47 = -[CHWorkoutDetailHeartRateTableViewCell workoutConfiguration](v45, "workoutConfiguration");
          v48 = objc_msgSend(v47, "activityType");

          if (v48 == v46
            && (v49 = objc_msgSend((id)v9, "statisticsForType:", v86)) != 0
            && (v50 = v49,
                v51 = objc_msgSend(v49, "sumQuantity"),
                v50,
                v51))
          {
            v52 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
            objc_msgSend(v51, "doubleValueForUnit:", v52);
            v54 = v53;

            v15 = v15 + v54;
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v28, v38, v39, v40, v41, v42, v43, v44);

        v13 = v80;
        v10 = v81;
        v14 = v79;
        v16 = &selRef_systemBlueColor;
LABEL_6:
        if (v12 == v10)
        {
          v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      if (v9 < 0)
        v63 = v9;
      else
        v63 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v63);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v64, v65, v66, v67, v68, v69, v70);
      v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
    }
    v15 = 0.0;
LABEL_45:
    v72 = *(_QWORD *)(v0 + 112);
    v71 = *(void **)(v0 + 120);
    v73 = *(_QWORD *)(v0 + 104);
    v83 = *(_QWORD *)(v0 + 96);
    v85 = *(_QWORD *)(v0 + 88);
    v75 = *(_QWORD *)(v0 + 56);
    v74 = *(_QWORD *)(v0 + 64);
    v76 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRelease(v11, v2, v3, v4, v5, v6, v7, v8);
    v77 = objc_msgSend((id)objc_opt_self(NSUnitLength), "meters");
    v78 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v77, v78, v15);

    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v83);
    swift_task_dealloc(v72);
    swift_task_dealloc(v85);
    swift_task_dealloc(v74);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100510AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100510B3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  id v60;
  void *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  uint64_t v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;

  v0 = type metadata accessor for Date(0);
  v102 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v99 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v101 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents(0);
  v99 = *(_QWORD *)(v6 - 8);
  v100 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v99 - v10;
  v12 = type metadata accessor for DateInterval(0);
  v105 = *(_QWORD *)(v12 - 8);
  v106 = v12;
  __chkstk_darwin(v12);
  v108 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v107, "setDateStyle:", 3);
  IntentParameter.wrappedValue.getter(&v109);
  v103 = v3;
  v104 = v0;
  if ((v109 & 1) != 0)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(1953718636, 0xE400000000000000, 0x746E6572727563, 0xE700000000000000, 0);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v22, v23, v24, v25, v26, v27, v28);
    if ((v21 & 1) != 0)
      v29 = 1936287860;
    else
      v29 = 1953718636;
  }
  else
  {
    v29 = 1936287860;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v14, v15, v16, v17, v18, v19, v20);
  }
  IntentParameter.wrappedValue.getter(&v109);
  v30 = v109;
  IntentParameter.wrappedValue.getter(&v109);
  sub_10051111C(v30, v109, v108);
  v31 = IntentParameter.wrappedValue.getter(&v109);
  if (!(_BYTE)v109)
  {
    v109 = v29;
    v110 = 0xE400000000000000;
    v70._countAndFlagsBits = 0x6B65657720;
    v70._object = (void *)0xE500000000000000;
    String.append(_:)(v70);

LABEL_21:
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v108, v106);
    return;
  }
  if (v109 != 1)
  {
    static Calendar.current.getter(v31);
    v71 = sub_100047110((uint64_t *)&unk_100828720);
    v72 = type metadata accessor for Calendar.Component(0);
    v73 = *(_QWORD *)(v72 - 8);
    v74 = *(unsigned __int8 *)(v73 + 80);
    v75 = (v74 + 32) & ~v74;
    v76 = swift_allocObject(v71, v75 + *(_QWORD *)(v73 + 72), v74 | 7);
    *(_OWORD *)(v76 + 16) = xmmword_100622F90;
    v77 = v76 + v75;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 104))(v77, enum case for Calendar.Component.year(_:), v72);
    v78 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v76);
    swift_setDeallocating(v76);
    swift_arrayDestroy(v77, 1, v72);
    v79 = swift_deallocClassInstance(v76, 32, 7);
    DateInterval.start.getter(v79);
    Calendar.dateComponents(_:from:)(v78, v2);
    swift_bridgeObjectRelease(v78, v80, v81, v82, v83, v84, v85, v86);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v2, v104);
    v87 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v5, v103);
    v88 = DateComponents.year.getter(v87);
    if ((v89 & 1) != 0)
    {
      v109 = v29;
      v110 = 0xE400000000000000;
      v98._countAndFlagsBits = 0x7261657920;
      v98._object = (void *)0xE500000000000000;
      String.append(_:)(v98);
    }
    else
    {
      v96 = v88;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v89, v90, v91, v92, v93, v94, v95);
      v109 = v96;
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    }

    (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v100);
    goto LABEL_21;
  }
  static Calendar.current.getter(v31);
  v32 = sub_100047110((uint64_t *)&unk_100828720);
  v33 = type metadata accessor for Calendar.Component(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject(v32, v36 + *(_QWORD *)(v34 + 72), v35 | 7);
  *(_OWORD *)(v37 + 16) = xmmword_100622F90;
  v38 = v37 + v36;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v38, enum case for Calendar.Component.month(_:), v33);
  v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v37);
  swift_setDeallocating(v37);
  swift_arrayDestroy(v38, 1, v33);
  v40 = swift_deallocClassInstance(v37, 32, 7);
  DateInterval.start.getter(v40);
  Calendar.dateComponents(_:from:)(v39, v2);
  swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v2, v104);
  v48 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v5, v103);
  v49 = DateComponents.month.getter(v48);
  if ((v50 & 1) != 0)
  {
    v109 = v29;
    v110 = 0xE400000000000000;
    v97._countAndFlagsBits = 0x68746E6F6D20;
    v97._object = (void *)0xE600000000000000;
    String.append(_:)(v97);

    goto LABEL_18;
  }
  v57 = v49;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v50, v51, v52, v53, v54, v55, v56);
  v58 = v57 - 1;
  v59 = v107;
  if (__OFSUB__(v57, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  v60 = objc_msgSend(v107, "monthSymbols");
  if (v60)
  {
    v61 = v60;
    v62 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, &type metadata for String);

    if ((v58 & 0x8000000000000000) == 0)
    {
      if (v58 < *(_QWORD *)v62->cellPadding)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v62[1].heartRateController[16 * v58]);
        swift_bridgeObjectRelease(v62, v63, v64, v65, v66, v67, v68, v69);

LABEL_18:
        (*(void (**)(char *, uint64_t))(v99 + 8))(v11, v100);
        goto LABEL_21;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10051111C@<X0>(int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  int v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v101 = a1;
  v100 = a3;
  v4 = type metadata accessor for Calendar.Component(0);
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  __chkstk_darwin(v4);
  v97 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v92 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v91 = (char *)&v85 - v9;
  __chkstk_darwin(v10);
  v90 = (char *)&v85 - v11;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v94 = (char *)&v85 - v16;
  __chkstk_darwin(v17);
  v96 = (uint64_t)&v85 - v18;
  __chkstk_darwin(v19);
  v88 = (char *)&v85 - v20;
  __chkstk_darwin(v21);
  v93 = (char *)&v85 - v22;
  __chkstk_darwin(v23);
  v95 = (uint64_t)&v85 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v85 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v85 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v85 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v85 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v85 - v38;
  __chkstk_darwin(v40);
  v42 = (char *)&v85 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v85 - v44;
  v46 = type metadata accessor for Calendar(0);
  v102 = *(_QWORD *)(v46 - 8);
  v103 = v46;
  __chkstk_darwin(v46);
  v104 = (char *)&v85 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = static Calendar.current.getter(v48);
  Date.init()(v49);
  if ((a2 & 1) == 0)
  {
    sub_10051183C(v101, (uint64_t)v45, (uint64_t)v42);
    v50 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v50(v39, v42, v12);
    v50(v36, v45, v12);
    DateInterval.init(start:end:)(v39, v36);
    v51 = *(void (**)(char *, uint64_t))(v13 + 8);
    v51(v42, v12);
LABEL_15:
    v58 = v104;
    goto LABEL_19;
  }
  v85 = v42;
  v86 = v13;
  v87 = v39;
  if (!(_BYTE)v101)
  {
    sub_10051183C(0, (uint64_t)v45, (uint64_t)v33);
    v65 = v97;
    v66 = v98;
    v67 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, enum case for Calendar.Component.weekOfYear(_:), v99);
    v68 = (uint64_t)v90;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v65, -1, v33, 0);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
    v69 = v86;
    v70 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v70(v27, v45, v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v68, 1, v12) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v30, v27, v12);
      sub_10018DFE8(v68);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v27, v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v30, v68, v12);
    }
    v82 = v85;
    v70(v85, v30, v12);
    v83 = v87;
    v70(v87, v33, v12);
    DateInterval.init(start:end:)(v82, v83);
    v51 = *(void (**)(char *, uint64_t))(v69 + 8);
    v51(v30, v12);
    v51(v33, v12);
    goto LABEL_15;
  }
  if (v101 == 1)
  {
    v52 = v95;
    sub_10051183C(1, (uint64_t)v45, v95);
    v54 = v97;
    v53 = v98;
    v55 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, enum case for Calendar.Component.month(_:), v99);
    v56 = (uint64_t)v91;
    v57 = v52;
    v58 = v104;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v54, -1, v57, 0);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    v59 = v86;
    v60 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v61 = v88;
    v60(v88, v45, v12);
    v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v56, 1, v12);
    v63 = v87;
    if (v62 == 1)
    {
      v64 = v93;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v93, v61, v12);
      sub_10018DFE8(v56);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v12);
      v64 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v93, v56, v12);
    }
    v79 = v85;
    v60(v85, v64, v12);
    v80 = v63;
    v81 = v95;
  }
  else
  {
    v71 = v96;
    sub_10051183C(2, (uint64_t)v45, v96);
    v73 = v97;
    v72 = v98;
    v74 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, enum case for Calendar.Component.year(_:), v99);
    v75 = (uint64_t)v92;
    v76 = v71;
    v58 = v104;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v73, -1, v76, 0);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    v59 = v86;
    v60 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v77 = v89;
    v60(v89, v45, v12);
    v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v75, 1, v12);
    v63 = v87;
    if (v78 == 1)
    {
      v64 = v94;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v94, v77, v12);
      sub_10018DFE8(v75);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v77, v12);
      v64 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v94, v75, v12);
    }
    v79 = v85;
    v60(v85, v64, v12);
    v80 = v63;
    v81 = v96;
  }
  v60(v80, (char *)v81, v12);
  DateInterval.init(start:end:)(v79, v63);
  v51 = *(void (**)(char *, uint64_t))(v59 + 8);
  v51(v64, v12);
  v51((char *)v81, v12);
LABEL_19:
  v51(v45, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v58, v103);
}

uint64_t sub_10051183C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v71;
  uint64_t v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  uint64_t v90;
  SEL v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v112 = a2;
  v114 = a3;
  v4 = type metadata accessor for DateComponents(0);
  v109 = *(_QWORD *)(v4 - 8);
  v110 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v103 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v103 - v11;
  v13 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v13);
  v105 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v106 = (char *)&v103 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v103 - v18;
  v113 = type metadata accessor for Date(0);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v104 = (char *)&v103 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v103 - v25;
  __chkstk_darwin(v27);
  v103 = (char *)&v103 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v103 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v103 - v33;
  v35 = type metadata accessor for Calendar(0);
  v107 = *(_QWORD *)(v35 - 8);
  v108 = v35;
  __chkstk_darwin(v35);
  v37 = (char *)&v103 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v38);
  if (!a1)
  {
    v62 = sub_100047110((uint64_t *)&unk_100828720);
    v63 = type metadata accessor for Calendar.Component(0);
    v64 = *(_QWORD *)(v63 - 8);
    v65 = *(_QWORD *)(v64 + 72);
    v66 = *(unsigned __int8 *)(v64 + 80);
    v67 = (v66 + 32) & ~v66;
    v68 = swift_allocObject(v62, v67 + 2 * v65, v66 | 7);
    *(_OWORD *)(v68 + 16) = xmmword_100620BC0;
    v69 = v68 + v67;
    v70 = *(void (**)(uint64_t, _QWORD, uint64_t))(v64 + 104);
    v70(v69, enum case for Calendar.Component.yearForWeekOfYear(_:), v63);
    v70(v69 + v65, enum case for Calendar.Component.weekOfYear(_:), v63);
    v71 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v68);
    swift_setDeallocating(v68);
    swift_arrayDestroy(v69, 2, v63);
    swift_deallocClassInstance(v68, 32, 7);
    v72 = v112;
    Calendar.dateComponents(_:from:)(v71, v112);
    swift_bridgeObjectRelease(v71, v73, v74, v75, v76, v77, v78, v79);
    Calendar.date(from:)(v12);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v12, v110);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v37, v108);
    v80 = v111;
    v59 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v31, v72, v113);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v19, 1, v59) != 1)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v31, v59);
      v60 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      v60(v34, v19, v59);
      goto LABEL_14;
    }
    v60 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v60(v34, v31, v59);
    v81 = (uint64_t)v19;
LABEL_9:
    sub_10018DFE8(v81);
LABEL_14:
    v100 = v114;
    v101 = v34;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v60)(v100, v101, v59);
  }
  if (a1 != 1)
  {
    v82 = sub_100047110((uint64_t *)&unk_100828720);
    v83 = type metadata accessor for Calendar.Component(0);
    v84 = *(_QWORD *)(v83 - 8);
    v85 = *(unsigned __int8 *)(v84 + 80);
    v86 = (v85 + 32) & ~v85;
    v87 = swift_allocObject(v82, v86 + *(_QWORD *)(v84 + 72), v85 | 7);
    *(_OWORD *)(v87 + 16) = xmmword_100622F90;
    v88 = v87 + v86;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v88, enum case for Calendar.Component.year(_:), v83);
    v89 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v87);
    swift_setDeallocating(v87);
    swift_arrayDestroy(v88, 1, v83);
    swift_deallocClassInstance(v87, 32, 7);
    v90 = v112;
    Calendar.dateComponents(_:from:)(v89, v112);
    swift_bridgeObjectRelease(v89, v91, v92, v93, v94, v95, v96, v97);
    v98 = v105;
    Calendar.date(from:)(v6);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v6, v110);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v37, v108);
    v99 = v111;
    v59 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v21, v90, v113);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v98, 1, v59) != 1)
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v21, v59);
      v60 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
      v34 = v104;
      v60(v104, v98, v59);
      goto LABEL_14;
    }
    v60 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
    v34 = v104;
    v60(v104, v21, v59);
    v81 = (uint64_t)v98;
    goto LABEL_9;
  }
  v39 = sub_100047110((uint64_t *)&unk_100828720);
  v40 = type metadata accessor for Calendar.Component(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_QWORD *)(v41 + 72);
  v43 = *(unsigned __int8 *)(v41 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = swift_allocObject(v39, v44 + 2 * v42, v43 | 7);
  *(_OWORD *)(v45 + 16) = xmmword_100620BC0;
  v46 = v45 + v44;
  v47 = *(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104);
  v47(v46, enum case for Calendar.Component.year(_:), v40);
  v47(v46 + v42, enum case for Calendar.Component.month(_:), v40);
  v48 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v45);
  swift_setDeallocating(v45);
  swift_arrayDestroy(v46, 2, v40);
  swift_deallocClassInstance(v45, 32, 7);
  v49 = v112;
  Calendar.dateComponents(_:from:)(v48, v112);
  swift_bridgeObjectRelease(v48, v50, v51, v52, v53, v54, v55, v56);
  v57 = (uint64_t)v106;
  Calendar.date(from:)(v9);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v9, v110);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v37, v108);
  v58 = v111;
  v59 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v26, v49, v113);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v57, 1, v59) == 1)
  {
    v60 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v61 = v103;
    v60(v103, v26, v59);
    sub_10018DFE8(v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v26, v59);
    v60 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v61 = v103;
    v60(v103, (char *)v57, v59);
  }
  v100 = v114;
  v101 = v61;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v60)(v100, v101, v59);
}

uint64_t sub_100511F14(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086AD90, 0xD000000000000015, 0x80000001006A4270);
}

unint64_t sub_100511F38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double (*v17)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  unint64_t result;
  uint64_t v29;
  uint64_t v30;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100838BA0);
  v11 = *(_QWORD *)(sub_100047110(&qword_100833888) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v29 = 8 * v12;
  v15 = swift_allocObject(v10, v14 + 9 * v12, v13 | 7);
  v30 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_1006342B0;
  v16 = v15 + v14;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x676E696B6C6157, 0xE700000000000000);
  v17 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x772E657275676966, 0xEB000000006B6C61, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x676E696E6E7552, 0xE700000000000000);
  v19.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x722E657275676966, 0xEA00000000006E75, 0, 0, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 2 * v12) = 2;
  LocalizedStringResource.init(stringLiteral:)(0x676E696D6D697753, 0xE800000000000000);
  v20.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000010, 0x80000001006899C0, 0, 0, v20);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 3 * v12) = 3;
  LocalizedStringResource.init(stringLiteral:)(0x676E696C637943, 0xE700000000000000);
  v21.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000014, 0x80000001006899E0, 0, 0, v21);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 4 * v12) = 4;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001006A41F0);
  v22.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD00000000000001ALL, 0x80000001006A4210, 0, 0, v22);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 5 * v12) = 5;
  LocalizedStringResource.init(stringLiteral:)(0x6C6C69686E776F44, 0xEF676E69696B5320);
  v23.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000016, 0x800000010069B650, 0, 0, v23);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 6 * v12) = 6;
  LocalizedStringResource.init(stringLiteral:)(0x72616F62776F6E53, 0xEC000000676E6964);
  v24.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000013, 0x80000001006A4230, 0, 0, v24);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v25 = v29;
  *(_BYTE *)(v16 + v29 - v12) = 7;
  LocalizedStringResource.init(stringLiteral:)(0x676E696C64646150, 0xE800000000000000);
  v26.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x72632E322E72616FLL, 0xED0000646573736FLL, 0, 0, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v25) = 8;
  LocalizedStringResource.init(stringLiteral:)(0x676E69776F52, 0xE600000000000000);
  v27.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000015, 0x80000001006A4250, 0, 0, v27);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  result = sub_100436BC4(v30);
  qword_10086ADA8 = result;
  return result;
}

uint64_t sub_10051255C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100512590 + 4 * byte_100642A20[a1]))(0x676E696B6C6177, 0xE700000000000000);
}

uint64_t sub_100512590()
{
  return 0x676E696E6E7572;
}

unint64_t sub_1005125C8()
{
  return 0xD000000000000012;
}

uint64_t sub_1005125E4()
{
  return 0x6C6C69686E776F64;
}

uint64_t sub_100512608()
{
  return 0x72616F62776F6E73;
}

uint64_t sub_100512628()
{
  return 0x676E696C64646170;
}

uint64_t sub_100512640()
{
  return 0x676E69776F72;
}

void sub_100512654(char *a1)
{
  sub_10038FBA4(*a1);
}

unint64_t sub_100512664()
{
  unint64_t result;

  result = qword_1008389C0;
  if (!qword_1008389C0)
  {
    result = swift_getWitnessTable(&unk_100642A48, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389C0);
  }
  return result;
}

Swift::Int sub_1005126A8()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_1003917A8((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_1005126EC(uint64_t a1)
{
  char *v1;

  sub_1003917A8(a1, *v1);
}

Swift::Int sub_1005126F4(uint64_t a1)
{
  char *v1;
  char v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  sub_1003917A8((uint64_t)v4, v2);
  return Hasher._finalize()();
}

unint64_t sub_100512734@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10051480C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100512760@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10051255C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10051278C()
{
  unint64_t result;

  result = qword_1008389C8;
  if (!qword_1008389C8)
  {
    result = swift_getWitnessTable(&unk_100642B28, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389C8);
  }
  return result;
}

unint64_t sub_1005127D4()
{
  unint64_t result;

  result = qword_1008389D0;
  if (!qword_1008389D0)
  {
    result = swift_getWitnessTable(&unk_100642B60, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389D0);
  }
  return result;
}

unint64_t sub_10051281C()
{
  unint64_t result;

  result = qword_1008389D8;
  if (!qword_1008389D8)
  {
    result = swift_getWitnessTable(&unk_100642AB0, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389D8);
  }
  return result;
}

unint64_t sub_100512864()
{
  unint64_t result;

  result = qword_1008389E0;
  if (!qword_1008389E0)
  {
    result = swift_getWitnessTable(&unk_100642B90, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389E0);
  }
  return result;
}

unint64_t sub_1005128AC()
{
  unint64_t result;

  result = qword_1008389E8;
  if (!qword_1008389E8)
  {
    result = swift_getWitnessTable(&unk_100642BB8, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389E8);
  }
  return result;
}

unint64_t sub_1005128F8()
{
  unint64_t result;

  result = qword_1008389F0;
  if (!qword_1008389F0)
  {
    result = swift_getWitnessTable(&unk_100642C38, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389F0);
  }
  return result;
}

uint64_t sub_10051293C@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DF98, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086AD90, (uint64_t)sub_100511F14, a1);
}

uint64_t sub_100512960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100513AC4(a1, a2, a3, (uint64_t (*)(void))sub_10051296C);
}

unint64_t sub_10051296C()
{
  unint64_t result;

  result = qword_1008389F8;
  if (!qword_1008389F8)
  {
    result = swift_getWitnessTable(&unk_100642AE8, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_1008389F8);
  }
  return result;
}

uint64_t sub_1005129B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10051296C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005129EC()
{
  unint64_t result;

  result = qword_100838A00;
  if (!qword_100838A00)
  {
    result = swift_getWitnessTable(&unk_100642C78, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_100838A00);
  }
  return result;
}

unint64_t sub_100512A34()
{
  unint64_t result;

  result = qword_100838A08;
  if (!qword_100838A08)
  {
    result = swift_getWitnessTable(&unk_100642CA0, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_100838A08);
  }
  return result;
}

unint64_t sub_100512A7C()
{
  unint64_t result;

  result = qword_100838A10;
  if (!qword_100838A10)
  {
    result = swift_getWitnessTable(&unk_100642A70, &type metadata for WorkoutTotalDistanceIntent.ModalityType);
    atomic_store(result, (unint64_t *)&qword_100838A10);
  }
  return result;
}

uint64_t sub_100512AC0(uint64_t a1, uint64_t a2)
{
  return sub_100513C74(a1, a2, &qword_10081DFA0, &qword_10086ADA8, (uint64_t)sub_100511F38);
}

uint64_t sub_100512ADC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005128F8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100512B14()
{
  return sub_100028384(&qword_100838A18, &qword_100838A20, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100512B40(_QWORD *a1@<X8>)
{
  *a1 = &off_1007825A0;
}

uint64_t sub_100512B50(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086ADB0, 0x6E6F697461727544, 0xE800000000000000);
}

unint64_t sub_100512B70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double (*v17)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v18;
  __n128 v19;
  __n128 v20;
  unint64_t result;
  uint64_t v22;
  uint64_t v23;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100838B98);
  v11 = *(_QWORD *)(sub_100047110(&qword_100833878) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v23 = 2 * v12;
  v15 = swift_allocObject(v10, v14 + 3 * v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100624A40;
  v16 = v15 + v14;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(1801807191, 0xE400000000000000);
  v17 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x656C637269632E37, 0xED00006C6C69662ELL, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x68746E6F4DLL, 0xE500000000000000);
  v19.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7261646E656C6163, 0xE800000000000000, 0, 0, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v23) = 2;
  LocalizedStringResource.init(stringLiteral:)(1918985561, 0xE400000000000000);
  v20.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7261646E656C6163, 0xEF656C637269632ELL, 0, 0, v20);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  result = sub_100436BE0(v15);
  qword_10086ADC8 = result;
  return result;
}

uint64_t sub_100512E44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10038FA18(*a1, *a2);
}

unint64_t sub_100512E54()
{
  unint64_t result;

  result = qword_100838A28;
  if (!qword_100838A28)
  {
    result = swift_getWitnessTable(&unk_100642CD8, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A28);
  }
  return result;
}

Swift::Int sub_100512E98()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE500000000000000;
  v3 = 0x68746E6F6DLL;
  if (v1 != 1)
  {
    v3 = 1918985593;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1801807223;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100512F24(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE500000000000000;
  v3 = 0x68746E6F6DLL;
  if (*v1 != 1)
  {
    v3 = 1918985593;
    v2 = 0xE400000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1801807223;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100512F8C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE500000000000000;
  v4 = 0x68746E6F6DLL;
  if (v2 != 1)
  {
    v4 = 1918985593;
    v3 = 0xE400000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 1801807223;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100513014@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100514854(*a1);
  *a2 = result;
  return result;
}

void sub_100513040(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x68746E6F6DLL;
  if (v2 != 1)
  {
    v5 = 1918985593;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1801807223;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_100513090()
{
  unint64_t result;

  result = qword_100838A30;
  if (!qword_100838A30)
  {
    result = swift_getWitnessTable(&unk_100642DB8, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A30);
  }
  return result;
}

unint64_t sub_1005130D8()
{
  unint64_t result;

  result = qword_100838A38;
  if (!qword_100838A38)
  {
    result = swift_getWitnessTable(&unk_100642DF0, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A38);
  }
  return result;
}

unint64_t sub_100513120()
{
  unint64_t result;

  result = qword_100838A40;
  if (!qword_100838A40)
  {
    result = swift_getWitnessTable(&unk_100642D40, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A40);
  }
  return result;
}

unint64_t sub_100513168()
{
  unint64_t result;

  result = qword_100838A48;
  if (!qword_100838A48)
  {
    result = swift_getWitnessTable(&unk_100642E20, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A48);
  }
  return result;
}

unint64_t sub_1005131B0()
{
  unint64_t result;

  result = qword_100838A50;
  if (!qword_100838A50)
  {
    result = swift_getWitnessTable(&unk_100642E48, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A50);
  }
  return result;
}

unint64_t sub_1005131FC()
{
  unint64_t result;

  result = qword_100838A58;
  if (!qword_100838A58)
  {
    result = swift_getWitnessTable(&unk_100642EC8, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A58);
  }
  return result;
}

uint64_t sub_100513240@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DFA8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086ADB0, (uint64_t)sub_100512B50, a1);
}

uint64_t sub_100513264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100513AC4(a1, a2, a3, (uint64_t (*)(void))sub_100513270);
}

unint64_t sub_100513270()
{
  unint64_t result;

  result = qword_100838A60;
  if (!qword_100838A60)
  {
    result = swift_getWitnessTable(&unk_100642D78, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A60);
  }
  return result;
}

uint64_t sub_1005132B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100513270();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005132F0()
{
  unint64_t result;

  result = qword_100838A68;
  if (!qword_100838A68)
  {
    result = swift_getWitnessTable(&unk_100642F08, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A68);
  }
  return result;
}

unint64_t sub_100513338()
{
  unint64_t result;

  result = qword_100838A70;
  if (!qword_100838A70)
  {
    result = swift_getWitnessTable(&unk_100642F30, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A70);
  }
  return result;
}

unint64_t sub_100513380()
{
  unint64_t result;

  result = qword_100838A78;
  if (!qword_100838A78)
  {
    result = swift_getWitnessTable(&unk_100642D00, &type metadata for WorkoutTotalDistanceIntent.Duration);
    atomic_store(result, (unint64_t *)&qword_100838A78);
  }
  return result;
}

uint64_t sub_1005133C4(uint64_t a1, uint64_t a2)
{
  return sub_100513C74(a1, a2, &qword_10081DFB0, &qword_10086ADC8, (uint64_t)sub_100512B70);
}

uint64_t sub_1005133E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005131FC();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100513418()
{
  return sub_100028384(&qword_100838A80, &qword_100838A88, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100513444(_QWORD *a1@<X8>)
{
  *a1 = &off_1007830E8;
}

uint64_t sub_100513454(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086ADD0, 0x65766974616C6552, 0xED0000656D695420);
}

unint64_t sub_100513480()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v17;
  __n128 v18;
  unint64_t result;
  uint64_t v20;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100838B90);
  v11 = *(_QWORD *)(sub_100047110(&qword_100833868) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x746E6572727543, 0xE700000000000000);
  v16 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6B636F6C63, 0xE500000000000000, 0, 0, v17);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v15 + v14 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(1953718604, 0xE400000000000000);
  v18.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000027, 0x80000001006A41C0, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  result = sub_100436BFC(v15);
  qword_10086ADE8 = result;
  return result;
}

uint64_t sub_1005136B8(char *a1, char *a2)
{
  return sub_10038FB08(*a1, *a2);
}

unint64_t sub_1005136C8()
{
  unint64_t result;

  result = qword_100838A90;
  if (!qword_100838A90)
  {
    result = swift_getWitnessTable(&unk_100642F68, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838A90);
  }
  return result;
}

Swift::Int sub_10051370C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 1953718636;
  else
    v2 = 0x746E6572727563;
  if (v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100513784(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 1953718636;
  else
    v2 = 0x746E6572727563;
  if (*v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1005137D8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 1953718636;
  else
    v3 = 0x746E6572727563;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10051384C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007832C0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1005138A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1953718636;
  if (!*v1)
    v2 = 0x746E6572727563;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1005138E4()
{
  unint64_t result;

  result = qword_100838A98;
  if (!qword_100838A98)
  {
    result = swift_getWitnessTable(&unk_100643048, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838A98);
  }
  return result;
}

unint64_t sub_10051392C()
{
  unint64_t result;

  result = qword_100838AA0;
  if (!qword_100838AA0)
  {
    result = swift_getWitnessTable(&unk_100643080, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AA0);
  }
  return result;
}

unint64_t sub_100513974()
{
  unint64_t result;

  result = qword_100838AA8;
  if (!qword_100838AA8)
  {
    result = swift_getWitnessTable(&unk_100642FD0, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AA8);
  }
  return result;
}

unint64_t sub_1005139BC()
{
  unint64_t result;

  result = qword_100838AB0;
  if (!qword_100838AB0)
  {
    result = swift_getWitnessTable(&unk_1006430B0, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AB0);
  }
  return result;
}

unint64_t sub_100513A04()
{
  unint64_t result;

  result = qword_100838AB8;
  if (!qword_100838AB8)
  {
    result = swift_getWitnessTable(&unk_1006430D8, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AB8);
  }
  return result;
}

unint64_t sub_100513A50()
{
  unint64_t result;

  result = qword_100838AC0;
  if (!qword_100838AC0)
  {
    result = swift_getWitnessTable(&unk_100643158, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AC0);
  }
  return result;
}

uint64_t sub_100513A94@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DFB8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086ADD0, (uint64_t)sub_100513454, a1);
}

uint64_t sub_100513AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100513AC4(a1, a2, a3, (uint64_t (*)(void))sub_100513B04);
}

uint64_t sub_100513AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD v5[2];

  v5[0] = a2;
  v5[1] = a4();
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100513B04()
{
  unint64_t result;

  result = qword_100838AC8;
  if (!qword_100838AC8)
  {
    result = swift_getWitnessTable(&unk_100643008, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AC8);
  }
  return result;
}

uint64_t sub_100513B48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100513B04();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100513B84()
{
  unint64_t result;

  result = qword_100838AD0;
  if (!qword_100838AD0)
  {
    result = swift_getWitnessTable(&unk_100643198, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AD0);
  }
  return result;
}

unint64_t sub_100513BCC()
{
  unint64_t result;

  result = qword_100838AD8;
  if (!qword_100838AD8)
  {
    result = swift_getWitnessTable(&unk_1006431C0, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AD8);
  }
  return result;
}

unint64_t sub_100513C14()
{
  unint64_t result;

  result = qword_100838AE0;
  if (!qword_100838AE0)
  {
    result = swift_getWitnessTable(&unk_100642F90, &type metadata for WorkoutTotalDistanceIntent.RelativeTime);
    atomic_store(result, (unint64_t *)&qword_100838AE0);
  }
  return result;
}

uint64_t sub_100513C58(uint64_t a1, uint64_t a2)
{
  return sub_100513C74(a1, a2, &qword_10081DFC0, &qword_10086ADE8, (uint64_t)sub_100513480);
}

uint64_t sub_100513C74(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return swift_bridgeObjectRetain(*a4);
}

uint64_t sub_100513CB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100513A50();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100513CE8()
{
  return sub_100028384(&qword_100838AE8, &qword_100838AF0, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100513D14(_QWORD *a1@<X8>)
{
  *a1 = &off_1007830C0;
}

unint64_t sub_100513D28()
{
  unint64_t result;

  result = qword_100838AF8;
  if (!qword_100838AF8)
  {
    result = swift_getWitnessTable(&unk_100643288, &type metadata for WorkoutTotalDistanceIntent);
    atomic_store(result, (unint64_t *)&qword_100838AF8);
  }
  return result;
}

unint64_t sub_100513D70()
{
  unint64_t result;

  result = qword_100838B00;
  if (!qword_100838B00)
  {
    result = swift_getWitnessTable(&unk_1006432B0, &type metadata for WorkoutTotalDistanceIntent);
    atomic_store(result, (unint64_t *)&qword_100838B00);
  }
  return result;
}

uint64_t sub_100513DB4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006BA688, 1) + 8);
}

uint64_t sub_100513DD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA660, 1);
}

uint64_t sub_100513DE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DF90, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086AD78, (uint64_t)sub_10050FC58, a1);
}

uint64_t sub_100513E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_100838B54);
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_10023AEA4;
  return sub_10050FEBC(a1);
}

double sub_100513E80@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1005141E0((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100513EC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFC84();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t storeEnumTagSinglePayload for WorkoutTotalDistanceIntent.RelativeTime(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100513F34 + 4 * byte_100642A2E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100513F68 + 4 * byte_100642A29[v4]))();
}

uint64_t sub_100513F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100513F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100513F78);
  return result;
}

uint64_t sub_100513F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100513F8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100513F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100513F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent.RelativeTime()
{
  return &type metadata for WorkoutTotalDistanceIntent.RelativeTime;
}

uint64_t storeEnumTagSinglePayload for WorkoutTotalDistanceIntent.Duration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100514000 + 4 * byte_100642A38[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100514034 + 4 * byte_100642A33[v4]))();
}

uint64_t sub_100514034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10051403C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100514044);
  return result;
}

uint64_t sub_100514050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100514058);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10051405C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100514064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent.Duration()
{
  return &type metadata for WorkoutTotalDistanceIntent.Duration;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent()
{
  return &type metadata for WorkoutTotalDistanceIntent;
}

uint64_t storeEnumTagSinglePayload for WorkoutTotalDistanceIntent.ModalityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1005140DC + 4 * byte_100642A42[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100514110 + 4 * byte_100642A3D[v4]))();
}

uint64_t sub_100514110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100514118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100514120);
  return result;
}

uint64_t sub_10051412C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100514134);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100514138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100514140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent.ModalityType()
{
  return &type metadata for WorkoutTotalDistanceIntent.ModalityType;
}

uint64_t sub_10051415C()
{
  return sub_100028384(&qword_100838B10, &qword_100838B18, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100514188()
{
  return sub_100028384(&qword_100838B20, &qword_100838B28, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1005141B4()
{
  return sub_100028384(&qword_100838B30, &qword_100838B28, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1005141E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *);
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *);
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  unsigned int v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v47 = a1;
  v49 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100838B38);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x80000001006A4130);
  LocalizedStringResource.init(stringLiteral:)(0x20666F2065707954, 0xEF74756F6B726F77);
  v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v43(v12, 0, 1, v13);
  LOBYTE(v51) = 9;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v41 = v6;
  v18(v6, 1, 1, v17);
  v50 = enum case for InputConnectionBehavior.default(_:);
  v42 = *(void (**)(char *))(v1 + 104);
  v48 = v3;
  v19 = v49;
  v42(v3);
  v20 = sub_10051296C();
  v46 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v12, &v51, v9, v6, v3, &off_1007825A0, v20);
  v45 = sub_100047110(&qword_100838B40);
  v21 = v16;
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001006A4150);
  v23 = v43;
  v22 = v44;
  v43(v12, 0, 1, v44);
  LOBYTE(v51) = 3;
  v24 = v9;
  v18(v9, 1, 1, v17);
  v25 = v41;
  v18(v41, 1, 1, v17);
  v26 = v48;
  v27 = v19;
  v28 = v42;
  ((void (*)(char *, _QWORD, uint64_t))v42)(v48, v50, v27);
  v29 = sub_100513270();
  v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v21, v12, &v51, v24, v25, v26, &off_1007825D0, v29);
  sub_100047110(&qword_100838B48);
  LocalizedStringResource.init(stringLiteral:)(0x65766974616C6552, 0xED0000656D695420);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001006A4170);
  v23(v12, 0, 1, v22);
  LOBYTE(v51) = 2;
  v18(v24, 1, 1, v17);
  v18(v25, 1, 1, v17);
  v30 = v48;
  ((void (*)(char *, _QWORD, uint64_t))v28)(v48, v50, v49);
  v31 = sub_100513B04();
  v32 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v21, v12, &v51, v24, v25, v30, &off_1007825F8, v31);
  sub_100047110(&qword_1008201E0);
  v33 = type metadata accessor for AppDependencyManager(0);
  v51 = 0u;
  v52 = 0u;
  v53 = 0;
  v34 = static AppDependencyManager.shared.getter(v33);
  v35 = AppDependency.__allocating_init(key:manager:)(&v51, v34);
  v36 = sub_100047110(&qword_1008201E8);
  v53 = 0;
  v51 = 0u;
  v52 = 0u;
  v37 = static AppDependencyManager.shared.getter(v36);
  result = AppDependency.__allocating_init(key:manager:)(&v51, v37);
  v39 = v47;
  v40 = v45;
  *v47 = v46;
  v39[1] = v40;
  v39[2] = v32;
  v39[3] = v35;
  v39[4] = result;
  return result;
}

uint64_t sub_1005146A4(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v9;

  v2 = objc_msgSend(objc_allocWithZone((Class)FIUIWorkoutActivityType), "initWithActivityTypeIdentifier:isIndoor:", a2, 0);
  v3 = FIUIDistanceTypeForActivityType(v2);
  AppDependency.wrappedValue.getter(&v9);
  v4 = v9;
  v5 = sub_100047110(&qword_100821E10);
  v6 = objc_msgSend(v4, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:decimalTrimmingMode:", v3, 3, 0, 2, Measurement.value.getter(v5));

  if (v6)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

  }
  else
  {

    return 0;
  }
  return v7;
}

uint64_t sub_100514794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005147BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005147E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10051480C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100783160, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9)
    return 9;
  else
    return v3;
}

unint64_t sub_100514854(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100783258, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t storeEnumTagSinglePayload for CardSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005148E8 + 4 * byte_10064340D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10051491C + 4 * byte_100643408[v4]))();
}

uint64_t sub_10051491C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100514924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10051492CLL);
  return result;
}

uint64_t sub_100514938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100514940);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100514944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10051494C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardSize()
{
  return &type metadata for CardSize;
}

uint64_t sub_100514968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100514A58();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1005149C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100514A58();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_100514A14()
{
  unint64_t result;

  result = qword_100838BA8;
  if (!qword_100838BA8)
  {
    result = swift_getWitnessTable(&unk_1006434F8, &type metadata for CardSize);
    atomic_store(result, (unint64_t *)&qword_100838BA8);
  }
  return result;
}

unint64_t sub_100514A58()
{
  unint64_t result;

  result = qword_100838BB0;
  if (!qword_100838BB0)
  {
    result = swift_getWitnessTable(&unk_100643480, &type metadata for CardSize);
    atomic_store(result, (unint64_t *)&qword_100838BB0);
  }
  return result;
}

double sub_100514A9C(_QWORD *a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v31;

  v6 = sub_100047110(&qword_10081FD80);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 + -40.0 < 0.0)
    v16 = 0.0;
  else
    v16 = a3 + -40.0;
  v17 = floor((v16 + -10.0) * 0.5);
  if (v17 < 0.0)
    v18 = 0.0;
  else
    v18 = v17;
  v19 = a1[3];
  v20 = a1[4];
  sub_100016804(a1, v19);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20) & 1) != 0)
    return v16;
  sub_100021CC0(a2, (uint64_t)v9, &qword_10081FD80);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v9, 1, v12) == 1)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v23 = objc_msgSend(v22, "preferredContentSizeCategory");

    DynamicTypeSize.init(_:)(v23);
    sub_10001BE90((uint64_t)v9, &qword_10081FD80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if (v21(v11, 1, v12) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_10081FD80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v24 = a1[3];
    v25 = a1[4];
    sub_100016804(a1, v24);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    v28 = v27;
    LOBYTE(v24) = v29;
    LOBYTE(v25) = sub_10054FD90((uint64_t)v15, v26, v27, v29);
    sub_1000EB41C(v26, v28, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((v25 & 0xFE) != 0)
      return v16;
  }
  return v18;
}

uint64_t sub_100514D4C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t *v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  char v29;
  double v30;
  double v31;
  double v33;
  int v34;
  double v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v6 = sub_100047110(&qword_10081FD80);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  sub_100021CC0(a2, (uint64_t)v9, &qword_10081FD80);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v18(v9, 1, v12) == 1)
  {
    DynamicTypeSize.init(_:)(v17);
    sub_10001BE90((uint64_t)v9, &qword_10081FD80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if (v18(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_100021CC0(a1, (uint64_t)&v36, &qword_100832410);
    if (!v37)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

      v19 = &qword_100832410;
      v20 = &v36;
      goto LABEL_12;
    }
    sub_10002411C(&v36, (uint64_t)v38);
    v21 = v39;
    v22 = v40;
    sub_100016804(v38, v39);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

      _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
      goto LABEL_13;
    }
    v23 = v39;
    v24 = v40;
    sub_100016804(v38, v39);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    v27 = v26;
    LOBYTE(v24) = v28;
    v29 = sub_10054FD90((uint64_t)v15, v25, v26, v28);
    sub_1000EB41C(v25, v27, v24);
    if (v29)
    {
      if (v29 != 1)
      {

        v31 = 0.0;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
        return *(_QWORD *)&v31;
      }
      v30 = 1.15;
    }
    else
    {
      v30 = 1.05;
    }
    v33 = v30 * a3;
    if (qword_10081DBF0 != -1)
      swift_once(&qword_10081DBF0, sub_10038F628);
    if (byte_10086A788)
      v33 = v33 * 1.15;
    if (qword_10081DBF8 != -1)
      swift_once(&qword_10081DBF8, sub_10038F648);
    v34 = byte_10086A789;

    v35 = v33 * 1.15;
    if (!v34)
      v35 = v33;
    v31 = v35;
    goto LABEL_27;
  }

  v19 = &qword_10081FD80;
  v20 = (__int128 *)v11;
LABEL_12:
  sub_10001BE90((uint64_t)v20, v19);
LABEL_13:
  v31 = 0.0;
  return *(_QWORD *)&v31;
}

uint64_t sub_100515118(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a1[3];
  v3 = a1[4];
  sub_100016804(a1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) & 1) != 0)
  {
    v4 = a1[3];
    v5 = a1[4];
    sub_100016804(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    if (v8 == 3 && v6 <= 7)
      __asm { BR              X11 }
    sub_1000EB41C(v6, v7, v8);
  }
  return 0;
}

void sub_1005151EC()
{
  JUMPOUT(0x1005151DCLL);
}

void sub_1005151F8()
{
  JUMPOUT(0x1005151DCLL);
}

uint64_t *sub_100515204(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v16;
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[7];
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)v4 + v21;
    v26 = (char *)a2 + v21;
    *v25 = *v26;
    v27 = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 1) = v27;
    v28 = a3[9];
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    *v29 = *v30;
    v12 = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 1) = v12;
    v31 = v16;
    swift_retain(v19);
    swift_retain(v24);
    swift_retain(v27);
  }
  swift_retain(v12);
  return v4;
}

double sub_10051535C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }

  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[9] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_10051540C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  id v30;

  v6 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(void **)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
  v15 = (uint64_t *)((char *)a1 + v13);
  v16 = (uint64_t *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = (uint64_t *)((char *)a1 + v18);
  v21 = (uint64_t *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (char *)a1 + v19;
  v24 = (char *)a2 + v19;
  *v23 = *v24;
  v25 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 1) = v25;
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  v29 = *((_QWORD *)v28 + 1);
  *((_QWORD *)v27 + 1) = v29;
  v30 = v14;
  swift_retain(v17);
  swift_retain(v22);
  swift_retain(v25);
  swift_retain(v29);
  return a1;
}

uint64_t *sub_10051553C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_100828058);
    v6 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  v16 = a3[6];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  v21 = a3[7];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_retain(v24);
  swift_release(v25);
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v28 + 1);
  *((_QWORD *)v27 + 1) = v30;
  swift_retain(v30);
  swift_release(v29);
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *v32 = *v33;
  v34 = *((_QWORD *)v32 + 1);
  v35 = *((_QWORD *)v33 + 1);
  *((_QWORD *)v32 + 1) = v35;
  swift_retain(v35);
  swift_release(v34);
  return a1;
}

char *sub_1005156BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *sub_10051578C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_100828058);
    v6 = sub_100047110(&qword_100828058);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v13;
  swift_release(v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_release(v21);
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *v23 = *v24;
  v25 = *((_QWORD *)v23 + 1);
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_release(v25);
  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *v27 = *v28;
  v29 = *((_QWORD *)v27 + 1);
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_release(v29);
  return a1;
}

uint64_t sub_1005158D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005158E0);
}

uint64_t sub_1005158E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100834268);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100515960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051596C);
}

uint64_t sub_10051596C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100834268);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutChartGroupView(uint64_t a1)
{
  uint64_t result;

  result = qword_100838C10;
  if (!qword_100838C10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartGroupView);
  return result;
}

void sub_100515A24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_1004B3A38(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100643598;
    v4[3] = &unk_100643598;
    v4[4] = &unk_1006435B0;
    v4[5] = &unk_1006435B0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_100515AB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA710, 1);
}

uint64_t sub_100515AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;

  v36 = a1;
  v41 = a3;
  v42 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GeometryProxy(0);
  v5 = *(_QWORD *)(v35 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v35);
  v7 = type metadata accessor for WorkoutChartGroupView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100838C58);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2;
  v15 = static Axis.Set.vertical.getter(v14);
  v16 = sub_100047110(&qword_100838C60);
  v17 = sub_100519EC8();
  ScrollView.init(_:showsIndicators:content:)(v15, 1, sub_100519EC0, v43, v16, v17);
  sub_10004F8C8(a2, (uint64_t)v10, type metadata accessor for WorkoutChartGroupView);
  v18 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = *(unsigned __int8 *)(v5 + 80);
  v22 = (v9 + v21 + v20) & ~v21;
  v23 = swift_allocObject(&unk_1007A66B0, v22 + v6, v19 | v21 | 7);
  sub_100047C88((uint64_t)v10, v23 + v20, type metadata accessor for WorkoutChartGroupView);
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  v25 = v39;
  static TaskPriority.userInitiated.getter(v24);
  v26 = sub_100047110(&qword_100838C90);
  v27 = v41;
  v28 = (char *)(v41 + *(int *)(v26 + 36));
  v29 = type metadata accessor for _TaskModifier(0);
  v30 = v40;
  v31 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v28[*(int *)(v29 + 20)], v25, v42);
  *(_QWORD *)v28 = &unk_100838C88;
  *((_QWORD *)v28 + 1) = v23;
  v33 = v37;
  v32 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v27, v13, v38);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v13, v32);
}

uint64_t sub_100515D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  int v25;

  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100047110(&qword_100838C78);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = a1;
  v16 = static HorizontalAlignment.center.getter(v11, v12, v13, v14, v15);
  v25 = 0;
  v17 = sub_1000083D8(&qword_100838CA0, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v25, v4, v17);
  v18 = sub_100047110(&qword_100838CA8);
  v19 = sub_100028384(&qword_100838CB0, &qword_100838CA8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v20 = LazyVStack.init(alignment:spacing:pinnedViews:content:)(v16, 0, 0, v6, sub_10051A180, v23, v18, v19);
  LOBYTE(a1) = static Edge.Set.all.getter(v20);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a2, v10, v7);
  v21 = a2 + *(int *)(sub_100047110(&qword_100838C60) + 36);
  *(_BYTE *)v21 = a1;
  *(_OWORD *)(v21 + 8) = xmmword_1006251F0;
  *(_OWORD *)(v21 + 24) = xmmword_1006251F0;
  *(_BYTE *)(v21 + 40) = 0;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100515F04@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int *v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[3];
  char v96[32];

  v90 = a2;
  v3 = sub_100047110(&qword_100838CB8);
  __chkstk_darwin(v3);
  v91 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v83 = (char *)&v80 - v6;
  v7 = sub_100047110(&qword_100838CC0);
  __chkstk_darwin(v7);
  v89 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v92 = (uint64_t)&v80 - v10;
  v11 = sub_100047110(&qword_100838CC8);
  __chkstk_darwin(v11);
  v88 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v81 = (uint64_t)&v80 - v14;
  v94 = sub_100047110(&qword_100838CD0);
  __chkstk_darwin(v94);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WorkoutChartGroupView(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v82 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v80 - v21;
  v85 = sub_100047110(&qword_100838CD8);
  __chkstk_darwin(v85);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100047110(&qword_100838CE0);
  v93 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v87 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v80 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v80 - v30;
  v80 = v17;
  v84 = a1 + *(int *)(v17 + 28);
  v32 = *(_QWORD *)(v84 + 8);
  swift_beginAccess(v32 + 16, v96, 0, 0);
  v95[0] = *(_QWORD *)(v32 + 16);
  v33 = v95[0];
  sub_10004F8C8(a1, (uint64_t)v22, type metadata accessor for WorkoutChartGroupView);
  v34 = *(unsigned __int8 *)(v18 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_1007A66D8, v35 + v19, v34 | 7);
  sub_100047C88((uint64_t)v22, v36 + v35, type metadata accessor for WorkoutChartGroupView);
  swift_bridgeObjectRetain(v33);
  v37 = sub_100047110(&qword_100835A90);
  v38 = sub_100047110(&qword_100838CE8);
  v39 = sub_100028384(&qword_100835A98, &qword_100835A90, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = sub_10051A1D8();
  v41 = sub_10048BC54();
  v42 = v37;
  v43 = a1;
  ForEach<>.init(_:content:)(v95, sub_10051A18C, v36, v42, &type metadata for String, v38, v39, v40, v41);
  v44 = sub_100516BBC((uint64_t)v16);
  v45 = static GestureMask.all.getter(v44);
  v46 = sub_1000F0610(&qword_100838D08, &qword_100838CD8, (void (*)(void))sub_10051A254, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
  v47 = sub_100028384(&qword_100838D20, &qword_100838CD0, (uint64_t)&protocol conformance descriptor for SimultaneousGesture<A, B>);
  View.gesture<A>(_:including:)(v16, v45, v85, v94, v46, v47);
  sub_10001BE90((uint64_t)v16, &qword_100838CD0);
  v48 = (uint64_t)v24;
  v49 = v84;
  sub_10001BE90(v48, &qword_100838CD8);
  v50 = v93;
  v51 = *(void (**)(char *, char *))(v93 + 32);
  v94 = (uint64_t)v31;
  v52 = v86;
  v51(v31, v28);
  v53 = *(_QWORD *)(v49 + 8);
  swift_beginAccess(v53 + 16, v95, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(v53 + 16) + 16) < 2uLL)
  {
    v56 = sub_100047110(&qword_100838D28);
    v54 = v81;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v81, 1, 1, v56);
  }
  else
  {
    v54 = v81;
    sub_100517288(v81);
    v55 = sub_100047110(&qword_100838D28);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
  }
  v57 = v92;
  v58 = v43;
  v60 = (uint64_t)v82;
  v59 = (uint64_t)v83;
  v61 = objc_msgSend(*(id *)(v53 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType), "effectiveTypeIdentifier");
  sub_10004F8C8(v58, v60, type metadata accessor for WorkoutChartGroupView);
  if (v61 == (id)37)
  {
    v62 = objc_msgSend(*(id *)(*(_QWORD *)(v60 + *(int *)(v80 + 28) + 8)+ OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType), "isIndoor");
    sub_100011F54(v60, type metadata accessor for WorkoutChartGroupView);
    if ((v62 & 1) == 0)
    {
      sub_100517BAC(v57);
      v63 = sub_100047110(&qword_100838D30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v57, 0, 1, v63);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100011F54(v60, type metadata accessor for WorkoutChartGroupView);
  }
  v64 = sub_100047110(&qword_100838D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v57, 1, 1, v64);
LABEL_9:
  v65 = v54;
  if ((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v49 + 8) + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings), "count") < 2)
  {
    v68 = sub_100047110(&qword_100838D38);
    v66 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v59, 1, 1, v68);
  }
  else
  {
    v66 = v59;
    sub_100518484(v59);
    v67 = sub_100047110(&qword_100838D38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v59, 0, 1, v67);
  }
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v70 = v87;
  v69(v87, v94, v52);
  v71 = v88;
  sub_100021CC0(v65, v88, &qword_100838CC8);
  v72 = v89;
  sub_100021CC0(v57, v89, &qword_100838CC0);
  v73 = v66;
  v74 = v66;
  v75 = v91;
  sub_100021CC0(v73, v91, &qword_100838CB8);
  v76 = v90;
  v69(v90, (uint64_t)v70, v52);
  v77 = (int *)sub_100047110(&qword_100838D40);
  sub_100021CC0(v71, (uint64_t)&v76[v77[12]], &qword_100838CC8);
  sub_100021CC0(v72, (uint64_t)&v76[v77[16]], &qword_100838CC0);
  sub_100021CC0(v75, (uint64_t)&v76[v77[20]], &qword_100838CB8);
  sub_10001BE90(v74, &qword_100838CB8);
  sub_10001BE90(v92, &qword_100838CC0);
  sub_10001BE90(v65, &qword_100838CC8);
  v78 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  v78(v94, v52);
  sub_10001BE90(v75, &qword_100838CB8);
  sub_10001BE90(v72, &qword_100838CC0);
  sub_10001BE90(v71, &qword_100838CC8);
  return ((uint64_t (*)(char *, uint64_t))v78)(v70, v52);
}

uint64_t sub_1005166C0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;

  v72 = a3;
  v5 = sub_100047110(&qword_100838CE8);
  __chkstk_darwin(v5);
  v71 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Divider(0);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  __chkstk_darwin(v7);
  v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100821170);
  __chkstk_darwin(v65);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v69 = (uint64_t)&v62 - v12;
  v62 = type metadata accessor for WorkoutChartView(0);
  __chkstk_darwin(v62);
  v70 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - v15;
  v17 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for WorkoutChartViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v64 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  v24 = type metadata accessor for WorkoutChartGroupView(0);
  v25 = *(int *)(v24 + 28);
  v63 = a2;
  v26 = *(_QWORD *)(a2 + v25 + 8);
  KeyPath = swift_getKeyPath(&unk_1006436F0);
  v28 = swift_getKeyPath(&unk_100643718);
  swift_retain(v26);
  static Published.subscript.getter(&v73, v29, KeyPath, v28);
  swift_release(v26);
  swift_release(KeyPath);
  swift_release(v28);
  v30 = v73;
  if (*(_QWORD *)v73->cellPadding && (v31 = sub_100439D68(v23), (v32 & 1) != 0))
  {
    sub_10004F8C8(*(_QWORD *)v30[1].cellInset + *(_QWORD *)(v21 + 72) * v31, (uint64_t)v19, type metadata accessor for WorkoutChartViewModel);
    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v33, 1, v20);
  swift_bridgeObjectRelease(v30, v34, v35, v36, v37, v38, v39, v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_10001BE90((uint64_t)v19, &qword_1008202F0);
    v41 = sub_100047110(&qword_100838D00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v72, 1, 1, v41);
  }
  else
  {
    v43 = v64;
    sub_100047C88((uint64_t)v19, v64, type metadata accessor for WorkoutChartViewModel);
    sub_10004F8C8(v43, (uint64_t)v16, type metadata accessor for WorkoutChartViewModel);
    v44 = v62;
    v45 = *(_QWORD *)(v63 + *(int *)(v24 + 24) + 8);
    v46 = (uint64_t *)&v16[*(int *)(v62 + 20)];
    v47 = type metadata accessor for WorkoutChartProperties(0);
    v48 = sub_1000083D8(&qword_10083B9B0, type metadata accessor for WorkoutChartProperties, (uint64_t)&unk_1006314F0);
    swift_retain(v45);
    v50 = ObservedObject.init(wrappedValue:)(v49, v47, v48);
    *v46 = v50;
    v46[1] = v51;
    v16[*(int *)(v44 + 24)] = 0;
    v52 = v66;
    v53 = Divider.init()(v50);
    LOBYTE(v45) = static Edge.Set.all.getter(v53);
    v55 = v67;
    v54 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v10, v52, v68);
    v56 = &v10[*(int *)(v65 + 36)];
    *v56 = v45;
    *(_OWORD *)(v56 + 8) = xmmword_100640E00;
    *(_OWORD *)(v56 + 24) = xmmword_100643530;
    v56[40] = 0;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
    v57 = v69;
    sub_100045AD4((uint64_t)v10, v69, &qword_100821170);
    v58 = v70;
    sub_10004F8C8((uint64_t)v16, v70, type metadata accessor for WorkoutChartView);
    sub_100021CC0(v57, (uint64_t)v10, &qword_100821170);
    v59 = v71;
    sub_10004F8C8(v58, v71, type metadata accessor for WorkoutChartView);
    v60 = sub_100047110(&qword_100838E40);
    sub_100021CC0((uint64_t)v10, v59 + *(int *)(v60 + 48), &qword_100821170);
    sub_10001BE90(v57, &qword_100821170);
    sub_100011F54((uint64_t)v16, type metadata accessor for WorkoutChartView);
    sub_100011F54(v43, type metadata accessor for WorkoutChartViewModel);
    sub_10001BE90((uint64_t)v10, &qword_100821170);
    sub_100011F54(v58, type metadata accessor for WorkoutChartView);
    v61 = sub_100047110(&qword_100838D00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v59, 0, 1, v61);
    return sub_100045AD4(v59, v72, &qword_100838CE8);
  }
}

uint64_t sub_100516BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;

  v2 = v1;
  v83 = a1;
  v80 = type metadata accessor for DelayedLongPressGesture(0);
  v82 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100047110(&qword_100834710);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v78 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_100838E38);
  v5 = __chkstk_darwin(v76);
  v75 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for SpatialTapGesture(0, v5);
  v74 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100047110(&qword_100834720);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v87 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutChartGroupView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalCoordinateSpace(0);
  v67 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DragGesture(0, v14);
  v66 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100047110(&qword_10082F628);
  v69 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_10082F630);
  v88 = *(_QWORD *)(v22 - 8);
  v89 = v22;
  __chkstk_darwin(v22);
  v86 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v24);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v16, v13, &protocol witness table for LocalCoordinateSpace, 0.0);
  sub_10004F8C8(v2, (uint64_t)v12, type metadata accessor for WorkoutChartGroupView);
  v25 = *(unsigned __int8 *)(v10 + 80);
  v26 = (v25 + 16) & ~v25;
  v84 = v25 | 7;
  v27 = v26 + v11;
  v28 = swift_allocObject(&unk_1007A67A0, v27, v25 | 7);
  v29 = v26;
  v64 = v26;
  sub_100047C88((uint64_t)v12, v28 + v26, type metadata accessor for WorkoutChartGroupView);
  v30 = sub_1000083D8(&qword_10082F670, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
  v31 = sub_1000083D8(&qword_10082F678, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  Gesture<>.onChanged(_:)(sub_10051A878, v28, v17, v30, v31);
  v32 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v19, v17, v32);
  v33 = v85;
  sub_10004F8C8(v85, (uint64_t)v12, type metadata accessor for WorkoutChartGroupView);
  v34 = v27;
  v65 = v27;
  v35 = v84;
  v36 = swift_allocObject(&unk_1007A67C8, v27, v84);
  sub_100047C88((uint64_t)v12, v36 + v29, type metadata accessor for WorkoutChartGroupView);
  v37 = sub_100028384(&qword_10082F680, &qword_10082F628, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
  v38 = v86;
  v39 = v68;
  Gesture.onEnded(_:)(sub_10051A888, v36, v68, v37);
  v40 = swift_release(v36);
  v41 = (*(uint64_t (**)(char *, uint64_t, __n128))(v69 + 8))(v21, v39, v40);
  static CoordinateSpaceProtocol<>.local.getter(v41);
  v42 = v70;
  SpatialTapGesture.init<A>(count:coordinateSpace:)(1, v16, v67, &protocol witness table for LocalCoordinateSpace);
  sub_10004F8C8(v33, (uint64_t)v12, type metadata accessor for WorkoutChartGroupView);
  v43 = swift_allocObject(&unk_1007A67F0, v34, v35);
  v44 = v64;
  sub_100047C88((uint64_t)v12, v43 + v64, type metadata accessor for WorkoutChartGroupView);
  v45 = sub_1000083D8(&qword_100834728, (uint64_t (*)(uint64_t))&type metadata accessor for SpatialTapGesture, (uint64_t)&protocol conformance descriptor for SpatialTapGesture);
  v46 = v87;
  v47 = v72;
  Gesture.onEnded(_:)(sub_10051A898, v43, v72, v45);
  v48 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v42, v47, v48);
  v49 = v71;
  v50 = (uint64_t)v75;
  v51 = v73;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v75, v46, v73);
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v50 + *(int *)(v76 + 52), v38, v89);
  v52 = v77;
  DelayedLongPressGesture.init(minimumDuration:maximumDistance:)(0.5, 10.0);
  sub_10004F8C8(v85, (uint64_t)v12, type metadata accessor for WorkoutChartGroupView);
  v53 = swift_allocObject(&unk_1007A6818, v65, v84);
  sub_100047C88((uint64_t)v12, v53 + v44, type metadata accessor for WorkoutChartGroupView);
  v54 = sub_1000083D8(&qword_100834730, (uint64_t (*)(uint64_t))&type metadata accessor for DelayedLongPressGesture, (uint64_t)&protocol conformance descriptor for DelayedLongPressGesture);
  v55 = v78;
  v56 = v80;
  Gesture.onEnded(_:)(sub_10051A9E8, v53, v80, v54);
  v57 = swift_release(v53);
  (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v52, v56, v57);
  v58 = v79;
  v59 = v83;
  v60 = v81;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v83, v55, v81);
  v61 = sub_100047110(&qword_100838CD0);
  sub_100021CC0(v50, v59 + *(int *)(v61 + 52), &qword_100838E38);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v60);
  sub_10001BE90(v50, &qword_100838E38);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v87, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v86, v89);
}

uint64_t sub_100517288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  char v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  uint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int8 v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  uint64_t v129;
  char v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  uint64_t v132;
  char v133;
  CHWorkoutDetailHeartRateTableViewCell *v134;
  char v135;
  uint64_t v136;
  uint64_t v137;

  v120 = a1;
  v118 = type metadata accessor for WorkoutChartGroupView(0);
  v115 = *(_QWORD *)(v118 - 8);
  v113 = *(_QWORD *)(v115 + 64);
  __chkstk_darwin(v118);
  v119 = (uint64_t)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v112 = (uint64_t)&v91 - v3;
  v111 = type metadata accessor for Divider(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v108 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100047110(&qword_100821170);
  __chkstk_darwin(v109);
  v107 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for DynamicTypeSize(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v96 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100047110(&qword_100838D48);
  v104 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v93 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100047110(&qword_100838D50);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v94 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100047110(&qword_100838D58);
  __chkstk_darwin(v101);
  v95 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100047110(&qword_100838D60);
  __chkstk_darwin(v102);
  v97 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100047110(&qword_100838D68);
  __chkstk_darwin(v121);
  v106 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100047110(&qword_100838D70);
  v117 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v122 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v13);
  sub_1004607B8(0xD00000000000001DLL, 0x800000010069F5C0, 0xD00000000000001FLL, 0x800000010069F5E0, (uint64_t)&v125);
  v15 = v125;
  v16 = v126;
  v17 = v127;
  v19 = v128;
  v18 = v129;
  v92 = v128;
  v20 = v130;
  v21 = v131;
  v23 = static Font.subheadline.getter(v22);
  KeyPath = swift_getKeyPath(&unk_100643618);
  v125 = v14;
  v126 = 0;
  v127 = 1;
  v128 = (CHWorkoutDetailHeartRateTableViewCell *)v15;
  v129 = v16;
  v130 = v17;
  v131 = v19;
  v132 = v18;
  v133 = v20;
  v134 = v21;
  v135 = 0;
  v136 = KeyPath;
  v137 = v23;
  v25 = sub_100047110(&qword_1008349D0);
  v26 = sub_10051A708((unint64_t *)&qword_1008349D8, &qword_1008349D0, (void (*)(void))sub_100462100);
  v27 = v93;
  View.bold(_:)(1, v25, v26);
  sub_1000E4458(v15, v16, v17);
  swift_release(v23);
  swift_release(KeyPath);
  swift_release(v21);
  swift_bridgeObjectRelease(v92, v28, v29, v30, v31, v32, v33, v34);
  v35 = v98;
  v36 = v96;
  v37 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v96, enum case for DynamicTypeSize.large(_:), v99);
  v125 = v25;
  v126 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
  v39 = v94;
  v40 = v100;
  View.dynamicTypeSize(_:)(v36, v100, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  v41.n128_f64[0] = (*(double (**)(char *, uint64_t))(v104 + 8))(v27, v40);
  v42 = static Color.secondary.getter(v41);
  v43 = swift_getKeyPath(&unk_100643648);
  v44 = v103;
  v45 = (uint64_t)v95;
  v46 = v105;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v95, v39, v105);
  v47 = (uint64_t *)(v45 + *(int *)(v101 + 36));
  *v47 = v43;
  v47[1] = v42;
  v48 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v39, v46);
  LOBYTE(v42) = static Edge.Set.all.getter(v48);
  v49 = v97;
  sub_100021CC0(v45, v97, &qword_100838D58);
  v50 = v49 + *(int *)(v102 + 36);
  *(_BYTE *)v50 = v42;
  *(_OWORD *)(v50 + 8) = xmmword_100643540;
  *(_OWORD *)(v50 + 24) = xmmword_100643550;
  *(_BYTE *)(v50 + 40) = 0;
  v51 = sub_10001BE90(v45, &qword_100838D58);
  v52 = v108;
  v53 = Divider.init()(v51);
  LOBYTE(v42) = static Edge.Set.all.getter(v53);
  v54 = v110;
  v55 = (uint64_t)v107;
  v56 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v107, v52, v111);
  v57 = v55 + *(int *)(v109 + 36);
  *(_BYTE *)v57 = v42;
  *(_OWORD *)(v57 + 8) = xmmword_100640E00;
  *(_OWORD *)(v57 + 24) = xmmword_100640E00;
  *(_BYTE *)(v57 + 40) = 0;
  v58 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v52, v56);
  v59 = static Alignment.bottom.getter(v58);
  v61 = v60;
  v62 = v121;
  v63 = (uint64_t)v106;
  v64 = (uint64_t)&v106[*(int *)(v121 + 36)];
  sub_100021CC0(v55, v64, &qword_100821170);
  v65 = (uint64_t *)(v64 + *(int *)(sub_100047110(&qword_100838D78) + 36));
  *v65 = v59;
  v65[1] = v61;
  sub_100021CC0(v49, v63, &qword_100838D60);
  sub_10001BE90(v55, &qword_100821170);
  sub_10001BE90(v49, &qword_100838D60);
  v66 = v116;
  v67 = v112;
  sub_10004F8C8(v116, v112, type metadata accessor for WorkoutChartGroupView);
  v68 = *(unsigned __int8 *)(v115 + 80);
  v69 = (v68 + 16) & ~v68;
  v70 = v69 + v113;
  v71 = v68 | 7;
  v72 = swift_allocObject(&unk_1007A6700, v69 + v113, v68 | 7);
  sub_100047C88(v67, v72 + v69, type metadata accessor for WorkoutChartGroupView);
  v73 = sub_10051A4D0();
  View.onTapGesture(count:perform:)(1, sub_10051A4C4, v72, v62, v73);
  swift_release(v72);
  sub_10001BE90(v63, &qword_100838D68);
  v74 = v66 + *(int *)(v118 + 36);
  v75 = *(_BYTE *)v74;
  v76 = *(_QWORD *)(v74 + 8);
  v123 = v75;
  v124 = v76;
  sub_100047110(&qword_100820D80);
  State.projectedValue.getter(&v125);
  v77 = v125;
  v78 = v126;
  LODWORD(v118) = v127;
  sub_10004F8C8(v66, v67, type metadata accessor for WorkoutChartGroupView);
  v79 = swift_allocObject(&unk_1007A6728, v70, v71);
  sub_100047C88(v67, v79 + v69, type metadata accessor for WorkoutChartGroupView);
  v80 = v66;
  v81 = v119;
  sub_10004F8C8(v80, v119, type metadata accessor for WorkoutChartGroupView);
  v82 = swift_allocObject(&unk_1007A6750, v70, v71);
  sub_100047C88(v81, v82 + v69, type metadata accessor for WorkoutChartGroupView);
  v83 = type metadata accessor for WorkoutChartableMetricsView(0);
  v125 = v121;
  v126 = v73;
  v84 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v85 = sub_1000083D8(&qword_100838DA0, type metadata accessor for WorkoutChartableMetricsView, (uint64_t)&unk_10063EFEC);
  v90 = v83;
  v86 = v114;
  v87 = v122;
  View.sheet<A>(isPresented:onDismiss:content:)(v77, v78, v118, sub_10051A6B8, v79, sub_10051A6C8, v82, v114, v90, v84, v85);
  swift_release(v78);
  swift_release(v79);
  swift_release(v82);
  v88 = swift_release(v77);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v117 + 8))(v87, v86, v88);
}

uint64_t sub_100517BAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t OpaqueTypeConformance2;
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[2];
  char v128[8];

  v126 = a1;
  v2 = type metadata accessor for Divider(0);
  v120 = *(_QWORD *)(v2 - 8);
  v121 = v2;
  __chkstk_darwin(v2);
  v119 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100047110(&qword_100821170);
  __chkstk_darwin(v118);
  v122 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DynamicTypeSize(0);
  v114 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v113 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100047110(&qword_100838DB0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100047110(&qword_100838DB8);
  __chkstk_darwin(v99);
  v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100047110(&qword_100838DC0);
  __chkstk_darwin(v104);
  v97 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100047110(&qword_100838DC8);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v105 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100047110(&qword_100838DD0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v108 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100047110(&qword_100838DD8);
  __chkstk_darwin(v103);
  v112 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100047110(&qword_100838DE0);
  __chkstk_darwin(v106);
  v117 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100838DE8);
  v15 = *(_QWORD *)(v14 - 8);
  v124 = v14;
  v125 = v15;
  __chkstk_darwin(v14);
  v115 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v17);
  v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v123 = (char *)&v97 - v25;
  v26 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WorkoutChartGroupView(0) + 28) + 8);
  swift_beginAccess(v26 + 16, v128, 0, 0);
  v98 = *(_QWORD *)(*(_QWORD *)(v26 + 16) + 16);
  v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, 0, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  URL.init(string:)(v30, v32);
  swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
  v40 = v21;
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v42 = v20;
  if (v41(v19, 1, v20) == 1)
  {
    sub_10001BE90((uint64_t)v19, &qword_10081E640);
    v43 = 1;
    v44 = v126;
    v45 = v124;
  }
  else
  {
    v46 = v40;
    v47 = v123;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v123, v19, v42);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v23, v47, v42);
    v48 = sub_100047110(&qword_100838DF0);
    v49 = sub_100028384(&qword_100838DF8, &qword_100838DF0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v50 = v100;
    Link.init(destination:label:)(v23, sub_100518F7C, 0, v48, v49);
    v51 = v101;
    v52 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v8, v50, v102);
    v8[*(int *)(v99 + 36)] = 0;
    v53.n128_f64[0] = (*(double (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    v54 = static Font.subheadline.getter(v53);
    KeyPath = swift_getKeyPath(&unk_100643618);
    v56 = v97;
    sub_100021CC0((uint64_t)v8, v97, &qword_100838DB8);
    v57 = v104;
    v58 = (uint64_t *)(v56 + *(int *)(v104 + 36));
    *v58 = KeyPath;
    v58[1] = v54;
    sub_10001BE90((uint64_t)v8, &qword_100838DB8);
    v59 = sub_10051A708(&qword_100838E00, &qword_100838DC0, (void (*)(void))sub_10051A78C);
    v60 = v105;
    View.bold(_:)(1, v57, v59);
    sub_10001BE90(v56, &qword_100838DC0);
    v62 = v113;
    v61 = v114;
    v63 = v116;
    (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v113, enum case for DynamicTypeSize.large(_:), v116);
    v127[0] = v57;
    v127[1] = v59;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v127, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    v65 = v108;
    v66 = v109;
    View.dynamicTypeSize(_:)(v62, v109, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
    v67.n128_f64[0] = (*(double (**)(char *, uint64_t))(v107 + 8))(v60, v66);
    v68 = static Color.secondary.getter(v67);
    v69 = swift_getKeyPath(&unk_100643648);
    v70 = v110;
    v71 = v111;
    v72 = (uint64_t)v112;
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v65, v111);
    v73 = (uint64_t *)(v72 + *(int *)(v103 + 36));
    *v73 = v69;
    v73[1] = v68;
    v74 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v65, v71);
    if (v98 <= 1)
      v75 = 0x401C000000000000;
    else
      v75 = 0x4028000000000000;
    v76 = static Edge.Set.all.getter(v74);
    v77 = v117;
    sub_100021CC0(v72, v117, &qword_100838DD8);
    v78 = v77 + *(int *)(v106 + 36);
    *(_BYTE *)v78 = v76;
    *(_QWORD *)(v78 + 8) = v75;
    *(_OWORD *)(v78 + 16) = xmmword_100643560;
    *(_QWORD *)(v78 + 32) = 0x4008000000000000;
    *(_BYTE *)(v78 + 40) = 0;
    v79 = sub_10001BE90(v72, &qword_100838DD8);
    v80 = v119;
    v81 = Divider.init()(v79);
    v82 = static Edge.Set.all.getter(v81);
    v84 = v120;
    v83 = v121;
    v85 = (uint64_t)v122;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v122, v80, v121);
    v86 = v85 + *(int *)(v118 + 36);
    *(_BYTE *)v86 = v82;
    *(_OWORD *)(v86 + 8) = xmmword_100640E00;
    *(_OWORD *)(v86 + 24) = xmmword_100640E00;
    *(_BYTE *)(v86 + 40) = 0;
    v87 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v80, v83);
    v88 = static Alignment.bottom.getter(v87);
    v90 = v89;
    v91 = v124;
    v92 = (uint64_t)v115;
    v93 = (uint64_t)&v115[*(int *)(v124 + 36)];
    sub_100021CC0(v85, v93, &qword_100821170);
    v94 = (uint64_t *)(v93 + *(int *)(sub_100047110(&qword_100838D78) + 36));
    *v94 = v88;
    v94[1] = v90;
    sub_100021CC0(v77, v92, &qword_100838DE0);
    sub_10001BE90(v85, &qword_100821170);
    sub_10001BE90(v77, &qword_100838DE0);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v123, v42);
    v95 = v126;
    sub_100045AD4(v92, v126, &qword_100838DE8);
    v43 = 0;
    v44 = v95;
    v45 = v91;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56))(v44, v43, 1, v45);
}

void sub_100518484(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  const char *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t inited;
  void *v31;
  id v32;
  id v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  id v35;
  NSString v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  Class isa;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSString v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  NSString *v66;
  void *v67;
  NSString *v68;
  NSString *v69;
  NSString *v70;
  NSString *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  id v73;
  NSString v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  Class v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  NSString *v102;
  id v103;
  uint64_t v104;
  NSString *v105;
  uint64_t v106;
  id v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  id v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char v116[120];

  v114 = a1;
  v1 = sub_100047110(&qword_100838E18);
  __chkstk_darwin(v1);
  v113 = (uint64_t *)((char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
  v5 = objc_msgSend(v3, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v4);

  if (v5)
  {
    v111 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v6 = (void *)objc_opt_self(NSBundle);
    v7 = objc_msgSend(v6, "mainBundle");
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, 0, 0);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v110 = v10;
    v12 = v11;

    v13 = objc_msgSend(v6, "mainBundle");
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = sub_100047110((uint64_t *)&unk_100827460);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100622F90;
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = sub_100038CF8();
    *(_QWORD *)(v20 + 32) = v10;
    *(_QWORD *)(v20 + 40) = v12;
    v108 = v12;
    v21 = swift_bridgeObjectRetain(v12);
    String.init(format:_:)(v16, v18, v20, v21);
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    swift_bridgeObjectRelease(v18, v22, v24, v25, v26, v27, v28, v29);
    v109 = (id)sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v109, v116);
    *(_OWORD *)(inited + 16) = xmmword_100620BC0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v31 = (void *)sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
    v107 = v31;
    *(_QWORD *)(inited + 40) = v5;
    *(_QWORD *)(inited + 64) = v31;
    *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
    v106 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    *(_QWORD *)(inited + 104) = v106;
    v32 = v111;
    *(_QWORD *)(inited + 80) = v111;
    v105 = NSFontAttributeName;
    v103 = v5;
    v102 = NSForegroundColorAttributeName;
    v33 = v32;
    v34 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
    v35 = objc_allocWithZone((Class)NSMutableAttributedString);
    swift_bridgeObjectRetain(v23);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23, v37, v38, v39, v40, v41, v42, v43);
    type metadata accessor for Key(0);
    v104 = v44;
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v34, v46, v47, v48, v49, v50, v51, v52);
    v111 = objc_msgSend(v35, "initWithString:attributes:", v36, isa);

    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23, v54, v55, v56, v57, v58, v59, v60);
    v61 = v108;
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v53, "rangeOfString:", v62);
    v100 = v64;
    v101 = v63;

    v65 = swift_initStackObject(v109, &v115);
    *(_OWORD *)(v65 + 16) = xmmword_100624A40;
    v66 = v105;
    v68 = v102;
    v67 = v103;
    *(_QWORD *)(v65 + 32) = v105;
    *(_QWORD *)(v65 + 40) = v67;
    *(_QWORD *)(v65 + 64) = v107;
    *(_QWORD *)(v65 + 72) = v68;
    *(_QWORD *)(v65 + 80) = v33;
    *(_QWORD *)(v65 + 104) = v106;
    *(_QWORD *)(v65 + 112) = NSUnderlineStyleAttributeName;
    *(_QWORD *)(v65 + 144) = &type metadata for Int;
    *(_QWORD *)(v65 + 120) = 1;
    v109 = v67;
    v107 = v33;
    v69 = v66;
    v70 = v68;
    v71 = NSUnderlineStyleAttributeName;
    v72 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v65);
    v73 = objc_allocWithZone((Class)NSAttributedString);
    v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v61, v75, v76, v77, v78, v79, v80, v81);
    v82 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v72, v83, v84, v85, v86, v87, v88, v89);
    v90 = objc_msgSend(v73, "initWithString:attributes:", v74, v82);

    v91 = v111;
    v92 = static VerticalAlignment.center.getter(objc_msgSend(v111, "replaceCharactersInRange:withAttributedString:", v101, v100, v90));
    v93 = (uint64_t)v113;
    *v113 = v92;
    *(_QWORD *)(v93 + 8) = 0;
    *(_BYTE *)(v93 + 16) = 1;
    v94 = sub_100047110(&qword_100838E20);
    v95 = v91;
    v96 = sub_100518FB4(v91, v112, v93 + *(int *)(v94 + 44));
    LOBYTE(v91) = static Edge.Set.all.getter(v96);
    v97 = v114;
    sub_100021CC0(v93, v114, &qword_100838E18);

    v98 = v97 + *(int *)(sub_100047110(&qword_100838D38) + 36);
    *(_BYTE *)v98 = (_BYTE)v91;
    *(_OWORD *)(v98 + 8) = xmmword_1006281F0;
    *(_OWORD *)(v98 + 24) = xmmword_1006281F0;
    *(_BYTE *)(v98 + 40) = 0;
    sub_10001BE90(v93, &qword_100838E18);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100518AB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100518B20, v4, v5);
}

uint64_t sub_100518B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for WorkoutChartGroupView(0);
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24) + 8);
  swift_retain(v3);
  v5 = GeometryProxy.size.getter(v4);
  v6 = v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  *(double *)v6 = v5 + -32.0;
  *(_BYTE *)(v6 + 8) = 0;
  swift_release(v3);
  v7 = *(_QWORD *)(v1 + *(int *)(v2 + 28) + 8);
  *(_QWORD *)(v0 + 56) = v7;
  swift_retain(v7);
  return swift_task_switch(sub_100518BC4, 0, 0);
}

uint64_t sub_100518BC4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1004C78C8();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_100518C40;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100518C40()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_100518C94, 0, 0);
}

uint64_t sub_100518C94()
{
  _QWORD *v0;

  swift_release(v0[7]);
  return swift_task_switch(sub_10012FF54, v0[5], v0[6]);
}

double sub_100518CCC(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;
  uint64_t v8;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for WorkoutChartGroupView(0) + 36));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  swift_retain(v3);
  v4 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v8, v4);
  v6[1] = v2;
  v7 = v3;
  v6[0] = (v8 & 1) == 0;
  State.wrappedValue.setter(v6, v4);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_100518D6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  __n128 v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartGroupView(0) + 28) + 8);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v2)
  {
    v3 = objc_msgSend(v2, "fiui_activityType", swift_retain(v1).n128_f64[0]);
LABEL_4:
    swift_beginAccess(v1 + 16, v17, 0, 0);
    v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 16);
    v5 = swift_bridgeObjectRetain(v4);
    sub_100547B28(v6, v3, v5);
    swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
    v14 = type metadata accessor for WorkoutChartDataStore(0);
    v15 = sub_1000083D8(&qword_100838DA8, type metadata accessor for WorkoutChartDataStore, (uint64_t)&unk_1006412B0);
    v16 = ObservableObject<>.objectWillChange.getter(v14, v15);
    ObservableObjectPublisher.send()();
    swift_release(v1);

    swift_release(v16);
    return;
  }
  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "fiui_activityType", swift_retain(v1).n128_f64[0]);
  if (v3)
    goto LABEL_4;
  __break(1u);
}

double sub_100518EA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v4 = type metadata accessor for WorkoutChartableMetricsView(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartGroupView(0) + 28) + 8);
  *v6 = swift_getKeyPath(&unk_100643678);
  v8 = sub_100047110((uint64_t *)&unk_100832400);
  swift_storeEnumTagMultiPayload(v6, v8, 0);
  *(_QWORD *)((char *)v6 + *(int *)(v4 + 20)) = v7;
  sub_100047C88((uint64_t)v6, a2, type metadata accessor for WorkoutChartableMetricsView);
  *(_QWORD *)&result = swift_retain(v7).n128_u64[0];
  return result;
}

void sub_100518F7C(uint64_t a1@<X8>)
{
  sub_1004607B8(0xD000000000000030, 0x80000001006A42C0, 0xD000000000000019, 0x80000001006A4300, a1);
}

uint64_t sub_100518FB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;

  v37 = a2;
  v5 = type metadata accessor for WorkoutChartGroupView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100838E28);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  AttributedString.init(_:)(a1);
  v38 = Text.init(_:)(v10);
  v39 = v18;
  v40 = v19 & 1;
  v41 = v20;
  sub_10004F8C8(v37, (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WorkoutChartGroupView);
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_1007A6778, v22 + v7, v21 | 7);
  sub_100047C88((uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for WorkoutChartGroupView);
  View.onTapGesture(count:perform:)(1, sub_10051A82C, v23, &type metadata for Text, &protocol witness table for Text);
  swift_release(v23);
  sub_1000E4458(v38, v39, v40);
  swift_bridgeObjectRelease(v41, v24, v25, v26, v27, v28, v29, v30);
  v31 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v31(v14, v17, v11);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  v32 = sub_100047110(&qword_100838E30);
  v31((char *)(a3 + *(int *)(v32 + 48)), v14, v11);
  v33 = a3 + *(int *)(v32 + 64);
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v34)(v14, v11);
}

uint64_t sub_1005191E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for WorkoutChartGroupView(0);
  result = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a1 + *(int *)(v2 + 24) + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
  if (result)
  {
    v4 = result;
    sub_100596494();
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_100519248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char v17;
  double (*v18)(char *, uint64_t);
  __n128 v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for WorkoutChartGroupView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LayoutDirection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = a2 + *(int *)(v4 + 24);
  v15 = *(_QWORD *)(v14 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  if ((*(_BYTE *)(v15 + 8) & 1) == 0)
  {
    v16 = *(double *)v15;
    v36 = a1;
    sub_1003F74E0((uint64_t)&v36 - v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for LayoutDirection.leftToRight(_:), v7);
    v17 = static LayoutDirection.== infix(_:_:)(v13, v10);
    v18 = *(double (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    v19.n128_f64[0] = v18(v13, v7);
    v20 = DragGesture.Value.location.getter(v19);
    if ((v17 & 1) != 0)
      v21 = v20;
    else
      v21 = v16 - v20;
    v22 = *(_QWORD *)(v14 + 8);
    v23 = *(double *)(v22 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    v24 = *(double *)(v22 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
        * *(double *)(v22 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    sub_10004F8C8(a2, (uint64_t)v6, type metadata accessor for WorkoutChartGroupView);
    if (v23 < v24 || v23 - v24 < 0.01)
    {
      sub_100011F54((uint64_t)v6, type metadata accessor for WorkoutChartGroupView);
    }
    else
    {
      v25 = &v6[*(int *)(v4 + 32)];
      v26 = *v25;
      v27 = *((_QWORD *)v25 + 1);
      LOBYTE(v37) = v26;
      v38 = v27;
      v28 = sub_100047110(&qword_100820D80);
      State.wrappedValue.getter(&v39, v28);
      v29 = v39;
      sub_100011F54((uint64_t)v6, type metadata accessor for WorkoutChartGroupView);
      if (v29 != 1)
      {
        v30 = *(_QWORD *)(v14 + 8);
        KeyPath = swift_getKeyPath(&unk_1006436A8);
        v32 = swift_getKeyPath(&unk_1006436D0);
        v37 = 0.0;
        LOBYTE(v38) = 1;
        swift_retain_n(v30, 2);
        static Published.subscript.setter(&v37, v30, KeyPath, v32);
        sub_100269A6C();
        swift_release(v30);
        v33 = *(_QWORD *)(v14 + 8);
        swift_retain(v33);
        sub_10026A410(*(uint64_t *)&v21, 0);
LABEL_11:
        swift_release(v33);
        return;
      }
    }
    v33 = *(_QWORD *)(v14 + 8);
    v34 = swift_getKeyPath(&unk_1006436A8);
    v35 = swift_getKeyPath(&unk_1006436D0);
    v37 = v21;
    LOBYTE(v38) = 0;
    swift_retain_n(v33, 2);
    static Published.subscript.setter(&v37, v33, v34, v35);
    sub_100269A6C();
    goto LABEL_11;
  }
}

uint64_t sub_100519550(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[9];
  uint64_t v11;

  v3 = type metadata accessor for WorkoutChartGroupView(0);
  v4 = *(_QWORD *)(a2 + *(int *)(v3 + 24) + 8);
  swift_retain(v4);
  sub_10026A410(0, 1);
  swift_release(v4);
  v5 = (char *)(a2 + *(int *)(v3 + 32));
  v6 = *v5;
  v7 = *((_QWORD *)v5 + 1);
  v10[1] = v6;
  v11 = v7;
  v10[0] = 0;
  v8 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v10, v8);
}

uint64_t sub_1005195E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  double v29;
  _QWORD *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  double v34;
  BOOL v35;
  _QWORD *v36;
  uint64_t v37;
  double v38;
  __n128 v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t, __n128);
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t);
  double v54;
  char v55;
  uint64_t KeyPath;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  char v69;
  char v70[24];

  v67 = *(double *)&a1;
  v63 = sub_100047110(&qword_10082A920);
  __chkstk_darwin(v63);
  v64 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v62 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v65 = (uint64_t)&v59 - v7;
  __chkstk_darwin(v8);
  v66 = (uint64_t)&v59 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD **)(v13 - 8);
  __chkstk_darwin(v13);
  v61 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - v17;
  v19 = type metadata accessor for LayoutDirection(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v59 - v24;
  result = type metadata accessor for WorkoutChartGroupView(0);
  v27 = a2 + *(int *)(result + 24);
  v28 = *(_QWORD *)(v27 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  if ((*(_BYTE *)(v28 + 8) & 1) == 0)
  {
    v60 = v18;
    v29 = *(double *)v28;
    sub_1003F74E0((uint64_t)v25);
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for LayoutDirection.leftToRight(_:), v19);
    v30 = v14;
    v31 = static LayoutDirection.== infix(_:_:)(v25, v22);
    v32 = *(void (**)(char *, uint64_t))(v20 + 8);
    v32(v22, v19);
    v33 = ((uint64_t (*)(char *, uint64_t))v32)(v25, v19);
    v34 = SpatialTapGesture.Value.location.getter(v33);
    v35 = (v31 & 1) == 0;
    v36 = v30;
    if (v35)
      v34 = v29 - v34;
    v37 = *(_QWORD *)(v27 + 8);
    v38 = v34;
    swift_retain(v37);
    sub_100269E08(v38, 0, (uint64_t)v12);
    v39 = swift_release(v37);
    v40 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v30[6];
    if (v40(v12, 1, v13, v39) == 1)
      return sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100828370);
    v67 = v38;
    v41 = (void (*)(char *, char *, uint64_t))v30[4];
    v42 = v60;
    v41(v60, v12, v13);
    v43 = v37 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
    swift_beginAccess(v37 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, v70, 0, 0);
    v44 = v66;
    sub_100021CC0(v43, v66, (uint64_t *)&unk_100828370);
    v45 = (void (*)(uint64_t, char *, uint64_t))v30[2];
    v46 = v65;
    v45(v65, v42, v13);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v36[7])(v46, 0, 1, v13);
    v47 = v64;
    v48 = v64 + *(int *)(v63 + 48);
    sub_100021CC0(v44, v64, (uint64_t *)&unk_100828370);
    sub_100021CC0(v46, v48, (uint64_t *)&unk_100828370);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v40)(v47, 1, v13) == 1)
    {
      swift_retain(v37);
      sub_10001BE90(v46, (uint64_t *)&unk_100828370);
      sub_10001BE90(v44, (uint64_t *)&unk_100828370);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v40)(v48, 1, v13) == 1)
      {
        sub_10001BE90(v47, (uint64_t *)&unk_100828370);
LABEL_14:
        v54 = 0.0;
        v55 = 1;
LABEL_16:
        KeyPath = swift_getKeyPath(&unk_1006436A8);
        v57 = swift_getKeyPath(&unk_1006436D0);
        v68 = v54;
        v69 = v55;
        swift_retain(v37);
        static Published.subscript.setter(&v68, v37, KeyPath, v57);
        sub_100269A6C();
        v58 = swift_release(v37);
        return ((uint64_t (*)(char *, uint64_t, __n128))v36[1])(v60, v13, v58);
      }
    }
    else
    {
      v49 = v62;
      sub_100021CC0(v47, v62, (uint64_t *)&unk_100828370);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v40)(v48, 1, v13) != 1)
      {
        v50 = v61;
        v41(v61, (char *)v48, v13);
        v51 = sub_1000083D8((unint64_t *)&qword_100824D50, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        swift_retain(v37);
        v52 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v50, v13, v51);
        v53 = (void (*)(char *, uint64_t))v36[1];
        v53(v50, v13);
        sub_10001BE90(v65, (uint64_t *)&unk_100828370);
        sub_10001BE90(v66, (uint64_t *)&unk_100828370);
        v53((char *)v49, v13);
        sub_10001BE90(v47, (uint64_t *)&unk_100828370);
        if ((v52 & 1) != 0)
          goto LABEL_14;
LABEL_15:
        v55 = 0;
        v54 = v67;
        goto LABEL_16;
      }
      swift_retain(v37);
      sub_10001BE90(v65, (uint64_t *)&unk_100828370);
      sub_10001BE90(v66, (uint64_t *)&unk_100828370);
      ((void (*)(uint64_t, uint64_t))v36[1])(v49, v13);
    }
    sub_10001BE90(v47, &qword_10082A920);
    goto LABEL_15;
  }
  return result;
}

id sub_100519B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[9];
  uint64_t v10;

  v3 = type metadata accessor for WorkoutChartGroupView(0);
  v4 = (char *)(a2 + *(int *)(v3 + 32));
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  v9[1] = v5;
  v10 = v6;
  v9[0] = 1;
  v7 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(v9, v7);
  return objc_msgSend(*(id *)(a2 + *(int *)(v3 + 20)), "selectionChanged");
}

uint64_t sub_100519BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_100519C60, v6, v7);
}

uint64_t sub_100519C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WorkoutChartGroupView(0) + 28) + 8);
  *(_QWORD *)(v0 + 48) = v2;
  swift_retain(v2);
  return swift_task_switch(sub_100519CB4, 0, 0);
}

uint64_t sub_100519CB4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1004C78C8();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_100519D30;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100519D30()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_100519D84, 0, 0);
}

uint64_t sub_100519D84()
{
  _QWORD *v0;

  swift_release(v0[6]);
  return swift_task_switch(sub_10016D124, v0[4], v0[5]);
}

uint64_t sub_100519DBC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_10004F8C8(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WorkoutChartGroupView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1007A6688, v7 + v5, v6 | 7);
  result = sub_100047C88((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for WorkoutChartGroupView);
  *a2 = sub_100519E74;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_100519E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return sub_100515AC0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100519EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100515D50(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100519EC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838C68;
  if (!qword_100838C68)
  {
    v1 = sub_100007050(&qword_100838C60);
    sub_100028384(&qword_100838C70, &qword_100838C78, (uint64_t)&protocol conformance descriptor for LazyVStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838C68);
  }
  return result;
}

uint64_t sub_100519F4C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v1 = (int *)type metadata accessor for WorkoutChartGroupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = (_QWORD *)(v0 + v4);
  v11 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (v4 + v5 + v8) & ~v8;

  swift_release(*(_QWORD *)((char *)v10 + v1[6] + 8));
  swift_release(*(_QWORD *)((char *)v10 + v1[7] + 8));
  swift_release(*(_QWORD *)((char *)v10 + v1[8] + 8));
  v14 = swift_release(*(_QWORD *)((char *)v10 + v1[9] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v13, v6, v14);
  return swift_deallocObject(v0, v13 + v9, v3 | v8 | 7);
}

uint64_t sub_10051A088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_100838C84);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1000EA380;
  return sub_100518AB4(v7, v8);
}

uint64_t sub_10051A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1008372A4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000EA380;
  return sub_1004C7F14(a1, a2, v2);
}

uint64_t sub_10051A180@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100515F04(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10051A18C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return sub_1005166C0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_10051A1D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838CF0;
  if (!qword_100838CF0)
  {
    v1 = sub_100007050(&qword_100838CE8);
    sub_100028384(&qword_100838CF8, &qword_100838D00, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100838CF0);
  }
  return result;
}

uint64_t sub_10051A254()
{
  return sub_1000F0610(&qword_100838D10, &qword_100838D18, (void (*)(void))sub_10051A1D8, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
}

uint64_t sub_10051A278@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006436A8);
  v5 = swift_getKeyPath(&unk_1006436D0);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_10051A2FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006436A8);
  v6 = swift_getKeyPath(&unk_1006436D0);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  static Published.subscript.setter(&v8, v4, KeyPath, v6);
  return sub_100269A6C();
}

uint64_t sub_10051A380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10051A3A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10051A3D0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_10051A3F8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_10051A420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10051A448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10051A470(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_10051A498(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_10051A4C4()
{
  return sub_10051A838((uint64_t (*)(uint64_t))sub_100518CCC);
}

unint64_t sub_10051A4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838D80;
  if (!qword_100838D80)
  {
    v1 = sub_100007050(&qword_100838D68);
    sub_10051A554();
    sub_100028384(&qword_100838D98, &qword_100838D78, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838D80);
  }
  return result;
}

unint64_t sub_10051A554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838D88;
  if (!qword_100838D88)
  {
    v1 = sub_100007050(&qword_100838D60);
    sub_10051A5C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838D88);
  }
  return result;
}

unint64_t sub_10051A5C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_100838D90;
  if (!qword_100838D90)
  {
    v1 = sub_100007050(&qword_100838D58);
    v2 = sub_100007050(&qword_100838D48);
    v4 = sub_100007050(&qword_1008349D0);
    v5 = sub_10051A708((unint64_t *)&qword_1008349D8, &qword_1008349D0, (void (*)(void))sub_100462100);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838D90);
  }
  return result;
}

uint64_t sub_10051A6B8()
{
  return sub_10051A838((uint64_t (*)(uint64_t))sub_100518D6C);
}

double sub_10051A6C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return sub_100518EA8(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10051A708(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10051A78C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838E08;
  if (!qword_100838E08)
  {
    v1 = sub_100007050(&qword_100838DB8);
    sub_100028384(&qword_100838E10, &qword_100838DB0, (uint64_t)&protocol conformance descriptor for Link<A>);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838E08);
  }
  return result;
}

uint64_t sub_10051A82C()
{
  return sub_10051A838(sub_1005191E8);
}

uint64_t sub_10051A838(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10051A878(uint64_t a1)
{
  return sub_10051A8A4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100519248);
}

uint64_t sub_10051A888(uint64_t a1)
{
  return sub_10051A8A4(a1, sub_100519550);
}

uint64_t sub_10051A898(uint64_t a1)
{
  return sub_10051A8A4(a1, sub_1005195E8);
}

uint64_t sub_10051A8A4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_10051A8F4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for WorkoutChartGroupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }

  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[7] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[9] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

id sub_10051A9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  return sub_100519B6C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10051AA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1008372A4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000DA0E4;
  return sub_1004C7F14(a1, a2, v2);
}

uint64_t sub_10051AA98()
{
  return sub_100028384(&qword_100838E58, &qword_100838E60, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

unint64_t sub_10051AAC8()
{
  unint64_t result;

  result = qword_100838E68;
  if (!qword_100838E68)
  {
    result = swift_getWitnessTable(&unk_100643798, &type metadata for SummaryCardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100838E68);
  }
  return result;
}

unint64_t sub_10051AB10()
{
  unint64_t result;

  result = qword_100838E70[0];
  if (!qword_100838E70[0])
  {
    result = swift_getWitnessTable(&unk_1006437F8, &type metadata for SummaryCardEntityQuery);
    atomic_store(result, qword_100838E70);
  }
  return result;
}

uint64_t sub_10051AB58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100838EC8 + dword_100838EC8);
  v3 = (_QWORD *)swift_task_alloc(unk_100838ECC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001A48BC;
  return v5(a1);
}

uint64_t sub_10051ABB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_100838EC0 + dword_100838EC0);
  v2 = (_QWORD *)swift_task_alloc(unk_100838EC4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10042777C;
  return v4();
}

unint64_t sub_10051AC18()
{
  unint64_t result;

  result = qword_100838E88;
  if (!qword_100838E88)
  {
    result = swift_getWitnessTable(&unk_100643820, &type metadata for SummaryCardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100838E88);
  }
  return result;
}

unint64_t sub_10051AC60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838E90;
  if (!qword_100838E90)
  {
    v1 = sub_100007050(qword_100838E98);
    sub_1002F0A1C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100838E90);
  }
  return result;
}

uint64_t sub_10051ACC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10043207C();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10051AD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100838EB8 + dword_100838EB8);
  v6 = (_QWORD *)swift_task_alloc(unk_100838EBC);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100100D3C;
  return v8(a2, a3);
}

ValueMetadata *type metadata accessor for SummaryCardEntityQuery()
{
  return &type metadata for SummaryCardEntityQuery;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10051ADB4(uint64_t a1)
{
  uint64_t v1;
  SEL v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = *(unsigned __int8 *)(a1 + 32);
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v2, v3, v4, v5, v6, v7, v8);
    __asm { BR              X8 }
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10051B1FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10051B214, 0, 0);
}

uint64_t sub_10051B214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (unint64_t *)(v1 + 32);
    swift_bridgeObjectRetain(v1);
    v11 = &_swiftEmptyArrayStorage;
    do
    {
      v13 = *v3++;
      v12 = v13;
      if (v13 <= 0x11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100141858(0, *(_QWORD *)v11->cellPadding + 1, 1, v11, v7, v8, v9, v10);
        v15 = *(_QWORD *)v11->cellPadding;
        v14 = *(_QWORD *)v11->cellInset;
        if (v15 >= v14 >> 1)
          v11 = sub_100141858((CHWorkoutDetailHeartRateTableViewCell *)(v14 > 1), v15 + 1, 1, v11, v7, v8, v9, v10);
        *(_QWORD *)v11->cellPadding = v15 + 1;
        *((_BYTE *)&v11[1].super.super.super.super.isa + v15) = v12;
      }
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 16), v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v11);
}

uint64_t sub_10051B304()
{
  return swift_task_switch(sub_10051B318, 0, 0);
}

uint64_t sub_10051B318()
{
  uint64_t v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  unint64_t v3;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v9;

  v1 = 18;
  sub_100121CB4(0, 18, 0);
  v2 = &_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
  v4 = &byte_10077F2A0;
  do
  {
    v6 = *v4++;
    v5 = v6;
    v9 = v2;
    v7 = *(_QWORD *)v2->cellInset;
    if (v3 >= v7 >> 1)
    {
      sub_100121CB4(v7 > 1, v3 + 1, 1);
      v2 = v9;
    }
    *(_QWORD *)v2->cellPadding = v3 + 1;
    *((_BYTE *)&v2[1].super.super.super.super.isa + v3++) = v5;
    --v1;
  }
  while (v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051B3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_10051B404, 0, 0);
}

uint64_t sub_10051B404()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;

  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 24);
  swift_bridgeObjectRetain(v1);
  v2 = sub_10051ADB4((uint64_t)&off_10077F280);
  swift_bridgeObjectRelease(v1, v3, v4, v5, v6, v7, v8, v9);
  v17 = *(_QWORD *)v2->cellPadding;
  if (v17)
  {
    sub_100121CB4(0, v17, 0);
    v18 = 0;
    v19 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
    do
    {
      v20 = *((_BYTE *)&v2[1].super.super.super.super.isa + v18);
      v21 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v19 + v18 >= v21 >> 1)
        sub_100121CB4(v21 > 1, v19 + v18 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v19 + v18 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage + v19 + v18++ + 32) = v20;
    }
    while (v17 != v18);
  }
  swift_bridgeObjectRelease(v2, v10, v11, v12, v13, v14, v15, v16);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(&_swiftEmptyArrayStorage);
}

uint64_t sub_10051B530@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  unint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  __int128 v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  __n128 v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  uint64_t v83;
  char *v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char v120[16];
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  unint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;

  v3 = v2;
  v118 = a1;
  v108 = type metadata accessor for PlainButtonStyle(0, a2);
  v109 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for ButtonMenuStyle(0);
  v101 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100838EE0);
  v99 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100047110(&qword_100838EE8);
  v107 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v97 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100047110(&qword_100838EF0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100047110(&qword_100838EF8);
  __chkstk_darwin(v102);
  v98 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100047110(&qword_100838F00);
  v112 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v119 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100838F08);
  v16 = *(_QWORD *)(v15 - 8);
  v114 = v15;
  v115 = v16;
  __chkstk_darwin(v15);
  v110 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100838F10);
  v19 = *(_QWORD *)(v18 - 8);
  v116 = v18;
  v117 = v19;
  __chkstk_darwin(v18);
  v113 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_OWORD *)swift_allocObject(&unk_1007A6A08, 112, 7);
  v22 = *(_OWORD *)(v3 + 48);
  v21[3] = *(_OWORD *)(v3 + 32);
  v21[4] = v22;
  v23 = *(_OWORD *)(v3 + 80);
  v21[5] = *(_OWORD *)(v3 + 64);
  v21[6] = v23;
  v24 = *(_OWORD *)(v3 + 16);
  v21[1] = *(_OWORD *)v3;
  v21[2] = v24;
  v121 = v3;
  sub_1002841F0((_QWORD *)v3);
  v25 = sub_100047110(&qword_100838F18);
  v26 = sub_100047110(&qword_100838F20);
  v27 = sub_10051D81C();
  v28 = sub_100028384(&qword_100838F48, &qword_100838F20, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v29 = Menu.init(onPresentationChanged:content:label:)(sub_10051D7F0, v21, sub_10051D814, v120, sub_10051C64C, 0, v25, v26, v27, v28);
  ButtonMenuStyle.init()(v29);
  v30 = sub_100028384(&qword_100838F50, &qword_100838EE0, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v31 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1000083D8(&qword_100838F58, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  v32 = v97;
  v33 = v100;
  View.menuStyle<A>(_:)(v6, v7, v100, v30, v31);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v6, v33);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v9, v7);
  v35 = v106;
  PlainButtonStyle.init()(v34);
  *(_QWORD *)&v122 = v7;
  *((_QWORD *)&v122 + 1) = v33;
  v123 = v30;
  v124 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v122, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  v37 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v38 = v103;
  v39 = v108;
  View.buttonStyle<A>(_:)(v35, v103, v108, OpaqueTypeConformance2, v37);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v35, v39);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v32, v38);
  v40 = v104;
  v41 = (uint64_t)v98;
  v42 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v12, v105);
  v43 = v102;
  *(_BYTE *)(v41 + *(int *)(v102 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v42);
  v127 = *(_OWORD *)(v3 + 56);
  v128 = *(_QWORD *)(v3 + 72);
  v109 = sub_100047110(&qword_100838F60);
  State.projectedValue.getter(&v122);
  v44 = (_OWORD *)swift_allocObject(&unk_1007A6A30, 112, 7);
  v45 = *(_OWORD *)(v3 + 48);
  v44[3] = *(_OWORD *)(v3 + 32);
  v44[4] = v45;
  v46 = *(_OWORD *)(v3 + 80);
  v44[5] = *(_OWORD *)(v3 + 64);
  v44[6] = v46;
  v47 = *(_OWORD *)(v3 + 16);
  v44[1] = *(_OWORD *)v3;
  v44[2] = v47;
  sub_1002841F0((_QWORD *)v3);
  v48 = type metadata accessor for ActivitySharingReplyMessageComposerView(0);
  v49 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10051D9B4();
  v50 = sub_10051DB20();
  v51 = sub_1000083D8(&qword_100822480, type metadata accessor for ActivitySharingReplyMessageComposerView, (uint64_t)&unk_100626820);
  View.sheet<A, B>(item:onDismiss:content:)(&v122, 0, 0, sub_10051D9AC, v44, v43, &type metadata for ActivitySharingIdentifiableReply, v48, v49, v50, v51);
  swift_release(v44);
  swift_release(v122);
  swift_release(*((_QWORD *)&v122 + 1));
  swift_bridgeObjectRelease(v124, v52, v53, v54, v55, v56, v57, v58);
  sub_10001BE90(v41, &qword_100838EF8);
  v127 = *(_OWORD *)(v3 + 40);
  sub_100047110(&qword_100820D80);
  State.projectedValue.getter(&v122);
  v59 = v122;
  LODWORD(v108) = v123;
  v60 = (_OWORD *)swift_allocObject(&unk_1007A6A58, 112, 7);
  v61 = *(_OWORD *)(v3 + 48);
  v60[3] = *(_OWORD *)(v3 + 32);
  v60[4] = v61;
  v62 = *(_OWORD *)(v3 + 80);
  v60[5] = *(_OWORD *)(v3 + 64);
  v60[6] = v62;
  v63 = *(_OWORD *)(v3 + 16);
  v60[1] = *(_OWORD *)v3;
  v60[2] = v63;
  sub_1002841F0((_QWORD *)v3);
  v64 = sub_100047110(&qword_100838F88);
  *(_QWORD *)&v122 = v43;
  *((_QWORD *)&v122 + 1) = &type metadata for ActivitySharingIdentifiableReply;
  v123 = v48;
  v124 = v49;
  v125 = v50;
  v126 = v51;
  v65 = swift_getOpaqueTypeConformance2(&v122, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
  v66 = type metadata accessor for ActivitySharingReplyEditView(255);
  v68 = type metadata accessor for Material(255, v67);
  v69 = sub_1000083D8(&qword_100838F90, type metadata accessor for ActivitySharingReplyEditView, (uint64_t)&unk_10062D0C0);
  *(_QWORD *)&v122 = v66;
  *((_QWORD *)&v122 + 1) = v68;
  v123 = v69;
  v124 = (CHWorkoutDetailHeartRateTableViewCell *)&protocol witness table for Material;
  v70 = (CHWorkoutDetailHeartRateTableViewCell *)swift_getOpaqueTypeConformance2(&v122, &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>, 1);
  v95 = v64;
  v71 = v64;
  v72 = v110;
  v73 = v111;
  v74 = v119;
  View.fullScreenCover<A>(isPresented:onDismiss:content:)(v59, *((_QWORD *)&v59 + 1), v108, 0, 0, sub_10051DB68, v60, v111, v95, v65, v70);
  swift_release(*((_QWORD *)&v59 + 1));
  swift_release(v60);
  v75 = swift_release(v59);
  (*(void (**)(char *, uint64_t, __n128))(v112 + 8))(v74, v73, v75);
  v122 = *(_OWORD *)(v3 + 16);
  v123 = *(_QWORD *)(v3 + 32);
  State.wrappedValue.getter(&v127, v109);
  v76 = (_OWORD *)swift_allocObject(&unk_1007A6A80, 112, 7);
  v77 = *(_OWORD *)(v3 + 48);
  v76[3] = *(_OWORD *)(v3 + 32);
  v76[4] = v77;
  v78 = *(_OWORD *)(v3 + 80);
  v76[5] = *(_OWORD *)(v3 + 64);
  v76[6] = v78;
  v79 = *(_OWORD *)(v3 + 16);
  v76[1] = *(_OWORD *)v3;
  v76[2] = v79;
  sub_1002841F0((_QWORD *)v3);
  v80 = sub_100047110(&qword_100838ED0);
  *(_QWORD *)&v122 = v73;
  *((_QWORD *)&v122 + 1) = v71;
  v123 = v65;
  v124 = v70;
  v81 = swift_getOpaqueTypeConformance2(&v122, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
  v82 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10051DB7C();
  v84 = v113;
  v83 = v114;
  View.onChange<A>(of:initial:_:)(&v127, 0, sub_10051DB74, v76, v114, v80, v81, v82);
  swift_release(v76);
  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)&v127 + 1), v85, v86, v87, v88, v89, v90, v91);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v72, v83);
  *(_QWORD *)&v122 = v83;
  *((_QWORD *)&v122 + 1) = v80;
  v123 = v81;
  v124 = v82;
  v92 = swift_getOpaqueTypeConformance2(&v122, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v93 = v116;
  View.onTapGesture(count:perform:)(1, ASFriendListDisplayMode.id.getter, 0, v116, v92);
  return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v84, v93);
}

uint64_t sub_10051BE58@<X0>(uint64_t a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;
  char v66[16];
  uint64_t v67;

  v62 = a2;
  v4 = type metadata accessor for PlainButtonStyle(0, a3);
  v5 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  v61 = v5;
  __chkstk_darwin(v4);
  v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100838FB0);
  v8 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  v59 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100838FB8);
  v63 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v56 = (char *)&v52 - v15;
  v53 = sub_100047110(&qword_100838FC0);
  v55 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v54 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v52 = (char *)&v52 - v18;
  v19 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000022, 0x80000001006A43A0);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v67 = a1;
  v26 = sub_100047110(&qword_100838FC8);
  v27 = sub_10051DD08();
  Section<>.init(_:content:)(v19, v21, v23 & 1, v25, sub_10051DD00, v66, v26, v27);
  v65 = a1;
  v28 = sub_100047110(&qword_100838FD8);
  v29 = sub_100028384(&qword_100838FE0, &qword_100838FD8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v30 = Section<>.init(content:)(sub_10051DD84, v64, v28, v29);
  v31 = v57;
  PlainButtonStyle.init()(v30);
  v32 = sub_10051DD8C();
  v33 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v34 = v58;
  v35 = v60;
  View.buttonStyle<A>(_:)(v31, v58, v60, v32, v33);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v35);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v34);
  v36 = v63;
  v37 = v56;
  v38 = v13;
  v39 = v13;
  v40 = v11;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v56, v38, v11);
  v42 = v54;
  v41 = v55;
  v43 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v45 = v52;
  v44 = v53;
  v43(v54, v52, v53);
  v46 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v46(v39, v37, v40);
  v47 = v62;
  v43(v62, v42, v44);
  v48 = sub_100047110(&qword_100838FF0);
  v46(&v47[*(int *)(v48 + 48)], v39, v40);
  v49 = *(void (**)(char *, uint64_t))(v63 + 8);
  v49(v37, v40);
  v50 = *(void (**)(char *, uint64_t))(v41 + 8);
  v50(v45, v44);
  v49(v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v50)(v42, v44);
}

uint64_t sub_10051C1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100643950);
  v4 = swift_getKeyPath(&unk_100643978);
  static Published.subscript.getter(&v15, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = swift_getKeyPath(&unk_1006439A0);
  v6 = (_OWORD *)swift_allocObject(&unk_1007A6AF8, 112, 7);
  v7 = *(_OWORD *)(a1 + 48);
  v6[3] = *(_OWORD *)(a1 + 32);
  v6[4] = v7;
  v8 = *(_OWORD *)(a1 + 80);
  v6[5] = *(_OWORD *)(a1 + 64);
  v6[6] = v8;
  v9 = *(_OWORD *)(a1 + 16);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v9;
  sub_1002841F0((_QWORD *)a1);
  v10 = sub_100047110((uint64_t *)&unk_10081E160);
  v11 = sub_100047110(&qword_100820FE0);
  v12 = sub_100028384(&qword_100838FF8, (uint64_t *)&unk_10081E160, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  return ForEach<>.init(_:id:content:)(&v15, v5, sub_10051DECC, v6, v10, v11, v12, &protocol witness table for String, v13);
}

uint64_t sub_10051C34C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  __n128 v10;
  _QWORD v12[2];

  v3 = a1[1];
  v12[0] = *a1;
  v4 = v12[0];
  v12[1] = v3;
  v5 = swift_allocObject(&unk_1007A6B20, 128, 7);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v5 + 96) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 112) = v4;
  *(_QWORD *)(v5 + 120) = v3;
  swift_bridgeObjectRetain_n(v3, 2);
  sub_1002841F0((_QWORD *)a2);
  v9 = sub_100038CA0();
  return Button<>.init<A>(_:action:)(v12, sub_10051DF38, v5, &type metadata for String, v9, v10);
}

uint64_t sub_10051C3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v5[0] = a2;
  v5[1] = a3;
  swift_bridgeObjectRetain(a3);
  v3 = sub_100047110(&qword_100838F60);
  return State.wrappedValue.setter(v5, v3);
}

uint64_t sub_10051C454(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_OWORD *)swift_allocObject(&unk_1007A6AD0, 112, 7);
  v3 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v3;
  v4 = *(_OWORD *)(a1 + 80);
  v2[5] = *(_OWORD *)(a1 + 64);
  v2[6] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v5;
  sub_1002841F0((_QWORD *)a1);
  v6 = sub_100047110(&qword_1008349F8);
  v7 = sub_100028384(&qword_1008349F0, &qword_1008349F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return Button.init(action:label:)(sub_10051DE18, v2, sub_10051C504, 0, v6, v7);
}

__n128 sub_10051C504@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = static VerticalAlignment.center.getter(a1);
  sub_10051C56C((uint64_t)&v10);
  v4 = v11;
  v5 = v12;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  result = v10;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  *(_BYTE *)(a2 + 64) = v7;
  *(_QWORD *)(a2 + 72) = v8;
  return result;
}

void sub_10051C56C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  char v8;
  char v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000024, 0x80000001006A43D0);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = Image.init(systemName:)(0x6472616F6279656BLL, 0xE800000000000000);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v10;
  sub_1000E439C(v3, v5, v9);
  swift_bridgeObjectRetain(v7);
  sub_1000E4458(v3, v5, v9);
  swift_bridgeObjectRelease(v7, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_10051C64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = type metadata accessor for IconOnlyLabelStyle(0);
  v27 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100826E38);
  v26 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100838FA8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100838F38);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001006A4380);
  v15 = Label<>.init(_:systemImage:)(v14);
  IconOnlyLabelStyle.init()(v15);
  v16 = sub_100028384(&qword_100826E70, &qword_100826E38, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v17 = sub_1000083D8(&qword_100838F40, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)(v3, v4, v1, v16, v17);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  v19 = static Font.subheadline.getter(v18);
  KeyPath = swift_getKeyPath(&unk_100643920);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  v21 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v21 = KeyPath;
  v21[1] = v19;
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  LODWORD(v19) = static HierarchicalShapeStyle.secondary.getter(v22);
  v23 = v28;
  sub_100021CC0((uint64_t)v13, v28, &qword_100838F38);
  *(_DWORD *)(v23 + *(int *)(sub_100047110(&qword_100838F18) + 36)) = v19;
  return sub_10001BE90((uint64_t)v13, &qword_100838F38);
}

id sub_10051C8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id result;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  _OWORD v28[2];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for ActivitySharingReplyMessageComposerView(0);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v28 - v13;
  v15 = *(void **)a1;
  v16 = *(void **)(a1 + 8);
  v17 = *(_QWORD *)(a2 + 8);
  sub_1000D7974(v15, v16, (uint64_t)v28 - v13);
  sub_100021CC0((uint64_t)v14, (uint64_t)v11, &qword_10081E640);
  result = objc_msgSend(*(id *)(v17+ OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight+ *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 28)), "contact");
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "primaryDestinationForMessaging");

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v28[1] = *(_OWORD *)(a2 + 56);
    v29 = *(_QWORD *)(a2 + 72);
    sub_100047110(&qword_100838F60);
    State.projectedValue.getter(&v30);
    v28[0] = v30;
    v24 = v31;
    v25 = v32;
    sub_10001BE90((uint64_t)v14, &qword_10081E640);
    sub_10051DC6C((uint64_t)v11, (uint64_t)v8);
    v26 = (uint64_t *)&v8[*(int *)(v6 + 20)];
    *v26 = v21;
    v26[1] = v23;
    v27 = &v8[*(int *)(v6 + 24)];
    *(_OWORD *)v27 = v28[0];
    *((_QWORD *)v27 + 2) = v24;
    *((_QWORD *)v27 + 3) = v25;
    return (id)sub_10051DCB4((uint64_t)v8, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10051CABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a2;
  v28 = type metadata accessor for Material(0, a3);
  v30 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v27 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for Reply(0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = type metadata accessor for ActivitySharingReplyEditView(0);
  __chkstk_darwin(v26);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = *(_OWORD *)(a1 + 40);
  sub_100047110(&qword_100820D80);
  State.projectedValue.getter(&v33);
  v13 = v33;
  v25 = v34;
  v24 = v35;
  v31 = *(_OWORD *)(a1 + 16);
  v32 = *(_QWORD *)(a1 + 32);
  sub_100047110(&qword_100838F60);
  State.projectedValue.getter(&v33);
  v15 = v33;
  v14 = v34;
  v16 = v35;
  v17 = v36;
  sub_1000D7974(0, (void *)0xE000000000000000, (uint64_t)v10);
  sub_1000D81D8();
  v18 = sub_1001FE358(v13, v25, v24, v15, v14, v16, v17, (uint64_t)v10, (uint64_t)v12, (uint64_t)v7);
  v19 = v27;
  static Material.thin.getter(v18);
  v20 = sub_1000083D8(&qword_100838F90, type metadata accessor for ActivitySharingReplyEditView, (uint64_t)&unk_10062D0C0);
  v21 = v28;
  View.presentationBackground<A>(_:)(v19, v26, v28, v20, &protocol witness table for Material);
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v19, v21);
  return sub_10051DC30((uint64_t)v12);
}

void sub_10051CCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(id);
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  __int128 v14;
  __int128 v15;
  __int128 v16;
  objc_class *v17;
  char *v18;
  void (**v19)(uint64_t);
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  objc_super v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;

  v5 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(id))(a3 + 80);
  if (v8)
  {
    v9 = *(void **)(a2 + 8);
    if (v9)
    {
      v10 = *(void **)a2;
      v11 = *(_QWORD *)(a3 + 88);
      v12 = *(_QWORD *)(a3 + 8);
      swift_retain(v11);
      sub_1000D7974(v10, v9, (uint64_t)v7);
      v13 = (void (*)(uint64_t))swift_allocObject(&unk_1007A6AA8, 112, 7);
      v14 = *(_OWORD *)(a3 + 48);
      *((_OWORD *)v13 + 3) = *(_OWORD *)(a3 + 32);
      *((_OWORD *)v13 + 4) = v14;
      v15 = *(_OWORD *)(a3 + 80);
      *((_OWORD *)v13 + 5) = *(_OWORD *)(a3 + 64);
      *((_OWORD *)v13 + 6) = v15;
      v16 = *(_OWORD *)(a3 + 16);
      *((_OWORD *)v13 + 1) = *(_OWORD *)a3;
      *((_OWORD *)v13 + 2) = v16;
      v17 = (objc_class *)type metadata accessor for ActivitySharingReplyCoordinator.MessageComposerDelegate();
      v18 = (char *)objc_allocWithZone(v17);
      v19 = (void (**)(uint64_t))&v18[OBJC_IVAR____TtCC10FitnessApp31ActivitySharingReplyCoordinator23MessageComposerDelegate_completion];
      *v19 = sub_10051DC28;
      v19[1] = v13;
      sub_1002841F0((_QWORD *)a3);
      v39.receiver = v18;
      v39.super_class = v17;
      v20 = objc_msgSendSuper2(&v39, "init");
      v21 = *(void **)(v12 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_messageComposerDelegate);
      *(_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_messageComposerDelegate) = v20;
      v22 = v20;

      v23 = objc_msgSend(*(id *)(v12+ OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight+ *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 28)), "contact");
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(v23, "primaryDestinationForMessaging");

        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        v29 = v22;
        v30 = sub_10051D008((uint64_t)v7, v26, (uint64_t)v28, (uint64_t)v29);
        swift_bridgeObjectRelease(v28, v31, v32, v33, v34, v35, v36, v37);

        v8(v30);
        sub_100022BA4((uint64_t)v8, v11);

        sub_10001BE90((uint64_t)v7, &qword_10081E640);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    v40 = *(_OWORD *)(a3 + 16);
    v41 = *(_QWORD *)(a3 + 32);
    v38 = sub_100047110(&qword_100838F60);
    State.wrappedValue.getter(&v42, v38);
    v40 = *(_OWORD *)(a3 + 56);
    v41 = *(_QWORD *)(a3 + 72);
    State.wrappedValue.setter(&v42, v38);
  }
}

void sub_10051CF58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v4[2];
  __int128 v5;
  uint64_t v6;

  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v4[0] = 0;
  v4[1] = 0;
  v3 = sub_100047110(&qword_100838F60);
  State.wrappedValue.setter(v4, v3);
  if (a1)
    sub_1000D83E8();
}

uint64_t sub_10051CFC4@<X0>(uint64_t a1@<X8>)
{
  __n128 *v1;

  return sub_10051B530(a1, *v1);
}

id sub_10051D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  NSURL *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  NSURL *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v39;

  v8 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  v14 = objc_msgSend(objc_allocWithZone((Class)MFMessageComposeViewController), "init");
  objc_msgSend(v14, "_setCanEditRecipients:", 0);
  objc_msgSend(v14, "setMessageComposeDelegate:", a4);
  v15 = sub_100047110(&qword_100820020);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100622F90;
  *(_QWORD *)(v16 + 32) = a2;
  *(_QWORD *)(v16 + 40) = a3;
  swift_bridgeObjectRetain(a3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v18, v19, v20, v21, v22, v23, v24);
  objc_msgSend(v14, "setRecipients:", isa);

  v25 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "init");
  sub_100021CC0(a1, (uint64_t)v13, &qword_10081E640);
  v26 = type metadata accessor for URL(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v30 = 0;
  if (v28(v13, 1, v26) != 1)
  {
    URL._bridgeToObjectiveC()(v29);
    v30 = v31;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
  }
  objc_msgSend(v25, "setURL:", v30);

  v32 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
  v33 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v32);

  objc_msgSend(v25, "setLayout:", v33);
  sub_100021CC0(a1, (uint64_t)v10, &qword_10081E640);
  if (v28(v10, 1, v26) == 1)
  {
    v35 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v34);
    v35 = v36;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  }
  v37 = (id)ASMessageFromRichMessagePayload(v35);

  objc_msgSend(v25, "setSummaryText:", v37);
  objc_msgSend(v14, "setMessage:", v25);

  return v14;
}

__n128 sub_10051D2CC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 result;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;

  v19 = 0;
  v20 = 0;
  v8 = sub_100047110(&qword_100838ED0);
  State.init(wrappedValue:)(&v21, &v19, v8);
  v18 = v21;
  v9 = v22;
  LOBYTE(v19) = 0;
  State.init(wrappedValue:)(&v21, &v19, &type metadata for Bool);
  v10 = v21.n128_u8[0];
  v11 = v21.n128_u64[1];
  v19 = 0;
  v20 = 0;
  State.init(wrappedValue:)(&v21, &v19, v8);
  v17 = v21;
  v12 = v22;
  v13 = type metadata accessor for ActivitySharingReplyCoordinator(0);
  v14 = sub_1000083D8(&qword_100838ED8, type metadata accessor for ActivitySharingReplyCoordinator, (uint64_t)&unk_1006217B8);
  *(_QWORD *)a4 = ObservedObject.init(wrappedValue:)(a1, v13, v14);
  *(_QWORD *)(a4 + 8) = v15;
  *(__n128 *)(a4 + 16) = v18;
  *(_QWORD *)(a4 + 32) = v9;
  *(_BYTE *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 48) = v11;
  result = v17;
  *(__n128 *)(a4 + 56) = v17;
  *(_QWORD *)(a4 + 72) = v12;
  *(_QWORD *)(a4 + 80) = a2;
  *(_QWORD *)(a4 + 88) = a3;
  return result;
}

uint64_t destroy for ActivitySharingReplyMenu(_QWORD *a1)
{
  uint64_t result;

  swift_release(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  result = swift_release(a1[9]);
  if (a1[10])
    return swift_release(a1[11]);
  return result;
}

uint64_t initializeWithCopy for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  v12 = (_OWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 80);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_retain(v8);
  swift_bridgeObjectRetain(v9);
  swift_retain(v10);
  if (v11)
  {
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v13;
    swift_retain(v13);
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v12;
  }
  return a1;
}

uint64_t assignWithCopy for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  swift_retain(v11);
  swift_release(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v16;
      *(_QWORD *)(a1 + 88) = v19;
      swift_retain(v19);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v16)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t assignWithTake for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v9;
      *(_QWORD *)(a1 + 88) = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingReplyMenu(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingReplyMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingReplyMenu()
{
  return &type metadata for ActivitySharingReplyMenu;
}

uint64_t sub_10051D7DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA78C, 1);
}

double sub_10051D7F0(char a1)
{
  double result;

  if ((a1 & 1) == 0)
    return sub_1000D75D0();
  return result;
}

uint64_t sub_10051D814@<X0>(char *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_10051BE58(*(_QWORD *)(v2 + 16), a1, a2);
}

unint64_t sub_10051D81C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838F28;
  if (!qword_100838F28)
  {
    v1 = sub_100007050(&qword_100838F18);
    sub_10051D8A0();
    sub_100028384(&qword_100820870, &qword_100820878, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838F28);
  }
  return result;
}

unint64_t sub_10051D8A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100838F30;
  if (!qword_100838F30)
  {
    v1 = sub_100007050(&qword_100838F38);
    v2[0] = sub_100007050(&qword_100826E38);
    v2[1] = type metadata accessor for IconOnlyLabelStyle(255);
    v2[2] = sub_100028384(&qword_100826E70, &qword_100826E38, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v2[3] = sub_1000083D8(&qword_100838F40, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838F30);
  }
  return result;
}

id sub_10051D9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10051C8D8(a1, v2 + 16, a2);
}

unint64_t sub_10051D9B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = qword_100838F68;
  if (!qword_100838F68)
  {
    v1 = sub_100007050(&qword_100838EF8);
    v2 = sub_100007050(&qword_100838EE8);
    v4 = type metadata accessor for PlainButtonStyle(255, v3);
    v7 = sub_100007050(&qword_100838EE0);
    v8 = type metadata accessor for ButtonMenuStyle(255);
    v9 = sub_100028384(&qword_100838F50, &qword_100838EE0, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v10 = sub_1000083D8(&qword_100838F58, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    v6 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    v7 = v2;
    v8 = v4;
    v9 = OpaqueTypeConformance2;
    v10 = v6;
    swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100028384(&qword_100838F70, &qword_100838F78, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100838F68);
  }
  return result;
}

unint64_t sub_10051DB20()
{
  unint64_t result;

  result = qword_100838F80;
  if (!qword_100838F80)
  {
    result = swift_getWitnessTable(&unk_10064839C, &type metadata for ActivitySharingIdentifiableReply);
    atomic_store(result, (unint64_t *)&qword_100838F80);
  }
  return result;
}

uint64_t sub_10051DB68@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_10051CABC(v2 + 16, a1, a2);
}

void sub_10051DB74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10051CCF8(a1, a2, v2 + 16);
}

unint64_t sub_10051DB7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838F98;
  if (!qword_100838F98)
  {
    v1 = sub_100007050(&qword_100838ED0);
    sub_10051DBE0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100838F98);
  }
  return result;
}

unint64_t sub_10051DBE0()
{
  unint64_t result;

  result = qword_100838FA0;
  if (!qword_100838FA0)
  {
    result = swift_getWitnessTable(&unk_100648374, &type metadata for ActivitySharingIdentifiableReply);
    atomic_store(result, (unint64_t *)&qword_100838FA0);
  }
  return result;
}

void sub_10051DC28(uint64_t a1)
{
  uint64_t v1;

  sub_10051CF58(a1, v1 + 16);
}

uint64_t sub_10051DC30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivitySharingReplyEditView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10051DC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081E640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051DCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivitySharingReplyMessageComposerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051DD00()
{
  uint64_t v0;

  return sub_10051C1E4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10051DD08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838FD0;
  if (!qword_100838FD0)
  {
    v1 = sub_100007050(&qword_100838FC8);
    sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100838FD0);
  }
  return result;
}

uint64_t sub_10051DD84()
{
  uint64_t v0;

  return sub_10051C454(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10051DD8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100838FE8;
  if (!qword_100838FE8)
  {
    v1 = sub_100007050(&qword_100838FB0);
    sub_100028384(&qword_100838FE0, &qword_100838FD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100838FE8);
  }
  return result;
}

uint64_t sub_10051DE18()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 56);
  v3 = 1;
  v1 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_10051DE70()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  if (v0[12])
    swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10051DECC(_QWORD *a1)
{
  uint64_t v1;

  return sub_10051C34C(a1, v1 + 16);
}

uint64_t sub_10051DED4()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  if (v0[12])
    swift_release(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10051DF38()
{
  uint64_t v0;

  return sub_10051C3FC(v0 + 16, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_10051DF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain(v3);
  }
  return a1;
}

unint64_t *assignWithCopy for MessageComposerPresentationHandlingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v7 = a2[1];
      *a1 = v4;
      a1[1] = v7;
      swift_retain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

unint64_t *assignWithTake for MessageComposerPresentationHandlingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v7 = a2[1];
      *a1 = v4;
      a1[1] = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageComposerPresentationHandlingMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MessageComposerPresentationHandlingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_10051E140(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MessageComposerPresentationHandlingMode()
{
  return &type metadata for MessageComposerPresentationHandlingMode;
}

uint64_t sub_10051E170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_100007050(&qword_100838F10);
  v1 = sub_100007050(&qword_100838F08);
  v2 = sub_100007050(&qword_100838ED0);
  v3 = sub_100007050(&qword_100838F00);
  v4 = sub_100007050(&qword_100838F88);
  v15 = sub_100007050(&qword_100838EF8);
  v16 = &type metadata for ActivitySharingIdentifiableReply;
  v17 = type metadata accessor for ActivitySharingReplyMessageComposerView(255);
  v18 = (void *)sub_10051D9B4();
  v19 = sub_10051DB20();
  v20 = sub_1000083D8(&qword_100822480, type metadata accessor for ActivitySharingReplyMessageComposerView, (uint64_t)&unk_100626820);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
  v6 = type metadata accessor for ActivitySharingReplyEditView(255);
  v8 = type metadata accessor for Material(255, v7);
  v9 = sub_1000083D8(&qword_100838F90, type metadata accessor for ActivitySharingReplyEditView, (uint64_t)&unk_10062D0C0);
  v15 = v6;
  v16 = (ValueMetadata *)v8;
  v17 = v9;
  v18 = &protocol witness table for Material;
  v10 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>, 1);
  v15 = v3;
  v16 = (ValueMetadata *)v4;
  v17 = OpaqueTypeConformance2;
  v18 = (void *)v10;
  v11 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
  v12 = sub_10051DB7C();
  v15 = v1;
  v16 = (ValueMetadata *)v2;
  v17 = v11;
  v18 = (void *)v12;
  v13 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v15 = v0;
  v16 = (ValueMetadata *)v13;
  return swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_10051E32C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v5 = static WorkoutConfigurationValidator.shared.getter();
  v6 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v4, v5);
  swift_release(v5);
  swift_bridgeObjectRelease(v4);
  if (!v6)
    return _HKWorkoutGoalType.analyticsKey.getter(objc_msgSend(v1, "_goalType"));
  v7 = objc_msgSend(v6, "analyticsKey");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

  return v8;
}

uint64_t sub_10051E44C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v5 = static WorkoutConfigurationValidator.shared.getter();
  v6 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v4, v5);
  swift_release(v5);
  v7 = swift_bridgeObjectRelease(v4);
  if (!v6)
    return HKWorkoutActivityType.shortenedAnalyticsKey.getter(objc_msgSend(v1, "workoutActivityType"));
  v8 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v7);
  v9 = objc_msgSend(v8, "effectiveTypeIdentifier");

  v10 = HKWorkoutActivityType.shortenedAnalyticsKey.getter(v9);
  return v10;
}

uint64_t sub_10051E56C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  void *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  unsigned int v16;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v5 = static WorkoutConfigurationValidator.shared.getter();
  v6 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v4, v5);
  swift_release(v5);
  swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
  if (v6)
  {
    v15 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v14);
    v16 = objc_msgSend(v15, "isIndoor");

  }
  else
  {
    v16 = sub_10051E7D8(v1);
  }
  if (v16)
    return 0x726F6F646E69;
  else
    return 0x726F6F6474756FLL;
}

id sub_10051E690()
{
  void *v0;
  id v1;
  void *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  void *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id result;
  void *v17;
  uint64_t v18;
  id v19;

  v1 = objc_msgSend(v0, "metadata");
  if (v1)
  {
    v2 = v1;
    v3 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v3 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v4 = static WorkoutConfigurationValidator.shared.getter();
  v5 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v3, v4);
  swift_release(v4);
  swift_bridgeObjectRelease(v3, v6, v7, v8, v9, v10, v11, v12);
  if (v5)
  {
    v14 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v13);
    v15 = objc_msgSend(v14, "swimmingLocationType");

    result = (id)_HKWorkoutSwimmingLocationTypeName(v15);
    if (result)
    {
      v17 = result;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

LABEL_9:
      return (id)v18;
    }
    __break(1u);
  }
  else
  {
    v19 = sub_100374664();
    result = (id)_HKWorkoutSwimmingLocationTypeName(v19);
    if (result)
    {
      v17 = result;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

id sub_10051E7D8(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "metadata"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", HKMetadataKeyIndoorWorkout));
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

uint64_t destroy for PauseRingsContainerView(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 24));
  return swift_release(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = v3;
  swift_retain(v4);
  v8 = v5;
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(void **)(a2 + 32);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v11 = v9;

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for PauseRingsContainerView()
{
  return &type metadata for PauseRingsContainerView;
}

uint64_t sub_10051EA24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BA7D0, 1);
}

uint64_t sub_10051EA34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  double (**v20)();
  unint64_t v21;
  unint64_t v22;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v3 = sub_100047110(&qword_100839000);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100047110(&qword_100839008);
  __chkstk_darwin(v34);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v32 - v10;
  v33 = sub_100047110(&qword_100839010);
  __chkstk_darwin(v33);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    v24 = *(void **)v1;
    v25 = *(_BYTE *)(v1 + 9);
    v27 = *(_QWORD *)(v1 + 16);
    v26 = *(_QWORD *)(v1 + 24);
    v35 = 1;
    v28 = v24;
    swift_retain(v26);
    State.init(wrappedValue:)(&v36, &v35, &type metadata for Int);
    v29 = v36;
    *(_QWORD *)v14 = v28;
    v14[8] = v25;
    v14[9] = 1;
    *((_QWORD *)v14 + 2) = v27;
    *((_QWORD *)v14 + 3) = v26;
    *((_OWORD *)v14 + 2) = v29;
    swift_storeEnumTagMultiPayload(v14, v33, 0);
    v30 = sub_1005211B4();
    v31 = sub_1005211F8();
    return _ConditionalContent<>.init(storage:)(v14, &type metadata for PauseRingsCustomDateView, v34, v30, v31);
  }
  else
  {
    v32[1] = v32;
    __chkstk_darwin(v12);
    v32[2] = a1;
    v32[-2] = v1;
    v15 = sub_100047110(&qword_100839018);
    v16 = sub_100028384(&qword_100839020, &qword_100839018, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    NavigationStack.init<>(root:)(sub_100521104, &v32[-4], v15, v16);
    v17 = swift_allocObject(&unk_1007A6CB8, 72, 7);
    v18 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v17 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v17 + 32) = v18;
    *(_OWORD *)(v17 + 48) = *(_OWORD *)(v1 + 32);
    *(_QWORD *)(v17 + 64) = *(_QWORD *)(v1 + 48);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
    v19 = v34;
    v20 = (double (**)())&v8[*(int *)(v34 + 36)];
    *v20 = sub_100521164;
    v20[1] = (double (*)())v17;
    v20[2] = 0;
    v20[3] = 0;
    sub_10052116C(v1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100045AD4((uint64_t)v8, (uint64_t)v11, &qword_100839008);
    sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_100839008);
    swift_storeEnumTagMultiPayload(v14, v33, 1);
    v21 = sub_1005211B4();
    v22 = sub_1005211F8();
    _ConditionalContent<>.init(storage:)(v14, &type metadata for PauseRingsCustomDateView, v19, v21, v22);
    return sub_10001BE90((uint64_t)v11, &qword_100839008);
  }
}

double sub_10051ED44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor(0);
  v6 = sub_10052116C(a1);
  v7 = static MainActor.shared.getter(v6);
  v8 = swift_allocObject(&unk_1007A6CE0, 88, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = &protocol witness table for MainActor;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(a1 + 48);
  v10 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_100839048, v8);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_10051EE34()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100839054);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_10016D0B4;
  return sub_10051EE98();
}

uint64_t sub_10051EE98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[5] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[6] = v3;
  v1[7] = v4;
  return swift_task_switch(sub_10051EF04, v3, v4);
}

uint64_t sub_10051EF04()
{
  uint64_t v0;
  void *v1;
  __n128 v2;
  _QWORD *v4;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + 32);
  *(_QWORD *)(v0 + 64) = v1;
  if ((objc_msgSend(v1, "paused") & 1) != 0)
  {
    v2 = swift_release(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10051EF8C;
    return static Task<>.sleep(nanoseconds:)(250000000);
  }
}

uint64_t sub_10051EF8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 72));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 48);
    v4 = *(_QWORD *)(v2 + 56);
    v5 = sub_1005218E0;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 48);
    v4 = *(_QWORD *)(v2 + 56);
    v5 = sub_10051EFF4;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10051EFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 64), "setDeprecatedPauseForInternalSwiftClient:", 1, swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 40);
  *(_BYTE *)(v0 + 80) = 1;
  v2 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(v0 + 80, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051F074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v10[4];
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v10[2] = a2;
  v10[3] = a1;
  v2 = static Axis.Set.vertical.getter(a1);
  v3 = sub_100047110(&qword_100839058);
  v4 = sub_100007050(&qword_100839060);
  v5 = sub_100007050(&qword_1008299A8);
  v6 = sub_100521340();
  v11 = sub_100007050(&qword_100820FD8);
  v12 = sub_100028384(&qword_100820FF0, &qword_100820FD8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = OpaqueTypeConformance2;
  v8 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  return ScrollView.init(_:showsIndicators:content:)(v2, 1, sub_100521338, v10, v3, v8);
}

uint64_t sub_10051F178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  char v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _BYTE v39[4];
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _OWORD v43[7];

  v41 = a2;
  v3 = sub_100047110(&qword_100839078);
  __chkstk_darwin(v3);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100047110(&qword_100839060);
  __chkstk_darwin(v6);
  v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_100047110(&qword_100839058);
  v9 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v12, v13, v14, v15, v16);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v17 = sub_100047110(&qword_100839080);
  v18 = sub_10051F474(a1, (uint64_t)&v5[*(int *)(v17 + 44)]);
  GeometryProxy.size.getter(v18);
  v20 = v19;
  v22 = static Alignment.center.getter(v21);
  LOBYTE(v37) = 1;
  v35 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v43, 0, 1, 0, 1, 0, 1, v20, 0, 0, v35, 0, v37, v22, v23);
  sub_100021CC0((uint64_t)v5, (uint64_t)v8, &qword_100839078);
  v24 = &v8[*(int *)(v6 + 36)];
  v25 = v43[5];
  v24[4] = v43[4];
  v24[5] = v25;
  v24[6] = v43[6];
  v26 = v43[1];
  *v24 = v43[0];
  v24[1] = v26;
  v27 = v43[3];
  v24[2] = v43[2];
  v24[3] = v27;
  v28 = sub_10001BE90((uint64_t)v5, &qword_100839078);
  __chkstk_darwin(v28);
  v38 = a1;
  v29 = sub_100047110(&qword_1008299A8);
  v30 = sub_100521340();
  v31 = sub_100007050(&qword_100820FD8);
  v32 = sub_100028384(&qword_100820FF0, &qword_100820FD8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v42[0] = v31;
  v42[1] = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v42, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_1005213C4, &v36, v6, v29, v30, OpaqueTypeConformance2);
  sub_10001BE90((uint64_t)v8, &qword_100839060);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v41, v11, v40);
}

uint64_t sub_10051F474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  __n128 v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t KeyPath;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  char v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  char v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  void *v104;
  void (**v105)(uint64_t, uint64_t);
  uint64_t v106;
  void *v107;
  double v108;
  double v109;
  double v110;
  double v111;
  id v112;
  unsigned int v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;
  unsigned __int8 v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  _OWORD *v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  SEL v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  uint64_t v162;
  int v163;
  int v164;
  uint64_t v165;
  double v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  CHWorkoutDetailHeartRateTableViewCell *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  void (**v183)(uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  unsigned __int8 v189;
  unsigned __int8 v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  _OWORD v199[2];
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  _OWORD v207[3];
  char v208;
  char v209;
  char v210;
  _OWORD v211[7];
  _OWORD v212[2];
  uint64_t v213;
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  uint64_t v218;

  v173 = a2;
  v3 = sub_100047110(&qword_100839088);
  __chkstk_darwin(v3);
  v186 = (uint64_t)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v174 = (uint64_t *)((char *)&v162 - v6);
  v7 = type metadata accessor for AccessibilityTraits(0);
  v183 = *(void (***)(uint64_t, uint64_t))(v7 - 8);
  v184 = v7;
  __chkstk_darwin(v7);
  v181 = (uint64_t)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100839090);
  __chkstk_darwin(v9);
  v187 = (uint64_t)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v182 = (char *)&v162 - v12;
  __chkstk_darwin(v13);
  v185 = (uint64_t)&v162 - v14;
  v172 = a1;
  if ((*(_BYTE *)(a1 + 9) & 1) != 0)
  {
    v16 = 0xD000000000000014;
    v15 = 0x80000001006A4440;
  }
  else
  {
    v15 = 0x80000001006A4400;
    v16 = 0xD000000000000010;
  }
  v17 = LocalizedStringKey.init(stringLiteral:)(v16, v15);
  v18 = Text.init(_:tableName:bundle:comment:)(v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = static Font.largeTitle.getter();
  v27 = Text.font(_:)(v25, v18, v20, v24, v22, v26);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v25);
  v34 = v31 & 1;
  sub_1000E4458(v18, v20, v24);
  swift_bridgeObjectRelease(v22, v35, v36, v37, v38, v39, v40, v41);
  v43 = static Font.Weight.bold.getter(v42);
  v44 = Text.fontWeight(_:)(*(_QWORD *)&v43, 0, v27, v29, v34, v33);
  v46 = v45;
  LOBYTE(v24) = v47;
  v49 = v48;
  sub_1000E4458(v27, v29, v34);
  swift_bridgeObjectRelease(v33, v50, v51, v52, v53, v54, v55, v56);
  KeyPath = swift_getKeyPath(&unk_100643A68);
  LOBYTE(v34) = static Edge.Set.bottom.getter(KeyPath);
  v58 = EdgeInsets.init(_all:)(15.0);
  v60 = v59;
  v62 = v61;
  v64 = v63;
  LOBYTE(v29) = static Edge.Set.horizontal.getter(v65);
  v66 = EdgeInsets.init(_all:)(32.0);
  v210 = v24 & 1;
  v209 = 0;
  v208 = 0;
  *(_QWORD *)&v200 = v44;
  *((_QWORD *)&v200 + 1) = v46;
  LOBYTE(v201) = v24 & 1;
  *((_QWORD *)&v201 + 1) = v49;
  *(_QWORD *)&v202 = KeyPath;
  BYTE8(v202) = 1;
  LOBYTE(v203) = v34;
  *((double *)&v203 + 1) = v58;
  *(_QWORD *)&v204 = v60;
  *((_QWORD *)&v204 + 1) = v62;
  *(_QWORD *)&v205 = v64;
  BYTE8(v205) = 0;
  LOBYTE(v206) = v29;
  *((double *)&v206 + 1) = v66;
  *(_QWORD *)&v207[0] = v67;
  *((_QWORD *)&v207[0] + 1) = v68;
  *(_QWORD *)&v207[1] = v69;
  BYTE8(v207[1]) = 0;
  v70 = v181;
  static AccessibilityTraits.isHeader.getter();
  v71 = sub_100047110(&qword_100839098);
  v72 = sub_1000F4518(&qword_1008390A0, &qword_100839098, (void (*)(void))sub_10011DA7C);
  v73 = (uint64_t)v182;
  View.accessibilityAddTraits(_:)(v70, v71, v72);
  v183[1](v70, v184);
  v211[6] = v206;
  v212[0] = v207[0];
  *(_OWORD *)((char *)v212 + 9) = *(_OWORD *)((char *)v207 + 9);
  v211[2] = v202;
  v211[3] = v203;
  v211[4] = v204;
  v211[5] = v205;
  v211[0] = v200;
  v211[1] = v201;
  sub_1001E06B4((uint64_t)v211);
  v74 = v185;
  sub_100045AD4(v73, v185, &qword_100839090);
  v75 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001CLL, 0x80000001006A4420);
  v76 = Text.init(_:tableName:bundle:comment:)(v75);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  v84 = static Font.body.getter(v83);
  v181 = Text.font(_:)(v84, v76, v78, v82, v80, v85);
  v170 = v86;
  v171 = v87;
  LOBYTE(v49) = v88;
  swift_release(v84);
  v169 = v49 & 1;
  sub_1000E4458(v76, v78, v82);
  swift_bridgeObjectRelease(v80, v89, v90, v91, v92, v93, v94, v95);
  v168 = swift_getKeyPath(&unk_100643A68);
  v167 = static Edge.Set.horizontal.getter(v168);
  v96 = EdgeInsets.init(_all:)(32.0);
  v165 = v97;
  v166 = v96;
  v99 = v98;
  v101 = v100;
  v102 = v172;
  if ((*(_BYTE *)(v172 + 10) & 1) != 0)
    v103 = 2;
  else
    v103 = 1;
  v175 = v103;
  v104 = *(void **)(v172 + 32);
  v200 = *(_OWORD *)(v172 + 40);
  v105 = v104;
  v183 = v105;
  v106 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v191, v106);
  LODWORD(v184) = v191;
  v107 = (void *)objc_opt_self(ARUIRingGroup);
  objc_msgSend(v107, "preferredActivityRingThicknessForDiameter:", 208.0);
  v109 = v108;
  objc_msgSend(v107, "preferredActivityRingInterspacingForDiameter:", 208.0);
  v111 = v110;
  v112 = objc_msgSend(v105, "paused");
  LODWORD(v182) = (_DWORD)v112;
  *(float *)&v113 = v109;
  *(float *)&v114 = v111;
  v115 = static Alignment.center.getter(v112);
  v117 = _FrameLayout.init(width:height:alignment:)(&v213, 0, 1, 0x406A000000000000, 0, v115, v116);
  LOBYTE(v107) = v214;
  v179 = v215;
  v180 = v213;
  LOBYTE(v105) = v216;
  v177 = v218;
  v178 = v217;
  v176 = static Edge.Set.vertical.getter(v117);
  v118 = EdgeInsets.init(_all:)(37.0);
  v120 = v119;
  v122 = v121;
  v124 = v123;
  v190 = v107;
  v189 = v105;
  v188 = 0;
  v130 = static HorizontalAlignment.center.getter(v125, v126, v127, v128, v129);
  v131 = (uint64_t)v174;
  *v174 = v130;
  *(_QWORD *)(v131 + 8) = 0;
  *(_BYTE *)(v131 + 16) = 0;
  v132 = sub_100047110(&qword_1008390A8);
  sub_10051FD34(v102, v131 + *(int *)(v132 + 44));
  v133 = v187;
  sub_100021CC0(v74, v187, &qword_100839090);
  v134 = v190;
  v135 = v189;
  LODWORD(v172) = v189;
  LOBYTE(v105) = v188;
  v163 = v188;
  v164 = v190;
  sub_100021CC0(v131, v186, &qword_100839088);
  v136 = v173;
  sub_100021CC0(v133, v173, &qword_100839090);
  v137 = (int *)sub_100047110(&qword_1008390B0);
  v138 = v136 + v137[12];
  v140 = v170;
  v139 = v171;
  *(_QWORD *)v138 = v181;
  *(_QWORD *)(v138 + 8) = v140;
  v141 = v169;
  *(_BYTE *)(v138 + 16) = v169;
  v142 = v168;
  *(_QWORD *)(v138 + 24) = v139;
  *(_QWORD *)(v138 + 32) = v142;
  *(_BYTE *)(v138 + 40) = 1;
  *(_BYTE *)(v138 + 48) = v167;
  v143 = v165;
  *(double *)(v138 + 56) = v166;
  *(_QWORD *)(v138 + 64) = v143;
  *(_QWORD *)(v138 + 72) = v99;
  *(_QWORD *)(v138 + 80) = v101;
  *(_BYTE *)(v138 + 88) = 0;
  v144 = (_OWORD *)(v136 + v137[16]);
  *(_QWORD *)&v191 = v183;
  BYTE8(v191) = (_BYTE)v182;
  HIDWORD(v191) = 1129316352;
  *(_QWORD *)&v192 = __PAIR64__(v114, v113);
  WORD4(v192) = 2;
  BYTE10(v192) = v184;
  *(_WORD *)((char *)&v192 + 11) = v175;
  v193 = 0;
  v194 = 0;
  *(_QWORD *)&v195 = v180;
  BYTE8(v195) = v134;
  *(_QWORD *)&v196 = v179;
  BYTE8(v196) = v135;
  *(_QWORD *)&v197 = v178;
  *((_QWORD *)&v197 + 1) = v177;
  LOBYTE(v198) = v176;
  *((double *)&v198 + 1) = v118;
  *(_QWORD *)&v199[0] = v120;
  *((_QWORD *)&v199[0] + 1) = v122;
  *(_QWORD *)&v199[1] = v124;
  BYTE8(v199[1]) = (_BYTE)v105;
  v145 = v195;
  v144[2] = 0u;
  v144[3] = v145;
  v146 = v192;
  *v144 = v191;
  v144[1] = v146;
  v147 = v196;
  v148 = v197;
  v149 = v198;
  *(_OWORD *)((char *)v144 + 121) = *(_OWORD *)((char *)v199 + 9);
  v150 = v199[0];
  v144[6] = v149;
  v144[7] = v150;
  v144[4] = v147;
  v144[5] = v148;
  v151 = v136 + v137[20];
  *(_QWORD *)v151 = 0;
  *(_BYTE *)(v151 + 8) = 1;
  v152 = v186;
  sub_100021CC0(v186, v136 + v137[24], &qword_100839088);
  v153 = v181;
  sub_1000E439C(v181, v140, v141);
  swift_bridgeObjectRetain(v139);
  swift_retain(v142);
  sub_10042CC14((uint64_t)&v191);
  sub_10001BE90(v131, &qword_100839088);
  sub_10001BE90(v185, &qword_100839090);
  sub_10001BE90(v152, &qword_100839088);
  *(_QWORD *)&v200 = v183;
  BYTE8(v200) = (_BYTE)v182;
  HIDWORD(v200) = 1129316352;
  *(_QWORD *)&v201 = __PAIR64__(v114, v113);
  WORD4(v201) = 2;
  BYTE10(v201) = v184;
  *(_WORD *)((char *)&v201 + 11) = v175;
  v202 = 0uLL;
  *(_QWORD *)&v203 = v180;
  BYTE8(v203) = v164;
  *(_QWORD *)&v204 = v179;
  BYTE8(v204) = v172;
  *(_QWORD *)&v205 = v178;
  *((_QWORD *)&v205 + 1) = v177;
  LOBYTE(v206) = v176;
  *((double *)&v206 + 1) = v118;
  *(_QWORD *)&v207[0] = v120;
  *((_QWORD *)&v207[0] + 1) = v122;
  *(_QWORD *)&v207[1] = v124;
  BYTE8(v207[1]) = v163;
  sub_10042CC54((uint64_t)&v200);
  sub_1000E4458(v153, v140, v141);
  swift_release(v142);
  swift_bridgeObjectRelease(v139, v154, v155, v156, v157, v158, v159, v160);
  return sub_10001BE90(v187, &qword_100839090);
}

uint64_t sub_10051FD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  unint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v80;
  char v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD v103[7];

  v102 = a2;
  v3 = type metadata accessor for ButtonBorderShape(0);
  v100 = *(_QWORD *)(v3 - 8);
  v101 = v3;
  __chkstk_darwin(v3);
  v99 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for ControlSize(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for BorderedProminentButtonStyle(0);
  v88 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008390B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008390C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100047110(&qword_1008390C8);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_1008390D0);
  __chkstk_darwin(v84);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100047110(&qword_1008390D8);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v83 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_1008390E0);
  __chkstk_darwin(v92);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_1008390E8);
  __chkstk_darwin(v96);
  v95 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100047110(&qword_1008390F0);
  __chkstk_darwin(v98);
  v97 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005204AC(a1, v10);
  v24 = static Color.white.getter(v23);
  KeyPath = swift_getKeyPath(&unk_100643A98);
  sub_100021CC0((uint64_t)v10, (uint64_t)v13, &qword_1008390B8);
  v26 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  v27 = sub_10001BE90((uint64_t)v10, &qword_1008390B8);
  BorderedProminentButtonStyle.init()(v27);
  v28 = sub_10052141C();
  v29 = sub_1000083D8((unint64_t *)&qword_10081F2E8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v30 = v11;
  v31 = v86;
  View.buttonStyle<A>(_:)(v7, v30, v86, v28, v29);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v7, v31);
  sub_10001BE90((uint64_t)v13, &qword_1008390C0);
  v32 = v90;
  v33 = v89;
  v34 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, enum case for ControlSize.large(_:), v91);
  v35 = swift_getKeyPath(&unk_100643AC8);
  v36 = v84;
  v37 = (uint64_t *)&v17[*(int *)(v84 + 36)];
  v38 = sub_100047110(&qword_10081F2F0);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v37 + *(int *)(v38 + 28), v33, v34);
  *v37 = v35;
  v39 = v85;
  v40 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v17, v15, v87);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  v41 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v40);
  v42 = static Font.Weight.semibold.getter(v41);
  v43 = sub_100521560();
  v44 = v83;
  View.fontWeight(_:)(*(_QWORD *)&v42, 0, v36, v43);
  sub_10001BE90((uint64_t)v17, &qword_1008390D0);
  v45 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
  v46 = Color.init(uiColor:)(v45);
  v47 = swift_getKeyPath(&unk_100643AF8);
  *(_QWORD *)&v103[0] = v46;
  swift_retain(v46);
  v48 = AnyShapeStyle.init<A>(_:)(v103, &type metadata for Color, &protocol witness table for Color);
  v49 = v93;
  v50 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v20, v44, v94);
  v51 = swift_release(v46);
  v52 = (uint64_t *)&v20[*(int *)(v92 + 36)];
  *v52 = v47;
  v52[1] = v48;
  v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v44, v50, v51);
  v54 = static Alignment.center.getter(v53);
  v81 = 1;
  v80 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v103, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0x4044000000000000, 0, 0, v80, 0, v81, v54, v55);
  v56 = v95;
  sub_100021CC0((uint64_t)v20, v95, &qword_1008390E0);
  v57 = (_OWORD *)(v56 + *(int *)(v96 + 36));
  v58 = v103[5];
  v57[4] = v103[4];
  v57[5] = v58;
  v57[6] = v103[6];
  v59 = v103[1];
  *v57 = v103[0];
  v57[1] = v59;
  v60 = v103[3];
  v57[2] = v103[2];
  v57[3] = v60;
  v61 = sub_10001BE90((uint64_t)v20, &qword_1008390E0);
  v62 = v99;
  static ButtonBorderShape.roundedRectangle(radius:)(v61, 12.0);
  v63 = swift_getKeyPath(&unk_100643B28);
  v64 = (uint64_t)v97;
  v65 = (uint64_t *)&v97[*(int *)(v98 + 36)];
  v66 = sub_100047110(&qword_100839120);
  v68 = v100;
  v67 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))((char *)v65 + *(int *)(v66 + 28), v62, v101);
  *v65 = v63;
  sub_100021CC0(v56, v64, &qword_1008390E8);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v67);
  v69 = sub_10001BE90(v56, &qword_1008390E8);
  LOBYTE(v63) = static Edge.Set.horizontal.getter(v69);
  v70 = EdgeInsets.init(_all:)(16.0);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v102;
  sub_100021CC0(v64, v102, &qword_1008390F0);
  v78 = v77 + *(int *)(sub_100047110(&qword_100839128) + 36);
  *(_BYTE *)v78 = v63;
  *(double *)(v78 + 8) = v70;
  *(_QWORD *)(v78 + 16) = v72;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v76;
  *(_BYTE *)(v78 + 40) = 0;
  return sub_10001BE90(v64, &qword_1008390F0);
}

uint64_t sub_1005204AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t);
  uint64_t KeyPath;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;

  v67 = a2;
  v3 = sub_100047110(&qword_100839130);
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  __chkstk_darwin(v3);
  v60 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100047110(&qword_100839138);
  __chkstk_darwin(v64);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (uint64_t)&v59 - v8;
  v9 = sub_100047110(&qword_100839140);
  v62 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v61 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  v14 = sub_100047110(&qword_100839148);
  v15 = type metadata accessor for PauseRingsPeriod(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v14, v19 + 3 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100624A40;
  v21 = v20 + v19;
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104);
  v22(v21, enum case for PauseRingsPeriod.endOfDay(_:), v15);
  v22(v21 + v17, enum case for PauseRingsPeriod.endOfWeek(_:), v15);
  v22(v21 + 2 * v17, enum case for PauseRingsPeriod.endOfMonth(_:), v15);
  *(_QWORD *)&v69 = v20;
  KeyPath = swift_getKeyPath(&unk_100643B60);
  v24 = swift_allocObject(&unk_1007A6D58, 72, 7);
  v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v24 + 64) = *(_QWORD *)(a1 + 48);
  sub_10052116C(a1);
  v26 = sub_100047110(&qword_100839150);
  v27 = sub_100047110(&qword_100839158);
  v28 = sub_100028384(&qword_100839160, &qword_100839150, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_1000083D8(&qword_100839168, (uint64_t (*)(uint64_t))&type metadata accessor for PauseRingsPeriod, (uint64_t)&protocol conformance descriptor for PauseRingsPeriod);
  v30 = sub_100521718();
  ForEach<>.init(_:id:content:)(&v69, KeyPath, sub_100521710, v24, v26, v27, v28, v29, v30);
  v31 = *(void **)a1;
  LOBYTE(v26) = *(_BYTE *)(a1 + 9);
  v33 = *(_QWORD *)(a1 + 16);
  v32 = *(_QWORD *)(a1 + 24);
  v68 = 1;
  v34 = v31;
  swift_retain(v32);
  State.init(wrappedValue:)(&v69, &v68, &type metadata for Int);
  v35 = v69;
  *(_QWORD *)&v69 = v34;
  WORD4(v69) = v26;
  v70 = v33;
  v71 = v32;
  v72 = v35;
  v36 = sub_100047110(&qword_10081F2D0);
  v37 = sub_1000EA094();
  v38 = sub_1005211B4();
  v39 = v60;
  v40 = NavigationLink.init(destination:label:)(&v69, sub_100520D58, 0, v36, &type metadata for PauseRingsCustomDateView, v37, v38);
  LOBYTE(v36) = static Edge.Set.bottom.getter(v40);
  v41 = EdgeInsets.init(_all:)(2.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v65;
  v48 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v6, v39, v66);
  v50 = &v6[*(int *)(v64 + 36)];
  *v50 = v36;
  *((double *)v50 + 1) = v41;
  *((_QWORD *)v50 + 2) = v43;
  *((_QWORD *)v50 + 3) = v45;
  *((_QWORD *)v50 + 4) = v47;
  v50[40] = 0;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v48);
  v51 = v63;
  sub_100045AD4((uint64_t)v6, v63, &qword_100839138);
  v52 = v61;
  v53 = v62;
  v54 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v54(v61, v13, v9);
  sub_100021CC0(v51, (uint64_t)v6, &qword_100839138);
  v55 = v67;
  v54(v67, v52, v9);
  v56 = sub_100047110(&qword_100839178);
  sub_100021CC0((uint64_t)v6, (uint64_t)&v55[*(int *)(v56 + 48)], &qword_100839138);
  sub_10001BE90(v51, &qword_100839138);
  v57 = *(void (**)(char *, uint64_t))(v53 + 8);
  v57(v13, v9);
  sub_10001BE90((uint64_t)v6, &qword_100839138);
  return ((uint64_t (*)(char *, uint64_t))v57)(v52, v9);
}

uint64_t sub_10052093C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t v34;

  v32 = a3;
  v5 = type metadata accessor for PauseRingsPeriod(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081F2B8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v11);
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = (v14 + 72) & ~v14;
  v16 = swift_allocObject(&unk_1007A6D80, v15 + v7, v14 | 7);
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v16 + 64) = *(_QWORD *)(a2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v8, v5);
  v34 = a1;
  sub_10052116C(a2);
  v18 = sub_100047110(&qword_10081F2D0);
  v19 = sub_1000EA094();
  v20 = Button.init(action:label:)(sub_100521828, v16, sub_100521868, v33, v18, v19);
  LOBYTE(v18) = static Edge.Set.bottom.getter(v20);
  v21 = EdgeInsets.init(_all:)(5.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v32, v13, v9);
  v29 = v28 + *(int *)(sub_100047110(&qword_100839158) + 36);
  *(_BYTE *)v29 = v18;
  *(double *)(v29 + 8) = v21;
  *(_QWORD *)(v29 + 16) = v23;
  *(_QWORD *)(v29 + 24) = v25;
  *(_QWORD *)(v29 + 32) = v27;
  *(_BYTE *)(v29 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100520B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v12;
  Class isa;
  uint64_t v14;

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  PauseRingsPeriod.date()(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v10 = sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(uint64_t))(v0 + 16))(v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    v12 = *(void **)v0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "pauseRingsUntilDate:completionHandler:", isa, 0);

    (*(void (**)(void))(v1 + 16))();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

__n128 sub_100520C60@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  _OWORD v25[9];

  *(_QWORD *)&v25[0] = PauseRingsPeriod.localizedTitleForCurrentDate.getter(a1);
  *((_QWORD *)&v25[0] + 1) = v3;
  v4 = sub_100038CA0();
  v5 = Text.init<A>(_:)(v25, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Alignment.center.getter(v5);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v25, 0.0, 1, 0.0, 1, v12, v13, v5, v7, v11, (uint64_t)v9);
  sub_1000E4458(v5, v7, v11);
  swift_bridgeObjectRelease(v9, v14, v15, v16, v17, v18, v19, v20);
  v21 = v25[7];
  *(_OWORD *)(a2 + 96) = v25[6];
  *(_OWORD *)(a2 + 112) = v21;
  *(_OWORD *)(a2 + 128) = v25[8];
  v22 = v25[3];
  *(_OWORD *)(a2 + 32) = v25[2];
  *(_OWORD *)(a2 + 48) = v22;
  v23 = v25[5];
  *(_OWORD *)(a2 + 64) = v25[4];
  *(_OWORD *)(a2 + 80) = v23;
  result = (__n128)v25[1];
  *(_OWORD *)a2 = v25[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

__n128 sub_100520D58@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 result;
  _OWORD v32[9];

  v2 = type metadata accessor for PauseRingsPeriod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v6);
  v7 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for PauseRingsPeriod.custom(_:), v2);
  v8 = PauseRingsPeriod.localizedTitleForCurrentDate.getter(v7);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)&v32[0] = v8;
  *((_QWORD *)&v32[0] + 1) = v10;
  v11 = sub_100038CA0();
  v12 = Text.init<A>(_:)(v32, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  LOBYTE(v10) = v17 & 1;
  v18 = static Alignment.center.getter(v12);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v32, 0.0, 1, 0.0, 1, v18, v19, v12, v14, v10, (uint64_t)v16);
  sub_1000E4458(v12, v14, v10);
  swift_bridgeObjectRelease(v16, v20, v21, v22, v23, v24, v25, v26);
  v27 = v32[7];
  *(_OWORD *)(a1 + 96) = v32[6];
  *(_OWORD *)(a1 + 112) = v27;
  *(_OWORD *)(a1 + 128) = v32[8];
  v28 = v32[3];
  *(_OWORD *)(a1 + 32) = v32[2];
  *(_OWORD *)(a1 + 48) = v28;
  v29 = v32[5];
  *(_OWORD *)(a1 + 64) = v32[4];
  *(_OWORD *)(a1 + 80) = v29;
  result = (__n128)v32[1];
  *(_OWORD *)a1 = v32[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100520EC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100047110(&qword_100820FD8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarLeading.getter(v9);
  v15 = a1;
  v10 = sub_100047110(&qword_100820FE0);
  v11 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  ToolbarItem<>.init(placement:content:)(v4, sub_1005213CC, v14, v10, v11);
  v12 = sub_100028384(&qword_100820FF0, &qword_100820FD8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100521010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v2 = LocalizedStringKey.init(stringLiteral:)(0x4C45434E4143, 0xE600000000000000);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = swift_allocObject(&unk_1007A6D30, 72, 7);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a1 + 48);
  sub_10052116C(a1);
  return Button<>.init(_:action:)(v2, v4, v6 & 1, v8, sub_10024C8B0, v9);
}

uint64_t sub_1005210C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10051EA34(a1);
}

uint64_t sub_100521104@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_allocObject(&unk_1007A6D08, 72, 7);
  v6 = *(_OWORD *)(v3 + 16);
  v5 = *(_OWORD *)(v3 + 32);
  v7 = *(_OWORD *)v3;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v6;
  *(_OWORD *)(v4 + 48) = v5;
  *a1 = sub_100521330;
  a1[1] = (uint64_t (*)(uint64_t))v4;
  return sub_10052116C(v3);
}

double sub_100521164()
{
  uint64_t v0;

  return sub_10051ED44(v0 + 16);
}

uint64_t sub_10052116C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  swift_retain(*(_QWORD *)(a1 + 48));
  v5 = v2;
  swift_retain(v3);
  v6 = v4;
  return a1;
}

unint64_t sub_1005211B4()
{
  unint64_t result;

  result = qword_100839028;
  if (!qword_100839028)
  {
    result = swift_getWitnessTable(&unk_10063058C, &type metadata for PauseRingsCustomDateView);
    atomic_store(result, (unint64_t *)&qword_100839028);
  }
  return result;
}

unint64_t sub_1005211F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839030;
  if (!qword_100839030)
  {
    v1 = sub_100007050(&qword_100839008);
    sub_100028384(&qword_100839038, &qword_100839000, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839030);
  }
  return result;
}

uint64_t sub_10052127C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1005212C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100839044);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000DA0E4;
  return sub_10051EE34();
}

uint64_t sub_100521330(uint64_t a1)
{
  uint64_t v1;

  return sub_10051F074(a1, v1 + 16);
}

uint64_t sub_100521338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10051F178(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100521340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839068;
  if (!qword_100839068)
  {
    v1 = sub_100007050(&qword_100839060);
    sub_100028384(&qword_100839070, &qword_100839078, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839068);
  }
  return result;
}

uint64_t sub_1005213C4()
{
  uint64_t v0;

  return sub_100520EC8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005213CC()
{
  uint64_t v0;

  return sub_100521010(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005213D8()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1005213F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_10052141C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008390F8;
  if (!qword_1008390F8)
  {
    v1 = sub_100007050(&qword_1008390C0);
    sub_1005214A0();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008390F8);
  }
  return result;
}

unint64_t sub_1005214A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839100;
  if (!qword_100839100)
  {
    v1 = sub_100007050(&qword_1008390B8);
    sub_100028384(&qword_100839108, &qword_100839110, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100839100);
  }
  return result;
}

uint64_t sub_10052151C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_10052153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_100521560()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100839118;
  if (!qword_100839118)
  {
    v1 = sub_100007050(&qword_1008390D0);
    v2[0] = sub_100007050(&qword_1008390C0);
    v2[1] = type metadata accessor for BorderedProminentButtonStyle(255);
    v2[2] = sub_10052141C();
    v2[3] = sub_1000083D8((unint64_t *)&qword_10081F2E8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100028384(&qword_1008292E0, &qword_10081F2F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839118);
  }
  return result;
}

uint64_t sub_100521658()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100521678()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100521698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1005216AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457C3C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1005216D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100521710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10052093C(a1, v2 + 16, a2);
}

unint64_t sub_100521718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839170;
  if (!qword_100839170)
  {
    v1 = sub_100007050(&qword_100839158);
    sub_100028384(&qword_10081F2E0, &qword_10081F2B8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839170);
  }
  return result;
}

uint64_t sub_10052179C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PauseRingsPeriod(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100521828()
{
  type metadata accessor for PauseRingsPeriod(0);
  return sub_100520B24();
}

double sub_100521868@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100520C60(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100521874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839180;
  if (!qword_100839180)
  {
    v1 = sub_100007050(&qword_100839188);
    sub_1005211B4();
    sub_1005211F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839180);
  }
  return result;
}

uint64_t sub_1005218E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for WalkSuggestionClient(0);
  v0[4] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[5] = v2;
  v0[6] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100521940, 0, 0);
}

uint64_t sub_100521940()
{
  uint64_t v0;
  _QWORD *v1;

  WalkSuggestionClient.init()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to WalkSuggestionClient.activate()[1]);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_100521994;
  return WalkSuggestionClient.activate()();
}

uint64_t sub_100521994()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  v2 = (_QWORD *)swift_task_alloc(async function pointer to WalkSuggestionClient.requestWalkSuggestion()[1]);
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v4;
  v2[1] = sub_1005219FC;
  return WalkSuggestionClient.requestWalkSuggestion()();
}

uint64_t sub_1005219FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v6 = *(_QWORD *)(*v3 + 64);
  v7 = *v3;
  *(_QWORD *)(v7 + 72) = v2;
  swift_task_dealloc(v6);
  if (v2)
    return swift_task_switch(sub_100521B5C, 0, 0);
  *(_BYTE *)(v7 + 104) = a2;
  *(_QWORD *)(v7 + 80) = a1;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to WalkSuggestionClient.invalidate()[1]);
  *(_QWORD *)(v7 + 88) = v9;
  *v9 = v7;
  v9[1] = sub_100521AA8;
  return WalkSuggestionClient.invalidate()();
}

uint64_t sub_100521AA8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_100521AFC, 0, 0);
}

uint64_t sub_100521AFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_BYTE *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  if ((v2 & 1) != 0)
    v1 = 0;
  v3 = *(_BYTE *)(v0 + 104) & 1;
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
}

uint64_t sub_100521B5C(uint64_t a1)
{
  _QWORD *v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;

  v2 = static os_log_type_t.error.getter(a1);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v5 = v1[9];
    swift_errorRetain(v5);
    swift_errorRetain(v5);
    v6 = v3;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v22 = v8;
    v1[2] = v5;
    swift_errorRetain(v5);
    v9 = sub_100047110(&qword_10082EEA0);
    v10 = String.init<A>(describing:)(v1 + 2, v9);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)v11;
    v1[3] = sub_10003E8EC(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 3, v1 + 4, v7 + 4);
    swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v6, v4, "Failed to get walk suggestion %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  v20 = (_QWORD *)swift_task_alloc(async function pointer to WalkSuggestionClient.invalidate()[1]);
  v1[12] = v20;
  *v20 = v1;
  v20[1] = sub_100521D0C;
  return WalkSuggestionClient.invalidate()();
}

uint64_t sub_100521D0C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_task_switch(sub_100521D60, 0, 0);
}

uint64_t sub_100521D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

ValueMetadata *type metadata accessor for WalkSuggestionDataProvider()
{
  return &type metadata for WalkSuggestionDataProvider;
}

uint64_t sub_100521DD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100643C08;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100521E74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((v10 + (v9 & ~v8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v21 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)v4 + v9) & v14;
    v16 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v15, v16, v5);
    v17 = v16 + v10;
    v18 = (v15 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v16 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)v19;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 8) = v21;
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
    v22 = (_QWORD *)((v15 + v10 + 31) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)((v17 + 31) & 0xFFFFFFFFFFFFF8);
    *v22 = *v23;
    *(_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    swift_retain(v20);
  }
  swift_retain(v21);
  return v4;
}

uint64_t sub_100521FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (_QWORD *)((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v8);
  return swift_release(v8[1]);
}

uint64_t sub_10052204C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 8) = v19;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v20 = (_QWORD *)((v14 + 31) & 0xFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v15 + 31) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain(v18);
  swift_retain(v19);
  return a1;
}

uint64_t sub_100522128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v16;
  v19 = *(_QWORD *)v17;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  swift_retain(v19);
  swift_release(v18);
  v20 = *(_QWORD *)(v17 + 8);
  v21 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v16 + 8) = v20;
  swift_retain(v20);
  swift_release(v21);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v22 = (_QWORD *)((v14 + 31) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v15 + 31) & 0xFFFFFFFFFFFFF8);
  *v22 = *v23;
  *(_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100522220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_BYTE *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = v18;
  v19 = (_QWORD *)((v14 + 31) & 0xFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v15 + 31) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005222E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v16;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  swift_release(v18);
  v19 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_release(v19);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v20 = (_QWORD *)((v14 + 31) & 0xFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v15 + 31) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005223D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64);
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)(((v12 + v17 + 7) & 0xFFFFFFFFFFFFF8) + 8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((v12 + (v11 & ~v10) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100522478 + 4 * byte_100643BE0[v15]))();
  }
}

void sub_100522524(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + ((*(_QWORD *)(v5 + 64) + v8) & ~v8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_100522648()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1005226E0);
}

void sub_100522650(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100522658);
  JUMPOUT(0x1005226E0);
}

void sub_10052269C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1005226E0);
}

void sub_1005226A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1005226E0);
}

uint64_t sub_1005226AC(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x1005226E0);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x1005226B8);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t type metadata accessor for TwoPaneView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for TwoPaneView);
}

uint64_t sub_100522704(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_1006BA87C, 1);
}

uint64_t sub_100522738(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_1005228EC()
{
  uint64_t v0;
  unsigned __int8 v2;

  v0 = sub_100047110(&qword_100820FF8);
  Binding.wrappedValue.getter(v0);
  return v2;
}

uint64_t sub_100522940(uint64_t a1)
{
  uint64_t v1;

  return Namespace.wrappedValue.getter(*(_QWORD *)(v1 + *(int *)(a1 + 60)));
}

uint64_t sub_10052294C(uint64_t a1)
{
  uint64_t v1;

  return Namespace.wrappedValue.getter(*(_QWORD *)(v1 + *(int *)(a1 + 64)));
}

double sub_100522958@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  double result;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;

  v4 = *(a1 - 1);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(a1);
  v7 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v4 + 16))(v7, v6);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = (char *)swift_allocObject(&unk_1007A6E98, v9 + v5, v8 | 7);
  v11 = a1[2];
  v12 = a1[3];
  *((_QWORD *)v10 + 2) = v11;
  *((_QWORD *)v10 + 3) = v12;
  v13 = a1[4];
  v14 = a1[5];
  *((_QWORD *)v10 + 4) = v13;
  *((_QWORD *)v10 + 5) = v14;
  (*(void (**)(char *, char *, _QWORD *))(v4 + 32))(&v10[v9], v7, a1);
  v15 = sub_100524224();
  v46 = v11;
  v47 = &type metadata for Namespace.ID;
  v48 = v13;
  v49 = (void *)v15;
  v16 = type metadata accessor for IDView(255, &v46);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FlexFrameLayout);
  v46 = v12;
  v47 = &type metadata for Namespace.ID;
  v48 = v14;
  v49 = (void *)v15;
  v18 = type metadata accessor for IDView(255, &v46);
  v19 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v20 = type metadata accessor for ModifiedContent(255, v18, v19);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17, v20, 0, 0);
  v22 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
  v23 = type metadata accessor for VStack(255, v22);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v23);
  v25 = type metadata accessor for ScrollView(255, v23, WitnessTable);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v25);
  v46 = v25;
  v47 = (void *)v26;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v46, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v46 = v25;
  v47 = (void *)v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v46 = OpaqueTypeMetadata2;
  v47 = (void *)OpaqueTypeConformance2;
  v29 = swift_getOpaqueTypeMetadata2(255, &v46, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v30 = type metadata accessor for ModifiedContent(255, v29, &type metadata for _FlexFrameLayout);
  v46 = OpaqueTypeMetadata2;
  v47 = (void *)OpaqueTypeConformance2;
  v44 = swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v45 = &protocol witness table for _FlexFrameLayout;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v46 = v30;
  v47 = &type metadata for Bool;
  v48 = v31;
  v49 = &protocol witness table for Bool;
  v32 = swift_getOpaqueTypeMetadata2(255, &v46, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v46 = v30;
  v47 = &type metadata for Bool;
  v48 = v31;
  v49 = &protocol witness table for Bool;
  v33 = swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v34 = type metadata accessor for ScrollViewReader(0, v32, v33);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v34);
  v36 = GeometryReader.init(content:)(sub_10052419C, v10, v34, v35);
  v38 = v37;
  v42 = v36;
  v43 = v37;
  v39 = type metadata accessor for GeometryReader(0, v34, v35);
  swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v39);
  sub_10029340C((uint64_t)&v42, v39, (uint64_t)&v46);
  swift_release(v38);
  v40 = v47;
  v42 = v46;
  v43 = v47;
  sub_100291778((uint64_t)&v42, v39, a2);
  *(_QWORD *)&result = swift_release(v40).n128_u64[0];
  return result;
}

double sub_100522CC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t TupleTypeMetadata2;
  uint64_t v41;
  uint64_t v42;
  uint64_t WitnessTable;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  double result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;

  v64 = a5;
  v65 = (uint64_t)a6;
  v62 = a1;
  v63 = a3;
  v66 = a7;
  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a3;
  v72 = a4;
  v16 = a4;
  v61 = (uint64_t)a4;
  v73 = a5;
  v74 = a6;
  v17 = type metadata accessor for TwoPaneView(0, (uint64_t)&v71);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v59 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))((char *)&v59 - v21, a2, v17, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v62, v12);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 48) & ~v23;
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v19 + v25 + v24) & ~v25;
  v27 = (_QWORD *)swift_allocObject(&unk_1007A6EC0, v26 + v14, v23 | v25 | 7);
  v28 = v63;
  v29 = v64;
  v27[2] = v63;
  v27[3] = v16;
  v30 = v65;
  v27[4] = v29;
  v27[5] = v30;
  v31 = (char *)v27 + v24;
  v32 = v27;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v31, v22, v17);
  v33 = v32;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v32 + v26, v15, v60);
  v34 = sub_100524224();
  v71 = v28;
  v72 = &type metadata for Namespace.ID;
  v73 = v29;
  v74 = (void *)v34;
  v35 = type metadata accessor for IDView(255, &v71);
  v36 = type metadata accessor for ModifiedContent(255, v35, &type metadata for _FlexFrameLayout);
  v71 = v61;
  v72 = &type metadata for Namespace.ID;
  v73 = v30;
  v74 = (void *)v34;
  v37 = type metadata accessor for IDView(255, &v71);
  v38 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v39 = type metadata accessor for ModifiedContent(255, v37, v38);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v36, v39, 0, 0);
  v41 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v41);
  v42 = type metadata accessor for VStack(255, v41);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v42);
  v44 = type metadata accessor for ScrollView(255, v42, WitnessTable);
  v45 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v44);
  v71 = v44;
  v72 = (void *)v45;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v71 = v44;
  v72 = (void *)v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v71 = OpaqueTypeMetadata2;
  v72 = (void *)OpaqueTypeConformance2;
  v48 = swift_getOpaqueTypeMetadata2(255, &v71, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v49 = type metadata accessor for ModifiedContent(255, v48, &type metadata for _FlexFrameLayout);
  v71 = OpaqueTypeMetadata2;
  v72 = (void *)OpaqueTypeConformance2;
  v69 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v70 = &protocol witness table for _FlexFrameLayout;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v71 = v49;
  v72 = &type metadata for Bool;
  v73 = v50;
  v74 = &protocol witness table for Bool;
  v51 = swift_getOpaqueTypeMetadata2(0, &v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v71 = v49;
  v72 = &type metadata for Bool;
  v73 = v50;
  v74 = &protocol witness table for Bool;
  v52 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v53 = ScrollViewReader.init(content:)(sub_100524274, v33, v51, v52);
  v55 = v54;
  v67 = v53;
  v68 = v54;
  v56 = type metadata accessor for ScrollViewReader(0, v51, v52);
  swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v56);
  sub_10029340C((uint64_t)&v67, v56, (uint64_t)&v71);
  swift_release(v55);
  v57 = v72;
  v67 = v71;
  v68 = v72;
  sub_100291778((uint64_t)&v67, v56, v66);
  *(_QWORD *)&result = swift_release(v57).n128_u64[0];
  return result;
}

uint64_t sub_1005230C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v31;
  char *v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  __n128 v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  char v85;
  char v86;
  uint64_t v87;
  uint64_t WitnessTable;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;
  char v121[8];
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;

  v96 = a3;
  v95 = a2;
  v110 = a1;
  v116 = a8;
  v115 = type metadata accessor for ScrollViewProxy(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v111 = v12;
  v113 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = a4;
  v131 = a5;
  v117 = a4;
  v118 = a5;
  v13 = (uint64_t)a5;
  v132 = a6;
  v133 = a7;
  v14 = a6;
  v119 = a6;
  v120 = a7;
  v112 = type metadata accessor for TwoPaneView(0, (uint64_t)&v130);
  v109 = *(_QWORD *)(v112 - 8);
  v107 = *(_QWORD *)(v109 + 64);
  __chkstk_darwin(v112);
  v108 = (char *)&v87 - v15;
  v106 = type metadata accessor for ScrollIndicatorVisibility(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v92 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100524224();
  v130 = a4;
  v131 = &type metadata for Namespace.ID;
  v132 = v14;
  v133 = (void *)v17;
  v18 = type metadata accessor for IDView(255, &v130);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _FlexFrameLayout);
  v130 = v13;
  v131 = &type metadata for Namespace.ID;
  v132 = (uint64_t)a7;
  v133 = (void *)v17;
  v20 = type metadata accessor for IDView(255, &v130);
  v21 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v22 = type metadata accessor for ModifiedContent(255, v20, v21);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v19, v22, 0, 0);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v25 = type metadata accessor for VStack(255, v24);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v25);
  v26 = type metadata accessor for ScrollView(0, v25, WitnessTable);
  v89 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v87 - v27;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v26);
  v130 = v26;
  v131 = (void *)v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v130, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v93 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v32 = (char *)&v87 - v31;
  v130 = v26;
  v131 = (void *)v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v130 = OpaqueTypeMetadata2;
  v131 = (void *)OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeMetadata2(0, &v130, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v94 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v87 - v35;
  v90 = v37;
  v38 = type metadata accessor for ModifiedContent(0, v37, &type metadata for _FlexFrameLayout);
  v104 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v103 = (char *)&v87 - v39;
  v130 = OpaqueTypeMetadata2;
  v131 = (void *)OpaqueTypeConformance2;
  v91 = OpaqueTypeConformance2;
  v40 = swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v128 = v40;
  v129 = &protocol witness table for _FlexFrameLayout;
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  v102 = v38;
  v130 = v38;
  v131 = &type metadata for Bool;
  v98 = v41;
  v132 = v41;
  v133 = &protocol witness table for Bool;
  v101 = swift_getOpaqueTypeMetadata2(0, &v130, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v97 = (char *)&v87 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v99 = (uint64_t)&v87 - v44;
  v122 = v117;
  v123 = v118;
  v124 = v119;
  v125 = v120;
  v45 = v95;
  v126 = v95;
  v127 = v96;
  v47 = static Axis.Set.vertical.getter(v46);
  v48 = v25;
  v49 = v92;
  sub_100291790(v47, (uint64_t)sub_100524328, (uint64_t)v121, v48, WitnessTable);
  View.scrollDisabled(_:)(1, v26, v29);
  v50 = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v28, v26);
  v51 = static ScrollIndicatorVisibility.never.getter(v50);
  v52 = static Axis.Set.vertical.getter(v51);
  v54 = static Axis.Set.horizontal.getter(v53);
  v55 = Axis.Set.init(rawValue:)(0);
  v56 = Axis.Set.init(rawValue:)(v55);
  if (Axis.Set.init(rawValue:)(v56 & v52) != v52)
    v55 = Axis.Set.init(rawValue:)(v55 | v52);
  v57 = Axis.Set.init(rawValue:)(v55);
  if (Axis.Set.init(rawValue:)(v57 & v54) != v54)
    v55 = Axis.Set.init(rawValue:)(v55 | v54);
  View.scrollIndicators(_:axes:)(v49, v55, OpaqueTypeMetadata2, v91);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v49, v106);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v32, OpaqueTypeMetadata2);
  v59 = static Alignment.center.getter(v58);
  v60 = v90;
  v86 = 1;
  v85 = 1;
  v61 = v103;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v85, 0, v86, v59, v62, v90, v40);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v36, v60);
  v63 = v112;
  v64 = v45;
  LOBYTE(v130) = sub_1005228EC() & 1;
  v65 = v109;
  v66 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v64, v63);
  v67 = v114;
  v68 = v113;
  v69 = v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v110, v115);
  v70 = *(unsigned __int8 *)(v65 + 80);
  v71 = (v70 + 48) & ~v70;
  v72 = *(unsigned __int8 *)(v67 + 80);
  v73 = (v107 + v72 + v71) & ~v72;
  v74 = (char *)swift_allocObject(&unk_1007A6EE8, v73 + v111, v70 | v72 | 7);
  v75 = v118;
  *((_QWORD *)v74 + 2) = v117;
  *((_QWORD *)v74 + 3) = v75;
  v76 = v120;
  *((_QWORD *)v74 + 4) = v119;
  *((_QWORD *)v74 + 5) = v76;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v74[v71], v66, v63);
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v74[v73], v68, v69);
  v77 = (uint64_t)v97;
  v78 = v102;
  v79 = v98;
  View.onChange<A>(of:initial:_:)(&v130, 0, sub_100524460, v74, v102, &type metadata for Bool, v98, &protocol witness table for Bool);
  v80 = swift_release(v74);
  (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v61, v78, v80);
  v130 = v78;
  v131 = &type metadata for Bool;
  v132 = v79;
  v133 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2(&v130, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v81 = v99;
  v82 = v101;
  sub_10029340C(v77, v101, v99);
  v83 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v83(v77, v82);
  sub_100291778(v81, v82, v116);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v81, v82);
}

uint64_t sub_100523920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;

  v35 = a1;
  v36 = a2;
  v37 = a7;
  v11 = sub_100524224();
  v44 = a3;
  v45 = &type metadata for Namespace.ID;
  v46 = a5;
  v47 = v11;
  v12 = type metadata accessor for IDView(255, &v44);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _FlexFrameLayout);
  v44 = a4;
  v45 = &type metadata for Namespace.ID;
  v46 = a6;
  v47 = v11;
  v14 = type metadata accessor for IDView(255, &v44);
  v15 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v16, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v19 = type metadata accessor for VStack(0, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v34 - v24;
  v38 = a3;
  v39 = a4;
  v40 = a5;
  v41 = a6;
  v42 = v35;
  v43 = v36;
  v31 = static HorizontalAlignment.center.getter(v26, v27, v28, v29, v30);
  VStack.init(alignment:spacing:content:)(v31, 0, 0, sub_10052451C);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v19);
  sub_10029340C((uint64_t)v22, v19, (uint64_t)v25);
  v32 = *(void (**)(char *, uint64_t))(v20 + 8);
  v32(v22, v19);
  sub_100291778((uint64_t)v25, v19, v37);
  return ((uint64_t (*)(char *, uint64_t))v32)(v25, v19);
}

uint64_t sub_100523B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t WitnessTable;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[6];
  char *v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;

  v65 = (void *)a4;
  v56 = a2;
  v63 = a7;
  v64 = a1;
  v11 = sub_100524224();
  v70 = (char *)a4;
  v71 = &type metadata for Namespace.ID;
  v72 = a6;
  v73 = v11;
  v12 = a6;
  v55 = a6;
  v13 = type metadata accessor for IDView(0, &v70);
  v14 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  v61 = v14;
  __chkstk_darwin(v13);
  v58 = (char *)&v52 - v15;
  v16 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v17 = type metadata accessor for ModifiedContent(0, v13, v16);
  v62 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v57 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v60 = (uint64_t)&v52 - v20;
  v70 = (char *)a3;
  v71 = &type metadata for Namespace.ID;
  v72 = a5;
  v73 = v11;
  v52 = v11;
  v21 = type metadata accessor for IDView(0, &v70);
  v53 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v52 - v22;
  v24 = type metadata accessor for ModifiedContent(0, v21, &type metadata for _FlexFrameLayout);
  v54 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v66 = (uint64_t)&v52 - v28;
  v70 = (char *)a3;
  v71 = v65;
  v72 = a5;
  v73 = v12;
  v29 = type metadata accessor for TwoPaneView(0, (uint64_t)&v70);
  v70 = (char *)Namespace.wrappedValue.getter(*(_QWORD *)(v64 + *(int *)(v29 + 60)));
  v30 = View.id<A>(_:)(&v70, a3, &type metadata for Namespace.ID, a5, v11);
  GeometryProxy.size.getter(v30);
  v32 = v31;
  v34 = static Alignment.center.getter(v33);
  v36 = v35;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v21);
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, v32, 0, 0, 1, 0, 1, v34, v36, v21, WitnessTable);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v21);
  v69[4] = WitnessTable;
  v69[5] = &protocol witness table for _FlexFrameLayout;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  sub_10029340C((uint64_t)v26, v24, v66);
  v38 = v54;
  v39 = *(void (**)(char *, uint64_t))(v54 + 8);
  v39(v26, v24);
  v70 = (char *)Namespace.wrappedValue.getter(*(_QWORD *)(v64 + *(int *)(v29 + 64)));
  v40 = v58;
  View.id<A>(_:)(&v70, v65, &type metadata for Namespace.ID, v55, v52);
  LOBYTE(v29) = sub_1005228EC();
  v41 = v59;
  v42 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v59);
  v43 = (uint64_t)v57;
  View.accessibilityHidden(_:)((v29 & 1) == 0, v41, v42);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v41);
  v44 = sub_100278EF0();
  v69[2] = v42;
  v69[3] = v44;
  v45 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v46 = v60;
  sub_10029340C(v43, v17, v60);
  v47 = v62;
  v48 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v48(v43, v17);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v50 = v66;
  v49(v26, v66, v24);
  v70 = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v46, v17);
  v71 = (void *)v43;
  v69[0] = v24;
  v69[1] = v17;
  v67 = v56;
  v68 = v45;
  sub_100522738((uint64_t *)&v70, 2uLL, (uint64_t)v69);
  v48(v46, v17);
  v39((char *)v50, v24);
  v48(v43, v17);
  return ((uint64_t (*)(char *, uint64_t))v39)(v26, v24);
}

double sub_100523FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  double result;
  _QWORD v8[10];

  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  v8[5] = a6;
  v8[6] = a1;
  v8[7] = a2;
  v6 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v6, sub_1005244FC, v8, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10052402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[4];

  v11[0] = a3;
  v11[1] = a4;
  v11[2] = a5;
  v11[3] = a6;
  v7 = type metadata accessor for TwoPaneView(0, (uint64_t)v11);
  if ((sub_1005228EC() & 1) != 0)
    v8 = *(int *)(v7 + 64);
  else
    v8 = *(int *)(v7 + 60);
  v11[0] = Namespace.wrappedValue.getter(*(_QWORD *)(a1 + v8));
  v9 = sub_100524224();
  return ScrollViewProxy.scrollTo<A>(_:anchor:)(v11, 0, 0, 1, &type metadata for Namespace.ID, v9);
}

uint64_t sub_1005240C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 16);
  v1 = v13;
  v14 = *(_OWORD *)(v0 + 24);
  v12 = v14;
  v15 = v2;
  v3 = type metadata accessor for TwoPaneView(0, (uint64_t)&v13);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v6, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9 + *(int *)(v3 + 52));
  v10 = (_QWORD *)(v9 + *(int *)(v3 + 56));
  swift_release(*v10);
  swift_release(v10[1]);
  return swift_deallocObject(v0, v7, v8);
}

double sub_10052419C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (void *)v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TwoPaneView(0, (uint64_t)v11) - 8) + 80);
  return sub_100522CC4(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

unint64_t sub_100524224()
{
  unint64_t result;

  result = qword_100839218;
  if (!qword_100839218)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Namespace.ID, &type metadata for Namespace.ID);
    atomic_store(result, &qword_100839218);
  }
  return result;
}

uint64_t sub_100524268()
{
  return sub_100524340((uint64_t (*)(_QWORD))&type metadata accessor for GeometryProxy);
}

uint64_t sub_100524274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (void *)v2[5];
  v14[0] = v2[2];
  v5 = v14[0];
  v14[1] = v6;
  v14[2] = v7;
  v14[3] = v8;
  v9 = *(_QWORD *)(type metadata accessor for TwoPaneView(0, (uint64_t)v14) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_1005230C8(a1, (uint64_t)v2 + v10, (uint64_t)v2 + ((v10 + v11 + v12) & ~v12), v5, v6, v7, v8, a2);
}

uint64_t sub_100524328()
{
  return sub_100524528((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100523920);
}

uint64_t sub_100524334()
{
  return sub_100524340((uint64_t (*)(_QWORD))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_100524340(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v4 = *(_QWORD *)(v1 + 40);
  v21 = *(_QWORD *)(v1 + 16);
  v3 = v21;
  v22 = *(_OWORD *)(v1 + 24);
  v20 = v22;
  v23 = v4;
  v5 = type metadata accessor for TwoPaneView(0, (uint64_t)&v21);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 48) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = a1(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v9 + v12) & ~v12;
  v14 = v13 + *(_QWORD *)(v11 + 64);
  v15 = v7 | v12 | 7;
  v16 = v1 + v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v16, v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v16 + *(int *)(v5 + 52));
  v17 = (_QWORD *)(v16 + *(int *)(v5 + 56));
  swift_release(*v17);
  v18 = swift_release(v17[1]);
  (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v1 + v13, v10, v18);
  return swift_deallocObject(v1, v14, v15);
}

double sub_100524460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v10[0] = v0[2];
  v1 = v10[0];
  v10[1] = v2;
  v10[2] = v3;
  v10[3] = v4;
  v5 = *(_QWORD *)(type metadata accessor for TwoPaneView(0, (uint64_t)v10) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_100523FC8((uint64_t)v0 + v6, (uint64_t)v0 + ((v6 + v7 + v8) & ~v8), v1, v2, v3, v4);
}

uint64_t sub_1005244FC()
{
  uint64_t *v0;

  return sub_10052402C(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10052451C()
{
  return sub_100524528((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100523B10);
}

uint64_t sub_100524528(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10052453C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = sub_100524224();
  v28 = v1;
  v29 = &type metadata for Namespace.ID;
  v30 = v3;
  v31 = (void *)v5;
  v6 = type metadata accessor for IDView(255, &v28);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _FlexFrameLayout);
  v28 = v2;
  v29 = &type metadata for Namespace.ID;
  v30 = v4;
  v31 = (void *)v5;
  v8 = type metadata accessor for IDView(255, &v28);
  v9 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v13 = type metadata accessor for VStack(255, v12);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v13);
  v15 = type metadata accessor for ScrollView(255, v13, WitnessTable);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v15);
  v28 = v15;
  v29 = (void *)v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v28, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v28 = v15;
  v29 = (void *)v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v28, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v28 = OpaqueTypeMetadata2;
  v29 = (void *)OpaqueTypeConformance2;
  v19 = swift_getOpaqueTypeMetadata2(255, &v28, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for _FlexFrameLayout);
  v28 = OpaqueTypeMetadata2;
  v29 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v28, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v28 = v20;
  v29 = &type metadata for Bool;
  v30 = v21;
  v31 = &protocol witness table for Bool;
  v22 = swift_getOpaqueTypeMetadata2(255, &v28, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v28 = v20;
  v29 = &type metadata for Bool;
  v30 = v21;
  v31 = &protocol witness table for Bool;
  v23 = swift_getOpaqueTypeConformance2(&v28, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v24 = type metadata accessor for ScrollViewReader(255, v22, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v24);
  v26 = type metadata accessor for GeometryReader(255, v24, v25);
  return swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v26);
}

uint64_t sub_1005247A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[20] = a1;
  v2 = type metadata accessor for DateInterval(0);
  v1[21] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[22] = v3;
  v1[23] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v1[24] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[25] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v6);
  v1[27] = swift_task_alloc(v6);
  v1[28] = swift_task_alloc(v6);
  v1[29] = swift_task_alloc(v6);
  return swift_task_switch(sub_100524880, 0, 0);
}

uint64_t sub_100524880(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  Class isa;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  void *v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  unint64_t v40;
  char **v41;
  _QWORD *v42;
  id v44;
  id v45;
  char **v46;
  id v47;
  id v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  unint64_t v52;
  char v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  char v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  const char *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  __n128 v97;
  id v98;
  id v99;
  NSString v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  unsigned __int8 v112;
  id v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  id v115;
  void *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  os_log_type_t v122;
  os_log_type_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  SEL v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  CHWorkoutDetailHeartRateTableViewCell *v134;
  uint64_t v135;
  unsigned __int8 *cellInset;
  uint64_t v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  BOOL v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  unint64_t v144;
  unint64_t v145;
  CHWorkoutDetailHeartRateTableViewCell *v146;
  __n128 v147;
  os_log_type_t v148;
  os_log_type_t v149;
  SEL v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  SEL v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  const char *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  CHWorkoutDetailHeartRateTableViewCell *v171;
  unint64_t v172;
  uint64_t v173;
  SEL v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  SEL v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  CHWorkoutDetailHeartRateTableViewCell *v197;
  uint64_t v198;
  CHWorkoutDetailHeartRateTableViewCell *v199;
  SEL v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  void (*v207)(uint64_t, uint64_t);
  SEL v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  uint64_t v216;
  __n128 v217;
  _QWORD *v218;
  uint64_t *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  CHWorkoutDetailHeartRateTableViewCell *log;
  NSObject *loga;
  CHWorkoutDetailHeartRateTableViewCell *v226;
  void **v227;
  CHWorkoutDetailHeartRateTableViewCell **v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238[3];

  v2 = v1 + 20;
  v234 = (void *)v1[20];
  v4 = v1[28];
  v3 = v1[29];
  v6 = v1[26];
  v5 = v1[27];
  v8 = v1[24];
  v7 = v1[25];
  v9 = static os_log_type_t.default.getter(a1);
  v10 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "[RecentWorkoutAppQuery] fetching recent workout apps", 52, 2, &_swiftEmptyArrayStorage);

  v12 = Date.init()(v11);
  Date.addingTimeInterval(_:)(v12, -5184000.0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v13(v5, v4, v8);
  v13(v6, v3, v8);
  DateInterval.init(start:end:)(v5, v6);
  isa = DateInterval._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v234, "workoutsEndingInDateInterval:", isa);

  v16 = sub_10027D46C();
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if (v17 < 0 || (v17 & 0x4000000000000000) != 0)
    goto LABEL_60;
  v18 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
LABEL_4:
  v238[0] = v18;
  sub_100525788(v238);
  v19 = (_QWORD *)v237;
  v20 = v2 - 2;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v17, v21, v22, v23, v24, v25, v26, v27);
  v28 = v238[0];
  v30 = static os_log_type_t.default.getter(v29);
  v31 = (void *)HKLogActivity;
  v228 = (CHWorkoutDetailHeartRateTableViewCell **)(v2 - 2);
  if (os_log_type_enabled(HKLogActivity, v30))
  {
    swift_retain_n(v28, 2);
    v32 = v31;
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v33 = 134217984;
    v34 = v28 & 0x4000000000000000;
    if (v28 < 0 || v34)
    {
      swift_bridgeObjectRetain(v28);
      v35 = _CocoaArrayWrapper.endIndex.getter(v216);
      swift_release(v28);
    }
    else
    {
      v35 = *(_QWORD *)(v28 + 16);
    }
    swift_release(v28);
    *(v2 - 1) = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 1, v2, v33 + 4);
    swift_release(v28);
    _os_log_impl((void *)&_mh_execute_header, v32, v30, "[RecentWorkoutAppQuery] Found %ld recent workouts", v33, 0xCu);
    swift_slowDealloc(v33, -1, -1);

    v19 = (_QWORD *)v237;
    v20 = v2 - 2;
  }
  else
  {
    v34 = v28 & 0x4000000000000000;
  }
  *v20 = &_swiftEmptyArrayStorage;
  v17 = (uint64_t)objc_msgSend((id)objc_opt_self(APApplication), "hiddenAppBundleIdentifiers");
  v36 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String, &protocol witness table for String);

  if (v28 < 0 || v34)
  {
    swift_bridgeObjectRetain(v28);
    v37 = _CocoaArrayWrapper.endIndex.getter(v181);
    swift_release(v28);
    if (v37)
      goto LABEL_13;
  }
  else
  {
    v37 = *(_QWORD *)(v28 + 16);
    if (v37)
    {
LABEL_13:
      v220 = (char *)(v2 - 12);
      v229 = (char *)(v2 - 9);
      v218 = v2 - 4;
      v219 = v2 - 5;
      v227 = (void **)(v2 - 3);
      v38 = v28 & 0xC000000000000001;
      v39 = swift_beginAccess(v228, v2 - 18, 0, 0);
      v40 = 0;
      v230 = v28 + 32;
      v41 = &selRef_setIncludeUpcomingEventMembers_;
      v39.n128_u64[0] = 136315394;
      v217 = v39;
      v226 = v36;
      v232 = v28 & 0xC000000000000001;
      v235 = v37;
      v231 = v28;
      do
      {
        if (v38)
        {
          v42 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v28);
        }
        else
        {
          if (v40 >= *(_QWORD *)(v28 + 16))
            goto LABEL_59;
          v42 = *(id *)(v230 + 8 * v40);
        }
        v2 = v42;
        if (__OFADD__(v40++, 1))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          swift_bridgeObjectRetain(v17);
          v18 = (uint64_t)sub_1002958E8(v173);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v17, v174, v175, v176, v177, v178, v179, v180);
          goto LABEL_4;
        }
        v44 = objc_msgSend(v42, v41[416]);
        v45 = objc_msgSend(v44, "source");

        v17 = (uint64_t)objc_msgSend(v45, "_hasFirstPartyBundleID");
        if ((v17 & 1) != 0)
        {

          continue;
        }
        v46 = v41;
        v47 = objc_msgSend(v2, v41[416]);
        v48 = objc_msgSend(v47, "productType");

        if (!v48)
          goto LABEL_25;
        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v19[13] = v49;
        v19[14] = v51;
        v19[11] = 0x6863746157;
        v19[12] = 0xE500000000000000;
        v52 = sub_100038CA0();
        v53 = StringProtocol.contains<A>(_:)(v229, &type metadata for String, &type metadata for String, v52, v52);
        swift_bridgeObjectRelease(v51, v54, v55, v56, v57, v58, v59, v60);
        if ((v53 & 1) == 0)
          goto LABEL_25;
        v61 = objc_msgSend(v2, v41[416]);
        v62 = objc_msgSend(v61, "source");

        v63 = objc_msgSend(v62, "bundleIdentifier");
        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v66 = v65;

        sub_10052670C(v64, (unint64_t)v66, v67);
        v69 = v68;
        v71 = (CHWorkoutDetailHeartRateTableViewCell *)v70;
        swift_bridgeObjectRelease(v66, v70, v72, v73, v74, v75, v76, v77);
        if (!v71)
        {
LABEL_25:
          v78 = objc_msgSend(v2, v46[416], *(_OWORD *)&v217);
          v79 = objc_msgSend(v78, "source");

          v80 = objc_msgSend(v79, "bundleIdentifier");
          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
          v71 = v81;

        }
        swift_bridgeObjectRetain(v71);
        v82 = sub_1002D41B4(v69, (uint64_t)v71, (uint64_t)v36);
        swift_bridgeObjectRelease(v71, v83, v84, v85, v86, v87, v88, v89);
        if ((v82 & 1) != 0)
        {
          swift_bridgeObjectRelease(v71, v90, v91, v92, v93, v94, v95, v96);
          v17 = static os_log_type_t.debug.getter(v97);
          v98 = HKLogActivity;
          os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v98, "[RecentWorkoutAppQuery] Suppressing a hidden app from list of recommended workout apps.", 87, 2, &_swiftEmptyArrayStorage);

LABEL_37:
          v38 = v232;
          v37 = v235;
          v41 = v46;
          v28 = v231;
          continue;
        }
        v99 = objc_allocWithZone((Class)LSApplicationRecord);
        swift_bridgeObjectRetain(v71);
        v100 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v71, v101, v102, v103, v104, v105, v106, v107);
        *v227 = 0;
        v108 = objc_msgSend(v99, "initWithBundleIdentifier:allowPlaceholder:error:", v100, 0, v227);

        v109 = *v227;
        if (!v108)
        {
          v118 = v109;
          v119 = _convertNSErrorToError(_:)(v109);

          swift_willThrow(v120);
          v121 = swift_errorRelease(v119);
          goto LABEL_34;
        }
        v110 = v109;
        v111 = objc_msgSend(v108, "applicationState");
        v112 = objc_msgSend(v111, "isInstalled");

        if ((v112 & 1) == 0)
        {

LABEL_34:
          v122 = static os_log_type_t.error.getter(v121);
          v17 = HKLogActivity;
          v123 = v122;
          v36 = v226;
          if (os_log_type_enabled(HKLogActivity, v122))
          {
            swift_bridgeObjectRetain(v71);
            v17 = (uint64_t)(id)v17;
            v124 = swift_slowAlloc(12, -1);
            v125 = swift_slowAlloc(32, -1);
            v238[0] = v125;
            *(_DWORD *)v124 = 136315138;
            swift_bridgeObjectRetain(v71);
            *(_QWORD *)(v124 + 4) = sub_10003E8EC(v69, (unint64_t)v71, v238);
            swift_bridgeObjectRelease_n(v71, 3);
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v17, v123, "[RecentWorkoutAppQuery] Found workout with %s but app is not installed on device, skipping.", (uint8_t *)v124, 0xCu);
            swift_arrayDestroy(v125, 1, (char *)&type metadata for Any + 8);
            v126 = v125;
            v19 = (_QWORD *)v237;
            swift_slowDealloc(v126, -1, -1);
            swift_slowDealloc(v124, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease(v71, v127, v128, v129, v130, v131, v132, v133);
          }
          goto LABEL_37;
        }
        v113 = objc_msgSend(v108, "localizedName");
        v222 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
        log = v114;

        v115 = objc_msgSend(v108, "teamIdentifier");
        if (v115)
        {
          v116 = v115;
          v221 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
          v17 = v117;

        }
        else
        {
          v221 = 0;
          v17 = 0xE000000000000000;
        }
        v134 = *v228;
        v135 = *(_QWORD *)(*v228)->cellPadding;
        if (v135)
        {
          cellInset = v134[1].cellInset;
          while (1)
          {
            v137 = *((_QWORD *)cellInset - 1);
            v138 = *(CHWorkoutDetailHeartRateTableViewCell **)cellInset;
            v139 = v137 == v69 && v138 == v71;
            if (v139 || (_stringCompareWithSmolCheck(_:_:expecting:)(v137, v138, v69, v71, 0) & 1) != 0)
              break;
            cellInset += 64;
            if (!--v135)
              goto LABEL_47;
          }

          swift_bridgeObjectRelease(log, v150, v151, v152, v153, v154, v155, v156);
          swift_bridgeObjectRelease(v71, v157, v158, v159, v160, v161, v162, v163);
          v171 = (CHWorkoutDetailHeartRateTableViewCell *)v17;
        }
        else
        {
LABEL_47:
          swift_beginAccess(v228, v220, 33, 0);
          v134 = *v228;
          swift_bridgeObjectRetain(v71);
          if ((swift_isUniquelyReferenced_nonNull_native(v134) & 1) == 0)
            v134 = sub_100141738(0, *(_QWORD *)v134->cellPadding + 1, 1, v134, v140, v141, v142, v143);
          v145 = *(_QWORD *)v134->cellPadding;
          v144 = *(_QWORD *)v134->cellInset;
          if (v145 >= v144 >> 1)
            v134 = sub_100141738((CHWorkoutDetailHeartRateTableViewCell *)(v144 > 1), v145 + 1, 1, v134, v140, v141, v142, v143);
          *(_QWORD *)v134->cellPadding = v145 + 1;
          v146 = &v134[2 * v145];
          v146[1].super.super.super.super.isa = (Class)v222;
          *(_QWORD *)v146[1].heartRateController = log;
          *(_QWORD *)v146[1].cellPadding = v69;
          *(_QWORD *)v146[1].cellInset = v71;
          v146[2].super.super.super.super.isa = (Class)v221;
          *(_QWORD *)v146[2].heartRateController = v17;
          *(_QWORD *)v146[2].cellPadding = 0;
          v146[2].cellInset[0] = 1;
          *v228 = v134;
          swift_endAccess(v220);
          v148 = static os_log_type_t.debug.getter(v147);
          v17 = HKLogActivity;
          v149 = v148;
          if (os_log_type_enabled(HKLogActivity, v148))
          {
            swift_bridgeObjectRetain(v71);
            loga = (id)v17;
            v17 = swift_slowAlloc(22, -1);
            v223 = swift_slowAlloc(32, -1);
            v238[0] = v223;
            *(_DWORD *)v17 = v217.n128_u32[0];
            swift_bridgeObjectRetain(v71);
            *v219 = sub_10003E8EC(v69, (unint64_t)v71, v238);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v219, v218, v17 + 4);
            swift_bridgeObjectRelease_n(v71, 3);
            *(_WORD *)(v17 + 12) = 2048;
            v134 = *v228;
            *v218 = *(_QWORD *)(*v228)->cellPadding;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v218, v227, v17 + 14);
            _os_log_impl((void *)&_mh_execute_header, loga, v149, "[RecentWorkoutAppQuery] Added %s to list of recommended workout apps [%ld/4].", (uint8_t *)v17, 0x16u);
            swift_arrayDestroy(v223, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v223, -1, -1);
            swift_slowDealloc(v17, -1, -1);

            goto LABEL_56;
          }

          v171 = v71;
        }
        swift_bridgeObjectRelease(v171, v164, v165, v166, v167, v168, v169, v170);
LABEL_56:
        v172 = *(_QWORD *)v134->cellPadding;
        v37 = v235;
        v19 = (_QWORD *)v237;
        v36 = v226;
        v41 = v46;
        v28 = v231;
        v38 = v232;
        if (v172 > 3)
          break;
      }
      while (v40 != v37);
    }
  }
  v182 = v19 + 5;
  v183 = *(_QWORD *)(v237 + 232);
  v184 = *(_QWORD *)(v237 + 224);
  v233 = *(_QWORD *)(v237 + 216);
  v236 = *(_QWORD *)(v237 + 208);
  v185 = *(_QWORD *)(v237 + 200);
  v186 = *(_QWORD *)(v237 + 192);
  v187 = *(_QWORD *)(v237 + 184);
  v188 = *(_QWORD *)(v237 + 176);
  v189 = *(_QWORD *)(v237 + 168);
  swift_release(v28);
  swift_bridgeObjectRelease(v36, v190, v191, v192, v193, v194, v195, v196);
  swift_beginAccess(v228, v182, 0, 0);
  v197 = *(CHWorkoutDetailHeartRateTableViewCell **)(v237 + 144);
  swift_bridgeObjectRetain(v197);
  v199 = sub_10013E148(v198);
  swift_bridgeObjectRelease(v197, v200, v201, v202, v203, v204, v205, v206);
  (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v187, v189);
  v207 = *(void (**)(uint64_t, uint64_t))(v185 + 8);
  v207(v184, v186);
  v207(v183, v186);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v237 + 144), v208, v209, v210, v211, v212, v213, v214);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v233);
  swift_task_dealloc(v236);
  swift_task_dealloc(v187);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v237 + 8))(v199);
}

void sub_100525504(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __n128 v31;
  os_log_type_t v32;
  void *v33;
  os_log_type_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v8 = objc_msgSend(a1, "counterpartIdentifiers");
  if (v8)
  {
    v9 = v8;
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

    LOBYTE(v9) = sub_1002D3A2C(a2, a3, v10);
    swift_bridgeObjectRelease(v10, v11, v12, v13, v14, v15, v16, v17);
    if ((v9 & 1) != 0)
    {
      v18 = objc_msgSend(a1, "bundleIdentifier");
      if (v18)
      {
        v19 = v18;
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v22 = v21;

        swift_beginAccess(a4 + 16, v53, 1, 0);
        v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(a4 + 24);
        *(_QWORD *)(a4 + 16) = v20;
        *(_QWORD *)(a4 + 24) = v22;
        swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
        v32 = static os_log_type_t.debug.getter(v31);
        v33 = (void *)HKLogActivity;
        v34 = v32;
        if (os_log_type_enabled(HKLogActivity, v32))
        {
          swift_bridgeObjectRetain_n(a3, 2);
          swift_retain_n(a4, 2);
          v35 = v33;
          v36 = swift_slowAlloc(22, -1);
          v37 = swift_slowAlloc(64, -1);
          v52 = v37;
          *(_DWORD *)v36 = 136315394;
          swift_bridgeObjectRetain(a3);
          v50 = sub_10003E8EC(a2, a3, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v36 + 4);
          swift_bridgeObjectRelease_n(a3, 3);
          *(_WORD *)(v36 + 12) = 2080;
          swift_beginAccess(a4 + 16, &v50, 0, 0);
          v49 = *(_OWORD *)(a4 + 16);
          v38 = sub_100047110(&qword_10082B520);
          v39 = Optional.description.getter(v38);
          v41 = (CHWorkoutDetailHeartRateTableViewCell *)v40;
          *(_QWORD *)&v49 = sub_10003E8EC(v39, v40, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v36 + 14);
          swift_release_n(a4, 2);
          swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
          _os_log_impl((void *)&_mh_execute_header, v35, v34, "[RecentWorkoutAppQuery] Found companion bundle ID for %s => %s.", (uint8_t *)v36, 0x16u);
          swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v37, -1, -1);
          swift_slowDealloc(v36, -1, -1);

        }
      }
    }
  }
}

uint64_t sub_100525788(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100149F48(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100525800(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100525800(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::Int v6;
  Swift::Int v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  id *v34;
  Swift::Int v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t *v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  Swift::Int v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  Swift::Int v137;
  Swift::Int v138;
  Swift::Int v139;
  Swift::Int v140;
  Swift::Int v141;
  id *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;

  v146 = type metadata accessor for Date(0);
  v144 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v145 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v132 - v4;
  v6 = a1[1];
  v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_135;
    if (v6)
      sub_1005260DC(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v14 = v6;
  else
    v14 = v6 + 1;
  if (v6 < -1)
    goto LABEL_143;
  v137 = v7;
  v134 = a1;
  if (v6 < 2)
  {
    v18 = (char *)&_swiftEmptyArrayStorage;
    v148 = (unint64_t)&_swiftEmptyArrayStorage;
    v142 = (id *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v22 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
LABEL_101:
      v117 = v143;
      if (v22 >= 2)
      {
        v118 = *v134;
        do
        {
          v119 = v22 - 2;
          if (v22 < 2)
            goto LABEL_130;
          if (!v118)
            goto LABEL_142;
          v108 = v18;
          v120 = *(_QWORD *)&v18[16 * v119 + 32];
          v121 = *(_QWORD *)&v18[16 * v22 + 24];
          sub_1005262A4((void **)(v118 + 8 * v120), (id *)(v118 + 8 * *(_QWORD *)&v18[16 * v22 + 16]), (id *)(v118 + 8 * v121), v142);
          if (v117)
            goto LABEL_98;
          if (v121 < v120)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
            v108 = sub_100147754((uint64_t)v108);
          if (v119 >= *((_QWORD *)v108 + 2))
            goto LABEL_132;
          v122 = &v108[16 * v119 + 32];
          *(_QWORD *)v122 = v120;
          *((_QWORD *)v122 + 1) = v121;
          v123 = *((_QWORD *)v108 + 2);
          if (v22 > v123)
            goto LABEL_133;
          memmove(&v108[16 * v22 + 16], &v108[16 * v22 + 32], 16 * (v123 - v22));
          v18 = v108;
          *((_QWORD *)v108 + 2) = v123 - 1;
          v22 = v123 - 1;
        }
        while (v123 > 2);
      }
      v116 = (CHWorkoutDetailHeartRateTableViewCell *)v18;
LABEL_113:
      swift_bridgeObjectRelease(v116, v8, v9, v18, v10, v11, v12, v13);
      *(_QWORD *)((v148 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v124);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v148, v125, v126, v127, v128, v129, v130, v131);
      return;
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_10027D46C();
    v17 = static Array._allocateBufferUninitialized(minimumCapacity:)(v15, v16);
    *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
    v142 = (id *)((v17 & 0xFFFFFFFFFFFFFF8) + 32);
    v148 = v17;
  }
  v19 = 0;
  v20 = *a1;
  v21 = *a1 + 16;
  v135 = *a1 - 8;
  v136 = v21;
  v18 = (char *)&_swiftEmptyArrayStorage;
  v140 = v6;
  v147 = v20;
  while (1)
  {
    v23 = v19 + 1;
    v139 = v19;
    if (v19 + 1 < v6)
    {
      v24 = v18;
      v25 = *(void **)(v20 + 8 * v19);
      v26 = *(id *)(v20 + 8 * v23);
      v27 = v25;
      v28 = objc_msgSend(v26, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

      v29 = objc_msgSend(v27, "startDate");
      v30 = v145;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

      LODWORD(v141) = static Date.> infix(_:_:)(v5, v30);
      v31 = *(void (**)(char *, uint64_t))(v144 + 8);
      v32 = v30;
      v33 = v146;
      v31(v32, v146);
      v31(v5, v33);

      v6 = v140;
      v23 = v19 + 2;
      if (v19 + 2 < v6)
      {
        v34 = (id *)(v136 + 8 * v19);
        while (1)
        {
          v35 = v23;
          v36 = *(v34 - 1);
          v37 = *v34;
          v38 = v36;
          v39 = objc_msgSend(v37, "startDate");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

          v40 = objc_msgSend(v38, "startDate");
          v41 = v145;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v40);

          LODWORD(v40) = static Date.> infix(_:_:)(v5, v41);
          v42 = v41;
          v43 = v146;
          v31(v42, v146);
          v31(v5, v43);

          if (((v141 ^ v40) & 1) != 0)
            break;
          v23 = v35 + 1;
          ++v34;
          v6 = v140;
          if (v140 == v35 + 1)
          {
            v23 = v140;
            goto LABEL_22;
          }
        }
        v6 = v140;
        v23 = v35;
LABEL_22:
        v19 = v139;
      }
      v18 = v24;
      v20 = v147;
      if ((v141 & 1) != 0)
      {
        if (v23 < v19)
          goto LABEL_136;
        if (v19 < v23)
        {
          v44 = (uint64_t *)(v135 + 8 * v23);
          v45 = v23;
          v46 = v19;
          v47 = (uint64_t *)(v147 + 8 * v19);
          do
          {
            if (v46 != --v45)
            {
              if (!v20)
                goto LABEL_141;
              v48 = *v47;
              *v47 = *v44;
              *v44 = v48;
            }
            ++v46;
            --v44;
            ++v47;
          }
          while (v46 < v45);
        }
      }
    }
    if (v23 < v6)
    {
      if (__OFSUB__(v23, v19))
        goto LABEL_134;
      if (v23 - v19 < v137)
        break;
    }
LABEL_50:
    if (v23 < v19)
      goto LABEL_129;
    v63 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) != 0)
      v18 = v63;
    else
      v18 = sub_100147150(0, *((_QWORD *)v63 + 2) + 1, 1, v63);
    v65 = *((_QWORD *)v18 + 2);
    v64 = *((_QWORD *)v18 + 3);
    v22 = v65 + 1;
    v20 = v147;
    if (v65 >= v64 >> 1)
    {
      v115 = sub_100147150((char *)(v64 > 1), v65 + 1, 1, v18);
      v20 = v147;
      v18 = v115;
    }
    *((_QWORD *)v18 + 2) = v22;
    v66 = v18 + 32;
    v67 = &v18[16 * v65 + 32];
    *(_QWORD *)v67 = v19;
    *((_QWORD *)v67 + 1) = v23;
    v141 = v23;
    if (v65)
    {
      while (1)
      {
        v68 = v22 - 1;
        if (v22 >= 4)
        {
          v73 = &v66[16 * v22];
          v74 = *((_QWORD *)v73 - 8);
          v75 = *((_QWORD *)v73 - 7);
          v79 = __OFSUB__(v75, v74);
          v76 = v75 - v74;
          if (v79)
            goto LABEL_118;
          v78 = *((_QWORD *)v73 - 6);
          v77 = *((_QWORD *)v73 - 5);
          v79 = __OFSUB__(v77, v78);
          v71 = v77 - v78;
          v72 = v79;
          if (v79)
            goto LABEL_119;
          v80 = v22 - 2;
          v81 = &v66[16 * v22 - 32];
          v83 = *(_QWORD *)v81;
          v82 = *((_QWORD *)v81 + 1);
          v79 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v79)
            goto LABEL_121;
          v79 = __OFADD__(v71, v84);
          v85 = v71 + v84;
          if (v79)
            goto LABEL_124;
          if (v85 >= v76)
          {
            v103 = &v66[16 * v68];
            v105 = *(_QWORD *)v103;
            v104 = *((_QWORD *)v103 + 1);
            v79 = __OFSUB__(v104, v105);
            v106 = v104 - v105;
            if (v79)
              goto LABEL_128;
            v96 = v71 < v106;
            goto LABEL_87;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v97 = *((_QWORD *)v18 + 4);
            v98 = *((_QWORD *)v18 + 5);
            v79 = __OFSUB__(v98, v97);
            v90 = v98 - v97;
            v91 = v79;
            goto LABEL_81;
          }
          v70 = *((_QWORD *)v18 + 4);
          v69 = *((_QWORD *)v18 + 5);
          v79 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          v72 = v79;
        }
        if ((v72 & 1) != 0)
          goto LABEL_120;
        v80 = v22 - 2;
        v86 = &v66[16 * v22 - 32];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v89 = __OFSUB__(v87, v88);
        v90 = v87 - v88;
        v91 = v89;
        if (v89)
          goto LABEL_123;
        v92 = &v66[16 * v68];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v79 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v79)
          goto LABEL_126;
        if (__OFADD__(v90, v95))
          goto LABEL_127;
        if (v90 + v95 >= v71)
        {
          v96 = v71 < v95;
LABEL_87:
          if (v96)
            v68 = v80;
          goto LABEL_89;
        }
LABEL_81:
        if ((v91 & 1) != 0)
          goto LABEL_122;
        v99 = &v66[16 * v68];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v79 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v79)
          goto LABEL_125;
        if (v102 < v90)
          goto LABEL_14;
LABEL_89:
        v107 = v68 - 1;
        if (v68 - 1 >= v22)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v20)
          goto LABEL_140;
        v108 = v18;
        v109 = &v66[16 * v107];
        v110 = *(_QWORD *)v109;
        v111 = &v66[16 * v68];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v143;
        sub_1005262A4((void **)(v20 + 8 * *(_QWORD *)v109), (id *)(v20 + 8 * *(_QWORD *)v111), (id *)(v20 + 8 * v112), v142);
        v143 = v113;
        if (v113)
        {
LABEL_98:
          v116 = (CHWorkoutDetailHeartRateTableViewCell *)v108;
          goto LABEL_113;
        }
        if (v112 < v110)
          goto LABEL_115;
        if (v68 > *((_QWORD *)v108 + 2))
          goto LABEL_116;
        *(_QWORD *)v109 = v110;
        *(_QWORD *)&v66[16 * v107 + 8] = v112;
        v114 = *((_QWORD *)v108 + 2);
        if (v68 >= v114)
          goto LABEL_117;
        v22 = v114 - 1;
        memmove(&v66[16 * v68], v111 + 16, 16 * (v114 - 1 - v68));
        v18 = v108;
        *((_QWORD *)v108 + 2) = v114 - 1;
        v20 = v147;
        if (v114 <= 2)
          goto LABEL_14;
      }
    }
    v22 = 1;
LABEL_14:
    v6 = v140;
    v19 = v141;
    if (v141 >= v140)
      goto LABEL_101;
  }
  if (__OFADD__(v19, v137))
    goto LABEL_137;
  if (v19 + v137 >= v6)
    v49 = v6;
  else
    v49 = v19 + v137;
  if (v49 >= v19)
  {
    if (v23 != v49)
    {
      v133 = v18;
      v50 = v135 + 8 * v23;
      v138 = v49;
      do
      {
        v51 = v23;
        v52 = *(void **)(v20 + 8 * v23);
        v141 = v50;
        while (1)
        {
          v53 = *(void **)v50;
          v54 = v52;
          v55 = v53;
          v56 = objc_msgSend(v54, "startDate");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v56);

          v57 = objc_msgSend(v55, "startDate");
          v58 = v145;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v57);

          LOBYTE(v57) = static Date.> infix(_:_:)(v5, v58);
          v59 = *(void (**)(char *, uint64_t))(v144 + 8);
          v60 = v58;
          v61 = v146;
          v59(v60, v146);
          v59(v5, v61);

          if ((v57 & 1) == 0)
            break;
          v20 = v147;
          if (!v147)
            goto LABEL_139;
          v62 = *(void **)v50;
          v52 = *(void **)(v50 + 8);
          *(_QWORD *)v50 = v52;
          *(_QWORD *)(v50 + 8) = v62;
          v50 -= 8;
          if (v51 == ++v19)
            goto LABEL_43;
        }
        v20 = v147;
LABEL_43:
        v23 = v51 + 1;
        v50 = v141 + 8;
        v19 = v139;
      }
      while (v51 + 1 != v138);
      v23 = v138;
      v18 = v133;
    }
    goto LABEL_50;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1005260DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v8 = __chkstk_darwin(v7);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = objc_msgSend(v17, "startDate");
      v20 = v30;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v19) = static Date.> infix(_:_:)(v11, v20);
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1005262A4(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, "startDate");
      v39 = v53;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = objc_msgSend(v37, "startDate");
      v41 = v54;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v40) = static Date.> infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, "startDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v23 = objc_msgSend(v21, "startDate");
        v24 = v54;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.> infix(_:_:)(v18, v24);
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_100147308(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_10052670C(uint64_t a1, unint64_t a2, __n128 a3)
{
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char isEscapingClosureAtFileLocation;
  uint64_t v18;
  uint64_t aBlock[5];
  uint64_t v20;

  v5 = static os_log_type_t.debug.getter(a3);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain(a2);
    v18 = sub_10003E8EC(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, aBlock, v9 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "[RecentWorkoutAppQuery] Looking for companion bundle ID for %s.", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  v11 = swift_allocObject(&unk_1007A6F58, 32, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  v12 = objc_msgSend((id)objc_opt_self(LSApplicationRecord), "enumeratorWithOptions:", 0);
  v13 = (_QWORD *)swift_allocObject(&unk_1007A6F80, 40, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v11;
  v14 = swift_allocObject(&unk_1007A6FA8, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100526A34;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = (uint64_t)sub_10003A294;
  v20 = v14;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100274C8C;
  aBlock[3] = (uint64_t)&unk_1007A6FC0;
  v15 = _Block_copy(aBlock);
  v16 = v20;
  swift_bridgeObjectRetain(a2);
  swift_retain(v11);
  swift_retain(v14);
  objc_msgSend(v12, "swift_forEach:", v15, swift_release(v16).n128_f64[0]);

  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 116, 96, 65, 1);
  swift_release(v14);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v11 + 16, aBlock, 0, 0);
    swift_bridgeObjectRetain(*(_QWORD *)(v11 + 24));
    swift_release(v13);
    swift_release(v11);
  }
}

uint64_t sub_1005269E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100526A08()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100526A34(void *a1)
{
  uint64_t v1;

  sub_100525504(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100526A40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for RecentWorkoutAppQuery()
{
  return &type metadata for RecentWorkoutAppQuery;
}

void sub_100526A60()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  CGRect v23;
  CGRect v24;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v23.origin.x = v5;
    v23.origin.y = v7;
    v23.size.width = v9;
    v23.size.height = v11;
    CGRectGetWidth(v23);
    v12 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
    objc_msgSend(v12, "adjustedContentInset");
    objc_msgSend(v12, "adjustedContentInset");
    v13 = objc_msgSend(v1, "view");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "bounds");
      v16 = v15;
      v18 = v17;
      v20 = v19;
      v22 = v21;

      v24.origin.x = v16;
      v24.origin.y = v18;
      v24.size.width = v20;
      v24.size.height = v22;
      CGRectGetHeight(v24);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

char *sub_100526BA0(void *a1, char *a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *result;
  char *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  objc_super v36;

  v34 = a1;
  v35 = a3;
  v5 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  __chkstk_darwin(v5);
  v7 = (id *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  v9 = objc_allocWithZone((Class)UIViewController);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");
  v11 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setPagingEnabled:", 1);
  objc_msgSend(v12, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v10[v11] = v12;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = 0;

  v13 = *(_QWORD *)&v3[v8];
  v14 = (objc_class *)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController();
  v36.receiver = v10;
  v36.super_class = v14;
  v15 = (char *)objc_msgSendSuper2(&v36, "initWithRootViewController:", v13);
  v16 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  v17 = *(void **)&v15[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController];
  v18 = v15;
  result = (char *)objc_msgSend(v17, "view");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v20, "setBackgroundColor:", v21);

    v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v18, "doneButtonTapped");
    v23 = objc_msgSend(*(id *)&v15[v16], "navigationItem");
    objc_msgSend(v23, "setRightBarButtonItem:", v22);

    v24 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView];
    objc_msgSend(v24, "setDelegate:", v18);
    result = (char *)objc_msgSend(*(id *)&v15[v16], "view");
    if (result)
    {
      v25 = result;
      objc_msgSend(result, "addSubview:", v24);

      sub_100526EF8();
      v26 = (char *)v7 + *(int *)(sub_100047110((uint64_t *)&unk_100839270) + 48);
      sub_100526A60();
      *v7 = v27;
      v7[1] = v28;
      v29 = enum case for ArtworkDimension.width(_:);
      v30 = type metadata accessor for ArtworkDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v26, v29, v30);
      swift_storeEnumTagMultiPayload(v7, v5, 0);
      v31 = *(_QWORD *)&a2[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      v32 = swift_allocObject(&unk_1007A7028, 24, 7);
      swift_unknownObjectWeakInit(v32 + 16, v18);
      v33 = v34;
      sub_1003A28BC(v33, (uint64_t)v7, v31, v33, v32, v35);

      sub_1002B0318((uint64_t)v7);
      swift_release(v32);
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100526EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class isa;

  v1 = sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100623750;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  v6 = objc_msgSend(v5, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "layoutMarginsGuide");

  v9 = objc_msgSend(v8, "topAnchor");
  v10 = objc_msgSend(v4, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v2 + 32) = v10;
  v11 = objc_msgSend(v3, "leadingAnchor");
  v12 = objc_msgSend(v5, "view");
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "leadingAnchor");

  v15 = objc_msgSend(v11, "constraintEqualToAnchor:", v14);
  *(_QWORD *)(v2 + 40) = v15;
  v16 = objc_msgSend(v3, "trailingAnchor");
  v17 = objc_msgSend(v5, "view");
  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "trailingAnchor");

  v20 = objc_msgSend(v16, "constraintEqualToAnchor:", v19);
  *(_QWORD *)(v2 + 48) = v20;
  v21 = objc_msgSend(v3, "bottomAnchor");
  v22 = objc_msgSend(v5, "view");
  if (v22)
  {
    v23 = v22;
    v24 = (void *)objc_opt_self(NSLayoutConstraint);
    v25 = objc_msgSend(v23, "layoutMarginsGuide");

    v26 = objc_msgSend(v25, "bottomAnchor");
    v27 = objc_msgSend(v21, "constraintEqualToAnchor:", v26);

    *(_QWORD *)(v2 + 56) = v27;
    specialized Array._endMutation()(v28);
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v29, v30, v31, v32, v33, v34, v35);
    objc_msgSend(v24, "activateConstraints:", isa);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100527218(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  _BYTE v35[24];

  if (a1)
  {
    v6 = a3 + 16;
    swift_beginAccess(a3 + 16, v35, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (char *)Strong;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 >= 0)
          v26 = a1 & 0xFFFFFFFFFFFFFF8;
        else
          v26 = a1;
        swift_bridgeObjectRetain(a1);
        v9 = _CocoaArrayWrapper.endIndex.getter(v26);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v27, v28, v29, v30, v31, v32, v33);
      }
      else
      {
        v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = v9;

    }
    swift_beginAccess(v6, &v34, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v6);
    if (v10)
    {
      v11 = (void *)v10;
      sub_1005273E8(a1, a4);

    }
  }
  else
  {
    v13 = static os_log_type_t.error.getter(0);
    v14 = (void *)HKLogActivity;
    v15 = sub_100047110((uint64_t *)&unk_100827460);
    v16 = swift_allocObject(v15, 112, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v16 + 56) = &type metadata for String;
    *(_QWORD *)(v16 + 64) = sub_100038CF8();
    *(_QWORD *)(v16 + 32) = 0xD000000000000039;
    *(_QWORD *)(v16 + 40) = 0x800000010069C660;
    *(_QWORD *)(v16 + 96) = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    *(_QWORD *)(v16 + 104) = sub_10018A478();
    *(_QWORD *)(v16 + 72) = a2;
    v17 = v14;
    v18 = a2;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v17, "%@ failed to load guided run media moment artwork items for workout: %@", 71, 2, v16);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v19, v20, v21, v22, v23, v24, v25);
  }
}

void sub_1005273E8(uint64_t a1, uint64_t a2)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  void *v5;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double Width;
  uint64_t v17;
  void *v18;
  const char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  id v52;
  void *v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  id v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;

  v3 = a2;
  sub_1005278E8(a2);
  v5 = *(Class *)((char *)&v2->super.super.super.super.isa
                + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  v6 = objc_msgSend(v5, "view");
  if (v6)
  {
    v7 = v6;
    v84 = v5;
    objc_msgSend(v6, "frame");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v86.origin.x = v9;
    v86.origin.y = v11;
    v86.size.width = v13;
    v86.size.height = v15;
    Width = CGRectGetWidth(v86);
    if ((unint64_t)a1 >> 62)
      goto LABEL_25;
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v18 = *(Class *)((char *)&v2->super.super.super.super.isa
                     + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
      objc_msgSend(v18, "bounds");
      objc_msgSend(v18, "setContentSize:", Width * (double)v17, CGRectGetHeight(v87));
      v85 = v18;
      objc_msgSend(v18, "setContentOffset:animated:", 0, Width * (double)v3, 0.0);
      v2 = &_swiftEmptyArrayStorage;
      if (v17)
      {
        specialized ContiguousArray.reserveCapacity(_:)(v17);
        if (v17 < 0)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          break;
        }
        v26 = (void *)objc_opt_self(UIColor);
        v27 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, a1);
          else
            v28 = *(id *)(a1 + 8 * v27 + 32);
          v29 = v28;
          ++v27;
          v30 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v28);
          v31 = (void *)UIView.withContentMode(_:)(1);

          v32 = objc_msgSend(v31, "layer");
          objc_msgSend(v32, "setCornerRadius:", 6.0);

          objc_msgSend(v31, "setClipsToBounds:", 1);
          v33 = objc_msgSend(v26, "redColor");
          objc_msgSend(v31, "setBackgroundColor:", v33);

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v35 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
          v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v31);
          specialized ContiguousArray._endMutation()(v36);
        }
        while (v17 != v27);
        v2 = &_swiftEmptyArrayStorage;
      }
      if ((unint64_t)&_swiftEmptyArrayStorage >> 62)
      {
        if ((uint64_t)&_swiftEmptyArrayStorage < 0)
          v76 = &_swiftEmptyArrayStorage;
        else
          v76 = (CHWorkoutDetailHeartRateTableViewCell *)((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
        a1 = _CocoaArrayWrapper.endIndex.getter(v76);
        swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v77, v78, v79, v80, v81, v82, v83);
        if (!a1)
        {
LABEL_23:
          swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v19, v20, v21, v22, v23, v24, v25);
          return;
        }
      }
      else
      {
        a1 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!a1)
          goto LABEL_23;
      }
      v37 = 4;
      while (1)
      {
        v3 = v37 - 4;
        v38 = ((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, &_swiftEmptyArrayStorage)
            : *((id *)&_swiftEmptyArrayStorage.super.super.super.super.isa + v37);
        v39 = v38;
        v40 = v37 - 3;
        if (__OFADD__(v3, 1))
          break;
        v41 = objc_msgSend(v84, "view");
        if (!v41)
          goto LABEL_35;
        v42 = v41;
        objc_msgSend(v41, "bounds");
        v44 = v43;
        v46 = v45;
        v48 = v47;
        v50 = v49;

        v88.origin.x = v44;
        v88.origin.y = v46;
        v88.size.width = v48;
        v88.size.height = v50;
        v51 = CGRectGetWidth(v88);
        objc_msgSend(v85, "adjustedContentInset");
        objc_msgSend(v85, "adjustedContentInset");
        v52 = objc_msgSend(v84, "view");
        if (!v52)
          goto LABEL_36;
        v53 = v52;
        objc_msgSend(v52, "bounds");
        v55 = v54;
        v57 = v56;
        v59 = v58;
        v61 = v60;

        v89.origin.x = v55;
        v89.origin.y = v57;
        v89.size.width = v59;
        v89.size.height = v61;
        v62 = objc_msgSend(v84, "view", CGRectGetHeight(v89));
        if (!v62)
          goto LABEL_37;
        v63 = v62;
        objc_msgSend(v62, "center");
        v65 = v64;

        objc_msgSend(v39, "intrinsicContentSize");
        v67 = v66;
        objc_msgSend(v85, "bounds");
        objc_msgSend(v39, "setFrame:", Width * (double)v3 + v65 - (v51 + -50.0) * 0.5, CGRectGetHeight(v90) * 0.5 - v67 * 0.5, v51 + -50.0, v67);
        objc_msgSend(v85, "addSubview:", v39);

        ++v37;
        v2 = &_swiftEmptyArrayStorage;
        if (v40 == a1)
          goto LABEL_23;
      }
      __break(1u);
LABEL_25:
      if (a1 < 0)
        v68 = a1;
      else
        v68 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v17 = _CocoaArrayWrapper.endIndex.getter(v68);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v69, v70, v71, v72, v73, v74, v75);
    }
  }
  __break(1u);
}

void sub_1005278E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  NSString v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;

  v2 = v1;
  v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = (void *)objc_opt_self(FIUIFormattingManager);
    v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v3);
    v6 = objc_msgSend(v4, "stringWithNumber:decimalPrecision:", v5, 1);

    if (v6)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

    }
    else
    {
      v7 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v9 = v10;
    }
    v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount));
    v12 = objc_msgSend(v4, "stringWithNumber:decimalPrecision:", v11, 1);

    if (v12)
    {
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

    }
    else
    {
      v13 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v15 = v16;
    }
    v17 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
    v18 = sub_100047110((uint64_t *)&unk_100827460);
    v19 = swift_allocObject(v18, 112, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    v20 = sub_100038CF8();
    *(_QWORD *)(v19 + 32) = v7;
    *(_QWORD *)(v19 + 40) = v9;
    *(_QWORD *)(v19 + 96) = &type metadata for String;
    *(_QWORD *)(v19 + 104) = v20;
    *(_QWORD *)(v19 + 64) = v20;
    *(_QWORD *)(v19 + 72) = v13;
    *(_QWORD *)(v19 + 80) = v15;
    String.init(format:_:)(0x402520666F204025, 0xE800000000000000, v19, v21);
    v23 = v22;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
    objc_msgSend(v17, "setTitle:", v24);

  }
}

void sub_100527B30(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(a1, "contentOffset");
  v3 = v2;
  objc_msgSend(a1, "frame");
  v5 = v3 / v4;
  if ((~COERCE__INT64(v3 / v4) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    sub_1005278E8((uint64_t)v5);
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100527C9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController()
{
  return objc_opt_self(_TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController);
}

void sub_100527D24()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  v2 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setPagingEnabled:", 1);
  objc_msgSend(v3, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailGuidedRunMMGalleryViewController.swift", 62, 2, 133, 0);
  __break(1u);
}

uint64_t sub_100527E28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100527E4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer);
  v2 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors), "gradientLightColor"));
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "CGColor");

    objc_msgSend(v1, "setStrokeColor:", v5);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer);
    v7 = sub_100047110(&qword_10082CEC0);
    v8 = swift_allocObject(v7, 96, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100620BC0;
    v9 = objc_msgSend(*(id *)(v0 + v2), "gradientDarkColor");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "CGColor");

      type metadata accessor for CGColor(0);
      v13 = v12;
      *(_QWORD *)(v8 + 56) = v12;
      *(_QWORD *)(v8 + 32) = v11;
      v14 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v15 = objc_msgSend(v14, "CGColor");

      *(_QWORD *)(v8 + 88) = v13;
      *(_QWORD *)(v8 + 64) = v15;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v16, v17, v18, v19, v20, v21, v22);
      objc_msgSend(v6, "setColors:", isa);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100527FE8()
{
  char *v0;
  char *v1;
  id v2;
  double MaxX;
  id v4;
  double v5;
  id v6;
  double *v7;
  unint64_t v8;
  char *v9;
  double Width;
  double MaxY;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  double v17;
  double *v18;
  char **v19;
  double v20;
  double Height;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  unint64_t v53;
  void *v54;
  double v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  _QWORD v66[4];
  id v67[5];
  void *v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v1 = v0;
  objc_msgSend(v0, "bounds");
  if (!CGRectIsEmpty(v69))
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v1, "bounds");
    objc_msgSend(v2, "moveToPoint:", 0.0, CGRectGetMaxY(v70));
    objc_msgSend(v1, "bounds");
    MaxX = CGRectGetMaxX(v71);
    objc_msgSend(v1, "bounds");
    v61 = v2;
    objc_msgSend(v2, "addLineToPoint:", MaxX, CGRectGetMaxY(v72));
    v4 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v1, "bounds");
    objc_msgSend(v4, "moveToPoint:", 0.0, CGRectGetMaxY(v73));
    objc_msgSend(v1, "bounds");
    v5 = CGRectGetMaxX(v74);
    objc_msgSend(v1, "bounds");
    v60 = v4;
    objc_msgSend(v4, "addLineToPoint:", v5, CGRectGetMaxY(v75));
    v62 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    v6 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v1, "bounds");
    v64 = v6;
    objc_msgSend(v6, "moveToPoint:", 0.0, CGRectGetMaxY(v76));
    v7 = (double *)&v1[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram];
    v8 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram] + 16);
    v9 = v1;
    objc_msgSend(v1, "bounds");
    Width = CGRectGetWidth(v77);
    if (v8 >= 2)
      Width = Width / (double)(*(_QWORD *)(*(_QWORD *)v7 + 16) - 1);
    objc_msgSend(v1, "bounds");
    MaxY = CGRectGetMaxY(v78);
    v12 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    if (v12)
    {
      v13 = MaxY;
      v14 = 0;
      v15 = 0;
      v16 = &_swiftEmptyArrayStorage;
      while (1)
      {
        MaxY = v7[3];
        v20 = 0.0;
        if (MaxY < 2.22044605e-16)
          goto LABEL_11;
        if ((unint64_t)v15 < *(_QWORD *)(*(_QWORD *)v7 + 16))
        {
          v28 = *(_QWORD *)v7 + v14;
          if ((*(_BYTE *)(v28 + 48) & 1) == 0)
            break;
        }
LABEL_9:
        ++v15;
        v14 += 24;
        if (v12 == v15)
          goto LABEL_19;
      }
      v20 = *(double *)(v28 + 32) / MaxY;
LABEL_11:
      objc_msgSend(v9, "bounds");
      Height = CGRectGetHeight(v79);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = sub_100141950(0, *(_QWORD *)v16->cellPadding + 1, 1, v16, v22, v23, v24, v25);
      v27 = *(_QWORD *)v16->cellPadding;
      v26 = *(_QWORD *)v16->cellInset;
      if (v27 >= v26 >> 1)
        v16 = sub_100141950((CHWorkoutDetailHeartRateTableViewCell *)(v26 > 1), v27 + 1, 1, v16, v22, v23, v24, v25);
      v17 = v13 - v20 * Height;
      *(_QWORD *)v16->cellPadding = v27 + 1;
      v18 = (double *)v16 + 2 * v27;
      v18[4] = Width * (double)v15;
      v18[5] = v17;
      v19 = &selRef_moveToPoint_;
      if (v15)
        v19 = &selRef_addLineToPoint_;
      objc_msgSend(v62, *v19, Width * (double)v15, v17);
      objc_msgSend(v64, "addLineToPoint:", Width * (double)v15, v17);
      goto LABEL_9;
    }
    v16 = &_swiftEmptyArrayStorage;
LABEL_19:
    objc_msgSend(v9, "bounds", MaxY);
    v29 = CGRectGetMaxX(v80);
    objc_msgSend(v9, "bounds");
    objc_msgSend(v64, "addLineToPoint:", v29, CGRectGetMaxY(v81));
    objc_msgSend(v9, "bounds");
    objc_msgSend(v64, "addLineToPoint:", 0.0, CGRectGetMaxY(v82));
    v30 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath];
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = v61;
    v31 = v61;

    v32 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath];
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = v60;
    v33 = v60;

    if (v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] == 1)
    {
      sub_10044ED74(v16, (uint64_t)v67);
      v41 = v67[0];
      swift_bridgeObjectRelease(v16, v42, v43, v44, v45, v46, v47, v48);
      sub_100529028((uint64_t)v67, (uint64_t)&v68);
      v49 = v68;
      if (v68)
      {
        v50 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath];
        *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = v68;
        v51 = v41;

        v52 = objc_msgSend(v49, "copy");
        _bridgeAnyObjectToAny(_:)(v66, v52);
        swift_unknownObjectRelease(v52);
        v53 = sub_100529070();
        if ((swift_dynamicCast(&v65, v66, (char *)&type metadata for Any + 8, v53, 6) & 1) != 0)
        {
          v54 = v65;
          objc_msgSend(v9, "bounds");
          v55 = CGRectGetMaxX(v83);
          objc_msgSend(v9, "bounds");
          objc_msgSend(v54, "addLineToPoint:", v55, CGRectGetMaxY(v84));
          objc_msgSend(v9, "bounds");
          objc_msgSend(v54, "addLineToPoint:", 0.0, CGRectGetMaxY(v85));
          objc_msgSend(v54, "closePath");
          v56 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath];
          *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = v54;
          v57 = v54;

          sub_1005290AC(v67);
        }
        else
        {

          sub_1005290AC(v67);
        }
      }
      else
      {

      }
    }
    else
    {
      swift_bridgeObjectRelease(v16, v34, v35, v36, v37, v38, v39, v40);
      v58 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath];
      *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = v62;
      v59 = v62;

      v63 = *(id *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath];
      *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = v64;

    }
  }
}

char *sub_100528610(uint64_t a1)
{
  void *v1;
  void *v3;
  _BYTE *v4;
  char *result;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  __int128 v15;
  char *v16;
  void *v17;
  char *v18;
  objc_super v19;

  v3 = (void *)objc_opt_self(ARUIMetricColors);
  v4 = v1;
  result = (char *)objc_msgSend(v3, "keyColors");
  if (result)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors] = result;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = 0;
    v6 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer;
    v7 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    objc_msgSend(v7, "setLineWidth:", 1.0);
    objc_msgSend(v7, "setFillColor:", 0);
    objc_msgSend(v7, "setLineJoin:", kCALineJoinRound);
    *(_QWORD *)&v4[v6] = v7;
    v8 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer;
    v9 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    objc_msgSend(v9, "setStartPoint:", 0.5, 0.0);
    objc_msgSend(v9, "setEndPoint:", 0.5, 1.0);
    *(_QWORD *)&v4[v8] = v9;
    v10 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask;
    v11 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    if (qword_10081DD78 != -1)
      swift_once(&qword_10081DD78, sub_100442F3C);
    objc_msgSend(v11, "setLineWidth:", *(double *)&qword_10086AA08);
    v12 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v13 = objc_msgSend(v12, "CGColor");

    objc_msgSend(v11, "setFillColor:", v13);
    *(_QWORD *)&v4[v10] = v11;
    v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] = 1;
    v14 = &v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram];
    v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v14 = *(_OWORD *)a1;
    *((_OWORD *)v14 + 1) = v15;
    *((_OWORD *)v14 + 2) = *(_OWORD *)(a1 + 32);
    *((_QWORD *)v14 + 6) = *(_QWORD *)(a1 + 48);

    v19.receiver = v4;
    v19.super_class = (Class)type metadata accessor for LineSeriesLayer();
    v16 = (char *)objc_msgSendSuper2(&v19, "init");
    v17 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer];
    v18 = v16;
    objc_msgSend(v18, "addSublayer:", v17);
    objc_msgSend(v17, "setMask:", *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask]);
    objc_msgSend(v18, "addSublayer:", *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer]);
    sub_100527E4C();

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1005288D8(_QWORD *a1)
{
  void *v1;
  objc_class *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t ObjectType;
  _QWORD v17[7];
  _QWORD v18[7];

  sub_10003E9BC((uint64_t)a1, (uint64_t)v18);
  v3 = (objc_class *)type metadata accessor for LineSeriesLayer();
  v4 = v1;
  if (swift_dynamicCast(v17, v18, (char *)&type metadata for Any + 8, v3, 6))
  {
    v5 = (void *)v17[0];
    v7 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram);
    v6 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 8);
    v9 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 16);
    v8 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 24);
    v11 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 32);
    v10 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 40);
    v12 = *(_QWORD *)(v17[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v6);

  }
  else
  {
    sub_10003D1C0(1, (uint64_t)v17, 0.0, 1.0);

    v10 = v17[5];
    v12 = v17[6];
    v8 = v17[3];
    v11 = v17[4];
    v9 = v17[2];
    v7 = v17[0];
    v6 = v17[1];
  }
  v18[0] = v7;
  v18[1] = v6;
  v18[2] = v9;
  v18[3] = v8;
  v18[4] = v11;
  v18[5] = v10;
  v18[6] = v12;
  v13 = objc_allocWithZone(v3);
  v14 = sub_100528610((uint64_t)v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  ObjectType = swift_getObjectType(v4);
  swift_deallocPartialClassInstance(v4, ObjectType, 129, 7);
  return v14;
}

id sub_100528A60(void *a1)
{
  void *v1;
  void *v2;
  _BYTE *v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (void *)objc_opt_self(ARUIMetricColors);
  v3 = v1;
  result = objc_msgSend(v2, "keyColors");
  if (result)
  {
    v5 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors;
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors] = result;
    v6 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath;
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = 0;
    v7 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath;
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = 0;
    v8 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath;
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = 0;
    v19 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath;
    *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = 0;
    v9 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer;
    v10 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    objc_msgSend(v10, "setLineWidth:", 1.0);
    objc_msgSend(v10, "setFillColor:", 0);
    objc_msgSend(v10, "setLineJoin:", kCALineJoinRound);
    v20 = v9;
    *(_QWORD *)&v3[v9] = v10;
    v11 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer;
    v12 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    objc_msgSend(v12, "setStartPoint:", 0.5, 0.0);
    objc_msgSend(v12, "setEndPoint:", 0.5, 1.0);
    *(_QWORD *)&v3[v11] = v12;
    v13 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask;
    v14 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    if (qword_10081DD78 != -1)
      swift_once(&qword_10081DD78, sub_100442F3C);
    objc_msgSend(v14, "setLineWidth:", *(double *)&qword_10086AA08);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v16 = objc_msgSend(v15, "CGColor");

    objc_msgSend(v14, "setFillColor:", v16);
    *(_QWORD *)&v3[v13] = v14;
    v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] = 1;

    v17 = *(void **)&v3[v13];
    v18 = type metadata accessor for LineSeriesLayer();
    swift_deallocPartialClassInstance(v3, v18, 129, 7);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100528D38()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for LineSeriesLayer();
  objc_msgSendSuper2(&v4, "layoutSublayers");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");
  sub_100527FE8();
}

void sub_100528E24(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath);
  if (v3)
    v4 = objc_msgSend(v3, "CGPath");
  else
    v4 = 0;
  objc_msgSend(v2, "setPath:", v4);

  v5 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask);
  v6 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath);
  if (v6)
    v7 = objc_msgSend(v6, "CGPath");
  else
    v7 = 0;
  v8 = v7;
  objc_msgSend(v5, "setPath:");

}

id sub_100528F24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LineSeriesLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LineSeriesLayer()
{
  return objc_opt_self(_TtC10FitnessApp15LineSeriesLayer);
}

uint64_t sub_100529028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100839308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100529070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839310;
  if (!qword_100839310)
  {
    v1 = objc_opt_self(UIBezierPath);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100839310);
  }
  return result;
}

id *sub_1005290AC(id *a1)
{

  return a1;
}

void sub_1005290D4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  double v8;
  BOOL v10;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(double *)(v2 + 32);
    if (v4 > a1)
      return;
    v5 = *(double *)(v1 + 16);
    v6 = v4 + v5 * (double)v3;
    if (v6 <= a1)
      return;
  }
  else
  {
    if (a1 < 0.0)
      return;
    v5 = *(double *)(v1 + 16);
    v4 = 0.0;
    v6 = v5 * 0.0 + 0.0;
    if (v6 <= a1)
      return;
  }
  if (v5 == 0.0)
  {
LABEL_19:
    __break(1u);
  }
  else
  {
    v7 = -1;
    v8 = v4;
    do
    {
      if (v5 <= 0.0 ? v8 <= v6 : v6 <= v8)
        break;
      if (__OFADD__(v7 + 1, 1))
      {
        __break(1u);
        goto LABEL_19;
      }
      v10 = v8 < a1;
      v8 = v4 + (double)(v7 + 2) * v5;
      ++v7;
    }
    while (v10);
  }
}

void sub_100529194(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  const double *v19;
  uint64_t v20;
  const double *v21;
  unint64_t v22;
  double *v23;
  uint64_t v24;
  double v25;
  double *cellInset;
  uint64_t v27;
  double v28;
  double v29;
  unint64_t v30;
  double *v31;
  double v32;
  __int128 v33;
  uint64_t v34;
  float64x2x2_t v35;
  float64x2x2_t v36;

  v9 = *v8;
  v34 = v9;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(v9);
    v12 = (_BYTE *)(v11 + 48);
    v13 = &_swiftEmptyArrayStorage;
    do
    {
      if ((*v12 & 1) == 0)
      {
        v33 = *((_OWORD *)v12 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD18(0, *(_QWORD *)v13->cellPadding + 1, 1, v13);
        v15 = *(_QWORD *)v13->cellPadding;
        v14 = *(_QWORD *)v13->cellInset;
        if (v15 >= v14 >> 1)
          v13 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD18((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
        *(_QWORD *)v13->cellPadding = v15 + 1;
        *((_OWORD *)&v13[1].super.super.super.super.isa + v15) = v33;
      }
      v12 += 24;
      --v10;
    }
    while (v10);
    sub_1000478F4(&v34);
    v16 = *(_QWORD *)v13->cellPadding;
    if (!v16)
      goto LABEL_27;
  }
  else
  {
    v13 = &_swiftEmptyArrayStorage;
    v16 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
    if (!v16)
      goto LABEL_27;
  }
  if (v16 >= 4)
  {
    v17 = v16 & 0x7FFFFFFFFFFFFFFCLL;
    v19 = (const double *)&v13[2];
    v18 = 0.0;
    v20 = v16 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      v21 = v19 - 4;
      v35 = vld2q_f64(v21);
      v36 = vld2q_f64(v19);
      v35.val[0] = vmulq_f64(v35.val[0], v35.val[1]);
      v36.val[0] = vmulq_f64(v36.val[0], v36.val[1]);
      v18 = v18 + v35.val[0].f64[0] + v35.val[0].f64[1] + v36.val[0].f64[0] + v36.val[0].f64[1];
      v19 += 8;
      v20 -= 4;
    }
    while (v20);
    if (v16 == v17)
      goto LABEL_20;
  }
  else
  {
    v17 = 0;
    v18 = 0.0;
  }
  v22 = v16 - v17;
  v23 = (double *)&v13[1].heartRateController[16 * v17];
  do
  {
    v18 = v18 + *(v23 - 1) * *v23;
    v23 += 2;
    --v22;
  }
  while (v22);
LABEL_20:
  if (v16 < 2)
  {
    v24 = 0;
    v25 = 0.0;
LABEL_25:
    v30 = v16 - v24;
    v31 = (double *)&v13[1].heartRateController[16 * v24];
    do
    {
      v32 = *v31;
      v31 += 2;
      v25 = v25 + v32;
      --v30;
    }
    while (v30);
    goto LABEL_27;
  }
  v24 = v16 & 0x7FFFFFFFFFFFFFFELL;
  cellInset = (double *)v13[1].cellInset;
  v25 = 0.0;
  v27 = v16 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v28 = *(cellInset - 2);
    v29 = *cellInset;
    cellInset += 4;
    v25 = v25 + v28 + v29;
    v27 -= 2;
  }
  while (v27);
  if (v16 != v24)
    goto LABEL_25;
LABEL_27:
  swift_bridgeObjectRelease(v13, a2, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_10052939C(unint64_t result, uint64_t a2, double a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(*(_QWORD *)a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if ((*(_BYTE *)(*(_QWORD *)a2 + 24 * result + 48) & 1) != 0)
    return 0;
  else
    return *(_QWORD *)&a3;
}

uint64_t sub_1005293E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v8 = type metadata accessor for TimeZone(0);
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for MetricChartData(0);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10081F090);
  __chkstk_darwin(v13);
  v57 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for MetricDetailViewModel(0);
  __chkstk_darwin(v56);
  v63 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a4 = swift_getKeyPath(&unk_100643D80);
  v19 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(a4, v19, 0);
  v20 = (int *)type metadata accessor for MetricCardView(0);
  v21 = (uint64_t)a4 + v20[5];
  v62 = a1;
  sub_10004F8C8(a1, v21, type metadata accessor for MetricCard);
  *((_BYTE *)a4 + v20[6]) = a2;
  v22 = (uint64_t)a4 + v20[7];
  v59 = a3;
  sub_100021CC0(a3, v22, &qword_10081F600);
  v23 = type metadata accessor for MetricCard(0);
  v24 = *(void **)(a1 + *(int *)(v23 + 44));
  v58 = v20;
  v25 = v20[9];
  v60 = a4;
  v26 = (char *)a4 + v25;
  *(_QWORD *)((char *)a4 + v25) = v24;
  v27 = type metadata accessor for MetricFormattingHelper(0);
  v61 = &v26[*(int *)(v27 + 20)];
  v28 = (void *)objc_opt_self(NSBundle);
  v29 = v24;
  v30 = objc_msgSend(v28, "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = swift_bridgeObjectRetain(v35);
  AttributeContainer.init()(v36);
  v37 = v33;
  v38 = v62;
  v39 = v18;
  v40 = (uint64_t)v63;
  AttributedString.init(_:attributes:)(v37, v35, v39);
  swift_bridgeObjectRelease(v35);
  v41 = *(int *)(v27 + 24);
  *(_QWORD *)&v26[v41] = sub_100133E38();
  sub_10004F8C8(v38 + *(int *)(v23 + 36), v40, type metadata accessor for MetricDetailViewModel);
  if (*(_BYTE *)(v40 + 40) == 1 && *(_QWORD *)(v40 + 32) == 1)
  {
    v42 = *(char **)(v40 + 16);
    v43 = *((_QWORD *)v42 + 2);
    if (v43)
    {
      v44 = (uint64_t)&v42[(*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80)];
      v45 = v40 + *(int *)(v56 + 44);
      v46 = *(_QWORD *)(v64 + 72);
      v61 = *(char **)(v40 + 16);
      swift_bridgeObjectRetain(v61);
      while (1)
      {
        v47 = sub_10004F8C8(v44, (uint64_t)v12, type metadata accessor for MetricChartData);
        static TimeZone.current.getter(v47);
        v48 = Date.isSameDay(as:timeZone:)(v45, v10);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v66);
        if ((v48 & 1) != 0)
          break;
        sub_100011F54((uint64_t)v12, type metadata accessor for MetricChartData);
        v44 += v46;
        if (!--v43)
        {
          v50 = 1;
          v52 = v59;
          v51 = v60;
          v53 = v57;
          goto LABEL_11;
        }
      }
      v53 = v57;
      sub_100230564((uint64_t)v12, v57);
      v50 = 0;
      v52 = v59;
      v51 = v60;
LABEL_11:
      v40 = (uint64_t)v63;
      v55 = v58;
      v42 = v61;
    }
    else
    {
      v49 = swift_bridgeObjectRetain(*(_QWORD *)(v40 + 16));
      v50 = 1;
      v52 = v59;
      v51 = v60;
      v53 = v57;
      v55 = v58;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v64 + 56))(v53, v50, 1, v67, v49);
    sub_10001BE90(v52, &qword_10081F600);
    sub_100011F54(v38, type metadata accessor for MetricCard);
    swift_bridgeObjectRelease(v42);
    sub_100011F54(v40, type metadata accessor for MetricDetailViewModel);
    return sub_100045AD4(v53, (uint64_t)v51 + v55[8], &qword_10081F090);
  }
  else
  {
    sub_10001BE90(v59, &qword_10081F600);
    sub_100011F54(v38, type metadata accessor for MetricCard);
    sub_100011F54(v40, type metadata accessor for MetricDetailViewModel);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))((char *)v60 + v58[8], 1, 1, v67);
  }
}

uint64_t type metadata accessor for MetricCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100839380;
  if (!qword_100839380)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricCardView);
  return result;
}

_QWORD *sub_100529900(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  void **v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  char *v67;
  uint64_t v68;
  void *v69;
  void (*v70)(void **, _QWORD, uint64_t, uint64_t);
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  id v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t, __n128);
  char *v89;
  char *__dst;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  int *v94;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v14 = *a2;
      *a1 = *a2;
      swift_retain(v14);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v93 = a1;
    v94 = a3;
    v15 = a3[5];
    v16 = (char *)a1 + v15;
    v92 = a2;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = (int *)type metadata accessor for MetricCard(0);
    v20 = v19[5];
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = *(_QWORD *)v22;
    v24 = *((_QWORD *)v22 + 1);
    v25 = v22[16];
    sub_1000EB3F4(*(_QWORD *)v22, v24, v25);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    v21[16] = v25;
    v16[v19[6]] = v17[v19[6]];
    v16[v19[7]] = v17[v19[7]];
    v16[v19[8]] = v17[v19[8]];
    v26 = v19[9];
    v89 = v16;
    v27 = &v16[v26];
    v28 = &v17[v26];
    v30 = *(void **)&v17[v26];
    v29 = *(void **)&v17[v26 + 8];
    *(_QWORD *)v27 = v30;
    *((_QWORD *)v27 + 1) = v29;
    v32 = *(_QWORD *)&v17[v26 + 16];
    v31 = *(_QWORD *)&v17[v26 + 24];
    *((_QWORD *)v27 + 2) = v32;
    *((_QWORD *)v27 + 3) = v31;
    *((_QWORD *)v27 + 4) = *(_QWORD *)&v17[v26 + 32];
    v27[40] = v17[v26 + 40];
    v33 = type metadata accessor for MetricDetailViewModel(0);
    v34 = *(int *)(v33 + 36);
    __dst = &v27[v34];
    v91 = v33;
    v35 = &v28[v34];
    v36 = type metadata accessor for DateInterval(0);
    v87 = *(_QWORD *)(v36 - 8);
    v88 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v87 + 48);
    v37 = v30;
    v38 = v29;
    swift_bridgeObjectRetain(v32);
    v39 = swift_bridgeObjectRetain(v31);
    if (v88(v35, 1, v36, v39))
    {
      v40 = sub_100047110((uint64_t *)&unk_100827440);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v36);
    }
    v27[*(int *)(v91 + 40)] = v28[*(int *)(v91 + 40)];
    v41 = *(int *)(v91 + 44);
    v42 = &v27[v41];
    v43 = &v28[v41];
    v44 = type metadata accessor for Date(0);
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    v45(v42, v43, v44);
    v89[v19[10]] = v17[v19[10]];
    v46 = v19[11];
    v47 = *(void **)&v17[v46];
    *(_QWORD *)&v89[v46] = v47;
    v13 = v93;
    v48 = v94;
    v49 = v94[7];
    *((_BYTE *)v93 + v94[6]) = *((_BYTE *)v92 + v94[6]);
    v50 = (char *)v93 + v49;
    v51 = (char *)v92 + v49;
    v52 = *(_QWORD *)((char *)v92 + v49 + 24);
    v53 = v47;
    if (v52)
    {
      v54 = *((_QWORD *)v51 + 4);
      *((_QWORD *)v50 + 3) = v52;
      *((_QWORD *)v50 + 4) = v54;
      (**(void (***)(char *, char *, uint64_t))(v52 - 8))(v50, v51, v52);
    }
    else
    {
      v55 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v55;
      *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
    }
    v56 = v94[8];
    v57 = (void **)((char *)v93 + v56);
    v58 = (void **)((char *)v92 + v56);
    v59 = type metadata accessor for MetricChartData(0);
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = sub_100047110(&qword_10081F090);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v62 = *v58;
      *v57 = *v58;
      v63 = *(int *)(v59 + 20);
      v64 = (char *)v57 + v63;
      v65 = (char *)v58 + v63;
      v66 = v62;
      v67 = v64;
      v48 = v94;
      v45(v67, v65, v44);
      v68 = *(int *)(v59 + 24);
      v69 = *(void **)((char *)v58 + v68);
      *(void **)((char *)v57 + v68) = v69;
      v70 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v60 + 56);
      v71 = v69;
      v70(v57, 0, 1, v59);
    }
    v72 = v48[9];
    v73 = (char *)v93 + v72;
    v74 = (char *)v92 + v72;
    v75 = *(void **)((char *)v92 + v72);
    *(_QWORD *)((char *)v93 + v72) = v75;
    v76 = type metadata accessor for MetricFormattingHelper(0);
    v77 = *(int *)(v76 + 20);
    v78 = &v73[v77];
    v79 = &v74[v77];
    v80 = type metadata accessor for AttributedString(0);
    v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
    v82 = v75;
    v81(v78, v79, v80);
    v83 = *(int *)(v76 + 24);
    v84 = *(void **)&v74[v83];
    *(_QWORD *)&v73[v83] = v84;
    v85 = v84;
  }
  return v13;
}

void sub_100529D34(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  char *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  _QWORD *v31;
  id *v32;
  uint64_t v33;
  id *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (int *)type metadata accessor for MetricCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[v8[5]], *(_QWORD *)&v6[v8[5] + 8], v6[v8[5] + 16]);
  v9 = &v6[v8[9]];

  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)v9 + 2), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)v9 + 3), v17, v18, v19, v20, v21, v22, v23);
  v24 = type metadata accessor for MetricDetailViewModel(0);
  v25 = &v9[*(int *)(v24 + 36)];
  v26 = type metadata accessor for DateInterval(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
  v28 = &v9[*(int *)(v24 + 44)];
  v29 = type metadata accessor for Date(0);
  v30 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);

  v31 = (_QWORD *)((char *)a1 + a2[7]);
  if (v31[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
  v32 = (id *)((char *)a1 + a2[8]);
  v33 = type metadata accessor for MetricChartData(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
  {

    v30((char *)v32 + *(int *)(v33 + 20), v29);
  }
  v34 = (id *)((char *)a1 + a2[9]);

  v35 = type metadata accessor for MetricFormattingHelper(0);
  v36 = (char *)v34 + *(int *)(v35 + 20);
  v37 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);

}

_QWORD *sub_100529F58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  void **v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  char *v64;
  uint64_t v65;
  void *v66;
  void (*v67)(void **, _QWORD, uint64_t, uint64_t);
  id v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v84;
  unsigned int (*v85)(char *, uint64_t, uint64_t, __n128);
  char *v86;
  char *__dst;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  int *v91;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v90 = a1;
  v91 = a3;
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v89 = a2;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = (int *)type metadata accessor for MetricCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v23 = v16[9];
  v86 = v13;
  v24 = &v13[v23];
  v25 = &v14[v23];
  v27 = *(void **)&v14[v23];
  v26 = *(void **)&v14[v23 + 8];
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  v29 = *(_QWORD *)&v14[v23 + 16];
  v28 = *(_QWORD *)&v14[v23 + 24];
  *((_QWORD *)v24 + 2) = v29;
  *((_QWORD *)v24 + 3) = v28;
  *((_QWORD *)v24 + 4) = *(_QWORD *)&v14[v23 + 32];
  v24[40] = v14[v23 + 40];
  v30 = type metadata accessor for MetricDetailViewModel(0);
  v31 = *(int *)(v30 + 36);
  __dst = &v24[v31];
  v88 = v30;
  v32 = &v25[v31];
  v33 = type metadata accessor for DateInterval(0);
  v84 = *(_QWORD *)(v33 - 8);
  v85 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v84 + 48);
  v34 = v27;
  v35 = v26;
  swift_bridgeObjectRetain(v29);
  v36 = swift_bridgeObjectRetain(v28);
  if (v85(v32, 1, v33, v36))
  {
    v37 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(__dst, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v33);
  }
  v24[*(int *)(v88 + 40)] = v25[*(int *)(v88 + 40)];
  v38 = *(int *)(v88 + 44);
  v39 = &v24[v38];
  v40 = &v25[v38];
  v41 = type metadata accessor for Date(0);
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
  v42(v39, v40, v41);
  v86[v16[10]] = v14[v16[10]];
  v43 = v16[11];
  v44 = *(void **)&v14[v43];
  *(_QWORD *)&v86[v43] = v44;
  v45 = v91;
  v46 = v91[7];
  *((_BYTE *)v90 + v91[6]) = *((_BYTE *)v89 + v91[6]);
  v47 = (char *)v90 + v46;
  v48 = (char *)v89 + v46;
  v49 = *(_QWORD *)((char *)v89 + v46 + 24);
  v50 = v44;
  if (v49)
  {
    v51 = *((_QWORD *)v48 + 4);
    *((_QWORD *)v47 + 3) = v49;
    *((_QWORD *)v47 + 4) = v51;
    (**(void (***)(char *, char *, uint64_t))(v49 - 8))(v47, v48, v49);
  }
  else
  {
    v52 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v52;
    *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
  }
  v53 = v91[8];
  v54 = (void **)((char *)v90 + v53);
  v55 = (void **)((char *)v89 + v53);
  v56 = type metadata accessor for MetricChartData(0);
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    v58 = sub_100047110(&qword_10081F090);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = *v55;
    *v54 = *v55;
    v60 = *(int *)(v56 + 20);
    v61 = (char *)v54 + v60;
    v62 = (char *)v55 + v60;
    v63 = v59;
    v64 = v61;
    v45 = v91;
    v42(v64, v62, v41);
    v65 = *(int *)(v56 + 24);
    v66 = *(void **)((char *)v55 + v65);
    *(void **)((char *)v54 + v65) = v66;
    v67 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v57 + 56);
    v68 = v66;
    v67(v54, 0, 1, v56);
  }
  v69 = v45[9];
  v70 = (char *)v90 + v69;
  v71 = (char *)v89 + v69;
  v72 = *(void **)((char *)v89 + v69);
  *(_QWORD *)((char *)v90 + v69) = v72;
  v73 = type metadata accessor for MetricFormattingHelper(0);
  v74 = *(int *)(v73 + 20);
  v75 = &v70[v74];
  v76 = &v71[v74];
  v77 = type metadata accessor for AttributedString(0);
  v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
  v79 = v72;
  v78(v75, v76, v77);
  v80 = *(int *)(v73 + 24);
  v81 = *(void **)&v71[v80];
  *(_QWORD *)&v70[v80] = v81;
  v82 = v81;
  return v90;
}

_QWORD *sub_10052A360(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  void **v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void **, uint64_t, uint64_t);
  int v84;
  int v85;
  void *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  id v91;
  uint64_t v92;
  void *v93;
  void (*v94)(void **, _QWORD, uint64_t, uint64_t);
  id v95;
  uint64_t v96;
  uint64_t v97;
  void **v98;
  char *v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  void *v113;
  void *v114;
  id v115;
  uint64_t v116;
  void *v117;
  void *v118;
  id v119;
  int *v120;
  int *v121;
  _QWORD *v122;
  int *v123;
  _QWORD *v124;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v122 = a1;
  v123 = a3;
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v124 = a2;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = (int *)type metadata accessor for MetricCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  v23 = *(_QWORD *)v18;
  v24 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v25 = v18[16];
  v18[16] = v22;
  sub_1000EB41C(v23, v24, v25);
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v120 = v16;
  v26 = v16[9];
  v27 = &v13[v26];
  v28 = &v14[v26];
  v29 = *(void **)&v14[v26];
  v30 = *(void **)v27;
  *(_QWORD *)v27 = v29;
  v31 = v29;

  v32 = (void *)*((_QWORD *)v28 + 1);
  v33 = (void *)*((_QWORD *)v27 + 1);
  *((_QWORD *)v27 + 1) = v32;
  v34 = v32;

  v35 = *((_QWORD *)v28 + 2);
  v36 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v27 + 2);
  *((_QWORD *)v27 + 2) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
  v44 = *((_QWORD *)v28 + 3);
  v45 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v27 + 3);
  *((_QWORD *)v27 + 3) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
  v53 = *((_QWORD *)v28 + 4);
  v27[40] = v28[40];
  *((_QWORD *)v27 + 4) = v53;
  v121 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v54 = v121[9];
  v55 = &v27[v54];
  v56 = &v28[v54];
  v57 = type metadata accessor for DateInterval(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  LODWORD(v33) = v59(v55, 1, v57);
  v60 = v59(v56, 1, v57);
  if ((_DWORD)v33)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
LABEL_11:
    v61 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v55, v56, v57);
LABEL_12:
  v27[v121[10]] = v28[v121[10]];
  v62 = v121[11];
  v63 = &v27[v62];
  v64 = &v28[v62];
  v65 = type metadata accessor for Date(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(void (**)(char *, char *, uint64_t))(v66 + 24);
  v67(v63, v64, v65);
  v13[v120[10]] = v14[v120[10]];
  v68 = v120[11];
  v69 = *(void **)&v14[v68];
  v70 = *(void **)&v13[v68];
  *(_QWORD *)&v13[v68] = v69;
  v71 = v69;

  *((_BYTE *)v122 + v123[6]) = *((_BYTE *)v124 + v123[6]);
  v72 = v123[7];
  v73 = (char *)v122 + v72;
  v74 = (char *)v124 + v72;
  v75 = *(_QWORD *)((char *)v124 + v72 + 24);
  if (*(_QWORD *)((char *)v122 + v72 + 24))
  {
    if (v75)
    {
      sub_1000F1A58(v73, v74);
      goto LABEL_19;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v73);
  }
  else if (v75)
  {
    *((_QWORD *)v73 + 3) = v75;
    *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
    (**(void (***)(char *, char *))(v75 - 8))(v73, v74);
    goto LABEL_19;
  }
  v76 = *(_OWORD *)v74;
  v77 = *((_OWORD *)v74 + 1);
  *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
  *(_OWORD *)v73 = v76;
  *((_OWORD *)v73 + 1) = v77;
LABEL_19:
  v78 = v123[8];
  v79 = (void **)((char *)v122 + v78);
  v80 = (void **)((char *)v124 + v78);
  v81 = type metadata accessor for MetricChartData(0);
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v82 + 48);
  v84 = v83(v79, 1, v81);
  v85 = v83(v80, 1, v81);
  if (!v84)
  {
    if (!v85)
    {
      v113 = *v80;
      v114 = *v79;
      *v79 = *v80;
      v115 = v113;

      v67((char *)v79 + *(int *)(v81 + 20), (char *)v80 + *(int *)(v81 + 20), v65);
      v116 = *(int *)(v81 + 24);
      v117 = *(void **)((char *)v80 + v116);
      v118 = *(void **)((char *)v79 + v116);
      *(void **)((char *)v79 + v116) = v117;
      v119 = v117;

      goto LABEL_25;
    }
    sub_100011F54((uint64_t)v79, type metadata accessor for MetricChartData);
    goto LABEL_24;
  }
  if (v85)
  {
LABEL_24:
    v96 = sub_100047110(&qword_10081F090);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_25;
  }
  v86 = *v80;
  *v79 = *v80;
  v87 = *(int *)(v81 + 20);
  v88 = (char *)v79 + v87;
  v89 = (char *)v80 + v87;
  v90 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v91 = v86;
  v90(v88, v89, v65);
  v92 = *(int *)(v81 + 24);
  v93 = *(void **)((char *)v80 + v92);
  *(void **)((char *)v79 + v92) = v93;
  v94 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v82 + 56);
  v95 = v93;
  v94(v79, 0, 1, v81);
LABEL_25:
  v97 = v123[9];
  v98 = (void **)((char *)v122 + v97);
  v99 = (char *)v124 + v97;
  v100 = *(void **)((char *)v124 + v97);
  v101 = *v98;
  *v98 = v100;
  v102 = v100;

  v103 = type metadata accessor for MetricFormattingHelper(0);
  v104 = *(int *)(v103 + 20);
  v105 = (char *)v98 + v104;
  v106 = &v99[v104];
  v107 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v105, v106, v107);
  v108 = *(int *)(v103 + 24);
  v109 = *(void **)&v99[v108];
  v110 = *(void **)((char *)v98 + v108);
  *(void **)((char *)v98 + v108) = v109;
  v111 = v109;

  return v122;
}

char *sub_10052A89C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v51;
  char *v52;
  char *v53;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v51 = a3;
  v52 = a2;
  v8 = a3[5];
  v53 = a1;
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = (int *)type metadata accessor for MetricCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v16 = v12[9];
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = *(_OWORD *)&v10[v16 + 16];
  *(_OWORD *)v17 = *(_OWORD *)&v10[v16];
  *((_OWORD *)v17 + 1) = v19;
  v17[40] = v10[v16 + 40];
  *((_QWORD *)v17 + 4) = *(_QWORD *)&v10[v16 + 32];
  v20 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v21 = v20[9];
  v22 = &v17[v21];
  v23 = &v18[v21];
  v24 = type metadata accessor for DateInterval(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v17[v20[10]] = v18[v20[10]];
  v27 = v20[11];
  v28 = &v17[v27];
  v29 = &v18[v27];
  v30 = type metadata accessor for Date(0);
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
  v31(v28, v29, v30);
  v9[v12[10]] = v10[v12[10]];
  *(_QWORD *)&v9[v12[11]] = *(_QWORD *)&v10[v12[11]];
  v32 = v51[7];
  v53[v51[6]] = v52[v51[6]];
  v33 = &v53[v32];
  v34 = &v52[v32];
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v36 = v51[8];
  v37 = &v53[v36];
  v38 = &v52[v36];
  v39 = type metadata accessor for MetricChartData(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100047110(&qword_10081F090);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v31(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v30);
    *(_QWORD *)&v37[*(int *)(v39 + 24)] = *(_QWORD *)&v38[*(int *)(v39 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = v51[9];
  v43 = &v53[v42];
  v44 = &v52[v42];
  *(_QWORD *)&v53[v42] = *(_QWORD *)&v52[v42];
  v45 = type metadata accessor for MetricFormattingHelper(0);
  v46 = *(int *)(v45 + 20);
  v47 = &v43[v46];
  v48 = &v44[v46];
  v49 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
  *(_QWORD *)&v43[*(int *)(v45 + 24)] = *(_QWORD *)&v44[*(int *)(v45 + 24)];
  return v53;
}

char *sub_10052ABFC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void *v23;
  void *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  size_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void **v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void **, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v83;
  uint64_t v84;
  void *v85;
  char *v86;
  int *v87;
  char *v88;
  int *v89;
  char *v90;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v88 = a1;
  v89 = a3;
  v8 = a3[5];
  v9 = &a1[v8];
  v90 = a2;
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = (int *)type metadata accessor for MetricCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v19 = v14[16];
  v14[16] = v16;
  sub_1000EB41C(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v20 = v12[9];
  v21 = &v9[v20];
  v22 = &v10[v20];
  v23 = *(void **)&v9[v20];
  *(_QWORD *)&v9[v20] = *(_QWORD *)&v10[v20];

  v24 = (void *)*((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);

  v25 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v21 + 2);
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v21 + 3);
  *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
  swift_bridgeObjectRelease(v33, v34, v35, v36, v37, v38, v39, v40);
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  v21[40] = v22[40];
  v87 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v41 = v87[9];
  v42 = &v21[v41];
  v43 = &v22[v41];
  v44 = type metadata accessor for DateInterval(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v86 = v42;
  LODWORD(v42) = v46(v42, 1, v44);
  v47 = v46(v43, 1, v44);
  if ((_DWORD)v42)
  {
    if (v47)
    {
      v48 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100827440) - 8) + 64);
      v49 = v86;
LABEL_10:
      memcpy(v49, v43, v48);
      goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v86, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v86, 0, 1, v44);
  }
  else
  {
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v86, v44);
      v48 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100827440) - 8) + 64);
      v49 = v86;
      goto LABEL_10;
    }
    (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v86, v43, v44);
  }
LABEL_13:
  v21[v87[10]] = v22[v87[10]];
  v50 = v87[11];
  v51 = &v21[v50];
  v52 = &v22[v50];
  v53 = type metadata accessor for Date(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(void (**)(char *, char *, uint64_t))(v54 + 40);
  v55(v51, v52, v53);
  v9[v12[10]] = v10[v12[10]];
  v56 = v12[11];
  v57 = *(void **)&v9[v56];
  *(_QWORD *)&v9[v56] = *(_QWORD *)&v10[v56];

  v58 = v89[7];
  v88[v89[6]] = v90[v89[6]];
  v59 = &v88[v58];
  v60 = &v90[v58];
  if (*(_QWORD *)&v88[v58 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v88[v58]);
  v61 = *((_OWORD *)v60 + 1);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v61;
  *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
  v62 = v89[8];
  v63 = (void **)&v88[v62];
  v64 = (void **)&v90[v62];
  v65 = type metadata accessor for MetricChartData(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      v83 = *v63;
      *v63 = *v64;

      v55((char *)v63 + *(int *)(v65 + 20), (char *)v64 + *(int *)(v65 + 20), v53);
      v84 = *(int *)(v65 + 24);
      v85 = *(void **)((char *)v63 + v84);
      *(void **)((char *)v63 + v84) = *(void **)((char *)v64 + v84);

      goto LABEL_21;
    }
    sub_100011F54((uint64_t)v63, type metadata accessor for MetricChartData);
    goto LABEL_20;
  }
  if (v69)
  {
LABEL_20:
    v70 = sub_100047110(&qword_10081F090);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_21;
  }
  *v63 = *v64;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))((char *)v63 + *(int *)(v65 + 20), (char *)v64 + *(int *)(v65 + 20), v53);
  *(void **)((char *)v63 + *(int *)(v65 + 24)) = *(void **)((char *)v64 + *(int *)(v65 + 24));
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_21:
  v71 = v89[9];
  v72 = &v88[v71];
  v73 = &v90[v71];
  v74 = *(void **)&v88[v71];
  *(_QWORD *)&v88[v71] = *(_QWORD *)&v90[v71];

  v75 = type metadata accessor for MetricFormattingHelper(0);
  v76 = *(int *)(v75 + 20);
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = *(int *)(v75 + 24);
  v81 = *(void **)&v72[v80];
  *(_QWORD *)&v72[v80] = *(_QWORD *)&v73[v80];

  return v88;
}

uint64_t sub_10052B0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10052B0C8);
}

uint64_t sub_10052B0C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = type metadata accessor for MetricCard(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v15 = sub_100047110(&qword_10081F090);
    v10 = *(_QWORD *)(v15 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v15;
      v12 = a3[8];
    }
    else
    {
      v11 = type metadata accessor for MetricFormattingHelper(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_10052B1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10052B1DC);
}

uint64_t sub_10052B1DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = type metadata accessor for MetricCard(0);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[7] + 24) = a2;
        return result;
      }
      v16 = sub_100047110(&qword_10081F090);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for MetricFormattingHelper(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[9];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10052B2D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  sub_1000087BC(319, (unint64_t *)&qword_10081F4B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for MetricCard(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v10[2] = &unk_100643DD0;
      v10[3] = &unk_100643DE8;
      sub_1000087BC(319, (unint64_t *)&unk_100839390, type metadata accessor for MetricChartData, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for MetricFormattingHelper(319);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_10052B3D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BAAD4, 1);
}

uint64_t sub_10052B3E4(uint64_t a1)
{
  return sub_10052B40C(a1, (unsigned int *)&enum case for Font.TextStyle.title(_:), &qword_100839318);
}

uint64_t sub_10052B3F8(uint64_t a1)
{
  return sub_10052B40C(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), &qword_100839320);
}

uint64_t sub_10052B40C(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v5 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, *a2, v8, v10);
  v13 = enum case for Font.Design.rounded(_:);
  v14 = type metadata accessor for Font.Design(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 104))(v7, v13, v14);
  v16 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  v17 = static Font.Weight.medium.getter(v16);
  v18 = static Font.system(_:design:weight:)(v12, v7, *(_QWORD *)&v17, 0);
  sub_10001BE90((uint64_t)v7, &qword_10081F2F8);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  *a3 = v18;
  return result;
}

uint64_t sub_10052B55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100832E30);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100832E38);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v11);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v12 = sub_100047110(&qword_1008393D0);
  sub_10052B714(v0, (uint64_t)&v7[*(int *)(v12 + 44)]);
  v14 = static Alignment.center.getter(v13);
  sub_1003ED154(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v14, v15);
  v16 = sub_10001BE90((uint64_t)v7, &qword_100832E30);
  static AccessibilityChildBehavior.combine.getter(v16);
  v17 = sub_10052C8D0();
  View.accessibilityElement(children:)(v4, v8, v17);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10001BE90((uint64_t)v10, &qword_100832E38);
}

void sub_10052B714(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char v31;
  double v32;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  void **v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  void (*v116)(char *, _QWORD, uint64_t);
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t KeyPath;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  _QWORD v136[3];

  v4 = sub_100047110(&qword_1008393E8);
  __chkstk_darwin(v4);
  v123 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100047110(&qword_1008393F0);
  __chkstk_darwin(v122);
  v132 = (uint64_t)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v121 = (uint64_t)&v111 - v8;
  __chkstk_darwin(v9);
  v129 = (uint64_t)&v111 - v10;
  v11 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v11);
  v125 = (uint64_t)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = type metadata accessor for Font.Leading(0);
  v128 = *(_QWORD *)(KeyPath - 8);
  __chkstk_darwin(KeyPath);
  v127 = (uint64_t)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DynamicTypeSize(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v111 - v19;
  v136[0] = sub_10052BFA8();
  v136[1] = v21;
  v22 = sub_100038CA0();
  v131 = Text.init<A>(_:)(v136, &type metadata for String, v22);
  v134 = v23;
  v120 = v24;
  v135 = v25;
  sub_1003F6E18((uint64_t)v20);
  v26 = enum case for DynamicTypeSize.large(_:);
  v27 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v27(v17, enum case for DynamicTypeSize.large(_:), v14);
  v28 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v118 = dispatch thunk of static Comparable.< infix(_:_:)(v17, v20, v14);
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v17, v14);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v20, v14);
  v119 = static Edge.Set.bottom.getter(v30);
  sub_1003F6E18((uint64_t)v20);
  v117 = v26;
  v116 = v27;
  v27(v17, v26, v14);
  v115 = v28;
  v31 = dispatch thunk of static Comparable.< infix(_:_:)(v17, v20, v14);
  v29(v17, v14);
  v29(v20, v14);
  v32 = 0.0;
  if ((v31 & 1) != 0)
    v32 = -2.0;
  v33.n128_f64[0] = EdgeInsets.init(_all:)(v32);
  v34 = v33.n128_u64[0];
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = static Font.footnote.getter(v33);
  v43 = v127;
  v42 = v128;
  v44 = KeyPath;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v128 + 104))(v127, enum case for Font.Leading.tight(_:), KeyPath);
  v133 = Font.leading(_:)(v43, v41);
  v45 = swift_release(v41);
  (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v43, v44, v45);
  KeyPath = swift_getKeyPath(&unk_100643E50);
  v46 = (int *)type metadata accessor for MetricCardView(0);
  v128 = a1 + v46[9];
  v47 = v46[5];
  v48 = *(unsigned __int8 *)(a1 + v46[6]);
  v124 = a1;
  v49 = a1 + v47;
  v111 = type metadata accessor for MetricCard(0);
  v50 = *(int *)(v111 + 36);
  v113 = v49;
  v51 = v49 + v50;
  v127 = *(_QWORD *)(v51 + 32);
  v52 = (void **)v51;
  LODWORD(v126) = *(unsigned __int8 *)(v51 + 40);
  if (qword_10081DFC8 != -1)
    swift_once(&qword_10081DFC8, sub_10052B3E4);
  v53 = qword_100839318;
  sub_1005F0EBC(v48);
  v55 = Color.init(uiColor:)(v54);
  v56 = v125;
  v112 = v52;
  sub_1004436E4(v48, v52, v127, v126, v53, v55, v125);
  swift_release(v55);
  v57 = Text.init(_:)(v56);
  v126 = v58;
  v127 = v57;
  v114 = v59;
  v128 = v60;
  v61 = v124;
  sub_1003F6E18((uint64_t)v20);
  v116(v17, v117, v14);
  LODWORD(v116) = dispatch thunk of static Comparable.< infix(_:_:)(v17, v20, v14);
  v29(v17, v14);
  v62 = ((uint64_t (*)(char *, uint64_t))v29)(v20, v14);
  v117 = static Edge.Set.all.getter(v62);
  v63 = v123;
  sub_10052C204(v61, v123);
  v64 = v113 + *(int *)(v111 + 20);
  v65 = *(_QWORD *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  LOBYTE(v56) = *(_BYTE *)(v64 + 16);
  sub_1003F6E18((uint64_t)v20);
  v67 = sub_10054FD90((uint64_t)v20, v65, v66, v56);
  v29(v20, v14);
  v68 = v121;
  sub_100021CC0(v63, v121, &qword_1008393E8);
  v69 = v68 + *(int *)(v122 + 36);
  *(_BYTE *)v69 = v67 == 2;
  *(_QWORD *)(v69 + 8) = 0x404B800000000000;
  *(_BYTE *)(v69 + 16) = 0;
  sub_10001BE90(v63, &qword_1008393E8);
  v70 = v129;
  sub_100045AD4(v68, v129, &qword_1008393F0);
  if (*((_BYTE *)v112 + 40) == 1 && v112[4] == (void *)1)
  {
    v71 = v125;
    sub_10052C718(v125);
    v124 = Text.init(_:)(v71);
    v125 = v72;
    v123 = v73;
    v75 = v74 & 1;
    v76 = static Edge.Set.all.getter(v124);
    v122 = 0x4000000000000000;
  }
  else
  {
    v124 = 0;
    v125 = 0;
    v75 = 0;
    v123 = 0;
    v76 = 0;
    v122 = 0;
  }
  v77 = v114 & 1;
  LODWORD(v121) = v114 & 1;
  v78 = v120 & 1;
  if ((v116 & 1) != 0)
    v79 = 0x4010000000000000;
  else
    v79 = 0x4020000000000000;
  if ((v118 & 1) != 0)
    v80 = -2.0;
  else
    v80 = 0.0;
  LOBYTE(v136[0]) = v120 & 1;
  v81 = v132;
  sub_100021CC0(v70, v132, &qword_1008393F0);
  v83 = KeyPath;
  v82 = v131;
  v84 = v134;
  *(_QWORD *)a2 = v131;
  *(_QWORD *)(a2 + 8) = v84;
  *(_BYTE *)(a2 + 16) = v78;
  *(_QWORD *)(a2 + 24) = v135;
  *(_QWORD *)(a2 + 32) = 0;
  *(double *)(a2 + 40) = v80;
  *(_BYTE *)(a2 + 48) = v119;
  *(_QWORD *)(a2 + 56) = v34;
  *(_QWORD *)(a2 + 64) = v36;
  *(_QWORD *)(a2 + 72) = v38;
  *(_QWORD *)(a2 + 80) = v40;
  *(_BYTE *)(a2 + 88) = 0;
  v85 = v133;
  *(_QWORD *)(a2 + 96) = v83;
  *(_QWORD *)(a2 + 104) = v85;
  v86 = v126;
  *(_QWORD *)(a2 + 112) = v127;
  *(_QWORD *)(a2 + 120) = v86;
  *(_BYTE *)(a2 + 128) = v77;
  *(_QWORD *)(a2 + 136) = v128;
  *(_BYTE *)(a2 + 144) = v117;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0;
  *(_QWORD *)(a2 + 168) = v79;
  *(_QWORD *)(a2 + 176) = 0;
  *(_BYTE *)(a2 + 184) = 0;
  v87 = sub_100047110(&qword_1008393F8);
  sub_100021CC0(v81, a2 + *(int *)(v87 + 64), &qword_1008393F0);
  v88 = a2 + *(int *)(v87 + 80);
  v90 = v124;
  v89 = v125;
  *(_QWORD *)v88 = v124;
  *(_QWORD *)(v88 + 8) = v89;
  v91 = v123;
  *(_QWORD *)(v88 + 16) = v75;
  *(_QWORD *)(v88 + 24) = v91;
  v92 = v122;
  *(_QWORD *)(v88 + 32) = v76;
  *(_QWORD *)(v88 + 40) = v92;
  *(_QWORD *)(v88 + 56) = 0;
  *(_QWORD *)(v88 + 64) = 0;
  *(_QWORD *)(v88 + 48) = 0;
  *(_BYTE *)(v88 + 72) = 0;
  sub_1000E439C(v82, v134, v78);
  swift_bridgeObjectRetain(v135);
  swift_retain(v83);
  swift_retain(v133);
  v93 = v126;
  v94 = v127;
  v95 = v121;
  sub_1000E439C(v127, v126, v121);
  v96 = (CHWorkoutDetailHeartRateTableViewCell *)v128;
  swift_bridgeObjectRetain(v128);
  sub_100182758(v90, v89, v75, v91);
  sub_10001BE90(v129, &qword_1008393F0);
  sub_100182728(v90, v89, v75, v91);
  sub_10001BE90(v132, &qword_1008393F0);
  sub_1000E4458(v94, v93, v95);
  swift_bridgeObjectRelease(v96, v97, v98, v99, v100, v101, v102, v103);
  sub_1000E4458(v131, v134, v136[0]);
  swift_release(v133);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v135, v104, v105, v106, v107, v108, v109, v110);
}

uint64_t sub_10052BFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Swift::String v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  NSString v45;
  CHWorkoutDetailHeartRateTableViewCell *v46[2];

  v1 = type metadata accessor for MetricCardView(0);
  v2 = v0 + *(int *)(v1 + 20);
  v3 = v2 + *(int *)(type metadata accessor for MetricCard(0) + 36);
  v4 = *(unsigned __int8 *)(v3 + 40);
  if (v4 == 1 && !*(_QWORD *)(v3 + 32))
  {
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v45 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v45, 0, 0);

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  }
  else
  {
    v5 = 0x4C41544F54;
    v6 = *(_BYTE *)(v0 + *(int *)(v1 + 24));
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
    if (((1 << v6) & 0x5DDBB8E070) == 0 && (((1 << v6) & 0x2224471F80) != 0 || (v4 & 1) == 0))
    {
      v7 = (CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000;
      v5 = 0x45474152455641;
    }
    HIDWORD(v46[1]) = -335544320;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v8, v9, v10, v11, v12, v13, v14);
    strcpy((char *)v46, "METRIC_CARD_");
    v15._countAndFlagsBits = v5;
    v15._object = v7;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v7, v16, v17, v18, v19, v20, v21, v22);
    v23._countAndFlagsBits = 95;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    v24._countAndFlagsBits = sub_1005F0860(v6);
    object = (CHWorkoutDetailHeartRateTableViewCell *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object, v26, v27, v28, v29, v30, v31, v32);
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v46[0]);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    swift_bridgeObjectRelease(v46[1], v37, v38, v39, v40, v41, v42, v43);
  }

  return v36;
}

uint64_t sub_10052C204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];

  v67 = a2;
  v3 = (int *)type metadata accessor for MetricCardLineChartView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100047110(&qword_100839400);
  __chkstk_darwin(v66);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  v64 = sub_100047110(&qword_100839408);
  __chkstk_darwin(v64);
  v65 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  __chkstk_darwin(v12);
  v59 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MetricFormattingHelper(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for MetricCardBarChartView(0);
  __chkstk_darwin(v58);
  v18 = (uint64_t *)((char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_100047110(&qword_100839410);
  __chkstk_darwin(v63);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v60 = (uint64_t)&v57 - v22;
  v23 = type metadata accessor for MetricCardView(0);
  v24 = v23;
  v25 = *(unsigned __int8 *)(a1 + *(int *)(v23 + 24));
  if (v25 <= 0x11 && ((1 << v25) & 0x21D00) != 0)
  {
    v26 = a1 + *(int *)(v23 + 20);
    v27 = v26 + *(int *)(type metadata accessor for MetricCard(0) + 36);
    v28 = *(_QWORD *)(v27 + 16);
    swift_bridgeObjectRetain(v28);
    sub_1005F0EBC(v25);
    v30 = Color.init(uiColor:)(v29);
    sub_10004F8C8(a1 + *(int *)(v24 + 36), (uint64_t)&v5[v3[7]], type metadata accessor for MetricFormattingHelper);
    v31 = *(_QWORD *)(v27 + 32);
    v32 = *(_BYTE *)(v27 + 40);
    v33 = type metadata accessor for MetricDetailViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(&v5[v3[9]], v27 + *(int *)(v33 + 44), v62);
    *v5 = v25;
    *((_QWORD *)v5 + 1) = v28;
    *((_QWORD *)v5 + 2) = v30;
    v34 = &v5[v3[8]];
    *(_QWORD *)v34 = v31;
    v34[8] = v32;
    v35 = sub_1000083D8(&qword_100839430, type metadata accessor for MetricCardLineChartView, (uint64_t)&unk_100637398);
    View.accessibilityHidden(_:)(1, v3, v35);
    sub_100011F54((uint64_t)v5, type metadata accessor for MetricCardLineChartView);
    sub_100045AD4((uint64_t)v7, (uint64_t)v10, &qword_100839400);
    v36 = v65;
    sub_100021CC0((uint64_t)v10, v65, &qword_100839400);
    swift_storeEnumTagMultiPayload(v36, v64, 1);
    v37 = sub_10052C990();
    v38 = sub_10052CA2C();
    _ConditionalContent<>.init(storage:)(v36, v63, v66, v37, v38);
    v39 = (uint64_t)v10;
    v40 = &qword_100839400;
  }
  else
  {
    v42 = a1 + *(int *)(v23 + 20);
    v43 = type metadata accessor for MetricCard(0);
    v44 = v42 + *(int *)(v43 + 36);
    v45 = *(_QWORD *)(v44 + 16);
    swift_bridgeObjectRetain(v45);
    sub_1005F0EBC(v25);
    v57 = Color.init(uiColor:)(v46);
    sub_10004F8C8(a1 + *(int *)(v24 + 36), (uint64_t)v16, type metadata accessor for MetricFormattingHelper);
    v47 = *(_QWORD *)(v44 + 32);
    v48 = *(_BYTE *)(v44 + 40);
    v68[3] = v43;
    v68[4] = &off_1007A7580;
    v49 = sub_10004C480(v68);
    sub_10004F8C8(v42, (uint64_t)v49, type metadata accessor for MetricCard);
    v50 = type metadata accessor for MetricDetailViewModel(0);
    v51 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v44 + *(int *)(v50 + 44), v62);
    sub_1001CA080(v25, v45, v57, (uint64_t)v16, v47, v48, v68, v51, v18);
    v52 = sub_1000083D8(&qword_100839418, type metadata accessor for MetricCardBarChartView, (uint64_t)&unk_10062BB80);
    View.accessibilityHidden(_:)(1, v58, v52);
    sub_100011F54((uint64_t)v18, type metadata accessor for MetricCardBarChartView);
    v53 = v60;
    sub_100045AD4((uint64_t)v20, v60, &qword_100839410);
    v54 = v65;
    sub_100021CC0(v53, v65, &qword_100839410);
    swift_storeEnumTagMultiPayload(v54, v64, 0);
    v55 = sub_10052C990();
    v56 = sub_10052CA2C();
    _ConditionalContent<>.init(storage:)(v54, v63, v66, v55, v56);
    v39 = v53;
    v40 = &qword_100839410;
  }
  return sub_10001BE90(v39, v40);
}

uint64_t sub_10052C718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100047110(&qword_10081F090);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MetricFormattingHelper(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for MetricCardView(0);
  sub_10004F8C8(v1 + v9[9], (uint64_t)v8, type metadata accessor for MetricFormattingHelper);
  sub_100021CC0(v1 + v9[8], (uint64_t)v5, &qword_10081F090);
  v10 = type metadata accessor for MetricChartData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_10001BE90((uint64_t)v5, &qword_10081F090);
    v11 = 0;
  }
  else
  {
    v11 = *(id *)&v5[*(int *)(v10 + 24)];
    sub_100011F54((uint64_t)v5, type metadata accessor for MetricChartData);
  }
  v12 = *(unsigned __int8 *)(v1 + v9[6]);
  if (qword_10081DFD0 != -1)
    swift_once(&qword_10081DFD0, sub_10052B3F8);
  sub_100443F58(v11, v12, qword_100839320, 0, 1, 0, a1);

  return sub_100011F54((uint64_t)v8, type metadata accessor for MetricFormattingHelper);
}

unint64_t sub_10052C8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008393D8;
  if (!qword_1008393D8)
  {
    v1 = sub_100007050(&qword_100832E38);
    sub_10052C93C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008393D8);
  }
  return result;
}

unint64_t sub_10052C93C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008393E0;
  if (!qword_1008393E0)
  {
    v1 = sub_100007050(&qword_100832E30);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008393E0);
  }
  return result;
}

unint64_t sub_10052C990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839420;
  if (!qword_100839420)
  {
    v1 = sub_100007050(&qword_100839410);
    sub_1000083D8(&qword_100839418, type metadata accessor for MetricCardBarChartView, (uint64_t)&unk_10062BB80);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839420);
  }
  return result;
}

unint64_t sub_10052CA2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839428;
  if (!qword_100839428)
  {
    v1 = sub_100007050(&qword_100839400);
    sub_1000083D8(&qword_100839430, type metadata accessor for MetricCardLineChartView, (uint64_t)&unk_100637398);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839428);
  }
  return result;
}

uint64_t sub_10052CAC8()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100832E38);
  v1[1] = sub_10052C8D0();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t sub_10052CB14(char *a1, char *a2)
{
  return sub_10038F850(*a1, *a2);
}

Swift::Int sub_10052CB20()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x77654E7374616857;
  else
    v2 = 0x6F72746E49;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10052CB9C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x77654E7374616857;
  else
    v2 = 0x6F72746E49;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10052CBF4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x77654E7374616857;
  else
    v3 = 0x6F72746E49;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE500000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10052CC6C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100783310, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_10052CCC8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6F72746E49;
  if (*v1)
    v2 = 0x77654E7374616857;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_10052CD04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell **heartRateController;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  NSString v34;
  id v35;
  NSString v36;
  NSString v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  const char *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  id v67;
  NSString v68;
  id v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  NSString v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  char *v90;
  id v91;
  objc_super v92;

  v1 = v0;
  v2 = sub_100047110(&qword_10081F6D0);
  __chkstk_darwin(v2);
  v89 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v90 = (char *)&v88 - v6;
  v7 = type metadata accessor for PrivacyIdentifier(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for DiscoverySheetViewController(0);
  v92.receiver = v1;
  v92.super_class = v11;
  objc_msgSendSuper2(&v92, "viewDidLoad");
  v12 = objc_msgSend(v1, "buttonTray");
  v13 = sub_100047110(&qword_100820020);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100622F90;
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for PrivacyIdentifier.fitnessPlus(_:), v7);
  v16 = PrivacyIdentifier.rawValue.getter(v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v14, v20, v21, v22, v23, v24, v25, v26);
  objc_msgSend(v12, "setPrivacyLinkForBundles:", isa);

  v27 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_dataModel
                                                     + 24];
  v28 = *(_QWORD *)v27->cellPadding;
  if (v28)
  {
    v91 = (id)objc_opt_self(UIImage);
    swift_bridgeObjectRetain(v27);
    v88 = v27;
    heartRateController = (CHWorkoutDetailHeartRateTableViewCell **)v27[2].heartRateController;
    do
    {
      v30 = *(heartRateController - 4);
      v31 = *(heartRateController - 2);
      v32 = v1;
      v33 = *heartRateController;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v33);
      v34 = String._bridgeToObjectiveC()();
      v35 = objc_msgSend(v91, "smm_systemImageNamed:", v34);

      v1 = v32;
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33, v38, v39, v40, v41, v42, v43, v44);
      swift_bridgeObjectRelease(v31, v45, v46, v47, v48, v49, v50, v51);
      swift_bridgeObjectRelease(v30, v52, v53, v54, v55, v56, v57, v58);
      objc_msgSend(v32, "addBulletedListItemWithTitle:description:image:", v36, v37, v35);

      heartRateController += 6;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease(v88, v59, v60, v61, v62, v63, v64, v65);
  }
  v66 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  objc_msgSend(v66, "addTarget:action:forControlEvents:", v1, "didTapContinueButton", 64);
  v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v67, "localizedStringForKey:value:table:", v68, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v71 = v70;

  v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v71, v73, v74, v75, v76, v77, v78, v79);
  objc_msgSend(v66, "setTitle:forState:", v72, 0);

  v80 = v66;
  v81 = (uint64_t)v90;
  UIButton.configuration.getter();
  v82 = type metadata accessor for UIButton.Configuration(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82))
  {
    v83 = v89;
    sub_1000F612C(v81, v89);
    UIButton.configuration.setter(v83);

    sub_10001BE90(v81, &qword_10081F6D0);
  }
  else
  {
    v84 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    UIButton.Configuration.baseForegroundColor.setter(v84);
    UIButton.configuration.setter(v81);

  }
  v85 = objc_msgSend(v1, "buttonTray", v88);
  objc_msgSend(v85, "addButton:", v80);

  v86 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v1, "didTapXButton");
  v87 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v87, "setRightBarButtonItem:animated:", v86, 0);

}

uint64_t sub_10052D390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  v2 = type metadata accessor for MetricClickStreamOccurred(0);
  v3 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  v60 = v3;
  __chkstk_darwin(v2);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricIdentifier(0);
  __chkstk_darwin(v5);
  v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082CD60);
  __chkstk_darwin(v7);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082CD68);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10082CD70);
  __chkstk_darwin(v12);
  v53 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10082CD78);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_10082CD80);
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MetricClickStreamType(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MetricClickStream(0);
  v54 = *(_QWORD *)(v24 - 8);
  v55 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v53 - v29;
  v31 = enum case for MetricNavigationDirection.none(_:);
  v32 = type metadata accessor for MetricNavigationDirection(0, v28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v23, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for MetricClickStreamType.page(_:), v20);
  v33 = v1 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_metricPage;
  v34 = type metadata accessor for MetricPage(0);
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v19, v33, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v19, 0, 1, v34);
  v36 = type metadata accessor for MetricBadgingCounts(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 1, 1, v36);
  v37 = type metadata accessor for MetricGroupActivity(0);
  v38 = v53;
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v53, 1, 1, v37);
  static MetricEnvironment.current()(v39);
  v40 = type metadata accessor for MetricEnvironment(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v11, 0, 1, v40);
  v41 = sub_100047110(&qword_10082CDA0);
  v42 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v56, 1, 1, v41);
  v43 = type metadata accessor for MetricRemoteIdentifier(0);
  v44 = v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v57, 1, 1, v43);
  MetricClickStream.init(type:page:identifier:badgingCounts:groupActivity:environment:remoteParticipantDeviceType:topicRoutingBehavior:metadata:)(v23, v19, v44, v16, v38, v11, v42, 1, _swiftEmptyDictionarySingleton);
  v46 = v54;
  v45 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v26, v30, v55);
  v47 = v58;
  MetricClickStreamOccurred.init(_:)(v26);
  v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_eventHub + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_eventHub));
  v50 = sub_1000083D8((unint64_t *)&qword_100830BE0, (uint64_t (*)(uint64_t))&type metadata accessor for MetricClickStreamOccurred, (uint64_t)&protocol conformance descriptor for MetricClickStreamOccurred);
  v51 = v59;
  dispatch thunk of EventHubProtocol.publish<A>(_:)(v47, v59, v50, ObjectType, v48);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v30, v45);
}

uint64_t sub_10052D828()
{
  return sub_10052D864(&enum case for MetricClickAction.gdprConsent(_:), 0x65756E69746E6F43, 0xE800000000000000);
}

uint64_t sub_10052D848()
{
  return sub_10052D864(&enum case for MetricClickAction.dismiss(_:), 0x65736F6C43, 0xE500000000000000);
}

uint64_t sub_10052D864(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v25 = a3;
  v5 = sub_100047110(&qword_1008283D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricClickElement(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricClickAction(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v3;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, *a1, v12, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for MetricClickElement.button(_:), v8);
  v17 = type metadata accessor for MetricClickDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  v18 = v3 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_metricPage;
  v19 = type metadata accessor for DiscoverySheetViewController(0);
  v20 = sub_1000083D8(&qword_1008394A0, type metadata accessor for DiscoverySheetViewController, (uint64_t)&unk_100644000);
  v22 = 1;
  MetricClickPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:metricPage:locations:impressions:topicRoutingBehavior:)(v16, v11, v24, v25, v7, v18, &_swiftEmptyArrayStorage, &_swiftEmptyArrayStorage, v22, v19, v20);
  sub_10001BE90((uint64_t)v7, &qword_1008283D0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

id sub_10052DAA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoverySheetViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10052DB58()
{
  return type metadata accessor for DiscoverySheetViewController(0);
}

uint64_t type metadata accessor for DiscoverySheetViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100839488;
  if (!qword_100839488)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DiscoverySheetViewController);
  return result;
}

uint64_t sub_10052DB9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100643EF0;
  v4[1] = &unk_100643F08;
  v4[2] = &unk_100643F20;
  v4[3] = &unk_100643F38;
  result = type metadata accessor for MetricPage(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiscoverySheetViewController.PageIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10052DC7C + 4 * byte_100643E85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10052DCB0 + 4 * byte_100643E80[v4]))();
}

uint64_t sub_10052DCB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10052DCB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10052DCC0);
  return result;
}

uint64_t sub_10052DCCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10052DCD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10052DCD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10052DCE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoverySheetViewController.PageIdentifier()
{
  return &type metadata for DiscoverySheetViewController.PageIdentifier;
}

unint64_t sub_10052DD00()
{
  unint64_t result;

  result = qword_100839498;
  if (!qword_100839498)
  {
    result = swift_getWitnessTable(&unk_100643FD8, &type metadata for DiscoverySheetViewController.PageIdentifier);
    atomic_store(result, (unint64_t *)&qword_100839498);
  }
  return result;
}

uint64_t sub_10052DD44()
{
  _QWORD *v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_eventHub));
}

unint64_t sub_10052DD80()
{
  unint64_t result;

  result = qword_1008394A8;
  if (!qword_1008394A8)
  {
    result = swift_getWitnessTable(&unk_100644114, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394A8);
  }
  return result;
}

unint64_t sub_10052DDC8()
{
  unint64_t result;

  result = qword_1008394B0;
  if (!qword_1008394B0)
  {
    result = swift_getWitnessTable(&unk_100644144, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394B0);
  }
  return result;
}

void sub_10052DE10(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10052DE40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

uint64_t sub_10052DF00(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086ADF0, 0x6472617741, 0xE500000000000000);
}

uint64_t sub_10052DF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100839590);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100839598);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100839588);
  sub_100008398(v7, qword_10086AE08);
  sub_10003CE9C(v7, (uint64_t)qword_10086AE08);
  v8 = sub_1000F49B4();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for AwardEntity, v8);
  v9._object = (void *)0x800000010069E6E0;
  v9._countAndFlagsBits = 0xD000000000000014;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EntityURLRepresentation.init(stringInterpolation:)(v6, &type metadata for AwardEntity, v8);
}

uint64_t sub_10052E09C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10052E0C8 + 4 * byte_100644038[a1]))(7105633, 0xE300000000000000);
}

uint64_t sub_10052E0C8()
{
  return 0x7449726F466F67;
}

uint64_t sub_10052E0E0()
{
  return 0x7974697669746361;
}

uint64_t sub_10052E0F8()
{
  return 0x7374756F6B726F77;
}

uint64_t sub_10052E110()
{
  return 0x507373656E746966;
}

uint64_t sub_10052E130()
{
  return 0x45646574696D696CLL;
}

unint64_t sub_10052E154()
{
  return 0xD000000000000010;
}

uint64_t sub_10052E170()
{
  return 0x74697465706D6F63;
}

unint64_t sub_10052E198()
{
  unint64_t result;

  result = qword_1008394B8;
  if (!qword_1008394B8)
  {
    result = swift_getWitnessTable(&unk_10064417C, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394B8);
  }
  return result;
}

uint64_t sub_10052E1DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100381EC0(&qword_10081DFE0, &qword_100839588, (uint64_t)qword_10086AE08, (uint64_t)sub_10052DF1C, a1);
}

unint64_t sub_10052E204()
{
  unint64_t result;

  result = qword_1008394C0;
  if (!qword_1008394C0)
  {
    result = swift_getWitnessTable(&unk_1006441A4, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394C0);
  }
  return result;
}

unint64_t sub_10052E24C()
{
  unint64_t result;

  result = qword_1008394C8;
  if (!qword_1008394C8)
  {
    result = swift_getWitnessTable(&unk_1006441CC, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394C8);
  }
  return result;
}

unint64_t sub_10052E298()
{
  unint64_t result;

  result = qword_1008394D0;
  if (!qword_1008394D0)
  {
    result = swift_getWitnessTable(&unk_10064424C, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394D0);
  }
  return result;
}

void sub_10052E2DC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_10052F8FC(*(void **)(v1 + 8));
  *a1 = v3;
  a1[1] = v4;
}

uint64_t sub_10052E304(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100171194();
  v4 = URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_10052E34C@<X0>(uint64_t a1@<X8>)
{
  return sub_10020711C(&qword_10081DFD8, (uint64_t)qword_10086ADF0, (uint64_t)sub_10052DF00, a1);
}

uint64_t sub_10052E368()
{
  return sub_100028384(&qword_1008394E0, &qword_1008394E8, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10052E394(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000F49B4();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10052E3D0()
{
  unint64_t result;

  result = qword_1008394F0;
  if (!qword_1008394F0)
  {
    result = swift_getWitnessTable(&unk_10064427C, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_1008394F0);
  }
  return result;
}

uint64_t sub_10052E414()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 8);
  v2 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
  v3 = objc_msgSend(v2, "titleForAchievement:", v1);

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  }
  else
  {
    sub_10052F8FC(v1);
    v4 = v5;
  }
  return DisplayRepresentation.init(stringLiteral:)(v4);
}

uint64_t sub_10052E4B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10052E298();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10052E4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100839578);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100839580);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100839570);
  sub_100008398(v7, qword_10086AE20);
  sub_10003CE9C(v7, (uint64_t)qword_10086AE20);
  v8 = sub_1003EAB54();
  EnumURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for TrophyCaseSectionEnum, v8);
  v9._object = (void *)0x800000010069E6E0;
  v9._countAndFlagsBits = 0xD000000000000014;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EnumURLRepresentation.StringInterpolation.Token.rawValue<A>(_:), v0);
  EnumURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EnumURLRepresentation.init(stringInterpolation:)(v6, &type metadata for TrophyCaseSectionEnum, v8);
}

uint64_t sub_10052E668(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086AE38, 0x43207968706F7254, 0xEB00000000657361);
}

