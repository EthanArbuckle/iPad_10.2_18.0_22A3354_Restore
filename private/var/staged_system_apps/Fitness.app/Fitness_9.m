unint64_t sub_10052E690()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t result;
  _BYTE *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100839568);
  v11 = sub_100047110(&qword_100833858);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v51 = 8 * v13;
  v16 = v13;
  v17 = swift_allocObject(v10, v15 + 8 * v13, v14 | 7);
  v52 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_100622B10;
  *(_BYTE *)(v17 + v15) = 0;
  v18 = v17 + v15;
  LocalizedStringResource.init(stringLiteral:)(0x72617741206C6C41, 0xEA00000000007364);
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v55(v5, 1, 1, v6);
  v19 = type metadata accessor for DisplayRepresentation.Image(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v54 = v16;
  v47 = v18 + v16 + *(int *)(v11 + 48);
  *(_BYTE *)(v18 + v16) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x495F524F465F4F47, 0xE900000000000054);
  v21 = v6;
  v22 = v6;
  v23 = v55;
  v55(v5, 1, 1, v21);
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v47 = 2 * v16;
  v24 = (_BYTE *)(v18 + 2 * v16);
  v25 = *(int *)(v11 + 48);
  v53 = v11;
  v46 = &v24[v25];
  *v24 = 2;
  LocalizedStringResource.init(stringLiteral:)(0x5954495649544341, 0xE800000000000000);
  v26 = v22;
  v23(v5, 1, 1, v22);
  v27 = v23;
  v28 = v20;
  v48 = v20;
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v29 = v54;
  *(_BYTE *)(v18 + v47 + v54) = 3;
  LocalizedStringResource.init(stringLiteral:)(0x5354554F4B524F57, 0xE800000000000000);
  v49 = v26;
  v27(v5, 1, 1, v26);
  v28(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v30 = 4 * v29;
  v31 = v29;
  v32 = (_BYTE *)(v18 + 4 * v29);
  v50 = v18;
  v33 = v53;
  v47 = (uint64_t)&v32[*(int *)(v53 + 48)];
  *v32 = 4;
  LocalizedStringResource.init(stringLiteral:)(0x5F5353454E544946, 0xEC00000053554C50);
  v34 = v55;
  v55(v5, 1, 1, v26);
  v35 = v48;
  v48(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v36 = (_BYTE *)(v18 + v30 + v31);
  v47 = (uint64_t)&v36[*(int *)(v33 + 48)];
  *v36 = 5;
  LocalizedStringResource.init(stringLiteral:)(0x5F444554494D494CLL, 0xEF4E4F4954494445);
  v37 = v49;
  v34(v5, 1, 1, v49);
  v38 = v19;
  v35(v2, 1, 1, v19);
  v39 = v35;
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v40 = v54;
  v41 = v50;
  *(_BYTE *)(v50 + 6 * v54) = 6;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x80000001006A47D0);
  v42 = v37;
  v43 = v37;
  v44 = v55;
  v55(v5, 1, 1, v42);
  v39(v2, 1, 1, v38);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v41 + v51 - v40) = 7;
  LocalizedStringResource.init(stringLiteral:)(0x54495445504D4F43, 0xEC000000534E4F49);
  v44(v5, 1, 1, v43);
  v39(v2, 1, 1, v38);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  result = sub_100436C18(v52);
  qword_10086AE50 = result;
  return result;
}

void sub_10052EC1C(char *a1)
{
  sub_100390284(*a1);
}

unint64_t sub_10052EC2C()
{
  unint64_t result;

  result = qword_1008394F8;
  if (!qword_1008394F8)
  {
    result = swift_getWitnessTable(&unk_1006442A4, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_1008394F8);
  }
  return result;
}

void sub_10052EC70()
{
  char *v0;

  sub_100391F7C(0, *v0);
}

void sub_10052EC7C(uint64_t a1)
{
  char *v1;

  sub_10039198C(a1, *v1);
}

void sub_10052EC84(uint64_t a1)
{
  char *v1;

  sub_100391F7C(a1, *v1);
}

uint64_t sub_10052EC8C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_10052F2A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10052ECB8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10052E09C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10052ECE4()
{
  unint64_t result;

  result = qword_100839500;
  if (!qword_100839500)
  {
    result = swift_getWitnessTable(&unk_1006443BC, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839500);
  }
  return result;
}

unint64_t sub_10052ED2C()
{
  unint64_t result;

  result = qword_100839508;
  if (!qword_100839508)
  {
    result = swift_getWitnessTable(&unk_1006443F4, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839508);
  }
  return result;
}

unint64_t sub_10052ED74()
{
  unint64_t result;

  result = qword_100839510;
  if (!qword_100839510)
  {
    result = swift_getWitnessTable(&unk_10064430C, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839510);
  }
  return result;
}

unint64_t sub_10052EDC0()
{
  unint64_t result;

  result = qword_100839518;
  if (!qword_100839518)
  {
    result = swift_getWitnessTable(&unk_100644424, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839518);
  }
  return result;
}

uint64_t sub_10052EE04@<X0>(uint64_t a1@<X8>)
{
  return sub_100381EC0(&qword_10081DFE8, &qword_100839570, (uint64_t)qword_10086AE20, (uint64_t)sub_10052E4E8, a1);
}

unint64_t sub_10052EE2C()
{
  unint64_t result;

  result = qword_100839520;
  if (!qword_100839520)
  {
    result = swift_getWitnessTable(&unk_10064444C, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839520);
  }
  return result;
}

unint64_t sub_10052EE74()
{
  unint64_t result;

  result = qword_100839528;
  if (!qword_100839528)
  {
    result = swift_getWitnessTable(&unk_100644474, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839528);
  }
  return result;
}

unint64_t sub_10052EEC0()
{
  unint64_t result;

  result = qword_100839530;
  if (!qword_100839530)
  {
    result = swift_getWitnessTable(&unk_1006444F4, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839530);
  }
  return result;
}

uint64_t sub_10052EF04(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1003EA28C();
  v4 = URLRepresentableEnum.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_10052EF4C@<X0>(uint64_t a1@<X8>)
{
  return sub_10020711C(&qword_10081DFF0, (uint64_t)qword_10086AE38, (uint64_t)sub_10052E668, a1);
}

uint64_t sub_10052EF68(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003EAB54();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_10052EFA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003EAB54();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10052EFE4()
{
  unint64_t result;

  result = qword_100839540;
  if (!qword_100839540)
  {
    result = swift_getWitnessTable(&unk_100644534, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839540);
  }
  return result;
}

unint64_t sub_10052F02C()
{
  unint64_t result;

  result = qword_100839548;
  if (!qword_100839548)
  {
    result = swift_getWitnessTable(&unk_10064455C, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839548);
  }
  return result;
}

unint64_t sub_10052F074()
{
  unint64_t result;

  result = qword_100839550;
  if (!qword_100839550)
  {
    result = swift_getWitnessTable(&unk_1006442CC, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100839550);
  }
  return result;
}

double sub_10052F0B8()
{
  double result;

  if (qword_10081DFF8 != -1)
    swift_once(&qword_10081DFF8, sub_10052E690);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_10086AE50).n128_u64[0];
  return result;
}

uint64_t sub_10052F0F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10052EEC0();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10052F130()
{
  return sub_100028384(&qword_100839558, &qword_100839560, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10052F15C(_QWORD *a1@<X8>)
{
  *a1 = &off_1007824D0;
}

uint64_t storeEnumTagSinglePayload for TrophyCaseSectionEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10052F1B8 + 4 * byte_100644045[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10052F1EC + 4 * byte_100644040[v4]))();
}

uint64_t sub_10052F1EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10052F1F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10052F1FCLL);
  return result;
}

uint64_t sub_10052F208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10052F210);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10052F214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10052F21C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrophyCaseSectionEnum()
{
  return &type metadata for TrophyCaseSectionEnum;
}

uint64_t *assignWithCopy for AwardEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

ValueMetadata *type metadata accessor for AwardEntity()
{
  return &type metadata for AwardEntity;
}

uint64_t sub_10052F2A0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  if (a1 == 7105633 && a2 == 0xE300000000000000)
    goto LABEL_9;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7105633, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
LABEL_6:
    v5 = a2;
LABEL_10:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 5000257 && a2 == 0xE300000000000000)
  {
LABEL_9:
    v5 = 0xE300000000000000;
    goto LABEL_10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(5000257, 0xE300000000000000, a1, a2, 0) & 1) != 0)
    goto LABEL_6;
  if (a1 == 0x7449726F466F67 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7449726F466F67, 0xE700000000000000, a1, a2, 0) & 1) != 0)
    goto LABEL_16;
  if (a1 == 0x495F524F465F4F47 && a2 == 0xE900000000000054)
  {
    v7 = 0xE900000000000054;
    goto LABEL_20;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x495F524F465F4F47, 0xE900000000000054, a1, a2, 0) & 1) != 0)
  {
LABEL_16:
    v7 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000)
    goto LABEL_24;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974697669746361, 0xE800000000000000, a1, a2, 0) & 1) != 0)
    goto LABEL_26;
  if (a1 == 0x5954495649544341 && a2 == 0xE800000000000000)
  {
LABEL_24:
    v8 = 0xE800000000000000;
LABEL_27:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5954495649544341, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
LABEL_26:
    v8 = a2;
    goto LABEL_27;
  }
  if (a1 == 0x7374756F6B726F77 && a2 == 0xE800000000000000)
    goto LABEL_33;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7374756F6B726F77, 0xE800000000000000, a1, a2, 0) & 1) != 0)
    goto LABEL_35;
  if (a1 == 0x5354554F4B524F57 && a2 == 0xE800000000000000)
  {
LABEL_33:
    v9 = 0xE800000000000000;
LABEL_36:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5354554F4B524F57, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
LABEL_35:
    v9 = a2;
    goto LABEL_36;
  }
  if (a1 == 0x507373656E746966 && a2 == 0xEB0000000073756CLL)
  {
    v10 = 0xEB0000000073756CLL;
LABEL_48:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x507373656E746966, 0xEB0000000073756CLL, a1, a2, 0) & 1) != 0)
    goto LABEL_44;
  if (a1 == 0x5F5353454E544946 && a2 == 0xEC00000053554C50)
  {
    v10 = 0xEC00000053554C50;
    goto LABEL_48;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5F5353454E544946, 0xEC00000053554C50, a1, a2, 0) & 1) != 0)
  {
LABEL_44:
    v10 = a2;
    goto LABEL_48;
  }
  if (a1 == 0x45646574696D696CLL && a2 == 0xEE006E6F69746964)
  {
    v11 = 0xEE006E6F69746964;
LABEL_58:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x45646574696D696CLL, 0xEE006E6F69746964, a1, a2, 0) & 1) != 0)
    goto LABEL_54;
  if (a1 == 0x5F444554494D494CLL && a2 == 0xEF4E4F4954494445)
  {
    v11 = 0xEF4E4F4954494445;
    goto LABEL_58;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5F444554494D494CLL, 0xEF4E4F4954494445, a1, a2, 0) & 1) != 0)
  {
LABEL_54:
    v11 = a2;
    goto LABEL_58;
  }
  if (a1 == 0xD000000000000010)
  {
    v12 = 0x800000010069BEE0;
    if (a2 == 0x800000010069BEE0)
      goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000010069BEE0, a1, a2, 0) & 1) != 0)
    goto LABEL_63;
  if (a1 == 0xD000000000000012 && a2 == 0x80000001006A47D0)
  {
    v12 = 0x80000001006A47D0;
    goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001006A47D0, a1, a2, 0) & 1) != 0)
  {
LABEL_63:
    v12 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if (a1 == 0x74697465706D6F63 && a2 == 0xEC000000736E6F69)
  {
    v13 = 1936617321;
LABEL_77:
    v14 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
    goto LABEL_78;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74697465706D6F63, 0xEC000000736E6F69, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_78:
    swift_bridgeObjectRelease(v14);
    return 7;
  }
  if (a1 == 0x54495445504D4F43 && a2 == 0xEC000000534E4F49)
  {
    v13 = 1397641033;
    goto LABEL_77;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54495445504D4F43, 0xEC000000534E4F49, a1, a2, 0);
  swift_bridgeObjectRelease(a2);
  if ((v15 & 1) != 0)
    return 7;
  else
    return 8;
}

void sub_10052F8FC(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;

  v1 = objc_msgSend(a1, "section");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5 = (char *)&loc_10052F96C + *((int *)qword_10052FB30 + sub_10052F2A0(v2, v4));
  __asm { BR              X10 }
}

uint64_t sub_10052F97C()
{
  void *v0;
  Swift::String v1;
  Swift::String v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  uint64_t v10;

  v1._countAndFlagsBits = 0x7449726F466F67;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  v2._countAndFlagsBits = 47;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3 = objc_msgSend(v0, "template");
  v4 = objc_msgSend(v3, "uniqueName");

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v7 = (void *)0xE700000000000000;
    v5 = 0x4E574F4E4B4E55;
  }
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  return v10;
}

Swift::Int sub_10052FB54()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _OWORD v21[4];
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v1 = v0;
  Hasher.init()(v21);
  v2 = (int *)type metadata accessor for MetricCard(0);
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  sub_1000EB3F4(*(_QWORD *)v3, v5, *(_BYTE *)(v3 + 16));
  sub_10054FFE4(v4, v5, v6);
  v8 = v7;
  String.hash(into:)(v21, v9, v7);
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)(v21, v4, v5);
      v17 = v4;
      v18 = v5;
      v19 = 1;
    }
    else
    {
      v17 = v4;
      v18 = v5;
      v19 = v6;
    }
    sub_1000EB41C(v17, v18, v19);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v2[6]));
  Hasher._combine(_:)(*(_BYTE *)(v1 + v2[7]));
  sub_10038EE28((uint64_t)v21);
  v25 = v21[2];
  v26 = v21[3];
  v27 = v22;
  v23 = v21[0];
  v24 = v21[1];
  return Hasher.finalize()();
}

uint64_t sub_10052FC98()
{
  uint64_t v0;
  int *v1;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  id v18;
  id v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  Swift::String v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __int128 v32;
  char v33;
  _QWORD v34[2];

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  v1 = (int *)type metadata accessor for MetricCard(0);
  v2 = (__int128 *)(v0 + v1[5]);
  v3 = *((_BYTE *)v2 + 16);
  v32 = *v2;
  v33 = v3;
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v32) = *(_BYTE *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_10027F100();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object, v10, v11, v12, v13, v14, v15, v16);
  v17._countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  v18 = *(id *)(v0 + v1[9]);
  v19 = objc_msgSend(v18, "description");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  return v34[0];
}

uint64_t type metadata accessor for MetricCard(uint64_t a1)
{
  uint64_t result;

  result = qword_1008395F8;
  if (!qword_1008395F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricCard);
  return result;
}

_QWORD *sub_10052FE50(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t, __n128);
  uint64_t v40;
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v19 = *(void **)((char *)a2 + v15);
    v18 = *(void **)((char *)a2 + v15 + 8);
    *(_QWORD *)v16 = v19;
    *((_QWORD *)v16 + 1) = v18;
    v20 = *(_QWORD *)((char *)a2 + v15 + 16);
    v40 = *(_QWORD *)((char *)a2 + v15 + 24);
    *((_QWORD *)v16 + 2) = v20;
    *((_QWORD *)v16 + 3) = v40;
    *((_QWORD *)v16 + 4) = *(_QWORD *)((char *)a2 + v15 + 32);
    v16[40] = *((_BYTE *)a2 + v15 + 40);
    v21 = type metadata accessor for MetricDetailViewModel(0);
    v22 = *(int *)(v21 + 36);
    __dst = &v16[v22];
    v42 = v21;
    v23 = &v17[v22];
    v24 = type metadata accessor for DateInterval(0);
    v38 = *(_QWORD *)(v24 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v38 + 48);
    v25 = v19;
    v26 = v18;
    swift_bridgeObjectRetain(v20);
    v27 = swift_bridgeObjectRetain(v40);
    if (v39(v23, 1, v24, v27))
    {
      v28 = sub_100047110((uint64_t *)&unk_100827440);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v24);
    }
    v16[*(int *)(v42 + 40)] = v17[*(int *)(v42 + 40)];
    v30 = *(int *)(v42 + 44);
    v31 = &v16[v30];
    v32 = &v17[v30];
    v33 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    v34 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v35 = *(void **)((char *)a2 + v34);
    *(_QWORD *)((char *)a1 + v34) = v35;
    v36 = v35;
  }
  return a1;
}

void sub_100530074(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));
  v5 = a1 + a2[9];

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v5 + 16), v6, v7, v8, v9, v10, v11, v12);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v5 + 24), v13, v14, v15, v16, v17, v18, v19);
  v20 = type metadata accessor for MetricDetailViewModel(0);
  v21 = v5 + *(int *)(v20 + 36);
  v22 = type metadata accessor for DateInterval(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = v5 + *(int *)(v20 + 44);
  v25 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);

}

uint64_t sub_10053017C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v37;
  unsigned int (*v38)(const void *, uint64_t, uint64_t, __n128);
  void *__dst;
  uint64_t v40;
  int *v41;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  v41 = a3;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v18 = *(void **)(a2 + v14);
  v17 = *(void **)(a2 + v14 + 8);
  *(_QWORD *)v15 = v18;
  *(_QWORD *)(v15 + 8) = v17;
  v19 = *(_QWORD *)(a2 + v14 + 16);
  v20 = *(_QWORD *)(a2 + v14 + 24);
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v20;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(a2 + v14 + 32);
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(a2 + v14 + 40);
  v21 = type metadata accessor for MetricDetailViewModel(0);
  v22 = *(int *)(v21 + 36);
  __dst = (void *)(v15 + v22);
  v40 = v21;
  v23 = (const void *)(v16 + v22);
  v24 = type metadata accessor for DateInterval(0);
  v37 = *(_QWORD *)(v24 - 8);
  v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v37 + 48);
  v25 = v18;
  v26 = v17;
  swift_bridgeObjectRetain(v19);
  v27 = swift_bridgeObjectRetain(v20);
  if (v38(v23, 1, v24, v27))
  {
    v28 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(__dst, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v24);
  }
  *(_BYTE *)(v15 + *(int *)(v40 + 40)) = *(_BYTE *)(v16 + *(int *)(v40 + 40));
  v29 = *(int *)(v40 + 44);
  v30 = v15 + v29;
  v31 = v16 + v29;
  v32 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  v33 = v41[11];
  *(_BYTE *)(a1 + v41[10]) = *(_BYTE *)(a2 + v41[10]);
  v34 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  v35 = v34;
  return a1;
}

uint64_t sub_100530378(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  int *v62;
  int *v63;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v63 = a3;
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(void **)(a2 + v16);
  v20 = *(void **)v17;
  *(_QWORD *)v17 = v19;
  v21 = v19;

  v22 = *(void **)(v18 + 8);
  v23 = *(void **)(v17 + 8);
  *(_QWORD *)(v17 + 8) = v22;
  v24 = v22;

  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 16);
  *(_QWORD *)(v17 + 16) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  v34 = *(_QWORD *)(v18 + 24);
  v35 = *(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 24);
  *(_QWORD *)(v17 + 24) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35, v36, v37, v38, v39, v40, v41, v42);
  v43 = *(_QWORD *)(v18 + 32);
  *(_BYTE *)(v17 + 40) = *(_BYTE *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = v43;
  v62 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v44 = v62[9];
  v45 = (void *)(v17 + v44);
  v46 = (void *)(v18 + v44);
  v47 = type metadata accessor for DateInterval(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 24))(v45, v46, v47);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
    goto LABEL_6;
  }
  if (v51)
  {
LABEL_6:
    v52 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 16))(v45, v46, v47);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_7:
  *(_BYTE *)(v17 + v62[10]) = *(_BYTE *)(v18 + v62[10]);
  v53 = v62[11];
  v54 = v17 + v53;
  v55 = v18 + v53;
  v56 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  *(_BYTE *)(a1 + v63[10]) = *(_BYTE *)(a2 + v63[10]);
  v57 = v63[11];
  v58 = *(void **)(a2 + v57);
  v59 = *(void **)(a1 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  v60 = v58;

  return a1;
}

uint64_t sub_1005305F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(a2 + v12 + 32);
  *(_BYTE *)(v13 + 40) = *(_BYTE *)(a2 + v12 + 40);
  v16 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v17 = v16[9];
  v18 = (void *)(v13 + v17);
  v19 = (const void *)(v14 + v17);
  v20 = type metadata accessor for DateInterval(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_BYTE *)(v13 + v16[10]) = *(_BYTE *)(v14 + v16[10]);
  v23 = v16[11];
  v24 = v13 + v23;
  v25 = v14 + v23;
  v26 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  return a1;
}

uint64_t sub_100530794(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  size_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v53;
  int *v54;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15);
  v19 = *(void **)(a1 + v15);
  *(_QWORD *)v16 = v18;

  v20 = *(void **)(v16 + 8);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);

  v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(v16 + 16);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = *(CHWorkoutDetailHeartRateTableViewCell **)(v16 + 24);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_BYTE *)(v16 + 40) = *(_BYTE *)(v17 + 40);
  v54 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v37 = v54[9];
  v38 = (void *)(v16 + v37);
  v39 = (void *)(v17 + v37);
  v40 = type metadata accessor for DateInterval(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  v53 = v38;
  LODWORD(v38) = v42(v38, 1, v40);
  v43 = v42(v39, 1, v40);
  if ((_DWORD)v38)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 32))(v53, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v53, 0, 1, v40);
      goto LABEL_9;
    }
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100827440) - 8) + 64);
    v45 = v53;
  }
  else
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 40))(v53, v39, v40);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v41 + 8))(v53, v40);
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100827440) - 8) + 64);
    v45 = v53;
  }
  memcpy(v45, v39, v44);
LABEL_9:
  *(_BYTE *)(v16 + v54[10]) = *(_BYTE *)(v17 + v54[10]);
  v46 = v54[11];
  v47 = v16 + v46;
  v48 = v17 + v46;
  v49 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  v50 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  return a1;
}

uint64_t sub_1005309F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100530A00);
}

uint64_t sub_100530A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for MetricDetailViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100530AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100530AB4);
}

uint64_t sub_100530AB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for MetricDetailViewModel(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t sub_100530B58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_1006445F0;
    v5[2] = &unk_100644608;
    v5[3] = &unk_100644608;
    v5[4] = &unk_100644608;
    result = type metadata accessor for MetricDetailViewModel(319);
    if (v4 <= 0x3F)
    {
      v5[5] = *(_QWORD *)(result - 8) + 64;
      v5[6] = &unk_100644620;
      v5[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_initStructMetadata(a1, 256, 8, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100530C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t j;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a4;
  v37 = a2;
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v32 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v33 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v34 = (unint64_t)(v14 + 63) >> 6;
  v36 = a1;
  result = swift_bridgeObjectRetain(a1);
  j = 0;
  v35 = a3;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (j << 6); ; i = __clz(__rbit64(v22)) + (j << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v36 + 48) + *(_QWORD *)(v7 + 72) * i, v6);
    v24 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    v25 = v24(v10, v12, v6);
    v26 = Playlist.identifier.getter(v25);
    v28 = v27;
    if (v26 == v37 && v27 == a3)
    {
      swift_release(v36);
      swift_bridgeObjectRelease(a3);
LABEL_27:
      v30 = v32;
      v24(v32, v10, v6);
      v31 = 0;
LABEL_29:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v30, v31, 1, v6);
      return swift_bridgeObjectRelease(v35);
    }
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v37, a3, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
    {
      swift_release(v36);
      goto LABEL_27;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    a3 = v35;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v21 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v21 >= v34)
      goto LABEL_28;
    v22 = *(_QWORD *)(v33 + 8 * v21);
    ++j;
    if (v22)
      goto LABEL_19;
    j = v21 + 1;
    if (v21 + 1 >= v34)
      goto LABEL_28;
    v22 = *(_QWORD *)(v33 + 8 * j);
    if (v22)
      goto LABEL_19;
    j = v21 + 2;
    if (v21 + 2 >= v34)
      goto LABEL_28;
    v22 = *(_QWORD *)(v33 + 8 * j);
    if (v22)
      goto LABEL_19;
    j = v21 + 3;
    if (v21 + 3 >= v34)
      goto LABEL_28;
    v22 = *(_QWORD *)(v33 + 8 * j);
    if (v22)
      goto LABEL_19;
    v23 = v21 + 4;
    if (v23 >= v34)
    {
LABEL_28:
      swift_release(v36);
      v31 = 1;
      v30 = v32;
      goto LABEL_29;
    }
    v22 = *(_QWORD *)(v33 + 8 * v23);
    for (j = v23; !v22; ++v23)
    {
      j = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_31;
      if (j >= v34)
        goto LABEL_28;
      v22 = *(_QWORD *)(v33 + 8 * j);
    }
LABEL_19:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100530EEC(uint64_t a1)
{
  return sub_100530F24(a1, "Navigating to create plan");
}

uint64_t sub_100530F08(uint64_t a1)
{
  return sub_100530F24(a1, "Navigating to plan detail");
}

uint64_t sub_100530F24(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Log.default.getter(v5);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a2, v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t *sub_10053101C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

char *sub_1005310B8(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *result;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  __n128 v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  ValueWitnessTable *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  char *v89;
  id v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  objc_class *v95;
  char *v96;
  id v97;
  id v98;
  objc_class *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t ObjectType;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void (**v126)(uint64_t, char *, id);
  id v127;
  id v128;
  objc_super v129;
  objc_super v130;
  __int128 v131;
  ValueMetadata *v132;
  _UNKNOWN **v133;

  v128 = a5;
  v10 = type metadata accessor for ActivitySharingSettings(0);
  v124 = *(_QWORD *)(v10 - 8);
  v125 = v10;
  __chkstk_darwin(v10);
  v123 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100824FE0);
  v118 = *(_QWORD *)(v12 - 8);
  v119 = v12;
  __chkstk_darwin(v12);
  v117 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)type metadata accessor for CompletedWorkoutShareItemProvider(0);
  v126 = (void (**)(uint64_t, char *, id))*(v14 - 1);
  v127 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___CHFitnessAppContext_navigationDelegate]);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___CHFitnessAppContext_appBadgeAggregator]);
  *(_QWORD *)&v5[OBJC_IVAR___CHFitnessAppContext_playlists] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v5[OBJC_IVAR___CHFitnessAppContext_seymourAvailabilityManager] = a2;
  type metadata accessor for Dependencies(0);
  v132 = (ValueMetadata *)sub_10001E724(0, (unint64_t *)&unk_1008361C0, _HKWheelchairUseCharacteristicCache_ptr);
  v133 = (_UNKNOWN **)&protocol witness table for _HKWheelchairUseCharacteristicCache;
  *(_QWORD *)&v131 = a3;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v17 = v5;
  v120 = a2;
  v18 = a3;
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = static Dependencies.browsing(wheelchairStatus:queue:)(&v131, v20);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v131);
  v22 = OBJC_IVAR___CHFitnessAppContext_dependencies;
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_dependencies] = v21;
  v23 = type metadata accessor for FitnessSettingsProvider();
  swift_allocObject(v23, 66, 7);
  v24 = v18;
  swift_retain(v21);
  v25 = a1;
  v26 = a4;
  v121 = v128;
  v122 = v25;
  v128 = v24;
  v27 = sub_1001DAA14(v21, v25, v26, v24, v121);
  v28 = sub_1000083D8((unint64_t *)&unk_100839738, (uint64_t (*)(uint64_t))type metadata accessor for FitnessSettingsProvider, (uint64_t)&unk_10062BEE8);
  v29 = (uint64_t *)&v17[OBJC_IVAR___CHFitnessAppContext_accountFitnessSettingsProvider];
  *v29 = v27;
  v29[1] = v28;
  swift_retain(v21);
  v30 = sub_100047110((uint64_t *)&unk_1008361F0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v30);
  swift_release(v21);
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_amsBag] = v131;
  v31 = *(_QWORD *)&v17[v22];
  swift_retain(v31);
  v32 = sub_100047110(&qword_100839748);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v32);
  swift_release(v31);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_siriUserActivityHandler]);
  v33 = *(_QWORD *)&v17[v22];
  swift_retain(v33);
  v34 = sub_100047110((uint64_t *)&unk_100839750);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v34);
  swift_release(v33);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_bookmarkClient]);
  v35 = *(_QWORD *)&v17[v22];
  swift_retain(v35);
  v36 = sub_100047110(&qword_100830D70);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v36);
  swift_release(v35);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_catalogClient]);
  v37 = *(_QWORD *)&v17[v22];
  result = (char *)objc_msgSend(v26, "unitManager", swift_retain(v37).n128_f64[0]);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v39 = result;
  v40 = sub_10004CEA4();
  CompletedWorkoutShareItemProvider.init(dependencies:unitPreferencesProvider:)(v37, v39, v40);
  v126[4]((uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_completedWorkoutItemProvider], v16, v127);
  v41 = type metadata accessor for EngagementAppBadgeProvider();
  v42 = swift_allocObject(v41, 56, 7);
  swift_retain(v37);
  v43 = (void *)sub_100047110((uint64_t *)&unk_1008361D0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)((_QWORD *)(v42 + 16), 0, 0, v43);
  swift_release(v37);
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider] = v42;
  v44 = *(_QWORD *)&v17[v22];
  swift_retain(v44);
  v45 = sub_100047110((uint64_t *)&unk_1008361E0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v45);
  swift_release(v44);
  v46 = &v17[OBJC_IVAR___CHFitnessAppContext_eventHub];
  *(_OWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_eventHub] = v131;
  v47 = *(_QWORD *)&v17[v22];
  swift_retain(v47);
  v48 = sub_100047110((uint64_t *)&unk_100839770);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v48);
  swift_release(v47);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_metricClient]);
  v49 = *(_QWORD *)&v17[v22];
  result = (char *)objc_msgSend(v26, "unitManager", swift_retain(v49).n128_f64[0]);
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v50 = result;
  v127 = v43;
  v51 = (char *)objc_allocWithZone((Class)type metadata accessor for SeymourCatalogItemDataProvider());
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider] = sub_10002B108(v49, v50, v51);
  v52 = *(_QWORD *)v46;
  v53 = *((_QWORD *)v46 + 1);
  v54 = type metadata accessor for SubscriptionToken(0);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v55 = swift_unknownObjectRetain(v52);
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_subscriptionToken] = SubscriptionToken.init(eventHub:)(v55, v53);
  v56 = *v29;
  v57 = qword_10081D6E8;
  swift_retain(v49);
  swift_unknownObjectRetain(v56);
  if (v57 != -1)
    swift_once(&qword_10081D6E8, sub_1001B9EB8);
  v58 = v119;
  v59 = sub_10003CE9C(v119, (uint64_t)qword_100824FC0);
  v60 = v117;
  v61 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v59, v58);
  TestProperty.wrappedValue.getter(&v131, v58);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v58);
  v116 = v26;
  if (v131 == 1)
  {
    v62 = type metadata accessor for AppCoordinator(0);
    swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
    v65 = (void *)AppCoordinator.init(dependencies:)(v49);
    swift_unknownObjectRelease(v56);
    v67 = 0x8000000000000000;
  }
  else
  {
    v63 = objc_allocWithZone((Class)type metadata accessor for BrowsingViewController(0));
    swift_retain(v49);
    swift_unknownObjectRetain(v56);
    v65 = (void *)BrowsingViewController.init(dependencies:fitnessSettingsProvider:)(v64);
    v66 = type metadata accessor for MetricSceneLifecycleTracker(0);
    swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
    v67 = MetricSceneLifecycleTracker.init(dependencies:)(v49);
    swift_unknownObjectRelease(v56);
  }
  v68 = &v17[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator];
  *(_QWORD *)v68 = v65;
  *((_QWORD *)v68 + 1) = v67;
  v69 = *(_QWORD *)&v17[v22];
  v132 = &type metadata for SeymourBrowsingCoordinator;
  v133 = &off_10078C638;
  *(_QWORD *)&v131 = v65;
  *((_QWORD *)&v131 + 1) = v67;
  v70 = type metadata accessor for URLNavigator();
  v71 = swift_allocObject(v70, 200, 7);
  v72 = sub_10017C044((uint64_t)&v131, (uint64_t)&type metadata for SeymourBrowsingCoordinator);
  __chkstk_darwin(v72);
  v74 = (uint64_t *)((char *)&v115 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  ((void (*)(_QWORD *, uint64_t))v75->initializeWithCopy)(v74, v76);
  v77 = *v74;
  v78 = v74[1];
  sub_1001B9E4C(v65, v67);
  sub_1001B9E4C(v65, v67);
  v79 = (uint64_t)v120;
  v126 = (void (**)(uint64_t, char *, id))v120;
  sub_1001B9E4C(v65, v67);
  swift_retain(v69);
  v81 = sub_100538CCC(v80, v77, v78, (uint64_t)v65, v67, v79, v71);
  swift_release(v69);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v131);
  sub_1001B9E74(v65, v67);
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_navigator] = v81;
  v82 = *(_QWORD *)&v17[v22];
  swift_retain(v82);
  v83 = sub_100047110(&qword_100830D78);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v83);
  swift_release(v82);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_contentAvailabilityClient]);
  v84 = *(_QWORD *)&v17[v22];
  swift_retain(v84);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v127);
  swift_release(v84);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_engagementClient]);
  v85 = *(_QWORD *)&v17[v22];
  swift_retain(v85);
  v86 = sub_100047110(&qword_100839780);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v131, 0, 0, v86);
  swift_release(v85);
  sub_10002411C(&v131, (uint64_t)&v17[OBJC_IVAR___CHFitnessAppContext_privacyPreferenceClient]);
  v87 = v121;
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider] = v121;
  v88 = v122;
  v122 = v88;
  v127 = v87;
  v89 = v123;
  ActivitySharingSettings.init(healthStore:)(v88);
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(&v17[OBJC_IVAR___CHFitnessAppContext_activitySharingSettings], v89, v125);
  v90 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivitySharingCloudDeviceProvider(0)), "init");
  v91 = type metadata accessor for AccountDeviceProvider();
  v92 = (_QWORD *)swift_allocObject(v91, 40, 7);
  v92[3] = objc_msgSend(objc_allocWithZone((Class)AKAppleIDAuthenticationController), "init");
  v92[2] = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
  v93 = sub_100047110(&qword_100839788);
  v94 = swift_allocObject(v93, 28, 7);
  *(_DWORD *)(v94 + 24) = 0;
  *(_QWORD *)(v94 + 16) = &_swiftEmptyArrayStorage;
  v92[4] = v94;
  v95 = (objc_class *)type metadata accessor for CloudDeviceProvider();
  v96 = (char *)objc_allocWithZone(v95);
  *(_QWORD *)&v96[OBJC_IVAR___CHCloudDeviceProvider_activitySharingCloudDeviceProvider] = v90;
  *(_QWORD *)&v96[OBJC_IVAR___CHCloudDeviceProvider_accountDeviceProvider] = v92;
  v130.receiver = v96;
  v130.super_class = v95;
  v97 = objc_msgSendSuper2(&v130, "init");
  *(_QWORD *)&v17[OBJC_IVAR___CHFitnessAppContext_cloudDeviceProvider] = v97;
  v98 = v97;
  sub_1002ACC10();

  v99 = (objc_class *)type metadata accessor for FitnessAppContext(0);
  v129.receiver = v17;
  v129.super_class = v99;
  v100 = (char *)objc_msgSendSuper2(&v129, "init");
  v101 = *(_QWORD *)&v100[OBJC_IVAR___CHFitnessAppContext_navigator];
  *(_QWORD *)(v101 + 192) = &off_1007A75D0;
  swift_unknownObjectWeakAssign(v101 + 184, v100);
  v102 = v100;
  sub_10000D6BC();
  v103 = &v102[OBJC_IVAR___CHFitnessAppContext_eventHub];
  v104 = *(_QWORD *)&v102[OBJC_IVAR___CHFitnessAppContext_eventHub + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v102[OBJC_IVAR___CHFitnessAppContext_eventHub]);
  v106 = type metadata accessor for MultiUserBeginActivityRequested(0);
  v107 = OBJC_IVAR___CHFitnessAppContext_subscriptionToken;
  v108 = *(_QWORD *)&v102[OBJC_IVAR___CHFitnessAppContext_subscriptionToken];
  v109 = swift_allocObject(&unk_1007A77A8, 24, 7);
  swift_unknownObjectWeakInit(v109 + 16);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(&v131, v106, v108, sub_100538E2C, v109, v106, &protocol witness table for MultiUserBeginActivityRequested, ObjectType, v104);
  swift_release(v109);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v131);
  v110 = *((_QWORD *)v103 + 1);
  v111 = swift_getObjectType(*(_QWORD *)v103);
  v112 = type metadata accessor for PlaylistsUpdated(0);
  v113 = *(_QWORD *)&v102[v107];
  v114 = swift_allocObject(&unk_1007A77A8, 24, 7);
  swift_unknownObjectWeakInit(v114 + 16);
  swift_retain(v114);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(&v131, v112, v113, sub_100538E34, v114, v112, &protocol witness table for PlaylistsUpdated, v111, v110);

  swift_release(v114);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v131);
  swift_release(v114);
  return v102;
}

void sub_100531C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100536D78();

  }
}

void sub_100531C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10000D6BC();

  }
}

uint64_t sub_100531EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_100047110((uint64_t *)&unk_100836170);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100531F74, 0, 0);
}

uint64_t sub_100531F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  _QWORD *v19;
  uint64_t (*v20)(void);

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 16);
  static Log.default.getter(a1);
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v7._countAndFlagsBits = 0xD000000000000059;
  v7._object = (void *)0x8000000100690C90;
  v6._object = (void *)0x80000001006A4CD0;
  Logger.trace(file:function:)(v7, v6);
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v2, v4);
  v9 = v5 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator;
  v10 = *(_QWORD *)(v5 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
  *(_QWORD *)(v1 + 88) = v10;
  v11 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v1 + 96) = v11;
  if (v11 < 0)
  {
    v14 = *(_QWORD *)(v1 + 80);
    v15 = *(_QWORD *)(v1 + 64);
    swift_retain(v10);
    static Log.default.getter(v16);
    v17._countAndFlagsBits = 0xD00000000000006FLL;
    v17._object = (void *)0x80000001006A1100;
    v18._object = (void *)0x80000001006A1170;
    v18._countAndFlagsBits = 0xD000000000000016;
    Logger.trace(file:function:)(v17, v18);
    v8(v14, v15);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to AppCoordinator.activate(with:)[1]);
    *(_QWORD *)(v1 + 104) = v19;
    *v19 = v1;
    v19[1] = sub_10053212C;
    return AppCoordinator.activate(with:)(*(_QWORD *)(v1 + 24));
  }
  else
  {
    sub_100548BD0(*(void **)(v1 + 32), *(_QWORD *)(v1 + 56));
    v20 = (uint64_t (*)(void))((char *)&dword_100839990 + dword_100839990);
    v12 = (_QWORD *)swift_task_alloc(unk_100839994);
    *(_QWORD *)(v1 + 120) = v12;
    *v12 = v1;
    v12[1] = sub_10053226C;
    return v20();
  }
}

uint64_t sub_10053212C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100532224;
  else
    v3 = sub_100532190;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100532190()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, char, uint64_t);

  sub_1001B9E74(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96));
  sub_100548BD0(*(void **)(v0 + 32), *(_QWORD *)(v0 + 56));
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_100839990 + dword_100839990);
  v1 = (_QWORD *)swift_task_alloc(unk_100839994);
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_10053226C;
  return v3((uint64_t)v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/App/FitnessAppContext.swift", 89, 2, 197);
}

uint64_t sub_100532224()
{
  uint64_t v0;
  uint64_t v1;

  sub_1001B9E74(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053226C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_100532330;
  else
    v6 = sub_1005322F0;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005322F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100532330()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100532480(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t (*)(), uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void *v27;
  uint64_t v28;

  v27 = a1;
  v1 = type metadata accessor for NavigationAnnotation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100836170);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v13);
  v14._countAndFlagsBits = 0xD000000000000059;
  v14._object = (void *)0x8000000100690C90;
  v15._object = (void *)0x80000001006A4C50;
  v15._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_100047110((uint64_t *)&unk_100839C10);
  v17 = swift_allocObject(v16, ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72), *(unsigned __int8 *)(v2 + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100622F90;
  static NavigationAnnotation.external.getter();
  v28 = v17;
  v18 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v19 = sub_100047110(&qword_100836180);
  v20 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v19, v20, v1, v18);
  sub_1005495EC(v27, (uint64_t)v4, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v21 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v5);
  v23 = v22;
  v24 = swift_allocObject(&unk_1007A7BC0, 32, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  v21(sub_1001104CC, v24);
  swift_release(v23);
  v25 = swift_release(v24);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
}

uint64_t sub_10053275C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;

  v25 = a1;
  v1 = type metadata accessor for NavigationAnnotation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100836170);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v13);
  v14._countAndFlagsBits = 0xD000000000000059;
  v14._object = (void *)0x8000000100690C90;
  v15._object = (void *)0x80000001006A4C30;
  v15._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = &_swiftEmptyArrayStorage;
  v16 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v17 = sub_100047110(&qword_100836180);
  v18 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v17, v18, v1, v16);
  sub_10054A154(v25, (uint64_t)v4, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v19 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v5);
  v21 = v20;
  v22 = swift_allocObject(&unk_1007A7B98, 32, 7);
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  v19(sub_1001104CC, v22);
  swift_release(v21);
  v23 = swift_release(v22);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v23);
}

uint64_t sub_1005329FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v6);
  v7 = sub_1000252E0(a1, (uint64_t)v31);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v28 = v2;
    v10 = swift_slowAlloc(12, -1);
    v27 = v3;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc(32, -1);
    v30 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = v32;
    v13 = v33;
    sub_100016804(v31, v32);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v14, v13);
    v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
    v29 = sub_10003E8EC(v15, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v11 + 4);
    swift_bridgeObjectRelease(v17, v18, v19, v20, v21, v22, v23, v24);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Navigating to Seymour catalog item %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  }
  else
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_100532BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v6);
  v9 = sub_1000252E0(a2, (uint64_t)v26);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v24 = v2;
    v12 = swift_slowAlloc(12, -1);
    v23 = v5;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc(32, -1);
    v29 = v14;
    *(_DWORD *)v13 = 136315138;
    v21 = v13 + 4;
    v22 = v4;
    v16 = v27;
    v15 = v28;
    sub_100016804(v26, v27);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
    v19 = v18;
    v25 = sub_10003E8EC(v17, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v21);
    swift_bridgeObjectRelease(v19);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to navigate to Seymour catalog item %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v22);
  }
  else
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_100532DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  char v15;
  uint64_t result;
  Swift::String v17;
  Swift::String v18;
  _QWORD *v19;
  void *v20;
  unint64_t v21;
  id v22;
  __n128 v23;
  void (*v24)(uint64_t (*)(), uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v29 = a1;
  v3 = sub_100047110((uint64_t *)&unk_100836170);
  v30 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    static Log.default.getter(result);
    v17._object = (void *)0x8000000100690C90;
    v17._countAndFlagsBits = 0xD000000000000059;
    v18._countAndFlagsBits = 0x657461676976616ELL;
    v18._object = (void *)0xEF293A6874697728;
    Logger.trace(file:function:)(v17, v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = sub_100016804((_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
    v20 = (void *)*v19;
    v21 = v19[1];
    if ((v21 & 0x8000000000000000) != 0)
    {
      v23 = swift_retain(*v19);
      AppCoordinator.navigateToRequest(_:)(v29, v23);
      sub_1001B9E74(v20, v21);
    }
    else
    {
      v22 = v20;
      BrowsingViewController.navigateToRequest(_:)(v29);

    }
    v24 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v3);
    v26 = v25;
    v27 = swift_allocObject(&unk_1007A7B70, 32, 7);
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    v24(sub_1001104CC, v27);
    swift_release(v26);
    v28 = swift_release(v27);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v30 + 8))(v5, v3, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100533040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, _QWORD, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  _BYTE *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;

  v78 = a1;
  v74 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v74);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for NavigationPriority(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v73 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for NavigationRoutingBehavior(0);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v72 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NavigationSource(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  __chkstk_darwin(v8);
  v71 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for NavigationIntent(0);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v65 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for NavigationRequest(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NavigationResource(0);
  v76 = *(_QWORD *)(v12 - 8);
  v77 = v12;
  __chkstk_darwin(v12);
  v75 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v63 = (uint64_t *)((char *)&v54 - v15);
  v57 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10082EAE0);
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Playlist(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (result)
  {
    v27 = (void *)result;
    v55 = v5;
    v56 = v2;
    v28 = *(_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_playlists);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v28);
    sub_100530C0C(v29, v78, a2, v21);
    v30 = swift_bridgeObjectRelease(v28);
    v31 = v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48))(v21, 1, v22, v30) == 1)
    {
      swift_unknownObjectRelease(v27);
      return sub_10001BE90((uint64_t)v21, &qword_10082EAE0);
    }
    else
    {
      v32 = v25;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
      v33 = v27;
      v34 = objc_msgSend(v27, "navigateToSeymourTab");
      if ((_DWORD)v34)
      {
        static Log.default.getter(v34);
        v35._countAndFlagsBits = 0xD000000000000059;
        v35._object = (void *)0x8000000100690C90;
        v36._object = (void *)0x80000001006A4C10;
        v36._countAndFlagsBits = 0xD000000000000016;
        v78 = v31;
        Logger.trace(file:function:)(v35, v36);
        v37 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v57);
        v38 = Playlist.identifier.getter(v37);
        v39 = v63;
        *v63 = v38;
        v39[1] = v40;
        v42 = v76;
        v41 = v77;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v39, enum case for NavigationResource.playlist(_:), v77);
        (*(void (**)(char *, uint64_t *, uint64_t))(v42 + 16))(v75, v39, v41);
        v43 = v65;
        *v65 = 1;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v58 + 104))(v43, enum case for NavigationIntent.push(_:), v59);
        v44 = v71;
        (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v71, enum case for NavigationSource.default(_:), v61);
        v45 = v72;
        (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v72, enum case for NavigationRoutingBehavior.default(_:), v64);
        v46 = *(void (**)(char *, _QWORD, uint64_t))(v68 + 104);
        v68 = v23;
        v47 = v73;
        v46(v73, enum case for NavigationPriority.default(_:), v70);
        v79 = _swiftEmptyArrayStorage;
        v48 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
        v49 = sub_100047110(&qword_100836180);
        v70 = (uint64_t)v32;
        v50 = v49;
        v51 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
        v52 = v55;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v79, v50, v51, v74, v48);
        v53 = (uint64_t)v66;
        NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v75, v43, v44, v45, v47, v52);
        sub_100532DCC(v53);
        swift_unknownObjectRelease(v33);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v53, v69);
        (*(void (**)(uint64_t *, uint64_t))(v76 + 8))(v39, v77);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v70, v78);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v31);
        return swift_unknownObjectRelease(v27);
      }
    }
  }
  return result;
}

void *sub_100533634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t CatalogWorkoutsRequest;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *result;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t *);
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t (*)(), uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;

  v2 = v1;
  v55 = a1;
  v3 = type metadata accessor for FitnessPlusStackViewModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100047110((uint64_t *)&unk_100839710);
  v7 = *(_QWORD *)(v57 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v57);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v64 = (char *)&v53 - v10;
  v11 = sub_100047110((uint64_t *)&unk_100836170);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  __chkstk_darwin(v11);
  v60 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest(0);
  v58 = *(_QWORD *)(CatalogWorkoutsRequest - 8);
  v59 = CatalogWorkoutsRequest;
  __chkstk_darwin(CatalogWorkoutsRequest);
  v63 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(result, "navigateToSeymourTab");
    if ((_DWORD)v21)
    {
      static Log.default.getter(v21);
      v22._countAndFlagsBits = 0xD000000000000059;
      v22._object = (void *)0x8000000100690C90;
      v23._object = (void *)0x80000001006A4BE0;
      v23._countAndFlagsBits = 0xD00000000000002ALL;
      Logger.trace(file:function:)(v22, v23);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v53 = v4;
      v24 = v55;
      v25 = sub_1002F58DC();
      v26 = sub_10004CEFC((uint64_t)v25);
      v27 = swift_bridgeObjectRelease(v25);
      v54 = v7;
      v28 = v63;
      FetchCatalogWorkoutsRequest.init(identifiers:)(v26, v27);
      v30 = *(_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_catalogClient + 24);
      v29 = *(_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_catalogClient + 32);
      sub_100016804((_QWORD *)(v2 + OBJC_IVAR___CHFitnessAppContext_catalogClient), v30);
      dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)(v28, v30, v29);
      v31 = swift_allocObject(&unk_1007A77A8, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16, v2);
      sub_100149D00(v24, (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      v32 = *(unsigned __int8 *)(v53 + 80);
      v33 = (v32 + 24) & ~v32;
      v34 = swift_allocObject(&unk_1007A7AD0, v33 + v5, v32 | 7);
      *(_QWORD *)(v34 + 16) = v31;
      sub_10027D4A8((uint64_t)v6, v34 + v33);
      v35 = swift_allocObject(&unk_1007A7AF8, 32, 7);
      *(_QWORD *)(v35 + 16) = sub_100538B4C;
      *(_QWORD *)(v35 + 24) = v34;
      v36 = v54;
      v37 = v56;
      v38 = v57;
      v39 = v64;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v56, v64, v57);
      v40 = *(unsigned __int8 *)(v36 + 80);
      v41 = v36;
      v42 = (v40 + 16) & ~v40;
      v43 = (v8 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
      v44 = swift_allocObject(&unk_1007A7B20, v43 + 16, v40 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v44 + v42, v37, v38);
      v45 = (uint64_t (**)(uint64_t *))(v44 + v43);
      *v45 = sub_100538BA8;
      v45[1] = (uint64_t (*)(uint64_t *))v35;
      v46 = v60;
      Promise.init(asyncOperation:)(sub_100538BBC, v44, (char *)&type metadata for () + 8);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v38);
      v47 = v62;
      v48 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v62);
      v50 = v49;
      v51 = swift_allocObject(&unk_1007A7B48, 32, 7);
      *(_QWORD *)(v51 + 16) = 0;
      *(_QWORD *)(v51 + 24) = 0;
      v48(sub_1001104CC, v51);
      swift_unknownObjectRelease(v20);
      swift_release(v50);
      v52 = swift_release(v51);
      (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v46, v47, v52);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v63, v59);
    }
    else
    {
      return (void *)swift_unknownObjectRelease(v20);
    }
  }
  return result;
}

uint64_t sub_100533A80(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, char *, char *);
  char *v32;
  _BYTE *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  void *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  char v71[32];

  v55 = a3;
  v69 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v69);
  v65 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NavigationPriority(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v64 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NavigationRoutingBehavior(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v61 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for NavigationSource(0);
  v53 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v60 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for NavigationIntent(0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v59 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NavigationRequest(0);
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  __chkstk_darwin(v12);
  v66 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)type metadata accessor for NavigationResource(0);
  v15 = *((_QWORD *)v14 - 1);
  __chkstk_darwin(v14);
  v56 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  v20 = type metadata accessor for Playlist(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v45 - v25;
  v27 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v71, 0, 0);
  v52 = a2;
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v29 = (void *)result;
    sub_100533F94(v27, v55, (uint64_t)v23);

    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v23, v20);
    v46 = v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v45 = v26;
    v48 = v20;
    v30(v19, v26, v20);
    (*(void (**)(char *, _QWORD, char *))(v15 + 104))(v19, enum case for NavigationResource.unsavedPlaylist(_:), v14);
    v49 = v15;
    v31 = *(void (**)(char *, char *, char *))(v15 + 16);
    v32 = v56;
    v47 = v19;
    v55 = v14;
    v31(v56, v19, v14);
    v33 = v59;
    *v59 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v50 + 104))(v33, enum case for NavigationIntent.push(_:), v51);
    v34 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v60, enum case for NavigationSource.default(_:), v54);
    v35 = v61;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v61, enum case for NavigationRoutingBehavior.default(_:), v58);
    v36 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for NavigationPriority.default(_:), v63);
    v70[0] = _swiftEmptyArrayStorage;
    v37 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
    v38 = sub_100047110(&qword_100836180);
    v39 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
    v40 = v65;
    dispatch thunk of SetAlgebra.init<A>(_:)(v70, v38, v39, v69, v37);
    v41 = (uint64_t)v66;
    NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v32, v33, v34, v35, v36, v40);
    v42 = v52;
    swift_beginAccess(v52, v70, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v42);
    if (Strong)
    {
      v44 = (void *)Strong;
      sub_100532DCC(v41);

    }
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v41, v68);
    (*(void (**)(char *, char *))(v49 + 8))(v47, v55);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v45, v48);
  }
  return result;
}

void sub_100533F94(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t *v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99[2];
  void *v100;

  v88 = a3;
  v96 = type metadata accessor for CatalogWorkout(0);
  v5 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v98 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v95 = (char *)&v84 - v8;
  v9 = type metadata accessor for Date(0);
  v10 = __chkstk_darwin(v9);
  v87 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CatalogModality(0, v10);
  v91 = *(_QWORD *)(v12 - 8);
  v92 = v12;
  __chkstk_darwin(v12);
  v90 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_100839700);
  __chkstk_darwin(v14);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v86 = (unint64_t *)((char *)&v84 - v18);
  v19 = sub_100436898((uint64_t)_swiftEmptyArrayStorage);
  v20 = *(_QWORD *)(a1 + 16);
  v93 = v16;
  v94 = v5;
  v97 = v14;
  if (!v20)
  {
LABEL_17:
    v48 = sub_1002F58DC();
    swift_bridgeObjectRetain(v19);
    v49 = sub_10039C194((uint64_t)v48, v19);
    swift_bridgeObjectRelease(v48);
    v50 = v19;
    v51 = v49;
    swift_bridgeObjectRelease_n(v50, 2);
    v100 = &_swiftEmptySetSingleton;
    v52 = v49[2];
    v53 = _swiftEmptyArrayStorage;
    v89 = v49;
    if (v52)
    {
      v54 = (char *)v49 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v55 = *(_QWORD *)(v5 + 72);
      v56 = swift_bridgeObjectRetain(v49);
      v57 = _swiftEmptyArrayStorage;
      do
      {
        v58 = v90;
        v59 = CatalogWorkout.modality.getter(v56);
        v60 = CatalogModality.name.getter(v59);
        v62 = v61;
        (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v92);
        v63 = (uint64_t)v100;
        swift_bridgeObjectRetain(v100);
        LOBYTE(v58) = sub_1002D41B4(v60, v62, v63);
        swift_bridgeObjectRelease(v63);
        if ((v58 & 1) != 0)
        {
          v56 = swift_bridgeObjectRelease(v62);
        }
        else
        {
          swift_bridgeObjectRetain(v62);
          sub_100142388(v99, v60, v62);
          swift_bridgeObjectRelease(v99[1]);
          if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
            v57 = sub_10013F75C(0, v57[2] + 1, 1, v57);
          v65 = v57[2];
          v64 = v57[3];
          if (v65 >= v64 >> 1)
            v57 = sub_10013F75C((_QWORD *)(v64 > 1), v65 + 1, 1, v57);
          v57[2] = v65 + 1;
          v66 = &v57[2 * v65];
          v66[4] = v60;
          v66[5] = v62;
        }
        v54 += v55;
        --v52;
      }
      while (v52);
      v51 = v89;
      swift_bridgeObjectRelease(v89);
      v5 = v94;
      v14 = v97;
    }
    else
    {
      v57 = _swiftEmptyArrayStorage;
    }
    v99[0] = (uint64_t)v57;
    v67 = sub_100047110((uint64_t *)&unk_10081E160);
    v68 = sub_100028384((unint64_t *)&qword_10082BC00, (uint64_t *)&unk_10081E160, (uint64_t)&protocol conformance descriptor for [A]);
    v94 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v67, v68);
    v92 = v69;
    swift_bridgeObjectRelease(v57);
    v99[0] = (uint64_t)_swiftEmptyArrayStorage;
    v70 = v51[2];
    v71 = swift_bridgeObjectRetain(v51);
    if (v70)
    {
      v72 = 0;
      v73 = (char *)v51 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v98 = *(char **)(v5 + 72);
      v95 = *(char **)(v5 + 16);
      v74 = v96;
      v75 = v5;
      v76 = v86;
      do
      {
        v77 = &v93[*(int *)(v14 + 48)];
        ((void (*)(char *, char *, uint64_t, __n128))v95)(v77, v73, v74, v71);
        v78 = (char *)v76 + *(int *)(v14 + 48);
        *v76 = v72;
        (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v78, v77, v74);
        v79 = (unint64_t)v78;
        v14 = v97;
        sub_10053463C(v72, v79, a2, (unint64_t *)v99);
        sub_10001BE90((uint64_t)v76, (uint64_t *)&unk_100839700);
        v73 = &v98[(_QWORD)v73];
        ++v72;
      }
      while (v70 != v72);
      v53 = (_QWORD *)v99[0];
      v51 = v89;
    }
    swift_bridgeObjectRelease_n(v51, 2);
    swift_bridgeObjectRetain(v53);
    sub_100148ADC(v80);
    v81 = swift_bridgeObjectRelease(v53);
    v82 = static Date.now.getter(v81);
    v83 = static String.random()(v82);
    Playlist.init(identifier:name:items:dateCreated:)(v83);
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v100);
    return;
  }
  v84 = a1;
  v85 = a2;
  v21 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v22 = *(_QWORD *)(v5 + 72);
  v89 = *(_QWORD **)(v5 + 16);
  v23 = swift_bridgeObjectRetain(a1);
  v24 = v95;
  v25 = v96;
  while (1)
  {
    v28 = (void (*)(char *, char *, uint64_t))v89;
    v29 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v89)(v24, v21, v25, v23);
    v30 = CatalogWorkout.identifier.getter(v29);
    v32 = v31;
    v28(v98, v24, v25);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
    v99[0] = v19;
    v35 = sub_100438F74(v30, v32);
    v36 = *(_QWORD *)(v19 + 16);
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (*(_QWORD *)(v19 + 24) >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v42 = (_QWORD *)v99[0];
        if ((v34 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_100403774();
        v42 = (_QWORD *)v99[0];
        if ((v39 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1003FBB4C(v38, isUniquelyReferenced_nonNull_native);
      v40 = sub_100438F74(v30, v32);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_36;
      v35 = v40;
      v42 = (_QWORD *)v99[0];
      if ((v39 & 1) != 0)
      {
LABEL_3:
        v26 = v42[7] + v35 * v22;
        v5 = v94;
        v25 = v96;
        (*(void (**)(unint64_t, char *, uint64_t))(v94 + 40))(v26, v98, v96);
        goto LABEL_4;
      }
    }
    v42[(v35 >> 6) + 8] |= 1 << v35;
    v43 = (uint64_t *)(v42[6] + 16 * v35);
    *v43 = v30;
    v43[1] = v32;
    v44 = v42[7] + v35 * v22;
    v5 = v94;
    v25 = v96;
    (*(void (**)(unint64_t, char *, uint64_t))(v94 + 32))(v44, v98, v96);
    v45 = v42[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_35;
    v42[2] = v47;
    swift_bridgeObjectRetain(v32);
LABEL_4:
    v19 = v99[0];
    swift_bridgeObjectRelease(v32);
    v27 = swift_bridgeObjectRelease(0x8000000000000000);
    v24 = v95;
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v95, v25, v27);
    v21 += v22;
    if (!--v20)
    {
      swift_bridgeObjectRelease(v84);
      a2 = v85;
      v14 = v97;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10053463C(unint64_t a1, unint64_t a2, char *a3, unint64_t *a4)
{
  unint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t *v43;
  id v44;
  _BYTE v45[40];

  v9 = type metadata accessor for PlaylistItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (unint64_t *)((char *)&v40 - v14);
  v16 = type metadata accessor for FitnessPlusStackViewModel(0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = *(int *)(v16 + 20);
  v18 = *(_QWORD *)&a3[v17];
  if (*(_QWORD *)(v18 + 16) <= a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v43 = v15;
  sub_1000252E0(v18 + 40 * a1 + 32, (uint64_t)v45);
  v19 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v20 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  result = swift_dynamicCast(&v44, v45, v19, v20, 6);
  if ((_DWORD)result)
  {
    v22 = v12;
    v41 = v9;
    v42 = a4;
    v23 = v44;
    v24 = (uint64_t)objc_msgSend(v44, "workoutActivityType");

    goto LABEL_8;
  }
  v25 = *(_QWORD *)&a3[v17];
  if (*(_QWORD *)(v25 + 16) <= a1)
  {
    __break(1u);
    return result;
  }
  sub_1000252E0(v25 + 40 * a1 + 32, (uint64_t)v45);
  v26 = type metadata accessor for MindfulnessSessionViewModel(0);
  result = swift_dynamicCast(&v44, v45, v19, v26, 6);
  if ((result & 1) != 0)
  {
    v22 = v12;
    v41 = v9;
    v42 = a4;

    v24 = 29;
LABEL_8:
    v27 = CatalogWorkout.identifier.getter();
    v29 = v28;
    v30 = CatalogWorkout.mediaType.getter();
    v32 = v31;
    v34 = v33 & 1;
    v35 = CatalogWorkout.duration.getter(v30);
    v36 = v27;
    v4 = v43;
    PlaylistItem.init(identifier:index:healthKitActivityType:mediaType:duration:)(v36, v29, a1, v24, v30, v32, v34, v35);
    a3 = v22;
    v9 = v41;
    (*(void (**)(char *, unint64_t *, uint64_t))(v10 + 16))(v22, v4, v41);
    v15 = v42;
    a2 = *v42;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
    *v15 = a2;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_9:
      v39 = *(_QWORD *)(a2 + 16);
      v38 = *(_QWORD *)(a2 + 24);
      if (v39 >= v38 >> 1)
      {
        a2 = sub_100141A5C(v38 > 1, v39 + 1, 1, a2);
        *v15 = a2;
      }
      *(_QWORD *)(a2 + 16) = v39 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(a2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v39, a3, v9);
      return (*(uint64_t (**)(unint64_t *, uint64_t))(v10 + 8))(v4, v9);
    }
LABEL_15:
    a2 = sub_100141A5C(0, *(_QWORD *)(a2 + 16) + 1, 1, a2);
    *v15 = a2;
    goto LABEL_9;
  }
  return result;
}

void *sub_1005348FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *result;
  void *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  void *v41;
  unint64_t v42;
  id v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  void (*v47)(uint64_t (*)(), uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = sub_100047110((uint64_t *)&unk_100836170);
  v70 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v54 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for NavigationRoutingBehavior(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NavigationSource(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v63 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v6);
  v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NavigationPriority(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v59 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NavigationIntent(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NavigationResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NavigationRequest(0);
  v68 = *(_QWORD *)(v17 - 8);
  v69 = v17;
  __chkstk_darwin(v17);
  v67 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Logger(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v0;
  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, "navigateToSeymourTab");
    if ((_DWORD)v26)
    {
      v52 = v25;
      v53 = v1;
      static Log.default.getter(v26);
      v27._countAndFlagsBits = 0xD000000000000059;
      v27._object = (void *)0x8000000100690C90;
      v28._object = (void *)0x80000001006A4BC0;
      v28._countAndFlagsBits = 0xD000000000000017;
      Logger.trace(file:function:)(v27, v28);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      v29 = *(_QWORD **)(v23 + OBJC_IVAR___CHFitnessAppContext_navigator);
      v30 = v29[14];
      v31 = v29[15];
      sub_100016804(v29 + 11, v30);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v30, v31);
      v32 = enum case for NavigationRootResourceState.automatic(_:);
      v33 = type metadata accessor for NavigationRootResourceState(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v16, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for NavigationResource.root(_:), v13);
      *v12 = 0;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v55 + 104))(v12, enum case for NavigationIntent.reset(_:), v56);
      v34 = v59;
      v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v57 + 104))(v59, enum case for NavigationPriority.takeover(_:), v58);
      v36 = v60;
      static NavigationAnnotation.tabSwitch.getter(v35);
      v37 = v63;
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, enum case for NavigationSource.default(_:), v62);
      v38 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v65, enum case for NavigationRoutingBehavior.default(_:), v66);
      v39 = v67;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v16, v12, v37, v38, v34, v36);
      v40 = sub_100016804(v29 + 6, v29[9]);
      v41 = (void *)*v40;
      v42 = v40[1];
      if ((v42 & 0x8000000000000000) != 0)
      {
        v45 = swift_retain(*v40);
        v44 = v54;
        AppCoordinator.navigateToRequest(_:)(v39, v45);
        sub_1001B9E74(v41, v42);
      }
      else
      {
        v43 = v41;
        v44 = v54;
        BrowsingViewController.navigateToRequest(_:)(v39);

      }
      v46 = v53;
      v47 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v53);
      v49 = v48;
      v50 = swift_allocObject(&unk_1007A7AA8, 32, 7);
      *(_QWORD *)(v50 + 16) = 0;
      *(_QWORD *)(v50 + 24) = 0;
      v47(sub_1001104CC, v50);
      swift_unknownObjectRelease(v52);
      swift_release(v49);
      v51 = swift_release(v50);
      (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v44, v46, v51);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v39, v69);
    }
    else
    {
      return (void *)swift_unknownObjectRelease(v25);
    }
  }
  return result;
}

uint64_t sub_100534DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  void *v36;
  unint64_t v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t (*)(), uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;

  v78 = sub_100047110((uint64_t *)&unk_100836170);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v75 = (char *)&v63 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v80 = (char *)&v63 - v2;
  __chkstk_darwin(v3);
  v76 = (char *)&v63 - v4;
  v73 = v5;
  __chkstk_darwin(v6);
  v77 = (char *)&v63 - v7;
  v79 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v79);
  v69 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationPriority(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v66 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationRoutingBehavior(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v63 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NavigationSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NavigationIntent(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for NavigationResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for NavigationRequest(0);
  v71 = *(_QWORD *)(v25 - 8);
  v72 = v25;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v22 + 104))(v24, enum case for NavigationResource.workoutPlanCreation(_:), v21, v26);
  *v20 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for NavigationIntent.presentModal(_:), v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for NavigationSource.default(_:), v13);
  v29 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, enum case for NavigationRoutingBehavior.default(_:), v65);
  v30 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, enum case for NavigationPriority.default(_:), v68);
  v81 = &_swiftEmptyArrayStorage;
  v31 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v32 = sub_100047110(&qword_100836180);
  v33 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v81, v32, v33, v79, v31);
  v79 = (uint64_t)v28;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v24, v20, v16, v29, v30, v34);
  v35 = sub_100016804((_QWORD *)(*(_QWORD *)((char *)v70 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(_QWORD *)(*(_QWORD *)((char *)v70 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
  v36 = (void *)*v35;
  v37 = v35[1];
  if ((v37 & 0x8000000000000000) != 0)
  {
    v39 = swift_retain(*v35);
    AppCoordinator.navigateToRequest(_:)(v79, v39);
    sub_1001B9E74(v36, v37);
  }
  else
  {
    v38 = v36;
    BrowsingViewController.navigateToRequest(_:)(v79);

  }
  v40 = swift_allocObject(&unk_1007A79E0, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_100530EEC;
  *(_QWORD *)(v40 + 24) = 0;
  v41 = v74;
  v42 = v75;
  v70 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v43 = v80;
  v44 = v78;
  v70(v75, v80, v78);
  v45 = *(unsigned __int8 *)(v41 + 80);
  v46 = (v45 + 16) & ~v45;
  v69 = (char *)(v45 | 7);
  v47 = ((unint64_t)v73 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject(&unk_1007A7A08, v47 + 16, v45 | 7);
  v73 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
  v73(v48 + v46, v42, v44);
  v49 = (_QWORD *)(v48 + v47);
  *v49 = sub_10046BB10;
  v49[1] = v40;
  v50 = v76;
  Promise.init(asyncOperation:)(sub_10016AEF8, v48, (char *)&type metadata for () + 8);
  v51 = *(void (**)(char *, uint64_t))(v41 + 8);
  v51(v43, v44);
  v52 = v51;
  v53 = swift_allocObject(&unk_1007A7A30, 32, 7);
  *(_QWORD *)(v53 + 16) = sub_1005353FC;
  *(_QWORD *)(v53 + 24) = 0;
  v70(v42, v50, v44);
  v54 = swift_allocObject(&unk_1007A7A58, v47 + 16, v69);
  v73(v54 + v46, v42, v44);
  v55 = (_QWORD *)(v54 + v47);
  *v55 = sub_1001104C4;
  v55[1] = v53;
  v56 = v77;
  Promise.init(asyncOperation:)(sub_100110010, v54, (char *)&type metadata for () + 8);
  v52(v50, v44);
  v57 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v44);
  v59 = v58;
  v60 = swift_allocObject(&unk_1007A7A80, 32, 7);
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  v57(sub_1001104CC, v60);
  swift_release(v59);
  v61 = swift_release(v60);
  ((void (*)(char *, uint64_t, __n128))v52)(v56, v44, v61);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v79, v72);
}

uint64_t sub_1005353FC(uint64_t a1)
{
  return sub_100535A6C(a1, "Failed to navigate to create plan: %@");
}

uint64_t sub_10053544C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  void *v36;
  unint64_t v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t (**v49)(uint64_t);
  char *v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t (*)(), uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;

  v78 = sub_100047110((uint64_t *)&unk_100836170);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v75 = (char *)&v63 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v80 = (char *)&v63 - v2;
  __chkstk_darwin(v3);
  v76 = (char *)&v63 - v4;
  v73 = v5;
  __chkstk_darwin(v6);
  v77 = (char *)&v63 - v7;
  v79 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v79);
  v69 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationPriority(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v66 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationRoutingBehavior(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v63 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NavigationSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NavigationIntent(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for NavigationResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for NavigationRequest(0);
  v71 = *(_QWORD *)(v25 - 8);
  v72 = v25;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v22 + 104))(v24, enum case for NavigationResource.workoutPlanDetail(_:), v21, v26);
  *v20 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for NavigationIntent.push(_:), v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for NavigationSource.default(_:), v13);
  v29 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, enum case for NavigationRoutingBehavior.default(_:), v65);
  v30 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, enum case for NavigationPriority.default(_:), v68);
  v81 = &_swiftEmptyArrayStorage;
  v31 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v32 = sub_100047110(&qword_100836180);
  v33 = sub_100028384((unint64_t *)&qword_1008396F0, &qword_100836180, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v81, v32, v33, v79, v31);
  v79 = (uint64_t)v28;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v24, v20, v16, v29, v30, v34);
  v35 = sub_100016804((_QWORD *)(*(_QWORD *)((char *)v70 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(_QWORD *)(*(_QWORD *)((char *)v70 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
  v36 = (void *)*v35;
  v37 = v35[1];
  if ((v37 & 0x8000000000000000) != 0)
  {
    v39 = swift_retain(*v35);
    AppCoordinator.navigateToRequest(_:)(v79, v39);
    sub_1001B9E74(v36, v37);
  }
  else
  {
    v38 = v36;
    BrowsingViewController.navigateToRequest(_:)(v79);

  }
  v40 = swift_allocObject(&unk_1007A7918, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_100530F08;
  *(_QWORD *)(v40 + 24) = 0;
  v41 = v74;
  v42 = v75;
  v70 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v43 = v80;
  v44 = v78;
  v70(v75, v80, v78);
  v45 = *(unsigned __int8 *)(v41 + 80);
  v46 = (v45 + 16) & ~v45;
  v69 = (char *)(v45 | 7);
  v47 = ((unint64_t)v73 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject(&unk_1007A7940, v47 + 16, v45 | 7);
  v73 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
  v73(v48 + v46, v42, v44);
  v49 = (uint64_t (**)(uint64_t))(v48 + v47);
  *v49 = sub_10016AEE4;
  v49[1] = (uint64_t (*)(uint64_t))v40;
  v50 = v76;
  Promise.init(asyncOperation:)(sub_10016AEF8, v48, (char *)&type metadata for () + 8);
  v51 = *(void (**)(char *, uint64_t))(v41 + 8);
  v51(v43, v44);
  v52 = v51;
  v53 = swift_allocObject(&unk_1007A7968, 32, 7);
  *(_QWORD *)(v53 + 16) = sub_100535A50;
  *(_QWORD *)(v53 + 24) = 0;
  v70(v42, v50, v44);
  v54 = swift_allocObject(&unk_1007A7990, v47 + 16, v69);
  v73(v54 + v46, v42, v44);
  v55 = (_QWORD *)(v54 + v47);
  *v55 = sub_1001104C4;
  v55[1] = v53;
  v56 = v77;
  Promise.init(asyncOperation:)(sub_100110010, v54, (char *)&type metadata for () + 8);
  v52(v50, v44);
  v57 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v44);
  v59 = v58;
  v60 = swift_allocObject(&unk_1007A79B8, 32, 7);
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  v57(sub_1001104CC, v60);
  swift_release(v59);
  v61 = swift_release(v60);
  ((void (*)(char *, uint64_t, __n128))v52)(v56, v44, v61);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v79, v72);
}

uint64_t sub_100535A50(uint64_t a1)
{
  return sub_100535A6C(a1, "Failed to navigate to plan detail: %@");
}

uint64_t sub_100535A6C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v9);
  swift_errorRetain(a1);
  v10 = swift_errorRetain(a1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v21 = v5;
    v13 = swift_slowAlloc(12, -1);
    v22 = v2;
    v14 = (uint8_t *)v13;
    v19 = (uint64_t *)swift_slowAlloc(8, -1);
    v20 = a2;
    *(_DWORD *)v14 = 138412290;
    swift_errorRetain(a1);
    v15 = _swift_stdlib_bridgeErrorToNSError(a1);
    v23 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4);
    v16 = v19;
    *v19 = v15;
    v5 = v21;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v20, v14, 0xCu);
    v17 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v16, 1, v17);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_100535C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  void *result;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  unint64_t v33;
  id v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  void (*v38)(uint64_t (*)(), uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a1;
  v2 = sub_100047110((uint64_t *)&unk_100836170);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin(v2);
  v44 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NavigationAnnotation(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NavigationRequest(0);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  __chkstk_darwin(v6);
  v50 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TrainerTipsGalleryNavigationBegan(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR___CHFitnessAppContext_eventHub + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR___CHFitnessAppContext_eventHub));
  TrainerTipsGalleryNavigationBegan.init()();
  v17 = sub_1000083D8(&qword_1008364D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan, (uint64_t)&protocol conformance descriptor for TrainerTipsGalleryNavigationBegan);
  dispatch thunk of EventHubProtocol.publish<A>(_:)(v14, v11, v17, ObjectType, v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  result = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "navigateToSeymourTab");
    if ((_DWORD)v20)
    {
      static Log.default.getter(v20);
      v21._countAndFlagsBits = 0xD000000000000059;
      v21._object = (void *)0x8000000100690C90;
      v22._object = (void *)0x80000001006A4B90;
      v22._countAndFlagsBits = 0xD000000000000029;
      Logger.trace(file:function:)(v21, v22);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v45);
      v23 = *(_QWORD **)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator);
      v24 = v23[14];
      v25 = v23[15];
      sub_100016804(v23 + 11, v24);
      v26 = dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v24, v25);
      v27 = *(void **)v49;
      v28 = *(void **)(v49 + 8);
      v29 = (uint64_t)v46;
      static NavigationAnnotation.tabSwitch.getter(v26);
      v30 = v50;
      sub_1004B04B8(v27, v28, v29, v50);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v29, v48);
      v31 = sub_100016804(v23 + 6, v23[9]);
      v32 = (void *)*v31;
      v33 = v31[1];
      if ((v33 & 0x8000000000000000) != 0)
      {
        v36 = swift_retain(*v31);
        v35 = v44;
        AppCoordinator.navigateToRequest(_:)(v30, v36);
        sub_1001B9E74(v32, v33);
      }
      else
      {
        v34 = v32;
        v35 = v44;
        BrowsingViewController.navigateToRequest(_:)(v30);

      }
      v37 = v54;
      v38 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v54);
      v40 = v39;
      v41 = swift_allocObject(&unk_1007A78F0, 32, 7);
      *(_QWORD *)(v41 + 16) = 0;
      *(_QWORD *)(v41 + 24) = 0;
      v38(sub_1001104CC, v41);
      swift_unknownObjectRelease(v19);
      swift_release(v40);
      v42 = swift_release(v41);
      (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v35, v37, v42);
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v30, v52);
    }
    else
    {
      return (void *)swift_unknownObjectRelease(v19);
    }
  }
  return result;
}

uint64_t sub_100536020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081E640);
  v40 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v40 + 64);
  v11 = __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - v13;
  v15 = sub_100047110(&qword_10082E5E0);
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD000000000000018, 0x800000010068FBD0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v18(v17, 1, v5))
  {
    v19 = sub_100047110(&qword_1008396C0);
    v38 = v8;
    v20 = v19;
    v21 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
    v22 = *(_QWORD *)(v21 + 72);
    v23 = *(unsigned __int8 *)(v21 + 80);
    v39 = v1;
    v24 = swift_allocObject(v20, ((v23 + 32) & ~v23) + v22, v23 | 7);
    *(_OWORD *)(v24 + 16) = xmmword_100622F90;
    v1 = v39;
    URLQueryItem.init(name:value:)(0x696669746E656469, 0xEA00000000007265, 0x756F59726F66, 0xE600000000000000);
    URLComponents.queryItems.setter(v24);
    v8 = v38;
  }
  if (v18(v17, 1, v5))
  {
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  }
  else
  {
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, v17, v5);
    URLComponents.url.getter(v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v27 = *(_QWORD **)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator);
  v28 = v27[14];
  v29 = v27[15];
  sub_100016804(v27 + 11, v28);
  dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v28, v29);
  v30 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
  sub_10053881C((uint64_t)v14, (uint64_t)v12);
  v31 = *(unsigned __int8 *)(v40 + 80);
  v32 = (uint64_t)v4;
  v33 = (v31 + 32) & ~v31;
  v34 = swift_allocObject(&unk_1007A78B0, v33 + v10, v31 | 7);
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = 0;
  sub_10051DC6C((uint64_t)v12, v34 + v33);
  v35 = sub_10020D9C0(v32, (uint64_t)&unk_1008396D0, v34);
  swift_release(v35);
  sub_10001BE90((uint64_t)v14, &qword_10081E640);
  return sub_10001BE90((uint64_t)v17, &qword_10082E5E0);
}

uint64_t sub_10053637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = sub_100047110(&qword_10081E640);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v4[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100536400, 0, 0);
}

uint64_t sub_100536400(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1[18];
  v2 = v1[19];
  v4 = v1[17];
  static Log.default.getter(a1);
  v5._countAndFlagsBits = 0xD000000000000059;
  v5._object = (void *)0x8000000100690C90;
  v6._object = (void *)0x80000001006A4B70;
  v6._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1[20] = objc_opt_self(UIApplication);
  v7 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005364D8, v8, v9);
}

uint64_t sub_1005364D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = objc_msgSend(*(id *)(v0 + 160), "sharedApplication", swift_release(*(_QWORD *)(v0 + 168)).n128_f64[0]);
  return swift_task_switch(sub_100536530, 0, 0);
}

uint64_t sub_100536530()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  NSURL *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[16];
  sub_10053881C(v0[15], v1);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = 0;
  if (v4 != 1)
  {
    v7 = v0[16];
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
  }
  v9 = v0 + 2;
  v0[23] = v6;
  v10 = (void *)v0[22];
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_100536630;
  v11 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v12 = v0 + 10;
  v12[1] = 0x40000000;
  v12[2] = sub_1003123B4;
  v12[3] = &unk_1007A78C8;
  v12[4] = v11;
  objc_msgSend(v10, "openURL:withCompletionHandler:", v6, v12);
  return swift_continuation_await(v9);
}

uint64_t sub_100536630()
{
  return swift_task_switch(sub_10053667C, 0, 0);
}

uint64_t sub_10053667C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005366D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v43 = a1;
  v44 = a2;
  v4 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_10081E640);
  v45 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v45 + 64);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - v15;
  v17 = sub_100047110(&qword_10082E5E0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD00000000000001CLL, 0x80000001006A4B20);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v20(v19, 1, v7))
  {
    v21 = sub_100047110(&qword_1008396C0);
    v39 = v10;
    v22 = v21;
    v23 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
    v41 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v42 = v6;
    v24 = *(_QWORD *)(v23 + 72);
    v25 = *(unsigned __int8 *)(v23 + 80);
    v40 = v3;
    v26 = swift_allocObject(v22, ((v25 + 32) & ~v25) + 3 * v24, v25 | 7);
    *(_OWORD *)(v26 + 16) = xmmword_100624A40;
    URLQueryItem.init(name:value:)(0x656372756F736572, 0xE800000000000000, 0x74756F6B726F77, 0xE700000000000000);
    v6 = v42;
    URLQueryItem.init(name:value:)(0x696669746E656469, 0xEA00000000007265, v43, v44);
    v3 = v40;
    v13 = v41;
    URLQueryItem.init(name:value:)(1953460082, 0xE400000000000000, 0x756F59726F66, 0xE600000000000000);
    URLComponents.queryItems.setter(v26);
    v10 = v39;
  }
  if (v20(v19, 1, v7))
  {
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
  }
  else
  {
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v19, v7);
    URLComponents.url.getter(v28);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v29 = *(_QWORD **)(v3 + OBJC_IVAR___CHFitnessAppContext_navigator);
  v30 = v29[14];
  v31 = v29[15];
  sub_100016804(v29 + 11, v30);
  dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v30, v31);
  v32 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
  sub_10053881C((uint64_t)v16, (uint64_t)v13);
  v33 = *(unsigned __int8 *)(v45 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = swift_allocObject(&unk_1007A7870, v34 + v12, v33 | 7);
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  sub_10051DC6C((uint64_t)v13, v35 + v34);
  v36 = sub_10020D9C0((uint64_t)v6, (uint64_t)&unk_1008396B8, v35);
  swift_release(v36);
  sub_10001BE90((uint64_t)v16, &qword_10081E640);
  return sub_10001BE90((uint64_t)v19, &qword_10082E5E0);
}

uint64_t sub_100536A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = sub_100047110(&qword_10081E640);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v4[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100536AFC, 0, 0);
}

uint64_t sub_100536AFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1[18];
  v2 = v1[19];
  v4 = v1[17];
  static Log.default.getter(a1);
  v5._countAndFlagsBits = 0xD000000000000059;
  v5._object = (void *)0x8000000100690C90;
  v6._object = (void *)0x80000001006A4B40;
  v6._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1[20] = objc_opt_self(UIApplication);
  v7 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100536BD4, v8, v9);
}

uint64_t sub_100536BD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = objc_msgSend(*(id *)(v0 + 160), "sharedApplication", swift_release(*(_QWORD *)(v0 + 168)).n128_f64[0]);
  return swift_task_switch(sub_100536C2C, 0, 0);
}

uint64_t sub_100536C2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  NSURL *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[16];
  sub_10053881C(v0[15], v1);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = 0;
  if (v4 != 1)
  {
    v7 = v0[16];
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
  }
  v9 = v0 + 2;
  v0[23] = v6;
  v10 = (void *)v0[22];
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_100536D2C;
  v11 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v12 = v0 + 10;
  v12[1] = 0x40000000;
  v12[2] = sub_1003123B4;
  v12[3] = &unk_1007A7888;
  v12[4] = v11;
  objc_msgSend(v10, "openURL:withCompletionHandler:", v6, v12);
  return swift_continuation_await(v9);
}

uint64_t sub_100536D2C()
{
  return swift_task_switch(sub_100538F2C, 0, 0);
}

uint64_t sub_100536D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (Strong
    && (v11 = Strong,
        v12 = objc_msgSend(Strong, "navigateToSeymourTab"),
        Strong = (void *)swift_unknownObjectRelease(v11),
        v12))
  {
    v13 = static Log.default.getter(Strong);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v45 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = _typeName(_:qualified:)(ObjectType, 0);
      v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
      v44 = sub_10003E8EC(v18, v19, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v16 + 4);
      swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s received MultiUserBeginActivityRequested; navigating to Seymour tab",
        v16,
        0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    v29 = static Log.default.getter(Strong);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v45 = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = _typeName(_:qualified:)(ObjectType, 0);
      v36 = (CHWorkoutDetailHeartRateTableViewCell *)v35;
      v44 = sub_10003E8EC(v34, v35, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v32 + 4);
      swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s received MultiUserBeginActivityRequested but failed navigating to Seymour tab", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_100537070@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  v7 = (void *)result;
  if (result)
  {
    v8 = *(_QWORD *)(result + OBJC_IVAR___CHFitnessAppContext_playlists);
    *(_QWORD *)(result + OBJC_IVAR___CHFitnessAppContext_playlists) = v4;
    swift_bridgeObjectRetain(v4);

    result = swift_bridgeObjectRelease(v8);
  }
  *a3 = v7 == 0;
  return result;
}

uint64_t sub_100537108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  Swift::String v32;
  Swift::String v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _BYTE *Strong;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  void *v48;
  id v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  unint64_t v69;
  void *v70;
  id v71;
  char *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t (*)(), uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  __n128 v81;
  uint64_t v82;
  void (*v83)(uint64_t (*)(), uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  id v88;
  uint64_t v89;
  char *v90;
  Swift::String v91;
  Swift::String v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  __n128 v97;
  char *v98;
  uint64_t v99;
  uint64_t ObjectType;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t (*)(), uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t result;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v134 = a1;
  v118 = type metadata accessor for BadgingCountsUpdated(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110((uint64_t *)&unk_100836170);
  v136 = *(_QWORD *)(v3 - 8);
  v137 = v3;
  v4 = __chkstk_darwin(v3);
  v135 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v111 = (char *)&v111 - v7;
  __chkstk_darwin(v6);
  v112 = (char *)&v111 - v8;
  v9 = type metadata accessor for NavigationRoutingBehavior(0);
  v129 = *(_QWORD *)(v9 - 8);
  v130 = v9;
  __chkstk_darwin(v9);
  v131 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for NavigationSource(0);
  v124 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v128 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v12);
  v127 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NavigationPriority(0);
  v120 = *(_QWORD *)(v14 - 8);
  v121 = v14;
  __chkstk_darwin(v14);
  v125 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for NavigationIntent(0);
  v16 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v18 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for NavigationResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for NavigationRequest(0);
  v132 = *(_QWORD *)(v23 - 8);
  v133 = v23;
  v24 = __chkstk_darwin(v23);
  v122 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v123 = (char *)&v111 - v26;
  v27 = type metadata accessor for Logger(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v29);
  v32._countAndFlagsBits = 0xD00000000000001ELL;
  v33._countAndFlagsBits = 0xD000000000000059;
  v33._object = (void *)0x8000000100690C90;
  v32._object = (void *)0x80000001006A4B00;
  Logger.trace(file:function:)(v33, v32);
  v34 = *(void (**)(char *, uint64_t))(v28 + 8);
  v115 = v27;
  v114 = v34;
  v34(v31, v27);
  v138 = v1;
  v35 = v1 + OBJC_IVAR___CHFitnessAppContext_appBadgeAggregator;
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___CHFitnessAppContext_appBadgeAggregator);
  if (Strong)
  {
    Strong[OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour] = 1;

  }
  if (v134)
  {
    v113 = v35;
    if (v134 == 2)
    {
      v37 = enum case for NavigationRootResourceState.automatic(_:);
      v38 = type metadata accessor for NavigationRootResourceState(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v22, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for NavigationResource.root(_:), v19);
      *v18 = 0;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for NavigationIntent.reset(_:), v119);
      v39 = v125;
      v40 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v120 + 104))(v125, enum case for NavigationPriority.default(_:), v121);
      v41 = v127;
      static NavigationAnnotation.tabReselection.getter(v40);
      v42 = v128;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v128, enum case for NavigationSource.default(_:), v126);
      v43 = v131;
      (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v131, enum case for NavigationRoutingBehavior.default(_:), v130);
      v44 = v122;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v22, v18, v42, v43, v39, v41);
      v45 = v138;
      v46 = sub_100016804((_QWORD *)(*(_QWORD *)(v138 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(_QWORD *)(*(_QWORD *)(v138 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
      v48 = (void *)*v46;
      v47 = v46[1];
      if ((v47 & 0x8000000000000000) != 0)
      {
        v73 = swift_retain(*v46);
        v50 = v111;
        AppCoordinator.navigateToRequest(_:)(v44, v73);
        sub_1001B9E74(v48, v47);
      }
      else
      {
        v49 = v48;
        v50 = v111;
        BrowsingViewController.navigateToRequest(_:)(v44);

      }
      v74 = v136;
      v54 = v137;
      v56 = v135;
      v75 = v132;
      v76 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v137);
      v78 = v77;
      v79 = swift_allocObject(&unk_1007A7758, 32, 7);
      *(_QWORD *)(v79 + 16) = 0;
      *(_QWORD *)(v79 + 24) = 0;
      v76(sub_1001104CC, v79);
      swift_release(v78);
      v80 = swift_release(v79);
      (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v50, v54, v80);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v122, v133);
      v35 = v113;
    }
    else
    {
      if (v134 != 1)
      {
        v139 = v134;
        result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for TabSelection, &v139, &type metadata for TabSelection, &type metadata for Int);
        __break(1u);
        return result;
      }
      v57 = *(_QWORD **)(v138 + OBJC_IVAR___CHFitnessAppContext_navigator);
      v58 = v57[14];
      v59 = v57[15];
      sub_100016804(v57 + 11, v58);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v58, v59);
      v60 = enum case for NavigationRootResourceState.automatic(_:);
      v61 = type metadata accessor for NavigationRootResourceState(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v22, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for NavigationResource.root(_:), v19);
      *v18 = 0;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for NavigationIntent.reset(_:), v119);
      v62 = v125;
      v63 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v120 + 104))(v125, enum case for NavigationPriority.default(_:), v121);
      v64 = v127;
      static NavigationAnnotation.tabSwitch.getter(v63);
      v65 = v128;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v128, enum case for NavigationSource.default(_:), v126);
      v66 = v131;
      (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v131, enum case for NavigationRoutingBehavior.default(_:), v130);
      v67 = v123;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v22, v18, v65, v66, v62, v64);
      v68 = sub_100016804(v57 + 6, v57[9]);
      v70 = (void *)*v68;
      v69 = v68[1];
      if ((v69 & 0x8000000000000000) != 0)
      {
        v81 = swift_retain(*v68);
        v72 = v112;
        AppCoordinator.navigateToRequest(_:)(v67, v81);
        sub_1001B9E74(v70, v69);
      }
      else
      {
        v71 = v70;
        v72 = v112;
        BrowsingViewController.navigateToRequest(_:)(v67);

      }
      v74 = v136;
      v54 = v137;
      v56 = v135;
      v82 = v132;
      v35 = v113;
      v83 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v137);
      v85 = v84;
      v86 = swift_allocObject(&unk_1007A7780, 32, 7);
      *(_QWORD *)(v86 + 16) = 0;
      *(_QWORD *)(v86 + 24) = 0;
      v83(sub_1001104CC, v86);
      swift_release(v85);
      v87 = swift_release(v86);
      (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v72, v54, v87);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v123, v133);
      v45 = v138;
    }
    v55 = v74;
  }
  else
  {
    v45 = v138;
    v51 = *(_QWORD **)(v138 + OBJC_IVAR___CHFitnessAppContext_navigator);
    v52 = v51[14];
    v53 = v51[15];
    sub_100016804(v51 + 11, v52);
    dispatch thunk of MetricSceneLifecycleReporting.reportDidBecomeActive()(v52, v53);
    v55 = v136;
    v54 = v137;
    v56 = v135;
  }
  if ((*(_QWORD *)(v45 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8) & 0x8000000000000000) == 0)
  {
    v88 = *(id *)(v45 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
    dispatch thunk of BrowsingViewController.reportTabSelectedEvent()();

  }
  v89 = swift_unknownObjectWeakLoadStrong(v35);
  if (v89)
  {
    v90 = (char *)v89;
    static Log.default.getter(v89);
    v91._countAndFlagsBits = 0xD000000000000065;
    v91._object = (void *)0x800000010068BFB0;
    v92._object = (void *)0x800000010068C020;
    v92._countAndFlagsBits = 0xD000000000000013;
    Logger.trace(file:function:)(v91, v92);
    v114(v31, v115);
    v93 = *(_QWORD *)&v90[OBJC_IVAR___CHFitnessAppBadgeAggregator_appBadgeCount];
    v94 = *(_QWORD *)&v90[OBJC_IVAR___CHFitnessAppBadgeAggregator_fetchedEngagementBadges];
    swift_bridgeObjectRetain(v94);
    v96 = sub_10004C800(v95);
    v97 = swift_bridgeObjectRelease(v94);
    v98 = v116;
    BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)(v93, v96, v97);
    v99 = *(_QWORD *)&v90[OBJC_IVAR___CHFitnessAppBadgeAggregator_eventHub + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v90[OBJC_IVAR___CHFitnessAppBadgeAggregator_eventHub]);
    v101 = v118;
    dispatch thunk of EventHubProtocol.publish<A>(_:)(v98, v118, &protocol witness table for BadgingCountsUpdated, ObjectType, v99);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v98, v101);

  }
  v102 = *(_QWORD **)(v45 + OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider);
  v103 = v102[5];
  v104 = v102[6];
  sub_100016804(v102 + 2, v103);
  dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()(v103, v104);
  v105 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v54);
  v107 = v106;
  v108 = swift_allocObject(&unk_1007A7730, 32, 7);
  *(_QWORD *)(v108 + 16) = 0;
  *(_QWORD *)(v108 + 24) = 0;
  v105(sub_1001104CC, v108);
  swift_release(v107);
  v109 = swift_release(v108);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v55 + 8))(v56, v54, v109);
}

uint64_t sub_100537B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  _BYTE *Strong;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v6);
  v7._countAndFlagsBits = 0xD000000000000059;
  v7._object = (void *)0x8000000100690C90;
  v8._object = (void *)0x80000001006A4AE0;
  v8._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v7, v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___CHFitnessAppContext_appBadgeAggregator);
  if (Strong)
  {
    Strong[OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour] = 0;

  }
  v10 = *(_QWORD **)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator);
  v11 = v10[14];
  v12 = v10[15];
  sub_100016804(v10 + 11, v11);
  return dispatch thunk of MetricSceneLifecycleReporting.reportDidDeselectTab()(v11, v12);
}

void sub_100537CC4(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  Swift::String v14;
  Swift::String v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  static Log.default.getter(v13);
  v14._object = (void *)0x8000000100690C90;
  v14._countAndFlagsBits = 0xD000000000000059;
  v15._countAndFlagsBits = a3;
  v15._object = a4;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16 = *(_QWORD **)&v13[OBJC_IVAR___CHFitnessAppContext_navigator];
  v17 = v16[14];
  v18 = v16[15];
  sub_100016804(v16 + 11, v17);
  a5(v17, v18);

}

uint64_t sub_100537DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t (**v25)(uint64_t *);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  void (*v41)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v48 = a1;
  v49 = a2;
  v5 = sub_100047110((uint64_t *)&unk_100839690);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_100047110((uint64_t *)&unk_100836170);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  v13 = *(_QWORD *)(v52 + 64);
  __chkstk_darwin(v12);
  v51 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v50 = (char *)&v47 - v15;
  v17 = __chkstk_darwin(v16);
  v54 = (char *)&v47 - v18;
  CompletedWorkoutShareItemProvider.activityItems(workout:)(v48, v17);
  v19 = swift_allocObject(&unk_1007A75F0, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  v20 = swift_allocObject(&unk_1007A7618, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100538570;
  *(_QWORD *)(v20 + 24) = v19;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_1007A7640, v23 + 16, v21 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v24 + v22, v8, v5);
  v25 = (uint64_t (**)(uint64_t *))(v24 + v23);
  *v25 = sub_10053872C;
  v25[1] = (uint64_t (*)(uint64_t *))v20;
  v47 = a3;
  swift_retain(a3);
  v26 = v50;
  Promise.init(asyncOperation:)(sub_100538740, v24, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  v27 = swift_allocObject(&unk_1007A7668, 32, 7);
  *(_QWORD *)(v27 + 16) = v49;
  *(_QWORD *)(v27 + 24) = a3;
  v28 = swift_allocObject(&unk_1007A7690, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_100538754;
  *(_QWORD *)(v28 + 24) = v27;
  v30 = v51;
  v29 = v52;
  v31 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v26, v53);
  v32 = *(unsigned __int8 *)(v29 + 80);
  v33 = v29;
  v34 = (v32 + 16) & ~v32;
  v35 = (v13 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject(&unk_1007A76B8, v35 + 16, v32 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v36 + v34, v30, v31);
  v37 = (uint64_t (**)(uint64_t))(v36 + v35);
  *v37 = sub_10010FFFC;
  v37[1] = (uint64_t (*)(uint64_t))v28;
  swift_retain(v47);
  v38 = v54;
  Promise.init(asyncOperation:)(sub_100110010, v36, (char *)&type metadata for () + 8);
  v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v26, v31);
  v40 = v38;
  v41 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v31);
  v43 = v42;
  v44 = swift_allocObject(&unk_1007A76E0, 32, 7);
  *(_QWORD *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = 0;
  v41(sub_100110028, v44);
  swift_release(v43);
  v45 = swift_release(v44);
  return ((uint64_t (*)(char *, uint64_t, __n128))v39)(v40, v31, v45);
}

void sub_1005381AC(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa;
  uint64_t v6;
  id v7;

  isa = a1;
  if (a1)
  {
    sub_10001E724(0, &qword_100839720, UIActivityItemProvider_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2)
    v6 = _convertErrorToNSError(_:)(a2);
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);

}

BOOL sub_100538240()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  _BOOL8 v9;

  v1 = v0 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator;
  v2 = *(void **)(v0 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
  v3 = *(_QWORD *)(v1 + 8);
  if ((v3 & 0x8000000000000000) != 0)
  {
    swift_retain(v2);
    v4 = (id)AppCoordinator.rootViewController.getter(v5);
    sub_1001B9E74(v2, v3);
  }
  else
  {
    v4 = v2;
  }
  v6 = objc_msgSend(v4, "presentedViewController");

  if (!v6)
    goto LABEL_7;
  v7 = type metadata accessor for SessionViewController(0);
  v8 = (void *)swift_dynamicCastClass(v6, v7);
  if (!v8)
  {

LABEL_7:
    v8 = 0;
  }
  v9 = v8 != 0;

  return v9;
}

id sub_10053834C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessAppContext(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10053854C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100538570(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, 0);
}

uint64_t sub_1005385A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject(&unk_1007A7848, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain(v5);
  swift_retain(a3);
  v7 = sub_100047110(&qword_1008282F0);
  return Promise.init(asyncOperation:)(sub_100538810, v6, v7);
}

uint64_t sub_100538628(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(unsigned __int8 *__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;

  v9 = *a5;
  a3(&v8, &v9);
  v6 = v8;
  v9 = v8;
  v10 = 0;
  a1(&v9);
  return sub_100016864(v6, 0);
}

uint64_t sub_1005386A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject(&unk_1007A7708, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain(v5);
  swift_retain(a3);
  return Promise.init(asyncOperation:)(sub_10016B0AC, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10053872C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1005386A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100538734()
{
  return sub_10004BE58((uint64_t *)&unk_100839690);
}

uint64_t sub_100538740(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, (uint64_t *)&unk_100839690, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B3B8);
}

uint64_t sub_100538754(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_100538784()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1005387A4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_100537070(a1, v2, a2);
}

uint64_t sub_1005387BC()
{
  return sub_10004BE58((uint64_t *)&unk_1008396A0);
}

uint64_t sub_1005387C8(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, (uint64_t *)&unk_1008396A0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B348);
}

uint64_t sub_1005387E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100538810(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_100538628(a1, a2, *(void (**)(unsigned __int8 *__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_10053881C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081E640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100538868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(&qword_10081E640) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1008396B4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_100536A78(a1, v5, v6, v7);
}

uint64_t sub_1005388F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100047110(&qword_10081E640) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100538994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(&qword_10081E640) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1008396CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000DA0E4;
  return sub_10053637C(a1, v5, v6, v7);
}

uint64_t sub_100538A20()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100538A2C()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100538A3C()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100538A48()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100538A5C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v1 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[5]), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[6] + 8), v17, v18, v19, v20, v21, v22, v23);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[7] + 8), v24, v25, v26, v27, v28, v29, v30);
  v9(v7 + v1[8], v8);
  v31 = v7 + v1[9];
  v32 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100538B4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusStackViewModel(0) - 8) + 80);
  return sub_100533A80(a1, *(_QWORD *)(v1 + 16), (char *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_100538BA8(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039BFF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100538BB0()
{
  return sub_10004BE58((uint64_t *)&unk_100839710);
}

uint64_t sub_100538BBC(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, (uint64_t *)&unk_100839710, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B2BC);
}

uint64_t sub_100538BE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100538C04(objc_class *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005381AC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100538C0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100538C48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10083972C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000DA0E4;
  return sub_100531EE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100538CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18[3];
  _QWORD v19[5];
  _QWORD v20[5];

  v20[3] = &type metadata for SeymourBrowsingCoordinator;
  v20[4] = sub_100538E3C();
  v20[0] = a4;
  v20[1] = a5;
  v19[3] = &type metadata for SeymourBrowsingCoordinator;
  v19[4] = &off_10078C638;
  v19[0] = a2;
  v19[1] = a3;
  *(_QWORD *)(a7 + 192) = 0;
  swift_unknownObjectWeakInit(a7 + 184, 0);
  v14 = sub_100047110((uint64_t *)&unk_1008361F0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v18, 0, 0, v14);
  *(_QWORD *)(a7 + 16) = *(_QWORD *)&v18[0];
  *(_QWORD *)(a7 + 24) = a1;
  swift_retain(a1);
  v15 = sub_100047110((uint64_t *)&unk_1008361E0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v18, 0, 0, v15);
  *(_OWORD *)(a7 + 32) = v18[0];
  sub_1000252E0((uint64_t)v19, a7 + 48);
  sub_1000252E0((uint64_t)v20, a7 + 88);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v18, 0, 0, &type metadata for Platform);
  *(_BYTE *)(a7 + 128) = v18[0];
  v16 = sub_100047110(&qword_100839748);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v18, 0, 0, v16);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
  sub_10002411C(v18, a7 + 144);
  *(_QWORD *)(a7 + 136) = a6;
  return a7;
}

void sub_100538E2C(uint64_t a1)
{
  uint64_t v1;

  sub_100531C48(a1, v1);
}

void sub_100538E34()
{
  uint64_t v0;

  sub_100531C98(v0);
}

unint64_t sub_100538E3C()
{
  unint64_t result;

  result = qword_100839790;
  if (!qword_100839790)
  {
    result = swift_getWitnessTable(&unk_10062AF6C, &type metadata for SeymourBrowsingCoordinator);
    atomic_store(result, (unint64_t *)&qword_100839790);
  }
  return result;
}

uint64_t sub_100538E80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100538EA4()
{
  uint64_t v0;

  sub_1003937E4(v0);
}

ValueMetadata *type metadata accessor for TabSelection()
{
  return &type metadata for TabSelection;
}

unint64_t sub_100538EC0()
{
  unint64_t result;

  result = qword_1008397C0;
  if (!qword_1008397C0)
  {
    result = swift_getWitnessTable(&unk_100644788, &type metadata for TabSelection);
    atomic_store(result, (unint64_t *)&qword_1008397C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ChartableMetric(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_100538F7C + 4 * byte_1006447B5[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_100538FB0 + 4 * byte_1006447B0[v4]))();
}

uint64_t sub_100538FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100538FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100538FC0);
  return result;
}

uint64_t sub_100538FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100538FD4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_100538FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100538FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChartableMetric()
{
  return &type metadata for ChartableMetric;
}

void sub_100538FFC(char a1)
{
  __asm { BR              X10 }
}

id sub_100539024()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "paceColors");
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x10053928CLL);
  }
  v1 = v0;
  v2 = objc_msgSend(v0, "nonGradientTextColor");

  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x100539070);
  }
  return v2;
}

void sub_1005392D4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100539300()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

_QWORD *sub_10053962C()
{
  void *v0;
  char *v1;
  _QWORD *result;
  unsigned int v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;

  v1 = (char *)objc_msgSend(v0, "effectiveTypeIdentifier") - 13;
  result = _swiftEmptyArrayStorage;
  switch((unint64_t)v1)
  {
    case 0uLL:
      v3 = objc_msgSend(v0, "isIndoor");
      v4 = &off_1007826C0;
      v5 = &off_100782698;
      goto LABEL_11;
    case 0xBuLL:
      return &off_100782738;
    case 0x12uLL:
      return &off_1007828A0;
    case 0x16uLL:
      v3 = objc_msgSend(v0, "isIndoor");
      v4 = &off_100782800;
      v5 = &off_1007827D8;
      goto LABEL_11;
    case 0x18uLL:
      v3 = objc_msgSend(v0, "isIndoor");
      v4 = &off_100782670;
      v5 = &off_100782648;
      goto LABEL_11;
    case 0x1AuLL:
      v3 = objc_msgSend(v0, "isIndoor");
      v4 = &off_100782850;
      v5 = &off_100782828;
      goto LABEL_11;
    case 0x21uLL:
    case 0x45uLL:
      return result;
    case 0x27uLL:
      v3 = objc_msgSend(v0, "isIndoor");
      v4 = &off_100782710;
      v5 = &off_1007826E8;
LABEL_11:
      if (v3)
        result = v5;
      else
        result = v4;
      break;
    case 0x2FuLL:
      result = &off_1007827B0;
      break;
    case 0x30uLL:
    case 0x36uLL:
      result = &off_100782878;
      break;
    case 0x39uLL:
      result = &off_100782760;
      break;
    case 0x3AuLL:
      result = &off_100782788;
      break;
    default:
      result = &off_1007828C8;
      break;
  }
  return result;
}

uint64_t sub_1005397A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1005397D8 + 4 * byte_100644800[a1]))(0x7461527472616568, 0xE900000000000065);
}

uint64_t sub_1005397D8()
{
  return 1701011824;
}

uint64_t sub_1005397E8()
{
  return 0x6F69746176656C65;
}

uint64_t sub_100539800()
{
  return 0x65636E65646163;
}

uint64_t sub_100539818()
{
  return 0x7265776F70;
}

unint64_t sub_10053982C()
{
  return 0xD000000000000011;
}

uint64_t sub_100539848()
{
  return 0x654C656469727473;
}

unint64_t sub_100539868()
{
  return 0xD000000000000013;
}

uint64_t sub_100539888()
{
  return 0x6465657073;
}

uint64_t sub_10053989C()
{
  return 0x53676E696C637963;
}

uint64_t sub_1005398BC()
{
  return 0x50676E696E6E7572;
}

uint64_t sub_1005398DC()
{
  return 0x43676E696C637963;
}

uint64_t sub_100539900(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100539938 + 4 * byte_10064480C[a1]))(0x7461527472616568, 0xE900000000000065);
}

uint64_t sub_100539938()
{
  return 1701011824;
}

uint64_t sub_100539948()
{
  return 0x6F69746176656C65;
}

uint64_t sub_100539960()
{
  return 0x65636E65646163;
}

uint64_t sub_100539978()
{
  return 0x7265776F70;
}

unint64_t sub_10053998C()
{
  return 0xD000000000000011;
}

uint64_t sub_1005399A8()
{
  return 0x654C656469727473;
}

unint64_t sub_1005399C8()
{
  return 0xD000000000000013;
}

uint64_t sub_1005399E8()
{
  return 0x6465657073;
}

uint64_t sub_1005399FC()
{
  return 0x53676E696C637963;
}

uint64_t sub_100539A1C()
{
  return 0x50676E696E6E7572;
}

uint64_t sub_100539A3C()
{
  return 0x43676E696C637963;
}

uint64_t sub_100539A60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v2 = *a2;
  v3 = sub_100539900(*a1);
  v5 = v4;
  v6 = sub_100539900(v2);
  if (v3 == v6 && v5 == (CHWorkoutDetailHeartRateTableViewCell *)v7)
  {
    v16 = 1;
    v15 = v5;
  }
  else
  {
    v15 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  return v16 & 1;
}

Swift::Int sub_100539AE8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  v1 = *v0;
  Hasher.init(_seed:)(v13, 0);
  v2 = sub_100539900(v1);
  v4 = v3;
  String.hash(into:)(v13, v2, v3);
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  return Hasher._finalize()();
}

void sub_100539B48(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = sub_100539900(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
}

Swift::Int sub_100539B88(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v2 = *v1;
  Hasher.init(_seed:)(v14, a1);
  v3 = sub_100539900(v2);
  v5 = v4;
  String.hash(into:)(v14, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  return Hasher._finalize()();
}

unint64_t sub_100539BE4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100539D50(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100539C10@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100539900(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100539C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100539D98();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100539C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100539D98();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100539CE0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1005397A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100539D0C()
{
  unint64_t result;

  result = qword_1008397D0;
  if (!qword_1008397D0)
  {
    result = swift_getWitnessTable(&unk_100644934, &type metadata for ChartableMetric);
    atomic_store(result, (unint64_t *)&qword_1008397D0);
  }
  return result;
}

unint64_t sub_100539D50(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100783360, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xC)
    return 12;
  else
    return v3;
}

unint64_t sub_100539D98()
{
  unint64_t result;

  result = qword_1008397D8;
  if (!qword_1008397D8)
  {
    result = swift_getWitnessTable(&unk_1006448BC, &type metadata for ChartableMetric);
    atomic_store(result, (unint64_t *)&qword_1008397D8);
  }
  return result;
}

uint64_t sub_100539DDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_100539F40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t result;
  void *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[5];
  uint64_t v57;
  char v58[32];

  v53 = a5;
  v54 = a6;
  v24 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v30 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v58, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v32 = (void *)result;
    v33 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithPoints:count:", a4 + 32, *(_QWORD *)(a4 + 16));
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v35 = static OS_dispatch_queue.main.getter(v34);
    v52 = v28;
    v51 = (void *)v35;
    v36 = swift_allocObject(&unk_1007A7ED0, 120, 7);
    *(_QWORD *)(v36 + 16) = a2;
    *(_QWORD *)(v36 + 24) = v32;
    *(_QWORD *)(v36 + 32) = v33;
    *(double *)(v36 + 40) = a7;
    *(double *)(v36 + 48) = a8;
    *(double *)(v36 + 56) = a9;
    *(double *)(v36 + 64) = a10;
    *(double *)(v36 + 72) = a11;
    *(double *)(v36 + 80) = a12;
    *(double *)(v36 + 88) = a13;
    v37 = v53;
    v38 = v54;
    *(_QWORD *)(v36 + 96) = a1;
    *(_QWORD *)(v36 + 104) = v37;
    *(_QWORD *)(v36 + 112) = v38;
    aBlock[4] = sub_10053C318;
    v57 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007A7EE8;
    v39 = _Block_copy(aBlock);
    v53 = v25;
    v40 = v39;
    v41 = v57;
    swift_errorRetain(a2);
    v42 = a1;
    swift_retain(v38);
    v43 = v32;
    v44 = v33;
    swift_release(v41);
    static DispatchQoS.unspecified.getter(v45);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v46 = sub_10002FAC0();
    v47 = sub_100047110(&qword_100828C80);
    v48 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v48, v24, v46);
    v49 = v51;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v30, v27, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v30, v52);
  }
  return result;
}

void sub_10053A224(uint64_t a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, uint64_t a9, void *a10, void *a11, void (*a12)(_QWORD))
{
  uint64_t v22;
  os_log_type_t v23;
  void *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint8_t *v38;
  UIImage *v39;
  id v41;
  os_log_type_t v42;
  void *v43;
  os_log_type_t v44;
  id v45;
  uint8_t *v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *log;
  void (*v52)(_QWORD);
  void (*v53)(_QWORD);
  uint64_t v54;
  _QWORD v55[3];
  char v56[8];
  uint64_t v57;
  uint64_t v58;

  if (a1)
  {
    v22 = swift_errorRetain(a1);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = (void *)HKLogWorkouts;
    v25 = v23;
    if (os_log_type_enabled(HKLogWorkouts, v23))
    {
      swift_errorRetain(a1);
      swift_errorRetain(a1);
      log = v24;
      v52 = a12;
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v57 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_getErrorValue(a1, v56, v55);
      v28 = Error.errorDescription.getter(v55[1], v55[2]);
      v30 = (CHWorkoutDetailHeartRateTableViewCell *)v29;
      v54 = sub_10003E8EC(v28, v29, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v26 + 4);
      swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, log, v25, "[routes] Error generating snapshot: %s. Rendering polyline without map.", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      v38 = v26;
      a12 = v52;
      swift_slowDealloc(v38, -1, -1);

    }
    v39 = sub_10053B01C(a10, a2, a3, a4, a5, a6, a7, a8);
    swift_errorRelease(a1);
  }
  else if (a11)
  {
    v41 = a11;
    v42 = static os_log_type_t.info.getter();
    v43 = (void *)HKLogWorkouts;
    v44 = v42;
    if (os_log_type_enabled(HKLogWorkouts, v42))
    {
      v53 = a12;
      v45 = v41;
      v50 = v43;
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138412290;
      v57 = (uint64_t)v45;
      v48 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v46 + 4);
      *v47 = a11;

      a12 = v53;
      _os_log_impl((void *)&_mh_execute_header, v50, v44, "[routes] Received snapshot back from MKMapSnapshotter: %@", v46, 0xCu);
      v49 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v47, 1, v49);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

    }
    v39 = sub_10053AA34(a10, v41, a2, a3, a4, a5, a6);

  }
  else
  {
    v39 = 0;
  }
  a12(v39);

}

double sub_10053A690(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v13;
  double *v14;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  BOOL v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  id v48;
  MKMapRect v52;

  v13 = *(_QWORD *)(a1 + 16);
  v14 = (double *)(a1 + 32);
  v15 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithPoints:count:", a1 + 32, v13);
  v16 = objc_msgSend(v15, "boundingMapRect");
  if (v19 == 0.0 || v20 == 0.0)
  {
    if (v13)
    {
      v40 = *(double *)(a1 + 32);
      if ((*(_BYTE *)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) & 1) != 0)
      {
        v41 = 0x41024F8000000000;
LABEL_43:
        v46 = *(double *)&v41;
        goto LABEL_44;
      }
    }
    else
    {
      v40 = 0.0;
      if ((*(_BYTE *)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) & 1) != 0)
      {
        v46 = 150000.0;
LABEL_44:

        return v40 - v46 * 0.5 + -15.0;
      }
    }
    v41 = 0x4097700000000000;
    goto LABEL_43;
  }
  v21 = 0.0;
  v22 = 0.0;
  if (v13)
  {
    v22 = *(double *)(a1 + 40);
    v23 = &v14[2 * v13];
    if (*(v23 - 1) < v22)
      v22 = *(v23 - 1);
  }
  v24 = 15.0 / a3 * v20 - (v22 - v18);
  if (v24 < 0.0)
    v25 = 0.0;
  else
    v25 = v24 * 1.5;
  v26 = 7.5 / a2 * v19;
  v27 = 0.0;
  if (v13)
  {
    v27 = *v14;
    v28 = &v14[2 * v13];
    v29 = *(v28 - 2);
    v21 = v29 >= *v14 ? *v14 : *(v28 - 2);
    if (v27 <= v29)
      v27 = *(v28 - 2);
  }
  v30 = v18 - v25;
  v31 = v20 + v25;
  v32 = v26 - (v21 - v17);
  v33 = v32 * 1.5;
  v34 = v26 + v27 - (v17 + v19);
  v35 = v32 < 0.0;
  v36 = 0.0;
  if (v35)
    v33 = 0.0;
  if (v34 >= 0.0)
    v36 = v34 * 1.5;
  if (v21 + -15.0 < v17)
    v33 = v33 * 1.5;
  v37 = v17 - v33;
  if (v19 + v17 - v33 >= v27 + 15.0)
    v38 = v36;
  else
    v38 = v36 * 1.5;
  v39 = v19 + v33 + v38;
  if (UIEdgeInsetsZero.top == a4
    && UIEdgeInsetsZero.left == a5
    && UIEdgeInsetsZero.bottom == a6
    && UIEdgeInsetsZero.right == a7)
  {
    v52.origin.x = v37;
    v52.origin.y = v30;
    v52.size.width = v39;
    v52.size.height = v31;
    *(_QWORD *)&v37 = (unint64_t)MKMapRectInset(v52, v39 * -0.05, v31 * -0.05);
LABEL_41:

    return v37;
  }
  v42 = a2 - a5 - a7;
  if (v42 <= 0.0 || (v43 = a3 - a4 - a6, v43 <= 0.0))
  {
    v47 = static os_log_type_t.error.getter(v16);
    v48 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)(v47, &_mh_execute_header, v48, "[routes] invalid insets", 23, 2, _swiftEmptyArrayStorage);

    goto LABEL_41;
  }

  v44 = v39 * (v42 / v43 / (v39 / v31));
  v45 = v37 + (v44 - v39) * -0.5;
  if (v39 / v31 >= v42 / v43)
  {
    v44 = v39;
    v45 = v37;
  }
  return v45 - v44 / v42 * a5;
}

UIImage *sub_10053AA34(void *a1, void *a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  char **v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  double v34;
  id v35;
  uint64_t v36;
  UIImage *result;
  id v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  double v47;
  double v48;
  id v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  id v54;
  double v55;
  CGFloat v56;
  id v57;
  double v58;
  double v59;
  id v60;
  double v61;
  double v62;
  id v63;
  CGContext *v64;
  CGContext *v65;
  char **v66;
  void *v67;
  _QWORD *v68;
  objc_class *v69;
  id v70;
  id v71;
  id v72;
  double v73;
  double v74;
  id v75;
  id v76;
  id v77;
  double v78;
  double v79;
  UIImage *v80;
  uint64_t v81;
  uint64_t v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  const char *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  uint64_t v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  double v106;
  double v107;
  double v108;
  double v109;
  CGSize v110;

  v11 = *(void **)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v11)
    return 0;
  v12 = v7;
  v20 = v11;
  v21 = objc_msgSend(v20, "allValidLocations");
  v22 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if (!((unint64_t)v23 >> 62))
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_29:

    v97 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
LABEL_37:
    swift_bridgeObjectRelease(v97, v90, v91, v92, v93, v94, v95, v96);
    return 0;
  }
  if (v23 < 0)
    v81 = v23;
  else
    v81 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v82 = _CocoaArrayWrapper.endIndex.getter(v81);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v83, v84, v85, v86, v87, v88, v89);
  if (!v82)
    goto LABEL_29;
LABEL_4:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
  }
  else
  {
    if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v24 = *(id *)(v23 + 32);
  }
  v32 = v24;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v25, v26, v27, v28, v29, v30, v31);
  v8 = &selRef_setRightBarButtonItems_animated_;
  objc_msgSend(v32, "coordinate");
  v9 = v33;
  v10 = v34;

  v35 = objc_msgSend(v20, "allValidLocations");
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v22);

  if (!((unint64_t)v22 >> 62))
  {
    v36 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v36)
      goto LABEL_9;
    goto LABEL_36;
  }
LABEL_32:
  if (v22 < 0)
    v98 = v22;
  else
    v98 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v36 = _CocoaArrayWrapper.endIndex.getter(v98);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v99, v100, v101, v102, v103, v104, v105);
  if (!v36)
  {
LABEL_36:

    v97 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    goto LABEL_37;
  }
LABEL_9:
  result = (UIImage *)(v36 - 1);
  if (__OFSUB__(v36, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  v108 = v10;
  v109 = v9;
  if ((v22 & 0xC000000000000001) != 0)
  {
LABEL_41:
    v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v22);
    goto LABEL_14;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v38 = *(id *)(v22 + 8 * (_QWORD)result + 32);
LABEL_14:
    v46 = v38;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v39, v40, v41, v42, v43, v44, v45);
    objc_msgSend(v46, v8[8]);
    v106 = v48;
    v107 = v47;

    v49 = objc_msgSend(a2, "image");
    objc_msgSend(v49, "size");
    v51 = v50;
    v53 = v52;

    v54 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v54, "scale");
    v56 = v55;

    v110.width = v51;
    v110.height = v53;
    UIGraphicsBeginImageContextWithOptions(v110, 0, v56);
    v57 = objc_msgSend(a2, "image");
    objc_msgSend(v57, "size");
    v59 = v58;

    v60 = objc_msgSend(a2, "image");
    objc_msgSend(v60, "size");
    v62 = v61;

    v63 = objc_msgSend(a2, "image");
    objc_msgSend(v63, "drawInRect:", 0.0, 0.0, v59, v62);

    v64 = UIGraphicsGetCurrentContext();
    if (v64)
    {
      v65 = v64;
      v66 = &selRef_setRightBarButtonItems_animated_;
      if ((uint64_t)objc_msgSend(v20, "count") >= 2)
      {
        v67 = (void *)(*(uint64_t (**)(void *, id))(*(_QWORD *)(v7
                                                                        + OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass)
                                                            + 88))(a1, v20);
        __chkstk_darwin(v67);
        (*(void (**)(CGContext *, id (*)(double, double), double, double, double, double, double))((swift_isaMask & *v68) + 0x78))(v65, sub_10053C258, a4, a5, a6, a7, a3);

        CGContextStrokePath(v65);
        v69 = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
        v70 = objc_msgSend(objc_allocWithZone(v69), "init");
        if (*(_BYTE *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
        {
          v71 = objc_msgSend(objc_allocWithZone(v69), "init");
          v72 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v71, 0);

          v70 = v71;
        }
        else
        {
          v72 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v70, 0);
        }

        v66 = &selRef_setRightBarButtonItems_animated_;
        objc_msgSend(a2, "pointForCoordinate:", v107, v106);
        sub_10053C150(v72, v65, v73, v74);

      }
      v75 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()), "init");
      if (*(_BYTE *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
      {
        v76 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()), "init");
        v77 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v76, 0);

        v75 = v76;
      }
      else
      {
        v77 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v75, 0);
      }

      objc_msgSend(a2, v66[430], v109, v108);
      sub_10053C150(v77, v65, v78, v79);
      v80 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

      return v80;
    }

    return 0;
  }
  __break(1u);
  return result;
}

UIImage *sub_10053B01C(void *a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8)
{
  uint64_t v8;
  char **v9;
  CLLocationDegrees v10;
  void *v11;
  uint64_t v12;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  CLLocationDegrees v34;
  id v35;
  uint64_t v36;
  UIImage *result;
  id v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  CGFloat v51;
  CGContext *v52;
  CGContext *v53;
  double v54;
  double v55;
  double v56;
  uint64_t (*v57)(void);
  id v58;
  id v59;
  _QWORD *v60;
  __n128 v61;
  objc_class *v62;
  id v63;
  id v64;
  id v65;
  MKMapPoint v66;
  id v67;
  id v68;
  id v69;
  MKMapPoint v70;
  UIImage *v71;
  uint64_t v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  const char *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  CLLocationDegrees v98;
  uint64_t v99;
  CLLocationDegrees v100;
  CLLocationCoordinate2D v101;
  CGSize v102;
  CLLocationCoordinate2D v103;

  v11 = *(void **)(v8 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v11)
    return 0;
  v12 = v8;
  v20 = v11;
  v21 = objc_msgSend(v20, "allValidLocations");
  v22 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if (!((unint64_t)v23 >> 62))
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_32:

    v88 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
LABEL_40:
    swift_bridgeObjectRelease(v88, v81, v82, v83, v84, v85, v86, v87);
    return 0;
  }
  if (v23 < 0)
    v72 = v23;
  else
    v72 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v73 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v74, v75, v76, v77, v78, v79, v80);
  if (!v73)
    goto LABEL_32;
LABEL_4:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
  }
  else
  {
    if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    v24 = *(id *)(v23 + 32);
  }
  v32 = v24;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v25, v26, v27, v28, v29, v30, v31);
  v9 = &selRef_setRightBarButtonItems_animated_;
  objc_msgSend(v32, "coordinate");
  v10 = v33;
  v101.longitude = v34;

  v35 = objc_msgSend(v20, "allValidLocations");
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v22);

  if (!((unint64_t)v22 >> 62))
  {
    v36 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v36)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_35:
  if (v22 < 0)
    v89 = v22;
  else
    v89 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v36 = _CocoaArrayWrapper.endIndex.getter(v89);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v90, v91, v92, v93, v94, v95, v96);
  if (!v36)
  {
LABEL_39:

    v88 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    goto LABEL_40;
  }
LABEL_9:
  result = (UIImage *)(v36 - 1);
  if (__OFSUB__(v36, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  v101.latitude = v10;
  if ((v22 & 0xC000000000000001) != 0)
  {
LABEL_44:
    v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v22);
    goto LABEL_14;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v38 = *(id *)(v22 + 8 * (_QWORD)result + 32);
LABEL_14:
    v46 = v38;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v39, v40, v41, v42, v43, v44, v45);
    objc_msgSend(v46, v9[8]);
    v97 = v48;
    v99 = v47;

    v49 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v49, "scale");
    v51 = v50;

    v102.width = a7;
    v102.height = a8;
    UIGraphicsBeginImageContextWithOptions(v102, 0, v51);
    v52 = UIGraphicsGetCurrentContext();
    if (v52)
    {
      v53 = v52;
      if (a7 / a8 < a5 / a6)
        v54 = a7 / a5;
      else
        v54 = a8 / a6;
      v55 = (a7 - v54 * a5) * 0.5;
      v56 = (a8 - v54 * a6) * 0.5;
      if ((uint64_t)objc_msgSend(v20, "count", v97, v99) >= 2)
      {
        v57 = *(uint64_t (**)(void))(*(_QWORD *)(v8 + OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass) + 88);
        v58 = v20;
        v59 = a1;
        v60 = (_QWORD *)v57();
        v61 = __chkstk_darwin(objc_msgSend(v59, "boundingMapRect"));
        (*(void (**)(CGContext *, double (*)(double), __n128))((swift_isaMask & *v60) + 0x78))(v53, sub_10053C230, v61);

        CGContextStrokePath(v53);
        v62 = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
        v63 = objc_msgSend(objc_allocWithZone(v62), "init");
        if (*(_BYTE *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
        {
          v64 = objc_msgSend(objc_allocWithZone(v62), "init");
          v65 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v64, 0);

          v63 = v64;
        }
        else
        {
          v65 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v63, 0);
        }

        v103.longitude = v98;
        v103.latitude = v100;
        v66 = MKMapPointForCoordinate(v103);
        sub_10053C150(v65, v53, v55 + v54 * (v66.x - a3), v56 + v54 * (v66.y - a4));

      }
      v67 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()), "init");
      if (*(_BYTE *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
      {
        v68 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()), "init");
        v69 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v68, 0);

        v67 = v68;
      }
      else
      {
        v69 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", v67, 0);
      }

      v70 = MKMapPointForCoordinate(v101);
      sub_10053C150(v69, v53, v55 + v54 * (v70.x - a3), v56 + v54 * (v70.y - a4));
      v71 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

      return v71;
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_10053B5D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutRouteMapGenerator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutRouteMapGenerator()
{
  return objc_opt_self(CHWorkoutRouteMapGenerator);
}

void sub_10053B65C(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  double *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  id v41;
  void *v42;
  MKMapPoint v43;
  const char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  char *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  SEL v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  double v94;
  _QWORD *v95;
  _QWORD aBlock[5];
  uint64_t v97;
  CLLocationCoordinate2D v98;

  v94 = a6;
  v19 = type metadata accessor for DispatchQoS.QoSClass(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)swift_allocObject(&unk_1007A7F20, 24, 7);
  v23[2] = a3;
  v24 = *(void **)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v24)
  {
    sub_10048E1E8(0, (uint64_t)a3);
    swift_release(v23);
    return;
  }
  v25 = (double *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize);
  if ((*(_BYTE *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize + 16) & 1) == 0)
  {
    a4 = *v25;
    a5 = v25[1];
  }
  v26 = a3;
  v27 = v24;
  v28 = objc_msgSend(v27, "allValidLocations");
  v29 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v81 = v30;
    else
      v81 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v38 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v82, v83, v84, v85, v86, v87, v88);
  }
  else
  {
    v38 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v91 = v20;
  v92 = v27;
  v90 = v22;
  v93 = a1;
  if (v38)
  {
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1001219A0(0, v38 & ~(v38 >> 63), 0);
    if (v38 < 0)
    {
      __break(1u);
      return;
    }
    v89 = v19;
    v95 = v23;
    v39 = 0;
    v40 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
    do
    {
      if ((v30 & 0xC000000000000001) != 0)
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v30);
      else
        v41 = *(id *)(v30 + 8 * v39 + 32);
      v42 = v41;
      objc_msgSend(v41, "coordinate", v89);
      v43 = MKMapPointForCoordinate(v98);

      aBlock[0] = v40;
      v52 = *(_QWORD *)v40->cellPadding;
      v51 = *(_QWORD *)v40->cellInset;
      if (v52 >= v51 >> 1)
      {
        sub_1001219A0(v51 > 1, v52 + 1, 1);
        v40 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
      }
      ++v39;
      *(_QWORD *)v40->cellPadding = v52 + 1;
      *((MKMapPoint *)&v40[1].super.super.super.super.isa + v52) = v43;
    }
    while (v38 != v39);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v44, v45, v46, v47, v48, v49, v50);
    v23 = v95;
    v19 = v89;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v31, v32, v33, v34, v35, v36, v37);
    v40 = &_swiftEmptyArrayStorage;
  }
  v53 = sub_10053A690((uint64_t)v40, a4, a5, a7, a8, a9, a10);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v95 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotOptions), "init");
  objc_msgSend(v95, "setTraitCollection:", v93);
  objc_msgSend(v95, "setMapRect:", v53, v55, v57, v59);
  objc_msgSend(v95, "setMapType:", 5);
  objc_msgSend(v95, "setSize:", a4, a5);
  v60 = OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter), "cancel");
  v61 = *(void **)(a2 + v60);
  *(_QWORD *)(a2 + v60) = 0;

  v62 = objc_allocWithZone((Class)MKMapSnapshotter);
  v63 = objc_msgSend(v62, "initWithOptions:", v95);
  v64 = *(void **)(a2 + v60);
  *(_QWORD *)(a2 + v60) = v63;

  v65 = *(void **)(a2 + v60);
  if (v65)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v67 = v90;
    v66 = v91;
    (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, enum case for DispatchQoS.QoSClass.userInitiated(_:), v19);
    v68 = v65;
    v69 = (void *)static OS_dispatch_queue.global(qos:)(v67);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v19);
    v70 = swift_allocObject(&unk_1007A7E58, 24, 7);
    swift_unknownObjectWeakInit(v70 + 16, a2);
    v71 = swift_allocObject(&unk_1007A7F48, 104, 7);
    *(_QWORD *)(v71 + 16) = v70;
    *(_QWORD *)(v71 + 24) = v40;
    *(double *)(v71 + 32) = v94;
    *(double *)(v71 + 40) = v53;
    *(double *)(v71 + 48) = v55;
    *(double *)(v71 + 56) = v57;
    *(double *)(v71 + 64) = v59;
    *(double *)(v71 + 72) = a4;
    *(double *)(v71 + 80) = a5;
    *(_QWORD *)(v71 + 88) = sub_10053C360;
    *(_QWORD *)(v71 + 96) = v23;
    aBlock[4] = sub_10053C2D0;
    v97 = v71;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001ABA78;
    aBlock[3] = &unk_1007A7F60;
    v72 = _Block_copy(aBlock);
    v73 = v97;
    swift_retain(v23);
    objc_msgSend(v68, "startWithQueue:completionHandler:", v69, v72, swift_release(v73).n128_f64[0]);

    _Block_release(v72);
    swift_release(v23);

  }
  else
  {
    swift_release(v23);
    swift_bridgeObjectRelease(v40, v74, v75, v76, v77, v78, v79, v80);

  }
}

void sub_10053BBD0(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD), double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  double *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  id v40;
  void *v41;
  MKMapPoint v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  uint64_t v65;
  char *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  double v93;
  _QWORD *v94;
  _QWORD aBlock[5];
  uint64_t v96;
  CLLocationCoordinate2D v97;

  v93 = a6;
  v19 = type metadata accessor for DispatchQoS.QoSClass(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)swift_allocObject(&unk_1007A7E30, 24, 7);
  v23[2] = a3;
  v24 = *(void **)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v24)
  {
    _Block_copy(a3);
    a3[2](a3, 0);
    swift_release(v23);
    return;
  }
  v25 = (double *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize);
  if ((*(_BYTE *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize + 16) & 1) == 0)
  {
    a4 = *v25;
    a5 = v25[1];
  }
  _Block_copy(a3);
  v26 = v24;
  v27 = objc_msgSend(v26, "allValidLocations");
  v28 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v80 = v29;
    else
      v80 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v37 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v81, v82, v83, v84, v85, v86, v87);
  }
  else
  {
    v37 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v90 = v20;
  v91 = v26;
  v89 = v22;
  v92 = a1;
  if (v37)
  {
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1001219A0(0, v37 & ~(v37 >> 63), 0);
    if (v37 < 0)
    {
      __break(1u);
      return;
    }
    v88 = v19;
    v94 = v23;
    v38 = 0;
    v39 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
        v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v29);
      else
        v40 = *(id *)(v29 + 8 * v38 + 32);
      v41 = v40;
      objc_msgSend(v40, "coordinate", v88);
      v42 = MKMapPointForCoordinate(v97);

      aBlock[0] = v39;
      v51 = *(_QWORD *)v39->cellPadding;
      v50 = *(_QWORD *)v39->cellInset;
      if (v51 >= v50 >> 1)
      {
        sub_1001219A0(v50 > 1, v51 + 1, 1);
        v39 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
      }
      ++v38;
      *(_QWORD *)v39->cellPadding = v51 + 1;
      *((MKMapPoint *)&v39[1].super.super.super.super.isa + v51) = v42;
    }
    while (v37 != v38);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v43, v44, v45, v46, v47, v48, v49);
    v23 = v94;
    v19 = v88;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v30, v31, v32, v33, v34, v35, v36);
    v39 = &_swiftEmptyArrayStorage;
  }
  v52 = sub_10053A690((uint64_t)v39, a4, a5, a7, a8, a9, a10);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v94 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotOptions), "init");
  objc_msgSend(v94, "setTraitCollection:", v92);
  objc_msgSend(v94, "setMapRect:", v52, v54, v56, v58);
  objc_msgSend(v94, "setMapType:", 5);
  objc_msgSend(v94, "setSize:", a4, a5);
  v59 = OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter), "cancel");
  v60 = *(void **)(a2 + v59);
  *(_QWORD *)(a2 + v59) = 0;

  v61 = objc_allocWithZone((Class)MKMapSnapshotter);
  v62 = objc_msgSend(v61, "initWithOptions:", v94);
  v63 = *(void **)(a2 + v59);
  *(_QWORD *)(a2 + v59) = v62;

  v64 = *(void **)(a2 + v59);
  if (v64)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v66 = v89;
    v65 = v90;
    (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, enum case for DispatchQoS.QoSClass.userInitiated(_:), v19);
    v67 = v64;
    v68 = (void *)static OS_dispatch_queue.global(qos:)(v66);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v19);
    v69 = swift_allocObject(&unk_1007A7E58, 24, 7);
    swift_unknownObjectWeakInit(v69 + 16);
    v70 = swift_allocObject(&unk_1007A7E80, 104, 7);
    *(_QWORD *)(v70 + 16) = v69;
    *(_QWORD *)(v70 + 24) = v39;
    *(double *)(v70 + 32) = v93;
    *(double *)(v70 + 40) = v52;
    *(double *)(v70 + 48) = v54;
    *(double *)(v70 + 56) = v56;
    *(double *)(v70 + 64) = v58;
    *(double *)(v70 + 72) = a4;
    *(double *)(v70 + 80) = a5;
    *(_QWORD *)(v70 + 88) = sub_10019B2A8;
    *(_QWORD *)(v70 + 96) = v23;
    aBlock[4] = sub_10053C2D0;
    v96 = v70;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001ABA78;
    aBlock[3] = &unk_1007A7E98;
    v71 = _Block_copy(aBlock);
    v72 = v96;
    swift_retain(v23);
    objc_msgSend(v67, "startWithQueue:completionHandler:", v68, v71, swift_release(v72).n128_f64[0]);

    _Block_release(v71);
    swift_release(v23);

  }
  else
  {
    swift_release(v23);
    swift_bridgeObjectRelease(v39, v73, v74, v75, v76, v77, v78, v79);

  }
}

void sub_10053C150(void *a1, CGContext *a2, double a3, double a4)
{
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  CGFloat v13;
  id v14;
  CGRect v15;
  CGRect v16;

  objc_msgSend(a1, "bounds");
  v8 = a3 - CGRectGetMidX(v15);
  objc_msgSend(a1, "centerOffset");
  v10 = v8 + v9;
  objc_msgSend(a1, "bounds");
  v11 = a4 - CGRectGetMidY(v16);
  objc_msgSend(a1, "centerOffset");
  v13 = v11 + v12;
  CGContextSaveGState(a2);
  CGContextTranslateCTM(a2, v10, v13);
  objc_msgSend(a1, "prepareForSnapshotting");
  v14 = objc_msgSend(a1, "layer");
  objc_msgSend(v14, "renderInContext:", a2);

  CGContextRestoreGState(a2);
}

double sub_10053C230(double a1)
{
  double *v1;

  return (a1 - v1[2]) * v1[6] + v1[7];
}

id sub_10053C258(double a1, double a2)
{
  uint64_t v2;
  void *v3;
  CLLocationCoordinate2D v4;

  v3 = *(void **)(v2 + 16);
  v4 = MKCoordinateForMapPoint(*(MKMapPoint *)&a1);
  return objc_msgSend(v3, "pointForCoordinate:", v4.latitude, v4.longitude);
}

uint64_t sub_10053C284()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053C2A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053C2D4()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

void sub_10053C318()
{
  uint64_t v0;

  sub_10053A224(*(_QWORD *)(v0 + 16), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(CGFloat *)(v0 + 80), *(CGFloat *)(v0 + 88), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 96), *(void (**)(_QWORD))(v0 + 104));
}

uint64_t sub_10053C33C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053C360(void *a1)
{
  uint64_t v1;

  return sub_10048E1E8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10053C36C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10053C3A0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100539F40(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56), *(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 80));
}

uint64_t assignWithCopy for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 136);
  v15 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

__n128 initializeWithTake for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 128));
  v7 = *(_QWORD *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v7);
  v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityStatistics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 193))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityStatistics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 192) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 193) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 193) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10053C6CC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _OWORD v16[12];
  char v17;
  _OWORD v18[12];
  char v19;

  v2 = *(_OWORD *)(a1 + 176);
  v16[10] = *(_OWORD *)(a1 + 160);
  v16[11] = v2;
  v17 = *(_BYTE *)(a1 + 192);
  v3 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v3;
  v4 = *(_OWORD *)(a1 + 144);
  v16[8] = *(_OWORD *)(a1 + 128);
  v16[9] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v7;
  v8 = *(_OWORD *)(a2 + 176);
  v18[10] = *(_OWORD *)(a2 + 160);
  v18[11] = v8;
  v19 = *(_BYTE *)(a2 + 192);
  v9 = *(_OWORD *)(a2 + 112);
  v18[6] = *(_OWORD *)(a2 + 96);
  v18[7] = v9;
  v10 = *(_OWORD *)(a2 + 144);
  v18[8] = *(_OWORD *)(a2 + 128);
  v18[9] = v10;
  v11 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v11;
  v12 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v12;
  v13 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v13;
  sub_10053C76C((uint64_t)v16, (uint64_t)v18);
  return v14 & 1;
}

void sub_10053C76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    v4 = *(_QWORD *)(a1 + 24);
    v5 = *(_QWORD *)(a2 + 24);
    if ((sub_1002A09BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0 && sub_1002A0A2C(v4, v5))
    {
      v6 = *(_QWORD *)(a1 + 80);
      v8 = *(_QWORD *)(a1 + 128);
      v7 = *(_QWORD *)(a1 + 136);
      v9 = *(_QWORD *)(a2 + 80);
      v11 = *(_QWORD *)(a2 + 128);
      v10 = *(_QWORD *)(a2 + 136);
      if ((sub_1002A09BC(*(_QWORD *)(a1 + 72), *(_QWORD *)(a2 + 72)) & 1) != 0
        && sub_1002A0A2C(v6, v9)
        && (sub_1002A09BC(v8, v11) & 1) != 0
        && sub_1002A0A2C(v7, v10))
      {
        sub_1003900AC(*(_BYTE *)(a1 + 192));
      }
    }
  }
}

uint64_t *sub_10053C850(uint64_t *a1)
{
  sub_10004A2FC(*a1, a1[1]);
  return a1;
}

uint64_t sub_10053C884(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_BYTE *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 96) = a3;
  *(_QWORD *)(v6 + 80) = a1;
  return swift_task_switch(sub_10053C8A8, 0, 0);
}

uint64_t sub_10053C8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_QWORD *)(v6 + 48) = v1;
  if (!sub_1005F175C(2, 18, 0, 0))
    return swift_task_switch(sub_10053CA1C, 0, 0);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v7;
  v8 = type metadata accessor for ServiceSubscription(0);
  *v7 = v0;
  v7[1] = sub_10053C9A8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546998, v6, v8);
}

uint64_t sub_10053C9A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
    return swift_task_switch(sub_10053CC1C, 0, 0);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_10053CA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v16;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(unsigned __int8 *)(v0 + 168);
  v6 = type metadata accessor for ServiceSubscription(0);
  *(_QWORD *)(v0 + 136) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 144) = v7;
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10053CB60;
  v9 = swift_continuation_init(v0 + 16, 1);
  v10 = sub_100047110(&qword_100832AE0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v9, 0xD000000000000013, 0x800000010069E840, v6, v13, &protocol self-conformance witness table for Error);
  v14 = sub_100014AB8(v12, v4, v3, v5, v2, v16);
  (*(void (**)(uint64_t, uint64_t, double))(v11 + 8))(v12, v10, v14);
  swift_task_dealloc(v12);
  return swift_continuation_await(v1);
}

uint64_t sub_10053CB60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 152);
  if (v3)
  {
    swift_willThrow(a1);
    swift_task_dealloc(v4);
    *(_QWORD *)(v2 + 160) = v3;
    return swift_task_switch(sub_10053CC1C, 0, 0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 144) + 32))(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 136));
    swift_task_dealloc(v4);
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10053CC1C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053CC50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_BYTE *)(v6 + 144) = a4;
  *(_QWORD *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 96) = a3;
  *(_QWORD *)(v6 + 80) = a1;
  return swift_task_switch(sub_10053CC74, 0, 0);
}

uint64_t sub_10053CC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_QWORD *)(v6 + 48) = v1;
  if (!sub_1005F175C(2, 18, 0, 0))
    return swift_task_switch(sub_10053CDE8, 0, 0);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v7;
  *v7 = v0;
  v7[1] = sub_10053CD74;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD000000000000013, 0x800000010069E840, sub_1005469A4, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10053CD74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    *(_QWORD *)(v2 + 136) = v0;
    return swift_task_switch(sub_10053CF84, 0, 0);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_10053CDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;

  v1 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10053CF00;
  v6 = *(unsigned __int8 *)(v0 + 144);
  v7 = swift_continuation_init(v1, 1);
  v8 = sub_100047110(&qword_100832AE8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v7, 0xD000000000000013, 0x800000010069E840, (char *)&type metadata for () + 8, v11, &protocol self-conformance witness table for Error);
  v12 = sub_100406578(v10, v5, v4, v6, v3, v2);
  (*(void (**)(uint64_t, uint64_t, double))(v9 + 8))(v10, v8, v12);
  swift_task_dealloc(v10);
  return swift_continuation_await(v1);
}

uint64_t sub_10053CF00(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 48);
  if (v3)
  {
    swift_willThrow(a1);
    *(_QWORD *)(v2 + 136) = v3;
    return swift_task_switch(sub_10053CF84, 0, 0);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10053CF84()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053CFB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_BYTE *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 96) = a3;
  *(_QWORD *)(v6 + 80) = a1;
  return swift_task_switch(sub_10053CFDC, 0, 0);
}

uint64_t sub_10053CFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_QWORD *)(v6 + 48) = v1;
  if (!sub_1005F175C(2, 18, 0, 0))
    return swift_task_switch(sub_10053D150, 0, 0);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v7;
  v8 = type metadata accessor for PersonalizationInferenceResponse(0);
  *v7 = v0;
  v7[1] = sub_10053D0DC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD000000000000013, 0x800000010069E840, sub_10054698C, v6, v8);
}

uint64_t sub_10053D0DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
    return swift_task_switch(sub_100546EF0, 0, 0);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_10053D150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v16;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(unsigned __int8 *)(v0 + 168);
  v6 = type metadata accessor for PersonalizationInferenceResponse(0);
  *(_QWORD *)(v0 + 136) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v0 + 144) = v7;
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10053D294;
  v9 = swift_continuation_init(v0 + 16, 1);
  v10 = sub_100047110(&qword_100832AC8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v9, 0xD000000000000013, 0x800000010069E840, v6, v13, &protocol self-conformance witness table for Error);
  v14 = sub_100408300(v12, v4, v3, v5, v2, v16);
  (*(void (**)(uint64_t, uint64_t, double))(v11 + 8))(v12, v10, v14);
  swift_task_dealloc(v12);
  return swift_continuation_await(v1);
}

uint64_t sub_10053D294()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 152);
  if (v2)
  {
    swift_willThrow();
    swift_task_dealloc(v3);
    *(_QWORD *)(v1 + 160) = v2;
    return swift_task_switch(sub_100546EF0, 0, 0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 144) + 32))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 136));
    swift_task_dealloc(v3);
    swift_task_dealloc(*(_QWORD *)(v1 + 120));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

Swift::Int sub_10053D350(uint64_t a1, uint64_t a2, char a3)
{
  Swift::UInt v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::UInt v12;
  _QWORD v14[9];

  Hasher.init(_seed:)(v14, 0);
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)(v14, a1, a2);
    }
    else
    {
      if (a1 | a2)
      {
        if (a1 ^ 1 | a2)
          v12 = 4;
        else
          v12 = 1;
      }
      else
      {
        v12 = 0;
      }
      Hasher._combine(_:)(v12);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v6 = *(_QWORD *)(a1 + 16);
    Hasher._combine(_:)(v6);
    if (v6)
    {
      v7 = type metadata accessor for CatalogLockup(0);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v10 = *(_QWORD *)(v8 + 72);
      v11 = sub_1000083D8(&qword_10082AF90, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogLockup, (uint64_t)&protocol conformance descriptor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)(v14, v7, v11);
        v9 += v10;
        --v6;
      }
      while (v6);
    }
  }
  return Hasher._finalize()();
}

uint64_t sub_10053D488()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v2 = swift_getKeyPath(&unk_100644BF0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

Swift::Int sub_10053D4FC()
{
  uint64_t v0;

  return sub_10053D350(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_10053D508(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;

  v3 = *v1;
  if (*((_BYTE *)v1 + 16))
  {
    v4 = v1[1];
    if (*((_BYTE *)v1 + 16) == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)(a1, v3, v4);
    }
    else
    {
      if (v3 | v4)
      {
        if (v3 ^ 1 | v4)
          v11 = 4;
        else
          v11 = 1;
      }
      else
      {
        v11 = 0;
      }
      Hasher._combine(_:)(v11);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v5 = *(_QWORD *)(v3 + 16);
    Hasher._combine(_:)(v5);
    if (v5)
    {
      v6 = type metadata accessor for CatalogLockup(0);
      v7 = *(_QWORD *)(v6 - 8);
      v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v9 = *(_QWORD *)(v7 + 72);
      v10 = sub_1000083D8(&qword_10082AF90, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogLockup, (uint64_t)&protocol conformance descriptor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)(a1, v6, v10);
        v8 += v9;
        --v5;
      }
      while (v5);
    }
  }
}

Swift::Int sub_10053D628(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  Swift::UInt v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  _QWORD v13[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((unsigned __int8 *)v1 + 16);
  Hasher.init(_seed:)(v13, a1);
  if (v4)
  {
    if (v4 == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)(v13, v2, v3);
    }
    else
    {
      if (v2 | v3)
      {
        if (v2 ^ 1 | v3)
          v11 = 4;
        else
          v11 = 1;
      }
      else
      {
        v11 = 0;
      }
      Hasher._combine(_:)(v11);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v5 = *(_QWORD *)(v2 + 16);
    Hasher._combine(_:)(v5);
    if (v5)
    {
      v6 = type metadata accessor for CatalogLockup(0);
      v7 = *(_QWORD *)(v6 - 8);
      v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v9 = *(_QWORD *)(v7 + 72);
      v10 = sub_1000083D8(&qword_10082AF90, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogLockup, (uint64_t)&protocol conformance descriptor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)(v13, v6, v10);
        v8 += v9;
        --v5;
      }
      while (v5);
    }
  }
  return Hasher._finalize()();
}

uint64_t sub_10053D754(uint64_t a1, uint64_t a2)
{
  return sub_1005466A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_10053D770()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100644C10);
  v2 = swift_getKeyPath(&unk_100644C38);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

char *sub_10053D7E0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t active;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD v80[2];
  char v81;
  objc_super v82;

  v75 = a7;
  v76 = a5;
  v77 = a6;
  v78 = a1;
  v74 = a4;
  v79 = a2;
  v9 = sub_100047110(&qword_10083B500);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082F9C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask] = 0;
  v17 = &v7[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__state];
  v80[0] = 0;
  v80[1] = 0;
  v81 = 2;
  v18 = v7;
  Published.init(initialValue:)(v80, &type metadata for FitnessPlusCardDataProvider.State);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v19 = &v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__pendingUpdates];
  LOBYTE(v80[0]) = 0;
  Published.init(initialValue:)(v80, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v12, v9);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates] = 0;
  v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated] = 0;
  sub_1000252E0((uint64_t)v78, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient]);
  sub_1000252E0((uint64_t)v79, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_contentAvailabilityClient]);
  v20 = &v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_eventHub];
  v21 = v74;
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = v21;
  sub_1000252E0((uint64_t)v76, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_networkEvaluator]);
  sub_1000252E0((uint64_t)v77, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_recommendationClient]);
  sub_1000252E0((uint64_t)v75, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient]);
  v22 = type metadata accessor for SubscriptionToken(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = swift_unknownObjectRetain_n(a3, 2);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionToken] = SubscriptionToken.init(eventHub:)(v23, v21);

  v24 = (objc_class *)type metadata accessor for FitnessPlusCardDataProvider(0);
  v82.receiver = v18;
  v82.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v82, "init");
  ObjectType = swift_getObjectType(a3);
  v27 = type metadata accessor for AchievementEnvironmentCacheUpdated(0);
  v28 = OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionToken;
  v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionToken];
  v30 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v25);
  v31 = v25;
  swift_retain(v30);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v27, v29, sub_1005469D4, v30, v27, &protocol witness table for AchievementEnvironmentCacheUpdated, ObjectType, v21);
  swift_release(v30);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v32 = swift_release(v30);
  active = type metadata accessor for ActiveWorkoutPlanUpdated(0, v32);
  v34 = *(_QWORD *)&v25[v28];
  v35 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v31);
  swift_retain(v35);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, active, v34, sub_1005469D4, v35, active, &protocol witness table for ActiveWorkoutPlanUpdated, ObjectType, v21);
  swift_release(v35);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v36 = swift_release(v35);
  v37 = type metadata accessor for AllowedContentRatingsUpdated(0, v36);
  v38 = *(_QWORD *)&v25[v28];
  v39 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v31);
  swift_retain(v39);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v37, v38, sub_1005469D4, v39, v37, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v21);
  swift_release(v39);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v40 = swift_release(v39);
  v41 = type metadata accessor for AppActiveOccurred(0, v40);
  v42 = *(_QWORD *)&v25[v28];
  v43 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v31);
  v44 = sub_1000083D8(&qword_100839998, (uint64_t (*)(uint64_t))&type metadata accessor for AppActiveOccurred, (uint64_t)&protocol conformance descriptor for AppActiveOccurred);
  swift_retain(v43);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v41, v42, sub_1005469D4, v43, v41, v44, ObjectType, v21);
  swift_release(v43);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v45 = swift_release(v43);
  v46 = type metadata accessor for CatalogDeleted(0, v45);
  v47 = *(_QWORD *)&v25[v28];
  v48 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16, v31);
  swift_retain(v48);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v46, v47, sub_1005469D4, v48, v46, &protocol witness table for CatalogDeleted, ObjectType, v21);
  swift_release(v48);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  swift_release(v48);
  v49 = type metadata accessor for ContentAvailabilityUpdated(0);
  v50 = *(_QWORD *)&v25[v28];
  v51 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v31);
  swift_retain(v51);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v49, v50, sub_1005469D4, v51, v49, &protocol witness table for ContentAvailabilityUpdated, ObjectType, v21);
  swift_release(v51);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v52 = swift_release(v51);
  v53 = type metadata accessor for NetworkConditionsChanged(0, v52);
  v54 = *(_QWORD *)&v25[v28];
  v55 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v31);
  swift_retain(v55);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v53, v54, sub_1005469D4, v55, v53, &protocol witness table for NetworkConditionsChanged, ObjectType, v21);
  swift_release(v55);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v56 = swift_release(v55);
  v57 = type metadata accessor for OnboardingSurveyResultsUpdated(0, v56);
  v58 = *(_QWORD *)&v25[v28];
  v59 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v31);
  swift_retain(v59);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v57, v58, sub_1005469D4, v59, v57, &protocol witness table for OnboardingSurveyResultsUpdated, ObjectType, v21);
  swift_release(v59);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v60 = swift_release(v59);
  v61 = type metadata accessor for PersonalizationPrivacyPreferenceUpdated(0, v60);
  v62 = *(_QWORD *)&v25[v28];
  v63 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v31);
  swift_retain(v63);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v61, v62, sub_1005469D4, v63, v61, &protocol witness table for PersonalizationPrivacyPreferenceUpdated, ObjectType, v21);
  swift_release(v63);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  swift_release(v63);
  v64 = type metadata accessor for ServiceSubscriptionUpdated(0);
  v65 = *(_QWORD *)&v25[v28];
  v66 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v31);
  swift_retain(v66);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v64, v65, sub_1005469EC, v66, v64, &protocol witness table for ServiceSubscriptionUpdated, ObjectType, v21);
  swift_release(v66);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  v67 = swift_release(v66);
  v68 = type metadata accessor for WheelchairStatusUpdated(0, v67);
  v69 = *(_QWORD *)&v25[v28];
  v70 = swift_allocObject(&unk_1007A80E8, 24, 7);
  swift_unknownObjectWeakInit(v70 + 16, v31);
  v71 = sub_1000083D8(&qword_1008399A0, (uint64_t (*)(uint64_t))&type metadata accessor for WheelchairStatusUpdated, (uint64_t)&protocol conformance descriptor for WheelchairStatusUpdated);
  swift_retain(v70);
  dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v80, v68, v69, sub_1005469D4, v70, v68, v71, ObjectType, v21);
  swift_unknownObjectRelease(a3);
  swift_release(v70);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v75);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v77);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v76);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v79);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v78);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
  swift_release(v70);
  return v31;
}

double sub_10053E0B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t Strong;
  double result;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v24[24];

  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = a1 + 16;
  v11 = static Log.default.getter(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[FitnessPlusCardDataProvider] Activating on service subscription updated", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess(v9, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
    type metadata accessor for MainActor(0);
    v19 = v17;
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_1007A8110, 40, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    v22 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10082F9D0, (uint64_t)v21);

    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_10053E29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    KeyPath = swift_getKeyPath(&unk_100644C10);
    v5 = swift_getKeyPath(&unk_100644C38);
    v6 = 1;
    return static Published.subscript.setter(&v6, v3, KeyPath, v5);
  }
  return result;
}

uint64_t sub_10053E31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4[2] = a4;
  v5 = sub_100047110(&qword_10081E650);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v4[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[5] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v8);
  v4[7] = swift_task_alloc(v8);
  v4[8] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v4[9] = v9;
  v4[10] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_10083990C);
  v4[11] = v10;
  *v10 = v4;
  v10[1] = sub_10053E3EC;
  return sub_10053E994();
}

uint64_t sub_10053E3EC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10053E464, v4, v5);
}

uint64_t sub_10053E464()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = *(unsigned __int8 *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 80));
  if (v1 != 1)
  {
    v10 = static Log.default.getter(v2);
    v6 = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v11, "[FitnessPlusCardDataProvider] Skipping activation - not subscribed", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 48);
    goto LABEL_9;
  }
  v3 = *(_QWORD *)(v0 + 16);
  v4 = OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_hasActivated) & 1) != 0)
  {
    v5 = static Log.default.getter(v2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[FitnessPlusCardDataProvider] Skipping activation - already activated", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 56);
LABEL_9:
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v13);
    goto LABEL_13;
  }
  v15 = static Log.default.getter(v2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[FitnessPlusCardDataProvider] Activating", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }
  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 32);
  v21 = *(_QWORD *)(v0 + 40);
  v23 = *(void **)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  *(_BYTE *)(v3 + v4) = 1;
  v24 = type metadata accessor for TaskPriority(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v22, 1, 1, v24);
  v26 = (_QWORD *)swift_allocObject(&unk_1007A8138, 40, 7);
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v23;
  v27 = v23;
  v28 = sub_1005A91AC(v22, (uint64_t)&unk_1008399B8, (uint64_t)v26);
  v29 = *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask];
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask] = v28;
  v30 = swift_release(v29);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v30);
  v31 = (_QWORD *)swift_allocObject(&unk_1007A8160, 40, 7);
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = v27;
  v32 = v27;
  v33 = sub_1005A91AC(v22, (uint64_t)&unk_1008399C8, (uint64_t)v31);
  v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask];
  *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask] = v33;
  v35 = swift_release(v34);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v35);
  v36 = (_QWORD *)swift_allocObject(&unk_1007A8188, 40, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v32;
  v37 = v32;
  v38 = sub_1005A91AC(v22, (uint64_t)&unk_1008399D8, (uint64_t)v36);
  v39 = *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask];
  *(_QWORD *)&v37[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask] = v38;
  v40 = swift_release(v39);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v40);
  v41 = (_QWORD *)swift_allocObject(&unk_1007A81B0, 40, 7);
  v41[2] = 0;
  v41[3] = 0;
  v41[4] = v37;
  v42 = v37;
  v43 = sub_1005A91AC(v22, (uint64_t)&unk_1008399E8, (uint64_t)v41);
  v44 = *(_QWORD *)&v42[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask];
  *(_QWORD *)&v42[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask] = v43;
  v45 = swift_release(v44);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v45);
  v46 = (_QWORD *)swift_allocObject(&unk_1007A81D8, 40, 7);
  v46[2] = 0;
  v46[3] = 0;
  v46[4] = v42;
  v47 = v42;
  v48 = sub_1005A91AC(v22, (uint64_t)&unk_1008399F8, (uint64_t)v46);
  v49 = *(_QWORD *)&v47[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask];
  *(_QWORD *)&v47[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask] = v48;
  v50 = swift_release(v49);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v50);
  v51 = (_QWORD *)swift_allocObject(&unk_1007A8200, 40, 7);
  v51[2] = 0;
  v51[3] = 0;
  v51[4] = v47;
  v52 = v47;
  v53 = sub_1005A91AC(v22, (uint64_t)&unk_100839A08, (uint64_t)v51);
  v54 = *(_QWORD *)&v52[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask];
  *(_QWORD *)&v52[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask] = v53;
  v55 = swift_release(v54);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v25)(v22, 1, 1, v24, v55);
  v56 = (_QWORD *)swift_allocObject(&unk_1007A8228, 40, 7);
  v56[2] = 0;
  v56[3] = 0;
  v56[4] = v52;
  v57 = v52;
  v58 = sub_1005A92D8(v22, (uint64_t)&unk_100839A18, (uint64_t)v56);
  v59 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask];
  *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask] = v58;
  swift_release(v59);
  sub_100541730();
LABEL_13:
  v60 = *(_QWORD *)(v0 + 56);
  v61 = *(_QWORD *)(v0 + 48);
  v62 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053E994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1[3] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100824368);
  v1[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ServiceSubscription(0);
  v1[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[14] = v9;
  v1[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ServiceSubscriptionRequest(0);
  v1[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[17] = v11;
  v1[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10053EA98, 0, 0);
}

uint64_t sub_10053EA98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[18];
  v2 = v0[3];
  ServiceSubscriptionRequest.init(authenticationBehavior:cacheBehavior:)(0, 1);
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_subscriptionClient + 24);
  v5 = v3[4];
  sub_100016804(v3, v4);
  dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)(v1, v4, v5);
  v8 = (char *)&dword_100839988 + dword_100839988;
  v6 = (_QWORD *)swift_task_alloc(unk_10083998C);
  v0[19] = v6;
  *v6 = v0;
  v6[1] = sub_10053EB6C;
  return ((uint64_t (*)(_QWORD, const char *, uint64_t, uint64_t, uint64_t))v8)(v0[15], "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers/FitnessPlusCardDataProvider.swift", 129, 2, 147);
}

uint64_t sub_10053EB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_10053ECD0;
  else
    v6 = sub_10053EBF0;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10053EBF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v3 = *(_QWORD *)(v1 + 136);
  v2 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v10 = *(_QWORD *)(v1 + 56);
  Date.init()(a1);
  v16 = ServiceSubscription.isSubscribed(date:)(v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  v11 = *(_QWORD *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 96);
  v13 = *(_QWORD *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(v16 & 1);
}

uint64_t sub_10053ECD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  static Log.default.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 160);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v6);
    v9 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 16) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    *v8 = v9;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[FitnessPlusCardDataProvider] Failed checking subscription status: %@", v7, 0xCu);
    v10 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10053EEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for BodyFocus(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832C40);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10053EF58, 0, 0);
}

uint64_t sub_10053EF58()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllBodyFocuses()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 158;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832C28 + dword_100832C28;
  v6 = (_QWORD *)swift_task_alloc(unk_100832C2C);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10053F04C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546DBC, v5);
}

uint64_t sub_10053F04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100546EF4;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_10053F0DC;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_10053F0DC(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (_QWORD *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v80 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v81 = (unint64_t)(63 - v13) >> 6;
  v84 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v82 = v10;
  v83 = v8;
  while (1)
  {
    if (v14)
    {
      v85 = (v14 - 1) & v14;
      v86 = v16;
      v34 = __clz(__rbit64(v14)) | (v16 << 6);
    }
    else
    {
      v35 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_41;
      if (v35 >= v81)
      {
LABEL_37:
        v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
        v69 = *(_QWORD *)(v8 + 80);
        v71 = *(_QWORD *)(v8 + 48);
        v70 = *(_QWORD *)(v8 + 56);
        v72 = *(_QWORD **)(v8 + 16);
        swift_release(v68);
        swift_bridgeObjectRelease(v68, v73, v74, v75, v76, v77, v78, v79);
        *v72 = v11;
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        (*(void (**)(void))(v8 + 8))();
        return;
      }
      v36 = *(_QWORD *)(v80 + 8 * v35);
      v37 = v16 + 1;
      if (!v36)
      {
        v37 = v16 + 2;
        if (v16 + 2 >= v81)
          goto LABEL_37;
        v36 = *(_QWORD *)(v80 + 8 * v37);
        if (!v36)
        {
          v37 = v16 + 3;
          if (v16 + 3 >= v81)
            goto LABEL_37;
          v36 = *(_QWORD *)(v80 + 8 * v37);
          if (!v36)
          {
            v37 = v16 + 4;
            if (v16 + 4 >= v81)
              goto LABEL_37;
            v36 = *(_QWORD *)(v80 + 8 * v37);
            if (!v36)
            {
              v37 = v16 + 5;
              if (v16 + 5 >= v81)
                goto LABEL_37;
              v36 = *(_QWORD *)(v80 + 8 * v37);
              if (!v36)
              {
                v38 = v16 + 6;
                if (v16 + 6 >= v81)
                  goto LABEL_37;
                v36 = *(_QWORD *)(v80 + 8 * v38);
                if (!v36)
                {
                  while (1)
                  {
                    v37 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_42;
                    if (v37 >= v81)
                      goto LABEL_37;
                    v36 = *(_QWORD *)(v80 + 8 * v37);
                    ++v38;
                    if (v36)
                      goto LABEL_25;
                  }
                }
                v37 = v16 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v85 = (v36 - 1) & v36;
      v86 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v40 = *(_QWORD *)(v8 + 48);
    v39 = *(_QWORD *)(v8 + 56);
    v41 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v39, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v10 + 72) * v34, v41, v15);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v40, v39, v41);
    v43 = BodyFocus.identifier.getter(v42);
    v45 = v44;
    v46 = BodyFocus.name.getter();
    v48 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v57 = sub_100438F74(v43, (uint64_t)v45);
    v58 = v11[2];
    v59 = (v50 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      break;
    v61 = (char)v50;
    if (v11[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
      v62 = sub_100438F74(v43, (uint64_t)v45);
      if ((v61 & 1) != (v50 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v57 = v62;
      if ((v61 & 1) != 0)
      {
LABEL_4:
        v17 = v11[7] + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v46;
        *(_QWORD *)(v17 + 8) = v48;
        goto LABEL_5;
      }
    }
    v11[(v57 >> 6) + 8] |= 1 << v57;
    v63 = (uint64_t *)(v11[6] + 16 * v57);
    *v63 = v43;
    v63[1] = (uint64_t)v45;
    v64 = (uint64_t *)(v11[7] + 16 * v57);
    *v64 = v46;
    v64[1] = v48;
    v65 = v11[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_40;
    v11[2] = v67;
    swift_bridgeObjectRetain(v45);
LABEL_5:
    v8 = v83;
    v25 = *(_QWORD *)(v83 + 48);
    v26 = *(_QWORD *)(v83 + 32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease(v45, v27, v28, v29, v30, v31, v32, v33);
    v10 = v82;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v25, v26);
    v14 = v85;
    v16 = v86;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10053F4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for CatalogModalityReference(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832C20);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10053F548, 0, 0);
}

uint64_t sub_10053F548()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllCatalogModalityReferences()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 168;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832C08 + dword_100832C08;
  v6 = (_QWORD *)swift_task_alloc(unk_100832C0C);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10053F63C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546DB0, v5);
}

uint64_t sub_10053F63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100546EF4;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_10053F6CC;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_10053F6CC(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (_QWORD *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v80 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v81 = (unint64_t)(63 - v13) >> 6;
  v84 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v82 = v10;
  v83 = v8;
  while (1)
  {
    if (v14)
    {
      v85 = (v14 - 1) & v14;
      v86 = v16;
      v34 = __clz(__rbit64(v14)) | (v16 << 6);
    }
    else
    {
      v35 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_41;
      if (v35 >= v81)
      {
LABEL_37:
        v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
        v69 = *(_QWORD *)(v8 + 80);
        v71 = *(_QWORD *)(v8 + 48);
        v70 = *(_QWORD *)(v8 + 56);
        v72 = *(_QWORD **)(v8 + 16);
        swift_release(v68);
        swift_bridgeObjectRelease(v68, v73, v74, v75, v76, v77, v78, v79);
        *v72 = v11;
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        (*(void (**)(void))(v8 + 8))();
        return;
      }
      v36 = *(_QWORD *)(v80 + 8 * v35);
      v37 = v16 + 1;
      if (!v36)
      {
        v37 = v16 + 2;
        if (v16 + 2 >= v81)
          goto LABEL_37;
        v36 = *(_QWORD *)(v80 + 8 * v37);
        if (!v36)
        {
          v37 = v16 + 3;
          if (v16 + 3 >= v81)
            goto LABEL_37;
          v36 = *(_QWORD *)(v80 + 8 * v37);
          if (!v36)
          {
            v37 = v16 + 4;
            if (v16 + 4 >= v81)
              goto LABEL_37;
            v36 = *(_QWORD *)(v80 + 8 * v37);
            if (!v36)
            {
              v37 = v16 + 5;
              if (v16 + 5 >= v81)
                goto LABEL_37;
              v36 = *(_QWORD *)(v80 + 8 * v37);
              if (!v36)
              {
                v38 = v16 + 6;
                if (v16 + 6 >= v81)
                  goto LABEL_37;
                v36 = *(_QWORD *)(v80 + 8 * v38);
                if (!v36)
                {
                  while (1)
                  {
                    v37 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_42;
                    if (v37 >= v81)
                      goto LABEL_37;
                    v36 = *(_QWORD *)(v80 + 8 * v37);
                    ++v38;
                    if (v36)
                      goto LABEL_25;
                  }
                }
                v37 = v16 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v85 = (v36 - 1) & v36;
      v86 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v40 = *(_QWORD *)(v8 + 48);
    v39 = *(_QWORD *)(v8 + 56);
    v41 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v39, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v10 + 72) * v34, v41, v15);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v40, v39, v41);
    v43 = CatalogModalityReference.identifier.getter(v42);
    v45 = v44;
    v46 = CatalogModalityReference.name.getter();
    v48 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v57 = sub_100438F74(v43, (uint64_t)v45);
    v58 = v11[2];
    v59 = (v50 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      break;
    v61 = (char)v50;
    if (v11[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
      v62 = sub_100438F74(v43, (uint64_t)v45);
      if ((v61 & 1) != (v50 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v57 = v62;
      if ((v61 & 1) != 0)
      {
LABEL_4:
        v17 = v11[7] + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v46;
        *(_QWORD *)(v17 + 8) = v48;
        goto LABEL_5;
      }
    }
    v11[(v57 >> 6) + 8] |= 1 << v57;
    v63 = (uint64_t *)(v11[6] + 16 * v57);
    *v63 = v43;
    v63[1] = (uint64_t)v45;
    v64 = (uint64_t *)(v11[7] + 16 * v57);
    *v64 = v46;
    v64[1] = v48;
    v65 = v11[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_40;
    v11[2] = v67;
    swift_bridgeObjectRetain(v45);
LABEL_5:
    v8 = v83;
    v25 = *(_QWORD *)(v83 + 48);
    v26 = *(_QWORD *)(v83 + 32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease(v45, v27, v28, v29, v30, v31, v32, v33);
    v10 = v82;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v25, v26);
    v14 = v85;
    v16 = v86;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10053FA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MusicGenre(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832C00);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10053FB38, 0, 0);
}

uint64_t sub_10053FB38()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllMusicGenres()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 178;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832BE8 + dword_100832BE8;
  v6 = (_QWORD *)swift_task_alloc(unk_100832BEC);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10053FC2C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546DA4, v5);
}

uint64_t sub_10053FC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100546EF4;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_10053FCBC;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_10053FCBC(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (_QWORD *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v80 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v81 = (unint64_t)(63 - v13) >> 6;
  v84 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v82 = v10;
  v83 = v8;
  while (1)
  {
    if (v14)
    {
      v85 = (v14 - 1) & v14;
      v86 = v16;
      v34 = __clz(__rbit64(v14)) | (v16 << 6);
    }
    else
    {
      v35 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_41;
      if (v35 >= v81)
      {
LABEL_37:
        v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
        v69 = *(_QWORD *)(v8 + 80);
        v71 = *(_QWORD *)(v8 + 48);
        v70 = *(_QWORD *)(v8 + 56);
        v72 = *(_QWORD **)(v8 + 16);
        swift_release(v68);
        swift_bridgeObjectRelease(v68, v73, v74, v75, v76, v77, v78, v79);
        *v72 = v11;
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        (*(void (**)(void))(v8 + 8))();
        return;
      }
      v36 = *(_QWORD *)(v80 + 8 * v35);
      v37 = v16 + 1;
      if (!v36)
      {
        v37 = v16 + 2;
        if (v16 + 2 >= v81)
          goto LABEL_37;
        v36 = *(_QWORD *)(v80 + 8 * v37);
        if (!v36)
        {
          v37 = v16 + 3;
          if (v16 + 3 >= v81)
            goto LABEL_37;
          v36 = *(_QWORD *)(v80 + 8 * v37);
          if (!v36)
          {
            v37 = v16 + 4;
            if (v16 + 4 >= v81)
              goto LABEL_37;
            v36 = *(_QWORD *)(v80 + 8 * v37);
            if (!v36)
            {
              v37 = v16 + 5;
              if (v16 + 5 >= v81)
                goto LABEL_37;
              v36 = *(_QWORD *)(v80 + 8 * v37);
              if (!v36)
              {
                v38 = v16 + 6;
                if (v16 + 6 >= v81)
                  goto LABEL_37;
                v36 = *(_QWORD *)(v80 + 8 * v38);
                if (!v36)
                {
                  while (1)
                  {
                    v37 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_42;
                    if (v37 >= v81)
                      goto LABEL_37;
                    v36 = *(_QWORD *)(v80 + 8 * v37);
                    ++v38;
                    if (v36)
                      goto LABEL_25;
                  }
                }
                v37 = v16 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v85 = (v36 - 1) & v36;
      v86 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v40 = *(_QWORD *)(v8 + 48);
    v39 = *(_QWORD *)(v8 + 56);
    v41 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v39, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v10 + 72) * v34, v41, v15);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v40, v39, v41);
    v43 = MusicGenre.identifier.getter(v42);
    v45 = v44;
    v46 = MusicGenre.name.getter();
    v48 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v57 = sub_100438F74(v43, (uint64_t)v45);
    v58 = v11[2];
    v59 = (v50 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      break;
    v61 = (char)v50;
    if (v11[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
      v62 = sub_100438F74(v43, (uint64_t)v45);
      if ((v61 & 1) != (v50 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v57 = v62;
      if ((v61 & 1) != 0)
      {
LABEL_4:
        v17 = v11[7] + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v46;
        *(_QWORD *)(v17 + 8) = v48;
        goto LABEL_5;
      }
    }
    v11[(v57 >> 6) + 8] |= 1 << v57;
    v63 = (uint64_t *)(v11[6] + 16 * v57);
    *v63 = v43;
    v63[1] = (uint64_t)v45;
    v64 = (uint64_t *)(v11[7] + 16 * v57);
    *v64 = v46;
    v64[1] = v48;
    v65 = v11[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_40;
    v11[2] = v67;
    swift_bridgeObjectRetain(v45);
LABEL_5:
    v8 = v83;
    v25 = *(_QWORD *)(v83 + 48);
    v26 = *(_QWORD *)(v83 + 32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease(v45, v27, v28, v29, v30, v31, v32, v33);
    v10 = v82;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v25, v26);
    v14 = v85;
    v16 = v86;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10054008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for SkillLevel(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832BE0);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100540128, 0, 0);
}

uint64_t sub_100540128()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllSkillLevels()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 188;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832BC8 + dword_100832BC8;
  v6 = (_QWORD *)swift_task_alloc(unk_100832BCC);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10054021C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546D98, v5);
}

uint64_t sub_10054021C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100546EF4;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_1005402AC;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_1005402AC(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (_QWORD *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v80 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v81 = (unint64_t)(63 - v13) >> 6;
  v84 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v82 = v10;
  v83 = v8;
  while (1)
  {
    if (v14)
    {
      v85 = (v14 - 1) & v14;
      v86 = v16;
      v34 = __clz(__rbit64(v14)) | (v16 << 6);
    }
    else
    {
      v35 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_41;
      if (v35 >= v81)
      {
LABEL_37:
        v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
        v69 = *(_QWORD *)(v8 + 80);
        v71 = *(_QWORD *)(v8 + 48);
        v70 = *(_QWORD *)(v8 + 56);
        v72 = *(_QWORD **)(v8 + 16);
        swift_release(v68);
        swift_bridgeObjectRelease(v68, v73, v74, v75, v76, v77, v78, v79);
        *v72 = v11;
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        (*(void (**)(void))(v8 + 8))();
        return;
      }
      v36 = *(_QWORD *)(v80 + 8 * v35);
      v37 = v16 + 1;
      if (!v36)
      {
        v37 = v16 + 2;
        if (v16 + 2 >= v81)
          goto LABEL_37;
        v36 = *(_QWORD *)(v80 + 8 * v37);
        if (!v36)
        {
          v37 = v16 + 3;
          if (v16 + 3 >= v81)
            goto LABEL_37;
          v36 = *(_QWORD *)(v80 + 8 * v37);
          if (!v36)
          {
            v37 = v16 + 4;
            if (v16 + 4 >= v81)
              goto LABEL_37;
            v36 = *(_QWORD *)(v80 + 8 * v37);
            if (!v36)
            {
              v37 = v16 + 5;
              if (v16 + 5 >= v81)
                goto LABEL_37;
              v36 = *(_QWORD *)(v80 + 8 * v37);
              if (!v36)
              {
                v38 = v16 + 6;
                if (v16 + 6 >= v81)
                  goto LABEL_37;
                v36 = *(_QWORD *)(v80 + 8 * v38);
                if (!v36)
                {
                  while (1)
                  {
                    v37 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_42;
                    if (v37 >= v81)
                      goto LABEL_37;
                    v36 = *(_QWORD *)(v80 + 8 * v37);
                    ++v38;
                    if (v36)
                      goto LABEL_25;
                  }
                }
                v37 = v16 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v85 = (v36 - 1) & v36;
      v86 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v40 = *(_QWORD *)(v8 + 48);
    v39 = *(_QWORD *)(v8 + 56);
    v41 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v39, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v10 + 72) * v34, v41, v15);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v40, v39, v41);
    v43 = SkillLevel.identifier.getter(v42);
    v45 = v44;
    v46 = SkillLevel.name.getter();
    v48 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v57 = sub_100438F74(v43, (uint64_t)v45);
    v58 = v11[2];
    v59 = (v50 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      break;
    v61 = (char)v50;
    if (v11[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
      v62 = sub_100438F74(v43, (uint64_t)v45);
      if ((v61 & 1) != (v50 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v57 = v62;
      if ((v61 & 1) != 0)
      {
LABEL_4:
        v17 = v11[7] + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v46;
        *(_QWORD *)(v17 + 8) = v48;
        goto LABEL_5;
      }
    }
    v11[(v57 >> 6) + 8] |= 1 << v57;
    v63 = (uint64_t *)(v11[6] + 16 * v57);
    *v63 = v43;
    v63[1] = (uint64_t)v45;
    v64 = (uint64_t *)(v11[7] + 16 * v57);
    *v64 = v46;
    v64[1] = v48;
    v65 = v11[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_40;
    v11[2] = v67;
    swift_bridgeObjectRetain(v45);
LABEL_5:
    v8 = v83;
    v25 = *(_QWORD *)(v83 + 48);
    v26 = *(_QWORD *)(v83 + 32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease(v45, v27, v28, v29, v30, v31, v32, v33);
    v10 = v82;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v25, v26);
    v14 = v85;
    v16 = v86;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10054067C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for CatalogTheme(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832BC0);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100540718, 0, 0);
}

uint64_t sub_100540718()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllCatalogThemes()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 198;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832BA8 + dword_100832BA8;
  v6 = (_QWORD *)swift_task_alloc(unk_100832BAC);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10054080C;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546D8C, v5);
}

uint64_t sub_10054080C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10054089C;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_100540910;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10054089C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100540910(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (_QWORD *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v80 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v81 = (unint64_t)(63 - v13) >> 6;
  v84 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v82 = v10;
  v83 = v8;
  while (1)
  {
    if (v14)
    {
      v85 = (v14 - 1) & v14;
      v86 = v16;
      v34 = __clz(__rbit64(v14)) | (v16 << 6);
    }
    else
    {
      v35 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_41;
      if (v35 >= v81)
      {
LABEL_37:
        v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
        v69 = *(_QWORD *)(v8 + 80);
        v71 = *(_QWORD *)(v8 + 48);
        v70 = *(_QWORD *)(v8 + 56);
        v72 = *(_QWORD **)(v8 + 16);
        swift_release(v68);
        swift_bridgeObjectRelease(v68, v73, v74, v75, v76, v77, v78, v79);
        *v72 = v11;
        swift_task_dealloc(v69);
        swift_task_dealloc(v70);
        swift_task_dealloc(v71);
        (*(void (**)(void))(v8 + 8))();
        return;
      }
      v36 = *(_QWORD *)(v80 + 8 * v35);
      v37 = v16 + 1;
      if (!v36)
      {
        v37 = v16 + 2;
        if (v16 + 2 >= v81)
          goto LABEL_37;
        v36 = *(_QWORD *)(v80 + 8 * v37);
        if (!v36)
        {
          v37 = v16 + 3;
          if (v16 + 3 >= v81)
            goto LABEL_37;
          v36 = *(_QWORD *)(v80 + 8 * v37);
          if (!v36)
          {
            v37 = v16 + 4;
            if (v16 + 4 >= v81)
              goto LABEL_37;
            v36 = *(_QWORD *)(v80 + 8 * v37);
            if (!v36)
            {
              v37 = v16 + 5;
              if (v16 + 5 >= v81)
                goto LABEL_37;
              v36 = *(_QWORD *)(v80 + 8 * v37);
              if (!v36)
              {
                v38 = v16 + 6;
                if (v16 + 6 >= v81)
                  goto LABEL_37;
                v36 = *(_QWORD *)(v80 + 8 * v38);
                if (!v36)
                {
                  while (1)
                  {
                    v37 = v38 + 1;
                    if (__OFADD__(v38, 1))
                      goto LABEL_42;
                    if (v37 >= v81)
                      goto LABEL_37;
                    v36 = *(_QWORD *)(v80 + 8 * v37);
                    ++v38;
                    if (v36)
                      goto LABEL_25;
                  }
                }
                v37 = v16 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v85 = (v36 - 1) & v36;
      v86 = v37;
      v34 = __clz(__rbit64(v36)) + (v37 << 6);
    }
    v40 = *(_QWORD *)(v8 + 48);
    v39 = *(_QWORD *)(v8 + 56);
    v41 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v39, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v10 + 72) * v34, v41, v15);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v40, v39, v41);
    v43 = CatalogTheme.identifier.getter(v42);
    v45 = v44;
    v46 = CatalogTheme.name.getter();
    v48 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v57 = sub_100438F74(v43, (uint64_t)v45);
    v58 = v11[2];
    v59 = (v50 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      break;
    v61 = (char)v50;
    if (v11[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
      v62 = sub_100438F74(v43, (uint64_t)v45);
      if ((v61 & 1) != (v50 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v57 = v62;
      if ((v61 & 1) != 0)
      {
LABEL_4:
        v17 = v11[7] + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v46;
        *(_QWORD *)(v17 + 8) = v48;
        goto LABEL_5;
      }
    }
    v11[(v57 >> 6) + 8] |= 1 << v57;
    v63 = (uint64_t *)(v11[6] + 16 * v57);
    *v63 = v43;
    v63[1] = (uint64_t)v45;
    v64 = (uint64_t *)(v11[7] + 16 * v57);
    *v64 = v46;
    v64[1] = v48;
    v65 = v11[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_40;
    v11[2] = v67;
    swift_bridgeObjectRetain(v45);
LABEL_5:
    v8 = v83;
    v25 = *(_QWORD *)(v83 + 48);
    v26 = *(_QWORD *)(v83 + 32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease(v45, v27, v28, v29, v30, v31, v32, v33);
    v10 = v82;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v25, v26);
    v14 = v85;
    v16 = v86;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_100540CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for TrainerReference(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[6] = swift_task_alloc(v7);
  v4[7] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100832BA0);
  v4[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[9] = v9;
  v4[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100540D7C, 0, 0);
}

uint64_t sub_100540D7C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[10];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of CatalogClientProtocol.queryAllTrainerReferences()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[11] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 208;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832B88 + dword_100832B88;
  v6 = (_QWORD *)swift_task_alloc(unk_100832B8C);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_100540E70;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546D80, v5);
}

uint64_t sub_100540E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100546EF4;
  }
  else
  {
    v7 = v3[10];
    v6 = v3[11];
    v10 = v3 + 8;
    v8 = v3[8];
    v9 = v10[1];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v5 = sub_100540F00;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_100540F00(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  SEL v64;
  char v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  const char *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  const char *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  SEL v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  CHWorkoutDetailHeartRateTableViewCell *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  CHWorkoutDetailHeartRateTableViewCell **v111;
  SEL v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  int64_t v124;

  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 40);
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v119 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v120 = (unint64_t)(63 - v13) >> 6;
  v122 = v9;
  v15 = swift_bridgeObjectRetain(v9);
  v16 = 0;
  v121 = v10;
  while (1)
  {
    if (v14)
    {
      v32 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v33 = v32 | (v16 << 6);
      goto LABEL_27;
    }
    v34 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_48;
    if (v34 >= v120)
    {
LABEL_45:
      v107 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 104);
      v108 = *(_QWORD *)(v8 + 80);
      v110 = *(_QWORD *)(v8 + 48);
      v109 = *(_QWORD *)(v8 + 56);
      v111 = *(CHWorkoutDetailHeartRateTableViewCell ***)(v8 + 16);
      swift_release(v107);
      swift_bridgeObjectRelease(v107, v112, v113, v114, v115, v116, v117, v118);
      *v111 = v11;
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      (*(void (**)(void))(v8 + 8))();
      return;
    }
    v35 = *(_QWORD *)(v119 + 8 * v34);
    ++v16;
    if (!v35)
    {
      v16 = v34 + 1;
      if (v34 + 1 >= v120)
        goto LABEL_45;
      v35 = *(_QWORD *)(v119 + 8 * v16);
      if (!v35)
      {
        v16 = v34 + 2;
        if (v34 + 2 >= v120)
          goto LABEL_45;
        v35 = *(_QWORD *)(v119 + 8 * v16);
        if (!v35)
        {
          v16 = v34 + 3;
          if (v34 + 3 >= v120)
            goto LABEL_45;
          v35 = *(_QWORD *)(v119 + 8 * v16);
          if (!v35)
          {
            v16 = v34 + 4;
            if (v34 + 4 >= v120)
              goto LABEL_45;
            v35 = *(_QWORD *)(v119 + 8 * v16);
            if (!v35)
              break;
          }
        }
      }
    }
LABEL_26:
    v14 = (v35 - 1) & v35;
    v33 = __clz(__rbit64(v35)) + (v16 << 6);
LABEL_27:
    v38 = *(_QWORD *)(v8 + 48);
    v37 = *(_QWORD *)(v8 + 56);
    v39 = *(_QWORD *)(v8 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v10 + 16))(v37, *(_QWORD *)(v122 + 48) + *(_QWORD *)(v10 + 72) * v33, v39, v15);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v38, v37, v39);
    v41 = TrainerReference.identifier.getter(v40);
    v43 = v42;
    v44 = TrainerReference.informalName.getter();
    if (v45)
    {
      v46 = v45;
      v47 = v16;
      v48 = v44;
      v123 = v14;
      v124 = v47;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      v57 = sub_100438F74(v41, (uint64_t)v43);
      v58 = *(_QWORD *)v11->cellPadding;
      v59 = (v50 & 1) == 0;
      v60 = v58 + v59;
      if (__OFADD__(v58, v59))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v61 = (char)v50;
      if (*(_QWORD *)v11->cellInset < v60)
      {
        sub_1003FD5F4(v60, isUniquelyReferenced_nonNull_native);
        v62 = sub_100438F74(v41, (uint64_t)v43);
        if ((v61 & 1) != (v50 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          return;
        }
        v57 = v62;
        if ((v61 & 1) == 0)
          goto LABEL_39;
LABEL_4:
        v17 = *(_QWORD *)v11[1].cellInset + 16 * v57;
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8), v50, v51, v52, v53, v54, v55, v56);
        *(_QWORD *)v17 = v48;
        *(_QWORD *)(v17 + 8) = v46;
LABEL_5:
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v18, v19, v20, v21, v22, v23, v24);
        swift_bridgeObjectRelease(v43, v25, v26, v27, v28, v29, v30, v31);
        v10 = v121;
        v14 = v123;
        v16 = v124;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1004043A0();
        if ((v61 & 1) != 0)
          goto LABEL_4;
      }
LABEL_39:
      *((_QWORD *)&v11[2].super.super.super.super.isa + (v57 >> 6)) |= 1 << v57;
      v102 = (uint64_t *)(*(_QWORD *)v11[1].cellPadding + 16 * v57);
      *v102 = v41;
      v102[1] = (uint64_t)v43;
      v103 = (uint64_t *)(*(_QWORD *)v11[1].cellInset + 16 * v57);
      *v103 = v48;
      v103[1] = v46;
      v104 = *(_QWORD *)v11->cellPadding;
      v105 = __OFADD__(v104, 1);
      v106 = v104 + 1;
      if (v105)
        goto LABEL_49;
      *(_QWORD *)v11->cellPadding = v106;
      swift_bridgeObjectRetain(v43);
      goto LABEL_5;
    }
    swift_bridgeObjectRetain(v11);
    v63 = sub_100438F74(v41, (uint64_t)v43);
    v65 = (char)v64;
    swift_bridgeObjectRelease(v11, v64, v66, v67, v68, v69, v70, v71);
    if ((v65 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
        sub_1004043A0();
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v11[1].cellPadding + 16 * v63 + 8), v79, v80, v81, v82, v83, v84, v85);
      v86 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v11[1].cellInset + 16 * v63 + 8);
      sub_1004D30E8(v63, (uint64_t)v11);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v87, v88, v89, v90, v91, v92, v93);
      swift_bridgeObjectRelease(v43, v94, v95, v96, v97, v98, v99, v100);
      v101 = v86;
    }
    else
    {
      v101 = v43;
    }
    swift_bridgeObjectRelease(v101, v72, v73, v74, v75, v76, v77, v78);
LABEL_6:
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 32));
  }
  v36 = v34 + 5;
  if (v36 >= v120)
    goto LABEL_45;
  v35 = *(_QWORD *)(v119 + 8 * v36);
  if (v35)
  {
    v16 = v36;
    goto LABEL_26;
  }
  while (1)
  {
    v16 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v16 >= v120)
      goto LABEL_45;
    v35 = *(_QWORD *)(v119 + 8 * v16);
    ++v36;
    if (v35)
      goto LABEL_26;
  }
LABEL_50:
  __break(1u);
}

uint64_t sub_100541364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_100047110(&qword_100832B80);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005413C8, 0, 0);
}

uint64_t sub_1005413C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[6];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_contentAvailabilityClient);
  v3 = v2[3];
  v4 = v2[4];
  sub_100016804(v2, v3);
  dispatch thunk of ContentAvailabilityClientProtocol.queryStorefrontLanguageCode()(v3, v4);
  v5 = swift_task_alloc(64);
  v0[7] = v5;
  *(_QWORD *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers"
                         "/FitnessPlusCardDataProvider.swift";
  *(_QWORD *)(v5 + 24) = 129;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = 217;
  *(_QWORD *)(v5 + 48) = v1;
  v8 = (char *)&dword_100832B70 + dword_100832B70;
  v6 = (_QWORD *)swift_task_alloc(unk_100832B74);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_1005414BC;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v8)(0, 0, 0xD000000000000013, 0x800000010069E840, sub_100546D74, v5);
}

uint64_t sub_1005414BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 64);
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = sub_1005416D8;
  }
  else
  {
    v8 = v4[6];
    v7 = v4[7];
    v11 = v4 + 4;
    v9 = v4[4];
    v10 = v11[1];
    swift_task_dealloc(v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v6 = sub_100541550;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100541550()
{
  uint64_t v0;
  void *v1;
  id v2;
  Class isa;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Class v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  Class v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  isa = (Class)objc_msgSend(v2, "localizations");

  if (!isa)
  {
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(0, &type metadata for String);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  v13 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  v14 = sub_100047110(&qword_100820020);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100622F90;
  *(_QWORD *)(v15 + 32) = v13;
  *(_QWORD *)(v15 + 40) = v12;
  v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v15, v17, v18, v19, v20, v21, v22, v23);
  v24 = objc_msgSend(v1, "preferredLocalizationsFromArray:forPreferences:", isa, v16);

  v25 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for String);
  if (*(_QWORD *)v25->cellPadding)
  {
    v33 = v25[1].super.super.super.super.isa;
    v34 = *(_QWORD *)v25[1].heartRateController;
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRelease(v25, v35, v36, v37, v38, v39, v40, v41);
    Locale.init(identifier:)(v33, v34);
  }
  else
  {
    swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
    static Locale.autoupdatingCurrent.getter(v42);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005416D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100541730()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  v1 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v5 = swift_getKeyPath(&unk_100644BF0);
  static Published.subscript.getter(&v13, v0, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  if (v15 >= 2u)
  {
    if (!(v13 ^ 1 | v14))
      return result;
  }
  else
  {
    sub_10027DC80(v13, v14, v15);
  }
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v0;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1007A80C0, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_10020D9C0((uint64_t)v3, (uint64_t)&unk_100839958, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100541878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4[36] = a4;
  v5 = sub_100047110((uint64_t *)&unk_10082ED90);
  v4[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v4[38] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[39] = v7;
  v4[40] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PersonalizationCandidate(0, v8);
  v4[41] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[42] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[43] = swift_task_alloc(v11);
  v4[44] = swift_task_alloc(v11);
  v12 = sub_100047110(&qword_100839960);
  v4[45] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PersonalizationShelfDescriptor(0);
  v4[46] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[47] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[48] = swift_task_alloc(v15);
  v4[49] = swift_task_alloc(v15);
  v16 = type metadata accessor for UUID(0);
  v4[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PersonalizationInferenceRequestOptions(0);
  v4[51] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[52] = v18;
  v4[53] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100832AD0);
  v4[54] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v4[55] = v20;
  v4[56] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PersonalizationInferenceResponse(0);
  v4[57] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v4[58] = v22;
  v4[59] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MainActor(0);
  v4[60] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  v4[61] = v24;
  v4[62] = v25;
  return swift_task_switch(sub_100541A60, v24, v25);
}

uint64_t sub_100541A60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t KeyPath;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t, char, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_networkEvaluator);
  v2 = v1[3];
  v3 = v1[4];
  sub_100016804(v1, v2);
  v4 = dispatch thunk of NetworkEvaluating.queryNetworkConditions()(v2, v3);
  v5 = NetworkConditions.rawValue.getter(v4);
  v7 = v6;
  v8 = NetworkConditions.rawValue.getter(1);
  if (v5 == v8 && v7 == v9)
  {
    v27 = *(_QWORD *)(v0 + 480);
    swift_bridgeObjectRelease_n(v7, 2);
    goto LABEL_8;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRelease(v7, v13, v14, v15, v16, v17, v18, v19);
  swift_bridgeObjectRelease(v11, v20, v21, v22, v23, v24, v25, v26);
  if ((v12 & 1) != 0)
  {
    v27 = *(_QWORD *)(v0 + 480);
LABEL_8:
    swift_release(v27);
    v28 = *(void **)(v0 + 288);
    KeyPath = swift_getKeyPath(&unk_100644BC8);
    v30 = swift_getKeyPath(&unk_100644BF0);
    *(_OWORD *)(v0 + 64) = xmmword_1006235A0;
    *(_BYTE *)(v0 + 80) = 2;
    v31 = v28;
    static Published.subscript.setter(v0 + 64, v31, KeyPath, v30);
    v32 = swift_getKeyPath(&unk_100644C10);
    v33 = swift_getKeyPath(&unk_100644C38);
    *(_BYTE *)(v0 + 60) = 0;
    static Published.subscript.setter(v0 + 60, v31, v32, v33);
    v34 = *(_QWORD *)(v0 + 448);
    v35 = *(_QWORD *)(v0 + 424);
    v37 = *(_QWORD *)(v0 + 392);
    v36 = *(_QWORD *)(v0 + 400);
    v38 = *(_QWORD *)(v0 + 384);
    v40 = *(_QWORD *)(v0 + 352);
    v39 = *(_QWORD *)(v0 + 360);
    v41 = *(_QWORD *)(v0 + 344);
    v42 = *(_QWORD *)(v0 + 320);
    v64 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v64);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v44 = *(_QWORD *)(v0 + 288);
  v45 = swift_getKeyPath(&unk_100644BC8);
  v46 = swift_getKeyPath(&unk_100644BF0);
  static Published.subscript.getter((_QWORD *)(v0 + 88), v44, v45, v46);
  swift_release(v45);
  swift_release(v46);
  v47 = *(_QWORD *)(v0 + 88);
  v48 = *(_QWORD *)(v0 + 96);
  v49 = *(unsigned __int8 *)(v0 + 104);
  if (v49 == 1)
  {
    sub_10027DC80(v47, v48, 1);
  }
  else
  {
    v50 = *(void **)(v0 + 288);
    sub_10027DC80(v47, v48, v49);
    v51 = swift_getKeyPath(&unk_100644BC8);
    v52 = swift_getKeyPath(&unk_100644BF0);
    *(_OWORD *)(v0 + 40) = xmmword_100623580;
    *(_BYTE *)(v0 + 56) = 2;
    static Published.subscript.setter(v0 + 40, v50, v51, v52);
  }
  v54 = *(_QWORD *)(v0 + 416);
  v53 = *(_QWORD *)(v0 + 424);
  v56 = *(_QWORD *)(v0 + 400);
  v55 = *(_QWORD *)(v0 + 408);
  v57 = (_QWORD *)(*(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_recommendationClient);
  v58 = v57[3];
  v59 = v57[4];
  v60 = sub_100016804(v57, v58);
  v61 = UUID.init()(v60);
  v62 = static RecommendationConstants.personalizationHeroContentRequestVersion.getter(v61);
  PersonalizationInferenceRequestOptions.init(correlationKey:eventType:source:trigger:version:)(v56, 1, 0, 1, v62);
  dispatch thunk of RecommendationClientProtocol.fetchPersonalizationInferenceResponse(options:)(v53, v58, v59);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
  v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_100839968 + dword_100839968);
  v63 = (_QWORD *)swift_task_alloc(unk_10083996C);
  *(_QWORD *)(v0 + 504) = v63;
  *v63 = v0;
  v63[1] = sub_100541E08;
  return v65(*(_QWORD *)(v0 + 472), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Providers/FitnessPlusCardDataProvider.swift", 129, 2, 261);
}

uint64_t sub_100541E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 504);
  v5 = *(_QWORD *)(*v1 + 440);
  v4 = *(_QWORD *)(*v1 + 448);
  v6 = *(_QWORD *)(*v1 + 432);
  *(_QWORD *)(*v1 + 512) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_100543DCC;
  else
    v7 = sub_100541E90;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 488), *(_QWORD *)(v2 + 496));
}

uint64_t sub_100541E90()
{
  uint64_t v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, unint64_t, _QWORD, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  char v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  const char *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  const char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  const char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  const char *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)();
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  const char *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  uint64_t v149;
  const char *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  const char *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  uint64_t v166;
  const char *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  uint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  uint64_t v179;
  CHWorkoutDetailHeartRateTableViewCell *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  CHWorkoutDetailHeartRateTableViewCell *v185;

  v1 = PersonalizationInferenceResponse.shelves.getter();
  v2 = (CHWorkoutDetailHeartRateTableViewCell *)v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 376);
    v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD, __n128))(v4 + 16);
    v180 = (CHWorkoutDetailHeartRateTableViewCell *)v1;
    v8 = swift_bridgeObjectRetain(v1);
    while (1)
    {
      v9 = v7(*(_QWORD *)(v0 + 384), v5, *(_QWORD *)(v0 + 368), v8);
      v10 = PersonalizationShelfDescriptor.displayStyle.getter(v9);
      if (v10 == 0x4C4553554F524143 && v11 == (const char *)0xE800000000000000)
        break;
      v19 = (CHWorkoutDetailHeartRateTableViewCell *)v11;
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0x4C4553554F524143, 0xE800000000000000, 0);
      swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
      if ((v20 & 1) != 0)
        goto LABEL_12;
      (*(void (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
      v5 += v6;
      if (!--v3)
      {
        v2 = v180;
        swift_bridgeObjectRelease(v180, v35, v36, v37, v38, v39, v40, v41);
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v11, v12, v13, v14, v15, v16, v17);
LABEL_12:
    v2 = v180;
    swift_bridgeObjectRelease(v180, v28, v29, v30, v31, v32, v33, v34);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 32))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
    v42 = 0;
  }
  else
  {
LABEL_10:
    v42 = 1;
  }
  v44 = *(_QWORD *)(v0 + 368);
  v43 = *(_QWORD *)(v0 + 376);
  v45 = *(_QWORD *)(v0 + 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v45, v42, 1, v44);
  swift_bridgeObjectRelease(v2, v46, v47, v48, v49, v50, v51, v52);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v44) == 1)
  {
    v181 = *(_QWORD *)(v0 + 472);
    v53 = *(_QWORD *)(v0 + 456);
    v54 = *(_QWORD *)(v0 + 464);
    v55 = *(_QWORD *)(v0 + 360);
    v56 = *(void **)(v0 + 288);
    swift_release(*(_QWORD *)(v0 + 480));
    sub_10001BE90(v55, &qword_100839960);
    *(_BYTE *)(v0 + 59) = 1;
    v57 = sub_100546774();
    v58 = Error.localizedDescription.getter(&type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError, v57);
    v60 = v59;
    KeyPath = swift_getKeyPath(&unk_100644BC8);
    v62 = swift_getKeyPath(&unk_100644BF0);
    *(_QWORD *)(v0 + 184) = v58;
    *(_QWORD *)(v0 + 192) = v60;
    *(_BYTE *)(v0 + 200) = 1;
    static Published.subscript.setter(v0 + 184, v56, KeyPath, v62);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v181, v53);
LABEL_31:
    v127 = *(_QWORD *)(v0 + 448);
    v128 = *(_QWORD *)(v0 + 424);
    v130 = *(_QWORD *)(v0 + 392);
    v129 = *(_QWORD *)(v0 + 400);
    v131 = *(_QWORD *)(v0 + 384);
    v133 = *(_QWORD *)(v0 + 352);
    v132 = *(_QWORD *)(v0 + 360);
    v134 = *(_QWORD *)(v0 + 344);
    v135 = *(_QWORD *)(v0 + 320);
    v184 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v184);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v63 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 32))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
  v64 = (CHWorkoutDetailHeartRateTableViewCell *)PersonalizationShelfDescriptor.candidates.getter(v63);
  v72 = &_swiftEmptyArrayStorage;
  v182 = *(_QWORD *)v64->cellPadding;
  v185 = &_swiftEmptyArrayStorage;
  if (!v182)
  {
LABEL_26:
    swift_bridgeObjectRelease(v64, v65, v66, v67, v68, v69, v70, v71);
    if (!*(_QWORD *)v72->cellPadding)
    {
      v116 = *(_QWORD *)(v0 + 480);
      v177 = *(_QWORD *)(v0 + 464);
      v179 = *(_QWORD *)(v0 + 456);
      v183 = *(_QWORD *)(v0 + 472);
      v117 = *(_QWORD *)(v0 + 392);
      v119 = *(_QWORD *)(v0 + 368);
      v118 = *(_QWORD *)(v0 + 376);
      v120 = *(void **)(v0 + 288);
      swift_release(v72);
      swift_release(v116);
      *(_BYTE *)(v0 + 57) = 0;
      v121 = sub_100546774();
      v122 = Error.localizedDescription.getter(&type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError, v121);
      v124 = v123;
      v125 = swift_getKeyPath(&unk_100644BC8);
      v126 = swift_getKeyPath(&unk_100644BF0);
      *(_QWORD *)(v0 + 136) = v122;
      *(_QWORD *)(v0 + 144) = v124;
      *(_BYTE *)(v0 + 152) = 1;
      static Published.subscript.setter(v0 + 136, v120, v125, v126);
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v117, v119);
      (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v183, v179);
      goto LABEL_31;
    }
    v97 = *(_QWORD *)(v0 + 288);
    v98 = *(CHWorkoutDetailHeartRateTableViewCell **)(v97
                                                    + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates);
    *(_QWORD *)(v97 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates) = v72;
    swift_bridgeObjectRelease(v98, v90, v91, v92, v93, v94, v95, v96);
    v106 = *(_QWORD *)(v97 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask);
    *(_QWORD *)(v0 + 520) = v106;
    if (v106)
    {
      v107 = v0 + 232;
      v108 = async function pointer to Task.value.getter[1];
      swift_retain(v106);
      v109 = (_QWORD *)swift_task_alloc(v108);
      *(_QWORD *)(v0 + 528) = v109;
      v110 = sub_100047110(&qword_100839980);
      v111 = sub_100047110(&qword_10082EEA0);
      v112 = sub_1005427F0;
    }
    else
    {
      *(_QWORD *)(v0 + 544) = sub_100436C34(&_swiftEmptyArrayStorage, v99, v100, v101, v102, v103, v104, v105);
      v137 = *(_QWORD *)(*(_QWORD *)(v0 + 288)
                       + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask);
      *(_QWORD *)(v0 + 552) = v137;
      if (v137)
      {
        v138 = async function pointer to Task.value.getter[1];
        swift_retain(v137);
        v139 = (_QWORD *)swift_task_alloc(v138);
        *(_QWORD *)(v0 + 560) = v139;
        v111 = sub_100047110(&qword_10082EEA0);
        *v139 = v0;
        v139[1] = sub_100542C1C;
        v113 = *(_QWORD *)(v0 + 296);
        v115 = *(_QWORD *)(v0 + 304);
        v114 = v137;
        return Task.value.getter(v113, v114, v115, v111, &protocol self-conformance witness table for Error);
      }
      v140 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 312) + 56))(*(_QWORD *)(v0 + 296), 1, 1, *(_QWORD *)(v0 + 304));
      v141 = *(_QWORD *)(v0 + 296);
      static Locale.autoupdatingCurrent.getter(v140);
      sub_10001BE90(v141, (uint64_t *)&unk_10082ED90);
      v106 = *(_QWORD *)(*(_QWORD *)(v0 + 288)
                       + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
      *(_QWORD *)(v0 + 576) = v106;
      if (v106)
      {
        v107 = v0 + 248;
        v149 = async function pointer to Task.value.getter[1];
        swift_retain(v106);
        v109 = (_QWORD *)swift_task_alloc(v149);
        *(_QWORD *)(v0 + 584) = v109;
        v110 = sub_100047110(&qword_100839980);
        v111 = sub_100047110(&qword_10082EEA0);
        v112 = sub_10054301C;
      }
      else
      {
        *(_QWORD *)(v0 + 600) = sub_100436C34(&_swiftEmptyArrayStorage, v142, v143, v144, v145, v146, v147, v148);
        v106 = *(_QWORD *)(*(_QWORD *)(v0 + 288)
                         + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
        *(_QWORD *)(v0 + 608) = v106;
        if (v106)
        {
          v107 = v0 + 256;
          v157 = async function pointer to Task.value.getter[1];
          swift_retain(v106);
          v109 = (_QWORD *)swift_task_alloc(v157);
          *(_QWORD *)(v0 + 616) = v109;
          v110 = sub_100047110(&qword_100839980);
          v111 = sub_100047110(&qword_10082EEA0);
          v112 = sub_100543350;
        }
        else
        {
          *(_QWORD *)(v0 + 632) = sub_100436C34(&_swiftEmptyArrayStorage, v150, v151, v152, v153, v154, v155, v156);
          v106 = *(_QWORD *)(*(_QWORD *)(v0 + 288)
                           + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
          *(_QWORD *)(v0 + 640) = v106;
          if (!v106)
            goto LABEL_42;
          v107 = v0 + 264;
          v158 = async function pointer to Task.value.getter[1];
          swift_retain(v106);
          v109 = (_QWORD *)swift_task_alloc(v158);
          *(_QWORD *)(v0 + 648) = v109;
          v110 = sub_100047110(&qword_100839980);
          v111 = sub_100047110(&qword_10082EEA0);
          v112 = sub_100543614;
        }
      }
    }
LABEL_29:
    *v109 = v0;
    v109[1] = v112;
    v113 = v107;
    v114 = v106;
    v115 = v110;
    return Task.value.getter(v113, v114, v115, v111, &protocol self-conformance witness table for Error);
  }
  v73 = 0;
  v74 = *(_QWORD *)(v0 + 336);
  v178 = v64;
  while (v73 < *(_QWORD *)v64->cellPadding)
  {
    v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v76 = *(_QWORD *)(v74 + 72);
    v77 = (*(uint64_t (**)(_QWORD, char *, _QWORD))(v74 + 16))(*(_QWORD *)(v0 + 352), (char *)v64 + v75 + v76 * v73, *(_QWORD *)(v0 + 328));
    v78 = PersonalizationCandidate.referenceType.getter(v77);
    v80 = v79;
    *(_QWORD *)(v0 + 208) = v78;
    *(_QWORD *)(v0 + 216) = v79;
    v82 = v81 & 1;
    *(_BYTE *)(v0 + 224) = v81 & 1;
    *(_OWORD *)(v0 + 160) = xmmword_100644A70;
    *(_BYTE *)(v0 + 176) = 1;
    v83 = sub_100546904();
    v84 = sub_100546948();
    LOBYTE(v83) = static PortableEnum<>.== infix(_:_:)(v0 + 208, v0 + 160, &type metadata for PersonalizationCandidateReferenceType, v83, v84, &protocol witness table for String);
    sub_100327B70(v78, v80, v82);
    if ((v83 & 1) != 0)
    {
      v85 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
      v85(*(char **)(v0 + 344), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
      if ((swift_isUniquelyReferenced_nonNull_native(v72) & 1) == 0)
      {
        sub_100121D28(0, *(_QWORD *)v72->cellPadding + 1, 1);
        v72 = v185;
      }
      v87 = *(_QWORD *)v72->cellPadding;
      v86 = *(_QWORD *)v72->cellInset;
      if (v87 >= v86 >> 1)
      {
        sub_100121D28(v86 > 1, v87 + 1, 1);
        v72 = v185;
      }
      v88 = *(_QWORD *)(v0 + 344);
      v89 = *(_QWORD *)(v0 + 328);
      *(_QWORD *)v72->cellPadding = v87 + 1;
      v85((char *)v72 + v75 + v87 * v76, v88, v89);
      v185 = v72;
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v74 + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
    }
    ++v73;
    v64 = v178;
    if (v182 == v73)
      goto LABEL_26;
  }
  __break(1u);
LABEL_42:
  *(_QWORD *)(v0 + 664) = sub_100436C34(&_swiftEmptyArrayStorage, v65, v66, v67, v68, v69, v70, v71);
  v106 = *(_QWORD *)(*(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  *(_QWORD *)(v0 + 672) = v106;
  if (v106)
  {
    v107 = v0 + 272;
    v166 = async function pointer to Task.value.getter[1];
    swift_retain(v106);
    v109 = (_QWORD *)swift_task_alloc(v166);
    *(_QWORD *)(v0 + 680) = v109;
    v110 = sub_100047110(&qword_100839980);
    v111 = sub_100047110(&qword_10082EEA0);
    v112 = sub_100543870;
    goto LABEL_29;
  }
  *(_QWORD *)(v0 + 696) = sub_100436C34(&_swiftEmptyArrayStorage, v159, v160, v161, v162, v163, v164, v165);
  v106 = *(_QWORD *)(*(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  *(_QWORD *)(v0 + 704) = v106;
  if (v106)
  {
    v107 = v0 + 240;
    v174 = async function pointer to Task.value.getter[1];
    swift_retain(v106);
    v109 = (_QWORD *)swift_task_alloc(v174);
    *(_QWORD *)(v0 + 712) = v109;
    v110 = sub_100047110(&qword_100839980);
    v111 = sub_100047110(&qword_10082EEA0);
    v112 = sub_100543A5C;
    goto LABEL_29;
  }
  v175 = sub_100436C34(&_swiftEmptyArrayStorage, v167, v168, v169, v170, v171, v172, v173);
  *(_QWORD *)(v0 + 728) = v175;
  v176 = (_QWORD *)swift_task_alloc(dword_100839914);
  *(_QWORD *)(v0 + 736) = v176;
  *v176 = v0;
  v176[1] = sub_100543BA8;
  return sub_100544D84(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 696), v175);
}

uint64_t sub_1005427F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 528);
  v4 = *(_QWORD *)(*v1 + 520);
  *(_QWORD *)(*v1 + 536) = v0;
  swift_task_dealloc(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_100543F64;
  else
    v5 = sub_100542864;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 488), *(_QWORD *)(v2 + 496));
}

uint64_t sub_100542864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)();
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  const char *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  unint64_t v56;
  _QWORD *v57;

  v0[68] = v0[29];
  v1 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask);
  v0[69] = v1;
  if (v1)
  {
    v2 = async function pointer to Task.value.getter[1];
    swift_retain(v1);
    v3 = (_QWORD *)swift_task_alloc(v2);
    v0[70] = v3;
    v4 = sub_100047110(&qword_10082EEA0);
    *v3 = v0;
    v3[1] = sub_100542C1C;
    v5 = (_QWORD *)v0[37];
    v6 = v0[38];
    v7 = v1;
    return Task.value.getter(v5, v7, v6, v4, &protocol self-conformance witness table for Error);
  }
  v8 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[39] + 56))(v0[37], 1, 1, v0[38]);
  v9 = v0[37];
  static Locale.autoupdatingCurrent.getter(v8);
  sub_10001BE90(v9, (uint64_t *)&unk_10082ED90);
  v17 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
  v0[72] = v17;
  if (v17)
  {
    v18 = v0 + 31;
    v19 = async function pointer to Task.value.getter[1];
    swift_retain(v17);
    v20 = (_QWORD *)swift_task_alloc(v19);
    v0[73] = v20;
    v21 = sub_100047110(&qword_100839980);
    v4 = sub_100047110(&qword_10082EEA0);
    v22 = sub_10054301C;
LABEL_13:
    *v20 = v0;
    v20[1] = v22;
    v5 = v18;
    v7 = v17;
    v6 = v21;
    return Task.value.getter(v5, v7, v6, v4, &protocol self-conformance witness table for Error);
  }
  v0[75] = sub_100436C34(&_swiftEmptyArrayStorage, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v0[76] = v17;
  if (v17)
  {
    v18 = v0 + 32;
    v30 = async function pointer to Task.value.getter[1];
    swift_retain(v17);
    v20 = (_QWORD *)swift_task_alloc(v30);
    v0[77] = v20;
    v21 = sub_100047110(&qword_100839980);
    v4 = sub_100047110(&qword_10082EEA0);
    v22 = sub_100543350;
    goto LABEL_13;
  }
  v0[79] = sub_100436C34(&_swiftEmptyArrayStorage, v23, v24, v25, v26, v27, v28, v29);
  v17 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[80] = v17;
  if (v17)
  {
    v18 = v0 + 33;
    v38 = async function pointer to Task.value.getter[1];
    swift_retain(v17);
    v20 = (_QWORD *)swift_task_alloc(v38);
    v0[81] = v20;
    v21 = sub_100047110(&qword_100839980);
    v4 = sub_100047110(&qword_10082EEA0);
    v22 = sub_100543614;
    goto LABEL_13;
  }
  v0[83] = sub_100436C34(&_swiftEmptyArrayStorage, v31, v32, v33, v34, v35, v36, v37);
  v17 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[84] = v17;
  if (v17)
  {
    v18 = v0 + 34;
    v46 = async function pointer to Task.value.getter[1];
    swift_retain(v17);
    v20 = (_QWORD *)swift_task_alloc(v46);
    v0[85] = v20;
    v21 = sub_100047110(&qword_100839980);
    v4 = sub_100047110(&qword_10082EEA0);
    v22 = sub_100543870;
    goto LABEL_13;
  }
  v0[87] = sub_100436C34(&_swiftEmptyArrayStorage, v39, v40, v41, v42, v43, v44, v45);
  v17 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[88] = v17;
  if (v17)
  {
    v18 = v0 + 30;
    v54 = async function pointer to Task.value.getter[1];
    swift_retain(v17);
    v20 = (_QWORD *)swift_task_alloc(v54);
    v0[89] = v20;
    v21 = sub_100047110(&qword_100839980);
    v4 = sub_100047110(&qword_10082EEA0);
    v22 = sub_100543A5C;
    goto LABEL_13;
  }
  v56 = sub_100436C34(&_swiftEmptyArrayStorage, v47, v48, v49, v50, v51, v52, v53);
  v0[91] = v56;
  v57 = (_QWORD *)swift_task_alloc(dword_100839914);
  v0[92] = v57;
  *v57 = v0;
  v57[1] = sub_100543BA8;
  return sub_100544D84(v0[68], v0[40], v0[75], v0[79], v0[83], v0[87], v56);
}

uint64_t sub_100542C1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 560);
  *(_QWORD *)(*v1 + 568) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v11 = *(_QWORD *)(v2 + 552);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v2 + 544), v4, v5, v6, v7, v8, v9, v10);
    swift_release(v11);
    v12 = *(_QWORD *)(v2 + 488);
    v13 = *(_QWORD *)(v2 + 496);
    v14 = sub_100544128;
  }
  else
  {
    v12 = *(_QWORD *)(v2 + 488);
    v13 = *(_QWORD *)(v2 + 496);
    v14 = sub_100542C94;
  }
  return swift_task_switch(v14, v12, v13);
}

uint64_t sub_100542C94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  const char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  const char *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  unint64_t v55;
  _QWORD *v56;

  v1 = v0[38];
  v2 = v0[39];
  v3 = v0[37];
  v4 = swift_release(v0[69]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v2 + 56))(v3, 0, 1, v1, v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v6 = v0[40];
  if (v5 == 1)
  {
    v7 = v0[37];
    static Locale.autoupdatingCurrent.getter(v6);
    sub_10001BE90(v7, (uint64_t *)&unk_10082ED90);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[39] + 32))(v6, v0[37], v0[38]);
  }
  v15 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
  v0[72] = v15;
  if (v15)
  {
    v16 = v0 + 31;
    v17 = async function pointer to Task.value.getter[1];
    swift_retain(v15);
    v18 = (_QWORD *)swift_task_alloc(v17);
    v0[73] = v18;
    v19 = sub_100047110(&qword_100839980);
    v20 = sub_100047110(&qword_10082EEA0);
    v21 = sub_10054301C;
LABEL_14:
    *v18 = v0;
    v18[1] = v21;
    return Task.value.getter(v16, v15, v19, v20, &protocol self-conformance witness table for Error);
  }
  v0[75] = sub_100436C34(&_swiftEmptyArrayStorage, v8, v9, v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v0[76] = v15;
  if (v15)
  {
    v16 = v0 + 32;
    v29 = async function pointer to Task.value.getter[1];
    swift_retain(v15);
    v18 = (_QWORD *)swift_task_alloc(v29);
    v0[77] = v18;
    v19 = sub_100047110(&qword_100839980);
    v20 = sub_100047110(&qword_10082EEA0);
    v21 = sub_100543350;
    goto LABEL_14;
  }
  v0[79] = sub_100436C34(&_swiftEmptyArrayStorage, v22, v23, v24, v25, v26, v27, v28);
  v15 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[80] = v15;
  if (v15)
  {
    v16 = v0 + 33;
    v37 = async function pointer to Task.value.getter[1];
    swift_retain(v15);
    v18 = (_QWORD *)swift_task_alloc(v37);
    v0[81] = v18;
    v19 = sub_100047110(&qword_100839980);
    v20 = sub_100047110(&qword_10082EEA0);
    v21 = sub_100543614;
    goto LABEL_14;
  }
  v0[83] = sub_100436C34(&_swiftEmptyArrayStorage, v30, v31, v32, v33, v34, v35, v36);
  v15 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[84] = v15;
  if (v15)
  {
    v16 = v0 + 34;
    v45 = async function pointer to Task.value.getter[1];
    swift_retain(v15);
    v18 = (_QWORD *)swift_task_alloc(v45);
    v0[85] = v18;
    v19 = sub_100047110(&qword_100839980);
    v20 = sub_100047110(&qword_10082EEA0);
    v21 = sub_100543870;
    goto LABEL_14;
  }
  v0[87] = sub_100436C34(&_swiftEmptyArrayStorage, v38, v39, v40, v41, v42, v43, v44);
  v15 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[88] = v15;
  if (v15)
  {
    v16 = v0 + 30;
    v53 = async function pointer to Task.value.getter[1];
    swift_retain(v15);
    v18 = (_QWORD *)swift_task_alloc(v53);
    v0[89] = v18;
    v19 = sub_100047110(&qword_100839980);
    v20 = sub_100047110(&qword_10082EEA0);
    v21 = sub_100543A5C;
    goto LABEL_14;
  }
  v55 = sub_100436C34(&_swiftEmptyArrayStorage, v46, v47, v48, v49, v50, v51, v52);
  v0[91] = v55;
  v56 = (_QWORD *)swift_task_alloc(dword_100839914);
  v0[92] = v56;
  *v56 = v0;
  v56[1] = sub_100543BA8;
  return sub_100544D84(v0[68], v0[40], v0[75], v0[79], v0[83], v0[87], v55);
}

uint64_t sub_10054301C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v3);
  v4 = v2[72];
  if (v0)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[68];
    (*(void (**)(_QWORD, _QWORD))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
    swift_release(v4);
    v13 = v2[61];
    v14 = v2[62];
    v15 = sub_1005442EC;
  }
  else
  {
    swift_release(v2[72]);
    v13 = v2[61];
    v14 = v2[62];
    v15 = sub_1005430B8;
  }
  return swift_task_switch(v15, v13, v14);
}

uint64_t sub_1005430B8(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  unint64_t v41;
  _QWORD *v42;

  v8[75] = v8[31];
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v8[76] = v9;
  if (v9)
  {
    v10 = v8 + 32;
    v11 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v11);
    v8[77] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543350;
LABEL_9:
    *v12 = v8;
    v12[1] = v15;
    return Task.value.getter(v10, v9, v13, v14, &protocol self-conformance witness table for Error);
  }
  v8[79] = sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v8[80] = v9;
  if (v9)
  {
    v10 = v8 + 33;
    v23 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v23);
    v8[81] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543614;
    goto LABEL_9;
  }
  v8[83] = sub_100436C34(&_swiftEmptyArrayStorage, v16, v17, v18, v19, v20, v21, v22);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v8[84] = v9;
  if (v9)
  {
    v10 = v8 + 34;
    v31 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v31);
    v8[85] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543870;
    goto LABEL_9;
  }
  v8[87] = sub_100436C34(&_swiftEmptyArrayStorage, v24, v25, v26, v27, v28, v29, v30);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v8[88] = v9;
  if (v9)
  {
    v10 = v8 + 30;
    v39 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v39);
    v8[89] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543A5C;
    goto LABEL_9;
  }
  v41 = sub_100436C34(&_swiftEmptyArrayStorage, v32, v33, v34, v35, v36, v37, v38);
  v8[91] = v41;
  v42 = (_QWORD *)swift_task_alloc(dword_100839914);
  v8[92] = v42;
  *v42 = v8;
  v42[1] = sub_100543BA8;
  return sub_100544D84(v8[68], v8[40], v8[75], v8[79], v8[83], v8[87], v41);
}

uint64_t sub_100543350()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 616);
  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc(v3);
  v4 = v2[76];
  if (v0)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[75];
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)v2[68];
    (*(void (**)(_QWORD, _QWORD))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
    swift_bridgeObjectRelease(v5, v14, v15, v16, v17, v18, v19, v20);
    swift_release(v4);
    v21 = v2[61];
    v22 = v2[62];
    v23 = sub_1005444B0;
  }
  else
  {
    swift_release(v2[76]);
    v21 = v2[61];
    v22 = v2[62];
    v23 = sub_1005433F8;
  }
  return swift_task_switch(v23, v21, v22);
}

uint64_t sub_1005433F8(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v33;
  _QWORD *v34;

  v8[79] = v8[32];
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v8[80] = v9;
  if (v9)
  {
    v10 = v8 + 33;
    v11 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v11);
    v8[81] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543614;
LABEL_7:
    *v12 = v8;
    v12[1] = v15;
    return Task.value.getter(v10, v9, v13, v14, &protocol self-conformance witness table for Error);
  }
  v8[83] = sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v8[84] = v9;
  if (v9)
  {
    v10 = v8 + 34;
    v23 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v23);
    v8[85] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543870;
    goto LABEL_7;
  }
  v8[87] = sub_100436C34(&_swiftEmptyArrayStorage, v16, v17, v18, v19, v20, v21, v22);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v8[88] = v9;
  if (v9)
  {
    v10 = v8 + 30;
    v31 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v31);
    v8[89] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543A5C;
    goto LABEL_7;
  }
  v33 = sub_100436C34(&_swiftEmptyArrayStorage, v24, v25, v26, v27, v28, v29, v30);
  v8[91] = v33;
  v34 = (_QWORD *)swift_task_alloc(dword_100839914);
  v8[92] = v34;
  *v34 = v8;
  v34[1] = sub_100543BA8;
  return sub_100544D84(v8[68], v8[40], v8[75], v8[79], v8[83], v8[87], v33);
}

uint64_t sub_100543614()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 648);
  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc(v3);
  v4 = v2[80];
  if (v0)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[79];
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)v2[75];
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)v2[68];
    (*(void (**)(_QWORD, _QWORD))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
    swift_bridgeObjectRelease(v6, v15, v16, v17, v18, v19, v20, v21);
    swift_bridgeObjectRelease(v5, v22, v23, v24, v25, v26, v27, v28);
    swift_release(v4);
    v29 = v2[61];
    v30 = v2[62];
    v31 = sub_100544674;
  }
  else
  {
    swift_release(v2[80]);
    v29 = v2[61];
    v30 = v2[62];
    v31 = sub_1005436D0;
  }
  return swift_task_switch(v31, v29, v30);
}

uint64_t sub_1005436D0(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  unint64_t v25;
  _QWORD *v26;

  v8[83] = v8[33];
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v8[84] = v9;
  if (v9)
  {
    v10 = v8 + 34;
    v11 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v11);
    v8[85] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543870;
LABEL_5:
    *v12 = v8;
    v12[1] = v15;
    return Task.value.getter(v10, v9, v13, v14, &protocol self-conformance witness table for Error);
  }
  v8[87] = sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v8[88] = v9;
  if (v9)
  {
    v10 = v8 + 30;
    v23 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v12 = (_QWORD *)swift_task_alloc(v23);
    v8[89] = v12;
    v13 = sub_100047110(&qword_100839980);
    v14 = sub_100047110(&qword_10082EEA0);
    v15 = sub_100543A5C;
    goto LABEL_5;
  }
  v25 = sub_100436C34(&_swiftEmptyArrayStorage, v16, v17, v18, v19, v20, v21, v22);
  v8[91] = v25;
  v26 = (_QWORD *)swift_task_alloc(dword_100839914);
  v8[92] = v26;
  *v26 = v8;
  v26[1] = sub_100543BA8;
  return sub_100544D84(v8[68], v8[40], v8[75], v8[79], v8[83], v8[87], v25);
}

uint64_t sub_100543870()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 680);
  *(_QWORD *)(*(_QWORD *)v1 + 688) = v0;
  swift_task_dealloc(v3);
  v4 = v2[84];
  if (v0)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[83];
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)v2[79];
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)v2[75];
    v8 = (CHWorkoutDetailHeartRateTableViewCell *)v2[68];
    (*(void (**)(_QWORD, _QWORD))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
    swift_bridgeObjectRelease(v7, v16, v17, v18, v19, v20, v21, v22);
    swift_bridgeObjectRelease(v6, v23, v24, v25, v26, v27, v28, v29);
    swift_bridgeObjectRelease(v5, v30, v31, v32, v33, v34, v35, v36);
    swift_release(v4);
    v37 = v2[61];
    v38 = v2[62];
    v39 = sub_100544838;
  }
  else
  {
    swift_release(v2[84]);
    v37 = v2[61];
    v38 = v2[62];
    v39 = sub_100543938;
  }
  return swift_task_switch(v39, v37, v38);
}

uint64_t sub_100543938(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  _QWORD *v16;

  v8[87] = v8[34];
  v9 = *(_QWORD *)(v8[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v8[88] = v9;
  if (v9)
  {
    v10 = async function pointer to Task.value.getter[1];
    swift_retain(v9);
    v11 = (_QWORD *)swift_task_alloc(v10);
    v8[89] = v11;
    v12 = sub_100047110(&qword_100839980);
    v13 = sub_100047110(&qword_10082EEA0);
    *v11 = v8;
    v11[1] = sub_100543A5C;
    return Task.value.getter(v8 + 30, v9, v12, v13, &protocol self-conformance witness table for Error);
  }
  else
  {
    v15 = sub_100436C34(&_swiftEmptyArrayStorage, a2, a3, a4, a5, a6, a7, a8);
    v8[91] = v15;
    v16 = (_QWORD *)swift_task_alloc(dword_100839914);
    v8[92] = v16;
    *v16 = v8;
    v16[1] = sub_100543BA8;
    return sub_100544D84(v8[68], v8[40], v8[75], v8[79], v8[83], v8[87], v15);
  }
}

uint64_t sub_100543A5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 712);
  *(_QWORD *)(*(_QWORD *)v1 + 720) = v0;
  swift_task_dealloc(v3);
  v4 = v2[88];
  if (v0)
  {
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[87];
    v6 = (CHWorkoutDetailHeartRateTableViewCell *)v2[83];
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)v2[79];
    v8 = (CHWorkoutDetailHeartRateTableViewCell *)v2[75];
    v9 = (CHWorkoutDetailHeartRateTableViewCell *)v2[68];
    (*(void (**)(_QWORD, _QWORD))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
    swift_bridgeObjectRelease(v8, v17, v18, v19, v20, v21, v22, v23);
    swift_bridgeObjectRelease(v7, v24, v25, v26, v27, v28, v29, v30);
    swift_bridgeObjectRelease(v6, v31, v32, v33, v34, v35, v36, v37);
    swift_bridgeObjectRelease(v5, v38, v39, v40, v41, v42, v43, v44);
    swift_release(v4);
    v45 = v2[61];
    v46 = v2[62];
    v47 = sub_1005449FC;
  }
  else
  {
    swift_release(v2[88]);
    v45 = v2[61];
    v46 = v2[62];
    v47 = sub_100543B38;
  }
  return swift_task_switch(v47, v45, v46);
}

uint64_t sub_100543B38()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[30];
  v0[91] = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_100839914);
  v0[92] = v2;
  *v2 = v0;
  v2[1] = sub_100543BA8;
  return sub_100544D84(v0[68], v0[40], v0[75], v0[79], v0[83], v0[87], v1);
}

uint64_t sub_100543BA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t (*v53)();
  CHWorkoutDetailHeartRateTableViewCell *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 736);
  v55 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 696);
  v56 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 728);
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 664);
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 632);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 600);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 544);
  v8 = *(_QWORD *)(*v1 + 312);
  v9 = *(_QWORD *)(*v1 + 320);
  v10 = *(_QWORD *)(*v1 + 304);
  *(_QWORD *)(*v1 + 744) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  swift_bridgeObjectRelease(v7, v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(v6, v18, v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRelease(v5, v25, v26, v27, v28, v29, v30, v31);
  swift_bridgeObjectRelease(v4, v32, v33, v34, v35, v36, v37, v38);
  swift_bridgeObjectRelease(v55, v39, v40, v41, v42, v43, v44, v45);
  swift_bridgeObjectRelease(v56, v46, v47, v48, v49, v50, v51, v52);
  if (v0)
    v53 = sub_100544BC0;
  else
    v53 = sub_100543C90;
  return swift_task_switch(v53, *(_QWORD *)(v2 + 488), *(_QWORD *)(v2 + 496));
}

uint64_t sub_100543C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(void **)(v0 + 288);
  KeyPath = swift_getKeyPath(&unk_100644C10);
  v9 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v7, KeyPath, v9);
  v10 = *(_QWORD *)(v0 + 448);
  v11 = *(_QWORD *)(v0 + 424);
  v13 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v0 + 384);
  v16 = *(_QWORD *)(v0 + 352);
  v15 = *(_QWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v20 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100543DCC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release(*(_QWORD *)(v0 + 480));
  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(void **)(v0 + 288);
  swift_getErrorValue(v1, v0 + 280, v0 + 16);
  v3 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v5 = v4;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v7 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v3;
  *(_QWORD *)(v0 + 120) = v5;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v2, KeyPath, v7);
  swift_errorRelease(v1);
  v8 = *(void **)(v0 + 288);
  v9 = swift_getKeyPath(&unk_100644C10);
  v10 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v8, v9, v10);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 424);
  v14 = *(_QWORD *)(v0 + 392);
  v13 = *(_QWORD *)(v0 + 400);
  v15 = *(_QWORD *)(v0 + 384);
  v17 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 320);
  v21 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100543F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 536);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 568);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005442EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 592);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005444B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 624);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005449FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 720);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 744);
  v8 = *(void **)(v0 + 288);
  swift_getErrorValue(v7, v0 + 280, v0 + 16);
  v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v11 = v10;
  KeyPath = swift_getKeyPath(&unk_100644BC8);
  v13 = swift_getKeyPath(&unk_100644BF0);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = v11;
  *(_BYTE *)(v0 + 128) = 1;
  static Published.subscript.setter(v0 + 112, v8, KeyPath, v13);
  swift_errorRelease(v7);
  v14 = *(void **)(v0 + 288);
  v15 = swift_getKeyPath(&unk_100644C10);
  v16 = swift_getKeyPath(&unk_100644C38);
  *(_BYTE *)(v0 + 58) = 0;
  static Published.subscript.setter(v0 + 58, v14, v15, v16);
  v17 = *(_QWORD *)(v0 + 448);
  v18 = *(_QWORD *)(v0 + 424);
  v20 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 360);
  v24 = *(_QWORD *)(v0 + 344);
  v25 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[17] = a7;
  v8[18] = v7;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v9 = sub_100047110(&qword_100821540);
  v8[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[20] = v10;
  v8[21] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PersonalizationCandidate(0, v11);
  v8[22] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[23] = v13;
  v8[24] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CatalogLockupPlaceholder(0);
  v8[25] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[26] = v15;
  v8[27] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100820A48);
  v8[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[29] = v17;
  v8[30] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100544E70, 0, 0);
}

uint64_t sub_100544E70()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double (*v8)(uint64_t, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v38;

  v1 = *(char **)(v0 + 144);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates];
  *(_QWORD *)(v0 + 248) = v2;
  if (v2 && (v3 = *(_QWORD *)(v2 + 16)) != 0)
  {
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 184);
    v38 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v2);
    sub_100121CFC(0, v3, 0);
    v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v36 = *(_QWORD *)(v5 + 72);
    v7 = v5;
    v8 = *(double (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v9 = &_swiftEmptyArrayStorage;
    do
    {
      v10 = *(_QWORD *)(v0 + 192);
      v11 = *(_QWORD *)(v0 + 176);
      v12.n128_f64[0] = v8(v10, v6, v11);
      v13 = PersonalizationCandidate.identifier.getter(v12);
      CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)(v13, v14, 8, 0, 1, 0, 0, v15);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      {
        sub_100121CFC(0, *(_QWORD *)v9->cellPadding + 1, 1);
        v9 = v38;
      }
      v17 = *(_QWORD *)v9->cellPadding;
      v16 = *(_QWORD *)v9->cellInset;
      if (v17 >= v16 >> 1)
      {
        sub_100121CFC(v16 > 1, v17 + 1, 1);
        v9 = v38;
      }
      v18 = *(_QWORD *)(v0 + 216);
      v19 = *(_QWORD *)(v0 + 200);
      *(_QWORD *)v9->cellPadding = v17 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v17, v18, v19);
      v38 = v9;
      v6 += v36;
      --v3;
    }
    while (v3);
    v29 = *(_QWORD *)(v0 + 240);
    v30 = (_QWORD *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient);
    v31 = v30[3];
    v32 = v30[4];
    sub_100016804(v30, v31);
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(32, v9, v31, v32);
    swift_release(v9);
    v33 = swift_task_alloc(64);
    *(_QWORD *)(v0 + 256) = v33;
    *(_QWORD *)(v33 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Provid"
                            "ers/FitnessPlusCardDataProvider.swift";
    *(_QWORD *)(v33 + 24) = 129;
    *(_BYTE *)(v33 + 32) = 2;
    *(_QWORD *)(v33 + 40) = 315;
    *(_QWORD *)(v33 + 48) = v29;
    v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100832AB8
                                                                                       + dword_100832AB8);
    v34 = (_QWORD *)swift_task_alloc(unk_100832ABC);
    *(_QWORD *)(v0 + 264) = v34;
    *v34 = v0;
    v34[1] = sub_1005451AC;
    return v37(0, 0, 0xD000000000000013, 0x800000010069E840, (uint64_t)sub_1005467C0, v33);
  }
  else
  {
    *(_BYTE *)(v0 + 33) = 2;
    v20 = sub_100546774();
    v21 = Error.localizedDescription.getter(&type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError, v20);
    v23 = v22;
    KeyPath = swift_getKeyPath(&unk_100644BC8);
    v25 = swift_getKeyPath(&unk_100644BF0);
    *(_QWORD *)(v0 + 16) = v21;
    *(_QWORD *)(v0 + 24) = v23;
    *(_BYTE *)(v0 + 32) = 1;
    static Published.subscript.setter(v0 + 16, v1, KeyPath, v25);
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005451AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 264);
  v3[34] = a1;
  v3[35] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1005455A4;
  }
  else
  {
    v6 = v3[32];
    v8 = v3[29];
    v7 = v3[30];
    v9 = v3[28];
    swift_task_dealloc(v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v5 = sub_100545240;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100545240(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  void *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  uint64_t v54;
  void *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;

  v9 = *(_QWORD *)(v8 + 272);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v70 = v8 + 40;
    v11 = *(_QWORD *)(v8 + 160);
    v76 = *(_QWORD *)(v8 + 168);
    v74 = *(_QWORD *)(v8 + 152);
    v78 = &_swiftEmptyArrayStorage;
    sub_100121CD0(0, v10, 0);
    v12 = &_swiftEmptyArrayStorage;
    v72 = type metadata accessor for CatalogLockup(0);
    v13 = *(_QWORD *)(v72 - 8);
    v14 = v9 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
    do
    {
      v17 = *(char **)(v71 + 168);
      v18 = v16(&v17[*(int *)(v74 + 48)], v14, v72);
      *(_QWORD *)v17 = CatalogLockup.identifier.getter(v18);
      *(_QWORD *)(v76 + 8) = v19;
      v78 = v12;
      v21 = *(_QWORD *)v12->cellPadding;
      v20 = *(_QWORD *)v12->cellInset;
      if (v21 >= v20 >> 1)
      {
        sub_100121CD0(v20 > 1, v21 + 1, 1);
        v12 = v78;
      }
      v22 = *(_QWORD *)(v71 + 168);
      *(_QWORD *)v12->cellPadding = v21 + 1;
      sub_1005467CC(v22, (uint64_t)v12+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v21);
      v14 += v15;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v71 + 272), v23, v24, v25, v26, v27, v28, v29);
    v30 = *(_QWORD *)v12->cellPadding;
    if (v30)
    {
      sub_100047110(&qword_100832AB0);
      v31 = (CHWorkoutDetailHeartRateTableViewCell *)static _DictionaryStorage.allocate(capacity:)(v30);
    }
    else
    {
      v31 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
    }
    v8 = v71;
    v50 = *(_QWORD *)(v71 + 280);
    v78 = v31;
    swift_bridgeObjectRetain(v12);
    sub_100546204(v51, 1, &v78);
    if (v50)
      return swift_unexpectedError(v50, "Swift/Dictionary.swift", 22, 1, 489);
    v53 = *(CHWorkoutDetailHeartRateTableViewCell **)(v71 + 248);
    v54 = *(_QWORD *)(v71 + 136);
    v55 = *(void **)(v71 + 144);
    v75 = *(_OWORD *)(v71 + 104);
    v77 = *(_OWORD *)(v71 + 88);
    v73 = *(_OWORD *)(v71 + 120);
    swift_release(v12);
    v56 = v78;
    v57 = swift_task_alloc(80);
    *(_QWORD *)(v57 + 16) = v56;
    *(_OWORD *)(v57 + 24) = v77;
    *(_OWORD *)(v57 + 40) = v75;
    *(_OWORD *)(v57 + 56) = v73;
    *(_QWORD *)(v57 + 72) = v54;
    v58 = sub_1005B9E90((void (*)(_QWORD, __n128))sub_100546814, v57, v53);
    swift_bridgeObjectRelease(v53, v59, v60, v61, v62, v63, v64, v65);
    swift_release(v56);
    swift_task_dealloc(v57);
    KeyPath = swift_getKeyPath(&unk_100644BC8);
    v46 = swift_getKeyPath(&unk_100644BF0);
    *(_QWORD *)(v71 + 40) = v58;
    *(_QWORD *)(v71 + 48) = 0;
    *(_BYTE *)(v71 + 56) = 0;
    v47 = v55;
    v48 = v70;
    v49 = KeyPath;
  }
  else
  {
    v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 248);
    v33 = *(void **)(v8 + 144);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 272), a2, a3, a4, a5, a6, a7, a8);
    swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);
    *(_BYTE *)(v8 + 34) = 2;
    v41 = sub_100546774();
    v42 = Error.localizedDescription.getter(&type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError, v41);
    v44 = v43;
    v45 = swift_getKeyPath(&unk_100644BC8);
    v46 = swift_getKeyPath(&unk_100644BF0);
    *(_QWORD *)(v8 + 64) = v42;
    *(_QWORD *)(v8 + 72) = v44;
    *(_BYTE *)(v8 + 80) = 1;
    v47 = v33;
    v48 = v8 + 64;
    v49 = v45;
  }
  static Published.subscript.setter(v48, v47, v49, v46);
  v67 = *(_QWORD *)(v8 + 216);
  v68 = *(_QWORD *)(v8 + 192);
  v69 = *(_QWORD *)(v8 + 168);
  swift_task_dealloc(*(_QWORD *)(v8 + 240));
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_1005455A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100545638@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, CHWorkoutDetailHeartRateTableViewCell *a7@<X7>, char *a8@<X8>, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  unint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  const char *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  CHWorkoutDetailHeartRateTableViewCell *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;

  v106 = a6;
  v107 = a7;
  v104 = a4;
  v105 = a5;
  v102 = a2;
  v103 = a3;
  v116 = a8;
  v11 = sub_100047110(&qword_100839928);
  __chkstk_darwin(v11);
  v101 = (char *)v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v100 = (char *)v99 - v14;
  v15 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v15);
  v112 = (uint64_t)v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v17);
  v111 = (uint64_t)v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100839930);
  __chkstk_darwin(v19);
  v110 = (uint64_t)v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_100839938);
  __chkstk_darwin(v21);
  v109 = (char *)v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v23);
  v114 = (char *)v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v108 = (char *)v99 - v26;
  v27 = sub_100047110(&qword_100839940);
  __chkstk_darwin(v27);
  v113 = (uint64_t)v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100047110(&qword_100839948);
  __chkstk_darwin(v29);
  v31 = (char *)v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100047110(&qword_10082FF70);
  __chkstk_darwin(v32);
  v34 = (char *)v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for CatalogLockup(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v115 = (char *)v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = PersonalizationCandidate.identifier.getter(v37);
  v41 = (CHWorkoutDetailHeartRateTableViewCell *)v40;
  if (*(_QWORD *)(a1 + 16) && (v42 = sub_100438F74(v39, v40), (v43 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v34, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v36 + 72) * v42, v35);
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v44(v34, 0, 1, v35);
  }
  else
  {
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v44(v34, 1, 1, v35);
  }
  swift_bridgeObjectRelease(v41, v45, v46, v47, v48, v49, v50, v51);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) != 1)
  {
    v99[0] = v44;
    v99[1] = v9;
    v54 = *(uint64_t (**)(char *, char *, uint64_t))(v36 + 32);
    v55 = v54(v115, v34, v35);
    PersonalizationCandidate.reason.getter(v55);
    v56 = type metadata accessor for PersonalizationText(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v31, 1, v56) == 1)
    {
      sub_10001BE90((uint64_t)v31, &qword_100839948);
    }
    else
    {
      v58 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
      v59 = PersonalizationText.localizeFillers(bodyFocusMap:locale:numberFormatter:modalityMap:musicGenreMap:skillLevelMap:themeMap:trainerMap:)(v102, v103, v58, v104, v105, v106, v107, a9);
      v61 = v60;

      (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v56);
      if (v61)
      {
        v62 = type metadata accessor for ArtworkDescriptor(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v113, 1, 1, v62);
        v63 = type metadata accessor for Date(0);
        v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
        v64(v108, 1, 1, v63);
        v65 = type metadata accessor for AssetBundleProgress(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v109, 1, 1, v65);
        v64(v114, 1, 1, v63);
        v66 = sub_100047110(&qword_10082EAD8);
        v67 = type metadata accessor for MediaTag(0);
        v68 = *(_QWORD *)(v67 - 8);
        v69 = *(_QWORD *)(v68 + 72);
        v70 = *(unsigned __int8 *)(v68 + 80);
        v71 = (v70 + 32) & ~v70;
        v72 = swift_allocObject(v66, v71 + v69, v70 | 7);
        v107 = (CHWorkoutDetailHeartRateTableViewCell *)v72;
        *(_OWORD *)(v72 + 16) = xmmword_100622F90;
        v73 = (uint64_t *)(v72 + v71);
        *v73 = v59;
        v73[1] = v61;
        swift_storeEnumTagMultiPayload(v73, v67, 8);
        v74 = type metadata accessor for CatalogLink(0);
        v75 = v110;
        (*(void (**)(void))(*(_QWORD *)(v74 - 8) + 56))();
        v76 = type metadata accessor for Artwork(0);
        v77 = v111;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v111, 1, 1, v76);
        v78 = type metadata accessor for URL(0);
        v79 = v112;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v112, 1, 1, v78);
        v80 = type metadata accessor for TextAttribute(0);
        v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
        v82 = (uint64_t)v100;
        v81(v100, 1, 1, v80);
        v83 = (uint64_t)v101;
        v81(v101, 1, 1, v80);
        v98 = v79;
        v97 = v77;
        v96 = v75;
        v84 = v107;
        v53 = v116;
        v86 = (uint64_t)v108;
        v85 = (uint64_t)v109;
        v87 = v115;
        CatalogLockup.copyWith(accessibilityTitle:actionTags:artworkDescriptor:bundleDateRequested:bundleLoadStatus:bundleProgress:bundleReason:completedCount:contentRating:contextMenuSubtitleTags:contextMenuTitleTags:dateBookmarked:detailTags:duration:dynamicBrickDisplayStyle:editorialCardIdentifier:healthKitActivityTypes:identifier:isIncompletePlanWorkout:link:mediaType:recencyTag:referenceType:streamingArtwork:streamingArtworkCropCode:streamingSubtitle:streamingTitle:streamingURL:subtitleTags:subtitleTextAttribute:titleTags:titleTextAttribute:)(0, 0, 0, v113, v108, 0, 255, v109, 0, -1, 0, 1, 0, 0, -1, 0, 0, v114, v107,
          0,
          1,
          0,
          0,
          -1,
          0,
          0,
          0,
          0,
          0,
          2,
          v96,
          0,
          0,
          -1,
          0,
          0,
          0,
          0,
          -1,
          v97,
          0,
          0,
          0,
          0,
          0,
          0,
          v98,
          0,
          v82,
          0,
          v83);
        swift_bridgeObjectRelease(v84, v88, v89, v90, v91, v92, v93, v94);
        sub_10001BE90(v83, &qword_100839928);
        sub_10001BE90(v82, &qword_100839928);
        sub_10001BE90(v112, &qword_10081E640);
        sub_10001BE90(v111, (uint64_t *)&unk_1008283A0);
        sub_10001BE90(v110, &qword_100839930);
        sub_10001BE90((uint64_t)v114, (uint64_t *)&unk_100828370);
        sub_10001BE90(v85, &qword_100839938);
        sub_10001BE90(v86, (uint64_t *)&unk_100828370);
        sub_10001BE90(v113, &qword_100839940);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v87, v35);
LABEL_12:
        v52 = 0;
        v44 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v99[0];
        return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v53, v52, 1, v35);
      }
    }
    v53 = v116;
    v54(v116, v115, v35);
    goto LABEL_12;
  }
  sub_10001BE90((uint64_t)v34, &qword_10082FF70);
  v52 = 1;
  v53 = v116;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v53, v52, 1, v35);
}

id sub_100545DF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessPlusCardDataProvider(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100545F8C()
{
  return type metadata accessor for FitnessPlusCardDataProvider(0);
}

uint64_t type metadata accessor for FitnessPlusCardDataProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1008398F8;
  if (!qword_1008398F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FitnessPlusCardDataProvider);
  return result;
}

void sub_100545FD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[18];

  v6[0] = "(";
  v6[1] = "(";
  v6[2] = &unk_100644AD8;
  v6[3] = "(";
  v6[4] = "(";
  v6[5] = "(";
  v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[7] = &unk_100644AF0;
  v6[8] = &unk_100644AF0;
  v6[9] = &unk_100644AF0;
  v6[10] = &unk_100644AF0;
  v6[11] = &unk_100644AF0;
  v6[12] = &unk_100644AF0;
  v6[13] = &unk_100644AF0;
  sub_100038D3C(319, &qword_100839918, (uint64_t)&type metadata for FitnessPlusCardDataProvider.State);
  if (v3 <= 0x3F)
  {
    v6[14] = *(_QWORD *)(v2 - 8) + 64;
    sub_100038D3C(319, (unint64_t *)&qword_10083B460, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v6[15] = *(_QWORD *)(v4 - 8) + 64;
      v6[16] = &unk_100644AF0;
      v6[17] = &unk_100644B08;
      swift_updateClassMetadata2(a1, 256, 18, v6, a1 + 80);
    }
  }
}

uint64_t destroy for FitnessPlusCardDataProvider.State(uint64_t a1)
{
  return sub_10027DC80(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FitnessApp27FitnessPlusCardDataProviderC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001B73B0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FitnessPlusCardDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001B73B0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10027DC80(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FitnessPlusCardDataProvider.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10027DC80(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FitnessPlusCardDataProvider.State()
{
  return &type metadata for FitnessPlusCardDataProvider.State;
}

uint64_t sub_1005461C8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for FitnessPlusCardDataProvider(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_100546204(CHWorkoutDetailHeartRateTableViewCell *a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  char v80;
  char v81;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  Swift::String v87;
  _QWORD v88[2];
  uint64_t v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  uint64_t v101;

  v7 = type metadata accessor for CatalogLockup(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100821540);
  __chkstk_darwin(v11);
  v22 = (_QWORD *)((char *)v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(_QWORD *)a1->cellPadding;
  if (!v23)
  {
    swift_bridgeObjectRelease(a1, v13, v14, v15, v16, v17, v18, v19);
    return;
  }
  LODWORD(v92) = a2;
  v88[1] = v3;
  v89 = v23;
  v24 = (char *)v22 + *(int *)(v12 + 48);
  v88[0] = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (uint64_t)a1 + v88[0];
  v94 = *(_QWORD *)(v20 + 72);
  v91 = a1;
  swift_bridgeObjectRetain(a1);
  sub_100546844(v25, (uint64_t)v22);
  v27 = v22[1];
  v99 = *v22;
  v26 = v99;
  v100 = (CHWorkoutDetailHeartRateTableViewCell *)v27;
  v90 = v8;
  v28 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v95 = v7;
  v96 = v10;
  v93 = v24;
  v28(v10, v24, v7);
  v29 = (_QWORD *)*a3;
  v31 = sub_100438F74(v26, v27);
  v32 = v29[2];
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (__OFADD__(v32, v33))
    goto LABEL_23;
  v35 = v30;
  if (v29[3] >= v34)
  {
    if ((v92 & 1) != 0)
    {
      if ((v30 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_100404558();
      if ((v35 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v63 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
    v64 = (uint64_t *)(v63[6] + 16 * v31);
    *v64 = v26;
    v64[1] = v27;
    v65 = v63[7];
    v92 = *(_QWORD *)(v90 + 72);
    v66 = v95;
    v28((char *)(v65 + v92 * v31), v96, v95);
    v67 = v63[2];
    v68 = __OFADD__(v67, 1);
    v69 = v67 + 1;
    if (v68)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v63[2] = v69;
    v70 = v89 - 1;
    if (v89 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(v91, 2);
      return;
    }
    v71 = (char *)v91 + v94 + v88[0];
    while (1)
    {
      sub_100546844((uint64_t)v71, (uint64_t)v22);
      v73 = v22[1];
      v99 = *v22;
      v72 = v99;
      v100 = (CHWorkoutDetailHeartRateTableViewCell *)v73;
      v28(v96, v93, v66);
      v74 = (_QWORD *)*a3;
      v75 = sub_100438F74(v72, v73);
      v77 = v74[2];
      v78 = (v76 & 1) == 0;
      v68 = __OFADD__(v77, v78);
      v79 = v77 + v78;
      if (v68)
        break;
      v80 = v76;
      if (v74[3] < v79)
      {
        sub_1003FD918(v79, 1);
        v75 = sub_100438F74(v72, v73);
        if ((v80 & 1) != (v81 & 1))
          goto LABEL_25;
      }
      if ((v80 & 1) != 0)
        goto LABEL_10;
      v82 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v75 >> 6) + 64) |= 1 << v75;
      v83 = (uint64_t *)(v82[6] + 16 * v75);
      *v83 = v72;
      v83[1] = v73;
      v66 = v95;
      v28((char *)(v82[7] + v92 * v75), v96, v95);
      v84 = v82[2];
      v68 = __OFADD__(v84, 1);
      v85 = v84 + 1;
      if (v68)
        goto LABEL_24;
      v82[2] = v85;
      v71 += v94;
      if (!--v70)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1003FD918(v34, v92 & 1);
  v36 = sub_100438F74(v26, v27);
  if ((v35 & 1) == (v37 & 1))
  {
    v31 = v36;
    if ((v35 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v38 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v38);
    v101 = v38;
    swift_errorRetain(v38);
    v39 = sub_100047110(&qword_10082EEA0);
    if ((swift_dynamicCast(v39, &v101, v39, &type metadata for _MergeError, 0) & 1) == 0)
    {
      v47 = v91;
      swift_bridgeObjectRelease(v91, v40, v41, v42, v43, v44, v45, v46);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v96, v95);
      v48 = v100;
      swift_bridgeObjectRelease(v47, v49, v50, v51, v52, v53, v54, v55);
      swift_bridgeObjectRelease(v48, v56, v57, v58, v59, v60, v61, v62);
      swift_errorRelease(v101);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v97 = 0;
  v98 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v86._object = (void *)0x80000001006A52C0;
  v86._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v86);
  _print_unlocked<A, B>(_:_:)(&v99, &v97, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v87._countAndFlagsBits = 39;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v97, v98, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

uint64_t sub_1005466A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
      return sub_1002A0B5C(a1, a4);
    return 0;
  }
  if (a3 != 1)
  {
    if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 == 2 && a4 == 2 && !a5)
          return 1;
      }
      else if (a6 == 2 && a4 == 1 && !a5)
      {
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
}

unint64_t sub_100546774()
{
  unint64_t result;

  result = qword_100839920;
  if (!qword_100839920)
  {
    result = swift_getWitnessTable(&unk_100644CEC, &type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError);
    atomic_store(result, (unint64_t *)&qword_100839920);
  }
  return result;
}

uint64_t sub_1005467C0(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100407FB8);
}

uint64_t sub_1005467CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100821540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100546814@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100545638(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 64), a1, *(_QWORD *)(v1 + 72));
}

uint64_t sub_100546844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100821540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100546890(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100839954);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_100541878(a1, v4, v5, v6);
}

unint64_t sub_100546904()
{
  unint64_t result;

  result = qword_100839970;
  if (!qword_100839970)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PersonalizationCandidateReferenceType, &type metadata for PersonalizationCandidateReferenceType);
    atomic_store(result, (unint64_t *)&qword_100839970);
  }
  return result;
}

unint64_t sub_100546948()
{
  unint64_t result;

  result = qword_100839978;
  if (!qword_100839978)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PersonalizationCandidateReferenceType, &type metadata for PersonalizationCandidateReferenceType);
    atomic_store(result, (unint64_t *)&qword_100839978);
  }
  return result;
}

uint64_t sub_10054698C(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100408300);
}

uint64_t sub_100546998(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100014AB8);
}

uint64_t sub_1005469A4(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100406578);
}

uint64_t sub_1005469B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005469D4()
{
  uint64_t v0;

  return sub_10053E29C(v0);
}

double sub_1005469EC()
{
  uint64_t v0;

  return sub_10053E0B8(v0);
}

uint64_t sub_1005469F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10053E31C(a1, v4, v5, v6);
}

uint64_t sub_100546A68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10053EEBC(a1, v4, v5, v6);
}

uint64_t sub_100546AD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399C4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10053F4AC(a1, v4, v5, v6);
}

uint64_t sub_100546B48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10053FA9C(a1, v4, v5, v6);
}

uint64_t sub_100546BB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399E4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10054008C(a1, v4, v5, v6);
}

uint64_t sub_100546C28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10054067C(a1, v4, v5, v6);
}

uint64_t sub_100546C98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100839A04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_100540CE0(a1, v4, v5, v6);
}

uint64_t sub_100546D08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100839A14);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_100541364(a1, v4, v5, v6);
}

uint64_t sub_100546D74(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100407C70);
}

uint64_t sub_100546D80(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100407928);
}

uint64_t sub_100546D8C(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004075E0);
}

uint64_t sub_100546D98(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100407298);
}

uint64_t sub_100546DA4(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100406F50);
}

uint64_t sub_100546DB0(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100406C08);
}

uint64_t sub_100546DBC(uint64_t a1)
{
  return sub_100546DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004068C0);
}

uint64_t sub_100546DC8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t storeEnumTagSinglePayload for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100546E28 + 4 * byte_100644A85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100546E5C + 4 * byte_100644A80[v4]))();
}

uint64_t sub_100546E5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100546E64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100546E6CLL);
  return result;
}

uint64_t sub_100546E78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100546E80);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100546E84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100546E8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError()
{
  return &type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError;
}

unint64_t sub_100546EAC()
{
  unint64_t result;

  result = qword_100839A20;
  if (!qword_100839A20)
  {
    result = swift_getWitnessTable(&unk_100644CC4, &type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError);
    atomic_store(result, (unint64_t *)&qword_100839A20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NavigationCoordinationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100546F38 + 4 * byte_100644D50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100546F58 + 4 * byte_100644D55[v4]))();
}

_BYTE *sub_100546F38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100546F58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100546F60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100546F68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100546F70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100546F78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NavigationCoordinationError()
{
  return &type metadata for NavigationCoordinationError;
}

unint64_t sub_100546F98()
{
  unint64_t result;

  result = qword_100839A28;
  if (!qword_100839A28)
  {
    result = swift_getWitnessTable(&unk_100644DEC, &type metadata for NavigationCoordinationError);
    atomic_store(result, (unint64_t *)&qword_100839A28);
  }
  return result;
}

id sub_100546FDC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  qword_10086AF10 = (uint64_t)result;
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100547014(void *a1)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  id v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  SEL v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  _QWORD v107[3];
  _BYTE v108[16];
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  if (qword_10081E000 != -1)
    swift_once(&qword_10081E000, sub_100546FDC);
  v2 = (id)qword_10086AF10;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "dictionaryForKey:", v3);

  if (!v4)
  {
    v67 = static os_log_type_t.default.getter(v5);
    v68 = HKLogWorkouts;
    v92 = &_swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)(v67, &_mh_execute_header, v68, "ChartableMetrics for all activity types not present in user defaults. Will use system defaults.", 95, 2, &_swiftEmptyArrayStorage);

    return v92;
  }
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v7 = objc_msgSend(a1, "uniqueIdentifier");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (!*(_QWORD *)v6->cellPadding || (v18 = sub_100438F74(v8, (uint64_t)v10), (v11 & 1) == 0))
  {
    v109 = 0u;
    v110 = 0u;
    swift_bridgeObjectRelease(v10, v11, v12, v13, v14, v15, v16, v17);
    swift_bridgeObjectRelease(v6, v46, v47, v48, v49, v50, v51, v52);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)v6[1].cellInset + 32 * v18, (uint64_t)&v109);
  swift_bridgeObjectRelease(v10, v19, v20, v21, v22, v23, v24, v25);
  swift_bridgeObjectRelease(v6, v26, v27, v28, v29, v30, v31, v32);
  if (!*((_QWORD *)&v110 + 1))
  {
LABEL_10:
    v53 = sub_1000F996C((uint64_t)&v109);
    v54 = static os_log_type_t.default.getter(v53);
    v55 = (void *)HKLogWorkouts;
    v56 = sub_100047110((uint64_t *)&unk_100827460);
    v57 = swift_allocObject(v56, 72, 7);
    *(_OWORD *)(v57 + 16) = xmmword_100622F90;
    *(_QWORD *)(v57 + 56) = sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
    *(_QWORD *)(v57 + 64) = sub_100548104();
    *(_QWORD *)(v57 + 32) = a1;
    v58 = a1;
    v59 = v55;
    os_log(_:dso:log:_:_:)(v54, &_mh_execute_header, v59, "ChartableMetrics for activity type not present in user defaults. Will use system defaults. activity_type=%@", 107, 2, v57);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v57, v60, v61, v62, v63, v64, v65, v66);
    return &_swiftEmptyArrayStorage;
  }
  sub_100038FD4(&v109, &v111);
  v33 = (void *)objc_opt_self(NSPropertyListSerialization);
  v34 = v112;
  v35 = sub_100016804(&v111, v112);
  v36 = _bridgeAnythingToObjectiveC<A>(_:)(v35, v34);
  *(_QWORD *)&v109 = 0;
  v37 = objc_msgSend(v33, "dataWithPropertyList:format:options:error:", v36, 100, 0, &v109);
  swift_unknownObjectRelease(v36);
  v38 = (id)v109;
  if (!v37)
  {
    v70 = v38;
    v71 = _convertNSErrorToError(_:)(v38);

    v73 = swift_willThrow(v72);
    v74 = static os_log_type_t.error.getter(v73);
    v75 = (void *)HKLogWorkouts;
    v76 = sub_100047110((uint64_t *)&unk_100827460);
    v77 = swift_allocObject(v76, 112, 7);
    *(_OWORD *)(v77 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v77 + 56) = sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
    *(_QWORD *)(v77 + 64) = sub_100548104();
    *(_QWORD *)(v77 + 32) = a1;
    swift_getErrorValue(v71, v108, v107);
    v78 = v107[1];
    v79 = v107[2];
    v80 = a1;
    v81 = v75;
    v82 = Error.errorDescription.getter(v78, v79);
    v84 = v83;
    *(_QWORD *)(v77 + 96) = &type metadata for String;
    *(_QWORD *)(v77 + 104) = sub_100038CF8();
    *(_QWORD *)(v77 + 72) = v82;
    *(_QWORD *)(v77 + 80) = v84;
    os_log(_:dso:log:_:_:)(v74, &_mh_execute_header, v81, "Failed to decode ChartableMetrics for activityType=%@. Will use system defaults. error=%@", 89, 2, v77);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v77, v85, v86, v87, v88, v89, v90, v91);
    swift_errorRelease(v71);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v111);
    return &_swiftEmptyArrayStorage;
  }
  v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v41 = v40;

  v42 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v43 = PropertyListDecoder.init()();
  v44 = sub_100047110(&qword_100835A90);
  v45 = sub_1005481A8(&qword_100839A50, (void (*)(void))sub_100548210, (uint64_t)&protocol conformance descriptor for <A> [A]);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&v109, v44, v39, v41, v44, v45);
  swift_release(v43);
  v92 = (CHWorkoutDetailHeartRateTableViewCell *)v109;
  v94 = static os_log_type_t.default.getter(v93);
  v95 = (void *)HKLogWorkouts;
  v96 = sub_100047110((uint64_t *)&unk_100827460);
  v97 = swift_allocObject(v96, 112, 7);
  *(_OWORD *)(v97 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v97 + 56) = v44;
  *(_QWORD *)(v97 + 64) = sub_10054815C();
  *(_QWORD *)(v97 + 32) = v92;
  *(_QWORD *)(v97 + 96) = sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
  *(_QWORD *)(v97 + 104) = sub_100548104();
  *(_QWORD *)(v97 + 72) = a1;
  v98 = v95;
  swift_bridgeObjectRetain(v92);
  v99 = a1;
  os_log(_:dso:log:_:_:)(v94, &_mh_execute_header, v98, "Successfully read user chartableMetrics=%@ for activityType=%@", 62, 2, v97);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v97, v100, v101, v102, v103, v104, v105, v106);
  sub_10004D9E4(v39, v41);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v111);
  return v92;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005475D0(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t i;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  Class isa;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  id v34;
  uint64_t v35;

  v34 = objc_msgSend(objc_allocWithZone((Class)NSMutableOrderedSet), "init");
  v35 = *(_QWORD *)a1->cellPadding;
  if (v35)
  {
    v4 = *(_QWORD *)(a2 + 16);
    v33 = a1;
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v35; ++i)
    {
      if (v4)
      {
        swift_bridgeObjectRetain(a2);
        __asm { BR              X9 }
      }
    }
    swift_bridgeObjectRelease(v33, v5, v6, v7, v8, v9, v10, v11);
  }
  v13 = sub_10013DF0C(a2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  objc_msgSend(v34, "addObjectsFromArray:", isa);

  v22 = objc_msgSend(v34, "array");
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, (char *)&type metadata for Any + 8);

  v24 = sub_10013E028((uint64_t)v23);
  swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
  return v24;
}

uint64_t sub_100547B28(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v31;
  Class isa;
  id v33;
  id v34;
  id v35;
  NSString v36;
  id v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  char isUniquelyReferenced_nonNull_native;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  Class v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  NSString v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  NSString v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  double v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  _QWORD v92[3];
  _BYTE v93[16];
  _OWORD v94[2];
  _QWORD v95[4];

  v5 = type metadata accessor for PropertyListEncoder(0, a3);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListEncoder.init()();
  v95[0] = a1;
  v7 = sub_100047110(&qword_100835A90);
  v8 = sub_1005481A8(&qword_100839A30, (void (*)(void))sub_1005480C0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v9 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v95, v7, v8);
  v11 = v10;
  swift_release(v6);
  v31 = (void *)objc_opt_self(NSPropertyListSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v94[0] = 0;
  v33 = objc_msgSend(v31, "propertyListWithData:options:format:error:", isa, 0, 0, v94);

  v34 = *(id *)&v94[0];
  if (v33)
  {
    _bridgeAnyObjectToAny(_:)(v95, v33);
    swift_unknownObjectRelease(v33);
    if (qword_10081E000 != -1)
      swift_once(&qword_10081E000, sub_100546FDC);
    v35 = (id)qword_10086AF10;
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v35, "dictionaryForKey:", v36);

    if (v37)
    {
      v38 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    }
    else
    {
      v38 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8((uint64_t)&_swiftEmptyArrayStorage);
    }
    v43 = objc_msgSend(a2, "uniqueIdentifier");
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    sub_10003E9BC((uint64_t)v95, (uint64_t)v94);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
    sub_1003FF9D4(v94, v44, (uint64_t)v46, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(v46, v48, v49, v50, v51, v52, v53, v54);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v55, v56, v57, v58, v59, v60, v61);
    v62 = (id)qword_10086AF10;
    v63 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v38, v64, v65, v66, v67, v68, v69, v70);
    v71 = String._bridgeToObjectiveC()();
    objc_msgSend(v62, "setObject:forKey:", v63, v71);

    v72 = (void *)qword_10086AF10;
    v73 = (void *)objc_opt_self(NSUserDefaults);
    v74 = v72;
    v75 = objc_msgSend(v73, "standardUserDefaults");
    sub_10001E724(0, (unint64_t *)&qword_10082A4E0, NSUserDefaults_ptr);
    LOBYTE(v71) = static NSObject.== infix(_:_:)(v74, v75);

    if ((v71 & 1) != 0)
    {
      v77 = String._bridgeToObjectiveC()();
      objc_msgSend(v73, "fu_backupStandardUserDefaultsKey:", v77);

    }
    v78 = static os_log_type_t.default.getter(v76);
    v79 = (void *)HKLogWorkouts;
    v80 = sub_100047110((uint64_t *)&unk_100827460);
    v81 = swift_allocObject(v80, 112, 7);
    *(_OWORD *)(v81 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v81 + 56) = sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
    *(_QWORD *)(v81 + 64) = sub_100548104();
    *(_QWORD *)(v81 + 32) = a2;
    *(_QWORD *)(v81 + 96) = v7;
    *(_QWORD *)(v81 + 104) = sub_10054815C();
    *(_QWORD *)(v81 + 72) = a1;
    v82 = v79;
    v83 = a2;
    *(_QWORD *)&v84 = swift_bridgeObjectRetain(a1).n128_u64[0];
    os_log(_:dso:log:_:_:)(v78, &_mh_execute_header, v82, "Saved ChartableMetrics to user defaults for activityType=%@ chartableMetrics=%@", 79, 2, v81, v84);
    sub_10004D9E4(v9, v11);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v81, v85, v86, v87, v88, v89, v90, v91);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v95);
  }
  else
  {
    v39 = v34;
    v40 = _convertNSErrorToError(_:)(v34);

    swift_willThrow(v41);
    v42 = sub_10004D9E4(v9, v11);
    v12 = static os_log_type_t.error.getter(v42);
    v13 = (void *)HKLogWorkouts;
    v14 = sub_100047110((uint64_t *)&unk_100827460);
    v15 = swift_allocObject(v14, 112, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v15 + 56) = sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
    *(_QWORD *)(v15 + 64) = sub_100548104();
    *(_QWORD *)(v15 + 32) = a2;
    swift_getErrorValue(v40, v93, v92);
    v16 = v92[1];
    v17 = v92[2];
    v18 = a2;
    v19 = v13;
    v20 = Error.errorDescription.getter(v16, v17);
    v22 = v21;
    *(_QWORD *)(v15 + 96) = &type metadata for String;
    *(_QWORD *)(v15 + 104) = sub_100038CF8();
    *(_QWORD *)(v15 + 72) = v20;
    *(_QWORD *)(v15 + 80) = v22;
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v19, "Failed to encode and save ChartableMetrics for activityType=%@. error=%@", 72, 2, v15);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v15, v23, v24, v25, v26, v27, v28, v29);
    return swift_errorRelease(v40);
  }
}

unint64_t sub_1005480C0()
{
  unint64_t result;

  result = qword_100839A38;
  if (!qword_100839A38)
  {
    result = swift_getWitnessTable(&unk_10064486C, &type metadata for ChartableMetric);
    atomic_store(result, (unint64_t *)&qword_100839A38);
  }
  return result;
}

unint64_t sub_100548104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839A40;
  if (!qword_100839A40)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100839A40);
  }
  return result;
}

unint64_t sub_10054815C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839A48;
  if (!qword_100839A48)
  {
    v1 = sub_100007050(&qword_100835A90);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100839A48);
  }
  return result;
}

uint64_t sub_1005481A8(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100007050(&qword_100835A90);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100548210()
{
  unint64_t result;

  result = qword_100839A58;
  if (!qword_100839A58)
  {
    result = swift_getWitnessTable(&unk_100644894, &type metadata for ChartableMetric);
    atomic_store(result, (unint64_t *)&qword_100839A58);
  }
  return result;
}

unint64_t sub_100548258()
{
  unint64_t result;

  result = qword_100839A60;
  if (!qword_100839A60)
  {
    result = swift_getWitnessTable(&unk_100644EB8, &type metadata for ActivityRingEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100839A60);
  }
  return result;
}

unint64_t sub_1005482A0()
{
  unint64_t result;

  result = qword_100839A68[0];
  if (!qword_100839A68[0])
  {
    result = swift_getWitnessTable(&unk_100644F18, &type metadata for ActivityRingEntityQuery);
    atomic_store(result, qword_100839A68);
  }
  return result;
}

uint64_t sub_1005482E4()
{
  return sub_1005484D4(&qword_100837400, (uint64_t)&unk_1006413F0);
}

uint64_t sub_100548308(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100839AA8 + dword_100839AA8);
  v3 = (_QWORD *)swift_task_alloc(unk_100839AAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001A48BC;
  return v5(a1);
}

uint64_t sub_100548368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for Date(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005483C0, 0, 0);
}

uint64_t sub_1005483C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(uint64_t **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_100047110(&qword_1008221D8);
  v4 = *(_QWORD *)(type metadata accessor for ActivityRingEntity(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v3, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100622F90;
  Date.init()(v8);
  sub_1004D5FEC(v1, v8 + v7);
  *v2 = v8;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10054846C()
{
  unint64_t result;

  result = qword_100839A80;
  if (!qword_100839A80)
  {
    result = swift_getWitnessTable(&unk_100644F40, &type metadata for ActivityRingEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100839A80);
  }
  return result;
}

uint64_t sub_1005484B0()
{
  return sub_1005484D4(&qword_100837420, (uint64_t)&unk_100641598);
}

uint64_t sub_1005484D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ActivityRingEntity(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100548518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839A88;
  if (!qword_100839A88)
  {
    v1 = sub_100007050(qword_100839A90);
    sub_1005484D4(&qword_100837420, (uint64_t)&unk_100641598);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100839A88);
  }
  return result;
}

uint64_t sub_10054858C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1004D4FA0();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for ActivityRingEntityQuery()
{
  return &type metadata for ActivityRingEntityQuery;
}

uint64_t sub_100548608(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[2] = a1;
  v2 = *(_QWORD *)(type metadata accessor for ActivityRingEntity(0) - 8);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110((uint64_t *)&unk_100828370);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v6);
  v1[9] = swift_task_alloc(v6);
  return swift_task_switch(sub_1005486C0, 0, 0);
}

uint64_t sub_1005486C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell **v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v6 = &_swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v3 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v1);
  v5 = (CHWorkoutDetailHeartRateTableViewCell **)(v4 + 40);
  v6 = &_swiftEmptyArrayStorage;
  do
  {
    v14 = *v5;
    v15 = qword_10081DEF8;
    swift_bridgeObjectRetain(*v5);
    if (v15 != -1)
      swift_once(&qword_10081DEF8, sub_1004D5394);
    v16 = (void *)qword_10086AD20;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14, v18, v19, v20, v21, v22, v23, v24);
    v25 = objc_msgSend(v16, "dateFromString:", v17);

    if (!v25)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v3 + 56))(*(_QWORD *)(v0 + 40), 1, 1, *(_QWORD *)(v0 + 48));
LABEL_4:
      sub_10018DFE8(*(_QWORD *)(v0 + 40));
      goto LABEL_5;
    }
    v26 = *(_QWORD *)(v0 + 64);
    v28 = *(_QWORD *)(v0 + 40);
    v27 = *(_QWORD *)(v0 + 48);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v25);

    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v29(v28, v26, v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v28, 0, 1, v27);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v28, 1, v27) == 1)
      goto LABEL_4;
    v31 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 72);
    v32 = *(_QWORD *)(v0 + 48);
    v33 = *(_QWORD *)(v0 + 32);
    v29(v30, *(_QWORD *)(v0 + 40), v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v31, v30, v32);
    sub_1004D5FEC(v31, v33);
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A84(0, *(_QWORD *)v6->cellPadding + 1, 1, (unint64_t)v6);
    v35 = *(_QWORD *)v6->cellPadding;
    v34 = *(_QWORD *)v6->cellInset;
    if (v35 >= v34 >> 1)
      v6 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A84(v34 > 1, v35 + 1, 1, (unint64_t)v6);
    v36 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 48);
    v38 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)v6->cellPadding = v35 + 1;
    sub_1004D8554(v38, (uint64_t)v6+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v35);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v36, v37);
LABEL_5:
    v5 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 16), v7, v8, v9, v10, v11, v12, v13);
LABEL_17:
  v39 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 32);
  v40 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v6);
}

uint64_t sub_100548950(uint64_t a1)
{
  return sub_100026438(a1, &qword_100831BA0, UIScene_ptr);
}

uint64_t sub_100548964(uint64_t a1)
{
  return sub_100026438(a1, &qword_100836190, UIOpenURLContext_ptr);
}

uint64_t sub_100548978(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t);
  void (*v20)(char *, uint64_t);
  void (*v21)(uint64_t (*)(), uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;

  v3 = sub_100047110((uint64_t *)&unk_100836170);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  sub_100548BD0(a1, (uint64_t)v9);
  v13 = swift_allocObject(&unk_1007A8A78, 24, 7);
  swift_weakInit(v13 + 16, v1);
  v14 = swift_allocObject(&unk_1007A8AA0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_10054D69C;
  *(_QWORD *)(v14 + 24) = v13;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1007A8AC8, v17 + 16, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v18 + v16, v6, v3);
  v19 = (uint64_t (**)(uint64_t))(v18 + v17);
  *v19 = sub_10010FFFC;
  v19[1] = (uint64_t (*)(uint64_t))v14;
  Promise.init(asyncOperation:)(sub_100110010, v18, (char *)&type metadata for () + 8);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v9, v3);
  v21 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v3);
  v23 = v22;
  v24 = swift_allocObject(&unk_1007A8AF0, 32, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  v21(sub_1001104CC, v24);
  swift_release(v23);
  v25 = swift_release(v24);
  return ((uint64_t (*)(char *, uint64_t, __n128))v20)(v12, v3, v25);
}

double sub_100548B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10054B82C();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100548BD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  void *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  void *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = type metadata accessor for NavigationAnnotation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter(v12);
  v13._countAndFlagsBits = 0xD000000000000067;
  v13._object = (void *)0x80000001006A5570;
  v14._object = (void *)0x80000001006A55E0;
  v14._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v13, v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = objc_msgSend(a1, "userActivities");
  v16 = sub_10001E724(0, &qword_100839C60, NSUserActivity_ptr);
  v17 = sub_10001E6E4(&qword_100839C68, &qword_100839C60, NSUserActivity_ptr);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17);

  v19 = (void *)sub_100026438((uint64_t)v18, &qword_100839C60, NSUserActivity_ptr);
  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  if (v19)
  {
    v27 = sub_100047110((uint64_t *)&unk_100839C10);
    v28 = swift_allocObject(v27, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
    *(_OWORD *)(v28 + 16) = xmmword_100622F90;
    static NavigationAnnotation.appLaunch.getter();
    v56 = v28;
    v29 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
    v30 = sub_100047110(&qword_100836180);
    v31 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v30, v31, v4, v29);
    sub_1005495EC(v19, (uint64_t)v7, a2);

  }
  else
  {
    v32 = objc_msgSend(a1, "URLContexts");
    v33 = sub_10001E724(0, &qword_100836190, UIOpenURLContext_ptr);
    v34 = sub_10001E6E4((unint64_t *)&qword_100836198, &qword_100836190, UIOpenURLContext_ptr);
    v35 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v32, v33, v34);

    v36 = (void *)sub_100026438((uint64_t)v35, &qword_100836190, UIOpenURLContext_ptr);
    swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
    if (!v36)
    {
      v50 = type metadata accessor for NavigationError(0);
      v51 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
      v52 = swift_allocError(v50, v51, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v53, enum case for NavigationError.noNavigation(_:), v50);
      v54 = swift_allocObject(&unk_1007A8A50, 24, 7);
      *(_QWORD *)(v54 + 16) = v52;
      return Promise.init(synchronousOperation:)(sub_10054D294, v54, (char *)&type metadata for () + 8);
    }
    v44 = sub_100047110((uint64_t *)&unk_100839C10);
    v45 = swift_allocObject(v44, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
    *(_OWORD *)(v45 + 16) = xmmword_100622F90;
    static NavigationAnnotation.appLaunch.getter();
    v56 = v45;
    v46 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
    v47 = sub_100047110(&qword_100836180);
    v48 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v47, v48, v4, v46);
    sub_10054A154(v36, (uint64_t)v7, a2);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100549024@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  void *v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v40 = a1;
  v3 = type metadata accessor for NavigationAnnotation(0);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NavigationRequest(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TrainerTipsGalleryNavigationBegan(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1[5];
  ObjectType = swift_getObjectType(v1[4]);
  TrainerTipsGalleryNavigationBegan.init()();
  v15 = sub_1000083D8(&qword_1008364D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan, (uint64_t)&protocol conformance descriptor for TrainerTipsGalleryNavigationBegan);
  dispatch thunk of EventHubProtocol.publish<A>(_:)(v12, v9, v15, ObjectType, v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 23);
  if (Strong)
  {
    v17 = Strong;
    v18 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "navigateToSeymourTab");
      swift_unknownObjectRelease(v17);
      swift_unknownObjectRelease(v19);
      if ((v20 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      swift_unknownObjectRelease(v17);
    }
    v28 = type metadata accessor for NavigationError(0);
    v29 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
    v30 = swift_allocError(v28, v29, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v31, enum case for NavigationError.tabUnavailable(_:), v28);
    v32 = swift_allocObject(&unk_1007A8A28, 24, 7);
    *(_QWORD *)(v32 + 16) = v30;
    return Promise.init(synchronousOperation:)(sub_10054D294, v32, (char *)&type metadata for () + 8);
  }
LABEL_4:
  v21 = v2[14];
  v22 = v2[15];
  sub_100016804(v2 + 11, v21);
  v23 = dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v21, v22);
  static NavigationAnnotation.tabSwitch.getter(v23);
  sub_1004B04B8(0, 0, (uint64_t)v5, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v37);
  v24 = sub_100016804(v2 + 6, v2[9]);
  v25 = (void *)*v24;
  v26 = v24[1];
  if ((v26 & 0x8000000000000000) != 0)
  {
    v34 = swift_retain(*v24);
    AppCoordinator.navigateToRequest(_:)(v8, v34);
    sub_1001B9E74(v25, v26);
  }
  else
  {
    v27 = v25;
    BrowsingViewController.navigateToRequest(_:)(v8);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v39);
}

uint64_t sub_100549318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  _QWORD v27[2];

  v27[1] = a2;
  v27[0] = type metadata accessor for NavigationAnnotation(0);
  v4 = *(_QWORD *)(v27[0] - 8);
  __chkstk_darwin(v27[0]);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationRequest(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v27 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))(v17, a1, v15);
  if (sub_100264B4C((uint64_t)v17, *(unsigned __int8 *)(v2 + 128)))
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16));
    sub_100549540();
    AMSBagProtocol.makeNavigationRequest(with:annotation:)(a1, v6, ObjectType);
    return (*(uint64_t (**)(char *, _QWORD))(v4 + 8))(v6, v27[0]);
  }
  else
  {
    v19 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    sub_100016804((_QWORD *)(v2 + 88), v19);
    v21 = dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v19, v20);
    static NavigationAnnotation.tabSwitch.getter(v21);
    sub_1004B04B8(0, 0, (uint64_t)v6, (uint64_t)v13);
    (*(void (**)(char *, _QWORD))(v4 + 8))(v6, v27[0]);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v22 = *(unsigned __int8 *)(v8 + 80);
    v23 = (v22 + 16) & ~v22;
    v24 = swift_allocObject(&unk_1007A8A00, v23 + v9, v22 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v10, v7);
    Promise.init(synchronousOperation:)(sub_10054D454, v24, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_100549540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v5;

  v0 = type metadata accessor for NavigationAnnotation(0);
  v5 = &_swiftEmptyArrayStorage;
  v1 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v2 = sub_100047110(&qword_100836180);
  v3 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t sub_1005495EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  void *v31;
  id v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  char v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t ObjectType;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t (**v67)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v68;
  id v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t (**v80)(uint64_t);
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(uint64_t, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;

  v4 = v3;
  v102 = a2;
  v104 = a3;
  v6 = type metadata accessor for NavigationAnnotation(0);
  v99 = *(_QWORD *)(v6 - 8);
  v100 = v6;
  __chkstk_darwin(v6);
  v96 = v7;
  v98 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100047110((uint64_t *)&unk_1008364E0);
  v95 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v97 = (char *)&v87 - v10;
  v93 = v11;
  __chkstk_darwin(v12);
  v103 = (char *)&v87 - v13;
  v14 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v87 - v22;
  v24 = v3[21];
  v25 = v3[22];
  sub_100016804(v3 + 18, v24);
  if ((dispatch thunk of SiriUserActivityHandling.canHandleActivity(_:)(a1, v24, v25) & 1) != 0)
    return sub_10054B5C4(a1);
  v27 = v104;
  v28 = objc_msgSend(a1, "webpageURL");
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_8;
  }
  v29 = v28;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v30(v16, v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_8:
    sub_10001BE90((uint64_t)v16, &qword_10081E640);
    goto LABEL_9;
  }
  v30(v23, v16, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
  if (!sub_100264B4C((uint64_t)v20, *((unsigned __int8 *)v4 + 128)))
  {
    sub_100549024(v27);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
LABEL_9:
  v31 = a1;
  v32 = objc_msgSend(a1, "activityType");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
  v38 = v36;
  if (v33 == v37 && v35 == v36)
  {
    swift_bridgeObjectRelease_n(v35, 2);
LABEL_13:
    ObjectType = swift_getObjectType(v4[2]);
    v55 = v97;
    AMSBagProtocol.makeNavigationRequest(with:annotation:)(a1, v102, ObjectType);
    v56 = swift_allocObject(&unk_1007A8898, 32, 7);
    *(_QWORD *)(v56 + 16) = v4;
    *(_QWORD *)(v56 + 24) = a1;
    v58 = v94;
    v57 = v95;
    v92 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v59 = v101;
    v92(v94, v55, v101);
    v60 = *(unsigned __int8 *)(v57 + 80);
    v61 = v60 | 7;
    v90 = (v60 + 16) & ~v60;
    v91 = v60 | 7;
    v62 = v90;
    v63 = (v93 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = v63 + 16;
    v64 = v4;
    v65 = v63;
    v88 = v63;
    v66 = swift_allocObject(&unk_1007A88C0, v63 + 16, v61);
    v89 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 32);
    v89(v66 + v62, v58, v59);
    v67 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v66 + v65);
    *v67 = sub_10054D46C;
    v67[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v56;
    v68 = type metadata accessor for NavigationRequest(0);
    swift_retain(v64);
    v69 = v31;
    Promise.init(asyncOperation:)(sub_10054D388, v66, v68);
    v70 = *(void (**)(char *, uint64_t))(v57 + 8);
    v70(v55, v59);
    v71 = v98;
    v72 = v99;
    v73 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v102, v100);
    v74 = *(unsigned __int8 *)(v72 + 80);
    v75 = v64;
    v76 = (v74 + 32) & ~v74;
    v77 = swift_allocObject(&unk_1007A88E8, v76 + v96, v74 | 7);
    *(_QWORD *)(v77 + 16) = v75;
    *(_QWORD *)(v77 + 24) = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v77 + v76, v71, v73);
    v78 = v103;
    v92(v55, v103, v59);
    v79 = swift_allocObject(&unk_1007A8910, v93, v91);
    v89(v79 + v90, v55, v59);
    v80 = (uint64_t (**)(uint64_t))(v79 + v88);
    *v80 = sub_10054D484;
    v80[1] = (uint64_t (*)(uint64_t))v77;
    swift_retain(v75);
    v81 = v69;
    Promise.init(asyncOperation:)(sub_10054D3B8, v79, (char *)&type metadata for () + 8);
    return ((uint64_t (*)(char *, uint64_t))v70)(v78, v59);
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v37, v36, 0);
  swift_bridgeObjectRelease(v35, v40, v41, v42, v43, v44, v45, v46);
  swift_bridgeObjectRelease(v38, v47, v48, v49, v50, v51, v52, v53);
  if ((v39 & 1) != 0)
    goto LABEL_13;
  sub_10054D074(a1);
  v82 = type metadata accessor for NavigationError(0);
  v83 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
  v84 = swift_allocError(v82, v83, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v85, enum case for NavigationError.tabUnavailable(_:), v82);
  v86 = swift_allocObject(&unk_1007A8870, 24, 7);
  *(_QWORD *)(v86 + 16) = v84;
  return Promise.init(synchronousOperation:)(sub_10054D294, v86, (char *)&type metadata for () + 8);
}

uint64_t sub_100549C30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a4;
  v42 = type metadata accessor for NavigationRequest(0);
  v7 = *(_QWORD *)(v42 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v42);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  if ((NavigationRequest.isTrainerTipsGalleryRequest.getter(v12) & 1) != 0)
  {
    v15 = a2[4];
    v39 = a2[5];
    v16 = a3;
    ObjectType = swift_getObjectType(v15);
    TrainerTipsGalleryNavigationBegan.init()();
    v18 = sub_1000083D8(&qword_1008364D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan, (uint64_t)&protocol conformance descriptor for TrainerTipsGalleryNavigationBegan);
    v19 = ObjectType;
    a3 = v16;
    v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    dispatch thunk of EventHubProtocol.publish<A>(_:)(v14, v10, v18, v19, v39);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 23);
  if (!Strong)
    goto LABEL_6;
  v21 = Strong;
  v22 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (!v22)
  {
    swift_unknownObjectRelease(v21);
    goto LABEL_8;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "navigateToSeymourTab");
  swift_unknownObjectRelease(v21);
  swift_unknownObjectRelease(v23);
  if ((v24 & 1) == 0)
  {
LABEL_8:
    sub_10054D074(a3);
    v34 = type metadata accessor for NavigationError(0);
    v35 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
    v36 = swift_allocError(v34, v35, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v37, enum case for NavigationError.tabUnavailable(_:), v34);
    v32 = swift_allocObject(&unk_1007A89B0, 24, 7);
    *(_QWORD *)(v32 + 16) = v36;
    v31 = sub_10054D294;
    v33 = v42;
    return Promise.init(synchronousOperation:)(v31, v32, v33);
  }
LABEL_6:
  v25 = a2[14];
  v26 = a2[15];
  sub_100016804(a2 + 11, v25);
  dispatch thunk of MetricSceneLifecycleReporting.reportContinueUserActivity()(v25, v26);
  v27 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v40, v42);
  v28 = *(unsigned __int8 *)(v7 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_1007A89D8, v29 + v8, v28 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v30 + v29, v9, v27);
  v31 = sub_10054D454;
  v32 = v30;
  v33 = v27;
  return Promise.init(synchronousOperation:)(v31, v32, v33);
}

uint64_t sub_100549EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a3;
  v35 = a4;
  v36 = a1;
  v39 = a5;
  v6 = type metadata accessor for NavigationRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100836170);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  v38 = a2;
  v16 = sub_100016804((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  v17 = v16[1];
  if ((v17 & 0x8000000000000000) != 0)
  {
    v21 = (void *)*v16;
    v22 = swift_retain(*v16);
    AppCoordinator.navigateToUserActivity(_:annotation:)(v34, v35, v22);
    sub_1001B9E74(v21, v17);
  }
  else
  {
    v18 = sub_10054D40C();
    v19 = swift_allocError(&type metadata for NavigationCoordinationError, v18, 0, 0);
    v20 = swift_allocObject(&unk_1007A8988, 24, 7);
    *(_QWORD *)(v20 + 16) = v19;
    Promise.init(synchronousOperation:)(sub_10054D294, v20, (char *)&type metadata for () + 8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v6);
  v23 = *(unsigned __int8 *)(v7 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = swift_allocObject(&unk_1007A8938, v24 + v8, v23 | 7);
  v26 = v38;
  *(_QWORD *)(v25 + 16) = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25 + v24, v9, v6);
  v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v15, v10);
  v28 = *(unsigned __int8 *)(v11 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_1007A8960, v30 + 16, v28 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v31 + v29, v27, v10);
  v32 = (_QWORD *)(v31 + v30);
  *v32 = sub_10054D3FC;
  v32[1] = v25;
  swift_retain(v26);
  Promise.init(asyncOperation:)(sub_100110010, v31, (char *)&type metadata for () + 8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
}

uint64_t sub_10054A154@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  uint64_t v73;
  void *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char v99;
  SEL v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t Strong;
  uint64_t v115;
  void *v116;
  void *v117;
  unsigned __int8 v118;
  void **v119;
  id v120;
  char *v121;
  void *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  id v130;
  id v131;
  uint64_t ObjectType;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (**v145)(uint64_t);
  uint64_t v146;
  id v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (**v158)(uint64_t);
  uint64_t v159;
  id v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t (**v170)@<X0>(uint64_t@<X8>);
  id v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  void (*v185)(char *, char *, uint64_t);
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  CHWorkoutDetailHeartRateTableViewCell *v199;

  v198 = a3;
  v194 = a2;
  v4 = type metadata accessor for NavigationAnnotation(0);
  v195 = *(_QWORD *)(v4 - 8);
  v196 = (char *)v4;
  v5 = *(_QWORD *)(v195 + 64);
  __chkstk_darwin(v4);
  v185 = (void (*)(char *, char *, uint64_t))((char *)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v184 = (char *)&v177 - v7;
  v188 = sub_100047110((uint64_t *)&unk_1008364E0);
  v183 = *(_QWORD *)(v188 - 8);
  v8 = *(_QWORD *)(v183 + 64);
  __chkstk_darwin(v188);
  v181 = (char *)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v193 = (char *)&v177 - v10;
  __chkstk_darwin(v11);
  v186 = (char *)&v177 - v12;
  v13 = sub_100047110((uint64_t *)&unk_100836170);
  v191 = *(_QWORD *)(v13 - 8);
  v192 = v13;
  __chkstk_darwin(v13);
  v189 = (char *)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = v14;
  __chkstk_darwin(v15);
  v190 = (char *)&v177 - v16;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v182 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v177 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v177 - v24;
  *(_QWORD *)&v27 = __chkstk_darwin(v26).n128_u64[0];
  v29 = (char *)&v177 - v28;
  v30 = a1;
  v31 = objc_msgSend(a1, "URL", v27);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

  v32 = URL.scheme.getter();
  v34 = v33;
  v35 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  v36 = v35(v29, v17);
  v37 = (void *)static OpenLinkConstants.scheme.getter(v36);
  v45 = v38;
  if (!v34)
  {
    swift_bridgeObjectRelease(v38, (SEL)v38, v39, v40, v41, v42, v43, v44);
    goto LABEL_11;
  }
  if ((void *)v32 == v37 && v34 == v38)
  {
    swift_bridgeObjectRelease(v34, (SEL)v38, v37, v40, v41, v42, v43, v44);
    swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
    goto LABEL_7;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v37, v38, 0);
  swift_bridgeObjectRelease(v34, v54, v55, v56, v57, v58, v59, v60);
  swift_bridgeObjectRelease(v45, v61, v62, v63, v64, v65, v66, v67);
  if ((v53 & 1) == 0)
  {
LABEL_11:
    v91 = objc_msgSend(v30, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v91);

    sub_10054C1E4((uint64_t)v22);
    v35(v22, v17);
    v92 = type metadata accessor for NavigationError(0);
    v93 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
    v94 = swift_allocError(v92, v93, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v92 - 8) + 104))(v95, enum case for NavigationError.tabUnavailable(_:), v92);
    v96 = swift_allocObject(&unk_1007A85F0, 24, 7);
    *(_QWORD *)(v96 + 16) = v94;
    v97 = (char *)&type metadata for () + 8;
    return Promise.init(synchronousOperation:)(sub_10054D294, v96, v97);
  }
LABEL_7:
  v68 = objc_msgSend(v30, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v68);

  v70 = URL.host.getter(v69);
  v72 = v71;
  v73 = v35(v25, v17);
  v74 = (void *)static OpenLinkConstants.multiUserHost.getter(v73);
  v82 = v75;
  if (!v72)
  {
    swift_bridgeObjectRelease(v75, (SEL)v75, v76, v77, v78, v79, v80, v81);
    v90 = v197;
    goto LABEL_21;
  }
  if ((void *)v70 == v74 && v72 == v75)
  {
    swift_bridgeObjectRelease(v72, (SEL)v75, v74, v77, v78, v79, v80, v81);
    swift_bridgeObjectRelease(v82, v83, v84, v85, v86, v87, v88, v89);
    v90 = v197;
    goto LABEL_16;
  }
  v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v72, v74, v75, 0);
  swift_bridgeObjectRelease(v72, v100, v101, v102, v103, v104, v105, v106);
  swift_bridgeObjectRelease(v82, v107, v108, v109, v110, v111, v112, v113);
  v90 = v197;
  if ((v99 & 1) == 0)
  {
LABEL_21:
    v131 = objc_msgSend(v30, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v131);

    if (!sub_100264B4C((uint64_t)v22, *(unsigned __int8 *)(v90 + 128)))
      return sub_100549024(v198);
    ObjectType = swift_getObjectType(*(_QWORD *)(v90 + 16));
    v133 = v193;
    AMSBagProtocol.makeNavigationRequest(with:annotation:)(v30, v194, ObjectType);
    v134 = swift_allocObject(&unk_1007A8618, 32, 7);
    *(_QWORD *)(v134 + 16) = v90;
    *(_QWORD *)(v134 + 24) = v30;
    v135 = v183;
    v185 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
    v136 = v181;
    v137 = v188;
    v185(v181, v133, v188);
    v138 = *(unsigned __int8 *)(v135 + 80);
    v139 = (v138 + 16) & ~v138;
    v140 = v138 | 7;
    v182 = (char *)v139;
    v141 = v8 + v139 + 7;
    v142 = v90;
    v141 &= 0xFFFFFFFFFFFFFFF8;
    v179 = v141 + 16;
    v180 = v140;
    v143 = v141;
    v177 = v141;
    v144 = swift_allocObject(&unk_1007A8640, v141 + 16, v140);
    v178 = *(void (**)(uint64_t, char *, uint64_t))(v135 + 32);
    v178(v144 + v139, v136, v137);
    v145 = (uint64_t (**)(uint64_t))(v144 + v143);
    *v145 = sub_10054D374;
    v145[1] = (uint64_t (*)(uint64_t))v134;
    v146 = type metadata accessor for NavigationRequest(0);
    swift_retain(v142);
    v147 = v30;
    v148 = v186;
    Promise.init(asyncOperation:)(sub_10054D388, v144, v146);
    v183 = *(_QWORD *)(v135 + 8);
    v149 = v193;
    ((void (*)(char *, uint64_t))v183)(v193, v137);
    v150 = v195;
    v151 = v184;
    v152 = v196;
    (*(void (**)(char *, uint64_t, char *))(v195 + 16))(v184, v194, v196);
    v153 = *(unsigned __int8 *)(v150 + 80);
    v154 = (v153 + 32) & ~v153;
    v155 = swift_allocObject(&unk_1007A8668, v154 + v5, v153 | 7);
    v156 = v197;
    *(_QWORD *)(v155 + 16) = v197;
    *(_QWORD *)(v155 + 24) = v147;
    (*(void (**)(uint64_t, char *, char *))(v150 + 32))(v155 + v154, v151, v152);
    v185(v149, v148, v137);
    v157 = swift_allocObject(&unk_1007A8690, v179, v180);
    v178((uint64_t)&v182[v157], v149, v137);
    v158 = (uint64_t (**)(uint64_t))(v157 + v177);
    *v158 = sub_10054D3A0;
    v158[1] = (uint64_t (*)(uint64_t))v155;
    v159 = v156;
    swift_retain(v156);
    v160 = v147;
    v196 = (char *)&type metadata for () + 8;
    v161 = v190;
    Promise.init(asyncOperation:)(sub_10054D3B8, v157, (char *)&type metadata for () + 8);
    ((void (*)(char *, uint64_t))v183)(v148, v137);
    v162 = swift_allocObject(&unk_1007A86B8, 32, 7);
    *(_QWORD *)(v162 + 16) = v156;
    *(_QWORD *)(v162 + 24) = v160;
    v164 = v191;
    v163 = v192;
    v165 = v189;
    (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v189, v161, v192);
    v166 = *(unsigned __int8 *)(v164 + 80);
    v167 = (v166 + 16) & ~v166;
    v168 = (v187 + v167 + 7) & 0xFFFFFFFFFFFFFFF8;
    v169 = swift_allocObject(&unk_1007A86E0, v168 + 16, v166 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v164 + 32))(v169 + v167, v165, v163);
    v170 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v169 + v168);
    *v170 = sub_10054D3D0;
    v170[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v162;
    swift_retain(v159);
    v171 = v160;
    Promise.init(asyncOperation:)(sub_100110010, v169, v196);
    return (*(uint64_t (**)(char *, uint64_t))(v164 + 8))(v161, v163);
  }
LABEL_16:
  Strong = swift_unknownObjectWeakLoadStrong(v90 + 184);
  if (Strong)
  {
    v115 = Strong;
    v116 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
    if (v116)
    {
      v117 = v116;
      v118 = objc_msgSend(v116, "navigateToSeymourTab");
      swift_unknownObjectRelease(v115);
      swift_unknownObjectRelease(v117);
      if ((v118 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      swift_unknownObjectRelease(v115);
    }
    v172 = objc_msgSend(v30, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v172);

    sub_10054C1E4((uint64_t)v22);
    v35(v22, v17);
    v173 = type metadata accessor for NavigationError(0);
    v174 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
    v175 = swift_allocError(v173, v174, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v173 - 8) + 104))(v176, enum case for NavigationError.tabUnavailable(_:), v173);
    v96 = swift_allocObject(&unk_1007A8708, 24, 7);
    *(_QWORD *)(v96 + 16) = v175;
    v97 = (char *)&type metadata for () + 8;
    return Promise.init(synchronousOperation:)(sub_10054D294, v96, v97);
  }
LABEL_19:
  v119 = (void **)sub_100016804((_QWORD *)(v90 + 48), *(_QWORD *)(v90 + 72));
  v120 = objc_msgSend(v30, "URL");
  v121 = v182;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v120);

  v122 = *v119;
  v123 = (unint64_t)v119[1];
  v199 = &_swiftEmptyArrayStorage;
  v124 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v125 = sub_100047110(&qword_100836180);
  v126 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
  v127 = (char *)v185;
  v128 = v125;
  v129 = v196;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v199, v128, v126, v196, v124);
  if ((v123 & 0x8000000000000000) != 0)
  {
    swift_retain(v122);
    AppCoordinator.navigateToURL(_:annotation:)(v121, v127);
    sub_1001B9E74(v122, v123);
  }
  else
  {
    v130 = v122;
    BrowsingViewController.navigateToURL(_:annotation:)(v121, v127);

  }
  (*(void (**)(char *, char *))(v195 + 8))(v127, v129);
  return v35(v121, v17);
}

uint64_t sub_10054AB44(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v40 = a3;
  v5 = type metadata accessor for URL(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationRequest(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v44 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  if ((NavigationRequest.isTrainerTipsGalleryRequest.getter(v12) & 1) != 0)
  {
    v15 = a2[4];
    v39 = a2[5];
    ObjectType = swift_getObjectType(v15);
    TrainerTipsGalleryNavigationBegan.init()();
    v17 = sub_1000083D8(&qword_1008364D8, (uint64_t (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan, (uint64_t)&protocol conformance descriptor for TrainerTipsGalleryNavigationBegan);
    dispatch thunk of EventHubProtocol.publish<A>(_:)(v14, v10, v17, ObjectType, v39);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 23);
  if (!Strong)
    goto LABEL_6;
  v19 = Strong;
  v20 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (!v20)
  {
    swift_unknownObjectRelease(v19);
    goto LABEL_8;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "navigateToSeymourTab");
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
LABEL_8:
    v31 = objc_msgSend(v40, "URL");
    v32 = (uint64_t)v41;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

    sub_10054C1E4(v32);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v43);
    v33 = type metadata accessor for NavigationError(0);
    v34 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
    v35 = swift_allocError(v33, v34, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v36, enum case for NavigationError.tabUnavailable(_:), v33);
    v30 = swift_allocObject(&unk_1007A8820, 24, 7);
    *(_QWORD *)(v30 + 16) = v35;
    v29 = sub_10054D294;
    return Promise.init(synchronousOperation:)(v29, v30, v7);
  }
LABEL_6:
  v23 = a2[14];
  v24 = a2[15];
  sub_100016804(a2 + 11, v23);
  dispatch thunk of MetricSceneLifecycleReporting.reportOpenURLContexts()(v23, v24);
  v25 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v44, v45, v7);
  v26 = *(unsigned __int8 *)(v8 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = swift_allocObject(&unk_1007A8848, v27 + v9, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v28 + v27, v25, v7);
  v29 = sub_10054D454;
  v30 = v28;
  return Promise.init(synchronousOperation:)(v29, v30, v7);
}

uint64_t sub_10054AE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  double v25;
  id v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v46 = a4;
  v43 = a3;
  v48 = a1;
  v51 = a5;
  v6 = type metadata accessor for NavigationRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v47 = v8;
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)sub_100047110((uint64_t *)&unk_100836170);
  v14 = *(v13 - 1);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v49 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v50 = a2;
  v19 = sub_100016804((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  v20 = v19[1];
  if ((v20 & 0x8000000000000000) != 0)
  {
    v24 = (void *)*v19;
    *(_QWORD *)&v25 = swift_retain(*v19).n128_u64[0];
    v26 = objc_msgSend(v43, "URL", v25);
    v43 = v13;
    v27 = v9;
    v28 = v6;
    v29 = v26;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v6 = v28;
    v9 = v27;
    v13 = v43;
    AppCoordinator.navigateToURL(_:annotation:)(v12, v46);
    sub_1001B9E74(v24, v20);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  }
  else
  {
    v21 = sub_10054D40C();
    v22 = swift_allocError(&type metadata for NavigationCoordinationError, v21, 0, 0);
    v23 = swift_allocObject(&unk_1007A87F8, 24, 7);
    *(_QWORD *)(v23 + 16) = v22;
    Promise.init(synchronousOperation:)(sub_10054D294, v23, (char *)&type metadata for () + 8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v48, v6);
  v30 = *(unsigned __int8 *)(v7 + 80);
  v31 = v6;
  v32 = (v30 + 24) & ~v30;
  v33 = swift_allocObject(&unk_1007A87A8, v32 + v47, v30 | 7);
  v34 = v50;
  *(_QWORD *)(v33 + 16) = v50;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v33 + v32, v9, v31);
  v35 = v49;
  (*(void (**)(char *, char *, _QWORD *))(v14 + 16))(v49, v18, v13);
  v36 = *(unsigned __int8 *)(v14 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = (v15 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_1007A87D0, v38 + 16, v36 | 7);
  (*(void (**)(uint64_t, char *, _QWORD *))(v14 + 32))(v39 + v37, v35, v13);
  v40 = (_QWORD *)(v39 + v38);
  *v40 = sub_10054D3FC;
  v40[1] = v33;
  swift_retain(v34);
  Promise.init(asyncOperation:)(sub_100110010, v39, (char *)&type metadata for () + 8);
  return (*(uint64_t (**)(char *, _QWORD *))(v14 + 8))(v18, v13);
}

void sub_10054B17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  void *v5;
  unint64_t v6;
  __n128 v7;
  id v8;

  v4 = sub_100016804((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  v5 = (void *)*v4;
  v6 = v4[1];
  if ((v6 & 0x8000000000000000) != 0)
  {
    v7 = swift_retain(*v4);
    AppCoordinator.navigateToRequest(_:)(a3, v7);
    sub_1001B9E74(v5, v6);
  }
  else
  {
    v8 = v5;
    BrowsingViewController.navigateToRequest(_:)(a3);

  }
}

uint64_t sub_10054B214@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  id v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (**v35)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;

  v45 = a3;
  v5 = type metadata accessor for NavigationAnnotation(0);
  v40 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100047110((uint64_t *)&unk_100836170);
  v11 = *(_QWORD *)(v43 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v43);
  v41 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v42 = (char *)&v37 - v14;
  v44 = a1;
  v15 = (void **)sub_100016804((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72));
  v16 = objc_msgSend(a2, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v18 = *v15;
  v17 = (unint64_t)v15[1];
  v46 = &_swiftEmptyArrayStorage;
  v19 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v20 = sub_100047110(&qword_100836180);
  v21 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v20, v21, v5, v19);
  if ((v17 & 0x8000000000000000) != 0)
  {
    swift_retain(v18);
    v24 = v42;
    AppCoordinator.navigateToURL(_:annotation:)(v10, v7);
    v25 = v18;
    v23 = v24;
    sub_1001B9E74(v25, v17);
  }
  else
  {
    v22 = v18;
    v23 = v42;
    BrowsingViewController.navigateToURL(_:annotation:)(v10, v7);

  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  v26 = swift_allocObject(&unk_1007A8730, 32, 7);
  v27 = v44;
  *(_QWORD *)(v26 + 16) = sub_10054D3E4;
  *(_QWORD *)(v26 + 24) = v27;
  v28 = swift_allocObject(&unk_1007A8758, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_10016AECC;
  *(_QWORD *)(v28 + 24) = v26;
  v29 = v41;
  v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v23, v43);
  v31 = *(unsigned __int8 *)(v11 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = (v12 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject(&unk_1007A8780, v33 + 16, v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v34 + v32, v29, v30);
  v35 = (uint64_t (**)(uint64_t))(v34 + v33);
  *v35 = sub_10016AEE4;
  v35[1] = (uint64_t (*)(uint64_t))v28;
  swift_retain(v27);
  Promise.init(asyncOperation:)(sub_10016AEF8, v34, (char *)&type metadata for () + 8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v23, v30);
}

uint64_t sub_10054B558(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  void *Strong;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + 184);
  if (result)
  {
    v2 = result;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
    if (Strong)
    {
      v4 = (uint64_t)Strong;
      objc_msgSend(Strong, "navigateToSeymourTab");
      swift_unknownObjectRelease(v2);
      v2 = v4;
    }
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_10054B5C4(void *a1)
{
  _QWORD *v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 23);
  if (!Strong)
    goto LABEL_4;
  v4 = Strong;
  v5 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "navigateToSeymourTab");
    swift_unknownObjectRelease(v4);
    swift_unknownObjectRelease(v6);
    if ((v7 & 1) != 0)
    {
LABEL_4:
      v8 = v1[21];
      v9 = v1[22];
      sub_100016804(v1 + 18, v8);
      v10 = dispatch thunk of SiriUserActivityHandling.handleActivity(_:)(a1, v8, v9);
      return static Promise<>.success.getter(v10);
    }
  }
  else
  {
    swift_unknownObjectRelease(v4);
  }
  sub_10054D074(a1);
  v12 = type metadata accessor for NavigationError(0);
  v13 = sub_1000083D8(&qword_100839C28, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationError, (uint64_t)&protocol conformance descriptor for NavigationError);
  v14 = swift_allocError(v12, v13, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v15, enum case for NavigationError.tabUnavailable(_:), v12);
  v16 = swift_allocObject(&unk_1007A8578, 24, 7);
  *(_QWORD *)(v16 + 16) = v14;
  return Promise.init(synchronousOperation:)(sub_10054D294, v16, (char *)&type metadata for () + 8);
}

void sub_10054B724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSURL *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v5)
  {
    v6 = v5;
    sub_10053881C(a1, (uint64_t)v4);
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    v10 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
    {
      URL._bridgeToObjectiveC()(v9);
      v10 = v11;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    }
    objc_msgSend(v6, "openSensitiveURL:withOptions:", v10, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10054B82C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  void (*v32)(_BYTE *, uint64_t);
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void (*v47)(_BYTE *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _QWORD *v62;
  unint64_t v63;
  void *v64;
  id v65;
  _BYTE *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  _BYTE v77[4];
  int v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  uint64_t v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  _BYTE v104[32];

  v1 = v0;
  v83 = sub_100047110((uint64_t *)&unk_100836170);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = &v77[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v98 = type metadata accessor for NavigationRoutingBehavior(0);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v97 = &v77[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for NavigationSource(0);
  v93 = *(_QWORD *)(v4 - 8);
  v94 = v4;
  __chkstk_darwin(v4);
  v95 = &v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for NavigationAnnotation(0);
  v89 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  __chkstk_darwin(v6);
  v92 = &v77[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for NavigationPriority(0);
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  __chkstk_darwin(v8);
  v91 = &v77[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = type metadata accessor for NavigationIntent(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v11 = &v77[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = type metadata accessor for NavigationResource(0);
  v12 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v14 = &v77[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = type metadata accessor for NavigationRequest(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v99 = &v77[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v16);
  v18 = &v77[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for ContentAvailability(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = &v77[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v25 = &v77[-v24];
  v26 = v1[17];
  if (v26)
  {
    v27 = v26 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state;
    swift_beginAccess(v26 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state, v104, 0, 0);
    sub_10002AD54(v27, (uint64_t)v18);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
      return sub_100154058((uint64_t)v18);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 32))(v25, v18, v19);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for ContentAvailability.available(_:), v19);
    v29 = sub_1000083D8(&qword_100839C20, (uint64_t (*)(uint64_t))&type metadata accessor for ContentAvailability, (uint64_t)&protocol conformance descriptor for ContentAvailability);
    dispatch thunk of RawRepresentable.rawValue.getter(&v102, v19, v29);
    dispatch thunk of RawRepresentable.rawValue.getter(&v100, v19, v29);
    v30 = v103;
    v31 = v101;
    if (v102 == v100 && v103 == v101)
    {
      swift_bridgeObjectRelease_n(v103, 2);
      v32 = *(void (**)(_BYTE *, uint64_t))(v20 + 8);
      v32(v22, v19);
      v32(v25, v19);
    }
    else
    {
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v103, v100, v101, 0);
      swift_bridgeObjectRelease(v30, v33, v34, v35, v36, v37, v38, v39);
      swift_bridgeObjectRelease(v31, v40, v41, v42, v43, v44, v45, v46);
      v47 = *(void (**)(_BYTE *, uint64_t))(v20 + 8);
      v47(v22, v19);
      result = ((uint64_t (*)(_BYTE *, uint64_t))v47)(v25, v19);
      if ((v78 & 1) == 0)
        return result;
    }
  }
  v48 = v1[14];
  v49 = v1[15];
  sub_100016804(v1 + 11, v48);
  dispatch thunk of MetricSceneLifecycleReporting.reportDefaultLaunch()(v48, v49);
  v50 = enum case for NavigationRootResourceState.automatic(_:);
  v51 = type metadata accessor for NavigationRootResourceState(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v14, v50, v51);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for NavigationResource.root(_:), v84);
  *v11 = 0;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v85 + 104))(v11, enum case for NavigationIntent.reset(_:), v86);
  v52 = v91;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v87 + 104))(v91, enum case for NavigationPriority.takeover(_:), v88);
  v53 = sub_100047110((uint64_t *)&unk_100839C10);
  v54 = swift_allocObject(v53, ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72), *(unsigned __int8 *)(v89 + 80) | 7);
  *(_OWORD *)(v54 + 16) = xmmword_100622F90;
  static NavigationAnnotation.appLaunch.getter();
  v102 = v54;
  v55 = sub_1000083D8((unint64_t *)&qword_1008396E0, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationAnnotation, (uint64_t)&protocol conformance descriptor for NavigationAnnotation);
  v56 = sub_100047110(&qword_100836180);
  v57 = sub_1000283C4((unint64_t *)&qword_1008396F0, &qword_100836180);
  v58 = v92;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v102, v56, v57, v90, v55);
  v59 = v95;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v93 + 104))(v95, enum case for NavigationSource.default(_:), v94);
  v60 = v97;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v96 + 104))(v97, enum case for NavigationRoutingBehavior.default(_:), v98);
  v61 = v99;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v14, v11, v59, v60, v52, v58);
  v62 = sub_100016804(v1 + 6, v1[9]);
  v64 = (void *)*v62;
  v63 = v62[1];
  if ((v63 & 0x8000000000000000) != 0)
  {
    v67 = swift_retain(*v62);
    v66 = v81;
    AppCoordinator.navigateToRequest(_:)(v61, v67);
    sub_1001B9E74(v64, v63);
  }
  else
  {
    v65 = v64;
    v66 = v81;
    BrowsingViewController.navigateToRequest(_:)(v61);

  }
  v68 = v83;
  v69 = v82;
  v70 = v80;
  v71 = v79;
  v72 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v83);
  v74 = v73;
  v75 = swift_allocObject(&unk_1007A8550, 32, 7);
  *(_QWORD *)(v75 + 16) = 0;
  *(_QWORD *)(v75 + 24) = 0;
  v72(sub_100110028, v75);
  swift_release(v74);
  v76 = swift_release(v75);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v69 + 8))(v66, v68, v76);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v71 + 8))(v61, v70);
}

uint64_t sub_10054BF24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 48));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 88));

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 144));
  sub_1000F61B4(v0 + 184);
  return swift_deallocClassInstance(v0, 200, 7);
}

void sub_10054BF80(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_10001E724(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_10001E724(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

void sub_10054C1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  void *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t inited;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t (*v103)(char *, char *, uint64_t, __n128);
  __n128 v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  char v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  void (*v124)(char *, uint64_t);
  const char *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  SEL v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  CHWorkoutDetailHeartRateTableViewCell *v169;
  SEL v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  CHWorkoutDetailHeartRateTableViewCell *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  char v203;
  SEL v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v215;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  CHWorkoutDetailHeartRateTableViewCell *v250;
  uint64_t aBlock[5];
  uint64_t v252;
  unint64_t v253;
  char v254[8];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v217 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v234 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v233 = (char *)&v217 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for DispatchQoS.QoSClass(0);
  v231 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v230 = (char *)&v217 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for URL(0);
  v239 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v236 = (char *)&v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for Logger(0);
  v224 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v226 = (char *)&v217 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_100047110(&qword_10081E640);
  v227 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v229 = (uint64_t)&v217 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v240 = (char *)&v217 - v13;
  v228 = v14;
  __chkstk_darwin(v15);
  v243 = (uint64_t)&v217 - v16;
  v17 = type metadata accessor for URLQueryItem(0);
  v248 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v242 = (char *)&v217 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v241 = (char *)&v217 - v20;
  __chkstk_darwin(v21);
  v238 = (char *)&v217 - v22;
  __chkstk_darwin(v23);
  v235 = (char *)&v217 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v217 - v26;
  v28 = sub_100047110(&qword_10082E5E0);
  __chkstk_darwin(v28);
  v30 = (char *)&v217 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for URLComponents(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v217 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = a1;
  v33 = URL.host.getter(v32);
  v35 = v34;
  v36 = (void *)static NavigationConstants.host.getter();
  v44 = v37;
  if (!v35)
  {
    swift_bridgeObjectRelease(v37, (SEL)v37, v38, v39, v40, v41, v42, v43);
    return;
  }
  if ((void *)v33 == v36 && v35 == v37)
  {
    swift_bridgeObjectRelease(v35, (SEL)v37, v36, v39, v40, v41, v42, v43);
    swift_bridgeObjectRelease(v44, v45, v46, v47, v48, v49, v50, v51);
  }
  else
  {
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v36, v37, 0);
    swift_bridgeObjectRelease(v35, v53, v54, v55, v56, v57, v58, v59);
    swift_bridgeObjectRelease(v44, v60, v61, v62, v63, v64, v65, v66);
    if ((v52 & 1) == 0)
      return;
  }
  v221 = v6;
  v222 = v5;
  v67 = sub_100047110((uint64_t *)&unk_100839C30);
  inited = swift_initStackObject(v67, v254);
  *(_OWORD *)(inited + 16) = xmmword_100624A40;
  *(_QWORD *)(inited + 32) = static NavigationConstants.sharingURLScheme.getter();
  v69 = (_QWORD *)(inited + 32);
  *(_QWORD *)(inited + 40) = v70;
  *(_QWORD *)(inited + 48) = ((uint64_t (*)(void))static NavigationConstants.secureSharingURLScheme.getter)();
  *(_QWORD *)(inited + 56) = v71;
  *(_QWORD *)(inited + 64) = static OpenLinkConstants.scheme.getter();
  *(_QWORD *)(inited + 72) = v72;
  v73 = v247;
  v80 = URL.scheme.getter();
  v82 = v81;
  v83 = *(const char **)(inited + 40);
  if (!v83)
  {
    if (!v82)
      goto LABEL_28;
    goto LABEL_14;
  }
  if (v82)
  {
    if (*v69 == v80 && v83 == (const char *)v82
      || (_stringCompareWithSmolCheck(_:_:expecting:)(*v69, v83, v80, v82, 0) & 1) != 0)
    {
      goto LABEL_25;
    }
LABEL_14:
    v83 = *(const char **)(inited + 56);
    if (v83)
    {
      v84 = *(_QWORD *)(inited + 48);
      if (v84 == v80 && v83 == (const char *)v82)
        goto LABEL_25;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v84, v83, v80, v82, 0) & 1) != 0)
        goto LABEL_25;
    }
    goto LABEL_20;
  }
  if (!*(_QWORD *)(inited + 56))
    goto LABEL_28;
LABEL_20:
  v83 = *(const char **)(inited + 72);
  if (!v83)
  {
    if (v82)
    {
LABEL_27:
      swift_bridgeObjectRelease(v82, v83, v74, v75, v76, v77, v78, v79);
      swift_setDeallocating(inited);
      v94 = sub_100047110(&qword_10082B520);
      swift_arrayDestroy(inited + 32, 3, v94);
      return;
    }
LABEL_28:
    swift_setDeallocating(inited);
    v95 = sub_100047110(&qword_10082B520);
    swift_arrayDestroy(inited + 32, 3, v95);
    goto LABEL_29;
  }
  if (!v82)
    goto LABEL_27;
  v85 = *(_QWORD *)(inited + 64);
  if ((v85 != v80 || v83 != (const char *)v82)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v85, v83, v80, v82, 0) & 1) == 0)
  {
    goto LABEL_27;
  }
LABEL_25:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)inited, v83, v74, v75, v76, v77, v78, v79);
  swift_bridgeObjectRelease(v82, v86, v87, v88, v89, v90, v91, v92);
LABEL_29:
  URLComponents.init(url:resolvingAgainstBaseURL:)(v73, 1, v93);
  v96 = v245;
  v97 = v246;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v245 + 48))(v30, 1, v246) == 1)
  {
    sub_10001BE90((uint64_t)v30, &qword_10082E5E0);
    return;
  }
  v98 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v244, v30, v97);
  v99 = URLComponents.queryItems.getter(v98);
  if (v99)
    v100 = (CHWorkoutDetailHeartRateTableViewCell *)v99;
  else
    v100 = &_swiftEmptyArrayStorage;
  v253 = (unint64_t)v100;
  v101 = *(_QWORD *)v100->cellPadding;
  v219 = v2;
  v218 = v3;
  if (!v101)
  {
    v132 = 0;
    v133 = v237;
    v134 = (uint64_t)v240;
    v105 = (unint64_t)v236;
    v135 = v235;
    goto LABEL_47;
  }
  v102 = (*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80);
  v249 = *(_QWORD *)(v248 + 72);
  v103 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v248 + 16);
  v104 = swift_bridgeObjectRetain(v100);
  v105 = 0;
  v220 = v102;
  while (1)
  {
    v106 = v103(v27, (char *)v100 + v102, v17, v104);
    v107 = URLQueryItem.name.getter(v106);
    v115 = v108;
    if (v107 == 29548 && v108 == (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000)
      break;
    v116 = _stringCompareWithSmolCheck(_:_:expecting:)(v107, v108, 29548, 0xE200000000000000, 0);
    swift_bridgeObjectRelease(v115, v117, v118, v119, v120, v121, v122, v123);
    v124 = *(void (**)(char *, uint64_t))(v248 + 8);
    v124(v27, v17);
    if ((v116 & 1) != 0)
      goto LABEL_43;
    ++v105;
    v102 += v249;
    if (v101 == v105)
    {
      swift_bridgeObjectRelease(v100, v125, v126, v127, v128, v129, v130, v131);
      v132 = *(_QWORD *)(v253 + 16);
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000, (SEL)0xE200000000000000, v109, v110, v111, v112, v113, v114);
  v124 = *(void (**)(char *, uint64_t))(v248 + 8);
  v124(v27, v17);
LABEL_43:
  swift_bridgeObjectRelease(v100, v125, v126, v127, v128, v129, v130, v131);
  v132 = v105 + 1;
  if (__OFADD__(v105, 1))
    goto LABEL_84;
  v136 = v253;
  v137 = *(_QWORD *)(v253 + 16);
  if (v132 == v137)
  {
LABEL_45:
    v101 = v105;
LABEL_46:
    v133 = v237;
    v134 = (uint64_t)v240;
    v105 = (unint64_t)v236;
    v135 = v235;
    if (v132 < v101)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
LABEL_47:
    sub_10011FCAC(v101, v132);
    URLQueryItem.init(name:value:)(29548, 0xE200000000000000, 48, 0xE100000000000000);
    v115 = (CHWorkoutDetailHeartRateTableViewCell *)v253;
    if ((swift_isUniquelyReferenced_nonNull_native(v253) & 1) != 0)
    {
LABEL_48:
      v139 = *(_QWORD *)v115->cellPadding;
      v138 = *(_QWORD *)v115->cellInset;
      if (v139 >= v138 >> 1)
        v115 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(v138 > 1, v139 + 1, 1, (unint64_t)v115);
      *(_QWORD *)v115->cellPadding = v139 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v248 + 32))((unint64_t)v115+ ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80))+ *(_QWORD *)(v248 + 72) * v139, v135, v17);
      v253 = (unint64_t)v115;
      v140 = URLComponents.queryItems.setter(v115);
      v141 = static NavigationConstants.secureSharingURLScheme.getter(v140);
      v143 = URLComponents.scheme.setter(v141, v142);
      v144 = v243;
      v145 = URLComponents.url.getter(v143);
      v146 = v226;
      static Log.engagement.getter(v145);
      v147 = v239;
      (*(void (**)(unint64_t, uint64_t, unint64_t))(v239 + 16))(v105, v247, v133);
      v148 = v144;
      v149 = v146;
      v150 = sub_10053881C(v148, v134);
      v151 = Logger.logObject.getter(v150);
      v152 = static os_log_type_t.default.getter(v151);
      if (os_log_type_enabled(v151, v152))
      {
        v153 = swift_slowAlloc(22, -1);
        v154 = swift_slowAlloc(64, -1);
        aBlock[0] = v154;
        *(_DWORD *)v153 = 136315394;
        v155 = sub_1000083D8((unint64_t *)&unk_100839C40, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v156 = dispatch thunk of CustomStringConvertible.description.getter(v133, v155);
        v158 = (CHWorkoutDetailHeartRateTableViewCell *)v157;
        v250 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003E8EC(v156, v157, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, aBlock, v153 + 4);
        swift_bridgeObjectRelease(v158, v159, v160, v161, v162, v163, v164, v165);
        (*(void (**)(unint64_t, unint64_t))(v239 + 8))(v105, v133);
        *(_WORD *)(v153 + 12) = 2080;
        v166 = (uint64_t)v240;
        v167 = Optional.description.getter(v223);
        v169 = (CHWorkoutDetailHeartRateTableViewCell *)v168;
        v250 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003E8EC(v167, v168, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, aBlock, v153 + 14);
        swift_bridgeObjectRelease(v169, v170, v171, v172, v173, v174, v175, v176);
        sub_10001BE90(v166, &qword_10081E640);
        _os_log_impl((void *)&_mh_execute_header, v151, v152, "Tab hidden, launching URL as fallback: %s, normalized URL %s", (uint8_t *)v153, 0x16u);
        swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v154, -1, -1);
        swift_slowDealloc(v153, -1, -1);
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t))(v147 + 8))(v105, v133);
        sub_10001BE90(v134, &qword_10081E640);
      }

      (*(void (**)(char *, uint64_t))(v224 + 8))(v149, v225);
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v177 = v231;
      v178 = v230;
      v179 = v232;
      (*(void (**)(char *, _QWORD, uint64_t))(v231 + 104))(v230, enum case for DispatchQoS.QoSClass.default(_:), v232);
      v180 = (void *)static OS_dispatch_queue.global(qos:)(v178);
      (*(void (**)(char *, uint64_t))(v177 + 8))(v178, v179);
      v181 = v243;
      v182 = v229;
      sub_10053881C(v243, v229);
      v183 = *(unsigned __int8 *)(v227 + 80);
      v184 = (v183 + 16) & ~v183;
      v185 = swift_allocObject(&unk_1007A85A0, v184 + v228, v183 | 7);
      sub_10051DC6C(v182, v185 + v184);
      aBlock[4] = (uint64_t)sub_10054D340;
      v252 = v185;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10002D0F8;
      aBlock[3] = (uint64_t)&unk_1007A85B8;
      v186 = _Block_copy(aBlock);
      v187 = v233;
      static DispatchQoS.unspecified.getter(v186);
      v250 = &_swiftEmptyArrayStorage;
      v188 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v189 = sub_100047110(&qword_100828C80);
      v190 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
      v191 = v222;
      v192 = v189;
      v193 = v219;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v250, v192, v190, v219, v188);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v187, v191, v186);
      _Block_release(v186);

      (*(void (**)(char *, uint64_t))(v218 + 8))(v191, v193);
      (*(void (**)(char *, uint64_t))(v234 + 8))(v187, v221);
      sub_10001BE90(v181, &qword_10081E640);
      (*(void (**)(char *, uint64_t))(v245 + 8))(v244, v246);
      swift_release(v252);
      return;
    }
LABEL_78:
    v115 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141844(0, *(_QWORD *)v115->cellPadding + 1, 1, (unint64_t)v115);
    goto LABEL_48;
  }
  v135 = (char *)(v249 + v102);
  v133 = v105 + 1;
  v134 = (uint64_t)v238;
  while (1)
  {
    if (v133 >= v137)
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    v194 = ((uint64_t (*)(uint64_t, char *, uint64_t))v103)(v134, &v135[v136], v17);
    v195 = URLQueryItem.name.getter(v194);
    v115 = v196;
    if (v195 == 29548 && v196 == (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000)
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000, (SEL)0xE200000000000000, v197, v198, v199, v200, v201, v202);
      v124((char *)v134, v17);
      goto LABEL_71;
    }
    v203 = _stringCompareWithSmolCheck(_:_:expecting:)(v195, v196, 29548, 0xE200000000000000, 0);
    swift_bridgeObjectRelease(v115, v204, v205, v206, v207, v208, v209, v210);
    v124((char *)v134, v17);
    if ((v203 & 1) == 0)
      break;
LABEL_71:
    v132 = v133 + 1;
    if (__OFADD__(v133, 1))
      goto LABEL_75;
    v136 = v253;
    v137 = *(_QWORD *)(v253 + 16);
    ++v133;
    v135 += v249;
    if (v132 == v137)
      goto LABEL_45;
  }
  if (v133 == v105)
  {
LABEL_70:
    if (__OFADD__(v105++, 1))
      goto LABEL_76;
    goto LABEL_71;
  }
  if ((v105 & 0x8000000000000000) == 0)
  {
    v211 = v253;
    v212 = *(_QWORD *)(v253 + 16);
    if (v105 >= v212)
      goto LABEL_80;
    v213 = v105 * v249;
    ((void (*)(char *, unint64_t, uint64_t))v103)(v241, v253 + v220 + v105 * v249, v17);
    if (v133 >= v212)
      goto LABEL_81;
    ((void (*)(char *, char *, uint64_t))v103)(v242, &v135[v211], v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v211);
    v253 = v211;
    v134 = (uint64_t)v238;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v211 = sub_1004DEF74(v211);
      v253 = v211;
    }
    if (v105 >= *(_QWORD *)(v211 + 16))
      goto LABEL_82;
    v215 = v211 + v220 + v213;
    v115 = *(CHWorkoutDetailHeartRateTableViewCell **)(v248 + 40);
    ((void (*)(unint64_t, char *, uint64_t))v115)(v215, v242, v17);
    if (v133 >= *(_QWORD *)(v253 + 16))
      goto LABEL_83;
    ((void (*)(char *, char *, uint64_t))v115)(&v135[v253], v241, v17);
    goto LABEL_70;
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
}

void sub_10054D074(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  char v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;

  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v39 - v11;
  v13 = objc_msgSend(a1, "activityType", v10);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
  if (v14 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16, v22, v23, v24, v25, v26, v27, v28);
    swift_bridgeObjectRelease(v20, v29, v30, v31, v32, v33, v34, v35);
    if ((v21 & 1) == 0)
      return;
  }
  v36 = objc_msgSend(a1, "webpageURL");
  if (v36)
  {
    v37 = v36;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v38 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v38(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v38(v12, v4, v5);
      sub_10054C1E4((uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_10001BE90((uint64_t)v4, &qword_10081E640);
}

uint64_t sub_10054D294()
{
  return sub_10054D63C();
}

uint64_t sub_10054D2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100047110(&qword_10081E640) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_10054D340()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(&qword_10081E640) - 8) + 80);
  sub_10054B724(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10054D374(uint64_t a1)
{
  uint64_t v1;

  return sub_10054AB44(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10054D37C()
{
  return sub_10004BE58((uint64_t *)&unk_1008364E0);
}

uint64_t sub_10054D388(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, (uint64_t *)&unk_1008364E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B380);
}

uint64_t sub_10054D3A0(uint64_t a1)
{
  return sub_10054D490(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_10054AE6C);
}

uint64_t sub_10054D3AC()
{
  return sub_10004BE58((uint64_t *)&unk_1008364E0);
}

uint64_t sub_10054D3B8(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, (uint64_t *)&unk_1008364E0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B364);
}

uint64_t sub_10054D3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10054B214(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10054D3D8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_10054D3E4()
{
  uint64_t v0;

  return sub_10054B558(v0);
}

uint64_t sub_10054D3EC()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_10054D400()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

unint64_t sub_10054D40C()
{
  unint64_t result;

  result = qword_100839C50;
  if (!qword_100839C50)
  {
    result = swift_getWitnessTable(&unk_100644E14, &type metadata for NavigationCoordinationError);
    atomic_store(result, (unint64_t *)&qword_100839C50);
  }
  return result;
}

uint64_t sub_10054D454@<X0>(uint64_t a1@<X8>)
{
  return sub_10054D5C8(a1);
}

uint64_t sub_10054D46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100549C30(a1, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_10054D474()
{
  return sub_10004BE58((uint64_t *)&unk_1008364E0);
}

uint64_t sub_10054D484(uint64_t a1)
{
  return sub_10054D490(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_100549EE0);
}

uint64_t sub_10054D490(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NavigationAnnotation(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v4 + 32) & ~v4));
}

uint64_t sub_10054D4F0()
{
  return sub_10004BE58((uint64_t *)&unk_1008364E0);
}

void sub_10054D500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NavigationRequest(0) - 8) + 80);
  sub_10054B17C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10054D554()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_10054D568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for NavigationRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10054D5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NavigationRequest(0);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_10054D618()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054D63C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_willThrow();
  return swift_errorRetain(v1);
}

uint64_t sub_10054D66C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10054D678()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10054D69C(uint64_t a1)
{
  uint64_t v1;

  return sub_100548B74(a1, v1);
}

uint64_t sub_10054D6B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10054D6D8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t *sub_10054D714(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_100047110((uint64_t *)&unk_100832400);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_10054D7DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_10054D840(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_10054D8DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v4 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_10054D990(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10054DA28(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, (uint64_t *)&unk_100832400);
    v4 = sub_100047110((uint64_t *)&unk_100832400);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10054DAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10054DAE4);
}

uint64_t sub_10054DAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100820E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10054DB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10054DB30);
}

uint64_t sub_10054DB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100820E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainingLoadInfoPaneDetailView(uint64_t a1)
{
  uint64_t result;

  result = qword_100839CC8;
  if (!qword_100839CC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrainingLoadInfoPaneDetailView);
  return result;
}

void sub_10054DBB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100117758(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

uint64_t sub_10054DC18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BB264, 1);
}

uint64_t sub_10054DC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[16];
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[2];

  v53 = a2;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v50 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100839D18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100839D10);
  v47 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100839D08);
  v13 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  v49 = v13;
  __chkstk_darwin(v12);
  v46 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Axis.Set.vertical.getter(v15);
  v17 = sub_100047110(&qword_100839D28);
  v18 = sub_10054F95C();
  ScrollView.init(_:showsIndicators:content:)(v16, 1, sub_10054DFD8, 0, v17, v18);
  v55 = a1;
  v19 = sub_100047110(&qword_100834370);
  v20 = sub_100028384(&qword_100839D20, &qword_100839D18, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v21 = sub_100007050(&qword_1008343E8);
  v22 = sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v56 = v21;
  v57 = (void *)v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_10054FA4C, v54, v5, v19, v20, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v60[0] = v27;
  v60[1] = v29;
  v56 = v5;
  v57 = (void *)v19;
  v58 = v20;
  v59 = OpaqueTypeConformance2;
  v30 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v31 = sub_100038CA0();
  v32 = v46;
  View.navigationTitle<A>(_:)(v60, v9, &type metadata for String, v30, v31);
  swift_bridgeObjectRelease(v29, v33, v34, v35, v36, v37, v38, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v9);
  v40 = v50;
  v41 = v51;
  v42 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v52);
  v56 = v9;
  v57 = &type metadata for String;
  v58 = v30;
  v59 = v31;
  v43 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v44 = v48;
  View.navigationBarTitleDisplayMode(_:)(v40, v48, v43);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v44);
}

void *sub_10054DFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *result;
  _BYTE __src[736];
  _BYTE v25[744];
  char v26;
  char v27;

  v3 = static HorizontalAlignment.leading.getter(a1);
  sub_10054E0F8((uint64_t)__src);
  v25[736] = 0;
  v4 = memcpy(&v25[7], __src, 0x2D9uLL);
  v5 = static Edge.Set.horizontal.getter(v4);
  v6 = EdgeInsets.init(_all:)(24.0);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v26 = 0;
  v14 = static Edge.Set.vertical.getter(v13);
  v15 = EdgeInsets.init(_all:)(20.0);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = v26;
  v27 = 0;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  result = memcpy((void *)(a2 + 17), v25, 0x2E0uLL);
  *(_BYTE *)(a2 + 760) = v5;
  *(double *)(a2 + 768) = v6;
  *(_QWORD *)(a2 + 776) = v8;
  *(_QWORD *)(a2 + 784) = v10;
  *(_QWORD *)(a2 + 792) = v12;
  *(_BYTE *)(a2 + 800) = v22;
  *(_BYTE *)(a2 + 808) = v14;
  *(double *)(a2 + 816) = v15;
  *(_QWORD *)(a2 + 824) = v17;
  *(_QWORD *)(a2 + 832) = v19;
  *(_QWORD *)(a2 + 840) = v21;
  *(_BYTE *)(a2 + 848) = v27;
  return result;
}

void sub_10054E0F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  char v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  char v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  NSString v105;
  id v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  char v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  CHWorkoutDetailHeartRateTableViewCell *v125;
  SEL v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  SEL v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  double v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  NSString v151;
  id v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  CHWorkoutDetailHeartRateTableViewCell *v160;
  char v161;
  uint64_t v162;
  double v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  __n128 v168;
  uint64_t v169;
  uint64_t v170;
  __n128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;
  CHWorkoutDetailHeartRateTableViewCell *v177;
  SEL v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  __n128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  CHWorkoutDetailHeartRateTableViewCell *v190;
  SEL v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  uint64_t v198;
  double v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  NSString v204;
  id v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  CHWorkoutDetailHeartRateTableViewCell *v212;
  CHWorkoutDetailHeartRateTableViewCell *v213;
  char v214;
  uint64_t v215;
  double v216;
  uint64_t v217;
  __n128 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  CHWorkoutDetailHeartRateTableViewCell *v223;
  CHWorkoutDetailHeartRateTableViewCell *v224;
  SEL v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  __n128 v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  CHWorkoutDetailHeartRateTableViewCell *v236;
  SEL v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  uint64_t v244;
  double v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  id v249;
  NSString v250;
  id v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  CHWorkoutDetailHeartRateTableViewCell *v258;
  CHWorkoutDetailHeartRateTableViewCell *v259;
  char v260;
  uint64_t v261;
  double v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  __n128 v267;
  uint64_t v268;
  uint64_t v269;
  __n128 v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  CHWorkoutDetailHeartRateTableViewCell *v275;
  CHWorkoutDetailHeartRateTableViewCell *v276;
  SEL v277;
  id v278;
  id v279;
  id v280;
  id v281;
  id v282;
  id v283;
  __n128 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int v288;
  CHWorkoutDetailHeartRateTableViewCell *v289;
  SEL v290;
  id v291;
  id v292;
  id v293;
  id v294;
  id v295;
  id v296;
  uint64_t v297;
  double v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  id v302;
  NSString v303;
  id v304;
  uint64_t v305;
  uint64_t *v306;
  uint64_t *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  CHWorkoutDetailHeartRateTableViewCell *v311;
  CHWorkoutDetailHeartRateTableViewCell *v312;
  char v313;
  uint64_t v314;
  double v315;
  uint64_t v316;
  __n128 v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char v321;
  CHWorkoutDetailHeartRateTableViewCell *v322;
  CHWorkoutDetailHeartRateTableViewCell *v323;
  SEL v324;
  id v325;
  id v326;
  id v327;
  id v328;
  id v329;
  id v330;
  __n128 v331;
  uint64_t v332;
  uint64_t v333;
  int v334;
  CHWorkoutDetailHeartRateTableViewCell *v335;
  SEL v336;
  id v337;
  id v338;
  id v339;
  id v340;
  id v341;
  id v342;
  uint64_t v343;
  double v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  id v351;
  NSString v352;
  id v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  CHWorkoutDetailHeartRateTableViewCell *v360;
  CHWorkoutDetailHeartRateTableViewCell *v361;
  char v362;
  uint64_t v363;
  double v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  __n128 v369;
  uint64_t v370;
  uint64_t v371;
  __n128 v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char v376;
  CHWorkoutDetailHeartRateTableViewCell *v377;
  CHWorkoutDetailHeartRateTableViewCell *v378;
  SEL v379;
  id v380;
  id v381;
  id v382;
  id v383;
  id v384;
  id v385;
  __n128 v386;
  uint64_t v387;
  uint64_t v388;
  void (*v389)(char *);
  unsigned int v390;
  uint64_t v391;
  SEL v392;
  id v393;
  id v394;
  id v395;
  id v396;
  id v397;
  id v398;
  uint64_t v399;
  double v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  id v407;
  NSString v408;
  id v409;
  uint64_t v410;
  uint64_t *v411;
  uint64_t *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  CHWorkoutDetailHeartRateTableViewCell *v416;
  CHWorkoutDetailHeartRateTableViewCell *v417;
  char v418;
  uint64_t v419;
  double v420;
  uint64_t v421;
  __n128 v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char v426;
  CHWorkoutDetailHeartRateTableViewCell *v427;
  CHWorkoutDetailHeartRateTableViewCell *v428;
  SEL v429;
  id v430;
  id v431;
  id v432;
  id v433;
  id v434;
  id v435;
  __n128 v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char v440;
  CHWorkoutDetailHeartRateTableViewCell *v441;
  CHWorkoutDetailHeartRateTableViewCell *v442;
  SEL v443;
  id v444;
  id v445;
  id v446;
  id v447;
  id v448;
  id v449;
  uint64_t v450;
  double v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  CHWorkoutDetailHeartRateTableViewCell *v455;
  SEL v456;
  id v457;
  id v458;
  id v459;
  id v460;
  id v461;
  id v462;
  CHWorkoutDetailHeartRateTableViewCell *v463;
  SEL v464;
  id v465;
  id v466;
  id v467;
  id v468;
  id v469;
  id v470;
  CHWorkoutDetailHeartRateTableViewCell *v471;
  SEL v472;
  id v473;
  id v474;
  id v475;
  id v476;
  id v477;
  id v478;
  CHWorkoutDetailHeartRateTableViewCell *v479;
  SEL v480;
  id v481;
  id v482;
  id v483;
  id v484;
  id v485;
  id v486;
  CHWorkoutDetailHeartRateTableViewCell *v487;
  SEL v488;
  id v489;
  id v490;
  id v491;
  id v492;
  id v493;
  id v494;
  CHWorkoutDetailHeartRateTableViewCell *v495;
  SEL v496;
  id v497;
  id v498;
  id v499;
  id v500;
  id v501;
  id v502;
  CHWorkoutDetailHeartRateTableViewCell *v503;
  SEL v504;
  id v505;
  id v506;
  id v507;
  id v508;
  id v509;
  id v510;
  CHWorkoutDetailHeartRateTableViewCell *v511;
  SEL v512;
  id v513;
  id v514;
  id v515;
  id v516;
  id v517;
  id v518;
  CHWorkoutDetailHeartRateTableViewCell *v519;
  SEL v520;
  id v521;
  id v522;
  id v523;
  id v524;
  id v525;
  id v526;
  uint64_t v527;
  int v528;
  int v529;
  uint64_t v530;
  uint64_t v531;
  CHWorkoutDetailHeartRateTableViewCell *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  double v536;
  int v537;
  int v538;
  uint64_t v539;
  uint64_t v540;
  CHWorkoutDetailHeartRateTableViewCell *v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  double v545;
  int v546;
  int v547;
  uint64_t v548;
  uint64_t v549;
  CHWorkoutDetailHeartRateTableViewCell *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  double v556;
  int v557;
  int v558;
  CHWorkoutDetailHeartRateTableViewCell *v559;
  int v560;
  CHWorkoutDetailHeartRateTableViewCell *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  double v567;
  int v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  double v572;
  int v573;
  CHWorkoutDetailHeartRateTableViewCell *v574;
  uint64_t v575;
  uint64_t v576;
  int v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  double v581;
  int v582;
  CHWorkoutDetailHeartRateTableViewCell *v583;
  uint64_t v584;
  uint64_t v585;
  int v586;
  uint64_t v587;
  unint64_t v588;
  uint64_t v589;
  unsigned int v590;
  void (*v591)(char *);
  char *v592;
  uint64_t v593;
  unint64_t v594;
  id v595;
  uint64_t v596;
  char v597;
  uint64_t v598;
  uint64_t v599;
  char v600;
  CHWorkoutDetailHeartRateTableViewCell *v601;
  char v602;
  double v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  char v607;
  char *v608;
  void (*v609)(char *);
  char v610;
  CHWorkoutDetailHeartRateTableViewCell *v611;
  char v612;
  double v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  char v617;
  uint64_t v618;
  uint64_t v619;
  char v620;
  CHWorkoutDetailHeartRateTableViewCell *v621;
  char v622;
  double v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  char v627;
  uint64_t v628;
  uint64_t v629;
  char v630;
  CHWorkoutDetailHeartRateTableViewCell *v631;
  char v632;
  double v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  char v637;
  uint64_t v638;
  uint64_t v639;
  char v640;
  CHWorkoutDetailHeartRateTableViewCell *v641;
  char v642;
  double v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  char v647;
  uint64_t v648;
  uint64_t v649;
  char v650;
  CHWorkoutDetailHeartRateTableViewCell *v651;
  char v652;
  double v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  char v657;
  uint64_t v658;
  uint64_t v659;
  char v660;
  CHWorkoutDetailHeartRateTableViewCell *v661;
  char v662;
  double v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  char v667;
  uint64_t v668;
  uint64_t v669;
  char v670;
  CHWorkoutDetailHeartRateTableViewCell *v671;
  char v672;
  double v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  char v677;
  uint64_t v678;
  uint64_t v679;
  char v680;
  CHWorkoutDetailHeartRateTableViewCell *v681;
  char v682;
  double v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  char v687;
  uint64_t *v688;
  uint64_t *v689;
  uint64_t *v690;
  uint64_t *v691;
  uint64_t *v692;
  uint64_t *v693;
  uint64_t *v694;
  uint64_t *v695;
  uint64_t *v696;
  uint64_t *v697;

  v587 = a1;
  v593 = type metadata accessor for Font.Leading(0);
  v589 = *(_QWORD *)(v593 - 8);
  __chkstk_darwin(v593);
  v592 = (char *)&v527 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v595 = (id)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v595, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v688 = (uint64_t *)v5;
  v689 = v7;
  v594 = sub_100038CA0();
  v8 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = static Font.body.getter(v15);
  v18 = Text.font(_:)(v16, v8, v10, v14, v12, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release(v16);
  v25 = v22 & 1;
  sub_1000E4458(v8, v10, v14);
  swift_bridgeObjectRelease(v12, v26, v27, v28, v29, v30, v31, v32);
  LODWORD(v688) = static HierarchicalShapeStyle.secondary.getter(v33);
  v34 = Text.foregroundStyle<A>(_:)(&v688, v18, v20, v25, v24, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v584 = v35;
  v585 = v34;
  v586 = v36;
  v583 = v37;
  sub_1000E4458(v18, v20, v25);
  swift_bridgeObjectRelease(v24, v38, v39, v40, v41, v42, v43, v44);
  v582 = static Edge.Set.bottom.getter(v45);
  v46 = EdgeInsets.init(_all:)(20.0);
  v580 = v47;
  v581 = v46;
  v578 = v49;
  v579 = v48;
  v50 = objc_msgSend(v595, "mainBundle");
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v50, "localizedStringForKey:value:table:", v51, 0, 0);

  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

  v688 = (uint64_t *)v53;
  v689 = v55;
  v56 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v58 = v57;
  v60 = v59;
  v62 = v61 & 1;
  v64 = static Font.body.getter(v63);
  v590 = enum case for Font.Leading.tight(_:);
  v65 = v589;
  v591 = *(void (**)(char *))(v589 + 104);
  v67 = v592;
  v66 = v593;
  v591(v592);
  v68 = Font.leading(_:)(v67, v64);
  v69 = swift_release(v64);
  v589 = *(_QWORD *)(v65 + 8);
  v70 = ((uint64_t (*)(char *, uint64_t, __n128))v589)(v67, v66, v69);
  static Font.Weight.semibold.getter(v70);
  v71 = Font.weight(_:)(v68);
  v72 = swift_release(v68);
  v73 = Text.font(_:)(v71, v56, v58, v62, v60, v72);
  v75 = v74;
  LOBYTE(v67) = v76;
  v78 = v77;
  swift_release(v71);
  sub_1000E4458(v56, v58, v62);
  swift_bridgeObjectRelease(v60, v79, v80, v81, v82, v83, v84, v85);
  v87 = static Color.white.getter(v86);
  v688 = (uint64_t *)v87;
  v88 = Text.foregroundStyle<A>(_:)(&v688, v73, v75, v67 & 1, v78, &type metadata for Color, &protocol witness table for Color);
  v575 = v89;
  v576 = v88;
  v577 = v90;
  v574 = v91;
  sub_1000E4458(v73, v75, v67 & 1);
  swift_release(v87);
  swift_bridgeObjectRelease(v78, v92, v93, v94, v95, v96, v97, v98);
  v573 = static Edge.Set.bottom.getter(v99);
  v100 = EdgeInsets.init(_all:)(5.0);
  v571 = v101;
  v572 = v100;
  v569 = v103;
  v570 = v102;
  v104 = objc_msgSend(v595, "mainBundle");
  v105 = String._bridgeToObjectiveC()();
  v106 = objc_msgSend(v104, "localizedStringForKey:value:table:", v105, 0, 0);

  v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
  v109 = v108;

  v688 = (uint64_t *)v107;
  v689 = v109;
  v110 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v112 = v111;
  v114 = v113;
  v116 = v115 & 1;
  v118 = static Font.body.getter(v117);
  v120 = Text.font(_:)(v118, v110, v112, v116, v114, v119);
  v122 = v121;
  LOBYTE(v78) = v123;
  v125 = v124;
  swift_release(v118);
  sub_1000E4458(v110, v112, v116);
  swift_bridgeObjectRelease(v114, v126, v127, v128, v129, v130, v131, v132);
  LODWORD(v688) = static HierarchicalShapeStyle.secondary.getter(v133);
  v134 = Text.foregroundStyle<A>(_:)(&v688, v120, v122, v78 & 1, v125, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v562 = v135;
  v563 = v134;
  v568 = v136;
  v561 = v137;
  sub_1000E4458(v120, v122, v78 & 1);
  swift_bridgeObjectRelease(v125, v138, v139, v140, v141, v142, v143, v144);
  v560 = static Edge.Set.bottom.getter(v145);
  v146 = EdgeInsets.init(_all:)(20.0);
  v566 = v147;
  v567 = v146;
  v564 = v149;
  v565 = v148;
  v150 = objc_msgSend(v595, "mainBundle");
  v588 = 0xD00000000000002ELL;
  v151 = String._bridgeToObjectiveC()();
  v152 = objc_msgSend(v150, "localizedStringForKey:value:table:", v151, 0, 0);

  v153 = static String._unconditionallyBridgeFromObjectiveC(_:)(v152);
  v155 = v154;

  v688 = (uint64_t *)v153;
  v689 = v155;
  v156 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v158 = v157;
  v160 = v159;
  v162 = v161 & 1;
  v164 = static Font.body.getter(v163);
  v166 = v592;
  v165 = v593;
  ((void (*)(char *, _QWORD, uint64_t))v591)(v592, v590, v593);
  v167 = Font.leading(_:)(v166, v164);
  v168 = swift_release(v164);
  v169 = ((uint64_t (*)(char *, uint64_t, __n128))v589)(v166, v165, v168);
  static Font.Weight.semibold.getter(v169);
  v170 = Font.weight(_:)(v167);
  v171 = swift_release(v167);
  v172 = Text.font(_:)(v170, v156, v158, v162, v160, v171);
  v174 = v173;
  LOBYTE(v166) = v175;
  v177 = v176;
  swift_release(v170);
  sub_1000E4458(v156, v158, v162);
  swift_bridgeObjectRelease(v160, v178, v179, v180, v181, v182, v183, v184);
  v186 = static Color.white.getter(v185);
  v688 = (uint64_t *)v186;
  v187 = Text.foregroundStyle<A>(_:)(&v688, v172, v174, v166 & 1, v177, &type metadata for Color, &protocol witness table for Color);
  v551 = v188;
  v552 = v187;
  v558 = v189;
  v559 = v190;
  sub_1000E4458(v172, v174, v166 & 1);
  swift_release(v186);
  swift_bridgeObjectRelease(v177, v191, v192, v193, v194, v195, v196, v197);
  v557 = static Edge.Set.bottom.getter(v198);
  v199 = EdgeInsets.init(_all:)(5.0);
  v555 = v200;
  v556 = v199;
  v553 = v202;
  v554 = v201;
  v203 = objc_msgSend(v595, "mainBundle");
  v204 = String._bridgeToObjectiveC()();
  v205 = objc_msgSend(v203, "localizedStringForKey:value:table:", v204, 0, 0);

  v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v205);
  v208 = v207;

  v688 = (uint64_t *)v206;
  v689 = v208;
  v209 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v211 = v210;
  v213 = v212;
  v215 = v214 & 1;
  v217 = static Font.body.getter(v216);
  v219 = Text.font(_:)(v217, v209, v211, v215, v213, v218);
  v221 = v220;
  LOBYTE(v166) = v222;
  v224 = v223;
  swift_release(v217);
  sub_1000E4458(v209, v211, v215);
  swift_bridgeObjectRelease(v213, v225, v226, v227, v228, v229, v230, v231);
  LODWORD(v688) = static HierarchicalShapeStyle.secondary.getter(v232);
  v233 = Text.foregroundStyle<A>(_:)(&v688, v219, v221, v166 & 1, v224, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v548 = v234;
  v549 = v233;
  v547 = v235;
  v550 = v236;
  sub_1000E4458(v219, v221, v166 & 1);
  swift_bridgeObjectRelease(v224, v237, v238, v239, v240, v241, v242, v243);
  v546 = static Edge.Set.bottom.getter(v244);
  v245 = EdgeInsets.init(_all:)(20.0);
  v544 = v246;
  v545 = v245;
  v542 = v248;
  v543 = v247;
  v249 = objc_msgSend(v595, "mainBundle");
  v250 = String._bridgeToObjectiveC()();
  v251 = objc_msgSend(v249, "localizedStringForKey:value:table:", v250, 0, 0);

  v252 = static String._unconditionallyBridgeFromObjectiveC(_:)(v251);
  v254 = v253;

  v688 = (uint64_t *)v252;
  v689 = v254;
  v255 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v257 = v256;
  v259 = v258;
  v261 = v260 & 1;
  v263 = static Font.body.getter(v262);
  v265 = v592;
  v264 = v593;
  ((void (*)(char *, _QWORD, uint64_t))v591)(v592, v590, v593);
  v266 = Font.leading(_:)(v265, v263);
  v267 = swift_release(v263);
  v268 = ((uint64_t (*)(char *, uint64_t, __n128))v589)(v265, v264, v267);
  static Font.Weight.semibold.getter(v268);
  v269 = Font.weight(_:)(v266);
  v270 = swift_release(v266);
  v271 = Text.font(_:)(v269, v255, v257, v261, v259, v270);
  v273 = v272;
  LOBYTE(v265) = v274;
  v276 = v275;
  swift_release(v269);
  sub_1000E4458(v255, v257, v261);
  swift_bridgeObjectRelease(v259, v277, v278, v279, v280, v281, v282, v283);
  v285 = static Color.white.getter(v284);
  v688 = (uint64_t *)v285;
  v286 = Text.foregroundStyle<A>(_:)(&v688, v271, v273, v265 & 1, v276, &type metadata for Color, &protocol witness table for Color);
  v539 = v287;
  v540 = v286;
  v538 = v288;
  v541 = v289;
  sub_1000E4458(v271, v273, v265 & 1);
  swift_release(v285);
  swift_bridgeObjectRelease(v276, v290, v291, v292, v293, v294, v295, v296);
  v537 = static Edge.Set.bottom.getter(v297);
  v298 = EdgeInsets.init(_all:)(5.0);
  v535 = v299;
  v536 = v298;
  v533 = v301;
  v534 = v300;
  v302 = objc_msgSend(v595, "mainBundle");
  v303 = String._bridgeToObjectiveC()();
  v304 = objc_msgSend(v302, "localizedStringForKey:value:table:", v303, 0, 0);

  v305 = static String._unconditionallyBridgeFromObjectiveC(_:)(v304);
  v307 = v306;

  v688 = (uint64_t *)v305;
  v689 = v307;
  v308 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v310 = v309;
  v312 = v311;
  v314 = v313 & 1;
  v316 = static Font.body.getter(v315);
  v318 = Text.font(_:)(v316, v308, v310, v314, v312, v317);
  v320 = v319;
  LOBYTE(v265) = v321;
  v323 = v322;
  swift_release(v316);
  sub_1000E4458(v308, v310, v314);
  swift_bridgeObjectRelease(v312, v324, v325, v326, v327, v328, v329, v330);
  LODWORD(v688) = static HierarchicalShapeStyle.secondary.getter(v331);
  v332 = Text.foregroundStyle<A>(_:)(&v688, v318, v320, v265 & 1, v323, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v530 = v333;
  v531 = v332;
  v529 = v334;
  v532 = v335;
  sub_1000E4458(v318, v320, v265 & 1);
  swift_bridgeObjectRelease(v323, v336, v337, v338, v339, v340, v341, v342);
  v528 = static Edge.Set.bottom.getter(v343);
  v344 = EdgeInsets.init(_all:)(20.0);
  v346 = v345;
  v348 = v347;
  v350 = v349;
  v351 = objc_msgSend(v595, "mainBundle");
  v352 = String._bridgeToObjectiveC()();
  v353 = objc_msgSend(v351, "localizedStringForKey:value:table:", v352, 0, 0);

  v354 = static String._unconditionallyBridgeFromObjectiveC(_:)(v353);
  v356 = v355;

  v688 = (uint64_t *)v354;
  v689 = v356;
  v357 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v359 = v358;
  v361 = v360;
  v363 = v362 & 1;
  v365 = static Font.body.getter(v364);
  v366 = v592;
  v367 = v593;
  ((void (*)(char *, _QWORD, uint64_t))v591)(v592, v590, v593);
  v368 = Font.leading(_:)(v366, v365);
  v369 = swift_release(v365);
  v370 = ((uint64_t (*)(char *, uint64_t, __n128))v589)(v366, v367, v369);
  static Font.Weight.semibold.getter(v370);
  v371 = Font.weight(_:)(v368);
  v372 = swift_release(v368);
  v373 = Text.font(_:)(v371, v357, v359, v363, v361, v372);
  v375 = v374;
  LOBYTE(v368) = v376;
  v378 = v377;
  swift_release(v371);
  sub_1000E4458(v357, v359, v363);
  swift_bridgeObjectRelease(v361, v379, v380, v381, v382, v383, v384, v385);
  v387 = static Color.white.getter(v386);
  v688 = (uint64_t *)v387;
  v388 = Text.foregroundStyle<A>(_:)(&v688, v373, v375, v368 & 1, v378, &type metadata for Color, &protocol witness table for Color);
  v591 = v389;
  v592 = (char *)v388;
  v590 = v390;
  v593 = v391;
  sub_1000E4458(v373, v375, v368 & 1);
  swift_release(v387);
  swift_bridgeObjectRelease(v378, v392, v393, v394, v395, v396, v397, v398);
  LODWORD(v589) = static Edge.Set.bottom.getter(v399);
  v400 = EdgeInsets.init(_all:)(5.0);
  v402 = v401;
  v404 = v403;
  v406 = v405;
  v407 = objc_msgSend(v595, "mainBundle");
  v408 = String._bridgeToObjectiveC()();
  v409 = objc_msgSend(v407, "localizedStringForKey:value:table:", v408, 0, 0);

  v410 = static String._unconditionallyBridgeFromObjectiveC(_:)(v409);
  v412 = v411;

  v688 = (uint64_t *)v410;
  v689 = v412;
  v413 = Text.init<A>(_:)(&v688, &type metadata for String, v594);
  v415 = v414;
  v417 = v416;
  v419 = v418 & 1;
  v421 = static Font.body.getter(v420);
  v423 = Text.font(_:)(v421, v413, v415, v419, v417, v422);
  v425 = v424;
  LOBYTE(v378) = v426;
  v428 = v427;
  swift_release(v421);
  LOBYTE(v421) = v378 & 1;
  sub_1000E4458(v413, v415, v419);
  swift_bridgeObjectRelease(v417, v429, v430, v431, v432, v433, v434, v435);
  LODWORD(v688) = static HierarchicalShapeStyle.secondary.getter(v436);
  v437 = Text.foregroundStyle<A>(_:)(&v688, v423, v425, v378 & 1, v428, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v439 = v438;
  LOBYTE(v415) = v440;
  v442 = v441;
  sub_1000E4458(v423, v425, v421);
  swift_bridgeObjectRelease(v428, v443, v444, v445, v446, v447, v448, v449);
  LOBYTE(v413) = static Edge.Set.bottom.getter(v450);
  v451 = EdgeInsets.init(_all:)(20.0);
  v683 = v581;
  v684 = v580;
  v685 = v579;
  v686 = v578;
  v673 = v572;
  v674 = v571;
  v675 = v570;
  v676 = v569;
  v678 = v585;
  v679 = v584;
  v681 = v583;
  v682 = v582;
  v668 = v576;
  v669 = v575;
  v671 = v574;
  v672 = v573;
  v658 = v563;
  v659 = v562;
  v661 = v561;
  v662 = v560;
  v648 = v552;
  v649 = v551;
  v680 = v586 & 1;
  v687 = 0;
  v670 = v577 & 1;
  v677 = 0;
  v688 = &v678;
  v689 = &v668;
  v660 = v568 & 1;
  v663 = v567;
  v664 = v566;
  v665 = v565;
  v666 = v564;
  v667 = 0;
  v650 = v558 & 1;
  v651 = v559;
  v652 = v557;
  v653 = v556;
  v654 = v555;
  v655 = v554;
  v656 = v553;
  v657 = 0;
  v690 = &v658;
  v691 = &v648;
  v638 = v549;
  v639 = v548;
  v640 = v547 & 1;
  v641 = v550;
  v642 = v546;
  v643 = v545;
  v644 = v544;
  v645 = v543;
  v646 = v542;
  v647 = 0;
  v628 = v540;
  v629 = v539;
  v630 = v538 & 1;
  v631 = v541;
  v632 = v537;
  v633 = v536;
  v634 = v535;
  v635 = v534;
  v636 = v533;
  v637 = 0;
  v692 = &v638;
  v693 = &v628;
  v618 = v531;
  v619 = v530;
  v620 = v529 & 1;
  v621 = v532;
  v622 = v528;
  v623 = v344;
  v624 = v346;
  v625 = v348;
  v626 = v350;
  v627 = 0;
  v608 = v592;
  v609 = v591;
  v610 = v590 & 1;
  v611 = (CHWorkoutDetailHeartRateTableViewCell *)v593;
  v612 = v589;
  v613 = v400;
  v614 = v402;
  v615 = v404;
  v616 = v406;
  v617 = 0;
  v694 = &v618;
  v695 = (uint64_t *)&v608;
  v598 = v437;
  v599 = v439;
  v600 = v415 & 1;
  v601 = v442;
  v602 = v413;
  v603 = v451;
  v604 = v452;
  v605 = v453;
  v606 = v454;
  v607 = 0;
  v596 = 0;
  v597 = 1;
  v696 = &v598;
  v697 = &v596;
  sub_100303A0C((uint64_t)&v688, v587);
  v455 = v601;
  sub_1000E4458(v598, v599, v600);
  swift_bridgeObjectRelease(v455, v456, v457, v458, v459, v460, v461, v462);
  v463 = v611;
  sub_1000E4458((uint64_t)v608, (uint64_t)v609, v610);
  swift_bridgeObjectRelease(v463, v464, v465, v466, v467, v468, v469, v470);
  v471 = v621;
  sub_1000E4458(v618, v619, v620);
  swift_bridgeObjectRelease(v471, v472, v473, v474, v475, v476, v477, v478);
  v479 = v631;
  sub_1000E4458(v628, v629, v630);
  swift_bridgeObjectRelease(v479, v480, v481, v482, v483, v484, v485, v486);
  v487 = v641;
  sub_1000E4458(v638, v639, v640);
  swift_bridgeObjectRelease(v487, v488, v489, v490, v491, v492, v493, v494);
  v495 = v651;
  sub_1000E4458(v648, v649, v650);
  swift_bridgeObjectRelease(v495, v496, v497, v498, v499, v500, v501, v502);
  v503 = v661;
  sub_1000E4458(v658, v659, v660);
  swift_bridgeObjectRelease(v503, v504, v505, v506, v507, v508, v509, v510);
  v511 = v671;
  sub_1000E4458(v668, v669, v670);
  swift_bridgeObjectRelease(v511, v512, v513, v514, v515, v516, v517, v518);
  v519 = v681;
  sub_1000E4458(v678, v679, v680);
  swift_bridgeObjectRelease(v519, v520, v521, v522, v523, v524, v525, v526);
}

uint64_t sub_10054F410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100047110(&qword_1008343E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter(v7);
  v15 = a1;
  v10 = sub_100047110(&qword_100834408);
  v11 = sub_100460A9C();
  ToolbarItem<>.init(placement:content:)(v4, sub_10054FA54, v14, v10, v11);
  v12 = sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10054F540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t InfoPaneDetailView;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = sub_100047110(&qword_10082CC08);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  InfoPaneDetailView = type metadata accessor for TrainingLoadInfoPaneDetailView(0);
  v7 = *(_QWORD *)(InfoPaneDetailView - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(InfoPaneDetailView);
  v9 = sub_100047110(&qword_100834430);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100834420);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10054FA5C(a1, (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1007A8B18, v17 + v8, v16 | 7);
  sub_10054FB3C((uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  Button.init(action:label:)(sub_10054FB80, v18, sub_10045BB8C, 0, &type metadata for Image, &protocol witness table for Image);
  static SymbolRenderingMode.hierarchical.getter(v19);
  v20 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  KeyPath = swift_getKeyPath(&unk_1006450A0);
  v22 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  v23 = sub_100047110(&qword_10082CC18);
  sub_100021CC0((uint64_t)v5, (uint64_t)v22 + *(int *)(v23 + 28), &qword_10082CC08);
  *v22 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  sub_10001BE90((uint64_t)v5, &qword_10082CC08);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v25 = Color.init(_:)(v24);
  v26 = v29;
  sub_100021CC0((uint64_t)v15, v29, &qword_100834420);
  *(_QWORD *)(v26 + *(int *)(sub_100047110(&qword_100834408) + 36)) = v25;
  return sub_10001BE90((uint64_t)v15, &qword_100834420);
}

uint64_t sub_10054F7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;

  v0 = sub_100047110(&qword_100839D00);
  v1 = sub_100007050(&qword_100839D08);
  v2 = sub_100007050(&qword_100839D10);
  v3 = sub_100007050(&qword_100839D18);
  v4 = sub_100007050(&qword_100834370);
  v5 = sub_100028384(&qword_100839D20, &qword_100839D18, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v13 = sub_100007050(&qword_1008343E8);
  v14 = (void *)sub_100028384(&qword_1008343F0, &qword_1008343E8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v13 = v3;
  v14 = (void *)v4;
  v15 = v5;
  v16 = OpaqueTypeConformance2;
  v7 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v8 = sub_100038CA0();
  v13 = v2;
  v14 = &type metadata for String;
  v15 = v7;
  v16 = v8;
  v9 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v13 = v1;
  v14 = (void *)v9;
  v10 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  return NavigationStack.init<>(root:)(sub_10054F954, &v12, v0, v10);
}

uint64_t sub_10054F954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10054DC28(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10054F95C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839D30;
  if (!qword_100839D30)
  {
    v1 = sub_100007050(&qword_100839D28);
    sub_10054F9C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839D30);
  }
  return result;
}

unint64_t sub_10054F9C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100839D38;
  if (!qword_100839D38)
  {
    v1 = sub_100007050(&qword_100839D40);
    sub_100028384(&qword_100839D48, &qword_100839D50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100839D38);
  }
  return result;
}

uint64_t sub_10054FA4C()
{
  uint64_t v0;

  return sub_10054F410(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10054FA54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10054F540(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10054FA5C(uint64_t a1, uint64_t a2)
{
  uint64_t InfoPaneDetailView;

  InfoPaneDetailView = type metadata accessor for TrainingLoadInfoPaneDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(InfoPaneDetailView - 8) + 16))(a2, a1, InfoPaneDetailView);
  return a2;
}

uint64_t sub_10054FAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for TrainingLoadInfoPaneDetailView(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_100047110((uint64_t *)&unk_100832400);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + v3));
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10054FB3C(uint64_t a1, uint64_t a2)
{
  uint64_t InfoPaneDetailView;

  InfoPaneDetailView = type metadata accessor for TrainingLoadInfoPaneDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(InfoPaneDetailView - 8) + 32))(a2, a1, InfoPaneDetailView);
  return a2;
}

uint64_t sub_10054FB80()
{
  type metadata accessor for TrainingLoadInfoPaneDetailView(0);
  return sub_100310E60();
}

uint64_t sub_10054FBB4()
{
  return sub_100028384(&qword_100839D58, &qword_100839D60, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
}

uint64_t sub_10054FBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000EB3F4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CardType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000EB3F4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1000EB41C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CardType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1000EB41C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10054FD50(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10054FD68(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CardType()
{
  return &type metadata for CardType;
}

uint64_t sub_10054FD90(uint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, _QWORD, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  unsigned int *v15;
  char v17;
  uint64_t v18;

  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v12(v11, enum case for DynamicTypeSize.large(_:), v8);
  sub_10014E224();
  v13 = dispatch thunk of static Comparable.< infix(_:_:)(v11, a1, v8);
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  if ((v13 & 1) == 0)
    return 0;
  if (a4 - 1 >= 2)
  {
    if (!a4)
    {
LABEL_6:
      v15 = (unsigned int *)&enum case for DynamicTypeSize.xxxLarge(_:);
      goto LABEL_10;
    }
    if (a4 != 3)
      return 1;
    if (__PAIR128__((unint64_t)(a2 >= 2) + a3 - 1, a2 - 2) < 2)
      goto LABEL_6;
    if (a2 ^ 6 | a3)
      return 1;
  }
  v15 = (unsigned int *)&enum case for DynamicTypeSize.accessibility1(_:);
LABEL_10:
  v12(v11, *v15, v8);
  v17 = static DynamicTypeSize.< infix(_:_:)(a1, v11);
  v14(v11, v8);
  if ((v17 & 1) != 0)
    return 1;
  else
    return 2;
}

uint64_t sub_10054FEFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10054FF20 + 4 * byte_1006450D0[a3]))(8);
}

uint64_t sub_10054FF20@<X0>(char a1@<W8>)
{
  return byte_100645C46[a1];
}

uint64_t sub_10054FF34()
{
  return 7;
}

unint64_t sub_10054FF3C@<X0>(char a1@<W8>)
{
  return 0x704050809030600uLL >> (8 * a1);
}

void sub_10054FF58(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_10054FF8C()
{
  char v0;
  uint64_t v1;
  uint64_t result;

  v1 = sub_100047110(&qword_100839EB8);
  result = swift_allocObject(v1, 34, 7);
  *(_OWORD *)(result + 16) = xmmword_100620BC0;
  *(_BYTE *)(result + 32) = v0;
  *(_BYTE *)(result + 33) = 45;
  return result;
}

void sub_10054FFE4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_100550014()
{
  char v0;
  Swift::String v1;
  char v3;
  _QWORD v4[6];

  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  v1._countAndFlagsBits = 0x5F63697274656DLL;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  v3 = v0;
  ((void (*)(char *, _QWORD *, ValueMetadata *, void *, void *))_print_unlocked<A, B>(_:_:))(&v3, v4, &type metadata for ActivityDashboardMetric, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v4[0];
}

uint64_t sub_1005500CC()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_1005500BC + 4 * byte_1006450DC[v0]))(0x73676E6972, 0xE500000000000000);
}

void sub_1005500F4()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_100550104()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_10055011C()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_10055012C()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_100550148()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_100550168()
{
  JUMPOUT(0x1005500BCLL);
}

void sub_100550184()
{
  JUMPOUT(0x1005500BCLL);
}

uint64_t sub_100550198(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1005501C8 + 4 * byte_1006450E4[a1]))(0x73676E6972, 0xE500000000000000);
}

uint64_t sub_1005501C8()
{
  return 1684107116;
}

uint64_t sub_1005501D8()
{
  return 0x79726F74736968;
}

uint64_t sub_1005501F0()
{
  return 0x63697274656DLL;
}

uint64_t sub_100550204()
{
  return 0x6472617761;
}

uint64_t sub_100550214()
{
  return 0x646E65697266;
}

unint64_t sub_100550228()
{
  return 0xD000000000000010;
}

unint64_t sub_100550244()
{
  return 0xD000000000000011;
}

uint64_t sub_100550264()
{
  return 0x73646E657274;
}

uint64_t sub_100550278()
{
  return 0x646E657274;
}

uint64_t sub_100550288()
{
  return 0x54676F6C61746163;
}

void sub_1005502A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v53 = a4;
  v54 = a2;
  v49 = a3;
  v5 = sub_100047110(&qword_100839E48);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  __chkstk_darwin(v5);
  v50 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100839E50);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v41 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100839E58);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v38 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100047110(&qword_100839E60);
  v36 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v35 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100047110(&qword_100839E68);
  v33 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v32 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100839E70);
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  __chkstk_darwin(v13);
  v46 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_100839E78);
  v30 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v29 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100839E80);
  v44 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  __chkstk_darwin(v16);
  v28 = sub_100047110(&qword_100839E88);
  v27 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v26 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_100839E90);
  v24[1] = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v18 = sub_100047110(&qword_100839E98);
  __chkstk_darwin(v18);
  v57 = sub_100047110(&qword_100839EA0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  sub_100016804(a1, v21);
  v23 = sub_1005525EC();
  v56 = v20;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CardType.CodingKeys, &type metadata for CardType.CodingKeys, v23, v21, v22);
  __asm { BR              X10 }
}

uint64_t sub_100550674()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 - 89) = 3;
  v2 = sub_100552850();
  v4 = *(_QWORD *)(v1 - 120);
  v3 = *(_QWORD *)(v1 - 112);
  ((void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t))KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:))(&type metadata for CardType.MetricCodingKeys, v1 - 89, v3, &type metadata for CardType.MetricCodingKeys, v2);
  *(_BYTE *)(v1 - 90) = *(_QWORD *)(v1 - 136);
  v5 = sub_1005529E8();
  v6 = *(_QWORD *)(v1 - 208);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v1 - 90, v7, v6, &type metadata for ActivityDashboardMetric, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8))(v0, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v4, v3);
}

Swift::Int sub_100550A94(uint64_t a1, uint64_t a2, char a3)
{
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v17[9];

  Hasher.init(_seed:)(v17, 0);
  sub_10054FFE4(a1, a2, a3);
  v7 = v6;
  String.hash(into:)(v17, v8, v6);
  swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
  if (!a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)(v17, a1, a2);
  }
  return Hasher._finalize()();
}

uint64_t sub_100550B44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10055280C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550B6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10055280C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550B94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005526FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550BBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005526FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550BE4()
{
  unsigned __int8 *v0;

  return sub_100550198(*v0);
}

uint64_t sub_100550BEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100551524(a1, a2);
  *a3 = result;
  return result;
}

void sub_100550C10(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_100550C1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005525EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550C44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005525EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550C6C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_100550C98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552740();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550CC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552740();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550CF0()
{
  return 1684632949;
}

uint64_t sub_100550D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1684632949, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100550D84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005527C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550DAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005527C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550DD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552784();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550DFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552784();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550E24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005528D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550E4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005528D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550E74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10055291C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550E9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10055291C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550EC4()
{
  return 12383;
}

uint64_t sub_100550ED4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552850();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550EFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552850();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550F24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552960();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100550F4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552960();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100550F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100550FF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552630();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100551018(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100552630();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100551040(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005526B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100551068(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005526B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_100551090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_100551958(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

void sub_1005510BC(_QWORD *a1)
{
  uint64_t v1;

  sub_1005502A4(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

Swift::Int sub_1005510D8()
{
  uint64_t v0;

  return sub_100550A94(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_1005510E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 16);
  sub_10054FFE4(*(_QWORD *)v1, v4, *(_BYTE *)(v1 + 16));
  v7 = v6;
  String.hash(into:)(a1, v8, v6);
  swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
  if (!v5 || v5 == 2)
  {
    Hasher._combine(_:)(v3);
  }
  else if (v5 == 1)
  {
    String.hash(into:)(a1, v3, v4);
  }
}

Swift::Int sub_100551188(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v16[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  Hasher.init(_seed:)(v16, a1);
  sub_10054FFE4(v2, v3, v4);
  v6 = v5;
  String.hash(into:)(v16, v7, v5);
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  if (!v4 || v4 == 2)
  {
    Hasher._combine(_:)(v2);
  }
  else if (v4 == 1)
  {
    String.hash(into:)(v16, v2, v3);
  }
  return Hasher._finalize()();
}

uint64_t sub_10055122C(uint64_t a1)
{
  return sub_100551290(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

unint64_t sub_10055124C()
{
  unint64_t result;

  result = qword_100839D68;
  if (!qword_100839D68)
  {
    result = swift_getWitnessTable(&unk_100645148, &type metadata for CardType);
    atomic_store(result, (unint64_t *)&qword_100839D68);
  }
  return result;
}

uint64_t sub_100551290(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1005512AC + 4 * byte_1006450FB[a3]))();
}

BOOL sub_1005512AC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return !a6 && a4 == a1;
}

_UNKNOWN **sub_100551424()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD v12[5];

  v12[3] = &type metadata for FitnessFeatures;
  v12[4] = sub_10004F7EC();
  LOBYTE(v12[0]) = 4;
  v0 = isFeatureEnabled(_:)(v12);
  v1 = _s10FitnessApp24HistoryViewActionContextVwxx_0(v12);
  if ((v0 & 1) == 0)
    return &off_10077B810;
  v2 = &off_10077B810;
  if ((FIIsTinkerVegaOrFitnessJunior(v1) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(&off_10077B810) & 1) == 0)
      v2 = sub_10013FAA8(0, 56, 1, &off_10077B810);
    v3 = v2[2];
    v4 = v2[3];
    v5 = v3 + 1;
    if (v3 >= v4 >> 1)
    {
      v11 = v3 + 1;
      v8 = v2;
      v9 = v2[2];
      v10 = sub_10013FAA8((_QWORD *)(v4 > 1), v3 + 1, 1, v8);
      v3 = v9;
      v5 = v11;
      v2 = v10;
    }
    v2[2] = v5;
    v6 = &v2[3 * v3];
    *((_OWORD *)v6 + 2) = xmmword_100623580;
    *((_BYTE *)v6 + 48) = 3;
  }
  return (_UNKNOWN **)v2;
}

uint64_t sub_100551524(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 == 0x73676E6972 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73676E6972, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1684107116 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684107116, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x79726F74736968 && a2 == 0xE700000000000000)
  {
    v8 = 0xE700000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x79726F74736968, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x63697274656DLL && a2 == 0xE600000000000000)
  {
    v9 = 0xE600000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x63697274656DLL, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x6472617761 && a2 == 0xE500000000000000)
  {
    v10 = 0xE500000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472617761, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x646E65697266 && a2 == 0xE600000000000000)
  {
    v11 = 0xE600000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646E65697266, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0xD000000000000010)
  {
    v12 = 0x80000001006884F0;
    if (a2 == 0x80000001006884F0)
      goto LABEL_43;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001006884F0, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x80000001006884D0)
  {
    v13 = 0x80000001006884D0;
LABEL_49:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001006884D0, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_49;
  }
  if (a1 == 0x54676F6C61746163 && a2 == 0xEA00000000007069)
  {
    v14 = 0xEA00000000007069;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x54676F6C61746163, 0xEA00000000007069, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_55;
  }
  if (a1 == 0x73646E657274 && a2 == 0xE600000000000000)
  {
    v15 = 0xE600000000000000;
LABEL_61:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73646E657274, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_61;
  }
  if (a1 == 0x646E657274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 10;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646E657274, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

_QWORD *sub_100551958(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  _QWORD v40[5];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;

  v54 = sub_100047110(&qword_100839D70);
  v57 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v63 = (char *)v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100047110(&qword_100839D78);
  v53 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v64 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100047110(&qword_100839D80);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v68 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100047110(&qword_100839D88);
  v49 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v67 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100047110(&qword_100839D90);
  v47 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v62 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100047110(&qword_100839D98);
  v56 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100047110(&qword_100839DA0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v60 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100047110(&qword_100839DA8);
  v55 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v61 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100047110(&qword_100839DB0);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v59 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100047110(&qword_100839DB8);
  v40[4] = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v58 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100839DC0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100839DC8);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  v70 = a1;
  v22 = sub_100016804(a1, v20);
  v23 = sub_1005525EC();
  v24 = v71;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CardType.CodingKeys, &type metadata for CardType.CodingKeys, v23, v20, v21);
  if (!v24)
  {
    v40[2] = v15;
    v40[0] = v13;
    v40[1] = v12;
    v40[3] = 0;
    v71 = v17;
    v25 = KeyedDecodingContainer.allKeys.getter(v16);
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)v25;
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X10 }
    v27 = type metadata accessor for DecodingError(0);
    swift_allocError(v27, &protocol witness table for DecodingError, 0, 0);
    v29 = v28;
    sub_100047110(&qword_100839DD8);
    *v29 = &type metadata for CardType;
    v22 = v19;
    v30 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v30, 0xD00000000000002BLL, 0x80000001006A57C0, 0);
    v31 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow(v31);
    swift_bridgeObjectRelease(v26, v32, v33, v34, v35, v36, v37, v38);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v16);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v70);
  return v22;
}

void sub_1005523E4()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  *(_BYTE *)(v3 - 65) = 10;
  v4 = sub_100552630();
  v5 = *(_QWORD *)(v3 - 168);
  v6 = *(_QWORD *)(v3 - 360);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CardType.TrendCodingKeys, v3 - 65, v0, &type metadata for CardType.TrendCodingKeys, v4);
  if (v6)
  {
    swift_bridgeObjectRelease(v1, v7, v8, v9, v10, v11, v12, v13);
    JUMPOUT(0x1005523A8);
  }
  v14 = sub_100552674();
  v15 = *(_QWORD *)(v3 - 240);
  KeyedDecodingContainer.decode<A>(_:forKey:)((_QWORD *)(v3 - 66), &type metadata for ActivityTrendType, v16, v15, &type metadata for ActivityTrendType, v14);
  v17 = *(_QWORD *)(v3 - 104);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(v5, v15);
  swift_bridgeObjectRelease(v1, v18, v19, v20, v21, v22, v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v0);
  JUMPOUT(0x1005525E0);
}

unint64_t sub_1005525EC()
{
  unint64_t result;

  result = qword_100839DD0;
  if (!qword_100839DD0)
  {
    result = swift_getWitnessTable(&unk_100645BF4, &type metadata for CardType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839DD0);
  }
  return result;
}

unint64_t sub_100552630()
{
  unint64_t result;

  result = qword_100839DE0;
  if (!qword_100839DE0)
  {
    result = swift_getWitnessTable(&unk_100645BA4, &type metadata for CardType.TrendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839DE0);
  }
  return result;
}

unint64_t sub_100552674()
{
  unint64_t result;

  result = qword_100839DE8;
  if (!qword_100839DE8)
  {
    result = swift_getWitnessTable(&unk_100641CCC, &type metadata for ActivityTrendType);
    atomic_store(result, (unint64_t *)&qword_100839DE8);
  }
  return result;
}

unint64_t sub_1005526B8()
{
  unint64_t result;

  result = qword_100839DF0;
  if (!qword_100839DF0)
  {
    result = swift_getWitnessTable(&unk_100645B54, &type metadata for CardType.TrendsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839DF0);
  }
  return result;
}

unint64_t sub_1005526FC()
{
  unint64_t result;

  result = qword_100839DF8;
  if (!qword_100839DF8)
  {
    result = swift_getWitnessTable(&unk_100645B04, &type metadata for CardType.CatalogTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839DF8);
  }
  return result;
}

unint64_t sub_100552740()
{
  unint64_t result;

  result = qword_100839E00;
  if (!qword_100839E00)
  {
    result = swift_getWitnessTable(&unk_100645AB4, &type metadata for CardType.FitnessPlusUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E00);
  }
  return result;
}

unint64_t sub_100552784()
{
  unint64_t result;

  result = qword_100839E08;
  if (!qword_100839E08)
  {
    result = swift_getWitnessTable(&unk_100645A64, &type metadata for CardType.FriendsHighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E08);
  }
  return result;
}

unint64_t sub_1005527C8()
{
  unint64_t result;

  result = qword_100839E10;
  if (!qword_100839E10)
  {
    result = swift_getWitnessTable(&unk_100645A14, &type metadata for CardType.FriendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E10);
  }
  return result;
}

unint64_t sub_10055280C()
{
  unint64_t result;

  result = qword_100839E18;
  if (!qword_100839E18)
  {
    result = swift_getWitnessTable(&unk_1006459C4, &type metadata for CardType.AwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E18);
  }
  return result;
}

unint64_t sub_100552850()
{
  unint64_t result;

  result = qword_100839E20;
  if (!qword_100839E20)
  {
    result = swift_getWitnessTable(&unk_100645974, &type metadata for CardType.MetricCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E20);
  }
  return result;
}

unint64_t sub_100552894()
{
  unint64_t result;

  result = qword_100839E28;
  if (!qword_100839E28)
  {
    result = swift_getWitnessTable(&unk_10064A018, &type metadata for ActivityDashboardMetric);
    atomic_store(result, (unint64_t *)&qword_100839E28);
  }
  return result;
}

unint64_t sub_1005528D8()
{
  unint64_t result;

  result = qword_100839E30;
  if (!qword_100839E30)
  {
    result = swift_getWitnessTable(&unk_100645924, &type metadata for CardType.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E30);
  }
  return result;
}

unint64_t sub_10055291C()
{
  unint64_t result;

  result = qword_100839E38;
  if (!qword_100839E38)
  {
    result = swift_getWitnessTable(&unk_1006458D4, &type metadata for CardType.LoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E38);
  }
  return result;
}

unint64_t sub_100552960()
{
  unint64_t result;

  result = qword_100839E40;
  if (!qword_100839E40)
  {
    result = swift_getWitnessTable(&unk_100645884, &type metadata for CardType.RingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839E40);
  }
  return result;
}

unint64_t sub_1005529A4()
{
  unint64_t result;

  result = qword_100839EA8;
  if (!qword_100839EA8)
  {
    result = swift_getWitnessTable(&unk_100641CA4, &type metadata for ActivityTrendType);
    atomic_store(result, (unint64_t *)&qword_100839EA8);
  }
  return result;
}

unint64_t sub_1005529E8()
{
  unint64_t result;

  result = qword_100839EB0;
  if (!qword_100839EB0)
  {
    result = swift_getWitnessTable(&unk_100649FF0, &type metadata for ActivityDashboardMetric);
    atomic_store(result, (unint64_t *)&qword_100839EB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_100552A78 + 4 * byte_100645123[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100552AAC + 4 * byte_10064511E[v4]))();
}

uint64_t sub_100552AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100552AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100552ABCLL);
  return result;
}

uint64_t sub_100552AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100552AD0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_100552AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100552ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardType.CodingKeys()
{
  return &type metadata for CardType.CodingKeys;
}

ValueMetadata *type metadata accessor for CardType.RingsCodingKeys()
{
  return &type metadata for CardType.RingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.LoadCodingKeys()
{
  return &type metadata for CardType.LoadCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.HistoryCodingKeys()
{
  return &type metadata for CardType.HistoryCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.MetricCodingKeys()
{
  return &type metadata for CardType.MetricCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.AwardCodingKeys()
{
  return &type metadata for CardType.AwardCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.FriendCodingKeys()
{
  return &type metadata for CardType.FriendCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.FriendsHighlightCodingKeys()
{
  return &type metadata for CardType.FriendsHighlightCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.FitnessPlusUpNextCodingKeys()
{
  return &type metadata for CardType.FitnessPlusUpNextCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.CatalogTipCodingKeys()
{
  return &type metadata for CardType.CatalogTipCodingKeys;
}

ValueMetadata *type metadata accessor for CardType.TrendsCodingKeys()
{
  return &type metadata for CardType.TrendsCodingKeys;
}

uint64_t _s10FitnessApp8CardTypeO16MetricCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100552BDC + 4 * byte_100645128[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100552BFC + 4 * byte_10064512D[v4]))();
}

_BYTE *sub_100552BDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100552BFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100552C04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100552C0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100552C14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100552C1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardType.TrendCodingKeys()
{
  return &type metadata for CardType.TrendCodingKeys;
}

unint64_t sub_100552C3C()
{
  unint64_t result;

  result = qword_100839EC0;
  if (!qword_100839EC0)
  {
    result = swift_getWitnessTable(&unk_1006453B4, &type metadata for CardType.TrendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EC0);
  }
  return result;
}

unint64_t sub_100552C84()
{
  unint64_t result;

  result = qword_100839EC8;
  if (!qword_100839EC8)
  {
    result = swift_getWitnessTable(&unk_1006455AC, &type metadata for CardType.FriendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EC8);
  }
  return result;
}

unint64_t sub_100552CCC()
{
  unint64_t result;

  result = qword_100839ED0;
  if (!qword_100839ED0)
  {
    result = swift_getWitnessTable(&unk_1006456B4, &type metadata for CardType.MetricCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839ED0);
  }
  return result;
}

unint64_t sub_100552D14()
{
  unint64_t result;

  result = qword_100839ED8;
  if (!qword_100839ED8)
  {
    result = swift_getWitnessTable(&unk_10064585C, &type metadata for CardType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839ED8);
  }
  return result;
}

unint64_t sub_100552D5C()
{
  unint64_t result;

  result = qword_100839EE0;
  if (!qword_100839EE0)
  {
    result = swift_getWitnessTable(&unk_10064577C, &type metadata for CardType.RingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EE0);
  }
  return result;
}

unint64_t sub_100552DA4()
{
  unint64_t result;

  result = qword_100839EE8;
  if (!qword_100839EE8)
  {
    result = swift_getWitnessTable(&unk_1006457A4, &type metadata for CardType.RingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EE8);
  }
  return result;
}

unint64_t sub_100552DEC()
{
  unint64_t result;

  result = qword_100839EF0;
  if (!qword_100839EF0)
  {
    result = swift_getWitnessTable(&unk_10064572C, &type metadata for CardType.LoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EF0);
  }
  return result;
}

unint64_t sub_100552E34()
{
  unint64_t result;

  result = qword_100839EF8;
  if (!qword_100839EF8)
  {
    result = swift_getWitnessTable(&unk_100645754, &type metadata for CardType.LoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839EF8);
  }
  return result;
}

unint64_t sub_100552E7C()
{
  unint64_t result;

  result = qword_100839F00;
  if (!qword_100839F00)
  {
    result = swift_getWitnessTable(&unk_1006456DC, &type metadata for CardType.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F00);
  }
  return result;
}

unint64_t sub_100552EC4()
{
  unint64_t result;

  result = qword_100839F08;
  if (!qword_100839F08)
  {
    result = swift_getWitnessTable(&unk_100645704, &type metadata for CardType.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F08);
  }
  return result;
}

unint64_t sub_100552F0C()
{
  unint64_t result;

  result = qword_100839F10;
  if (!qword_100839F10)
  {
    result = swift_getWitnessTable(&unk_100645624, &type metadata for CardType.MetricCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F10);
  }
  return result;
}

unint64_t sub_100552F54()
{
  unint64_t result;

  result = qword_100839F18;
  if (!qword_100839F18)
  {
    result = swift_getWitnessTable(&unk_10064564C, &type metadata for CardType.MetricCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F18);
  }
  return result;
}

unint64_t sub_100552F9C()
{
  unint64_t result;

  result = qword_100839F20;
  if (!qword_100839F20)
  {
    result = swift_getWitnessTable(&unk_1006455D4, &type metadata for CardType.AwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F20);
  }
  return result;
}

unint64_t sub_100552FE4()
{
  unint64_t result;

  result = qword_100839F28;
  if (!qword_100839F28)
  {
    result = swift_getWitnessTable(&unk_1006455FC, &type metadata for CardType.AwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F28);
  }
  return result;
}

unint64_t sub_10055302C()
{
  unint64_t result;

  result = qword_100839F30;
  if (!qword_100839F30)
  {
    result = swift_getWitnessTable(&unk_10064551C, &type metadata for CardType.FriendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F30);
  }
  return result;
}

unint64_t sub_100553074()
{
  unint64_t result;

  result = qword_100839F38;
  if (!qword_100839F38)
  {
    result = swift_getWitnessTable(&unk_100645544, &type metadata for CardType.FriendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F38);
  }
  return result;
}

unint64_t sub_1005530BC()
{
  unint64_t result;

  result = qword_100839F40;
  if (!qword_100839F40)
  {
    result = swift_getWitnessTable(&unk_1006454CC, &type metadata for CardType.FriendsHighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F40);
  }
  return result;
}

unint64_t sub_100553104()
{
  unint64_t result;

  result = qword_100839F48;
  if (!qword_100839F48)
  {
    result = swift_getWitnessTable(&unk_1006454F4, &type metadata for CardType.FriendsHighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F48);
  }
  return result;
}

unint64_t sub_10055314C()
{
  unint64_t result;

  result = qword_100839F50;
  if (!qword_100839F50)
  {
    result = swift_getWitnessTable(&unk_10064547C, &type metadata for CardType.FitnessPlusUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F50);
  }
  return result;
}

unint64_t sub_100553194()
{
  unint64_t result;

  result = qword_100839F58;
  if (!qword_100839F58)
  {
    result = swift_getWitnessTable(&unk_1006454A4, &type metadata for CardType.FitnessPlusUpNextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F58);
  }
  return result;
}

unint64_t sub_1005531DC()
{
  unint64_t result;

  result = qword_100839F60;
  if (!qword_100839F60)
  {
    result = swift_getWitnessTable(&unk_10064542C, &type metadata for CardType.CatalogTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F60);
  }
  return result;
}

unint64_t sub_100553224()
{
  unint64_t result;

  result = qword_100839F68;
  if (!qword_100839F68)
  {
    result = swift_getWitnessTable(&unk_100645454, &type metadata for CardType.CatalogTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F68);
  }
  return result;
}

unint64_t sub_10055326C()
{
  unint64_t result;

  result = qword_100839F70;
  if (!qword_100839F70)
  {
    result = swift_getWitnessTable(&unk_1006453DC, &type metadata for CardType.TrendsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F70);
  }
  return result;
}

unint64_t sub_1005532B4()
{
  unint64_t result;

  result = qword_100839F78;
  if (!qword_100839F78)
  {
    result = swift_getWitnessTable(&unk_100645404, &type metadata for CardType.TrendsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F78);
  }
  return result;
}

unint64_t sub_1005532FC()
{
  unint64_t result;

  result = qword_100839F80;
  if (!qword_100839F80)
  {
    result = swift_getWitnessTable(&unk_100645324, &type metadata for CardType.TrendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F80);
  }
  return result;
}

unint64_t sub_100553344()
{
  unint64_t result;

  result = qword_100839F88;
  if (!qword_100839F88)
  {
    result = swift_getWitnessTable(&unk_10064534C, &type metadata for CardType.TrendCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F88);
  }
  return result;
}

unint64_t sub_10055338C()
{
  unint64_t result;

  result = qword_100839F90;
  if (!qword_100839F90)
  {
    result = swift_getWitnessTable(&unk_1006457CC, &type metadata for CardType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F90);
  }
  return result;
}

unint64_t sub_1005533D4()
{
  unint64_t result;

  result = qword_100839F98;
  if (!qword_100839F98)
  {
    result = swift_getWitnessTable(&unk_1006457F4, &type metadata for CardType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100839F98);
  }
  return result;
}

uint64_t sub_100553420@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005547A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100553444(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100553450(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10004ED94();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100553478(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10004ED94();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005534A0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  const mach_header_64 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = 0x1000000000000;
  if (!v0[6])
    v1 = 0;
  v2 = 0x10000000000;
  if (!v0[5])
    v2 = 0;
  v3 = &_mh_execute_header;
  if (!v0[4])
    v3 = 0;
  v4 = 0x1000000;
  if (!v0[3])
    v4 = 0;
  v5 = 0x10000;
  if (!v0[2])
    v5 = 0;
  v6 = 256;
  if (!v0[1])
    v6 = 0;
  return sub_100018CD0(v6 | *v0 | v5 | v4 | (unint64_t)v3 | v2 | v1);
}

id sub_100553540(void *a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  unint64_t v8;
  char *v9;
  uint64x2_t v10;
  int16x8_t v11;
  id v12;
  os_log_type_t v13;
  NSObject *v14;
  id v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  const mach_header_64 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const mach_header_64 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *log;
  id v42;
  uint64_t v43;
  uint64_t v44;
  objc_super v45;

  ObjectType = swift_getObjectType(v1);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___CHOnboardingCoordinator_delegate], 0);
  *(_QWORD *)&v1[OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery] = 0;
  v4 = OBJC_IVAR___CHOnboardingCoordinator_queryLock;
  v5 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = v1;
  *(_QWORD *)&v1[v4] = UnfairLock.init()();
  *(_QWORD *)&v6[OBJC_IVAR___CHOnboardingCoordinator_notifyTokens] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR___CHOnboardingCoordinator_healthStore] = a1;
  v7 = a1;
  v8 = sub_100010FC0();
  v9 = &v6[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  *v9 = v8 & 1;
  v10 = (uint64x2_t)vdupq_n_s64(v8);
  v11 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_100645E60), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_100645E50));
  *(int8x8_t *)v11.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v11), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v9 + 1) = vmovn_s16(v11).u32[0];
  v9[5] = BYTE5(v8) & 1;
  v9[6] = BYTE6(v8) & 1;

  v45.receiver = v6;
  v45.super_class = (Class)type metadata accessor for OnboardingCoordinator();
  v12 = objc_msgSendSuper2(&v45, "init");
  v13 = static os_log_type_t.default.getter(v12);
  v14 = HKLogActivity;
  v15 = v12;
  if (os_log_type_enabled(v14, v13))
  {
    v16 = v15;
    log = v14;
    v42 = v7;
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(64, -1);
    v44 = v18;
    *(_DWORD *)v17 = 136315650;
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v21 = v20;
    v43 = sub_10003E8EC(v19, v20, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v17 + 4);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v17 + 12) = 2080;
    v22 = &v16[OBJC_IVAR___CHOnboardingCoordinator_criteria];
    v23 = 0x1000000000000;
    if (!v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6])
      v23 = 0;
    v24 = 0x10000000000;
    if (!v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5])
      v24 = 0;
    v25 = &_mh_execute_header;
    if (!v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4])
      v25 = 0;
    v26 = 0x1000000;
    if (!v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3])
      v26 = 0;
    v27 = 0x10000;
    if (!v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2])
      v27 = 0;
    if (v16[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1])
      v28 = 256;
    else
      v28 = 0;
    v29 = sub_100018CD0(v28 | *v22 | v27 | v26 | (unint64_t)v25 | v24 | v23);
    v31 = v30;
    v43 = sub_10003E8EC(v29, v30, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v17 + 14);

    swift_bridgeObjectRelease(v31);
    *(_WORD *)(v17 + 22) = 2048;
    v32 = 0x1000000000000;
    if (!v22[6])
      v32 = 0;
    v33 = 0x10000000000;
    if (!v22[5])
      v33 = 0;
    v34 = &_mh_execute_header;
    if (!v22[4])
      v34 = 0;
    v35 = 0x1000000;
    if (!v22[3])
      v35 = 0;
    v36 = 0x10000;
    if (!v22[2])
      v36 = 0;
    if (v22[1])
      v37 = 256;
    else
      v37 = 0;
    v38 = sub_10002A5B4(v37 | *v22 | v36 | v35 | (unint64_t)v34 | v33 | v32);

    v43 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v17 + 24);

    _os_log_impl((void *)&_mh_execute_header, log, v13, "%s initial criteria: %s phase %ld", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v39 = v17;
    v7 = v42;
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

  }
  sub_100005CE0();
  sub_10000BE70();

  return v15;
}

void sub_100553948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  const mach_header_64 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];

  v4 = a2 + 16;
  v5 = static os_log_type_t.default.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v24[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(a3, 0);
    v13 = v12;
    v23 = sub_10003E8EC(v11, v12, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v9 + 4);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s did receive HKStandalonePhoneFitnessModeDidUpdateNotification notification", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  swift_beginAccess(v4, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v15 = (char *)Strong;
    v16 = 0x1000000000000;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 6))
      v16 = 0;
    v17 = 0x10000000000;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 5))
      v17 = 0;
    v18 = &_mh_execute_header;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 4))
      v18 = 0;
    v19 = 0x1000000;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 3))
      v19 = 0;
    v20 = 0x10000;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 2))
      v20 = 0;
    v21 = 256;
    if (!*(_BYTE *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria + 1))
      v21 = 0;
    v22 = sub_10002A5B4(v21 | *(unsigned __int8 *)(Strong + OBJC_IVAR___CHOnboardingCoordinator_criteria) | v20 | v19 | (unint64_t)v18 | v17 | v16);
    if (!*(_QWORD *)&v15[OBJC_IVAR___CHOnboardingCoordinator_activityGoalsQuery] && v22 != 5)
      sub_100005CE0();

  }
}

id sub_100553B5C()
{
  char *v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v2;
  uint64_t i;
  int v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  objc_super v13;

  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR___CHOnboardingCoordinator_notifyTokens];
  v2 = *(_QWORD *)v1->cellPadding;
  if (v2)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR___CHOnboardingCoordinator_notifyTokens]);
    for (i = 0; i != v2; ++i)
    {
      v4 = *((_DWORD *)&v1[1].super.super.super.super.isa + i);
      notify_cancel(v4);
    }
    swift_bridgeObjectRelease(v1, v5, v6, v7, v8, v9, v10, v11);
  }
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for OnboardingCoordinator();
  return objc_msgSendSuper2(&v13, "dealloc");
}

void *sub_100553C68()
{
  _BYTE *v0;
  uint64_t ObjectType;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  const mach_header_64 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  unint64_t v12;
  uint64x2_t v13;
  int16x8_t v14;
  uint64_t v15;
  os_log_type_t v16;
  void *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  const mach_header_64 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *result;
  void *v48;
  _BYTE *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52[2];

  ObjectType = swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  v3 = 0x1000000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6])
    v3 = 0;
  v4 = 0x10000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5])
    v4 = 0;
  v5 = &_mh_execute_header;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4])
    v5 = 0;
  v6 = 0x1000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3])
    v6 = 0;
  v7 = 0x10000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2])
    v7 = 0;
  v8 = 256;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1])
    v8 = 0;
  v9 = sub_10002A5B4(v8 | v0[OBJC_IVAR___CHOnboardingCoordinator_criteria] | v7 | v6 | (unint64_t)v5 | v4 | v3);
  v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setBool:forKey:", 1, v11);

  v12 = sub_10055464C(*v2, v2[1], v2[2], v2[3]);
  *v2 = v12 & 1;
  v13 = (uint64x2_t)vdupq_n_s64(v12);
  v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_100645E60), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_100645E50));
  *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v2 + 1) = vmovn_s16(v14).u32[0];
  v2[5] = BYTE5(v12) & 1;
  v2[6] = BYTE6(v12) & 1;
  v15 = sub_10002A5B4(v12 & 0x1010101010101);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = (void *)HKLogActivity;
  v18 = v16;
  if (os_log_type_enabled(HKLogActivity, v16))
  {
    v49 = v0;
    v50 = v17;
    v19 = swift_slowAlloc(32, -1);
    v20 = swift_slowAlloc(64, -1);
    v52[0] = v20;
    *(_DWORD *)v19 = 136315650;
    v21 = _typeName(_:qualified:)(ObjectType, 0);
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    v51 = sub_10003E8EC(v21, v22, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v19 + 4);
    swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
    *(_WORD *)(v19 + 12) = 2080;
    v31 = 0x1000000000000;
    if (!v2[6])
      v31 = 0;
    v32 = 0x10000000000;
    if (!v2[5])
      v32 = 0;
    v33 = &_mh_execute_header;
    if (!v2[4])
      v33 = 0;
    v34 = 0x1000000;
    if (!v2[3])
      v34 = 0;
    v35 = 0x10000;
    if (!v2[2])
      v35 = 0;
    v36 = 256;
    if (!v2[1])
      v36 = 0;
    v37 = sub_100018CD0(v36 | *v2 | v35 | v34 | (unint64_t)v33 | v32 | v31);
    v39 = (CHWorkoutDetailHeartRateTableViewCell *)v38;
    v51 = sub_10003E8EC(v37, v38, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v19 + 14);

    swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
    *(_WORD *)(v19 + 22) = 2048;
    v51 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v19 + 24);
    _os_log_impl((void *)&_mh_execute_header, v50, v18, "%s set completed welcome views default; criteria %s newPhase %ld",
      (uint8_t *)v19,
      0x20u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  result = (void *)sub_10000C510();
  if (v15 != v9)
  {
    result = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___CHOnboardingCoordinator_delegate]);
    if (result)
    {
      v48 = result;
      objc_msgSend(result, "onboardingCoordinatorPhaseDidChangeTo:", v15);
      result = (void *)swift_unknownObjectRelease(v48);
    }
  }
  if (v15 == 5)
  {
    __chkstk_darwin(result);
    return (void *)dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100554C58);
  }
  return result;
}

void *sub_1005540E8()
{
  _BYTE *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  const mach_header_64 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  const mach_header_64 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  void *v19;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  const mach_header_64 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *result;
  void *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57[2];

  ObjectType = swift_getObjectType(v0);
  v1 = &v0[OBJC_IVAR___CHOnboardingCoordinator_criteria];
  v2 = 0x1000000000000;
  if (!v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 6])
    v2 = 0;
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 5])
    v3 = 0x10000000000;
  else
    v3 = 0;
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 4])
    v4 = &_mh_execute_header;
  else
    v4 = 0;
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 3])
    v5 = 0x1000000;
  else
    v5 = 0;
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 2])
    v6 = 0x10000;
  else
    v6 = 0;
  if (v0[OBJC_IVAR___CHOnboardingCoordinator_criteria + 1])
    v7 = 256;
  else
    v7 = 0;
  v8 = sub_10002A5B4(v7 | v0[OBJC_IVAR___CHOnboardingCoordinator_criteria] | v6 | v5 | (unint64_t)v4 | v3 | v2);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setBool:forKey:", 1, v10);

  v11 = 0x1000000000000;
  if (!v1[6])
    v11 = 0;
  if (v1[5])
    v12 = 0x10000000000;
  else
    v12 = 0;
  if (v1[4])
    v13 = &_mh_execute_header;
  else
    v13 = 0;
  if (v1[3])
    v14 = 0x1000000;
  else
    v14 = 0;
  if (v1[2])
    v15 = 0x10000;
  else
    v15 = 0;
  if (v1[1])
    v16 = 256;
  else
    v16 = 0;
  v17 = sub_10002A5B4(v16 | *v1 | v15 | v14 | (unint64_t)v13 | v12 | v11);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = (void *)HKLogActivity;
  v20 = v18;
  if (os_log_type_enabled(HKLogActivity, v18))
  {
    v53 = v0;
    v21 = v19;
    v54 = v8;
    v22 = swift_slowAlloc(32, -1);
    v23 = swift_slowAlloc(64, -1);
    v57[0] = v23;
    *(_DWORD *)v22 = 136315650;
    v24 = _typeName(_:qualified:)(ObjectType, 0);
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)v25;
    v56 = sub_10003E8EC(v24, v25, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v22 + 4);
    swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
    *(_WORD *)(v22 + 12) = 2080;
    v34 = 0x1000000000000;
    if (!v1[6])
      v34 = 0;
    v35 = 0x10000000000;
    if (!v1[5])
      v35 = 0;
    v36 = &_mh_execute_header;
    if (!v1[4])
      v36 = 0;
    v37 = 0x1000000;
    if (!v1[3])
      v37 = 0;
    v38 = 0x10000;
    if (!v1[2])
      v38 = 0;
    v39 = 256;
    if (!v1[1])
      v39 = 0;
    v40 = sub_100018CD0(v39 | *v1 | v38 | v37 | (unint64_t)v36 | v35 | v34);
    v42 = (CHWorkoutDetailHeartRateTableViewCell *)v41;
    v56 = sub_10003E8EC(v40, v41, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v22 + 14);

    swift_bridgeObjectRelease(v42, v43, v44, v45, v46, v47, v48, v49);
    *(_WORD *)(v22 + 22) = 2048;
    v56 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "%s set completed what's new views default; criteria %s newPhase %ld",
      (uint8_t *)v22,
      0x20u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    v50 = v22;
    v8 = v54;
    swift_slowDealloc(v50, -1, -1);

  }
  result = (void *)sub_10000C510();
  if (v17 != v8)
  {
    result = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___CHOnboardingCoordinator_delegate]);
    if (result)
    {
      v52 = result;
      objc_msgSend(result, "onboardingCoordinatorPhaseDidChangeTo:", v17);
      result = (void *)swift_unknownObjectRelease(v52);
    }
  }
  if (v17 == 5)
  {
    __chkstk_darwin(result);
    return (void *)dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100554C58);
  }
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for OnboardingCoordinator.Criteria(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingCoordinator.Criteria(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[7])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingCoordinator.Criteria(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingCoordinator.Criteria()
{
  return &type metadata for OnboardingCoordinator.Criteria;
}

unint64_t sub_10055464C(char a1, char a2, char a3, char a4)
{
  void *v8;
  unsigned int v9;
  id v10;
  unsigned int v11;
  id v12;
  NSString v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  const mach_header_64 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = (void *)objc_opt_self(UIApplication);
  v9 = objc_msgSend(v8, "isRunningInStoreDemoMode");
  v10 = objc_msgSend(v8, "sharedApplication");
  v11 = objc_msgSend(v10, "launchedToTest");

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "BOOLForKey:", v13);

  v15 = 0x1000000000000;
  if (!v11)
    v15 = 0;
  v16 = 0x10000000000;
  if (!v9)
    v16 = 0;
  v17 = &_mh_execute_header;
  if (!v14)
    v17 = 0;
  v18 = 0x1000000;
  if ((a4 & 1) == 0)
    v18 = 0;
  v19 = 0x10000;
  if ((a3 & 1) == 0)
    v19 = 0;
  v20 = 256;
  if ((a2 & 1) == 0)
    v20 = 0;
  return v20 & 0xFFFFFFFFFFFFFFFELL | a1 & 1 | v19 | v18 | v16 | v15 | (unint64_t)v17;
}

uint64_t sub_1005547A8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 0x4765766F4D736168 && a2 == 0xEB000000006C616FLL)
  {
    v5 = 0xEB000000006C616FLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4765766F4D736168, 0xEB000000006C616FLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000015)
  {
    v7 = 0x80000001006A5AE0;
    if (a2 == 0x80000001006A5AE0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001006A5AE0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x6372657845736168 && a2 == 0xEF6C616F47657369)
  {
    v8 = 0xEF6C616F47657369;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6372657845736168, 0xEF6C616F47657369, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0x646E617453736168 && a2 == 0xEC0000006C616F47)
  {
    v9 = 0xEC0000006C616F47;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646E617453736168, 0xEC0000006C616F47, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x80000001006A5B00)
  {
    v10 = 0x80000001006A5B00;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x80000001006A5B00, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x6F4D6F6D65447369 && a2 == 0xEA00000000006564)
  {
    v11 = 0xEA00000000006564;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4D6F6D65447369, 0xEA00000000006564, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001006A5B20)
  {
    swift_bridgeObjectRelease(0x80000001006A5B20);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001006A5B20, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_100554AD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100554AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_100005990(a1, a2, a3, a4, a5, v5, 0);
}

uint64_t sub_100554B18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100554B3C(uint64_t a1)
{
  uint64_t v1;

  sub_100553948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t storeEnumTagSinglePayload for OnboardingCoordinator.Criteria.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100554B90 + 4 * byte_100645C7C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100554BC4 + 4 * byte_100645C77[v4]))();
}

uint64_t sub_100554BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100554BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100554BD4);
  return result;
}

uint64_t sub_100554BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100554BE8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100554BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100554BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_100554C04()
{
  unint64_t result;

  result = qword_10083A030;
  if (!qword_10083A030)
  {
    result = swift_getWitnessTable(&unk_100645DD0, &type metadata for OnboardingCoordinator.Criteria.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10083A030);
  }
  return result;
}

void sub_100554C58()
{
  sub_10004EE0C();
}

_QWORD *sub_100554C6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(const void *, uint64_t, uint64_t, __n128);
  uint64_t v45;
  uint64_t v46;
  void *__dst;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v29 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v29 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v29);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v73 = a2[2];
    v74 = a2[3];
    *(_QWORD *)(a1 + 16) = v73;
    *(_QWORD *)(a1 + 24) = v74;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    v71 = a2[9];
    v72 = a2[10];
    *(_QWORD *)(a1 + 72) = v71;
    *(_QWORD *)(a1 + 80) = v72;
    *(_QWORD *)(a1 + 88) = a2[11];
    v5 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v5;
    v69 = a2[16];
    v70 = a2[17];
    *(_QWORD *)(a1 + 128) = v69;
    *(_QWORD *)(a1 + 136) = v70;
    *(_QWORD *)(a1 + 144) = a2[18];
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_QWORD *)(a1 + 184) = a2[23];
    *(_BYTE *)(a1 + 192) = *((_BYTE *)a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    v67 = a2[27];
    v68 = a2[28];
    *(_QWORD *)(a1 + 216) = v67;
    *(_QWORD *)(a1 + 224) = v68;
    *(_QWORD *)(a1 + 232) = a2[29];
    v6 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v6;
    v65 = a2[34];
    v66 = a2[35];
    *(_QWORD *)(a1 + 272) = v65;
    *(_QWORD *)(a1 + 280) = v66;
    *(_QWORD *)(a1 + 288) = a2[36];
    v7 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 312) = v7;
    v63 = a2[41];
    v64 = a2[42];
    *(_QWORD *)(a1 + 328) = v63;
    *(_QWORD *)(a1 + 336) = v64;
    *(_QWORD *)(a1 + 344) = a2[43];
    v8 = *((_OWORD *)a2 + 23);
    *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 368) = v8;
    *(_QWORD *)(a1 + 384) = a2[48];
    *(_BYTE *)(a1 + 392) = *((_BYTE *)a2 + 392);
    *(_OWORD *)(a1 + 400) = *((_OWORD *)a2 + 25);
    v60 = a2[52];
    v62 = a2[53];
    *(_QWORD *)(a1 + 416) = v60;
    *(_QWORD *)(a1 + 424) = v62;
    *(_QWORD *)(a1 + 432) = a2[54];
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 57);
    v58 = a2[59];
    v61 = a2[60];
    *(_QWORD *)(a1 + 472) = v58;
    *(_QWORD *)(a1 + 480) = v61;
    *(_QWORD *)(a1 + 488) = a2[61];
    v9 = *((_OWORD *)a2 + 32);
    *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
    *(_OWORD *)(a1 + 512) = v9;
    v57 = a2[66];
    *(_QWORD *)(a1 + 528) = v57;
    v59 = a2[67];
    *(_QWORD *)(a1 + 536) = v59;
    *(_QWORD *)(a1 + 544) = a2[68];
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 69);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 71);
    *(_QWORD *)(a1 + 584) = a2[73];
    *(_BYTE *)(a1 + 592) = *((_BYTE *)a2 + 592);
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 75);
    v55 = a2[77];
    *(_QWORD *)(a1 + 616) = v55;
    v56 = a2[78];
    *(_QWORD *)(a1 + 624) = v56;
    *(_QWORD *)(a1 + 632) = a2[79];
    v10 = *((_OWORD *)a2 + 41);
    *(_OWORD *)(a1 + 640) = *((_OWORD *)a2 + 40);
    *(_OWORD *)(a1 + 656) = v10;
    v53 = a2[84];
    *(_QWORD *)(a1 + 672) = v53;
    v54 = a2[85];
    *(_QWORD *)(a1 + 680) = v54;
    *(_QWORD *)(a1 + 688) = a2[86];
    v11 = *(_OWORD *)(a2 + 89);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 712) = v11;
    v51 = a2[91];
    *(_QWORD *)(a1 + 728) = v51;
    v52 = a2[92];
    *(_QWORD *)(a1 + 736) = v52;
    *(_QWORD *)(a1 + 744) = a2[93];
    v12 = *((_OWORD *)a2 + 48);
    *(_OWORD *)(a1 + 752) = *((_OWORD *)a2 + 47);
    *(_OWORD *)(a1 + 768) = v12;
    *(_QWORD *)(a1 + 784) = a2[98];
    *(_BYTE *)(a1 + 792) = *((_BYTE *)a2 + 792);
    *(_OWORD *)(a1 + 800) = *((_OWORD *)a2 + 50);
    v49 = a2[102];
    *(_QWORD *)(a1 + 816) = v49;
    v50 = a2[103];
    *(_QWORD *)(a1 + 824) = v50;
    *(_QWORD *)(a1 + 832) = a2[104];
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 105);
    *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 107);
    *(_QWORD *)(a1 + 888) = a2[111];
    *(_QWORD *)(a1 + 944) = a2[118];
    v48 = a2[109];
    *(_QWORD *)(a1 + 872) = v48;
    v13 = *((_OWORD *)a2 + 57);
    *(_OWORD *)(a1 + 896) = *((_OWORD *)a2 + 56);
    *(_OWORD *)(a1 + 912) = v13;
    *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 119);
    *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 121);
    *(_QWORD *)(a1 + 984) = a2[123];
    *(_BYTE *)(a1 + 992) = *((_BYTE *)a2 + 992);
    *(_QWORD *)(a1 + 1032) = a2[129];
    *(_QWORD *)(a1 + 1088) = a2[136];
    *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 125);
    v14 = *(_OWORD *)(a2 + 139);
    *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 137);
    *(_OWORD *)(a1 + 1112) = v14;
    *(_QWORD *)(a1 + 1144) = a2[143];
    *(_QWORD *)(a1 + 1184) = a2[148];
    *(_BYTE *)(a1 + 1192) = *((_BYTE *)a2 + 1192);
    *(_QWORD *)(a1 + 1232) = a2[154];
    *(_QWORD *)(a1 + 1288) = a2[161];
    *(_QWORD *)(a1 + 1344) = a2[168];
    *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 155);
    *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 157);
    *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 171);
    *(_QWORD *)(a1 + 1384) = a2[173];
    *(_BYTE *)(a1 + 1392) = *((_BYTE *)a2 + 1392);
    *(_QWORD *)(a1 + 1432) = a2[179];
    *(_QWORD *)(a1 + 1488) = a2[186];
    *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 175);
    v15 = *(_OWORD *)(a2 + 187);
    v16 = *(_OWORD *)(a2 + 189);
    v17 = a2[110];
    *(_QWORD *)(a1 + 880) = v17;
    *(_OWORD *)(a1 + 1496) = v15;
    *(_OWORD *)(a1 + 1512) = v16;
    *(_QWORD *)(a1 + 1544) = a2[193];
    *(_QWORD *)(a1 + 1584) = a2[198];
    *(_BYTE *)(a1 + 1592) = *((_BYTE *)a2 + 1592);
    v18 = a2[116];
    *(_QWORD *)(a1 + 928) = v18;
    v19 = a2[117];
    *(_QWORD *)(a1 + 936) = v19;
    v20 = a2[127];
    *(_QWORD *)(a1 + 1016) = v20;
    v21 = a2[128];
    *(_QWORD *)(a1 + 1024) = v21;
    *(_OWORD *)(a1 + 1040) = *((_OWORD *)a2 + 65);
    *(_OWORD *)(a1 + 1056) = *((_OWORD *)a2 + 66);
    v22 = a2[134];
    *(_QWORD *)(a1 + 1072) = v22;
    v23 = a2[135];
    *(_QWORD *)(a1 + 1080) = v23;
    v24 = a2[141];
    *(_QWORD *)(a1 + 1128) = v24;
    v34 = a2[142];
    *(_QWORD *)(a1 + 1136) = v34;
    *(_OWORD *)(a1 + 1152) = *((_OWORD *)a2 + 72);
    *(_OWORD *)(a1 + 1168) = *((_OWORD *)a2 + 73);
    *(_OWORD *)(a1 + 1200) = *((_OWORD *)a2 + 75);
    v33 = a2[152];
    *(_QWORD *)(a1 + 1216) = v33;
    v35 = a2[153];
    *(_QWORD *)(a1 + 1224) = v35;
    v36 = a2[159];
    *(_QWORD *)(a1 + 1272) = v36;
    v37 = a2[160];
    *(_QWORD *)(a1 + 1280) = v37;
    *(_OWORD *)(a1 + 1296) = *((_OWORD *)a2 + 81);
    *(_OWORD *)(a1 + 1312) = *((_OWORD *)a2 + 82);
    v38 = a2[166];
    *(_QWORD *)(a1 + 1328) = v38;
    v39 = a2[167];
    *(_QWORD *)(a1 + 1336) = v39;
    v40 = a2[177];
    *(_QWORD *)(a1 + 1416) = v40;
    v41 = a2[178];
    *(_QWORD *)(a1 + 1424) = v41;
    *(_OWORD *)(a1 + 1440) = *((_OWORD *)a2 + 90);
    *(_OWORD *)(a1 + 1456) = *((_OWORD *)a2 + 91);
    v42 = a2[184];
    *(_QWORD *)(a1 + 1472) = v42;
    v43 = a2[185];
    *(_QWORD *)(a1 + 1480) = v43;
    v45 = a2[191];
    *(_QWORD *)(a1 + 1528) = v45;
    v46 = a2[192];
    *(_QWORD *)(a1 + 1536) = v46;
    *(_OWORD *)(a1 + 1552) = *((_OWORD *)a2 + 97);
    *(_OWORD *)(a1 + 1568) = *((_OWORD *)a2 + 98);
    *(_OWORD *)(a1 + 1600) = *((_OWORD *)a2 + 100);
    v25 = *(int *)(a3 + 64);
    v32 = (char *)a2 + v25;
    __dst = (void *)(a1 + v25);
    *(_OWORD *)(a1 + 1616) = *((_OWORD *)a2 + 101);
    v26 = type metadata accessor for DateComponents(0);
    v31 = *(_QWORD *)(v26 - 8);
    v44 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v31 + 48);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v74);
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRetain(v72);
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v45);
    v27 = swift_bridgeObjectRetain(v46);
    if (v44(v32, 1, v26, v27))
    {
      v28 = sub_100047110(&qword_100821648);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v31 + 16))(__dst, v32, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v26);
    }
  }
  return v3;
}

uint64_t sub_1005553BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(const void *, uint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  void *__dst;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v71 = *(_QWORD *)(a2 + 16);
  v72 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v71;
  *(_QWORD *)(a1 + 24) = v72;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v69 = *(_QWORD *)(a2 + 72);
  v70 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v69;
  *(_QWORD *)(a1 + 80) = v70;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  v67 = *(_QWORD *)(a2 + 128);
  v68 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v67;
  *(_QWORD *)(a1 + 136) = v68;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v65 = *(_QWORD *)(a2 + 216);
  v66 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v65;
  *(_QWORD *)(a1 + 224) = v66;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  v5 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v5;
  v63 = *(_QWORD *)(a2 + 272);
  v64 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v63;
  *(_QWORD *)(a1 + 280) = v64;
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  v61 = *(_QWORD *)(a2 + 328);
  v62 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v61;
  *(_QWORD *)(a1 + 336) = v62;
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v7 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v7;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  v58 = *(_QWORD *)(a2 + 416);
  v60 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v58;
  *(_QWORD *)(a1 + 424) = v60;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  v56 = *(_QWORD *)(a2 + 472);
  v59 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v56;
  *(_QWORD *)(a1 + 480) = v59;
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v8 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v8;
  v55 = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v55;
  v57 = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 536) = v57;
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  v53 = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 616) = v53;
  v54 = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 624) = v54;
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v9 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v9;
  v51 = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 672) = v51;
  v52 = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 680) = v52;
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  v10 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v10;
  v49 = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 728) = v49;
  v50 = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 736) = v50;
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  v11 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v11;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  v48 = *(_QWORD *)(a2 + 816);
  *(_QWORD *)(a1 + 816) = v48;
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  v47 = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 824) = v47;
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  v12 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v12;
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 1240);
  *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 1256);
  *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 1352);
  *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  v13 = *(_OWORD *)(a2 + 1496);
  v14 = *(_OWORD *)(a2 + 1512);
  v15 = *(_QWORD *)(a2 + 872);
  *(_QWORD *)(a1 + 872) = v15;
  *(_OWORD *)(a1 + 1496) = v13;
  *(_OWORD *)(a1 + 1512) = v14;
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  v16 = *(_QWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 880) = v16;
  v17 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v17;
  v18 = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 928) = v18;
  v19 = *(_QWORD *)(a2 + 936);
  *(_QWORD *)(a1 + 936) = v19;
  v20 = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1016) = v20;
  v21 = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1024) = v21;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  v22 = *(_QWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1072) = v22;
  v23 = *(_QWORD *)(a2 + 1080);
  *(_QWORD *)(a1 + 1080) = v23;
  v31 = *(_QWORD *)(a2 + 1128);
  *(_QWORD *)(a1 + 1128) = v31;
  v33 = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1136) = v33;
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  v32 = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1216) = v32;
  v34 = *(_QWORD *)(a2 + 1224);
  *(_QWORD *)(a1 + 1224) = v34;
  v35 = *(_QWORD *)(a2 + 1272);
  *(_QWORD *)(a1 + 1272) = v35;
  v36 = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1280) = v36;
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  v37 = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1328) = v37;
  v38 = *(_QWORD *)(a2 + 1336);
  *(_QWORD *)(a1 + 1336) = v38;
  v39 = *(_QWORD *)(a2 + 1416);
  *(_QWORD *)(a1 + 1416) = v39;
  v40 = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1424) = v40;
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  v41 = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1472) = v41;
  v42 = *(_QWORD *)(a2 + 1480);
  *(_QWORD *)(a1 + 1480) = v42;
  v44 = *(_QWORD *)(a2 + 1528);
  *(_QWORD *)(a1 + 1528) = v44;
  v45 = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1536) = v45;
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  v24 = *(int *)(a3 + 64);
  v30 = (const void *)(a2 + v24);
  __dst = (void *)(a1 + v24);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  v25 = type metadata accessor for DateComponents(0);
  v29 = *(_QWORD *)(v25 - 8);
  v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v29 + 48);
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v44);
  v26 = swift_bridgeObjectRetain(v45);
  if (v43(v30, 1, v25, v26))
  {
    v27 = sub_100047110(&qword_100821648);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v30, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v25);
  }
  return a1;
}

uint64_t sub_100555AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  SEL v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  SEL v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  CHWorkoutDetailHeartRateTableViewCell *v142;
  SEL v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  uint64_t v150;
  CHWorkoutDetailHeartRateTableViewCell *v151;
  SEL v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  CHWorkoutDetailHeartRateTableViewCell *v160;
  SEL v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  uint64_t v168;
  CHWorkoutDetailHeartRateTableViewCell *v169;
  SEL v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  uint64_t v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  SEL v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  uint64_t v186;
  CHWorkoutDetailHeartRateTableViewCell *v187;
  SEL v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  uint64_t v195;
  CHWorkoutDetailHeartRateTableViewCell *v196;
  SEL v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  uint64_t v204;
  CHWorkoutDetailHeartRateTableViewCell *v205;
  SEL v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  uint64_t v213;
  CHWorkoutDetailHeartRateTableViewCell *v214;
  SEL v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  uint64_t v222;
  CHWorkoutDetailHeartRateTableViewCell *v223;
  SEL v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  uint64_t v231;
  CHWorkoutDetailHeartRateTableViewCell *v232;
  SEL v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  uint64_t v240;
  CHWorkoutDetailHeartRateTableViewCell *v241;
  SEL v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  id v248;
  uint64_t v249;
  CHWorkoutDetailHeartRateTableViewCell *v250;
  SEL v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  uint64_t v258;
  CHWorkoutDetailHeartRateTableViewCell *v259;
  SEL v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  uint64_t v267;
  CHWorkoutDetailHeartRateTableViewCell *v268;
  SEL v269;
  id v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  uint64_t v276;
  CHWorkoutDetailHeartRateTableViewCell *v277;
  SEL v278;
  id v279;
  id v280;
  id v281;
  id v282;
  id v283;
  id v284;
  uint64_t v285;
  CHWorkoutDetailHeartRateTableViewCell *v286;
  SEL v287;
  id v288;
  id v289;
  id v290;
  id v291;
  id v292;
  id v293;
  uint64_t v294;
  CHWorkoutDetailHeartRateTableViewCell *v295;
  SEL v296;
  id v297;
  id v298;
  id v299;
  id v300;
  id v301;
  id v302;
  uint64_t v303;
  CHWorkoutDetailHeartRateTableViewCell *v304;
  SEL v305;
  id v306;
  id v307;
  id v308;
  id v309;
  id v310;
  id v311;
  uint64_t v312;
  CHWorkoutDetailHeartRateTableViewCell *v313;
  SEL v314;
  id v315;
  id v316;
  id v317;
  id v318;
  id v319;
  id v320;
  uint64_t v321;
  CHWorkoutDetailHeartRateTableViewCell *v322;
  SEL v323;
  id v324;
  id v325;
  id v326;
  id v327;
  id v328;
  id v329;
  uint64_t v330;
  CHWorkoutDetailHeartRateTableViewCell *v331;
  SEL v332;
  id v333;
  id v334;
  id v335;
  id v336;
  id v337;
  id v338;
  uint64_t v339;
  CHWorkoutDetailHeartRateTableViewCell *v340;
  SEL v341;
  id v342;
  id v343;
  id v344;
  id v345;
  id v346;
  id v347;
  uint64_t v348;
  CHWorkoutDetailHeartRateTableViewCell *v349;
  SEL v350;
  id v351;
  id v352;
  id v353;
  id v354;
  id v355;
  id v356;
  uint64_t v357;
  CHWorkoutDetailHeartRateTableViewCell *v358;
  SEL v359;
  id v360;
  id v361;
  id v362;
  id v363;
  id v364;
  id v365;
  uint64_t v366;
  CHWorkoutDetailHeartRateTableViewCell *v367;
  SEL v368;
  id v369;
  id v370;
  id v371;
  id v372;
  id v373;
  id v374;
  uint64_t v375;
  CHWorkoutDetailHeartRateTableViewCell *v376;
  SEL v377;
  id v378;
  id v379;
  id v380;
  id v381;
  id v382;
  id v383;
  uint64_t v384;
  CHWorkoutDetailHeartRateTableViewCell *v385;
  SEL v386;
  id v387;
  id v388;
  id v389;
  id v390;
  id v391;
  id v392;
  uint64_t v393;
  CHWorkoutDetailHeartRateTableViewCell *v394;
  SEL v395;
  id v396;
  id v397;
  id v398;
  id v399;
  id v400;
  id v401;
  uint64_t v402;
  CHWorkoutDetailHeartRateTableViewCell *v403;
  SEL v404;
  id v405;
  id v406;
  id v407;
  id v408;
  id v409;
  id v410;
  uint64_t v411;
  CHWorkoutDetailHeartRateTableViewCell *v412;
  SEL v413;
  id v414;
  id v415;
  id v416;
  id v417;
  id v418;
  id v419;
  uint64_t v420;
  CHWorkoutDetailHeartRateTableViewCell *v421;
  SEL v422;
  id v423;
  id v424;
  id v425;
  id v426;
  id v427;
  id v428;
  uint64_t v429;
  CHWorkoutDetailHeartRateTableViewCell *v430;
  SEL v431;
  id v432;
  id v433;
  id v434;
  id v435;
  id v436;
  id v437;
  uint64_t v438;
  void *v439;
  void *v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t (*v443)(void *, uint64_t, uint64_t);
  int v444;
  int v445;
  uint64_t v446;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = *(_QWORD *)(a2 + 80);
  v34 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease(v34, v35, v36, v37, v38, v39, v40, v41);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v42 = *(_QWORD *)(a2 + 128);
  v43 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43, v44, v45, v46, v47, v48, v49, v50);
  v51 = *(_QWORD *)(a2 + 136);
  v52 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52, v53, v54, v55, v56, v57, v58, v59);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v60 = *(_QWORD *)(a2 + 216);
  v61 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = v60;
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRelease(v61, v62, v63, v64, v65, v66, v67, v68);
  v69 = *(_QWORD *)(a2 + 224);
  v70 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease(v70, v71, v72, v73, v74, v75, v76, v77);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v78 = *(_QWORD *)(a2 + 272);
  v79 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease(v79, v80, v81, v82, v83, v84, v85, v86);
  v87 = *(_QWORD *)(a2 + 280);
  v88 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = v87;
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRelease(v88, v89, v90, v91, v92, v93, v94, v95);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v96 = *(_QWORD *)(a2 + 328);
  v97 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97, v98, v99, v100, v101, v102, v103, v104);
  v105 = *(_QWORD *)(a2 + 336);
  v106 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 336);
  *(_QWORD *)(a1 + 336) = v105;
  swift_bridgeObjectRetain(v105);
  swift_bridgeObjectRelease(v106, v107, v108, v109, v110, v111, v112, v113);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  v114 = *(_QWORD *)(a2 + 416);
  v115 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 416);
  *(_QWORD *)(a1 + 416) = v114;
  swift_bridgeObjectRetain(v114);
  swift_bridgeObjectRelease(v115, v116, v117, v118, v119, v120, v121, v122);
  v123 = *(_QWORD *)(a2 + 424);
  v124 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 424);
  *(_QWORD *)(a1 + 424) = v123;
  swift_bridgeObjectRetain(v123);
  swift_bridgeObjectRelease(v124, v125, v126, v127, v128, v129, v130, v131);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  v132 = *(_QWORD *)(a2 + 472);
  v133 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 472);
  *(_QWORD *)(a1 + 472) = v132;
  swift_bridgeObjectRetain(v132);
  swift_bridgeObjectRelease(v133, v134, v135, v136, v137, v138, v139, v140);
  v141 = *(_QWORD *)(a2 + 480);
  v142 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 480);
  *(_QWORD *)(a1 + 480) = v141;
  swift_bridgeObjectRetain(v141);
  swift_bridgeObjectRelease(v142, v143, v144, v145, v146, v147, v148, v149);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v150 = *(_QWORD *)(a2 + 528);
  v151 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 528);
  *(_QWORD *)(a1 + 528) = v150;
  swift_bridgeObjectRetain(v150);
  swift_bridgeObjectRelease(v151, v152, v153, v154, v155, v156, v157, v158);
  v159 = *(_QWORD *)(a2 + 536);
  v160 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 536);
  *(_QWORD *)(a1 + 536) = v159;
  swift_bridgeObjectRetain(v159);
  swift_bridgeObjectRelease(v160, v161, v162, v163, v164, v165, v166, v167);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v168 = *(_QWORD *)(a2 + 616);
  v169 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 616);
  *(_QWORD *)(a1 + 616) = v168;
  swift_bridgeObjectRetain(v168);
  swift_bridgeObjectRelease(v169, v170, v171, v172, v173, v174, v175, v176);
  v177 = *(_QWORD *)(a2 + 624);
  v178 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 624);
  *(_QWORD *)(a1 + 624) = v177;
  swift_bridgeObjectRetain(v177);
  swift_bridgeObjectRelease(v178, v179, v180, v181, v182, v183, v184, v185);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v186 = *(_QWORD *)(a2 + 672);
  v187 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 672);
  *(_QWORD *)(a1 + 672) = v186;
  swift_bridgeObjectRetain(v186);
  swift_bridgeObjectRelease(v187, v188, v189, v190, v191, v192, v193, v194);
  v195 = *(_QWORD *)(a2 + 680);
  v196 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 680);
  *(_QWORD *)(a1 + 680) = v195;
  swift_bridgeObjectRetain(v195);
  swift_bridgeObjectRelease(v196, v197, v198, v199, v200, v201, v202, v203);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v204 = *(_QWORD *)(a2 + 728);
  v205 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 728);
  *(_QWORD *)(a1 + 728) = v204;
  swift_bridgeObjectRetain(v204);
  swift_bridgeObjectRelease(v205, v206, v207, v208, v209, v210, v211, v212);
  v213 = *(_QWORD *)(a2 + 736);
  v214 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 736);
  *(_QWORD *)(a1 + 736) = v213;
  swift_bridgeObjectRetain(v213);
  swift_bridgeObjectRelease(v214, v215, v216, v217, v218, v219, v220, v221);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  v222 = *(_QWORD *)(a2 + 816);
  v223 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 816);
  *(_QWORD *)(a1 + 816) = v222;
  swift_bridgeObjectRetain(v222);
  swift_bridgeObjectRelease(v223, v224, v225, v226, v227, v228, v229, v230);
  v231 = *(_QWORD *)(a2 + 824);
  v232 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 824);
  *(_QWORD *)(a1 + 824) = v231;
  swift_bridgeObjectRetain(v231);
  swift_bridgeObjectRelease(v232, v233, v234, v235, v236, v237, v238, v239);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  v240 = *(_QWORD *)(a2 + 872);
  v241 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 872);
  *(_QWORD *)(a1 + 872) = v240;
  swift_bridgeObjectRetain(v240);
  swift_bridgeObjectRelease(v241, v242, v243, v244, v245, v246, v247, v248);
  v249 = *(_QWORD *)(a2 + 880);
  v250 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 880);
  *(_QWORD *)(a1 + 880) = v249;
  swift_bridgeObjectRetain(v249);
  swift_bridgeObjectRelease(v250, v251, v252, v253, v254, v255, v256, v257);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  v258 = *(_QWORD *)(a2 + 928);
  v259 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 928);
  *(_QWORD *)(a1 + 928) = v258;
  swift_bridgeObjectRetain(v258);
  swift_bridgeObjectRelease(v259, v260, v261, v262, v263, v264, v265, v266);
  v267 = *(_QWORD *)(a2 + 936);
  v268 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 936);
  *(_QWORD *)(a1 + 936) = v267;
  swift_bridgeObjectRetain(v267);
  swift_bridgeObjectRelease(v268, v269, v270, v271, v272, v273, v274, v275);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  v276 = *(_QWORD *)(a2 + 1016);
  v277 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1016);
  *(_QWORD *)(a1 + 1016) = v276;
  swift_bridgeObjectRetain(v276);
  swift_bridgeObjectRelease(v277, v278, v279, v280, v281, v282, v283, v284);
  v285 = *(_QWORD *)(a2 + 1024);
  v286 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1024);
  *(_QWORD *)(a1 + 1024) = v285;
  swift_bridgeObjectRetain(v285);
  swift_bridgeObjectRelease(v286, v287, v288, v289, v290, v291, v292, v293);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  v294 = *(_QWORD *)(a2 + 1072);
  v295 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1072);
  *(_QWORD *)(a1 + 1072) = v294;
  swift_bridgeObjectRetain(v294);
  swift_bridgeObjectRelease(v295, v296, v297, v298, v299, v300, v301, v302);
  v303 = *(_QWORD *)(a2 + 1080);
  v304 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1080);
  *(_QWORD *)(a1 + 1080) = v303;
  swift_bridgeObjectRetain(v303);
  swift_bridgeObjectRelease(v304, v305, v306, v307, v308, v309, v310, v311);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  v312 = *(_QWORD *)(a2 + 1128);
  v313 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1128);
  *(_QWORD *)(a1 + 1128) = v312;
  swift_bridgeObjectRetain(v312);
  swift_bridgeObjectRelease(v313, v314, v315, v316, v317, v318, v319, v320);
  v321 = *(_QWORD *)(a2 + 1136);
  v322 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1136);
  *(_QWORD *)(a1 + 1136) = v321;
  swift_bridgeObjectRetain(v321);
  swift_bridgeObjectRelease(v322, v323, v324, v325, v326, v327, v328, v329);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  v330 = *(_QWORD *)(a2 + 1216);
  v331 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = v330;
  swift_bridgeObjectRetain(v330);
  swift_bridgeObjectRelease(v331, v332, v333, v334, v335, v336, v337, v338);
  v339 = *(_QWORD *)(a2 + 1224);
  v340 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1224);
  *(_QWORD *)(a1 + 1224) = v339;
  swift_bridgeObjectRetain(v339);
  swift_bridgeObjectRelease(v340, v341, v342, v343, v344, v345, v346, v347);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  v348 = *(_QWORD *)(a2 + 1272);
  v349 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1272);
  *(_QWORD *)(a1 + 1272) = v348;
  swift_bridgeObjectRetain(v348);
  swift_bridgeObjectRelease(v349, v350, v351, v352, v353, v354, v355, v356);
  v357 = *(_QWORD *)(a2 + 1280);
  v358 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1280);
  *(_QWORD *)(a1 + 1280) = v357;
  swift_bridgeObjectRetain(v357);
  swift_bridgeObjectRelease(v358, v359, v360, v361, v362, v363, v364, v365);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  v366 = *(_QWORD *)(a2 + 1328);
  v367 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1328);
  *(_QWORD *)(a1 + 1328) = v366;
  swift_bridgeObjectRetain(v366);
  swift_bridgeObjectRelease(v367, v368, v369, v370, v371, v372, v373, v374);
  v375 = *(_QWORD *)(a2 + 1336);
  v376 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1336);
  *(_QWORD *)(a1 + 1336) = v375;
  swift_bridgeObjectRetain(v375);
  swift_bridgeObjectRelease(v376, v377, v378, v379, v380, v381, v382, v383);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1376) = *(_QWORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  v384 = *(_QWORD *)(a2 + 1416);
  v385 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1416);
  *(_QWORD *)(a1 + 1416) = v384;
  swift_bridgeObjectRetain(v384);
  swift_bridgeObjectRelease(v385, v386, v387, v388, v389, v390, v391, v392);
  v393 = *(_QWORD *)(a2 + 1424);
  v394 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1424);
  *(_QWORD *)(a1 + 1424) = v393;
  swift_bridgeObjectRetain(v393);
  swift_bridgeObjectRelease(v394, v395, v396, v397, v398, v399, v400, v401);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_QWORD *)(a1 + 1440) = *(_QWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  v402 = *(_QWORD *)(a2 + 1472);
  v403 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1472);
  *(_QWORD *)(a1 + 1472) = v402;
  swift_bridgeObjectRetain(v402);
  swift_bridgeObjectRelease(v403, v404, v405, v406, v407, v408, v409, v410);
  v411 = *(_QWORD *)(a2 + 1480);
  v412 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1480);
  *(_QWORD *)(a1 + 1480) = v411;
  swift_bridgeObjectRetain(v411);
  swift_bridgeObjectRelease(v412, v413, v414, v415, v416, v417, v418, v419);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  v420 = *(_QWORD *)(a2 + 1528);
  v421 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1528);
  *(_QWORD *)(a1 + 1528) = v420;
  swift_bridgeObjectRetain(v420);
  swift_bridgeObjectRelease(v421, v422, v423, v424, v425, v426, v427, v428);
  v429 = *(_QWORD *)(a2 + 1536);
  v430 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1536);
  *(_QWORD *)(a1 + 1536) = v429;
  swift_bridgeObjectRetain(v429);
  swift_bridgeObjectRelease(v430, v431, v432, v433, v434, v435, v436, v437);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)(a2 + 1576);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
  v438 = *(int *)(a3 + 64);
  v439 = (void *)(a1 + v438);
  v440 = (void *)(a2 + v438);
  v441 = type metadata accessor for DateComponents(0);
  v442 = *(_QWORD *)(v441 - 8);
  v443 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v442 + 48);
  v444 = v443(v439, 1, v441);
  v445 = v443(v440, 1, v441);
  if (!v444)
  {
    if (!v445)
    {
      (*(void (**)(void *, void *, uint64_t))(v442 + 24))(v439, v440, v441);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v442 + 8))(v439, v441);
    goto LABEL_6;
  }
  if (v445)
  {
LABEL_6:
    v446 = sub_100047110(&qword_100821648);
    memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v442 + 16))(v439, v440, v441);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v442 + 56))(v439, 0, 1, v441);
  return a1;
}

uint64_t sub_100556548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v4;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  v11 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v11;
  v12 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v12;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v13 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v13;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v14 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v14;
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  v15 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v15;
  v16 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v16;
  v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  v18 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v18;
  v19 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v19;
  v20 = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 776) = v20;
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  v21 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v21;
  v22 = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 744) = v22;
  v23 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(a1 + 648) = v23;
  v24 = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 664) = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 680) = v24;
  v25 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v25;
  v26 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v26;
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  v27 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v27;
  v28 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v28;
  v29 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v29;
  v30 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v30;
  v31 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v31;
  v32 = *(_OWORD *)(a2 + 1176);
  *(_OWORD *)(a1 + 1160) = *(_OWORD *)(a2 + 1160);
  *(_OWORD *)(a1 + 1176) = v32;
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  v33 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v33;
  v34 = *(_OWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1144) = v34;
  v35 = *(_OWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1048) = v35;
  v36 = *(_OWORD *)(a2 + 1080);
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
  *(_OWORD *)(a1 + 1080) = v36;
  v37 = *(_OWORD *)(a2 + 1016);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1016) = v37;
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  v38 = *(_OWORD *)(a2 + 1576);
  *(_OWORD *)(a1 + 1560) = *(_OWORD *)(a2 + 1560);
  *(_OWORD *)(a1 + 1576) = v38;
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  v39 = *(_OWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = *(_OWORD *)(a2 + 1496);
  *(_OWORD *)(a1 + 1512) = v39;
  v40 = *(_OWORD *)(a2 + 1544);
  *(_OWORD *)(a1 + 1528) = *(_OWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1544) = v40;
  v41 = *(_OWORD *)(a2 + 1448);
  *(_OWORD *)(a1 + 1432) = *(_OWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1448) = v41;
  v42 = *(_OWORD *)(a2 + 1480);
  *(_OWORD *)(a1 + 1464) = *(_OWORD *)(a2 + 1464);
  *(_OWORD *)(a1 + 1480) = v42;
  v43 = *(_OWORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  *(_OWORD *)(a1 + 1416) = v43;
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  v44 = *(int *)(a3 + 64);
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  v47 = type metadata accessor for DateComponents(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100047110(&qword_100821648);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  return a1;
}

uint64_t sub_10055682C(uint64_t a1, uint64_t a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  __int128 v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  __int128 v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  __int128 v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  __int128 v103;
  CHWorkoutDetailHeartRateTableViewCell *v104;
  SEL v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  __int128 v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  SEL v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  __int128 v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  SEL v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  CHWorkoutDetailHeartRateTableViewCell *v146;
  SEL v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  __int128 v154;
  CHWorkoutDetailHeartRateTableViewCell *v155;
  SEL v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  CHWorkoutDetailHeartRateTableViewCell *v163;
  SEL v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  __int128 v171;
  CHWorkoutDetailHeartRateTableViewCell *v172;
  SEL v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  CHWorkoutDetailHeartRateTableViewCell *v180;
  SEL v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  __int128 v188;
  CHWorkoutDetailHeartRateTableViewCell *v189;
  SEL v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  CHWorkoutDetailHeartRateTableViewCell *v197;
  SEL v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  __int128 v205;
  CHWorkoutDetailHeartRateTableViewCell *v206;
  SEL v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  CHWorkoutDetailHeartRateTableViewCell *v214;
  SEL v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  __int128 v222;
  CHWorkoutDetailHeartRateTableViewCell *v223;
  SEL v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  CHWorkoutDetailHeartRateTableViewCell *v231;
  SEL v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  __int128 v239;
  CHWorkoutDetailHeartRateTableViewCell *v240;
  SEL v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  CHWorkoutDetailHeartRateTableViewCell *v248;
  SEL v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  __int128 v256;
  CHWorkoutDetailHeartRateTableViewCell *v257;
  SEL v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  CHWorkoutDetailHeartRateTableViewCell *v265;
  SEL v266;
  id v267;
  id v268;
  id v269;
  id v270;
  id v271;
  id v272;
  CHWorkoutDetailHeartRateTableViewCell *v273;
  SEL v274;
  id v275;
  id v276;
  id v277;
  id v278;
  id v279;
  id v280;
  CHWorkoutDetailHeartRateTableViewCell *v281;
  SEL v282;
  id v283;
  id v284;
  id v285;
  id v286;
  id v287;
  id v288;
  CHWorkoutDetailHeartRateTableViewCell *v289;
  SEL v290;
  id v291;
  id v292;
  id v293;
  id v294;
  id v295;
  id v296;
  CHWorkoutDetailHeartRateTableViewCell *v297;
  SEL v298;
  id v299;
  id v300;
  id v301;
  id v302;
  id v303;
  id v304;
  CHWorkoutDetailHeartRateTableViewCell *v305;
  SEL v306;
  id v307;
  id v308;
  id v309;
  id v310;
  id v311;
  id v312;
  CHWorkoutDetailHeartRateTableViewCell *v313;
  SEL v314;
  id v315;
  id v316;
  id v317;
  id v318;
  id v319;
  id v320;
  CHWorkoutDetailHeartRateTableViewCell *v321;
  SEL v322;
  id v323;
  id v324;
  id v325;
  id v326;
  id v327;
  id v328;
  CHWorkoutDetailHeartRateTableViewCell *v329;
  SEL v330;
  id v331;
  id v332;
  id v333;
  id v334;
  id v335;
  id v336;
  CHWorkoutDetailHeartRateTableViewCell *v337;
  SEL v338;
  id v339;
  id v340;
  id v341;
  id v342;
  id v343;
  id v344;
  CHWorkoutDetailHeartRateTableViewCell *v345;
  SEL v346;
  id v347;
  id v348;
  id v349;
  id v350;
  id v351;
  id v352;
  CHWorkoutDetailHeartRateTableViewCell *v353;
  SEL v354;
  id v355;
  id v356;
  id v357;
  id v358;
  id v359;
  id v360;
  CHWorkoutDetailHeartRateTableViewCell *v361;
  SEL v362;
  id v363;
  id v364;
  id v365;
  id v366;
  id v367;
  id v368;
  CHWorkoutDetailHeartRateTableViewCell *v369;
  SEL v370;
  id v371;
  id v372;
  id v373;
  id v374;
  id v375;
  id v376;
  CHWorkoutDetailHeartRateTableViewCell *v377;
  SEL v378;
  id v379;
  id v380;
  id v381;
  id v382;
  id v383;
  id v384;
  CHWorkoutDetailHeartRateTableViewCell *v385;
  SEL v386;
  id v387;
  id v388;
  id v389;
  id v390;
  id v391;
  id v392;
  CHWorkoutDetailHeartRateTableViewCell *v393;
  SEL v394;
  id v395;
  id v396;
  id v397;
  id v398;
  id v399;
  id v400;
  __int128 v401;
  uint64_t v402;
  void *v403;
  void *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t (*v407)(void *, uint64_t, uint64_t);
  int v408;
  int v409;
  uint64_t v410;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v11, (SEL)a2, a3, a4, a5, a6, a7, a8);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v37 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v37, v38, v39, v40, v41, v42, v43, v44);
  v45 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
  v53 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v53;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v54 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease(v54, v55, v56, v57, v58, v59, v60, v61);
  v62 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease(v62, v63, v64, v65, v66, v67, v68, v69);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v70 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease(v70, v71, v72, v73, v74, v75, v76, v77);
  v78 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease(v78, v79, v80, v81, v82, v83, v84, v85);
  v86 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v86;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v87 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRelease(v87, v88, v89, v90, v91, v92, v93, v94);
  v95 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 336);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRelease(v95, v96, v97, v98, v99, v100, v101, v102);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v103 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v103;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  v104 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 416);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease(v104, v105, v106, v107, v108, v109, v110, v111);
  v112 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 424);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRelease(v112, v113, v114, v115, v116, v117, v118, v119);
  v120 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v120;
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  v121 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 472);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease(v121, v122, v123, v124, v125, v126, v127, v128);
  v129 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 480);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  swift_bridgeObjectRelease(v129, v130, v131, v132, v133, v134, v135, v136);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v137 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v137;
  v138 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 528);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease(v138, v139, v140, v141, v142, v143, v144, v145);
  v146 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 536);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease(v146, v147, v148, v149, v150, v151, v152, v153);
  v154 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v154;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v155 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 616);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease(v155, v156, v157, v158, v159, v160, v161, v162);
  v163 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 624);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_bridgeObjectRelease(v163, v164, v165, v166, v167, v168, v169, v170);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v171 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v171;
  v172 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 672);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  swift_bridgeObjectRelease(v172, v173, v174, v175, v176, v177, v178, v179);
  v180 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 680);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  swift_bridgeObjectRelease(v180, v181, v182, v183, v184, v185, v186, v187);
  v188 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v188;
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v189 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 728);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease(v189, v190, v191, v192, v193, v194, v195, v196);
  v197 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 736);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  swift_bridgeObjectRelease(v197, v198, v199, v200, v201, v202, v203, v204);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  v205 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v205;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  v206 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 816);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  swift_bridgeObjectRelease(v206, v207, v208, v209, v210, v211, v212, v213);
  v214 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 824);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  swift_bridgeObjectRelease(v214, v215, v216, v217, v218, v219, v220, v221);
  v222 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v222;
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  v223 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 872);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  swift_bridgeObjectRelease(v223, v224, v225, v226, v227, v228, v229, v230);
  v231 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 880);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  swift_bridgeObjectRelease(v231, v232, v233, v234, v235, v236, v237, v238);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  v239 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v239;
  v240 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 928);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  swift_bridgeObjectRelease(v240, v241, v242, v243, v244, v245, v246, v247);
  v248 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 936);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  swift_bridgeObjectRelease(v248, v249, v250, v251, v252, v253, v254, v255);
  v256 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v256;
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  v257 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1016);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  swift_bridgeObjectRelease(v257, v258, v259, v260, v261, v262, v263, v264);
  v265 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1024);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  swift_bridgeObjectRelease(v265, v266, v267, v268, v269, v270, v271, v272);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  v273 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1072);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  swift_bridgeObjectRelease(v273, v274, v275, v276, v277, v278, v279, v280);
  v281 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1080);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
  swift_bridgeObjectRelease(v281, v282, v283, v284, v285, v286, v287, v288);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  v289 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1128);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  swift_bridgeObjectRelease(v289, v290, v291, v292, v293, v294, v295, v296);
  v297 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1136);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  swift_bridgeObjectRelease(v297, v298, v299, v300, v301, v302, v303, v304);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  v305 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  swift_bridgeObjectRelease(v305, v306, v307, v308, v309, v310, v311, v312);
  v313 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1224);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  swift_bridgeObjectRelease(v313, v314, v315, v316, v317, v318, v319, v320);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  v321 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1272);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  swift_bridgeObjectRelease(v321, v322, v323, v324, v325, v326, v327, v328);
  v329 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1280);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  swift_bridgeObjectRelease(v329, v330, v331, v332, v333, v334, v335, v336);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  v337 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1328);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  swift_bridgeObjectRelease(v337, v338, v339, v340, v341, v342, v343, v344);
  v345 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1336);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  swift_bridgeObjectRelease(v345, v346, v347, v348, v349, v350, v351, v352);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  v353 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1416);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  swift_bridgeObjectRelease(v353, v354, v355, v356, v357, v358, v359, v360);
  v361 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1424);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  swift_bridgeObjectRelease(v361, v362, v363, v364, v365, v366, v367, v368);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  v369 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1472);
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  swift_bridgeObjectRelease(v369, v370, v371, v372, v373, v374, v375, v376);
  v377 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1480);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  swift_bridgeObjectRelease(v377, v378, v379, v380, v381, v382, v383, v384);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  v385 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1528);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  swift_bridgeObjectRelease(v385, v386, v387, v388, v389, v390, v391, v392);
  v393 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 1536);
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  swift_bridgeObjectRelease(v393, v394, v395, v396, v397, v398, v399, v400);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  v401 = *(_OWORD *)(a2 + 1616);
  v402 = a3[16];
  v403 = (void *)(a1 + v402);
  v404 = (void *)(a2 + v402);
  *(_OWORD *)(a1 + 1616) = v401;
  v405 = type metadata accessor for DateComponents(0);
  v406 = *(_QWORD *)(v405 - 8);
  v407 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v406 + 48);
  v408 = v407(v403, 1, v405);
  v409 = v407(v404, 1, v405);
  if (!v408)
  {
    if (!v409)
    {
      (*(void (**)(void *, void *, uint64_t))(v406 + 40))(v403, v404, v405);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v406 + 8))(v403, v405);
    goto LABEL_6;
  }
  if (v409)
  {
LABEL_6:
    v410 = sub_100047110(&qword_100821648);
    memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v410 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v406 + 32))(v403, v404, v405);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v406 + 56))(v403, 0, 1, v405);
  return a1;
}

uint64_t sub_100556ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_100821648);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 64), a2, v8);
  }
}

uint64_t sub_100556F54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_100821648);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 64), a2, a2, v7);
  }
  return result;
}

uint64_t destroy for FriendSuggestionItemView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
}

uint64_t *initializeWithCopy for FriendSuggestionItemView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = a2[4];
  v8 = (void *)a2[5];
  a1[4] = v7;
  a1[5] = (uint64_t)v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  v11 = a2[10];
  a1[10] = v11;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  v12 = v8;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t *assignWithCopy for FriendSuggestionItemView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = (uint64_t)v10;
  v12 = v10;

  a1[6] = a2[6];
  v13 = a2[7];
  v14 = a1[7];
  a1[7] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  a1[8] = a2[8];
  v15 = a2[9];
  v16 = a1[9];
  a1[9] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a2[10];
  v18 = a1[10];
  a1[10] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  return a1;
}

_QWORD *assignWithTake for FriendSuggestionItemView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  v6 = *(_QWORD *)(a2 + 16);
  a1[1] = *(_QWORD *)(a2 + 8);
  a1[2] = v6;
  swift_release(v5);
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_release(a1[4]);
  v7 = (void *)a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);

  v8 = *(_QWORD *)(a2 + 56);
  v9 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v8;
  swift_bridgeObjectRelease(v9);
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(a1[9]);
  v10 = a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FriendSuggestionItemView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FriendSuggestionItemView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendSuggestionItemView()
{
  return &type metadata for FriendSuggestionItemView;
}

uint64_t sub_1005572E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BB5C0, 1);
}

double sub_1005572F4()
{
  double result;

  result = 0.0;
  xmmword_10083A110 = xmmword_100645EC0;
  *(_OWORD *)&qword_10083A120 = xmmword_100645EC0;
  return result;
}

uint64_t sub_10055730C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v37 = type metadata accessor for AccessibilityChildBehavior(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v34);
  v5 = (_OWORD *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100047110(&qword_10083A130);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100047110(&qword_10083A138);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083A140);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = static Alignment.topTrailing.getter(v15);
  v8[1] = v16;
  v17 = sub_100047110(&qword_10083A148);
  sub_1005575E8(v1, (uint64_t)v8 + *(int *)(v17 + 44));
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v19 = Color.init(uiColor:)(v18);
  v20 = static Edge.Set.all.getter(v19);
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_10083A130);
  v21 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v21 = v19;
  v21[8] = v20;
  sub_10001BE90((uint64_t)v8, &qword_10083A130);
  v22 = (char *)v5 + *(int *)(v34 + 20);
  v23 = enum case for RoundedCornerStyle.continuous(_:);
  v24 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #12.0 }
  *v5 = _Q0;
  v30 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_10004F8C8((uint64_t)v5, v30, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v30 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_10083A138);
  sub_100011F54((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v31 = sub_10001BE90((uint64_t)v11, &qword_10083A138);
  static AccessibilityChildBehavior.combine.getter(v31);
  v32 = sub_100559400();
  View.accessibilityElement(children:)(v3, v12, v32);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v3, v37);
  return sub_10001BE90((uint64_t)v14, &qword_10083A140);
}

uint64_t sub_1005575E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];

  v47 = a2;
  v46 = sub_100047110(&qword_10083A168);
  v3 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100047110(&qword_10083A170);
  __chkstk_darwin(v45);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - v9;
  v11 = sub_100047110(&qword_10083A178);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10083A180);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v20, v21, v22, v23, v24);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v25 = sub_100047110(&qword_10083A188);
  sub_10055795C(a1, (uint64_t)&v13[*(int *)(v25 + 44)]);
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v48, 0x4064400000000000, 0, 0, 1, v27, v28);
  sub_100021CC0((uint64_t)v13, (uint64_t)v16, &qword_10083A178);
  v29 = &v16[*(int *)(v14 + 36)];
  v30 = v48[1];
  *(_OWORD *)v29 = v48[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v48[2];
  sub_10001BE90((uint64_t)v13, &qword_10083A178);
  sub_100045AD4((uint64_t)v16, (uint64_t)v19, &qword_10083A180);
  v31 = swift_allocObject(&unk_1007A9368, 104, 7);
  v32 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v31 + 64) = v32;
  *(_OWORD *)(v31 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v31 + 96) = *(_QWORD *)(a1 + 80);
  v33 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v31 + 32) = v33;
  sub_1005595AC((uint64_t *)a1);
  v34 = sub_100047110(&qword_10083A190);
  v35 = sub_100559628();
  Button.init(action:label:)(sub_100559574, v31, sub_1005587AC, 0, v34, v35);
  v37 = static Color.white.getter(v36);
  KeyPath = swift_getKeyPath(&unk_100645F70);
  v39 = v46;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v46);
  v40 = (uint64_t *)&v7[*(int *)(v45 + 36)];
  *v40 = KeyPath;
  v40[1] = v37;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v39);
  sub_100045AD4((uint64_t)v7, (uint64_t)v10, &qword_10083A170);
  sub_100021CC0((uint64_t)v19, (uint64_t)v16, &qword_10083A180);
  sub_100021CC0((uint64_t)v10, (uint64_t)v7, &qword_10083A170);
  v41 = v47;
  sub_100021CC0((uint64_t)v16, v47, &qword_10083A180);
  v42 = sub_100047110(&qword_10083A1A0);
  sub_100021CC0((uint64_t)v7, v41 + *(int *)(v42 + 48), &qword_10083A170);
  sub_10001BE90((uint64_t)v10, &qword_10083A170);
  sub_10001BE90((uint64_t)v19, &qword_10083A180);
  sub_10001BE90((uint64_t)v7, &qword_10083A170);
  return sub_10001BE90((uint64_t)v16, &qword_10083A180);
}

void sub_10055795C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  char v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  uint64_t v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  uint64_t v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  SEL v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  int v121;
  int v122;
  CHWorkoutDetailHeartRateTableViewCell *v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  uint64_t v140;
  _QWORD v141[3];

  v4 = sub_100047110(&qword_10083A1A8);
  __chkstk_darwin(v4);
  v135 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100047110(&qword_10083A1B0);
  __chkstk_darwin(v131);
  v137 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v136 = (uint64_t)&v120 - v8;
  v132 = a1;
  v9 = *(void **)(a1 + 40);
  v10 = sub_1004B20C0(v9, 80.0);
  v140 = Image.init(uiImage:)(v10);
  v130 = static Edge.Set.all.getter(v140);
  v11 = objc_msgSend(v9, "givenName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v141[0] = v12;
  v141[1] = v14;
  v15 = sub_100038CA0();
  v16 = Text.init<A>(_:)(v141, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v24 = static Font.body.getter(v23);
  v26 = Text.font(_:)(v24, v16, v18, v22, v20, v25);
  v133 = v27;
  v134 = v26;
  v29 = v28;
  v139 = v30;
  swift_release(v24);
  sub_1000E4458(v16, v18, v22);
  swift_bridgeObjectRelease(v20, v31, v32, v33, v34, v35, v36, v37);
  if (qword_10081E008 != -1)
    v38 = swift_once(&qword_10081E008, sub_1005572F4);
  v138 = v29 & 1;
  v129 = xmmword_10083A110;
  v128 = qword_10083A120;
  v127 = unk_10083A128;
  v126 = static Edge.Set.all.getter(v38);
  v39 = LocalizedStringKey.init(stringLiteral:)(0x4E4F435F4D4F5246, 0xED00005354434154);
  v40 = Text.init(_:tableName:bundle:comment:)(v39);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  v48 = static Font.footnote.getter(v47);
  v50 = Text.font(_:)(v48, v40, v42, v46, v44, v49);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  swift_release(v48);
  v57 = v54 & 1;
  sub_1000E4458(v40, v42, v46);
  swift_bridgeObjectRelease(v44, v58, v59, v60, v61, v62, v63, v64);
  v66 = static Color.secondary.getter(v65);
  v125 = Text.foregroundColor(_:)(v66, v50, v52, v57, v56);
  v124 = v67;
  LOBYTE(v48) = v68;
  v123 = v69;
  swift_release(v66);
  v122 = v48 & 1;
  sub_1000E4458(v50, v52, v57);
  swift_bridgeObjectRelease(v56, v70, v71, v72, v73, v74, v75, v76);
  v121 = static Edge.Set.bottom.getter(v77);
  v78 = EdgeInsets.init(_all:)(15.0);
  v80 = v79;
  v82 = v81;
  v84 = v83;
  v85 = v135;
  v86 = sub_100557EF0(v135);
  LOBYTE(v56) = static Edge.Set.bottom.getter(v86);
  v87 = EdgeInsets.init(_all:)(20.0);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v94 = v137;
  sub_100021CC0(v85, v137, &qword_10083A1A8);
  v95 = v94 + *(int *)(v131 + 36);
  *(_BYTE *)v95 = (_BYTE)v56;
  *(double *)(v95 + 8) = v87;
  *(_QWORD *)(v95 + 16) = v89;
  *(_QWORD *)(v95 + 24) = v91;
  *(_QWORD *)(v95 + 32) = v93;
  *(_BYTE *)(v95 + 40) = 0;
  sub_10001BE90(v85, &qword_10083A1A8);
  v96 = v136;
  sub_100045AD4(v94, v136, &qword_10083A1B0);
  LOBYTE(v50) = v138;
  LOBYTE(v141[0]) = v138;
  sub_100021CC0(v96, v94, &qword_10083A1B0);
  v97 = v140;
  *(_QWORD *)a2 = v140;
  *(_BYTE *)(a2 + 8) = v130;
  *(_OWORD *)(a2 + 16) = xmmword_100622F70;
  *(_OWORD *)(a2 + 32) = xmmword_100622F60;
  *(_BYTE *)(a2 + 48) = 0;
  v99 = v133;
  v98 = v134;
  *(_QWORD *)(a2 + 56) = v134;
  *(_QWORD *)(a2 + 64) = v99;
  *(_BYTE *)(a2 + 72) = v50;
  *(_QWORD *)(a2 + 80) = v139;
  *(_BYTE *)(a2 + 88) = v126;
  *(_OWORD *)(a2 + 96) = v129;
  v100 = v127;
  *(_QWORD *)(a2 + 112) = v128;
  *(_QWORD *)(a2 + 120) = v100;
  *(_BYTE *)(a2 + 128) = 0;
  v101 = v125;
  v102 = v124;
  *(_QWORD *)(a2 + 136) = v125;
  *(_QWORD *)(a2 + 144) = v102;
  LOBYTE(v46) = v122;
  *(_BYTE *)(a2 + 152) = v122;
  v103 = v123;
  *(_QWORD *)(a2 + 160) = v123;
  *(_BYTE *)(a2 + 168) = v121;
  *(double *)(a2 + 176) = v78;
  *(_QWORD *)(a2 + 184) = v80;
  *(_QWORD *)(a2 + 192) = v82;
  *(_QWORD *)(a2 + 200) = v84;
  *(_BYTE *)(a2 + 208) = 0;
  v104 = sub_100047110(&qword_10083A1B8);
  sub_100021CC0(v94, a2 + *(int *)(v104 + 80), &qword_10083A1B0);
  swift_retain(v97);
  sub_1000E439C(v98, v99, v138);
  v105 = v139;
  swift_bridgeObjectRetain(v139);
  sub_1000E439C(v101, v102, v46);
  swift_bridgeObjectRetain(v103);
  sub_10001BE90(v96, &qword_10083A1B0);
  sub_10001BE90(v94, &qword_10083A1B0);
  sub_1000E4458(v101, v102, v46);
  swift_bridgeObjectRelease(v103, v106, v107, v108, v109, v110, v111, v112);
  sub_1000E4458(v98, v99, v141[0]);
  swift_release(v140);
  swift_bridgeObjectRelease(v105, v113, v114, v115, v116, v117, v118, v119);
}

uint64_t sub_100557EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  id v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t result;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;

  v3 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v3);
  v130 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10083A1C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ControlSize(0);
  v127 = *(_QWORD *)(v8 - 8);
  v128 = v8;
  __chkstk_darwin(v8);
  v126 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ButtonBorderShape(0);
  v124 = *(_QWORD *)(v10 - 8);
  v125 = v10;
  __chkstk_darwin(v10);
  v123 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for BorderedProminentButtonStyle(0);
  v119 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v13 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100047110(&qword_10083A1C8);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v15 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100047110(&qword_10083A1D0);
  __chkstk_darwin(v115);
  v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100047110(&qword_10083A1D8);
  v120 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v118 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100047110(&qword_10083A1E0);
  __chkstk_darwin(v114);
  v20 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100047110(&qword_10083A1E8);
  __chkstk_darwin(v117);
  v129 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)v1;
  if (*(_QWORD *)v1)
  {
    v116 = v7;
    KeyPath = swift_getKeyPath(&unk_100645FD0);
    v24 = swift_getKeyPath(&unk_100645FF8);
    swift_retain(v22);
    static Published.subscript.getter(&v132, v25, KeyPath, v24);
    swift_release(v22);
    swift_release(KeyPath);
    swift_release(v24);
    v131 = a1;
    if (!(_QWORD)v132)
      goto LABEL_5;
    v33 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)&v132 + 1);
    v34 = (CHWorkoutDetailHeartRateTableViewCell *)v133;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v132, v26, v27, v28, v29, v30, v31, v32);
    swift_bridgeObjectRelease(v33, v35, v36, v37, v38, v39, v40, v41);
    sub_1005595AC((uint64_t *)v1);
    LOBYTE(v33) = sub_100559728((unint64_t)v34, v1);
    sub_100559A9C((uint64_t *)v1);
    swift_bridgeObjectRelease(v34, v42, v43, v44, v45, v46, v47, v48);
    if ((v33 & 1) != 0)
    {
      v50 = static Color.clear.getter(v49);
      v51 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
      v111 = Color.init(uiColor:)(v51);
      v52 = 1;
    }
    else
    {
LABEL_5:
      v53 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
      v50 = Color.init(uiColor:)(v53);
      v111 = static Color.clear.getter(v50);
      v52 = 0;
    }
    v54 = swift_allocObject(&unk_1007A9390, 112, 7);
    v55 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v54 + 56) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v54 + 72) = v55;
    *(_OWORD *)(v54 + 88) = *(_OWORD *)(v1 + 64);
    v56 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v54 + 24) = *(_OWORD *)v1;
    *(_QWORD *)(v54 + 104) = *(_QWORD *)(v1 + 80);
    *(_BYTE *)(v54 + 16) = v52;
    *(_OWORD *)(v54 + 40) = v56;
    __chkstk_darwin(v54);
    *((_BYTE *)&v111 - 80) = v52;
    *(_OWORD *)(&v111 - 9) = xmmword_100645ED0;
    *(_OWORD *)(&v111 - 7) = xmmword_100645EE0;
    *(_OWORD *)(&v111 - 5) = 0u;
    *(_OWORD *)(&v111 - 3) = 0u;
    sub_1005595AC((uint64_t *)v1);
    v57 = sub_100047110(&qword_10083A1F0);
    v58 = sub_100028384(&qword_10083A1F8, &qword_10083A1F0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    Button.init(action:label:)(sub_1005599C4, v54, sub_1005599D0, &v111 - 12, v57, v58);
    v59 = swift_getKeyPath(&unk_100646018);
    *(_QWORD *)&v132 = v50;
    swift_retain(v50);
    v60 = AnyShapeStyle.init<A>(_:)(&v132, &type metadata for Color, &protocol witness table for Color);
    v61 = v112;
    v62 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v17, v15, v113);
    v63 = v115;
    v64 = (uint64_t *)&v17[*(int *)(v115 + 36)];
    *v64 = v59;
    v64[1] = v60;
    v65 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v15, v62);
    BorderedProminentButtonStyle.init()(v65);
    v66 = sub_1005599F0();
    v67 = sub_1000083D8((unint64_t *)&qword_10081F2E8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    v68 = v118;
    v69 = v121;
    View.buttonStyle<A>(_:)(v13, v63, v121, v66, v67);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v13, v69);
    v70 = sub_10001BE90((uint64_t)v17, &qword_10083A1D0);
    v71 = v123;
    static ButtonBorderShape.capsule.getter(v70);
    v72 = swift_getKeyPath(&unk_100646048);
    v73 = (uint64_t *)&v20[*(int *)(v114 + 36)];
    v74 = sub_100047110(&qword_100839120);
    v76 = v124;
    v75 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))((char *)v73 + *(int *)(v74 + 28), v71, v125);
    *v73 = v72;
    v77 = v120;
    v78 = v122;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v20, v68, v122);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v75);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v68, v78);
    v80 = v126;
    v79 = v127;
    v81 = v128;
    (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v126, enum case for ControlSize.small(_:), v128);
    v82 = swift_getKeyPath(&unk_100646078);
    v83 = (uint64_t)v129;
    v84 = (uint64_t *)&v129[*(int *)(v117 + 36)];
    v85 = sub_100047110(&qword_10081F2F0);
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)v84 + *(int *)(v85 + 28), v80, v81);
    *v84 = v82;
    sub_100021CC0((uint64_t)v20, v83, &qword_10083A1E0);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
    sub_10001BE90((uint64_t)v20, &qword_10083A1E0);
    v86 = enum case for RoundedCornerStyle.continuous(_:);
    v87 = type metadata accessor for RoundedCornerStyle(0);
    v88 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v130, v86, v87);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v132, 0, 0, &_swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
    v89 = (uint64_t)v116;
    sub_10004F8C8(v88, (uint64_t)v116, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v90 = v89 + *(int *)(sub_100047110(&qword_10083A210) + 36);
    v91 = v133;
    *(_OWORD *)v90 = v132;
    *(_OWORD *)(v90 + 16) = v91;
    *(_QWORD *)(v90 + 32) = v134;
    v92 = sub_100047110(&qword_10083A218);
    v93 = v111;
    *(_QWORD *)(v89 + *(int *)(v92 + 52)) = v111;
    *(_WORD *)(v89 + *(int *)(v92 + 56)) = 256;
    swift_retain(v93);
    v95 = static Alignment.center.getter(v94);
    v97 = v96;
    v98 = (uint64_t *)(v89 + *(int *)(sub_100047110(&qword_10083A220) + 36));
    *v98 = v95;
    v98[1] = v97;
    v99 = sub_100011F54(v88, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v100 = static Alignment.center.getter(v99);
    v102 = v101;
    swift_release(v93);
    swift_release(v50);
    v103 = sub_100047110(&qword_10083A1A8);
    v104 = v131;
    v105 = v131 + *(int *)(v103 + 36);
    sub_100021CC0(v89, v105, &qword_10083A1C0);
    v106 = (uint64_t *)(v105 + *(int *)(sub_100047110(&qword_10083A228) + 36));
    *v106 = v100;
    v106[1] = v102;
    sub_100021CC0(v83, v104, &qword_10083A1E8);
    sub_10001BE90(v89, &qword_10083A1C0);
    return sub_10001BE90(v83, &qword_10083A1E8);
  }
  else
  {
    v108 = *(_QWORD *)(v1 + 8);
    v109 = type metadata accessor for ActivitySharingFriendListDataProvider(0);
    v110 = sub_1000083D8((unint64_t *)&qword_1008240B0, type metadata accessor for ActivitySharingFriendListDataProvider, (uint64_t)&unk_100625DD8);
    result = EnvironmentObject.error()(0, v108, v109, v110);
    __break(1u);
  }
  return result;
}

void sub_1005587AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t KeyPath;
  char v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  unint64_t v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[4];
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Image.init(systemName:)(0x796C7069746C756DLL, 0xE800000000000000);
  v5.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.footnote(_:), v0);
  static Font.Weight.bold.getter(v5);
  v6 = static Font.system(_:weight:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  KeyPath = swift_getKeyPath(&unk_100645FA0);
  v8 = static Edge.Set.all.getter(KeyPath);
  v31[1] = v4;
  v31[2] = KeyPath;
  v31[3] = v6;
  v32 = v8;
  v33 = 0x4020000000000000;
  v34 = 0;
  v35 = 0;
  v36 = 0x4020000000000000;
  v37 = 0;
  v9 = LocalizedStringKey.init(stringLiteral:)(0x45564F4D4552, 0xE600000000000000);
  v11 = v10;
  LOBYTE(v0) = v12;
  v14 = v13;
  v15 = sub_100047110(&qword_100835D98);
  v16 = sub_1005596AC();
  View.accessibilityLabel(_:)(v9, v11, v0 & 1, v14, v15, v16);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  swift_bridgeObjectRelease(v14, v17, v18, v19, v20, v21, v22, v23);
  swift_bridgeObjectRelease(v11, v24, v25, v26, v27, v28, v29, v30);
}

double sub_100558934(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v4 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = sub_1005595AC((uint64_t *)a2);
  v9 = static MainActor.shared.getter(v8);
  if ((a1 & 1) != 0)
  {
    v10 = swift_allocObject(&unk_1007A93E0, 120, 7);
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v10 + 80) = v11;
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(v10 + 112) = *(_QWORD *)(a2 + 80);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)a2;
    *(_OWORD *)(v10 + 48) = v12;
    v13 = &unk_10083A248;
  }
  else
  {
    v10 = swift_allocObject(&unk_1007A93B8, 120, 7);
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v10 + 80) = v14;
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(v10 + 112) = *(_QWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)a2;
    *(_OWORD *)(v10 + 48) = v15;
    v13 = &unk_10083A238;
  }
  v16 = sub_10020D9C0((uint64_t)v6, (uint64_t)v13, v10);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

__n128 sub_100558A84@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  char v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  __n128 v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v18 = a1;
  v20 = static VerticalAlignment.center.getter(a1);
  sub_100558B68(v18, (uint64_t)&v28, a3, a4, a5, a6, a7, a8, a9, a10);
  v21 = v29;
  v22 = v30;
  v23 = v31;
  v24 = v34;
  result = v28;
  v26 = v32;
  v27 = v33;
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v22;
  *(_BYTE *)(a2 + 56) = v23;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v27;
  *(_BYTE *)(a2 + 96) = v24;
  return result;
}

uint64_t sub_100558B68@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  Swift::String v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  char v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t result;
  _BYTE v72[16];

  v20 = type metadata accessor for Font.TextStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v72[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v24);
  v26 = &v72[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 2);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v27);
    v28 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release(v28);
    v29._countAndFlagsBits = 32;
    v29._object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v29);
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36._countAndFlagsBits = v33;
    v36._object = v35;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v36);
    swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v44);
    v45 = LocalizedStringKey.init(stringInterpolation:)(v26);
  }
  else
  {
    v45 = LocalizedStringKey.init(stringLiteral:)(0x5F474E4952414853, 0xEE00455449564E49);
    a6 = a10;
    a5 = a9;
    a4 = a8;
    a3 = a7;
  }
  v46 = Text.init(_:tableName:bundle:comment:)(v45);
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  v53.n128_f64[0] = (*(double (**)(_BYTE *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for Font.TextStyle.caption2(_:), v20);
  static Font.Weight.bold.getter(v53);
  v54 = static Font.system(_:weight:)(v23);
  v55.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
  v56 = Text.font(_:)(v54, v46, v48, v52, v50, v55);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  swift_release(v54);
  sub_1000E4458(v46, v48, v52);
  swift_bridgeObjectRelease(v50, v63, v64, v65, v66, v67, v68, v69);
  result = static Edge.Set.all.getter(v70);
  *(_QWORD *)a2 = v56;
  *(_QWORD *)(a2 + 8) = v58;
  *(_BYTE *)(a2 + 16) = v60 & 1;
  *(_QWORD *)(a2 + 24) = v62;
  *(_BYTE *)(a2 + 32) = result;
  *(double *)(a2 + 40) = a3;
  *(double *)(a2 + 48) = a4;
  *(double *)(a2 + 56) = a5;
  *(double *)(a2 + 64) = a6;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_100558E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[9] = v6;
  v4[10] = v7;
  return swift_task_switch(sub_100558EEC, v6, v7);
}

uint64_t sub_100558EEC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (uint64_t *)v0[7];
  v2 = *v1;
  v0[11] = *v1;
  if (v2)
  {
    v3 = v1[6];
    v4 = v1[7];
    v5 = v1[8];
    v6 = v1[9];
    v7 = unk_100821ABC;
    v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100821AB8 + dword_100821AB8);
    swift_retain(v2);
    v8 = (_QWORD *)swift_task_alloc(v7);
    v0[12] = v8;
    *v8 = v0;
    v8[1] = sub_100558FE0;
    return v12(v3, v4, v5, v6);
  }
  else
  {
    v10 = type metadata accessor for ActivitySharingFriendListDataProvider(0);
    v11 = sub_1000083D8((unint64_t *)&qword_1008240B0, type metadata accessor for ActivitySharingFriendListDataProvider, (uint64_t)&unk_100625DD8);
    return EnvironmentObject.error()(0, v1[1], v10, v11);
  }
}

uint64_t sub_100558FE0(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v3 = *(_QWORD *)(*v1 + 96);
  *(_BYTE *)(*v1 + 49) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_100559040, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100559040()
{
  uint64_t v0;
  char v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_BYTE *)(v0 + 49);
  v2 = swift_release(*(_QWORD *)(v0 + 64));
  if ((v1 & 1) != 0)
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    KeyPath = swift_getKeyPath(&unk_1006460A8);
    v6 = swift_getKeyPath(&unk_1006460D0);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_BYTE *)(v0 + 48) = 16;
    swift_retain(v4);
    static Published.subscript.setter(v0 + 16, v4, KeyPath, v6);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  }
  v8 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
  v9 = sub_1000083D8((unint64_t *)&qword_10082EF70, type metadata accessor for ActivitySharingFriendDetailAlertCoordinator, (uint64_t)&unk_10063E438);
  return EnvironmentObject.error()(0, *(_QWORD *)(v3 + 24), v8, v9);
}

uint64_t sub_100559128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[13] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[14] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[15] = v6;
  v4[16] = v7;
  return swift_task_switch(sub_100559194, v6, v7);
}

uint64_t sub_100559194()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(uint64_t **)(v0 + 104);
  v2 = *v1;
  *(_QWORD *)(v0 + 136) = *v1;
  if (v2)
  {
    v3 = *(_OWORD *)(v1 + 5);
    v4 = *(_OWORD *)(v1 + 9);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 7);
    *(_OWORD *)(v0 + 48) = v4;
    *(_OWORD *)(v0 + 16) = v3;
    v5 = dword_1008218AC;
    swift_retain(v2);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 144) = v6;
    *v6 = v0;
    v6[1] = sub_100559268;
    return sub_100131410(v0 + 16);
  }
  else
  {
    v8 = v1[1];
    v9 = type metadata accessor for ActivitySharingFriendListDataProvider(0);
    v10 = sub_1000083D8((unint64_t *)&qword_1008240B0, type metadata accessor for ActivitySharingFriendListDataProvider, (uint64_t)&unk_100625DD8);
    return EnvironmentObject.error()(0, v8, v9, v10);
  }
}

uint64_t sub_100559268(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 136);
  v3 = *(_QWORD *)(*v1 + 144);
  *(_BYTE *)(*v1 + 97) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_1005592C8, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1005592C8()
{
  uint64_t v0;
  char v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_BYTE *)(v0 + 97);
  v2 = swift_release(*(_QWORD *)(v0 + 112));
  if ((v1 & 1) != 0)
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    KeyPath = swift_getKeyPath(&unk_1006460A8);
    v6 = swift_getKeyPath(&unk_1006460D0);
    *(_QWORD *)(v0 + 64) = 1;
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 80) = 0;
    *(_QWORD *)(v0 + 88) = 0;
    *(_BYTE *)(v0 + 96) = 16;
    swift_retain(v4);
    static Published.subscript.setter(v0 + 64, v4, KeyPath, v6);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  }
  v8 = *(_QWORD *)(v3 + 24);
  v9 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
  v10 = sub_1000083D8((unint64_t *)&qword_10082EF70, type metadata accessor for ActivitySharingFriendDetailAlertCoordinator, (uint64_t)&unk_10063E438);
  return EnvironmentObject.error()(0, v8, v9, v10);
}

uint64_t sub_1005593B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10055730C(a1);
}

unint64_t sub_100559400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A150;
  if (!qword_10083A150)
  {
    v1 = sub_100007050(&qword_10083A140);
    sub_100559484();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A150);
  }
  return result;
}

unint64_t sub_100559484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A158;
  if (!qword_10083A158)
  {
    v1 = sub_100007050(&qword_10083A138);
    sub_100028384(&qword_10083A160, &qword_10083A130, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A158);
  }
  return result;
}

uint64_t sub_100559520()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100559574()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 72);
  v3[0] = *(_OWORD *)(v0 + 56);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v0 + 88);
  sub_1003B0214((uint64_t)v3, v1);
}

uint64_t *sub_1005595AC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v2 = *a1;
  v3 = a1[4];
  v4 = (void *)a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[10];
  swift_retain(a1[2]);
  swift_retain(v3);
  v8 = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v2);
  return a1;
}

unint64_t sub_100559628()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A198;
  if (!qword_10083A198)
  {
    v1 = sub_100007050(&qword_10083A190);
    sub_1005596AC();
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A198);
  }
  return result;
}

unint64_t sub_1005596AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100835D90;
  if (!qword_100835D90)
  {
    v1 = sub_100007050(&qword_100835D98);
    sub_1001D2DD0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100835D90);
  }
  return result;
}

uint64_t sub_100559728(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  char v9;
  id v10;
  void *v11;
  Class isa;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v25 = v3;
    v26 = v6;
    v29 = v5 & 0xC000000000000001;
    v27 = *(id *)(a2 + 40);
    v28 = v5;
    v7 = 4;
    v8 = &selRef_headerStringForSection_isRecentAndRelevant_;
    while (1)
    {
      a2 = v7 - 4;
      v10 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      v11 = v10;
      v3 = v7 - 3;
      if (__OFADD__(a2, 1))
        break;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v11, "contactWithKeys:", isa);

      if (v13)
      {
        v14 = objc_msgSend(v13, v8[40]);
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = objc_msgSend(v27, v8[40], v25);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      if (v17)
      {
        v5 = v28;
        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v21);

LABEL_19:
          v22 = 1;
          goto LABEL_26;
        }
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v21, 0);

        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v21);

        if ((v9 & 1) != 0)
          goto LABEL_19;
      }
      else
      {

        swift_bridgeObjectRelease(v21);
        v5 = v28;
      }
      ++v7;
      v8 = &selRef_headerStringForSection_isRecentAndRelevant_;
      if (v3 == v26)
      {
        v22 = 0;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_21:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  v22 = 0;
LABEL_26:
  swift_bridgeObjectRelease(v5);
  return v22;
}

uint64_t sub_100559970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

double sub_1005599C4()
{
  uint64_t v0;

  return sub_100558934(*(_BYTE *)(v0 + 16), v0 + 24);
}

double sub_1005599D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100558A84(*(unsigned __int8 *)(v1 + 16), a1, *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80)).n128_u64[0];
  return result;
}

unint64_t sub_1005599F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A200;
  if (!qword_10083A200)
  {
    v1 = sub_100007050(&qword_10083A1D0);
    sub_100028384(&qword_10083A208, &qword_10083A1C8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_100826030, &qword_100826038, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A200);
  }
  return result;
}

uint64_t *sub_100559A9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[4];
  v5 = (void *)a1[5];
  v6 = a1[7];
  v7 = a1[9];
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);

  swift_release(v4);
  swift_release(v2);
  swift_release(v3);
  return a1;
}

uint64_t sub_100559B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10083A234);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000DA0E4;
  return sub_100558E80(a1, v4, v5, v1 + 32);
}

uint64_t sub_100559B8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100559BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10083A244);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000EA380;
  return sub_100559128(a1, v4, v5, v1 + 32);
}

uint64_t sub_100559C5C()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_10083A140);
  v1[1] = sub_100559400();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

unint64_t sub_100559CAC()
{
  unint64_t result;

  result = qword_10083A250;
  if (!qword_10083A250)
  {
    result = swift_getWitnessTable(&unk_100646180, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A250);
  }
  return result;
}

unint64_t sub_100559CF4()
{
  unint64_t result;

  result = qword_10083A258;
  if (!qword_10083A258)
  {
    result = swift_getWitnessTable(&unk_1006461B8, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A258);
  }
  return result;
}

unint64_t sub_100559D3C()
{
  unint64_t result;

  result = qword_10083A260;
  if (!qword_10083A260)
  {
    result = swift_getWitnessTable(&unk_1006461E8, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A260);
  }
  return result;
}

uint64_t sub_100559D84(uint64_t a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v15;

  AppDependency.wrappedValue.getter(&v15);
  v3 = v15;
  v15 = 0;
  v4 = objc_msgSend(v3, "wheelchairUseWithError:", &v15);

  v5 = v15;
  if (v4)
  {
    v6 = v15;
    v7 = objc_msgSend(v4, "wheelchairUse");

    sub_1004E3DDC(v7 == (id)2, a2);
    return v8;
  }
  else
  {
    v10 = v15;
    v11 = _convertNSErrorToError(_:)(v5);

    swift_willThrow(v12);
    sub_1004E3DDC(0, a2);
    v9 = v13;
    swift_errorRelease(v11);
  }
  return v9;
}

uint64_t sub_100559E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _OWORD v3[2];
  uint64_t v4;

  sub_100047110(&qword_1008201E0);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v3, 0, sizeof(v3));
  v4 = 0;
  v1 = static AppDependencyManager.shared.getter(v0);
  result = AppDependency.__allocating_init(key:manager:)(v3, v1);
  qword_10086AF18 = result;
  return result;
}

uint64_t sub_100559EFC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086AF20);
  sub_10003CE9C(v7, (uint64_t)qword_10086AF20);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100689B20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_10055A00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_10083A2B8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10083A2C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083A2B0);
  sub_100008398(v7, qword_10086AF38);
  sub_10003CE9C(v7, (uint64_t)qword_10086AF38);
  v8 = sub_100120858();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for TrendEntity, v8);
  v9._object = (void *)0x8000000100689B60;
  v9._countAndFlagsBits = 0xD000000000000014;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EntityURLRepresentation.init(stringInterpolation:)(v6, &type metadata for TrendEntity, v8);
}

double sub_10055A18C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_10081E010 != -1)
    swift_once(&qword_10081E010, sub_100559E98);
  v2 = qword_10086AF18;
  *a1 = qword_10086AF18;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_10055A1E0()
{
  unint64_t result;

  result = qword_10083A268;
  if (!qword_10083A268)
  {
    result = swift_getWitnessTable(&unk_100646220, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A268);
  }
  return result;
}

uint64_t sub_10055A224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081E020 != -1)
    swift_once(&qword_10081E020, sub_10055A00C);
  v2 = sub_100047110(&qword_10083A2B0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086AF38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_10055A29C()
{
  unint64_t result;

  result = qword_10083A270;
  if (!qword_10083A270)
  {
    result = swift_getWitnessTable(&unk_100646248, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A270);
  }
  return result;
}

unint64_t sub_10055A2E4()
{
  unint64_t result;

  result = qword_10083A278;
  if (!qword_10083A278)
  {
    result = swift_getWitnessTable(&unk_100646270, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A278);
  }
  return result;
}

unint64_t sub_10055A32C()
{
  unint64_t result;

  result = qword_10083A280;
  if (!qword_10083A280)
  {
    result = swift_getWitnessTable(&unk_1006462F0, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A280);
  }
  return result;
}

void sub_10055A370(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(unsigned __int8 *)(v1 + 8);
}

uint64_t sub_10055A37C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10055A6BC();
  v4 = URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_10055A3C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081E018 != -1)
    swift_once(&qword_10081E018, sub_100559EFC);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086AF20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_10055A438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A290;
  if (!qword_10083A290)
  {
    v1 = sub_100007050(&qword_10083A298);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A290);
  }
  return result;
}

uint64_t sub_10055A484(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100120858();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10055A4C0()
{
  unint64_t result;

  result = qword_10083A2A0;
  if (!qword_10083A2A0)
  {
    result = swift_getWitnessTable(&unk_100646320, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A2A0);
  }
  return result;
}

uint64_t sub_10055A504()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_100559D84(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
  return DisplayRepresentation.init(stringLiteral:)(v1);
}

uint64_t sub_10055A530(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10055A32C();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t initializeBufferWithCopyOfBuffer for TrendEntity(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for TrendEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t *assignWithTake for TrendEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendEntity()
{
  return &type metadata for TrendEntity;
}

unint64_t sub_10055A6BC()
{
  unint64_t result;

  result = qword_10083A2A8;
  if (!qword_10083A2A8)
  {
    result = swift_getWitnessTable(&unk_100646148, &type metadata for TrendEntity);
    atomic_store(result, (unint64_t *)&qword_10083A2A8);
  }
  return result;
}

uint64_t sub_10055A704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, char *a9@<X8>, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  int *v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a4;
  v33 = a6;
  v30 = a2;
  v31 = a3;
  v35 = a8;
  v36 = a12;
  v34 = a11;
  v16 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a1, (uint64_t)v18, (uint64_t *)&unk_10082E690);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  if ((_DWORD)v23 == 1)
  {
    UUID.init()(v23);
    sub_10001BE90((uint64_t)v18, (uint64_t *)&unk_10082E690);
    v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
  }
  v24(a9, v22, v19);
  v25 = (int *)type metadata accessor for FriendCard(0);
  v26 = &a9[v25[5]];
  v27 = v31;
  *(_QWORD *)v26 = v30;
  *((_QWORD *)v26 + 1) = v27;
  v26[16] = v32;
  a9[v25[6]] = a5 & 1;
  a9[v25[7]] = v33 & 1;
  a9[v25[8]] = a7 & 1;
  *(_QWORD *)&a9[v25[9]] = v35;
  *(_QWORD *)&a9[v25[10]] = a10;
  *(_QWORD *)&a9[v25[11]] = v34;
  v28 = objc_msgSend(a10, "currentCompetition");
  result = sub_10001BE90(a1, (uint64_t *)&unk_10082E690);
  *(_QWORD *)&a9[v25[12]] = v28;
  *(_QWORD *)&a9[v25[13]] = v36;
  return result;
}

Swift::Int sub_10055A900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  _OWORD v83[4];
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;

  v79 = type metadata accessor for Date(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v76 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v81 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v77 = (char *)&v74 - v5;
  __chkstk_darwin(v6);
  v82 = (char *)&v74 - v7;
  v8 = type metadata accessor for UUID(0);
  v80 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v75 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - v17;
  Hasher.init()(v83);
  v19 = type metadata accessor for FriendCard(0);
  v20 = v0;
  v21 = v0 + *(int *)(v19 + 20);
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(unsigned __int8 *)(v21 + 16);
  sub_1000EB3F4(*(_QWORD *)v21, v23, *(_BYTE *)(v21 + 16));
  sub_10054FFE4(v22, v23, v24);
  v26 = v25;
  String.hash(into:)(v83, v27, v25);
  swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
  if (!v24 || v24 == 2)
  {
    Hasher._combine(_:)(v22);
    v35 = v20;
  }
  else
  {
    v35 = v20;
    if (v24 == 1)
    {
      String.hash(into:)(v83, v22, v23);
      v36 = v22;
      v37 = v23;
      v38 = 1;
    }
    else
    {
      v36 = v22;
      v37 = v23;
      v38 = v24;
    }
    sub_1000EB41C(v36, v37, v38);
  }
  v39 = (int *)v19;
  v40 = v79;
  v41 = v78;
  Hasher._combine(_:)(*(unsigned __int8 *)(v35 + v39[6]));
  Hasher._combine(_:)(*(_BYTE *)(v35 + v39[7]));
  v42 = v39[10];
  v43 = *(void **)(v35 + v42);
  if (v43)
  {
    v44 = objc_msgSend(v43, "UUID");
    if (v44)
    {
      v45 = v44;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v44);

      v46 = 0;
    }
    else
    {
      v46 = 1;
    }
    v47 = v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v15, v46, 1, v8);
    sub_100045AD4((uint64_t)v15, (uint64_t)v18, (uint64_t *)&unk_10082E690);
  }
  else
  {
    v47 = v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v18, 1, 1, v8);
  }
  v48 = (uint64_t)v82;
  sub_100021CC0((uint64_t)v18, (uint64_t)v12, (uint64_t *)&unk_10082E690);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v12, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v49 = v35;
    v50 = v39;
    v51 = v40;
    v52 = v41;
    v53 = v42;
    v54 = v75;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v75, v12, v8);
    Hasher._combine(_:)(1u);
    v55 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v83, v8, v55);
    v56 = v54;
    v42 = v53;
    v41 = v52;
    v40 = v51;
    v39 = v50;
    v35 = v49;
    v48 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v56, v8);
  }
  sub_10001BE90((uint64_t)v18, (uint64_t *)&unk_10082E690);
  v57 = *(void **)(v35 + v39[11]);
  if (v57)
  {
    v58 = objc_msgSend(v57, "snapshotUploadedDate");
    if (v58)
    {
      v59 = v58;
      v60 = (uint64_t)v77;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

      v61 = 0;
      v62 = (uint64_t)v81;
    }
    else
    {
      v61 = 1;
      v62 = (uint64_t)v81;
      v60 = (uint64_t)v77;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v60, v61, 1, v40);
    sub_100045AD4(v60, v48, (uint64_t *)&unk_100828370);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v48, 1, 1, v40);
    v62 = (uint64_t)v81;
  }
  sub_100021CC0(v48, v62, (uint64_t *)&unk_100828370);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v62, 1, v40) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v63 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v76, v62, v40);
    Hasher._combine(_:)(1u);
    v64 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v83, v40, v64);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v63, v40);
  }
  sub_10001BE90(v48, (uint64_t *)&unk_100828370);
  v65 = *(void **)(v35 + v42);
  if (v65 && (v66 = objc_msgSend(v65, "currentCompetition")) != 0)
  {
    v67 = v66;
    v68 = objc_msgSend(v66, "description");

    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v71 = v70;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v71);
    String.hash(into:)(v83, v69, v71);
    swift_bridgeObjectRelease_n(v71, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v72 = *(id *)(v35 + v39[13]);
  NSObject.hash(into:)(v83);

  v87 = v83[2];
  v88 = v83[3];
  v89 = v84;
  v85 = v83[0];
  v86 = v83[1];
  return Hasher.finalize()();
}

uint64_t sub_10055AF5C()
{
  uint64_t v0;
  int *v1;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  void *v13;
  __int128 v15;
  char v16;
  _QWORD v17[2];

  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  v1 = (int *)type metadata accessor for FriendCard(0);
  v2 = (__int128 *)(v0 + v1[5]);
  v3 = *((_BYTE *)v2 + 16);
  v15 = *v2;
  v16 = v3;
  _print_unlocked<A, B>(_:_:)(&v15, v17, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v15) = *(_BYTE *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)(&v15, v17, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 540945696;
  v10._object = (void *)0xE400000000000000;
  String.append(_:)(v10);
  *(_QWORD *)&v15 = *(_QWORD *)(v0 + v1[10]);
  v11 = sub_100047110(&qword_10083A2C8);
  v12._countAndFlagsBits = Optional.description.getter(v11);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  return v17[0];
}

uint64_t type metadata accessor for FriendCard(uint64_t a1)
{
  uint64_t result;

  result = qword_10083A328;
  if (!qword_10083A328)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendCard);
  return result;
}

_QWORD *sub_10055B10C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v30);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = a3[10];
    v18 = a3[11];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + v17) = v19;
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v20;
    v21 = a3[12];
    v22 = a3[13];
    v23 = *(void **)((char *)a2 + v21);
    *(_QWORD *)((char *)a1 + v21) = v23;
    v24 = *(void **)((char *)a2 + v22);
    *(_QWORD *)((char *)a1 + v22) = v24;
    v25 = v16;
    v26 = v19;
    v27 = v20;
    v28 = v23;
    v29 = v24;
  }
  return a1;
}

void sub_10055B228(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));

}

uint64_t sub_10055B2B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = a3[10];
  v17 = a3[11];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = *(void **)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = a3[12];
  v21 = a3[13];
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = v15;
  v25 = v18;
  v26 = v19;
  v27 = v22;
  v28 = v23;
  return a1;
}

uint64_t sub_10055B3A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = *(void **)(a1 + v16);
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = v18;

  v20 = a3[10];
  v21 = *(void **)(a1 + v20);
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  v23 = v22;

  v24 = a3[11];
  v25 = *(void **)(a1 + v24);
  v26 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  v27 = v26;

  v28 = a3[12];
  v29 = *(void **)(a1 + v28);
  v30 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v30;
  v31 = v30;

  v32 = a3[13];
  v33 = *(void **)(a2 + v32);
  v34 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  v35 = v33;

  return a1;
}

uint64_t sub_10055B4D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  v17 = a3[10];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  v19 = a3[11];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[12];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = a3[13];
  v24 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);

  return a1;
}

uint64_t sub_10055B5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10055B5D8);
}

uint64_t sub_10055B5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10055B654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10055B660);
}

uint64_t sub_10055B660(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

uint64_t sub_10055B6D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100646388;
    v4[2] = &unk_1006463A0;
    v4[3] = &unk_1006463A0;
    v4[4] = &unk_1006463A0;
    v4[5] = &unk_1006463B8;
    v4[6] = &unk_1006463B8;
    v4[7] = &unk_1006463B8;
    v4[8] = &unk_1006463B8;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_10055B784(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  NSString v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  objc_super v32;

  *(_QWORD *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_cellPadding] = 0x4028000000000000;
  *(_QWORD *)&v3[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_cellInset] = 0x4030000000000000;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v6 = 0;
  }
  v32.receiver = v3;
  v32.super_class = (Class)type metadata accessor for WorkoutDetailPowerTableViewCell();
  v14 = objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v6);

  v15 = (void *)objc_opt_self(NSLayoutConstraint);
  v16 = sub_100047110((uint64_t *)&unk_100828340);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100623630;
  v18 = v14;
  v19 = objc_msgSend(v18, "contentView");
  v20 = objc_msgSend(v19, "heightAnchor");

  v21 = objc_msgSend(v20, "constraintGreaterThanOrEqualToConstant:", 132.0);
  *(_QWORD *)(v17 + 32) = v21;
  specialized Array._endMutation()(v22);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v17, v24, v25, v26, v27, v28, v29, v30);
  objc_msgSend(v15, "activateConstraints:", isa);

  return v18;
}

id sub_10055BA14(void *a1, id a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  id v38;
  void (*v39)(char *, char *, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v41;
  id v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  char *v50;
  void *v51;
  void (*v52)(char *, char *, _QWORD *);
  uint64_t v53;
  char *v54;
  id v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  _QWORD *v75;
  void *v76;
  _QWORD *v77;
  uint64_t KeyPath;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  void (*v84)(char *, _QWORD *, __n128);
  id result;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void *v90;
  uint64_t v91;
  id v92;
  void *v93;
  void (*v94)(char *, _QWORD *);
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  void *v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  void *v123;
  void *v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  Class isa;
  SEL v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  void *v140;
  void (*v141)(char *, _QWORD *);
  _QWORD *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  id v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  char *v158;
  uint64_t v159;
  id v160;
  CHWorkoutDetailHeartRateTableViewCell *v161;
  CGRect v162;

  v143 = a6;
  v156 = a5;
  v152 = a3;
  v153 = a4;
  v151 = a1;
  v144 = type metadata accessor for WorkoutDetailChartView(0);
  __chkstk_darwin(v144);
  v145 = (uint64_t)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v147 = (uint64_t)&v143 - v9;
  v10 = sub_100047110(&qword_1008202F0);
  __chkstk_darwin(v10);
  v157 = (id *)((char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for WorkoutChartViewModel(0);
  v154 = *(_QWORD *)(v12 - 8);
  v155 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v15);
  v17 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v143 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v143 - v22;
  v24 = type metadata accessor for Date(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v150 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v158 = (char *)&v143 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v143 - v30;
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v143 - v34;
  v159 = v25;
  v160 = a2;
  v148 = v14;
  v149 = v31;
  if (a2)
  {
    v36 = objc_msgSend(a2, "startDate", v33.n128_f64[0]);
    v37 = v24;
    v38 = v36;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v39 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v39(v23, v31, v37);
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v25 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v40)(v23, 0, 1, v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v37) != 1)
    {
      v41 = (_QWORD *)v37;
      v39(v35, v23, v37);
      a2 = v160;
      v42 = v151;
      goto LABEL_8;
    }
    v41 = (_QWORD *)v37;
    a2 = v160;
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v25 + 56);
    v41 = (_QWORD *)v24;
    v40(v23, 1, 1, v24, v33);
  }
  v42 = v151;
  v43 = objc_msgSend(v151, "startDate", v143);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v43);

  sub_10001BE90((uint64_t)v23, (uint64_t *)&unk_100828370);
  if (!a2)
  {
    v44 = v41;
    ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v40)(v20, 1, 1, v41);
    v45 = v159;
LABEL_12:
    v49 = objc_msgSend(v42, "endDate");
    v50 = v158;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v49);

    sub_10001BE90((uint64_t)v20, (uint64_t *)&unk_100828370);
    goto LABEL_14;
  }
LABEL_8:
  v46 = objc_msgSend(a2, "endDate", v143);
  if (v46)
  {
    v47 = v46;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v46);

    v48 = 0;
  }
  else
  {
    v48 = 1;
  }
  v44 = v41;
  ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v40)(v17, v48, 1, v41);
  sub_1001B9DF4((uint64_t)v17, (uint64_t)v20);
  v45 = v159;
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v159 + 48))(v20, 1, v44) == 1)
    goto LABEL_12;
  v50 = v158;
  (*(void (**)(char *, char *, _QWORD *))(v45 + 32))(v158, v20, v44);
LABEL_14:
  v51 = v42;
  v52 = *(void (**)(char *, char *, _QWORD *))(v45 + 16);
  v53 = (uint64_t)v149;
  v52(v149, v35, v44);
  v54 = v150;
  v52(v150, v50, v44);
  v55 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v55, "bounds");
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v63 = v62;

  v162.origin.x = v57;
  v162.origin.y = v59;
  v162.size.width = v61;
  v162.size.height = v63;
  *(double *)&v64 = CGRectGetWidth(v162) + -56.0;
  v65 = type metadata accessor for WorkoutChartProperties(0);
  swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
  v66 = v54;
  v67 = v45;
  v68 = sub_10026A764(v53, v66, 0, 1, v64, 0, 1, 10.0, 90.0);
  v69 = type metadata accessor for WorkoutDetailPowerDataStore(0);
  swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
  v70 = v51;
  v71 = v160;
  v72 = v160;
  v73 = v152;
  v74 = v153;
  v75 = sub_1004404F4(v70, v71, v73, v74);
  v76 = v35;
  v77 = v75;

  sub_10043E830(v156);
  KeyPath = swift_getKeyPath(&unk_100646400);
  v79 = swift_getKeyPath(&unk_100646428);
  swift_retain(v77);
  v80 = v157;
  static Published.subscript.getter(v157, v81, KeyPath, v79);
  swift_release(v77);
  swift_release(KeyPath);
  v82 = swift_release(v79);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v154 + 48))(v80, 1, v155, v82) == 1)
  {
    swift_release(v77);
    v83 = swift_release(v68);
    v84 = *(void (**)(char *, _QWORD *, __n128))(v67 + 8);
    v84(v50, v44, v83);
    ((void (*)(void *, _QWORD *))v84)(v76, v44);
    return (id)sub_10001BE90((uint64_t)v80, &qword_1008202F0);
  }
  v160 = v76;
  v86 = (uint64_t)v148;
  sub_100116C08((uint64_t)v80, (uint64_t)v148);
  v87 = v147;
  sub_10004F8C8(v86, v147, type metadata accessor for WorkoutChartViewModel);
  *(_QWORD *)(v87 + *(int *)(v144 + 20)) = v68;
  v88 = OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController;
  v89 = v146;
  v90 = *(void **)&v146[OBJC_IVAR___CHWorkoutDetailPowerTableViewCell_powerController];
  if (v90)
  {
    v91 = v145;
    sub_10004F8C8(v87, v145, type metadata accessor for WorkoutDetailChartView);
    swift_retain(v68);
    v92 = v90;
    dispatch thunk of UIHostingController.rootView.setter(v91);
    result = objc_msgSend(v92, "view");
    if (result)
    {
      v93 = result;
      objc_msgSend(result, "layoutIfNeeded");
      swift_release(v77);
      swift_release(v68);

      sub_100011F54(v87, type metadata accessor for WorkoutDetailChartView);
      sub_100011F54((uint64_t)v148, type metadata accessor for WorkoutChartViewModel);
      v94 = *(void (**)(char *, _QWORD *))(v159 + 8);
      v94(v50, v44);
      return (id)((uint64_t (*)(id, _QWORD *))v94)(v160, v44);
    }
    __break(1u);
    goto LABEL_29;
  }
  v95 = v87;
  v96 = v145;
  sub_10004F8C8(v95, v145, type metadata accessor for WorkoutDetailChartView);
  v97 = objc_allocWithZone((Class)sub_100047110(&qword_10082D150));
  swift_retain(v68);
  v98 = (void *)UIHostingController.init(rootView:)(v96);
  v99 = *(void **)&v89[v88];
  *(_QWORD *)&v89[v88] = v98;
  v100 = v98;

  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v101 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v102 = result;
  v103 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v102, "setBackgroundColor:", v103);

  v104 = objc_msgSend(v89, "contentView");
  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v105 = result;
  v156 = v68;
  v157 = v44;
  objc_msgSend(v104, "addSubview:", result);

  objc_msgSend(v143, "addChildViewController:", v100);
  v106 = sub_100047110((uint64_t *)&unk_100828340);
  v107 = swift_allocObject(v106, 64, 7);
  *(_OWORD *)(v107 + 16) = xmmword_100623750;
  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v108 = result;
  v109 = objc_msgSend(result, "topAnchor");

  v110 = objc_msgSend(v89, "contentView");
  v111 = objc_msgSend(v110, "topAnchor");

  v112 = objc_msgSend(v109, "constraintEqualToAnchor:constant:", v111, 12.0);
  *(_QWORD *)(v107 + 32) = v112;
  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v113 = result;
  v114 = objc_msgSend(result, "leadingAnchor");

  v115 = objc_msgSend(v89, "contentView");
  v116 = objc_msgSend(v115, "leadingAnchor");

  v117 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v116, 12.0);
  *(_QWORD *)(v107 + 40) = v117;
  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v118 = result;
  v119 = objc_msgSend(result, "trailingAnchor");

  v120 = objc_msgSend(v89, "contentView");
  v121 = objc_msgSend(v120, "trailingAnchor");

  v122 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v121, -12.0);
  *(_QWORD *)(v107 + 48) = v122;
  result = objc_msgSend(v100, "view");
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v123 = v89;
  v124 = result;
  v125 = (void *)objc_opt_self(NSLayoutConstraint);
  v126 = objc_msgSend(v124, "bottomAnchor");

  v127 = objc_msgSend(v123, "contentView");
  v128 = objc_msgSend(v127, "bottomAnchor");

  v129 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v128, -12.0);
  *(_QWORD *)(v107 + 56) = v129;
  v161 = (CHWorkoutDetailHeartRateTableViewCell *)v107;
  specialized Array._endMutation()(v130);
  v131 = v161;
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v131, v133, v134, v135, v136, v137, v138, v139);
  objc_msgSend(v125, "activateConstraints:", isa);

  objc_msgSend(v100, "didMoveToParentViewController:", v143);
  result = objc_msgSend(v100, "view");
  if (result)
  {
    v140 = result;
    objc_msgSend(result, "layoutIfNeeded");
    swift_release(v77);
    swift_release(v156);

    sub_100011F54(v147, type metadata accessor for WorkoutDetailChartView);
    sub_100011F54((uint64_t)v148, type metadata accessor for WorkoutChartViewModel);
    v141 = *(void (**)(char *, _QWORD *))(v159 + 8);
    v142 = v157;
    v141(v158, v157);
    return (id)((uint64_t (*)(id, _QWORD *))v141)(v160, v142);
  }
LABEL_36:
  __break(1u);
  return result;
}

id sub_10055C750()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailPowerTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailPowerTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailPowerTableViewCell);
}

uint64_t sub_10055C7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10055C7F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CatalogLockup(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10055C828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10055C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10055C8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10055C8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10055C938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10055C944);
}

uint64_t sub_10055C944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10055C980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10055C98C);
}

uint64_t sub_10055C98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogLockup(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FitnessPlusUpNextCardActionContext(uint64_t a1)
{
  uint64_t result;

  result = qword_10083A418;
  if (!qword_10083A418)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FitnessPlusUpNextCardActionContext);
  return result;
}

uint64_t sub_10055CA08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CatalogLockup(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10055CA70()
{
  uint64_t v0;
  Swift::String v1;
  void *object;

  _StringGuts.grow(_:)(48);
  v0 = swift_bridgeObjectRelease(0xE000000000000000);
  v1._countAndFlagsBits = CatalogLockup.description.getter(v0);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  return 0xD00000000000002ELL;
}

unint64_t sub_10055CAF0()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100047110(&qword_100820A50);
  inited = swift_initStackObject(v0, &v7);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  v2 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter((__n128)xmmword_100622F90);
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v3;
  v4 = CatalogLockup.identifier.getter(v2);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_100435AC8(inited);
}

uint64_t sub_10055CB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008398(v0, qword_10086AF50);
  v8 = sub_10003CE9C(v0, (uint64_t)qword_10086AF50);
  v9 = static Calendar.current.getter(v8);
  Date.init()(v9);
  Calendar.startOfDay(for:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10055CC5C(uint64_t a1)
{
  return sub_10055CC84(a1, qword_10086AF68, 6, 19);
}

uint64_t sub_10055CC70(uint64_t a1)
{
  return sub_10055CC84(a1, qword_10086AF80, 12, 27);
}

uint64_t sub_10055CC84(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for Date(0);
  sub_100008398(v7, a2);
  v8 = sub_10003CE9C(v7, (uint64_t)a2);
  return sub_10055CCF4(a3, a4, v8);
}

uint64_t sub_10055CCE0(uint64_t a1)
{
  return sub_10055CC84(a1, qword_10086AF98, 18, 35);
}

uint64_t sub_10055CCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a2;
  v30 = a1;
  v31 = a3;
  v29 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - v17;
  v20 = static Calendar.current.getter(v19);
  Date.init()(v20);
  Calendar.startOfDay(for:)(v15);
  v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27(v15, v12);
  v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v22 = v21(v11, v8);
  static Calendar.current.getter(v22);
  v23 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Calendar.Component.hour(_:), v29);
  v24 = (uint64_t)v28;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v5, v30, v18, 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  v21(v11, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v24, 1, v12) == 1)
  {
    sub_10018DFE8(v24);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000023, 0x80000001006A5C30, "FitnessApp/ChartingDateConstants.swift", 38, 2, v26, 0);
    __break(1u);
  }
  else
  {
    v27(v18, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v31, v24, v12);
  }
  return result;
}

char *sub_10055CFA8(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  NSString v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  id v28;
  objc_super v30;

  v6 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView;
  v7 = objc_allocWithZone((Class)type metadata accessor for AchievementCellContentView());
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v6] = v9;
  v10 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = sub_100032490();
  objc_msgSend(v11, "setBackgroundColor:", v12);

  v13 = objc_msgSend(v11, "layer");
  objc_msgSend(v13, "setCornerRadius:", 12.0);

  objc_msgSend(v11, "setClipsToBounds:", 1);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v8[v10] = v11;
  v14 = *(void **)(*(_QWORD *)&v3[v6] + OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView);
  *(_QWORD *)&v8[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementBadgeView] = v14;
  v15 = v14;

  if (a3)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    v16 = 0;
  }
  v30.receiver = v8;
  v30.super_class = (Class)type metadata accessor for WorkoutDetailAwardTableViewCell();
  v24 = (char *)objc_msgSendSuper2(&v30, "initWithStyle:reuseIdentifier:", a1, v16);

  v25 = *(void **)&v24[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView];
  v26 = *(_QWORD *)&v24[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView];
  v27 = v24;
  objc_msgSend(v25, "addSubview:", v26);
  v28 = objc_msgSend(v27, "contentView");
  objc_msgSend(v28, "addSubview:", v25);

  sub_10055D260();
  return v27;
}

void sub_10055D260()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  Class isa;

  v1 = v0;
  v43 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 96, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100624C80;
  v4 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, sub_100032C10());
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "bottomAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "bottomAnchor");

  sub_100032C10();
  v13 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, -v12);

  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(v4, "leadingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v3 + 48) = v17;
  v18 = objc_msgSend(v4, "trailingAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v3 + 56) = v21;
  v22 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView];
  v23 = objc_msgSend(v22, "topAnchor");
  v24 = objc_msgSend(v4, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v3 + 64) = v25;
  v26 = objc_msgSend(v22, "bottomAnchor");
  v27 = objc_msgSend(v4, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v3 + 72) = v28;
  v29 = objc_msgSend(v22, "leadingAnchor");
  v30 = objc_msgSend(v4, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v3 + 80) = v31;
  v32 = objc_msgSend(v22, "trailingAnchor");
  v33 = objc_msgSend(v4, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v3 + 88) = v34;
  specialized Array._endMutation()(v35);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v36, v37, v38, v39, v40, v41, v42);
  objc_msgSend(v43, "activateConstraints:", isa);

}

void sub_10055D6A0(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  void *v20;
  __n128 v21;
  _QWORD v22[2];

  v6 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017EFA4(a1, a2, a3);
  sub_100047110((uint64_t *)&unk_10083D730);
  v12 = a1;
  LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
  v13 = EntityProperty<>.init(title:)(v11);
  v14 = v12;
  LOBYTE(v22[0]) = objc_msgSend(v14, "unearned", swift_retain(v13).n128_f64[0]) ^ 1;
  EntityProperty.wrappedValue.setter(v22);

  swift_release(v13);
  v22[0] = &_swiftEmptyArrayStorage;
  v15 = sub_1002B7C54();
  v16 = sub_100047110((uint64_t *)&unk_10083D740);
  v17 = sub_1001121C8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v22, v16, v17, v6, v15);
  v22[0] = v13;
  v22[1] = v14;
  v18 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v19 = sub_1000F49B4();
  v20 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v22, v8, &type metadata for AwardEntity, v19);
  UIView.annotate(with:)(v20, v21);

}

id sub_10055D9C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAwardTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailAwardTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailAwardTableViewCell);
}

void sub_10055DA60()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_achievementCellContentView;
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AchievementCellContentView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR___CHWorkoutDetailAwardTableViewCell_insetView;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = sub_100032490();
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v4, "layer");
  objc_msgSend(v6, "setCornerRadius:", 12.0);

  objc_msgSend(v4, "setClipsToBounds:", 1);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailAwardTableViewCell.swift", 48, 2, 38, 0);
  __break(1u);
}

id sub_10055DBD0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PaceFormatter()), "init");
  qword_10083A490 = (uint64_t)result;
  return result;
}

id sub_10055DC00()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NSMeasurementFormatter), "init");
  qword_10083A498 = (uint64_t)result;
  return result;
}

id sub_10055DC30()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v0, "setMaximumFractionDigits:", 0);
  result = objc_msgSend(v0, "setNumberStyle:", 3);
  qword_10083A4A0 = (uint64_t)v0;
  return result;
}

id sub_10055DC90(void *a1)
{
  uint64_t v1;
  id result;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  uint64_t v11;
  id v12;

  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "unitManager");
  if (*(double *)&result == 0.0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    v5 = objc_msgSend(result, "userDistanceHKUnitForDistanceType:", 1);

    v6 = objc_msgSend((id)objc_opt_self(HKUnit), "secondUnit");
    v7 = objc_msgSend(v5, "unitDividedByUnit:", v6);

    v8 = objc_msgSend(a1, "isCompatibleWithUnit:", v7);
    if ((_DWORD)v8)
    {
      objc_msgSend(a1, "doubleValueForUnit:", v7);
      v10 = v9;

      *(double *)&result = 1.0 / v10;
    }
    else
    {
      v11 = static os_log_type_t.error.getter(v8);
      v12 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v12, "This isn't good: Supplied quantity is not compatible with the unit returned from the trend type!", 96, 2, _swiftEmptyArrayStorage);

      *(double *)&result = 0.0;
    }
  }
  return result;
}

uint64_t sub_10055DE00(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  char v11;
  double v12;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  Class isa;
  id v21;
  uint64_t v22;

  v2 = type metadata accessor for DateComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = COERCE_DOUBLE(sub_1000363A0(a1, 7));
  v7 = 0;
  if ((v8 & 1) == 0)
  {
    v9 = v6;
    v10 = COERCE_DOUBLE(sub_10055DC90(a1));
    if ((v11 & 1) == 0)
    {
      v12 = v10;
      if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) != 0)
      {
        v14 = (void *)objc_opt_self(FIUIFormattingManager);
        v15 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v9);
        v16 = objc_msgSend(v14, "stringWithNumber:decimalPrecision:roundingMode:", v15, 3, 4);

        if (!v16)
          return 0;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v18 = v17;

        if (qword_10081E048 != -1)
          swift_once(&qword_10081E048, sub_10055DBD0);
        v19 = (void *)qword_10083A490;
        sub_100265BEC(v12);
        isa = DateComponents._bridgeToObjectiveC()().super.isa;
        v21 = objc_msgSend(v19, "stringForObjectValue:", isa);

        if (v21)
        {
          v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          return v7;
        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        swift_bridgeObjectRelease(v18);
      }
    }
    return 0;
  }
  return v7;
}

id sub_10055E03C(char a1, double a2)
{
  uint64_t v2;
  void *v3;
  id result;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
  if ((a1 & 1) == 0)
  {
    result = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "localizedShortUnitStringForDistanceType:", 1);
    if (result)
      goto LABEL_6;
    __break(1u);
    goto LABEL_8;
  }
  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "unitManager");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  v7 = objc_msgSend(result, "userDistanceUnitForDistanceType:", 1);

  result = objc_msgSend(v3, "localizedLongUnitStringForDistanceUnit:distanceInUnit:", v7, a2);
  if (result)
  {
LABEL_6:
    v8 = result;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v11 = v10;

    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18 = sub_100047110((uint64_t *)&unk_100827460);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100622F90;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_100038CF8();
    *(_QWORD *)(v19 + 32) = v9;
    *(_QWORD *)(v19 + 40) = v11;
    v20 = static String.localizedStringWithFormat(_:_:)(v15, v17, v19);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
    return (id)v20;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_10055E294(unsigned __int8 a1)
{
  id v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v33;

  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  if (((a1 - 3) & 0xFB) != 0)
  {
    if (a1 <= 8u && ((1 << a1) & 0x127) != 0)
    {
      sub_1000367D4(a1);
      if (v10)
        goto LABEL_9;
LABEL_13:
      swift_bridgeObjectRelease(v8);
      v29 = sub_10025DBE8();
      v30 = swift_allocError(&type metadata for TrendsFormattingManager.TextError, v29, 0, 0);
      *v31 = 0;
      swift_willThrow(v30);
      return v1;
    }
LABEL_11:
    sub_1000367D4(a1);
    if (v28)
    {
      v22 = v28;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  if (a1 > 8u || ((1 << a1) & 0x127) == 0)
    goto LABEL_11;
  sub_1000367D4(a1);
  if (!v10)
    goto LABEL_13;
LABEL_9:
  v11 = v9;
  v12 = v10;
  v13 = objc_msgSend(v3, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = sub_100047110((uint64_t *)&unk_100827460);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100622F90;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_100038CF8();
  *(_QWORD *)(v20 + 32) = v11;
  *(_QWORD *)(v20 + 40) = v12;
  static String.localizedStringWithFormat(_:_:)(v16, v18, v20);
  v22 = v21;
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v20);
LABEL_10:
  v23 = sub_100038CA0();
  v24 = StringProtocol.localizedUppercase.getter(&type metadata for String, v23);
  v26 = v25;
  swift_bridgeObjectRelease(v22);
  v27 = (void *)sub_100036218();
  v1 = sub_1000387C4(v33, v8, v24, v26, v27);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v26);

  return v1;
}

uint64_t sub_10055E5F4(void *a1, char a2)
{
  id v3;
  char v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;

  v3 = sub_1000363A0(a1, a2);
  if ((v4 & 1) != 0)
    return 0;
  v5 = *(double *)&v3;
  sub_1000367D4(a2);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v5);
    v9 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", v8, qword_1006465C8[a2], 4);

    if (v9)
    {
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v19 = sub_100047110((uint64_t *)&unk_100827460);
      v20 = swift_allocObject(v19, 112, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100620BC0;
      *(_QWORD *)(v20 + 56) = &type metadata for String;
      v21 = sub_100038CF8();
      *(_QWORD *)(v20 + 64) = v21;
      *(_QWORD *)(v20 + 32) = v10;
      *(_QWORD *)(v20 + 40) = v12;
      v22 = sub_100038CA0();
      v23 = StringProtocol.localizedUppercase.getter(&type metadata for String, v22);
      v25 = v24;
      v26 = swift_bridgeObjectRelease(v7);
      *(_QWORD *)(v20 + 96) = &type metadata for String;
      *(_QWORD *)(v20 + 104) = v21;
      *(_QWORD *)(v20 + 72) = v23;
      *(_QWORD *)(v20 + 80) = v25;
      v7 = String.init(format:_:)(v16, v18, v20, v26);
      swift_bridgeObjectRelease(v18);
      return v7;
    }
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  return v7;
}

void *sub_10055E814(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = objc_msgSend(objc_allocWithZone((Class)FIUIWorkoutActivityType), "initWithActivityTypeIdentifier:isIndoor:", 52, 0);
  v4 = sub_10055DE00(a1);
  v8 = v7;
  if (v7)
  {
    v9 = v4;
    v10 = v5;
    v11 = v6;
    v12 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "localizedSpeedUnitStringForActivityType:", v3);
    v13 = v12;
    if (v12)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v36 = v15;
      v37 = v14;

      v39 = v9;
      v35 = (id)objc_opt_self(NSBundle);
      v16 = objc_msgSend(v35, "mainBundle");
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, 0, 0);

      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v22 = sub_100047110((uint64_t *)&unk_100827460);
      v23 = swift_allocObject(v22, 112, 7);
      *(_OWORD *)(v23 + 16) = xmmword_100620BC0;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      v24 = sub_100038CF8();
      *(_QWORD *)(v23 + 32) = v10;
      *(_QWORD *)(v23 + 40) = v11;
      *(_QWORD *)(v23 + 96) = &type metadata for String;
      *(_QWORD *)(v23 + 104) = v24;
      *(_QWORD *)(v23 + 64) = v24;
      *(_QWORD *)(v23 + 72) = v37;
      *(_QWORD *)(v23 + 80) = v36;
      swift_bridgeObjectRetain(v11);
      v38 = static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
      v26 = v25;
      swift_bridgeObjectRelease(v21);
      v27 = objc_msgSend(v35, "mainBundle", swift_bridgeObjectRelease(v23).n128_f64[0]);
      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, 0, 0);

      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v32 = v31;

      v33 = swift_allocObject(v22, 112, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100620BC0;
      swift_bridgeObjectRelease(v11);
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 64) = v24;
      *(_QWORD *)(v33 + 32) = v39;
      *(_QWORD *)(v33 + 40) = v8;
      *(_QWORD *)(v33 + 96) = &type metadata for String;
      *(_QWORD *)(v33 + 104) = v24;
      *(_QWORD *)(v33 + 72) = v38;
      *(_QWORD *)(v33 + 80) = v26;
      v13 = (void *)static String.localizedStringWithFormat(_:_:)(v30, v32, v33);

      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v8);

    }
  }
  else
  {

    return 0;
  }
  return v13;
}

void sub_10055EB14(void *a1@<X0>, unsigned __int8 a2@<W1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  id v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned __int8 v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  NSString v48;
  unsigned __int8 v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  if (((a2 - 3) & 0xFB) == 0)
  {
    v38 = sub_10055DE00(a1);
    if (!v39)
      goto LABEL_22;
    v41 = v38;
    v24 = v39;
    v42 = v40;
    if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
    {
      sub_1000367D4(a2);
      if (v44)
      {
        v45 = v44;
        v71 = a4;
        v68 = v43;
        v46 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v69 = v42;
        v47 = v41;
        v48 = String._bridgeToObjectiveC()();
        v49 = a3;
        v50 = objc_msgSend(v46, "localizedStringForKey:value:table:", v48, 0, 0);

        v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v53 = v52;

        a3 = v49;
        v54 = sub_100047110((uint64_t *)&unk_100827460);
        v55 = swift_allocObject(v54, 72, 7);
        *(_OWORD *)(v55 + 16) = xmmword_100622F90;
        *(_QWORD *)(v55 + 56) = &type metadata for String;
        *(_QWORD *)(v55 + 64) = sub_100038CF8();
        *(_QWORD *)(v55 + 32) = v68;
        *(_QWORD *)(v55 + 40) = v45;
        v56 = v51;
        v41 = v47;
        v42 = v69;
        static String.localizedStringWithFormat(_:_:)(v56, v53, v55);
        v58 = v57;
        swift_bridgeObjectRelease(v53);
        swift_bridgeObjectRelease(v55);
LABEL_14:
        v59 = sub_100038CA0();
        v60 = StringProtocol.localizedUppercase.getter(&type metadata for String, v59);
        v62 = v61;
        swift_bridgeObjectRelease(v58);
        v36 = sub_10055F5AC(a3);
        sub_100437EC0(v41, v24, v60, v62, v36, 0, v71);
        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(v24);
        v37 = v62;
        goto LABEL_15;
      }
    }
    else
    {
      sub_1000367D4(a2);
      if (v64)
      {
        v58 = v64;
        v71 = a4;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease(v42);
LABEL_21:
    swift_bridgeObjectRelease(v24);
    goto LABEL_22;
  }
  v7 = sub_1000363A0(a1, a2);
  if ((v8 & 1) == 0)
  {
    v9 = *(double *)&v7;
    if (a2 <= 8u && ((1 << a2) & 0x127) != 0)
    {
      sub_1000367D4(a2);
      if (v11)
      {
        v12 = v11;
        v70 = v10;
        v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v14 = a3;
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v15, 0, 0);

        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v19 = v18;

        v20 = sub_100047110((uint64_t *)&unk_100827460);
        v21 = swift_allocObject(v20, 72, 7);
        *(_OWORD *)(v21 + 16) = xmmword_100622F90;
        *(_QWORD *)(v21 + 56) = &type metadata for String;
        *(_QWORD *)(v21 + 64) = sub_100038CF8();
        *(_QWORD *)(v21 + 32) = v70;
        *(_QWORD *)(v21 + 40) = v12;
        v22 = v17;
        a3 = v14;
        static String.localizedStringWithFormat(_:_:)(v22, v19, v21);
        v24 = v23;
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v21);
        goto LABEL_7;
      }
    }
    else
    {
      sub_1000367D4(a2);
      if (v63)
      {
        v24 = v63;
LABEL_7:
        v25 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v9);
        v26 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", v25, qword_1006465C8[(char)a2], 4);

        if (v26)
        {
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
          v29 = v28;

          v30 = sub_100038CA0();
          v31 = StringProtocol.localizedUppercase.getter(&type metadata for String, v30);
          v33 = v32;
          swift_bridgeObjectRelease(v24);
          v34 = sub_10055F5AC(a3);
          v35 = a4;
          v36 = v34;
          sub_100437EC0(v27, v29, v31, v33, v34, 0, v35);
          swift_bridgeObjectRelease(v29);
          v37 = v33;
LABEL_15:
          swift_bridgeObjectRelease(v37);
          swift_release(v36);
          return;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v65 = sub_10025DBE8();
  v66 = swift_allocError(&type metadata for TrendsFormattingManager.TextError, v65, 0, 0);
  *v67 = 0;
  swift_willThrow(v66);
}

void sub_10055F008(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  if (((a1 - 3) & 0xFB) != 0)
  {
    if (a1 <= 8u && ((1 << a1) & 0x127) != 0)
    {
      sub_1000367D4(a1);
      if (v11)
      {
        v12 = v10;
        v13 = v11;
        v14 = objc_msgSend(v4, "mainBundle");
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, 0, 0);

        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v19 = v18;

        v20 = sub_100047110((uint64_t *)&unk_100827460);
        v21 = swift_allocObject(v20, 72, 7);
        *(_OWORD *)(v21 + 16) = xmmword_100622F90;
        *(_QWORD *)(v21 + 56) = &type metadata for String;
        *(_QWORD *)(v21 + 64) = sub_100038CF8();
        *(_QWORD *)(v21 + 32) = v12;
        *(_QWORD *)(v21 + 40) = v13;
        static String.localizedStringWithFormat(_:_:)(v17, v19, v21);
        v23 = v22;
        v24 = v19;
LABEL_10:
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v21);
LABEL_11:
        v37 = sub_100038CA0();
        v38 = StringProtocol.localizedUppercase.getter(&type metadata for String, v37);
        v40 = v39;
        swift_bridgeObjectRelease(v23);
        v41 = sub_10055F5AC(a2);
        sub_100437EC0(v46, v9, v38, v40, v41, 0, a3);
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v40);
        swift_release(v41);
        return;
      }
      goto LABEL_14;
    }
LABEL_12:
    sub_1000367D4(a1);
    if (v42)
    {
      v23 = v42;
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (a1 > 8u || ((1 << a1) & 0x127) == 0)
    goto LABEL_12;
  sub_1000367D4(a1);
  if (v26)
  {
    v27 = v25;
    v28 = v26;
    v29 = objc_msgSend(v4, "mainBundle");
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v35 = sub_100047110((uint64_t *)&unk_100827460);
    v21 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100622F90;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = sub_100038CF8();
    *(_QWORD *)(v21 + 32) = v27;
    *(_QWORD *)(v21 + 40) = v28;
    static String.localizedStringWithFormat(_:_:)(v32, v34, v21);
    v23 = v36;
    v24 = v34;
    goto LABEL_10;
  }
LABEL_14:
  swift_bridgeObjectRelease(v9);
  v43 = sub_10025DBE8();
  v44 = swift_allocError(&type metadata for TrendsFormattingManager.TextError, v43, 0, 0);
  *v45 = 0;
  swift_willThrow(v44);
}

id sub_10055F428()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsFormattingManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10055F468(char a1)
{
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  if ((a1 & 1) != 0)
  {
    if (qword_10081E050 != -1)
      swift_once(&qword_10081E050, sub_10055DC00);
    v5 = (void *)qword_10083A498;
    objc_msgSend((id)qword_10083A498, "setUnitStyle:", 3);
    v6 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "hours");
    v3 = objc_msgSend(v5, "stringFromUnit:", v6);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  }

  return v4;
}

uint64_t sub_10055F5AC(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, _QWORD, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = a1;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, _QWORD, uint64_t))(v7 + 104);
  if (v2 == 2 || (a1 & 1) != 0)
  {
    v10(v9, enum case for Font.TextStyle.title3(_:), v6);
    v16 = enum case for Font.Design.rounded(_:);
    v17 = type metadata accessor for Font.Design(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v5, v16, v17);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
    v15 = static Font.Weight.medium.getter(v19);
  }
  else
  {
    v10(v9, enum case for Font.TextStyle.title(_:), v6);
    v11 = enum case for Font.Design.rounded(_:);
    v12 = type metadata accessor for Font.Design(0);
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v5, v11, v12);
    v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
    v15 = static Font.Weight.semibold.getter(v14);
  }
  v20 = static Font.system(_:design:weight:)(v9, v5, *(_QWORD *)&v15, 0);
  sub_100184224((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v20;
}

uint64_t sub_10055F768(uint64_t a1, uint64_t a2)
{
  double v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;

  v4 = (double)a1 / (round((double)a2 * 100.0) / 100.0);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  if (qword_10081E058 != -1)
    swift_once(&qword_10081E058, sub_10055DC30);
  v10 = (void *)qword_10083A4A0;
  v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v4);
  v12 = objc_msgSend(v10, "stringFromNumber:", v11);

  if (v12)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v34 = v14;

    v15 = (void *)objc_opt_self(FIUIFormattingManager);
    v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
    v17 = objc_msgSend(v15, "stringWithNumber:decimalPrecision:", v16, 1);

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      v21 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
      v22 = objc_msgSend(v15, "stringWithNumber:decimalPrecision:", v21, 1);

      if (v22)
      {
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        v26 = sub_100047110((uint64_t *)&unk_100827460);
        v27 = swift_allocObject(v26, 72, 7);
        *(_OWORD *)(v27 + 16) = xmmword_100622F90;
        *(_QWORD *)(v27 + 56) = &type metadata for String;
        *(_QWORD *)(v27 + 64) = sub_100038CF8();
        *(_QWORD *)(v27 + 32) = v13;
        *(_QWORD *)(v27 + 40) = v34;
        v28 = static String.localizedStringWithFormat(_:_:)(v35, v9, v27);
        v30 = v29;
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v9);
        v31 = (void *)sub_100036218();
        v32 = sub_100438CCC(v18, v20, v23, v25, v28, v30, v31);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v30);

        return (uint64_t)v32;
      }
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      v20 = v34;
    }
    swift_bridgeObjectRelease(v20);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x80000001006A5E30, "FitnessApp/TrendsFormattingManager.swift", 40, 2, 271, 0);
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for TrendsFormattingManager.TextError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10055FB14 + 4 * byte_1006464D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10055FB48 + 4 * asc_1006464D0[v4]))();
}

uint64_t sub_10055FB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055FB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10055FB58);
  return result;
}

uint64_t sub_10055FB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10055FB6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10055FB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055FB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrendsFormattingManager.TextError()
{
  return &type metadata for TrendsFormattingManager.TextError;
}

unint64_t sub_10055FB98()
{
  unint64_t result;

  result = qword_10083A4D8;
  if (!qword_10083A4D8)
  {
    result = swift_getWitnessTable(&unk_100646554, &type metadata for TrendsFormattingManager.TextError);
    atomic_store(result, (unint64_t *)&qword_10083A4D8);
  }
  return result;
}

uint64_t sub_10055FBDC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10055FBFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t sub_10055FC78@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v22[1] = a5;
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008324C0);
  v14 = __chkstk_darwin(v13);
  v16 = (_QWORD *)((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v16 = static Alignment.topLeading.getter(v14);
  v16[1] = v17;
  v18 = sub_100047110(&qword_10083A530);
  sub_10055FDCC(a1, a2, a3, a4, (uint64_t)v16 + *(int *)(v18 + 44));
  static AccessibilityChildBehavior.combine.getter(v19);
  v20 = sub_100028384(&qword_1008324C8, &qword_1008324C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.accessibilityElement(children:)(v12, v13, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_10001BE90((uint64_t)v16, &qword_1008324C0);
}

void sub_10055FDCC(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  int v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD v112[5];
  __int128 v113;

  v98 = a4;
  v109 = a3;
  v103 = a5;
  v97 = type metadata accessor for AccessibilityTraits(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v96 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for AccessibilityActionKind(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for ColorScheme(0);
  v87 = *(_QWORD *)(v88 - 8);
  v9 = __chkstk_darwin(v88);
  v86 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for Material(0, v9);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10082CC08);
  __chkstk_darwin(v12);
  v74 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for DynamicTypeSize(0);
  v66[1] = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66[0] = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100047110(&qword_10083A538);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100047110(&qword_10083A540);
  __chkstk_darwin(v68);
  v73 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100047110(&qword_10083A548);
  __chkstk_darwin(v69);
  v75 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100047110(&qword_10083A550);
  __chkstk_darwin(v80);
  v76 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_10083A558);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v81 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100047110(&qword_10083A560);
  v102 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v82 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v85 = (char *)v66 - v22;
  __chkstk_darwin(v23);
  v89 = (char *)v66 - v24;
  __chkstk_darwin(v25);
  v94 = (char *)v66 - v26;
  __chkstk_darwin(v27);
  v93 = (char *)v66 - v28;
  v29 = sub_100047110(&qword_10083A568);
  __chkstk_darwin(v29);
  v101 = (char *)v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v100 = (char *)v66 - v32;
  v33 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v33);
  v35 = (_OWORD *)((char *)v66 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = (int *)type metadata accessor for DashboardCardView(0);
  __chkstk_darwin(v36);
  v38 = (_QWORD *)((char *)v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_100047110(&qword_10083A570);
  __chkstk_darwin(v39);
  v41 = (char *)v66 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100047110(&qword_100832B38);
  __chkstk_darwin(v104);
  v42 = sub_100047110(&qword_100832B40);
  __chkstk_darwin(v42);
  v106 = (char *)v66 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100047110(&qword_100832B28);
  __chkstk_darwin(v105);
  v108 = (char *)v66 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100047110(&qword_100832B30);
  __chkstk_darwin(v45);
  v99 = (char *)v66 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v107 = (char *)v66 - v48;
  __chkstk_darwin(v49);
  v110 = (char *)v66 - v50;
  sub_1000252E0((uint64_t)a1, (uint64_t)&v113);
  v112[3] = type metadata accessor for ActivityDashboardCardCell();
  v112[4] = &off_1007A97A0;
  v112[0] = a2;
  *v38 = swift_getKeyPath(&unk_100646650);
  v51 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v38, v51, 0);
  sub_10002411C(&v113, (uint64_t)v38 + v36[5]);
  sub_100045AD4((uint64_t)v112, (uint64_t)v38 + v36[6], &qword_10081F600);
  v52 = v109;
  *(_QWORD *)((char *)v38 + v36[7]) = v109;
  *((_BYTE *)v38 + v36[8]) = 0;
  *((_BYTE *)v38 + v36[9]) = 0;
  v53 = (char *)v35 + *(int *)(v33 + 20);
  v54 = enum case for RoundedCornerStyle.continuous(_:);
  v55 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
  __asm { FMOV            V0.2D, #20.0 }
  *v35 = _Q0;
  v61 = (uint64_t)&v41[*(int *)(v39 + 36)];
  sub_10004F8C8((uint64_t)v35, v61, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v61 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_10004F8C8((uint64_t)v38, (uint64_t)v41, type metadata accessor for DashboardCardView);
  v62 = a2;
  swift_retain(v52);
  sub_100011F54((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100011F54((uint64_t)v38, type metadata accessor for DashboardCardView);
  v63 = a1[3];
  v64 = a1[4];
  sub_100016804(a1, v63);
  (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
  __asm { BR              X10 }
}

uint64_t sub_1005605F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  sub_1000EB41C(a1, a2, 1);
  sub_100021CC0(v2, v3, &qword_10083A570);
  *(double *)(v3 + *(int *)(*(_QWORD *)(v5 - 264) + 36)) = 1.0;
  v6 = sub_10001BE90(v2, &qword_10083A570);
  v7 = static Alignment.center.getter(v6);
  sub_1003ED1AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, *(_QWORD *)(v5 - 248), 0.0, 1, 0.0, 1, v7, v8);
  sub_10001BE90(v3, &qword_100832B38);
  v9 = v4[3];
  v10 = v4[4];
  sub_100016804(v4, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  return ((uint64_t (*)(uint64_t))((char *)&loc_1005606C8 + *((int *)qword_1005610C8 + v12)))(v11);
}

uint64_t sub_1005606DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t OpaqueTypeConformance2;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  NSString v88;
  id v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  unint64_t v93;
  uint64_t v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  SEL v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  sub_1000EB41C(a1, a2, 1);
  KeyPath = swift_getKeyPath(&unk_100646680);
  v9 = swift_allocObject(&unk_1007A97E0, 17, 7);
  *(_BYTE *)(v9 + 16) = 0;
  v10 = *(_QWORD *)(v7 - 232);
  sub_100021CC0(v2, v10, &qword_100832B40);
  v11 = (uint64_t *)(v10 + *(int *)(*(_QWORD *)(v7 - 256) + 36));
  *v11 = KeyPath;
  v11[1] = (uint64_t)sub_1005637DC;
  v11[2] = v9;
  sub_10001BE90(v2, &qword_100832B40);
  v12 = sub_100561140(v4);
  LOBYTE(v9) = v13 & 1;
  v14 = static Alignment.center.getter(v12);
  v15 = *(_QWORD *)(v7 - 240);
  sub_1003ED204(0.0, 1, 0.0, 1, 0.0, 1, *(double *)&v12, v9, v15, 0.0, 1, 0.0, 1, v14, v16);
  sub_10001BE90(v10, &qword_100832B28);
  sub_100045AD4(v15, v6, &qword_100832B30);
  v17 = v4[3];
  v18 = v4[4];
  sub_100016804(v4, v17);
  LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  sub_1000252E0((uint64_t)v4, v7 - 144);
  if ((v17 & 1) == 0)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v7 - 144));
LABEL_6:
    v132 = 1;
    v133 = *(_QWORD *)(v7 - 272);
    v134 = *(_QWORD *)(v7 - 280);
    v135 = *(_QWORD *)(v7 - 288);
    v131 = *(_QWORD *)(v7 - 296);
    goto LABEL_7;
  }
  v19 = *(_QWORD *)(v7 - 120);
  v20 = *(_QWORD *)(v7 - 112);
  sub_100016804((_QWORD *)(v7 - 144), v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  v23 = v22;
  LODWORD(v20) = v24;
  sub_1000EB41C(v21, v22, v24);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v7 - 144));
  if ((_DWORD)v20 == 3 && !(v21 | v23))
    goto LABEL_6;
  v25 = Image.init(systemName:)(0xD000000000000011, 0x800000010068EBA0);
  v26 = static Font.title3.getter();
  static Font.Weight.bold.getter(v27);
  v28 = Font.weight(_:)(v26);
  swift_release(v26);
  v29 = swift_getKeyPath(&unk_1006466B0);
  *(_QWORD *)(v7 - 184) = v25;
  __asm { FMOV            V0.2D, #-6.0 }
  *(_OWORD *)(v7 - 176) = _Q0;
  *(_QWORD *)(v7 - 160) = v29;
  *(_QWORD *)(v7 - 152) = v28;
  v35 = *(_QWORD *)(v7 - 568);
  v36 = *(_QWORD *)(v7 - 576);
  v37 = *(_QWORD *)(v7 - 560);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v36, enum case for DynamicTypeSize.medium(_:), v37);
  v38 = sub_100047110(&qword_10083A580);
  v39 = sub_1005637FC();
  v40 = *(_QWORD *)(v7 - 536);
  View.dynamicTypeSize(_:)(v36, v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
  swift_release(*(_QWORD *)(v7 - 184));
  swift_release(*(_QWORD *)(v7 - 160));
  v41 = swift_release(*(_QWORD *)(v7 - 152));
  v42 = *(_QWORD *)(v7 - 504);
  ((void (*)(__n128))static SymbolRenderingMode.palette.getter)(v41);
  v43 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
  v44 = swift_getKeyPath(&unk_1006466E0);
  v45 = *(_QWORD *)(v7 - 512);
  v46 = (uint64_t *)(v45 + *(int *)(*(_QWORD *)(v7 - 552) + 36));
  v47 = sub_100047110(&qword_10082CC18);
  sub_100021CC0(v42, (uint64_t)v46 + *(int *)(v47 + 28), &qword_10082CC08);
  *v46 = v44;
  v48 = *(_QWORD *)(v7 - 528);
  v49 = *(_QWORD *)(v7 - 520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v45, v40, v49);
  sub_10001BE90(v42, &qword_10082CC08);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v40, v49);
  v51 = static Color.black.getter(v50);
  v52 = *(_QWORD *)(v7 - 480);
  ((void (*)(void))static Material.ultraThin.getter)();
  v53 = *(_QWORD *)(v7 - 496);
  v54 = (uint64_t *)(v53 + *(int *)(*(_QWORD *)(v7 - 544) + 36));
  v55 = sub_100047110(&qword_10083A5A0);
  v56 = *(_QWORD *)(v7 - 472);
  v57 = *(_QWORD *)(v7 - 464);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))((char *)v54 + *(int *)(v55 + 52), v52, v57);
  *v54 = v51;
  sub_100021CC0(v45, v53, &qword_10083A540);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v52, v57);
  sub_10001BE90(v45, &qword_10083A540);
  v58 = swift_getKeyPath(&unk_100646710);
  v59 = *(_QWORD *)(v7 - 400);
  v60 = *(_QWORD *)(v7 - 408);
  v61 = *(_QWORD *)(v7 - 392);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v60, enum case for ColorScheme.light(_:), v61);
  v62 = *(_QWORD *)(v7 - 456);
  v63 = v5;
  v64 = *(_QWORD *)(v7 - 488);
  v65 = (uint64_t *)(v64 + *(int *)(v62 + 36));
  v66 = sub_100047110(&qword_1008302B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))((char *)v65 + *(int *)(v66 + 28), v60, v61);
  *v65 = v58;
  sub_100021CC0(v53, v64, &qword_10083A548);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v61);
  v67 = v53;
  v3 = *(_QWORD *)(v7 - 208);
  sub_10001BE90(v67, &qword_10083A548);
  sub_1000252E0((uint64_t)v4, v7 - 184);
  v68 = swift_allocObject(&unk_1007A9808, 64, 7);
  *(_QWORD *)(v68 + 16) = v63;
  sub_10002411C((__int128 *)(v7 - 184), v68 + 24);
  v69 = sub_100563914();
  v70 = v63;
  v6 = *(_QWORD *)(v7 - 216);
  v71 = v70;
  v72 = *(_QWORD *)(v7 - 448);
  View.onTapGesture(count:perform:)(1, sub_100563AF0, v68, v62, v69);
  swift_release(v68);
  sub_10001BE90(v64, &qword_10083A550);
  sub_1000252E0((uint64_t)v4, v7 - 184);
  v73 = swift_allocObject(&unk_1007A9830, 64, 7);
  *(_QWORD *)(v73 + 16) = v71;
  sub_10002411C((__int128 *)(v7 - 184), v73 + 24);
  v74 = v71;
  v75 = *(_QWORD *)(v7 - 376);
  static AccessibilityActionKind.default.getter(v74);
  *(_QWORD *)(v7 - 200) = v62;
  *(_QWORD *)(v7 - 192) = v69;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v7 - 200, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v77 = *(_QWORD *)(v7 - 440);
  v78 = *(_QWORD *)(v7 - 424);
  View.accessibilityAction(_:_:)(v75, sub_100563ACC, v73, v78, OpaqueTypeConformance2);
  v79 = swift_release(v73);
  (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v7 - 368) + 8))(v75, *(_QWORD *)(v7 - 360), v79);
  v80 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 432) + 8))(v72, v78);
  v81 = *(_QWORD *)(v7 - 328);
  static AccessibilityTraits.isImage.getter(v80);
  v82 = *(_QWORD *)(v7 - 416);
  ((void (*)(uint64_t, uint64_t))ModifiedContent<>.accessibilityRemoveTraits(_:))(v81, v3);
  v83 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 336) + 8);
  v84 = *(_QWORD *)(v7 - 320);
  v83(v81, v84);
  v85 = sub_10001BE90(v77, &qword_10083A560);
  static AccessibilityTraits.isButton.getter(v85);
  v86 = *(_QWORD *)(v7 - 384);
  ModifiedContent<>.accessibilityAddTraits(_:)(v81, v3);
  v83(v81, v84);
  sub_10001BE90(v82, &qword_10083A560);
  v87 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v88 = String._bridgeToObjectiveC()();
  v89 = objc_msgSend(v87, "localizedStringForKey:value:table:", v88, 0, 0);

  v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
  v92 = v91;

  *(_QWORD *)(v7 - 184) = v90;
  *(_QWORD *)(v7 - 176) = v92;
  v93 = sub_100038CA0();
  v94 = *(_QWORD *)(v7 - 344);
  ((void (*)(uint64_t, uint64_t, void *, unint64_t))ModifiedContent<>.accessibilityLabel<A>(_:))(v7 - 184, v3, &type metadata for String, v93);
  swift_bridgeObjectRelease(v92, v95, v96, v97, v98, v99, v100, v101);
  sub_10001BE90(v86, &qword_10083A560);
  v102 = sub_100047110(&qword_100820020);
  v103 = swift_allocObject(v102, 80, 7);
  *(_OWORD *)(v103 + 16) = xmmword_100624A40;
  *(_QWORD *)(v103 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter(v103);
  *(_QWORD *)(v103 + 40) = v104;
  *(_QWORD *)(v7 - 184) = 0;
  *(_QWORD *)(v7 - 176) = 0xE000000000000000;
  v105 = v4[3];
  v106 = v4[4];
  sub_100016804(v4, v105);
  v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 16))(v105, v106);
  v109 = v108;
  LOBYTE(v106) = v110;
  LOBYTE(v81) = sub_10054FEFC(v107, v108, v110);
  sub_1000EB41C(v107, v109, v106);
  *(_BYTE *)(v7 - 200) = v81;
  v111 = _print_unlocked<A, B>(_:_:)(v7 - 200, v7 - 184, &type metadata for CardTypeFamily, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v112 = *(_QWORD *)(v7 - 176);
  *(_QWORD *)(v103 + 48) = *(_QWORD *)(v7 - 184);
  *(_QWORD *)(v103 + 56) = v112;
  *(_QWORD *)(v103 + 64) = ((uint64_t (*)(uint64_t))static FitnessAccessibilityIdentifier.SummaryView.deleteButton.getter)(v111);
  *(_QWORD *)(v103 + 72) = v113;
  v114 = static FitnessAccessibilityIdentifier.build(_:)(v103);
  v116 = (CHWorkoutDetailHeartRateTableViewCell *)v115;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v103, v115, v117, v118, v119, v120, v121, v122);
  v123 = *(_QWORD *)(v7 - 352);
  ModifiedContent<>.accessibilityIdentifier(_:)(v114, v116, v3);
  swift_bridgeObjectRelease(v116, v124, v125, v126, v127, v128, v129, v130);
  sub_10001BE90(v94, &qword_10083A560);
  v131 = *(_QWORD *)(v7 - 296);
  sub_100045AD4(v123, v131, &qword_10083A560);
  v132 = 0;
  v133 = *(_QWORD *)(v7 - 272);
  v134 = *(_QWORD *)(v7 - 280);
  v135 = *(_QWORD *)(v7 - 288);
LABEL_7:
  v136 = *(_QWORD *)(v7 - 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v131, v132, 1, v3);
  sub_100021CC0(v6, v136, &qword_100832B30);
  sub_100021CC0(v131, v135, &qword_10083A568);
  sub_100021CC0(v136, v133, &qword_100832B30);
  v137 = sub_100047110(&qword_10083A578);
  sub_100021CC0(v135, v133 + *(int *)(v137 + 48), &qword_10083A568);
  sub_10001BE90(v131, &qword_10083A568);
  sub_10001BE90(v6, &qword_100832B30);
  sub_10001BE90(v135, &qword_10083A568);
  return sub_10001BE90(v136, &qword_100832B30);
}

void sub_1005610D8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v2)
  {
    v4 = v2;
    sub_100361ED0(a2);

  }
}

uint64_t sub_100561140(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  _QWORD v48[5];
  _BYTE v49[24];
  _QWORD v50[2];
  char v51;
  char v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;

  v3 = a1[3];
  v4 = a1[4];
  sub_100016804(a1, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4) & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider);
    if (v5)
    {
      v6 = a1[3];
      v7 = a1[4];
      sub_100016804(a1, v6);
      v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 16);
      v9 = swift_retain(v5);
      v10 = v8(v6, v7, v9);
      v12 = v11;
      v14 = v13;
      v15 = a1[3];
      v16 = a1[4];
      sub_100016804(a1, v15);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v19 = objc_msgSend(v18, "preferredContentSizeCategory");

      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      swift_beginAccess(v5 + 16, v49, 0, 0);
      v30 = *(CHWorkoutDetailHeartRateTableViewCell **)(v5 + 16);
      if (*(_QWORD *)v30->cellPadding)
      {
        v50[0] = v10;
        v50[1] = v12;
        v51 = v14;
        v52 = v17 & 1;
        v53 = v20;
        v54 = v22;
        sub_1000EB3F4(v10, v12, v14);
        swift_bridgeObjectRetain(v30);
        v31 = sub_100439D10((uint64_t)v50);
        if ((v32 & 1) != 0)
        {
          v39 = *(_QWORD *)(*(_QWORD *)v30[1].cellInset + 8 * v31);
          swift_bridgeObjectRelease(v30, v32, v33, v34, v35, v36, v37, v38);
          sub_1000EB41C(v10, v12, v14);
          swift_bridgeObjectRelease(v22, v40, v41, v42, v43, v44, v45, v46);
          sub_1000EB41C(v10, v12, v14);
          swift_release(v5);
          sub_1000252E0((uint64_t)a1, (uint64_t)v48);
LABEL_10:
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v48);
          return v39;
        }
        swift_bridgeObjectRelease(v30, v32, v33, v34, v35, v36, v37, v38);
        sub_1000EB41C(v10, v12, v14);
      }
      swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
      sub_1000EB41C(v10, v12, v14);
      swift_release(v5);
    }
    sub_1000252E0((uint64_t)a1, (uint64_t)v48);
    v39 = sub_100515118(v48);
    goto LABEL_10;
  }
  return 0;
}

double sub_10056141C(double a1, double a2, float a3, float a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  double v15;
  void *v16;
  _BOOL4 v17;
  uint64_t v18;
  double Width;
  objc_class *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  double v32;
  objc_class *v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v51;
  id v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  uint64_t v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v82;
  _BYTE v83[24];
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  objc_super v87;
  objc_super v88;
  char v89[24];
  _QWORD v90[5];
  __int128 v91;
  char v92;
  char v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;

  v5 = v4;
  v10 = sub_100047110(&qword_10081FD80);
  __chkstk_darwin(v10);
  v12 = &v83[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  swift_beginAccess(v13, v89, 0, 0);
  sub_100021CC0(v13, (uint64_t)&v91, &qword_100832410);
  if (v94)
  {
    sub_10002411C(&v91, (uint64_t)v90);
    v14 = objc_msgSend(v5, "window");
    v15 = a1;
    if (v14)
    {
      v16 = v14;
      v17 = sub_100563764((uint64_t)objc_msgSend(v14, "interfaceOrientation"));
      objc_msgSend(v16, "bounds");
      if (v17)
        Width = CGRectGetWidth(*(CGRect *)&v18);
      else
        Width = CGRectGetHeight(*(CGRect *)&v18);
      v15 = Width;

    }
    v28 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
    v27 = sub_100514A9C(v90, (uint64_t)v12, v15);
    sub_1000252E0((uint64_t)v90, (uint64_t)&v91);
    *(double *)&v29 = COERCE_DOUBLE(sub_100514D4C((uint64_t)&v91, (uint64_t)v12, v27));
    v31 = v30;
    sub_10001BE90((uint64_t)&v91, &qword_100832410);
    sub_10001BE90((uint64_t)v12, &qword_10081FD80);
    if ((v31 & 1) != 0)
    {
      v33 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
      v87.receiver = v5;
      v87.super_class = v33;
      *(float *)&v34 = a3;
      *(float *)&v35 = a4;
      objc_msgSendSuper2(&v87, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", a1, a2, v34, v35);
      v32 = v36;
    }
    else
    {
      v32 = *(double *)&v29;
    }
    sub_100021CC0(v13, (uint64_t)&v91, &qword_100832410);
    if (v94)
    {
      sub_10002411C(&v91, (uint64_t)v84);
      v37 = v85;
      v38 = v86;
      sub_100016804(v84, v85);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 56))(v37, v38) & 1) != 0)
      {
        v39 = *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider];
        if (v39)
        {
          v40 = v85;
          v41 = v86;
          sub_100016804(v84, v85);
          v42 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v41 + 16);
          v43 = swift_retain(v39);
          v44 = v42(v40, v41, v43);
          v46 = v45;
          LOBYTE(v42) = v47;
          v48 = v85;
          v49 = v86;
          sub_100016804(v84, v85);
          v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49) & 1;
          v51 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
          v52 = objc_msgSend(v51, "preferredContentSizeCategory");

          v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v55 = v54;

          swift_beginAccess(v39 + 16, v83, 33, 0);
          *(_QWORD *)&v91 = v44;
          *((_QWORD *)&v91 + 1) = v46;
          v92 = (char)v42;
          v93 = v50;
          v94 = v53;
          v95 = v55;
          sub_1000EB3F4(v44, v46, (char)v42);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v39 + 16));
          v82 = *(_QWORD *)(v39 + 16);
          *(_QWORD *)(v39 + 16) = 0x8000000000000000;
          sub_1004002B0((uint64_t)&v91, isUniquelyReferenced_nonNull_native, v32);
          v57 = *(CHWorkoutDetailHeartRateTableViewCell **)(v39 + 16);
          *(_QWORD *)(v39 + 16) = v82;
          swift_bridgeObjectRelease(v57, v58, v59, v60, v61, v62, v63, v64);
          sub_1000EB41C(v44, v46, (char)v42);
          swift_bridgeObjectRelease(v55, v65, v66, v67, v68, v69, v70, v71);
          swift_endAccess(v83);
          v72 = *(CHWorkoutDetailHeartRateTableViewCell **)(v39 + 16);
          swift_bridgeObjectRetain(v72);
          sub_1005D7E20(v73);
          swift_bridgeObjectRelease(v72, v74, v75, v76, v77, v78, v79, v80);
          sub_1000EB41C(v44, v46, (char)v42);
          swift_release(v39);
        }
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v90);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v84);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v90);
      sub_10001BE90((uint64_t)&v91, &qword_100832410);
    }
  }
  else
  {
    sub_10001BE90((uint64_t)&v91, &qword_100832410);
    v23 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
    v88.receiver = v5;
    v88.super_class = v23;
    *(float *)&v24 = a3;
    *(float *)&v25 = a4;
    objc_msgSendSuper2(&v88, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", a1, a2, v24, v25);
    return v26;
  }
  return v27;
}

void sub_1005619A4(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  uint64_t v18;
  objc_super v19;
  objc_super v20;
  CGRect v21;
  CGRect v22;

  v9 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
  v20.receiver = v4;
  v20.super_class = v9;
  objc_msgSendSuper2(&v20, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19.receiver = v4;
  v19.super_class = v9;
  objc_msgSendSuper2(&v19, "setBounds:", a1, a2, a3, a4);
  objc_msgSend(v4, "bounds");
  v22.origin.x = v11;
  v22.origin.y = v13;
  v22.size.width = v15;
  v22.size.height = v17;
  if (!CGRectEqualToRect(v21, v22))
  {
    v18 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling;
    if ((*((_BYTE *)v4 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling) & 1) != 0)
    {
      sub_1005C34D8(0, v4);
      *((_BYTE *)v4 + v18) = 0;
      sub_1005C34D8(1, v4);
      *((_BYTE *)v4 + v18) = 1;
    }
  }
}

id sub_100561B64(void *a1)
{
  _BYTE *v1;
  char *v3;
  char *v4;
  objc_class *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController] = 0;
  v3 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling] = 0;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  v5 = (objc_class *)type metadata accessor for ActivityDashboardCardCell();
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v8.receiver = v1;
  v8.super_class = v5;
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_100561C30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDashboardCardCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivityDashboardCardCell()
{
  return objc_opt_self(_TtC10FitnessApp25ActivityDashboardCardCell);
}

uint64_t sub_100561CEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100561D18(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_100561D3C(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100561D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  id v36;
  void *v37;
  _QWORD *v38;
  uint64_t (*v39)(uint64_t, _QWORD *);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, _QWORD *);
  uint64_t i;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v66[8];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t CardActionContext;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _BYTE v87[24];
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  char v91[8];
  _QWORD v92[5];

  v81 = a2;
  v9 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v9);
  v76 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TrendListMetric(0);
  v75 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008329C8);
  __chkstk_darwin(v14);
  v79 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for TrendsActionContext(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v17);
  v68 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for CatalogTipSection(0);
  v66[6] = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66[4] = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v20);
  v74 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for CatalogTipCard(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v66[7] = (char *)v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110(&qword_1008329D0);
  __chkstk_darwin(v23);
  v72 = (char *)v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  v69 = *(_QWORD *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  v66[5] = (char *)v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UUID(0);
  v83 = *(_QWORD *)(v26 - 8);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v31 = (char *)v66 - v30;
  v92[3] = a4;
  v92[4] = a5;
  v32 = sub_10004C480(v92);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v32, a1, a4);
  v33 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController;
  v34 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v34)
  {
    v66[3] = v11;
    v82 = a3;
    v35 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
    v36 = v34;
    v84 = v32;
    v85 = a4;
    v86 = (_QWORD *)a5;
    if ((v35(a4, a5) & 1) == 0)
    {
      v47 = v82 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess(v82 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v91, 0, 0);
      sub_100021CC0(v47, (uint64_t)v87, &qword_1008324B0);
      v66[2] = v13;
      if (v88)
      {
        sub_1000252E0((uint64_t)v87, (uint64_t)&v89);
        sub_10001BE90((uint64_t)v87, &qword_1008324B0);
        v48 = *(_QWORD *)(*sub_100016804(&v89, *((uint64_t *)&v90 + 1))
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v49 = *(_QWORD *)(v48 + 16);
        v50 = v85;
        if (v49)
        {
          v66[1] = v36;
          v51 = (_QWORD *)(v48 + 32);
          v52 = (void (*)(uint64_t, _QWORD *))v86[1];
          v66[0] = v48;
          swift_bridgeObjectRetain(v48);
          for (i = 0; i != v49; ++i)
          {
            v54 = v51[3];
            v55 = v51[4];
            sub_100016804(v51, v54);
            v56 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
            v57 = v55;
            v50 = v85;
            v56(v54, v57);
            v52(v50, v86);
            v58 = static UUID.== infix(_:_:)(v31, v29);
            v59 = *(void (**)(char *, uint64_t))(v83 + 8);
            v59(v29, v26);
            v59(v31, v26);
            if ((v58 & 1) != 0)
              goto LABEL_14;
            v51 += 5;
          }
          i = 0;
LABEL_14:
          v60 = v58 ^ 1;
          swift_bridgeObjectRelease(v66[0]);
        }
        else
        {
          i = 0;
          v60 = 1;
        }
        v61 = (uint64_t)v84;
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v89);
      }
      else
      {
        sub_10001BE90((uint64_t)v87, &qword_1008324B0);
        i = 0;
        v60 = 1;
        v50 = v85;
        v61 = (uint64_t)v84;
      }
      v62 = i;
      v63 = (uint64_t)v86;
      sub_10058CB70(v61, v62, v60 & 1, 0, v50, (uint64_t)v86);
      (*(void (**)(uint64_t, uint64_t))(v63 + 16))(v50, v63);
      __asm { BR              X10 }
    }
    v37 = *(void **)(v82 + v33);
    if (v37)
    {
      v38 = v86;
      v39 = (uint64_t (*)(uint64_t, _QWORD *))v86[2];
      v40 = v37;
      v41 = (uint64_t)v84;
      v42 = v85;
      v43 = v39(v85, v38);
      v45 = v44;
      LODWORD(v39) = v46;
      sub_1000EB41C(v43, v44, v46);
      if ((_DWORD)v39 != 3 || v43 | v45)
        sub_1003E6668(v41, v40, v42, v38);

    }
    else
    {

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v92);
}

void sub_10056293C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  sub_100021CC0(*(_QWORD *)(v1 - 368), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    v2 = *(_QWORD *)(v1 - 440);
    v3 = *(_QWORD *)(v1 - 456);
    v4 = swift_dynamicCast(v2, v1 - 320, (char *)&type metadata for Any + 8, v3, 6);
    v5 = *(_QWORD *)(v1 - 464);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, v4 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    {
      v6 = *(_QWORD *)(v1 - 504);
      v7 = sub_100047C88(v2, v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      v8 = CatalogLockup.identifier.getter(v7);
      v10 = v9;
      v11 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                              + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
      sub_1005366D0(v8, (uint64_t)v10);
      swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);

      sub_100011F54(v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      JUMPOUT(0x100562914);
    }
  }
  else
  {
    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 464) + 56))(*(_QWORD *)(v1 - 440), 1, 1, *(_QWORD *)(v1 - 456));
  }

  JUMPOUT(0x1005626D0);
}

void sub_100562A54()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000252E0(v1 - 128, v1 - 320);
  v2 = sub_100047110(&qword_1008200C0);
  v3 = *(_QWORD *)(v1 - 424);
  v4 = *(_QWORD *)(v1 - 432);
  v5 = swift_dynamicCast(v3, v1 - 320, v2, v4, 6);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 448) + 56);
  if ((v5 & 1) != 0)
  {
    v6(v3, 0, 1, v4);
    v7 = *(_QWORD *)(v1 - 488);
    sub_100047C88(v3, v7, type metadata accessor for CatalogTipCard);
    v8 = v7 + *(int *)(v4 + 36);
    v9 = *(_QWORD *)(v1 - 472);
    sub_100021CC0(v8, v9, &qword_100824DE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 496) + 48))(v9, 1, *(_QWORD *)(v1 - 480)) == 1)
    {
      sub_100011F54(v7, type metadata accessor for CatalogTipCard);

      JUMPOUT(0x1005626D0);
    }
    v10 = *(_QWORD *)(v1 - 512);
    sub_100047C88(v9, v10, type metadata accessor for CatalogTipSection);
    sub_1003176F0(v10);
    sub_100316A50(v10);

    sub_100011F54(v10, type metadata accessor for CatalogTipSection);
    sub_100011F54(v7, type metadata accessor for CatalogTipCard);
    JUMPOUT(0x100562914);
  }
  v6(v3, 1, 1, v4);

  JUMPOUT(0x1005626D4);
}

uint64_t sub_100562CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  id v31;
  void *v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t i;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD v78[6];
  _BYTE v79[24];
  _QWORD v80[4];
  _QWORD v81[5];

  v76 = type metadata accessor for UUID(0);
  v75 = *(_QWORD *)(v76 - 8);
  v9 = __chkstk_darwin(v76);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v56 - v12;
  v14 = sub_100047110(&qword_100820038);
  __chkstk_darwin(v14);
  v73 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for TrendsCard(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v18);
  v66 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for CatalogTipSection(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v62 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v72 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v24);
  v69 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for CatalogTipCard(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v63 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81[3] = a4;
  v81[4] = a5;
  v27 = sub_10004C480(v81);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v27, a1, a4);
  v28 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController;
  v29 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v29)
  {
    v61 = v22;
    v60 = v17;
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
    v31 = v29;
    v77 = v27;
    if ((v30(a4, a5) & 1) == 0)
    {
      v40 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v79, 0, 0);
      sub_100021CC0(v40, (uint64_t)v80, &qword_1008324B0);
      if (v80[3])
      {
        v59 = v21;
        sub_1000252E0((uint64_t)v80, (uint64_t)v78);
        sub_10001BE90((uint64_t)v80, &qword_1008324B0);
        v41 = *(_QWORD *)(*sub_100016804(v78, v78[3])
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v42 = *(_QWORD *)(v41 + 16);
        if (v42)
        {
          v74 = a4;
          v58 = v31;
          v43 = (_QWORD *)(v41 + 32);
          v44 = a5;
          v45 = *(void (**)(uint64_t, uint64_t))(a5 + 8);
          v57 = v41;
          swift_bridgeObjectRetain(v41);
          for (i = 0; i != v42; ++i)
          {
            v47 = v43[3];
            v48 = v43[4];
            sub_100016804(v43, v47);
            (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
            v45(v74, v44);
            v49 = static UUID.== infix(_:_:)(v13, v11);
            v50 = *(void (**)(char *, uint64_t))(v75 + 8);
            v51 = v76;
            v50(v11, v76);
            v50(v13, v51);
            if ((v49 & 1) != 0)
              goto LABEL_14;
            v43 += 5;
          }
          i = 0;
LABEL_14:
          v52 = v49 ^ 1;
          swift_bridgeObjectRelease(v57);
          a5 = v44;
          a4 = v74;
        }
        else
        {
          i = 0;
          v52 = 1;
        }
        v53 = (uint64_t)v77;
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v78);
      }
      else
      {
        sub_10001BE90((uint64_t)v80, &qword_1008324B0);
        i = 0;
        v52 = 1;
        v53 = (uint64_t)v77;
      }
      sub_10058CB70(v53, i, v52 & 1, 1, a4, a5);
      (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
      __asm { BR              X10 }
    }
    v32 = *(void **)(a3 + v28);
    if (v32)
    {
      v33 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
      v34 = v32;
      v35 = (uint64_t)v77;
      v36 = v33(a4, a5);
      v38 = v37;
      LODWORD(v33) = v39;
      sub_1000EB41C(v36, v37, v39);
      if ((_DWORD)v33 != 3 || v36 | v38)
        sub_1003E6668(v35, v34, a4, (_QWORD *)a5);

    }
    else
    {

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v81);
}

BOOL sub_100563764(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t sub_10056377C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1005637A8(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_1005637CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_1005637DC(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_1005637FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A588;
  if (!qword_10083A588)
  {
    v1 = sub_100007050(&qword_10083A580);
    sub_100563880();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A588);
  }
  return result;
}

unint64_t sub_100563880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A590;
  if (!qword_10083A590)
  {
    v1 = sub_100007050(&qword_10083A598);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A590);
  }
  return result;
}

uint64_t sub_1005638EC()
{
  return EnvironmentValues.colorScheme.getter();
}

unint64_t sub_100563914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A5A8;
  if (!qword_10083A5A8)
  {
    v1 = sub_100007050(&qword_10083A550);
    sub_100563998();
    sub_100028384(&qword_1008302F0, &qword_1008302B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A5A8);
  }
  return result;
}

unint64_t sub_100563998()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A5B0;
  if (!qword_10083A5B0)
  {
    v1 = sub_100007050(&qword_10083A548);
    sub_100563A1C();
    sub_100028384(&qword_10083A5C0, &qword_10083A5A0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A5B0);
  }
  return result;
}

unint64_t sub_100563A1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A5B8;
  if (!qword_10083A5B8)
  {
    v1 = sub_100007050(&qword_10083A540);
    v2[0] = sub_100007050(&qword_10083A580);
    v2[1] = sub_1005637FC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_100028384(&qword_100834438, &qword_10082CC18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A5B8);
  }
  return result;
}

void sub_100563ACC()
{
  uint64_t v0;

  sub_1005610D8(*(_QWORD *)(v0 + 16), v0 + 24);
}

_QWORD *sub_100563AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100563B7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100563BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100563C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100563C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100563CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100563D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100563D2C);
}

uint64_t sub_100563D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100563DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100563DC4);
}

uint64_t sub_100563DC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for VideoLooperRepresentable(uint64_t a1)
{
  uint64_t result;

  result = qword_10083A620;
  if (!qword_10083A620)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VideoLooperRepresentable);
  return result;
}

uint64_t sub_100563E78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1006467A0;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100563EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v4 = type metadata accessor for URL(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, v2, v5);
  LOBYTE(a2) = *(_BYTE *)(v2 + *(int *)(a2 + 20));
  v9 = objc_allocWithZone((Class)type metadata accessor for VideoLooperView(0));
  return sub_1005A9410((uint64_t)v7, a2);
}

uint64_t sub_100563F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100564094(&qword_10083A660, (uint64_t)&unk_100646808);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100563FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100564094(&qword_10083A660, (uint64_t)&unk_100646808);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10056403C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100564094(&qword_10083A660, (uint64_t)&unk_100646808);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100564070()
{
  return sub_100564094(&qword_10083A658, (uint64_t)&unk_1006467B8);
}

uint64_t sub_100564094(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for VideoLooperRepresentable(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005640D4()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  id v15;
  id v16;
  objc_super v17;
  CGRect v18;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for TrendsScrubberFlagpoleView();
  objc_msgSendSuper2(&v17, "layoutSubviews");
  v2 = objc_msgSend(v0, "layer");
  v3 = objc_opt_self(CAShapeLayer);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  if (v4)
  {
    v5 = (void *)v4;
    objc_msgSend(v1, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    objc_msgSend(v1, "bounds");
    v14 = CGRectGetWidth(v18) * 0.5;
    v15 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v7, v9, v11, v13, v14);
    v16 = objc_msgSend(v15, "CGPath");

    objc_msgSend(v5, "setPath:", v16);
  }
  else
  {

    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010068EEB0, "FitnessApp/TrendsScrubberPlatterView.swift", 42, 2, 21, 0);
    __break(1u);
  }
}

id sub_1005643F4()
{
  return sub_100111F3C(type metadata accessor for TrendsScrubberFlagpoleView);
}

uint64_t type metadata accessor for TrendsScrubberFlagpoleView()
{
  return objc_opt_self(_TtC10FitnessApp26TrendsScrubberFlagpoleView);
}

uint64_t sub_100564458(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  UIContentSizeCategory v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  double v36;
  id v37;
  uint64_t result;
  objc_super v39;

  v9 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1004C2368();
  v11 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
  *(_QWORD *)&v10[v11] = sub_1004C2368();
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = 0;
  v12 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  v13 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v10[v12] = objc_msgSend(v13, "whiteColor");

  v39.receiver = v10;
  v39.super_class = (Class)type metadata accessor for TrendsScrubberPlatterView();
  v14 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  v15 = (UIContentSizeCategory)objc_msgSend(v14, "layer");
  v16 = objc_opt_self(CAShapeLayer);
  v17 = swift_dynamicCastObjCClass(v15, v16);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor], "CGColor");
    objc_msgSend(v18, "setFillColor:", v19);

    v20 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
    v21 = *(void **)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel];
    v22 = (void *)objc_opt_self(UIFont);
    v15 = UIContentSizeCategoryExtraExtraExtraLarge;
    v23 = v21;
    v24 = objc_msgSend(v22, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v23, "setFont:", v24);

      v26 = *(id *)&v14[v20];
      v27 = objc_msgSend(v13, "blackColor");
      objc_msgSend(v26, "setTextColor:", v27);

      LODWORD(v28) = 1148846080;
      objc_msgSend(*(id *)&v14[v20], "setContentCompressionResistancePriority:forAxis:", 0, v28);
      v29 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
      v30 = *(id *)&v14[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel];
      v31 = objc_msgSend(v22, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleTitle3, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
      if (v31)
      {
        v32 = v31;
        objc_msgSend(v30, "setFont:", v31);

        v33 = *(id *)&v14[v29];
        v34 = objc_msgSend(v13, "blackColor");
        objc_msgSend(v33, "setTextColor:", v34);

        v35 = *(void **)&v14[v29];
        LODWORD(v36) = 1148846080;
        objc_msgSend(v35, "setContentCompressionResistancePriority:forAxis:", 0, v36);
        objc_msgSend(v14, "addSubview:", *(_QWORD *)&v14[v20]);
        objc_msgSend(v14, "addSubview:", v35);
        sub_100564C68();
        v37 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        objc_msgSend(v37, "addObserver:selector:name:object:", v14, "fontSizeChangedWithNote:", UIContentSizeCategoryDidChangeNotification, 0);

        return (uint64_t)v14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010068EEB0, "FitnessApp/TrendsScrubberPlatterView.swift", 42, 2, 46, 0);
  __break(1u);
  return result;
}

void sub_1005648AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  double v22;
  id v23;
  void *v24;
  double v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  void *v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  id v37;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
  if (!v3)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = v3;
  objc_msgSend(v1, "setFont:", v3);

  v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel);
  v6 = objc_msgSend(v2, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleTitle3, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
  if (!v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = v6;
  objc_msgSend(v5, "setFont:", v6);

  v8 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint);
  if (!v8)
    goto LABEL_6;
  v9 = v8;
  v10 = objc_msgSend(v1, "font");
  if (!v10)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v10;
  objc_msgSend(v10, "_scaledValueForValue:", 6.0);
  v13 = v12;

  objc_msgSend(v9, "setConstant:", v13);
LABEL_6:
  v14 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint);
  if (!v14)
    goto LABEL_9;
  v15 = v14;
  v16 = objc_msgSend(v5, "font");
  if (!v16)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v17 = v16;
  objc_msgSend(v16, "_scaledValueForValue:", -3.0);
  v19 = v18;

  objc_msgSend(v15, "setConstant:", v19);
LABEL_9:
  v20 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint);
  if (v20)
  {
    v21 = v20;
    v22 = 0.0;
    if ((FIUICurrentLanguageRequiresTallScript() & 1) == 0)
    {
      v23 = objc_msgSend(v1, "font");
      if (!v23)
      {
LABEL_27:
        __break(1u);
        return;
      }
      v24 = v23;
      objc_msgSend(v23, "_scaledValueForValue:", -1.0);
      v22 = v25;

    }
    objc_msgSend(v21, "setConstant:", v22);

  }
  v26 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v1, "font");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, "_scaledValueForValue:", 4.0);
      v31 = v30;

      objc_msgSend(v27, "setConstant:", v31);
      goto LABEL_17;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_17:
  v32 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint);
  if (v32)
  {
    v37 = v32;
    v33 = objc_msgSend(v1, "font");
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v33, "_scaledValueForValue:", -4.0);
      v36 = v35;

      objc_msgSend(v37, "setConstant:", v36);
      return;
    }
    goto LABEL_26;
  }
}

void sub_100564C68()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  int v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  Class isa;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel];
  v3 = objc_msgSend(v2, "leadingAnchor");
  v4 = objc_msgSend(v1, "leadingAnchor");
  v5 = objc_msgSend(v2, "font");
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  objc_msgSend(v5, "_scaledValueForValue:", 4.0);
  v8 = v7;

  v9 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v4, v8);
  v10 = objc_msgSend(v2, "trailingAnchor");
  v11 = objc_msgSend(v1, "trailingAnchor");
  v12 = objc_msgSend(v2, "font");
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = v12;
  v73 = v9;
  objc_msgSend(v12, "_scaledValueForValue:", -4.0);
  v15 = v14;

  v71 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, v15);
  v16 = objc_msgSend(v2, "topAnchor");
  v17 = objc_msgSend(v1, "topAnchor");
  v18 = objc_msgSend(v2, "font");
  if (!v18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v18;
  objc_msgSend(v18, "_scaledValueForValue:", 6.0);
  v21 = v20;

  v70 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, v21);
  v22 = FIUICurrentLanguageRequiresTallScript();
  v23 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel];
  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v2, "bottomAnchor");
  v26 = objc_msgSend(v2, "font");
  if (!v26)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = v26;
  v28 = -1.0;
  if (v22)
    v28 = 0.0;
  objc_msgSend(v26, "_scaledValueForValue:", v28);
  v30 = v29;

  v69 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, v30);
  v31 = objc_msgSend(v23, "leadingAnchor");
  v32 = objc_msgSend(v2, "leadingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  v34 = objc_msgSend(v23, "trailingAnchor");
  v35 = objc_msgSend(v2, "trailingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  v37 = objc_msgSend(v23, "bottomAnchor");
  v38 = objc_msgSend(v1, "bottomAnchor");
  v39 = objc_msgSend(v23, "font");
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v39, "_scaledValueForValue:", -3.0);
    v42 = v41;

    v43 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, v42);
    v68 = (id)objc_opt_self(NSLayoutConstraint);
    v44 = sub_100047110((uint64_t *)&unk_100828340);
    v45 = swift_allocObject(v44, 88, 7);
    *(_OWORD *)(v45 + 16) = xmmword_100626C00;
    *(_QWORD *)(v45 + 32) = v73;
    *(_QWORD *)(v45 + 40) = v71;
    *(_QWORD *)(v45 + 48) = v70;
    *(_QWORD *)(v45 + 56) = v69;
    *(_QWORD *)(v45 + 64) = v33;
    *(_QWORD *)(v45 + 72) = v36;
    *(_QWORD *)(v45 + 80) = v43;
    v75 = (CHWorkoutDetailHeartRateTableViewCell *)v45;
    specialized Array._endMutation()(v45);
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    v46 = v73;
    v74 = v71;
    v47 = v70;
    v48 = v69;
    v49 = v33;
    v50 = v36;
    v51 = v43;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v75, v53, v54, v55, v56, v57, v58, v59);
    objc_msgSend(v68, "activateConstraints:", isa);

    v60 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = v47;
    v61 = v47;

    v62 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = v51;
    v63 = v51;

    v64 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = v48;
    v65 = v48;

    v66 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = v46;
    v67 = v46;

    v72 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = v74;

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_100565210(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v3 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  v16 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_1004C2368();
  v5 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel;
  *(_QWORD *)&v4[v5] = sub_1004C2368();
  v6 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topConstraint] = 0;
  v7 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomConstraint] = 0;
  v8 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_midConstraint] = 0;
  v9 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_leadingConstaint] = 0;
  v10 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_trailingConstraint] = 0;
  v11 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");

  *(_QWORD *)&v4[v11] = v12;
  v13 = *(void **)&v4[v11];

  v14 = type metadata accessor for TrendsScrubberPlatterView();
  swift_deallocPartialClassInstance(v4, v14, 72, 7);
  return 0;
}

void sub_10056539C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  objc_super v19;

  v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for TrendsScrubberPlatterView();
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v2 = objc_msgSend(v0, "layer");
  v3 = objc_opt_self(CAShapeLayer);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(v1, "layer");
    v7 = objc_opt_self(CAShapeLayer);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      objc_msgSend(v8, "bounds");
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;

      v17 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v10, v12, v14, v16, 8.0);
      v18 = objc_msgSend(v17, "CGPath");

      objc_msgSend(v5, "setPath:", v18);
      return;
    }

  }
  else
  {

  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010068EEB0, "FitnessApp/TrendsScrubberPlatterView.swift", 42, 2, 46, 0);
  __break(1u);
}

id sub_100565580()
{
  return sub_100111F3C(type metadata accessor for TrendsScrubberPlatterView);
}

uint64_t type metadata accessor for TrendsScrubberPlatterView()
{
  return objc_opt_self(_TtC10FitnessApp25TrendsScrubberPlatterView);
}

char *sub_100565648(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  uint64_t v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t DataType;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a3;
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a2[3];
    v11 = a2[4];
    *((_QWORD *)a1 + 3) = v10;
    *((_QWORD *)a1 + 4) = v11;
    v12 = a2[5];
    v13 = *(int *)(a3 + 44);
    v32 = &a1[v13];
    v30 = a2[6];
    v31 = (uint64_t)a2 + v13;
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v30;
    DataType = type metadata accessor for TrainingLoadDataType(0);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 16);
    v15 = v4;
    v16 = v8;
    v17 = v9;
    v18 = v10;
    v19 = v11;
    swift_retain(v12);
    v20 = v30;
    v29(v32, v31, DataType);
    v21 = *(int *)(v5 + 48);
    v22 = *(int *)(v5 + 52);
    v23 = *(char **)((char *)a2 + v21);
    *(_QWORD *)&v7[v21] = v23;
    v24 = &v7[v22];
    v25 = (uint64_t)a2 + v22;
    v26 = *(char **)((char *)a2 + v22);
    LOBYTE(v5) = *(_BYTE *)(v25 + 8);
    v27 = v23;
    sub_10010C5D0(v26, v5);
    *(_QWORD *)v24 = v26;
    v24[8] = v5;
  }
  return v7;
}

void sub_100565774(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t DataType;

  swift_release(*(_QWORD *)(a1 + 40));
  v4 = a1 + a2[11];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v4, DataType);

  sub_10010C5EC(*(id *)(a1 + a2[13]), *(_BYTE *)(a1 + a2[13] + 8));
}

_QWORD *sub_100565814(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t DataType;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v7;
  v10 = *(void **)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = v10;
  a1[5] = v9;
  v11 = *(void **)(a2 + 48);
  v12 = a3[11];
  v30 = (char *)a1 + v12;
  v29 = a2 + v12;
  a1[6] = v11;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 16);
  v14 = v5;
  v15 = v6;
  v16 = v8;
  v17 = v7;
  v18 = v10;
  swift_retain(v9);
  v19 = v11;
  v28(v30, v29, DataType);
  v20 = a3[12];
  v21 = a3[13];
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = (char *)a1 + v21;
  v24 = a2 + v21;
  v25 = *(void **)(a2 + v21);
  LOBYTE(v11) = *(_BYTE *)(v24 + 8);
  v26 = v22;
  sub_10010C5D0(v25, (char)v11);
  *(_QWORD *)v23 = v25;
  v23[8] = (char)v11;
  return a1;
}

uint64_t sub_100565914(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t DataType;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  char v39;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 32);
  v19 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v18;
  v20 = v18;

  v21 = *(_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v21;
  swift_retain(v21);
  swift_release(v22);
  v23 = *(void **)(a1 + 48);
  v24 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v24;
  v25 = v24;

  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 24))(v27, v28, DataType);
  v30 = a3[12];
  v31 = *(void **)(a2 + v30);
  v32 = *(void **)(a1 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  v33 = v31;

  v34 = a3[13];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(id *)v36;
  LOBYTE(a3) = *(_BYTE *)(v36 + 8);
  sub_10010C5D0(*(id *)v36, (char)a3);
  v38 = *(void **)v35;
  v39 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = (_BYTE)a3;
  sub_10010C5EC(v38, v39);
  return a1;
}

uint64_t sub_100565A54(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DataType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[11];
  v8 = a1 + v7;
  v9 = a2 + v7;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 32))(v8, v9, DataType);
  v11 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_100565AF4(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t DataType;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char v24;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_release(v11);
  v12 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = a2[6];

  v13 = a3[11];
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(DataType - 8) + 40))(v14, v15, DataType);
  v17 = a3[12];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)((char *)a2 + v17);

  v19 = a3[13];
  v20 = a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  LOBYTE(v21) = v21[8];
  v23 = *(void **)v20;
  v24 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = (_BYTE)v21;
  sub_10010C5EC(v23, v24);
  return a1;
}

uint64_t sub_100565C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100565C10);
}

uint64_t sub_100565C10(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t DataType;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    DataType = type metadata accessor for TrainingLoadDataType(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, DataType);
  }
}

uint64_t sub_100565C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100565C98);
}

char *sub_100565C98(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t DataType;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    DataType = type metadata accessor for TrainingLoadDataType(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, DataType);
  }
  return result;
}

uint64_t type metadata accessor for LoadItemsList(uint64_t a1)
{
  uint64_t result;

  result = qword_10083A760;
  if (!qword_10083A760)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadItemsList);
  return result;
}

uint64_t sub_100565D48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = "\b";
  result = type metadata accessor for TrainingLoadDataType(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = &unk_100646958;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100565DEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BBA30, 1);
}

uint64_t sub_100565DFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100016804(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_100565E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t DataType;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t ItemsList;
  int v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t result;
  uint64_t v34;

  v1 = 0xD000000000000026;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v3 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  ItemsList = type metadata accessor for LoadItemsList(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v5, v0 + *(int *)(ItemsList + 44), DataType);
  v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v5, DataType);
  if (v7 == enum case for TrainingLoadDataType.workoutType(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, DataType);
    v8 = *v5;
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15 = sub_100047110((uint64_t *)&unk_100827460);
    v1 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v1 + 16) = xmmword_100622F90;
    v16 = (id)FILocalizedNameForIndoorAgnosticActivityType(v8);
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v20 = v19;

      *(_QWORD *)(v1 + 56) = &type metadata for String;
      *(_QWORD *)(v1 + 64) = sub_100038CF8();
      *(_QWORD *)(v1 + 32) = v18;
      *(_QWORD *)(v1 + 40) = v20;
      v22 = String.init(format:_:)(v12, v14, v1, v21);
      swift_bridgeObjectRelease(v14, v23, v24, v25, v26, v27, v28, v29);
      return v22;
    }
    __break(1u);
  }
  else if (v7 == enum case for TrainingLoadDataType.allDay(_:) || v7 == enum case for TrainingLoadDataType.workout(_:))
  {
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    return v22;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v1 - 7, 0x80000001006A6290, "FitnessApp/LoadItemsList.swift", 30, 2, 42, 0);
  __break(1u);
  return result;
}

uint64_t sub_10056618C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ItemsList;
  uint64_t v3;
  char *v4;
  uint64_t DataType;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  _BYTE *v15;
  uint64_t KeyPath;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE *v25;

  v1 = v0;
  ItemsList = type metadata accessor for LoadItemsList(0);
  __chkstk_darwin(ItemsList);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v6 = *(_QWORD *)(DataType - 8);
  v7 = __chkstk_darwin(DataType);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(ItemsList + 44);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for TrainingLoadDataType.allDay(_:), DataType, v7);
  LOBYTE(v10) = static TrainingLoadDataType.== infix(_:_:)(v10, v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, DataType);
  if ((v10 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    v12 = v1 + *(int *)(ItemsList + 52);
    v13 = *(id *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    sub_10010C5D0(*(id *)v12, v14);
    v15 = sub_1003F70B8(v13, v14);
    sub_10010C5EC(v13, v14);
    KeyPath = swift_getKeyPath(&unk_1006469F0);
    v25 = v15;
    v17 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, KeyPath, v17);
    swift_release(KeyPath);
    LOBYTE(v13) = v15[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__isFetchingWorkouts];

    sub_10004F8C8(v1, (uint64_t)v4, type metadata accessor for LoadItemsList);
    if ((v13 & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      v18 = &v4[*(int *)(ItemsList + 52)];
      v19 = *(id *)v18;
      v20 = v18[8];
      sub_10010C5D0(*(id *)v18, v20);
      v21 = sub_1003F70B8(v19, v20);
      sub_10010C5EC(v19, v20);
      v22 = swift_getKeyPath(&unk_100646A18);
      v25 = v21;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v22, v17);
      swift_release(v22);
      LOBYTE(v19) = v21[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutEffortCacheIsPopulated];

      v11 = v19 ^ 1;
    }
    sub_100011F54((uint64_t)v4, type metadata accessor for LoadItemsList);
  }
  return v11 & 1;
}

uint64_t sub_1005663E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;

  v1 = sub_100047110(&qword_1008221B0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + *(int *)(type metadata accessor for LoadItemsList(0) + 52);
  v6 = *(id *)v5;
  v7 = *(_BYTE *)(v5 + 8);
  sub_10010C5D0(*(id *)v5, v7);
  v8 = (char *)sub_1003F70B8(v6, v7);
  sub_10010C5EC(v6, v7);
  KeyPath = swift_getKeyPath(&unk_100646AB8);
  v36 = v8;
  v10 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, KeyPath, v10);
  swift_release(KeyPath);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)&v8[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek];
  swift_bridgeObjectRetain(v11);

  v19 = *(_QWORD *)v11->cellPadding;
  if (v19)
  {
    v20 = *(int *)(v1 + 48);
    v21 = (uint64_t)v11 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v22 = *(_QWORD *)(v2 + 72);
    while (1)
    {
      sub_100021CC0(v21, (uint64_t)v4, &qword_1008221B0);
      v24 = *(void **)&v4[v20];
      if (v24)
      {
        v25 = objc_msgSend(*(id *)&v4[v20], "paused");

        if (v25)
          break;
      }
      v23 = type metadata accessor for DayIndex(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v4, v23);
      v21 += v22;
      if (!--v19)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(v11, v26, v27, v28, v29, v30, v31, v32);
    v33 = type metadata accessor for DayIndex(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v4, v33);
    return 1;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
    return 0;
  }
}

uint64_t sub_1005665C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ItemsList;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t DataType;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t OpaqueTypeConformance2;
  int v59;
  int v60;
  uint64_t v61;
  id v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  char v85;
  char v86;
  uint64_t v87;
  char *v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  uint64_t v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  char v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  void *v144;
  unint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  CHWorkoutDetailHeartRateTableViewCell *v150;
  char v151;
  char v152;
  uint64_t v153;
  char *v154;
  SEL v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  unint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  CHWorkoutDetailHeartRateTableViewCell *v179;
  char v180;
  char v181;
  uint64_t v182;
  char *v183;
  SEL v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  double v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  unint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  double v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _OWORD *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(char *, char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, uint64_t);
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  char v270;
  char *v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, char *, uint64_t);
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(char *, uint64_t);
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  SEL v303;
  id v304;
  id v305;
  id v306;
  id v307;
  id v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  void *v377;
  char v378;
  CHWorkoutDetailHeartRateTableViewCell *v379;

  v375 = a2;
  v3 = sub_100047110(&qword_10083A868);
  v366 = *(char **)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v310 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = sub_100047110(&qword_10083A870);
  __chkstk_darwin(v374);
  v7 = (char *)&v310 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v372 = sub_100047110(&qword_10083A840);
  __chkstk_darwin(v372);
  v358 = (uint64_t)&v310 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v354 = type metadata accessor for RoundedRectangle(0);
  v9 = __chkstk_darwin(v354);
  v357 = (char *)&v310 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = type metadata accessor for PlainButtonStyle(0, v9);
  v347 = *(_QWORD *)(v348 - 8);
  __chkstk_darwin(v348);
  v346 = (char *)&v310 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = sub_100047110(&qword_10083A878);
  v336 = *(_QWORD *)(v337 - 8);
  __chkstk_darwin(v337);
  v335 = (char *)&v310 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v334 = sub_100047110(&qword_10083A880);
  __chkstk_darwin(v334);
  v338 = (char *)&v310 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v339 = sub_100047110(&qword_10083A888);
  __chkstk_darwin(v339);
  v340 = (uint64_t)&v310 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v344 = sub_100047110(&qword_100832DC0);
  v343 = *(_QWORD *)(v344 - 8);
  __chkstk_darwin(v344);
  v341 = (char *)&v310 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100832DC8);
  __chkstk_darwin(v16);
  v345 = (uint64_t)&v310 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v342 = sub_100047110(&qword_10083A890);
  __chkstk_darwin(v342);
  v349 = (uint64_t)&v310 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v351 = sub_100047110(&qword_10083A898);
  __chkstk_darwin(v351);
  v350 = (char *)&v310 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v356 = sub_100047110(&qword_10083A8A0);
  v353 = *(_QWORD *)(v356 - 8);
  __chkstk_darwin(v356);
  v352 = (char *)&v310 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v355 = (char *)&v310 - v22;
  v328 = sub_100047110(&qword_10083A8A8);
  v318 = *(_QWORD *)(v328 - 8);
  __chkstk_darwin(v328);
  v317 = (char *)&v310 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v326 = sub_100047110(&qword_10083A8B0);
  __chkstk_darwin(v326);
  v327 = (uint64_t)&v310 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v370 = sub_100047110(&qword_10083A8B8);
  __chkstk_darwin(v370);
  v371 = (uint64_t)&v310 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v333 = sub_100047110(&qword_10083A830);
  __chkstk_darwin(v333);
  v324 = (uint64_t)&v310 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemsList = type metadata accessor for LoadItemsList(0);
  v363 = *(_QWORD *)(ItemsList - 8);
  __chkstk_darwin(ItemsList);
  v364 = v28;
  v365 = (uint64_t)&v310 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = sub_100047110(&qword_10083A8C0);
  v321 = *(_QWORD *)(v323 - 8);
  __chkstk_darwin(v323);
  v320 = (char *)&v310 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v322 = (char *)&v310 - v31;
  v315 = sub_100047110(&qword_10083A8C8);
  v314 = *(_QWORD *)(v315 - 8);
  __chkstk_darwin(v315);
  v313 = (uint64_t)&v310 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100047110(&qword_10083A8D0);
  __chkstk_darwin(v33);
  v319 = (uint64_t)&v310 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v316 = (uint64_t)&v310 - v36;
  v329 = sub_100047110(&qword_10083A8D8);
  __chkstk_darwin(v329);
  v330 = (uint64_t)&v310 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v361 = sub_100047110(&qword_100834B38);
  v360 = *(_QWORD *)(v361 - 8);
  __chkstk_darwin(v361);
  v359 = (char *)&v310 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v373 = sub_100047110(&qword_10083A820);
  __chkstk_darwin(v373);
  v325 = (char *)&v310 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v362 = (uint64_t)&v310 - v41;
  v368 = sub_100047110(&qword_10083A810);
  __chkstk_darwin(v368);
  v331 = (char *)&v310 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100047110(&qword_10083A8E0);
  __chkstk_darwin(v43);
  v332 = (uint64_t)&v310 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v367 = (uint64_t)&v310 - v46;
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v48 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v50 = (char *)&v310 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100047110(&qword_10083A800);
  __chkstk_darwin(v51);
  v369 = (char *)&v310 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10056618C();
  if ((v53 & 1) != 0)
  {
    v376 = 0;
    LOBYTE(v377) = 1;
    v54 = static VerticalEdge.Set.all.getter(v53);
    View.listRowSeparator(_:edges:)(2, v54, &type metadata for Spacer, &protocol witness table for Spacer);
    v55 = v366;
    (*((void (**)(char *, char *, uint64_t))v366 + 2))(v7, v5, v3);
    swift_storeEnumTagMultiPayload(v7, v374, 1);
    v56 = sub_1005699EC();
    v376 = &type metadata for Spacer;
    v377 = &protocol witness table for Spacer;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v376, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v7, v51, v3, v56, OpaqueTypeConformance2);
    return (*((uint64_t (**)(char *, uint64_t))v55 + 1))(v5, v3);
  }
  else
  {
    v312 = v51;
    v366 = v7;
    v311 = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, a1 + *(int *)(ItemsList + 44), DataType);
    v59 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v50, DataType);
    v60 = enum case for TrainingLoadDataType.allDay(_:);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, DataType);
    v61 = a1 + *(int *)(ItemsList + 52);
    v62 = *(id *)v61;
    v63 = *(_BYTE *)(v61 + 8);
    sub_10010C5D0(*(id *)v61, v63);
    v64 = (char *)sub_1003F70B8(v62, v63);
    sub_10010C5EC(v62, v63);
    v65 = a1;
    if (v59 == v60)
    {
      KeyPath = swift_getKeyPath(&unk_100646A90);
      v376 = v64;
      v67 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v376, KeyPath, v67);
      swift_release(KeyPath);
      v68 = *(_QWORD *)&v64[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries];
      swift_bridgeObjectRetain(v68);

      v76 = v373;
      if ((unint64_t)v68 >> 62)
      {
        if (v68 < 0)
          v302 = v68;
        else
          v302 = v68 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v68);
        v77 = _CocoaArrayWrapper.endIndex.getter(v302);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v68, v303, v304, v305, v306, v307, v308, v309);
      }
      else
      {
        v77 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v68, v69, v70, v71, v72, v73, v74, v75);
      if (v77)
      {
        v78 = a1;
        if ((sub_1005663E0() & 1) != 0)
        {
          v79 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000057, 0x80000001006A6210);
          v80 = Text.init(_:tableName:bundle:comment:)(v79);
          v82 = (uint64_t)v81;
          v84 = v83;
          v376 = (void *)v80;
          v377 = v81;
          v86 = v85 & 1;
          v378 = v85 & 1;
          v379 = v83;
          v87 = static VerticalEdge.Set.all.getter(v80);
          v88 = v359;
          View.listRowSeparator(_:edges:)(2, v87, &type metadata for Text, &protocol witness table for Text);
          sub_1000E4458(v80, v82, v86);
          swift_bridgeObjectRelease(v84, v89, v90, v91, v92, v93, v94, v95);
          v96 = v360;
          v97 = v362;
          v98 = v361;
          (*(void (**)(uint64_t, char *, uint64_t))(v360 + 16))(v362, v88, v361);
          v99 = v97 + *(int *)(v373 + 36);
          *(_OWORD *)v99 = xmmword_1006468F0;
          *(_OWORD *)(v99 + 16) = xmmword_1006468F0;
          *(_BYTE *)(v99 + 32) = 0;
          v100.n128_f64[0] = (*(double (**)(char *, uint64_t))(v96 + 8))(v88, v98);
          LODWORD(v98) = static HierarchicalShapeStyle.secondary.getter(v100);
          v101 = v313;
          sub_100021CC0(v97, v313, &qword_10083A820);
          v102 = v315;
          *(_DWORD *)(v101 + *(int *)(v315 + 36)) = v98;
          sub_10001BE90(v97, &qword_10083A820);
          v103 = v316;
          sub_100045AD4(v101, v316, &qword_10083A8C8);
          v104 = 0;
          v105 = v364;
          v106 = v363;
        }
        else
        {
          v104 = 1;
          v105 = v364;
          v106 = v363;
          v103 = v316;
          v102 = v315;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v314 + 56))(v103, v104, 1, v102);
        v269 = *(id *)v61;
        v270 = *(_BYTE *)(v61 + 8);
        sub_10010C5D0(*(id *)v61, v270);
        v271 = (char *)sub_1003F70B8(v269, v270);
        sub_10010C5EC(v269, v270);
        v272 = swift_getKeyPath(&unk_100646AB8);
        v376 = v271;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v376, v272, v67);
        swift_release(v272);
        v273 = *(void **)&v271[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummariesForTheWeek];
        swift_bridgeObjectRetain(v273);

        v376 = v273;
        v274 = swift_getKeyPath(&unk_100646AE0);
        v275 = v365;
        sub_10004F8C8(v78, v365, type metadata accessor for LoadItemsList);
        v276 = *(unsigned __int8 *)(v106 + 80);
        v277 = (v276 + 16) & ~v276;
        v278 = swift_allocObject(&unk_1007A9988, v277 + v105, v276 | 7);
        sub_100569C08(v275, v278 + v277);
        v279 = swift_allocObject(&unk_1007A99B0, 32, 7);
        *(_QWORD *)(v279 + 16) = sub_10056A448;
        *(_QWORD *)(v279 + 24) = v278;
        v280 = sub_100047110(&qword_10083A9A0);
        v281 = sub_100047110(&qword_10083A9A8);
        v282 = sub_100028384(&qword_10083A9B0, &qword_10083A9A0, (uint64_t)&protocol conformance descriptor for [A]);
        v283 = sub_1000083D8(&qword_10083A9B8, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
        v284 = sub_10056A50C();
        v285 = v322;
        ForEach<>.init(_:id:content:)(&v376, v274, sub_10056A4C0, v279, v280, v281, v282, v283, v284);
        v166 = &qword_10083A8D0;
        v286 = v319;
        sub_100021CC0(v103, v319, &qword_10083A8D0);
        v287 = v321;
        v288 = *(void (**)(char *, char *, uint64_t))(v321 + 16);
        v289 = v320;
        v290 = v323;
        v288(v320, v285, v323);
        v291 = v324;
        sub_100021CC0(v286, v324, &qword_10083A8D0);
        v292 = sub_100047110(&qword_10083AA08);
        v288((char *)(v291 + *(int *)(v292 + 48)), v289, v290);
        v293 = *(void (**)(char *, uint64_t))(v287 + 8);
        v293(v289, v290);
        sub_10001BE90(v286, &qword_10083A8D0);
        v294 = v330;
        sub_100021CC0(v291, v330, &qword_10083A830);
        swift_storeEnumTagMultiPayload(v294, v329, 1);
        v295 = sub_100569AF4();
        v296 = sub_100028384(&qword_10083A828, &qword_10083A830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v171 = (uint64_t)v331;
        _ConditionalContent<>.init(storage:)(v294, v373, v333, v295, v296);
        sub_10001BE90(v291, &qword_10083A830);
        v293(v285, v290);
        v172 = v103;
      }
      else
      {
        v376 = (void *)sub_100565E44();
        v377 = v144;
        v145 = sub_100038CA0();
        v146 = Text.init<A>(_:)(&v376, &type metadata for String, v145);
        v148 = (uint64_t)v147;
        v150 = v149;
        v376 = (void *)v146;
        v377 = v147;
        v152 = v151 & 1;
        v378 = v151 & 1;
        v379 = v149;
        v153 = static VerticalEdge.Set.all.getter(v146);
        v154 = v359;
        View.listRowSeparator(_:edges:)(2, v153, &type metadata for Text, &protocol witness table for Text);
        sub_1000E4458(v146, v148, v152);
        swift_bridgeObjectRelease(v150, v155, v156, v157, v158, v159, v160, v161);
        v162 = v360;
        v163 = (uint64_t)v325;
        v164 = v361;
        (*(void (**)(char *, char *, uint64_t))(v360 + 16))(v325, v154, v361);
        v165 = v163 + *(int *)(v76 + 36);
        *(_OWORD *)v165 = xmmword_1006468F0;
        *(_OWORD *)(v165 + 16) = xmmword_1006468F0;
        *(_BYTE *)(v165 + 32) = 0;
        (*(void (**)(char *, uint64_t))(v162 + 8))(v154, v164);
        v166 = &qword_10083A820;
        v167 = v362;
        sub_100045AD4(v163, v362, &qword_10083A820);
        v168 = v330;
        sub_100021CC0(v167, v330, &qword_10083A820);
        swift_storeEnumTagMultiPayload(v168, v329, 0);
        v169 = sub_100569AF4();
        v170 = sub_100028384(&qword_10083A828, &qword_10083A830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v171 = (uint64_t)v331;
        _ConditionalContent<>.init(storage:)(v168, v76, v333, v169, v170);
        v172 = v167;
      }
      sub_10001BE90(v172, v166);
      v268 = v311;
      v297 = v371;
      sub_100021CC0(v171, v371, &qword_10083A810);
      swift_storeEnumTagMultiPayload(v297, v370, 0);
      v298 = sub_100569A70();
      v299 = sub_100028384(&qword_10083A838, &qword_10083A840, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v264 = (uint64_t)v369;
      _ConditionalContent<>.init(storage:)(v297, v368, v372, v298, v299);
      sub_10001BE90(v171, &qword_10083A810);
      v265 = v374;
      v266 = (uint64_t)v366;
      v267 = v312;
    }
    else
    {
      v107 = swift_getKeyPath(&unk_100646A40);
      v376 = v64;
      v108 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v376, v107, v108);
      swift_release(v107);
      v109 = *(CHWorkoutDetailHeartRateTableViewCell **)&v64[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek];
      swift_bridgeObjectRetain(v109);

      v110 = *(_QWORD *)v109->cellPadding;
      swift_bridgeObjectRelease(v109, v111, v112, v113, v114, v115, v116, v117);
      v118 = v373;
      if (v110)
      {
        v119 = *(id *)v61;
        v120 = *(_BYTE *)(v61 + 8);
        sub_10010C5D0(*(id *)v61, v120);
        v121 = (char *)sub_1003F70B8(v119, v120);
        v362 = v65;
        v122 = v121;
        sub_10010C5EC(v119, v120);
        v123 = swift_getKeyPath(&unk_100646A40);
        v376 = v122;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v376, v123, v108);
        swift_release(v123);
        v124 = *(void **)&v122[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek];
        swift_bridgeObjectRetain(v124);

        v376 = v124;
        v125 = swift_getKeyPath(&unk_100646A68);
        v126 = v365;
        sub_10004F8C8(v362, v365, type metadata accessor for LoadItemsList);
        v127 = v363;
        v128 = *(unsigned __int8 *)(v363 + 80);
        v129 = (v128 + 16) & ~v128;
        v130 = v364;
        v131 = swift_allocObject(&unk_1007A9938, v129 + v364, v128 | 7);
        sub_100569C08(v126, v131 + v129);
        v132 = sub_100047110(&qword_1008215D8);
        v133 = sub_100047110(&qword_10083A8E8);
        v134 = sub_100028384(&qword_10083A8F0, &qword_1008215D8, (uint64_t)&protocol conformance descriptor for [A]);
        v135 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v136 = sub_100569C98();
        v137 = v317;
        v138 = v132;
        v65 = v362;
        ForEach<>.init(_:id:content:)(&v376, v125, sub_100569C4C, v131, v138, v133, v134, v135, v136);
        v139 = v318;
        v140 = v327;
        v141 = v328;
        (*(void (**)(uint64_t, char *, uint64_t))(v318 + 16))(v327, v137, v328);
        swift_storeEnumTagMultiPayload(v140, v326, 1);
        v142 = sub_100569AF4();
        v143 = sub_100569EBC();
        _ConditionalContent<>.init(storage:)(v140, v373, v141, v142, v143);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v137, v141);
      }
      else
      {
        v376 = (void *)sub_100565E44();
        v377 = v173;
        v174 = sub_100038CA0();
        v175 = Text.init<A>(_:)(&v376, &type metadata for String, v174);
        v177 = (uint64_t)v176;
        v179 = v178;
        v376 = (void *)v175;
        v377 = v176;
        v181 = v180 & 1;
        v378 = v180 & 1;
        v379 = v178;
        v182 = static VerticalEdge.Set.all.getter(v175);
        v183 = v359;
        View.listRowSeparator(_:edges:)(2, v182, &type metadata for Text, &protocol witness table for Text);
        sub_1000E4458(v175, v177, v181);
        swift_bridgeObjectRelease(v179, v184, v185, v186, v187, v188, v189, v190);
        v191 = v360;
        v192 = (uint64_t)v325;
        v193 = v361;
        (*(void (**)(char *, char *, uint64_t))(v360 + 16))(v325, v183, v361);
        v194 = v192 + *(int *)(v118 + 36);
        *(_OWORD *)v194 = xmmword_1006468F0;
        *(_OWORD *)(v194 + 16) = xmmword_1006468F0;
        *(_BYTE *)(v194 + 32) = 0;
        (*(void (**)(char *, uint64_t))(v191 + 8))(v183, v193);
        v195 = v362;
        sub_100045AD4(v192, v362, &qword_10083A820);
        v196 = v327;
        sub_100021CC0(v195, v327, &qword_10083A820);
        swift_storeEnumTagMultiPayload(v196, v326, 0);
        v197 = sub_100569AF4();
        v198 = sub_100569EBC();
        _ConditionalContent<>.init(storage:)(v196, v118, v328, v197, v198);
        sub_10001BE90(v195, &qword_10083A820);
        v130 = v364;
        v126 = v365;
        v127 = v363;
      }
      sub_10004F8C8(v65, v126, type metadata accessor for LoadItemsList);
      v199 = *(unsigned __int8 *)(v127 + 80);
      v200 = (v199 + 16) & ~v199;
      v201 = swift_allocObject(&unk_1007A9960, v200 + v130, v199 | 7);
      sub_100569C08(v126, v201 + v200);
      v202 = sub_100047110(&qword_10083A938);
      v203 = sub_100569F68();
      v204 = v335;
      Button.init(action:label:)(sub_100569F24, v201, sub_100568FC4, 0, v202, v203);
      v205 = v336;
      v206 = (uint64_t)v338;
      v207 = v337;
      (*(void (**)(char *, char *, uint64_t))(v336 + 16))(v338, v204, v337);
      v208 = v206 + *(int *)(v334 + 36);
      *(_OWORD *)v208 = xmmword_100646900;
      *(_OWORD *)(v208 + 16) = xmmword_100646910;
      *(_BYTE *)(v208 + 32) = 0;
      v209 = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v204, v207);
      LOBYTE(v207) = static Edge.Set.all.getter(v209);
      v210 = EdgeInsets.init(_all:)(15.0);
      v212 = v211;
      v214 = v213;
      v216 = v215;
      v217 = v340;
      sub_100021CC0(v206, v340, &qword_10083A880);
      v218 = v339;
      v219 = v217 + *(int *)(v339 + 36);
      *(_BYTE *)v219 = v207;
      *(double *)(v219 + 8) = v210;
      *(_QWORD *)(v219 + 16) = v212;
      *(_QWORD *)(v219 + 24) = v214;
      *(_QWORD *)(v219 + 32) = v216;
      *(_BYTE *)(v219 + 40) = 0;
      v220 = sub_10001BE90(v206, &qword_10083A880);
      v221 = v346;
      PlainButtonStyle.init()(v220);
      v222 = sub_10056A070();
      v223 = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
      v224 = v341;
      v225 = v218;
      v226 = v348;
      View.buttonStyle<A>(_:)(v221, v225, v348, v222, v223);
      (*(void (**)(char *, uint64_t))(v347 + 8))(v221, v226);
      v227 = sub_10001BE90(v217, &qword_10083A888);
      v228 = static Alignment.center.getter(v227);
      v229 = v345;
      v231 = sub_1003ED25C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v345, 0.0, 1, 0.0, 1, v228, v230);
      (*(void (**)(char *, uint64_t, double))(v343 + 8))(v224, v344, v231);
      v232 = sub_100032490();
      v233 = Color.init(uiColor:)(v232);
      LOBYTE(v205) = static Edge.Set.all.getter(v233);
      v234 = v349;
      sub_100021CC0(v229, v349, &qword_100832DC8);
      v235 = v234 + *(int *)(v342 + 36);
      *(_QWORD *)v235 = v233;
      *(_BYTE *)(v235 + 8) = v205;
      sub_10001BE90(v229, &qword_100832DC8);
      v236 = v357;
      v237 = &v357[*(int *)(v354 + 20)];
      v238 = enum case for RoundedCornerStyle.continuous(_:);
      v239 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v239 - 8) + 104))(v237, v238, v239);
      __asm { FMOV            V0.2D, #14.0 }
      *v236 = _Q0;
      v245 = v351;
      v246 = (uint64_t)v350;
      v247 = (uint64_t)&v350[*(int *)(v351 + 36)];
      sub_10004F8C8((uint64_t)v236, v247, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v247 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
      sub_100021CC0(v234, v246, &qword_10083A890);
      sub_100011F54((uint64_t)v236, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v248 = sub_10001BE90(v234, &qword_10083A890);
      v249 = static VerticalEdge.Set.all.getter(v248);
      v250 = sub_10056A178();
      v251 = v352;
      View.listRowSeparator(_:edges:)(2, v249, v245, v250);
      sub_10001BE90(v246, &qword_10083A898);
      v252 = v353;
      v253 = v355;
      v254 = v356;
      (*(void (**)(char *, char *, uint64_t))(v353 + 32))(v355, v251, v356);
      v255 = v367;
      v256 = v332;
      sub_100021CC0(v367, v332, &qword_10083A8E0);
      v257 = *(void (**)(char *, char *, uint64_t))(v252 + 16);
      v257(v251, v253, v254);
      v258 = v358;
      sub_100021CC0(v256, v358, &qword_10083A8E0);
      v259 = sub_100047110(&qword_10083A998);
      v257((char *)(v258 + *(int *)(v259 + 48)), v251, v254);
      v260 = *(void (**)(char *, uint64_t))(v252 + 8);
      v260(v251, v254);
      sub_10001BE90(v256, &qword_10083A8E0);
      v261 = v371;
      sub_100021CC0(v258, v371, &qword_10083A840);
      swift_storeEnumTagMultiPayload(v261, v370, 1);
      v262 = sub_100569A70();
      v263 = sub_100028384(&qword_10083A838, &qword_10083A840, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v264 = (uint64_t)v369;
      _ConditionalContent<>.init(storage:)(v261, v368, v372, v262, v263);
      sub_10001BE90(v258, &qword_10083A840);
      v260(v253, v254);
      sub_10001BE90(v255, &qword_10083A8E0);
      v265 = v374;
      v266 = (uint64_t)v366;
      v267 = v312;
      v268 = v311;
    }
    sub_100021CC0(v264, v266, &qword_10083A800);
    swift_storeEnumTagMultiPayload(v266, v265, 0);
    v300 = sub_1005699EC();
    v376 = &type metadata for Spacer;
    v377 = &protocol witness table for Spacer;
    v301 = swift_getOpaqueTypeConformance2(&v376, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v266, v267, v268, v300, v301);
    return sub_10001BE90(v264, &qword_10083A800);
  }
}

uint64_t sub_1005680F4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t ItemsList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  _OWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;

  v74 = a3;
  v92 = a4;
  v93 = a2;
  v78 = a1;
  ItemsList = type metadata accessor for LoadItemsList(0);
  v6 = *(_QWORD *)(*(_QWORD *)(ItemsList - 8) + 64);
  v90 = *(_QWORD *)(ItemsList - 8);
  v91 = v6;
  __chkstk_darwin(ItemsList);
  v89 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v88);
  v84 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AccessibilityTraits(0);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for AccessibilityChildBehavior(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActivitySummaryItemView(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_100047110(&qword_10083AA10);
  v76 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10083A9F8);
  __chkstk_darwin(v19);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100047110(&qword_10083A9E8);
  __chkstk_darwin(v75);
  v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100047110(&qword_10083A9D0);
  __chkstk_darwin(v77);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100047110(&qword_10083A9C8);
  v27 = *(_QWORD *)(v26 - 8);
  v86 = v26;
  v87 = v27;
  __chkstk_darwin(v26);
  v81 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_10083AA18);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(void **)(a3 + *(int *)(ItemsList + 48));
  v31 = (char *)v16 + *(int *)(v14 + 24);
  v32 = type metadata accessor for DayIndex(0);
  (*(void (**)(char *, id, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, v78, v32);
  v33 = v93;
  *v16 = v93;
  v16[1] = v30;
  v78 = v33;
  static AccessibilityChildBehavior.combine.getter(v30);
  v34 = sub_1000083D8(&qword_10083AA00, type metadata accessor for ActivitySummaryItemView, (uint64_t)&unk_100640CA0);
  View.accessibilityElement(children:)(v13, v14, v34);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v13, v73);
  v35 = sub_100011F54((uint64_t)v16, type metadata accessor for ActivitySummaryItemView);
  static AccessibilityTraits.isButton.getter(v35);
  v94 = v14;
  v95 = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v37 = v71;
  View.accessibility(addTraits:)(v11, v71, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v11, v80);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v37);
  v38 = sub_100032490();
  v39 = Color.init(uiColor:)(v38);
  LOBYTE(v16) = static Edge.Set.all.getter(v39);
  sub_100021CC0((uint64_t)v21, (uint64_t)v23, &qword_10083A9F8);
  v40 = &v23[*(int *)(v75 + 36)];
  *(_QWORD *)v40 = v39;
  v40[8] = (char)v16;
  sub_10001BE90((uint64_t)v21, &qword_10083A9F8);
  v41 = v84;
  v42 = &v84[*(int *)(v88 + 20)];
  v43 = enum case for RoundedCornerStyle.continuous(_:);
  v44 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  __asm { FMOV            V0.2D, #14.0 }
  *v41 = _Q0;
  v50 = v77;
  v51 = (uint64_t)&v25[*(int *)(v77 + 36)];
  sub_10004F8C8((uint64_t)v41, v51, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v51 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v23, (uint64_t)v25, &qword_10083A9E8);
  sub_100011F54((uint64_t)v41, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10001BE90((uint64_t)v23, &qword_10083A9E8);
  v52 = v89;
  sub_10004F8C8(v74, v89, type metadata accessor for LoadItemsList);
  v53 = *(unsigned __int8 *)(v90 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = (v91 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject(&unk_1007A99D8, v55 + 8, v53 | 7);
  sub_100569C08(v52, v56 + v54);
  *(_QWORD *)(v56 + v55) = v93;
  v57 = sub_10056A5E8();
  v58 = v78;
  v59 = v81;
  View.onTapGesture(count:perform:)(1, sub_10056A8A8, v56, v50, v57);
  swift_release(v56);
  v60 = sub_10001BE90((uint64_t)v25, &qword_10083A9D0);
  v61 = static VerticalEdge.Set.all.getter(v60);
  v94 = v50;
  v95 = v57;
  v62 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v63 = v82;
  v64 = v61;
  v65 = v86;
  View.listRowSeparator(_:edges:)(2, v64, v86, v62);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v65);
  v66 = v83;
  v67 = v92;
  v68 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v92, v63, v85);
  v69 = v67 + *(int *)(sub_100047110(&qword_10083A9A8) + 36);
  *(_OWORD *)v69 = xmmword_1006468F0;
  *(_OWORD *)(v69 + 16) = xmmword_1006468F0;
  *(_BYTE *)(v69 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v63, v68);
}

void sub_100568768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 48))
  {
    if (a2)
    {
      sub_100204764((uint64_t)v6);
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if ((_DWORD)v12 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
LABEL_7:

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        return;
      }
    }
    else
    {
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v9);
    }
    Date.init()(v12);
    sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828370);
    goto LABEL_7;
  }
}

uint64_t sub_1005688B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t ItemsList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  char v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t HistoryItemView;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106[2];

  v84 = a1;
  v105 = a3;
  ItemsList = type metadata accessor for LoadItemsList(0);
  v6 = *(_QWORD *)(*(_QWORD *)(ItemsList - 8) + 64);
  v103 = *(_QWORD *)(ItemsList - 8);
  v104 = v6;
  __chkstk_darwin(ItemsList);
  v102 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessibilityTraits(0);
  v100 = *(_QWORD *)(v8 - 8);
  v101 = v8;
  __chkstk_darwin(v8);
  v99 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessibilityChildBehavior(0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  __chkstk_darwin(v10);
  v90 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v86);
  v13 = (_OWORD *)((char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v82);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v78 - v17;
  HistoryItemView = type metadata accessor for LoadHistoryItemView(0);
  __chkstk_darwin(HistoryItemView);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100047110(&qword_10083A918);
  __chkstk_darwin(v80);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100047110(&qword_10083AA20);
  v88 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v83 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_10083A908);
  __chkstk_darwin(v92);
  v85 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_10083A900);
  v26 = *(_QWORD *)(v25 - 8);
  v97 = v25;
  v98 = v26;
  __chkstk_darwin(v25);
  v89 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_10083AA28);
  v93 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v91 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000252E0(a1, (uint64_t)v20);
  v81 = a2;
  v29 = *(void **)a2;
  v31 = *(void **)(a2 + 16);
  v30 = *(void **)(a2 + 24);
  v32 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 1, 1, v32);
  *((_QWORD *)v20 + 5) = v29;
  *((_QWORD *)v20 + 6) = v31;
  *((_QWORD *)v20 + 7) = v30;
  v33 = type metadata accessor for BalanceDataProvider(0);
  v34 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  v35 = v29;
  v36 = v31;
  v37 = v30;
  *((_QWORD *)v20 + 8) = Environment.init<A>(_:)(v33, v33, v34);
  v20[72] = v38 & 1;
  v39 = &v20[*(int *)(HistoryItemView + 36)];
  sub_100021CC0((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_10082EDF0);
  State.init(wrappedValue:)(v39, v15, v82);
  sub_10001BE90((uint64_t)v18, (uint64_t *)&unk_10082EDF0);
  v40 = (char *)v13 + *(int *)(v86 + 20);
  v41 = enum case for RoundedCornerStyle.continuous(_:);
  v42 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v40, v41, v42);
  __asm { FMOV            V0.2D, #14.0 }
  *v13 = _Q0;
  v48 = v80;
  v49 = (uint64_t)&v22[*(int *)(v80 + 36)];
  sub_10004F8C8((uint64_t)v13, v49, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v49 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_10004F8C8((uint64_t)v20, (uint64_t)v22, type metadata accessor for LoadHistoryItemView);
  sub_100011F54((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v50 = sub_100011F54((uint64_t)v20, type metadata accessor for LoadHistoryItemView);
  v51 = v90;
  static AccessibilityChildBehavior.combine.getter(v50);
  v52 = sub_100569E20();
  v53 = v83;
  View.accessibilityElement(children:)(v51, v48, v52);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v51, v95);
  v54 = sub_10001BE90((uint64_t)v22, &qword_10083A918);
  v55 = v99;
  static AccessibilityTraits.isButton.getter(v54);
  *(_QWORD *)&v106[0] = v48;
  *((_QWORD *)&v106[0] + 1) = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v106, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v57 = (uint64_t)v85;
  v58 = v87;
  View.accessibility(addTraits:)(v55, v87, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v55, v101);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v53, v58);
  v59 = v102;
  sub_10004F8C8(v81, v102, type metadata accessor for LoadItemsList);
  sub_1000252E0(v84, (uint64_t)v106);
  v60 = *(unsigned __int8 *)(v103 + 80);
  v61 = (v60 + 16) & ~v60;
  v62 = (v104 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  v63 = swift_allocObject(&unk_1007A9A00, v62 + 40, v60 | 7);
  sub_100569C08(v59, v63 + v61);
  sub_10002411C(v106, v63 + v62);
  v64 = sub_100569D74();
  v65 = v89;
  v66 = v92;
  View.onTapGesture(count:perform:)(1, sub_10056A9E0, v63, v92, v64);
  swift_release(v63);
  v67 = sub_10001BE90(v57, &qword_10083A908);
  v68 = static VerticalEdge.Set.all.getter(v67);
  *(_QWORD *)&v106[0] = v66;
  *((_QWORD *)&v106[0] + 1) = v64;
  v69 = swift_getOpaqueTypeConformance2(v106, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v70 = v91;
  v71 = v68;
  v72 = v97;
  View.listRowSeparator(_:edges:)(2, v71, v97, v69);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v65, v72);
  v73 = v93;
  v74 = v105;
  v75 = v96;
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 16))(v105, v70, v96);
  v76 = v74 + *(int *)(sub_100047110(&qword_10083A8E8) + 36);
  *(_OWORD *)v76 = xmmword_1006468F0;
  *(_OWORD *)(v76 + 16) = xmmword_1006468F0;
  *(_BYTE *)(v76 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v70, v75);
}

__n128 sub_100568FC4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  char v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  __int128 v25;
  __n128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  static VerticalAlignment.center.getter(a1);
  sub_100569100((uint64_t)&v25);
  v3 = v25;
  v4 = v26.n128_u8[0];
  v5 = (CHWorkoutDetailHeartRateTableViewCell *)v26.n128_u64[1];
  v6 = v28;
  v8 = static Alignment.center.getter(v7);
  sub_1003ED2B4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v25, 0.0, 1, 0.0, 1, v8, v9);
  sub_1000E4458(v3, *((uint64_t *)&v3 + 1), v4);
  swift_release(v6);
  swift_bridgeObjectRelease(v5, v10, v11, v12, v13, v14, v15, v16);
  v17 = v34;
  v18 = v36;
  *(_OWORD *)(a2 + 160) = v35;
  *(_OWORD *)(a2 + 176) = v18;
  v19 = v30;
  v20 = v32;
  v21 = v33;
  *(_OWORD *)(a2 + 96) = v31;
  *(_OWORD *)(a2 + 112) = v20;
  *(_OWORD *)(a2 + 128) = v21;
  *(_OWORD *)(a2 + 144) = v17;
  v22 = v28;
  v23 = v29;
  *(_OWORD *)(a2 + 32) = v27;
  *(_OWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 192) = v37;
  *(_OWORD *)(a2 + 64) = v23;
  *(_OWORD *)(a2 + 80) = v19;
  result = v26;
  *(_OWORD *)a2 = v25;
  *(__n128 *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 200) = 0;
  return result;
}

void sub_100569100(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  char v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  __n128 v28;
  int v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000011, 0x80000001006A6340);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v11 = static Font.body.getter(v10);
  v13 = Text.font(_:)(v11, v3, v5, v9, v7, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release(v11);
  sub_1000E4458(v3, v5, v9);
  swift_bridgeObjectRelease(v7, v20, v21, v22, v23, v24, v25, v26);
  v27 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v29 = static HierarchicalShapeStyle.secondary.getter(v28);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v27;
  *(_DWORD *)(a1 + 56) = v29;
  sub_1000E439C(v13, v15, v17 & 1);
  swift_bridgeObjectRetain(v19);
  sub_1000E4458(v13, v15, v17 & 1);
  swift_bridgeObjectRelease(v19, v30, v31, v32, v33, v34, v35, v36);
}

uint64_t sub_100569258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  __n128 v20;
  double v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v26;

  v4 = sub_100047110(&qword_10083A7E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083A7D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083A848);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v14);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v15 = sub_100047110(&qword_10083A850);
  v16.n128_f64[0] = sub_100569434(a1, (uint64_t)&v6[*(int *)(v15 + 44)]);
  v17 = static Font.title2.getter(v16);
  KeyPath = swift_getKeyPath(&unk_1006469C0);
  sub_100021CC0((uint64_t)v6, (uint64_t)v9, &qword_10083A7E8);
  v19 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  sub_10001BE90((uint64_t)v6, &qword_10083A7E8);
  v21 = static Font.Weight.bold.getter(v20);
  v22 = sub_1005698C0();
  View.fontWeight(_:)(*(_QWORD *)&v21, 0, v7, v22);
  sub_10001BE90((uint64_t)v9, &qword_10083A7D0);
  v24 = static Color.white.getter(v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2, v13, v10);
  *(_QWORD *)(a2 + *(int *)(sub_100047110(&qword_10083A7B8) + 36)) = v24;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_100569434@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t DataType;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t ItemsList;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v4 = sub_100047110(&qword_10083A858);
  __chkstk_darwin(v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v35[-v8];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v11 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ItemsList = type metadata accessor for LoadItemsList(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(ItemsList + 44), DataType);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 88))(v13, DataType);
  v16 = enum case for TrainingLoadDataType.allDay(_:);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, DataType);
  if (v15 == v16)
  {
    v17 = LocalizedStringKey.init(stringLiteral:)(0x442037207473614CLL, 0xEB00000000737961);
    v36 = Text.init(_:tableName:bundle:comment:)(v17);
    v37 = v18;
    v38 = v19 & 1;
    v39 = v20;
    v40 = 0;
  }
  else
  {
    v21 = LocalizedStringKey.init(stringLiteral:)(0x5720746E65636552, 0xEF7374756F6B726FLL);
    v36 = Text.init(_:tableName:bundle:comment:)(v21);
    v37 = v23;
    v38 = v22 & 1;
    v39 = v24;
    v40 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v36, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  v25 = v41;
  v26 = v42;
  v27 = v43;
  v28 = v44;
  v29 = v45;
  if ((sub_10056618C() & 1) != 0)
  {
    ProgressView<>.init<>()(v30);
    v31 = sub_100047110(&qword_10081EE68);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 0, 1, v31);
  }
  else
  {
    v32 = sub_100047110(&qword_10081EE68);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
  }
  sub_100021CC0((uint64_t)v9, (uint64_t)v6, &qword_10083A858);
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v28;
  *(_BYTE *)(a2 + 32) = v29;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 1;
  v33 = sub_100047110(&qword_10083A860);
  sub_100021CC0((uint64_t)v6, a2 + *(int *)(v33 + 64), &qword_10083A858);
  sub_100116B48(v25, v26, v27, v28);
  sub_10001BE90((uint64_t)v9, &qword_10083A858);
  sub_10001BE90((uint64_t)v6, &qword_10083A858);
  return sub_100116B88(v25, v26, v27, v28);
}

uint64_t sub_100569748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[16];
  uint64_t v9;

  v1 = sub_100047110(&qword_10083A7B8);
  __chkstk_darwin(v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v0;
  sub_100569258(v0, (uint64_t)v3);
  v4 = sub_100047110(&qword_10083A7C0);
  v5 = sub_100569814();
  v6 = sub_10056995C();
  return Section<>.init(header:content:)(v3, sub_10056980C, v8, v1, v4, v5, v6);
}

uint64_t sub_10056980C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005665C8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100569814()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A7C8;
  if (!qword_10083A7C8)
  {
    v1 = sub_100007050(&qword_10083A7B8);
    v2[0] = sub_100007050(&qword_10083A7D0);
    v2[1] = sub_1005698C0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A7C8);
  }
  return result;
}

unint64_t sub_1005698C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A7D8;
  if (!qword_10083A7D8)
  {
    v1 = sub_100007050(&qword_10083A7D0);
    sub_100028384(&qword_10083A7E0, &qword_10083A7E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A7D8);
  }
  return result;
}

unint64_t sub_10056995C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A7F0;
  if (!qword_10083A7F0)
  {
    v1 = sub_100007050(&qword_10083A7C0);
    v2[0] = &type metadata for Spacer;
    v2[1] = &protocol witness table for Spacer;
    sub_1005699EC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A7F0);
  }
  return result;
}

unint64_t sub_1005699EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A7F8;
  if (!qword_10083A7F8)
  {
    v1 = sub_100007050(&qword_10083A800);
    sub_100569A70();
    sub_100028384(&qword_10083A838, &qword_10083A840, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A7F8);
  }
  return result;
}

unint64_t sub_100569A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A808;
  if (!qword_10083A808)
  {
    v1 = sub_100007050(&qword_10083A810);
    sub_100569AF4();
    sub_100028384(&qword_10083A828, &qword_10083A830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A808);
  }
  return result;
}

unint64_t sub_100569AF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A818;
  if (!qword_10083A818)
  {
    v1 = sub_100007050(&qword_10083A820);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A818);
  }
  return result;
}

uint64_t sub_100569BBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100016804(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_100569C08(uint64_t a1, uint64_t a2)
{
  uint64_t ItemsList;

  ItemsList = type metadata accessor for LoadItemsList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ItemsList - 8) + 32))(a2, a1, ItemsList);
  return a2;
}

uint64_t sub_100569C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadItemsList(0) - 8) + 80);
  return sub_1005688B4(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100569C98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_10083A8F8;
  if (!qword_10083A8F8)
  {
    v1 = sub_100007050(&qword_10083A8E8);
    v2 = sub_100007050(&qword_10083A900);
    v4 = sub_100007050(&qword_10083A908);
    v5 = sub_100569D74();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A8F8);
  }
  return result;
}

unint64_t sub_100569D74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A910;
  if (!qword_10083A910)
  {
    v1 = sub_100007050(&qword_10083A908);
    v2[0] = sub_100007050(&qword_10083A918);
    v2[1] = sub_100569E20();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A910);
  }
  return result;
}

unint64_t sub_100569E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A920;
  if (!qword_10083A920)
  {
    v1 = sub_100007050(&qword_10083A918);
    sub_1000083D8(&qword_10083A928, type metadata accessor for LoadHistoryItemView, (uint64_t)&unk_100629088);
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A920);
  }
  return result;
}

unint64_t sub_100569EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A930;
  if (!qword_10083A930)
  {
    v1 = sub_100007050(&qword_10083A8A8);
    sub_100569C98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A930);
  }
  return result;
}

void sub_100569F24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadItemsList(0) - 8) + 80);
  if (*(_QWORD *)(v0 + ((v1 + 16) & ~v1) + 48))
    sub_1003B95E8(1);
}

unint64_t sub_100569F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A940;
  if (!qword_10083A940)
  {
    v1 = sub_100007050(&qword_10083A938);
    sub_100569FEC();
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A940);
  }
  return result;
}

unint64_t sub_100569FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A948;
  if (!qword_10083A948)
  {
    v1 = sub_100007050(&qword_10083A950);
    sub_100028384(&qword_10083A958, &qword_10083A960, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A948);
  }
  return result;
}

unint64_t sub_10056A070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A968;
  if (!qword_10083A968)
  {
    v1 = sub_100007050(&qword_10083A888);
    sub_10056A0DC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A968);
  }
  return result;
}

unint64_t sub_10056A0DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A970;
  if (!qword_10083A970)
  {
    v1 = sub_100007050(&qword_10083A880);
    sub_100028384(&qword_10083A978, &qword_10083A878, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A970);
  }
  return result;
}

unint64_t sub_10056A178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A980;
  if (!qword_10083A980)
  {
    v1 = sub_100007050(&qword_10083A898);
    sub_10056A1FC();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A980);
  }
  return result;
}

unint64_t sub_10056A1FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A988;
  if (!qword_10083A988)
  {
    v1 = sub_100007050(&qword_10083A890);
    sub_10056A280();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A988);
  }
  return result;
}

unint64_t sub_10056A280()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  _QWORD v3[4];

  result = qword_10083A990;
  if (!qword_10083A990)
  {
    v1 = sub_100007050(&qword_100832DC8);
    v3[0] = sub_100007050(&qword_10083A888);
    v3[1] = type metadata accessor for PlainButtonStyle(255, v2);
    v3[2] = sub_10056A070();
    v3[3] = sub_1000083D8(&qword_100834600, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A990);
  }
  return result;
}

uint64_t sub_10056A36C()
{
  uint64_t v0;
  int *ItemsList;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DataType;

  ItemsList = (int *)type metadata accessor for LoadItemsList(0);
  v2 = *((_QWORD *)ItemsList - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v7 + 40));
  v8 = v7 + ItemsList[11];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v8, DataType);

  sub_10010C5EC(*(id *)(v7 + ItemsList[13]), *(_BYTE *)(v7 + ItemsList[13] + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10056A448@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadItemsList(0) - 8) + 80);
  return sub_1005680F4(a1, a2, v3 + ((v7 + 16) & ~v7), a3);
}

uint64_t sub_10056A49C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10056A4C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = sub_100047110(&qword_1008221B0);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_10056A50C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_10083A9C0;
  if (!qword_10083A9C0)
  {
    v1 = sub_100007050(&qword_10083A9A8);
    v2 = sub_100007050(&qword_10083A9C8);
    v4 = sub_100007050(&qword_10083A9D0);
    v5 = sub_10056A5E8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    sub_100028384(&qword_100820650, &qword_100820658, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A9C0);
  }
  return result;
}

unint64_t sub_10056A5E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A9D8;
  if (!qword_10083A9D8)
  {
    v1 = sub_100007050(&qword_10083A9D0);
    sub_10056A66C();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A9D8);
  }
  return result;
}

unint64_t sub_10056A66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083A9E0;
  if (!qword_10083A9E0)
  {
    v1 = sub_100007050(&qword_10083A9E8);
    sub_10056A6F0();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A9E0);
  }
  return result;
}

unint64_t sub_10056A6F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083A9F0;
  if (!qword_10083A9F0)
  {
    v1 = sub_100007050(&qword_10083A9F8);
    v2[0] = type metadata accessor for ActivitySummaryItemView(255);
    v2[1] = sub_1000083D8(&qword_10083AA00, type metadata accessor for ActivitySummaryItemView, (uint64_t)&unk_100640CA0);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083A9F0);
  }
  return result;
}

uint64_t sub_10056A7B0()
{
  uint64_t v0;
  int *ItemsList;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DataType;

  ItemsList = (int *)type metadata accessor for LoadItemsList(0);
  v2 = *((_QWORD *)ItemsList - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v7 + 40));
  v8 = v7 + ItemsList[11];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v8, DataType);

  sub_10010C5EC(*(id *)(v7 + ItemsList[13]), *(_BYTE *)(v7 + ItemsList[13] + 8));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10056A8A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for LoadItemsList(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_100568768(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10056A8E8()
{
  uint64_t v0;
  int *ItemsList;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DataType;

  ItemsList = (int *)type metadata accessor for LoadItemsList(0);
  v2 = *((_QWORD *)ItemsList - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;

  swift_release(*(_QWORD *)(v7 + 40));
  v8 = v7 + ItemsList[11];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DataType - 8) + 8))(v8, DataType);

  sub_10010C5EC(*(id *)(v7 + ItemsList[13]), *(_BYTE *)(v7 + ItemsList[13] + 8));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

void sub_10056A9E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for LoadItemsList(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  if (*(_QWORD *)(v0 + v2 + 48))
    sub_1003B93B0(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

unint64_t sub_10056AA3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083AA30;
  if (!qword_10083AA30)
  {
    v1 = sub_100007050(&qword_10083AA38);
    sub_100569814();
    sub_10056995C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10083AA30);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsAnalytics()
{
  return &type metadata for TrendsAnalytics;
}

uint64_t sub_10056AAC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10056AAF4 + 4 * byte_100646AFC[a2]))(1702260557, 0xE400000000000000);
}

uint64_t sub_10056AAF4@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 1819045714;
  else
    return 0x646E617453;
}

uint64_t sub_10056AB20()
{
  return 0x65636E6174736944;
}

uint64_t sub_10056AB38@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x20676E696B6C6157;
}

uint64_t sub_10056AC28()
{
  return 0x2073746867696C46;
}

unint64_t sub_10056AC4C(unsigned __int8 a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v14;

  v6 = sub_100047110(&qword_10083AA40);
  inited = swift_initStackObject(v6, &v14);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  strcpy((char *)(inited + 32), "arrowDirection");
  *(_BYTE *)(inited + 47) = -18;
  if (a2)
    v8 = 0xE400000000000000;
  else
    v8 = 0xE200000000000000;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = 0x63697274656DLL;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  sub_10056AAC4(a3 & 1, a1);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(inited + 72) = v12;
  return sub_100435774(inited);
}

void sub_10056AD60(unsigned __int8 a1, char a2, char a3)
{
  id v6;
  void *v7;
  unsigned int v8;
  unint64_t v9;
  NSString v10;
  __n128 v11;
  Class isa;

  v6 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "isHealthDataSubmissionAllowed");

    if (v8)
    {
      v9 = sub_10056AC4C(a1, a2, a3 & 1);
      v10 = String._bridgeToObjectiveC()();
      sub_100139CE8();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v11 = swift_bridgeObjectRelease(v9);
      AnalyticsSendEvent(v10, isa, v11);

    }
  }
}

void sub_10056AE6C()
{
  uint64_t v0;
  uint64_t inited;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  NSString v3;
  Class isa;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  __n128 v12;
  _BYTE v13[56];

  v0 = sub_100047110(&qword_10083AA40);
  inited = swift_initStackObject(v0, v13);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = 0x746E657665;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = String._bridgeToObjectiveC()();
  v2 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435774(inited);
  v3 = String._bridgeToObjectiveC()();
  sub_100139CE8();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2, v5, v6, v7, v8, v9, v10, v11);
  AnalyticsSendEvent(v3, isa, v12);

}

uint64_t sub_10056AF54()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_100022BA4(v0[4], v0[5]);
  sub_10056AFA4((uint64_t)v0 + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10056AF9C()
{
  return type metadata accessor for CatalogTipActivityTileDataModel(0);
}

uint64_t sub_10056AFA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100824DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for PowerTargetValue(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = v3;
  return a1;
}

void destroy for PowerTargetValue(uint64_t a1)
{

}

uint64_t assignWithCopy for PowerTargetValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = (void *)a2[2];
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for PowerTargetValue(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PowerTargetValue()
{
  return &type metadata for PowerTargetValue;
}

uint64_t sub_10056B0BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BBB08, 1);
}

uint64_t sub_10056B0CC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;

  v6 = a2 & 1;
  v7 = type metadata accessor for MetricText(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10056B214(a1, v6);
  v13 = v12;
  v14 = 0;
  if ((a2 & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    v15 = 0;
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      v16 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "localizedShortPowerUnitString");
      if (v16)
      {
        v17 = v16;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v15 = v18;

      }
      else
      {
        v14 = 0;
        v15 = 0;
      }
    }
  }
  MetricText.init(value:unit:description:stale:includesSlashes:)(v11, v13, v14, v15, 0, 0, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
}

uint64_t sub_10056B200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10056B0CC(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_10056B214(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a2;
  v2 = type metadata accessor for LocalizationFeature(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for NumberFormatStyleConfiguration.Precision(0, v4);
  v7 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082E238);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v28 - v21;
  if ((v30 & 1) != 0 || (v19 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for LocalizationFeature.workout(_:), v2, v20);
    v26 = static Localization.workoutUILocalizedString(_:feature:)(0x4E5F43495254454DLL, 0xEE0045554C41564FLL, v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    v31 = v19;
    static Locale.autoupdatingCurrent.getter(v18);
    v23 = sub_10030A42C();
    FloatingPointFormatStyle.init(locale:)(v12, &type metadata for Double, v23);
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)(0);
    FloatingPointFormatStyle.precision(_:)(v9, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v29);
    v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v16, v13);
    v25 = sub_1003B0DFC();
    BinaryFloatingPoint.formatted<A>(_:)(&v32, v22, &type metadata for Double, v13, v23, v25);
    v24(v22, v13);
    return v32;
  }
  return v26;
}

uint64_t sub_10056B47C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  double i;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones);
  if (!v1)
    return 0;
  v2 = 0;
  v3 = v1 + 64;
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  for (i = 0.0; ; i = i + *(double *)(*(_QWORD *)(v1 + 56) + 8 * v10))
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v2 << 6);
      continue;
    }
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v7)
      return *(_QWORD *)&i;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v7)
        return *(_QWORD *)&i;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (!v12)
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v7)
          return *(_QWORD *)&i;
        v12 = *(_QWORD *)(v3 + 8 * v2);
        if (!v12)
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v7)
            return *(_QWORD *)&i;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          if (!v12)
          {
            v2 = v11 + 4;
            if (v11 + 4 >= v7)
              return *(_QWORD *)&i;
            v12 = *(_QWORD *)(v3 + 8 * v2);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_25:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v2 << 6);
  }
  v13 = v11 + 5;
  if (v13 >= v7)
    return *(_QWORD *)&i;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v2 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      return *(_QWORD *)&i;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10056B5C8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = type metadata accessor for CyclingPowerZonesConfigurationType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = a2;
    v12 = HKWorkoutActivity.cyclingPowerZonesConfiguration.getter();

    if (v12)
    {
LABEL_6:
      v14 = v11;
      v15 = HKWorkoutActivity.elapsedTimeInCyclingPowerZones.getter();

      if (v15)
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  v13 = HKWorkout.cyclingPowerZonesConfiguration.getter(v8);
  if (!v13)
  {

LABEL_16:
    *(_QWORD *)(v3 + 16) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType, enum case for CyclingPowerZonesConfigurationType.automatic(_:), v6);
    v15 = 0;
    goto LABEL_17;
  }
  v12 = v13;
  if (a2)
  {
    v11 = a2;
    goto LABEL_6;
  }
LABEL_7:
  v15 = HKWorkout.elapsedTimeInCyclingPowerZones.getter();
  swift_bridgeObjectRelease(0);
  if (!v15)
  {

    goto LABEL_15;
  }
LABEL_8:
  if ((CyclingPowerZonesConfiguration.isEmpty.getter() & 1) != 0)
  {

    swift_bridgeObjectRelease(v15);
LABEL_15:
    swift_release(v12);
    goto LABEL_16;
  }
  v16 = CyclingPowerZonesConfiguration.zones.getter();
  v17 = v16;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v22 = v16;
    else
      v22 = v16 & 0xFFFFFFFFFFFFFF8;
    v23 = type metadata accessor for Zone(0);
    v20 = _bridgeCocoaArray<A>(_:)(v22, v23);
    v19 = swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = swift_bridgeObjectRetain(v16);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
    type metadata accessor for Zone(0);
    v19 = swift_bridgeObjectRelease(v17);
    v20 = v17;
  }
  *(_QWORD *)(v3 + 16) = v20;
  CyclingPowerZonesConfiguration.configurationType.getter(v19);

  swift_release(v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType, v10, v6);
LABEL_17:
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones) = v15;
  return v3;
}

uint64_t sub_10056B7CC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_configurationType;
  v2 = type metadata accessor for CyclingPowerZonesConfigurationType(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10056B834()
{
  return type metadata accessor for WorkoutPowerInfo(0);
}

uint64_t type metadata accessor for WorkoutPowerInfo(uint64_t a1)
{
  uint64_t result;

  result = qword_10083AB70;
  if (!qword_10083AB70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutPowerInfo);
  return result;
}

uint64_t sub_10056B878(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  result = type metadata accessor for CyclingPowerZonesConfigurationType(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_10056B8F0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __int128 v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = (int *)type metadata accessor for FriendsHighlightCard(0);
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = v21[16];
    sub_1000EB3F4(*(_QWORD *)v21, v23, v24);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v24;
    v15[v18[6]] = v16[v18[6]];
    v15[v18[7]] = v16[v18[7]];
    v15[v18[8]] = v16[v18[8]];
    v25 = v18[9];
    v26 = *(_QWORD *)&v16[v25];
    *(_QWORD *)&v15[v25] = v26;
    v27 = v18[10];
    v28 = *(void **)&v16[v27];
    *(_QWORD *)&v15[v27] = v28;
    v15[v18[11]] = v16[v18[11]];
    v15[v18[12]] = v16[v18[12]];
    v29 = a3[6];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *(_QWORD *)((char *)a2 + v29 + 24);
    swift_bridgeObjectRetain(v26);
    v33 = v28;
    if (v32)
    {
      v34 = *((_QWORD *)v31 + 4);
      *((_QWORD *)v30 + 3) = v32;
      *((_QWORD *)v30 + 4) = v34;
      (**(void (***)(char *, char *, uint64_t))(v32 - 8))(v30, v31, v32);
    }
    else
    {
      v35 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v35;
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    }
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

_QWORD *sub_10056BAE8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD *result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (int *)type metadata accessor for FriendsHighlightCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[v8[5]], *(_QWORD *)&v6[v8[5] + 8], v6[v8[5] + 16]);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v6[v8[9]], v9, v10, v11, v12, v13, v14, v15);

  result = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  if (result[3])
    return (_QWORD *)_s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  return result;
}

_QWORD *sub_10056BBD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v23 = v16[9];
  v24 = *(_QWORD *)&v14[v23];
  *(_QWORD *)&v13[v23] = v24;
  v25 = v16[10];
  v26 = *(void **)&v14[v25];
  *(_QWORD *)&v13[v25] = v26;
  v13[v16[11]] = v14[v16[11]];
  v13[v16[12]] = v14[v16[12]];
  v27 = a3[6];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a2 + v27 + 24);
  swift_bridgeObjectRetain(v24);
  v31 = v26;
  if (v30)
  {
    v32 = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 3) = v30;
    *((_QWORD *)v28 + 4) = v32;
    (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
  }
  else
  {
    v33 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v33;
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_10056BDA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  v23 = *(_QWORD *)v18;
  v24 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v25 = v18[16];
  v18[16] = v22;
  sub_1000EB41C(v23, v24, v25);
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v26 = v16[9];
  v27 = *(_QWORD *)&v14[v26];
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)&v13[v26];
  *(_QWORD *)&v13[v26] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = v16[10];
  v37 = *(void **)&v13[v36];
  v38 = *(void **)&v14[v36];
  *(_QWORD *)&v13[v36] = v38;
  v39 = v38;

  v13[v16[11]] = v14[v16[11]];
  v13[v16[12]] = v14[v16[12]];
  v40 = a3[6];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = *(_QWORD *)((char *)a2 + v40 + 24);
  if (!*(_QWORD *)((char *)a1 + v40 + 24))
  {
    if (v43)
    {
      *((_QWORD *)v41 + 3) = v43;
      *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      (**(void (***)(char *, char *))(v43 - 8))(v41, v42);
      goto LABEL_13;
    }
LABEL_12:
    v44 = *(_OWORD *)v42;
    v45 = *((_OWORD *)v42 + 1);
    *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
    *(_OWORD *)v41 = v44;
    *((_OWORD *)v41 + 1) = v45;
    goto LABEL_13;
  }
  if (!v43)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v41);
    goto LABEL_12;
  }
  sub_1000F1A58(v41, v42);
LABEL_13:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

char *sub_10056BFC8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(_QWORD *)&v9[v12[9]] = *(_QWORD *)&v10[v12[9]];
  *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
  v9[v12[11]] = v10[v12[11]];
  v9[v12[12]] = v10[v12[12]];
  v16 = a3[6];
  v17 = a3[7];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  a1[v17] = a2[v17];
  return a1;
}

char *sub_10056C134(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  __int128 v33;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v19 = v14[16];
  v14[16] = v16;
  sub_1000EB41C(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v20 = v12[9];
  v21 = *(CHWorkoutDetailHeartRateTableViewCell **)&v9[v20];
  *(_QWORD *)&v9[v20] = *(_QWORD *)&v10[v20];
  swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = v12[10];
  v30 = *(void **)&v9[v29];
  *(_QWORD *)&v9[v29] = *(_QWORD *)&v10[v29];

  v9[v12[11]] = v10[v12[11]];
  v9[v12[12]] = v10[v12[12]];
  v31 = a3[6];
  v32 = &a1[v31];
  if (*(_QWORD *)&a1[v31 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v31]);
  v33 = *(_OWORD *)&a2[v31 + 16];
  *(_OWORD *)v32 = *(_OWORD *)&a2[v31];
  *((_OWORD *)v32 + 1) = v33;
  *((_QWORD *)v32 + 4) = *(_QWORD *)&a2[v31 + 32];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_10056C2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056C2F8);
}

uint64_t sub_10056C2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for FriendsHighlightCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10056C3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10056C3C0);
}

uint64_t sub_10056C3C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for FriendsHighlightCard(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  return result;
}

uint64_t type metadata accessor for FriendsHighlightCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083AC80;
  if (!qword_10083AC80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendsHighlightCardView);
  return result;
}

void sub_10056C4A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for FriendsHighlightCard(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_100646CD8;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_10056C540(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BBBC0, 1);
}

uint64_t sub_10056C550@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int16 v157;
  _OWORD v158[10];
  __int16 v159;
  char v160;
  _OWORD v161[2];
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int16 v170;
  __int128 v171;
  __int128 v172;
  _OWORD v173[3];
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int16 v179;
  _QWORD v180[2];
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  __int128 v187;

  v133 = a2;
  v3 = type metadata accessor for Divider(0);
  v138 = *(_QWORD *)(v3 - 8);
  v139 = v3;
  __chkstk_darwin(v3);
  v136 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100047110(&qword_10081F618);
  __chkstk_darwin(v137);
  v144 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v146 = (uint64_t)&v124 - v7;
  v8 = (int *)type metadata accessor for FriendsHighlightCardView(0);
  v141 = (char *)*((_QWORD *)v8 - 1);
  v9 = *((_QWORD *)v141 + 8);
  __chkstk_darwin(v8);
  v129 = (uint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  *(_QWORD *)&v140 = (char *)&v124 - v11;
  __chkstk_darwin(v12);
  v135 = (char *)&v124 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v124 - v15;
  v143 = sub_100047110(&qword_10081F620);
  v17 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v19 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v124 - v21;
  v134 = a1 + v8[5];
  v23 = v134;
  v142 = type metadata accessor for FriendsHighlightCard(0);
  *((_QWORD *)&v172 + 1) = v142;
  *(_QWORD *)&v173[0] = &off_10079DA28;
  v24 = sub_10004C480(&v171);
  sub_10004F8C8(v23, (uint64_t)v24, type metadata accessor for FriendsHighlightCard);
  v25 = sub_100021CC0(a1 + v8[6], (uint64_t)v173 + 8, &qword_10081F600);
  v26 = v8[7];
  v130 = v8;
  v131 = v26;
  LOBYTE(v174) = *(_BYTE *)(a1 + v26);
  v27 = static Edge.Set.all.getter(v25);
  sub_1000F4B28((uint64_t)&v171, (uint64_t)v161);
  BYTE8(v165) = v27;
  v166 = xmmword_100623640;
  v167 = xmmword_100623640;
  LOBYTE(v168) = 0;
  sub_1000F4B64(&v171);
  sub_100021CC0((uint64_t)v161, (uint64_t)&v171, &qword_10081F628);
  BYTE1(v177) = 0;
  sub_10001BE90((uint64_t)v161, &qword_10081F628);
  sub_10004F8C8(a1, (uint64_t)v16, type metadata accessor for FriendsHighlightCardView);
  v28 = v141[80];
  v29 = (v28 + 16) & ~v28;
  v125 = v28 | 7;
  v126 = v29 + v9;
  v30 = swift_allocObject(&unk_1007A9B50, v29 + v9, v28 | 7);
  v127 = v29;
  v128 = v16;
  sub_100047C88((uint64_t)v16, v30 + v29, type metadata accessor for FriendsHighlightCardView);
  v31 = sub_100047110(&qword_10081F630);
  v32 = sub_1000F4D64();
  View.onTapGesture(count:perform:)(1, sub_10056F79C, v30, v31, v32);
  v33 = v30;
  v34 = v143;
  swift_release(v33);
  v35 = (uint64_t)v144;
  sub_10001BE90((uint64_t)&v171, &qword_10081F630);
  v145 = v17;
  v36 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 32);
  v141 = v22;
  v37 = v22;
  v38 = a1;
  v39 = (int *)v142;
  v132 = v19;
  v40 = v36(v37, v19, v34);
  v41 = v136;
  Divider.init()(v40);
  v42 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v43 = Color.init(_:)(v42);
  LOBYTE(v31) = static Edge.Set.all.getter(v43);
  v44 = v138;
  v45 = v139;
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v35, v41, v139);
  v46 = v35 + *(int *)(v137 + 36);
  *(_QWORD *)v46 = v43;
  *(_BYTE *)(v46 + 8) = v31;
  v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v48 = v41;
  v49 = v134;
  v50 = (uint64_t)v135;
  v51 = v146;
  v47(v48, v45);
  sub_100045AD4(v35, v51, &qword_10081F618);
  LODWORD(v51) = *(unsigned __int8 *)(v49 + v39[11]);
  sub_10004F8C8(v38, v50, type metadata accessor for FriendsHighlightCardView);
  if ((_DWORD)v51 != 1)
  {
    sub_100011F54(v50, type metadata accessor for FriendsHighlightCardView);
    v54 = v140;
    sub_10004F8C8(v38, v140, type metadata accessor for FriendsHighlightCardView);
    goto LABEL_7;
  }
  v52 = v130;
  v53 = *(unsigned __int8 *)(v50 + v130[5] + v39[12]);
  sub_100011F54(v50, type metadata accessor for FriendsHighlightCardView);
  v54 = v140;
  sub_10004F8C8(v38, v140, type metadata accessor for FriendsHighlightCardView);
  if (v53 != 1)
  {
LABEL_7:
    v56 = sub_100011F54(v54, type metadata accessor for FriendsHighlightCardView);
    goto LABEL_8;
  }
  v55 = *(_QWORD *)(*(_QWORD *)(v54 + v52[5] + v39[9]) + 16);
  v56 = sub_100011F54(v54, type metadata accessor for FriendsHighlightCardView);
  if (!v55)
  {
LABEL_8:
    v73 = *(_BYTE *)(v38 + v131);
    v74 = static Edge.Set.bottom.getter(v56);
    v75 = EdgeInsets.init(_all:)(15.0);
    v77 = v76;
    v79 = v78;
    v81 = v80;
    v83 = static Edge.Set.top.getter(v82);
    v84 = EdgeInsets.init(_all:)(12.0);
    v86 = v85;
    v88 = v87;
    v90 = v89;
    v92 = static Edge.Set.horizontal.getter(v91);
    v93 = EdgeInsets.init(_all:)(30.0);
    LOBYTE(v147) = 0;
    LOBYTE(v180[0]) = 0;
    v160 = 0;
    LOBYTE(v161[0]) = v73;
    *(_OWORD *)((char *)v161 + 8) = xmmword_100646C80;
    BYTE8(v161[1]) = v74;
    *(double *)&v162 = v75;
    *((_QWORD *)&v162 + 1) = v77;
    *(_QWORD *)&v163 = v79;
    *((_QWORD *)&v163 + 1) = v81;
    LOBYTE(v164) = 0;
    BYTE8(v164) = v83;
    *(double *)&v165 = v84;
    *((_QWORD *)&v165 + 1) = v86;
    *(_QWORD *)&v166 = v88;
    *((_QWORD *)&v166 + 1) = v90;
    LOBYTE(v167) = 0;
    BYTE8(v167) = v92;
    *(double *)&v168 = v93;
    *((_QWORD *)&v168 + 1) = v94;
    *(_QWORD *)&v169 = v95;
    *((_QWORD *)&v169 + 1) = v96;
    LOBYTE(v170) = 0;
    sub_10056F7C8((uint64_t)v161);
    sub_100045AD4((uint64_t)v161, (uint64_t)v158, &qword_10083ACC8);
    v97 = sub_100047110(&qword_10083ACD0);
    v98 = sub_100047110(&qword_10083ACD8);
    v99 = sub_10056F7D4();
    v100 = sub_1000F4518(&qword_10083ACF8, &qword_10083ACD8, (void (*)(void))sub_10056F858);
    _ConditionalContent<>.init(storage:)(v158, v97, v98, v99, v100);
    v102 = v132;
    v101 = v133;
    v71 = v145;
    goto LABEL_9;
  }
  v57 = *(_QWORD *)(v49 + v39[9]);
  v58 = v131;
  v59 = (uint64_t)v128;
  sub_10004F8C8(v38, (uint64_t)v128, type metadata accessor for FriendsHighlightCardView);
  v60 = swift_allocObject(&unk_1007A9B78, v126, v125);
  sub_100047C88(v59, v60 + v127, type metadata accessor for FriendsHighlightCardView);
  v61 = swift_bridgeObjectRetain(v57);
  sub_1003EDDF8(v180, v61);
  v62 = v180[1];
  v139 = v180[0];
  v63 = v181;
  v64 = v38;
  v65 = v182;
  v66 = v183;
  v68 = v184;
  v67 = v185;
  LODWORD(v138) = v186;
  v140 = v187;
  LOBYTE(v57) = *(_BYTE *)(v64 + v58);
  v69 = v129;
  sub_10004F8C8(v64, v129, type metadata accessor for FriendsHighlightCardView);
  v70 = v69;
  v71 = v145;
  if ((v57 & 1) != 0)
    v72 = 0;
  else
    v72 = *(_BYTE *)(v69 + v130[5] + (uint64_t)*(int *)(v142 + 28)) ^ 1;
  sub_100011F54(v70, type metadata accessor for FriendsHighlightCardView);
  *(_QWORD *)&v161[0] = v139;
  *((_QWORD *)&v161[0] + 1) = v62;
  LOBYTE(v161[1]) = v63;
  *((_QWORD *)&v161[1] + 1) = v65;
  LOBYTE(v162) = v66;
  *((_QWORD *)&v162 + 1) = v68;
  *(_QWORD *)&v163 = v67;
  BYTE8(v163) = v138;
  v164 = v140;
  LOBYTE(v165) = v72 & 1;
  sub_10056FA1C((uint64_t)v161);
  sub_100045AD4((uint64_t)v161, (uint64_t)v158, &qword_10083ACC8);
  v120 = sub_100047110(&qword_10083ACD0);
  v121 = sub_100047110(&qword_10083ACD8);
  v122 = sub_10056F7D4();
  v123 = sub_1000F4518(&qword_10083ACF8, &qword_10083ACD8, (void (*)(void))sub_10056F858);
  _ConditionalContent<>.init(storage:)(v158, v120, v121, v122, v123);
  v34 = v143;
  v35 = (uint64_t)v144;
  v102 = v132;
  v101 = v133;
LABEL_9:
  v103 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v104 = v141;
  v103(v102, v141, v34);
  v105 = v146;
  sub_100021CC0(v146, v35, &qword_10081F618);
  v155 = v177;
  v156 = v178;
  v157 = v179;
  v151 = v173[2];
  v152 = v174;
  v153 = v175;
  v154 = v176;
  v147 = v171;
  v148 = v172;
  v149 = v173[0];
  v150 = v173[1];
  v103(v101, v102, v34);
  v106 = sub_100047110(&qword_10083AD10);
  sub_100021CC0(v35, (uint64_t)&v101[*(int *)(v106 + 48)], &qword_10081F618);
  v107 = *(int *)(v106 + 64);
  v108 = v156;
  v158[8] = v155;
  v158[9] = v156;
  v109 = v151;
  v110 = v152;
  v158[4] = v151;
  v158[5] = v152;
  v112 = v153;
  v111 = v154;
  v158[6] = v153;
  v158[7] = v154;
  v113 = v147;
  v114 = v148;
  v158[0] = v147;
  v158[1] = v148;
  v116 = v149;
  v115 = v150;
  v158[2] = v149;
  v158[3] = v150;
  v117 = &v101[v107];
  *((_OWORD *)v117 + 8) = v155;
  *((_OWORD *)v117 + 9) = v108;
  *((_OWORD *)v117 + 4) = v109;
  *((_OWORD *)v117 + 5) = v110;
  *((_OWORD *)v117 + 6) = v112;
  *((_OWORD *)v117 + 7) = v111;
  *(_OWORD *)v117 = v113;
  *((_OWORD *)v117 + 1) = v114;
  v159 = v157;
  *((_WORD *)v117 + 80) = v157;
  *((_OWORD *)v117 + 2) = v116;
  *((_OWORD *)v117 + 3) = v115;
  sub_10056F8FC((uint64_t)v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_10056F890);
  sub_10001BE90(v105, &qword_10081F618);
  v118 = *(void (**)(char *, uint64_t))(v145 + 8);
  v118(v104, v34);
  v168 = v155;
  v169 = v156;
  v170 = v157;
  v164 = v151;
  v165 = v152;
  v166 = v153;
  v167 = v154;
  v161[0] = v147;
  v161[1] = v148;
  v162 = v149;
  v163 = v150;
  sub_10056F8FC((uint64_t)v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_10056F970);
  sub_10001BE90(v35, &qword_10081F618);
  return ((uint64_t (*)(char *, uint64_t))v118)(v102, v34);
}

uint64_t sub_10056CEE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _OWORD v6[2];
  _QWORD v7[3];
  uint64_t v8;

  v2 = type metadata accessor for FriendsHighlightCardView(0);
  sub_100021CC0(a1 + *(int *)(v2 + 24), (uint64_t)v7, &qword_10081F600);
  if (!v8)
    return sub_10001BE90((uint64_t)v7, &qword_10081F600);
  v3 = sub_100016804(v7, v8);
  v4 = a1 + *(int *)(v2 + 20);
  memset(v6, 0, sizeof(v6));
  sub_100414810(v4, (uint64_t)v6, *v3);
  sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v7);
}

uint64_t sub_10056CF88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  _QWORD v21[2];
  uint64_t v22;

  v2 = type metadata accessor for FriendsHighlightCardView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v6 = a1 + *(int *)(v5 + 20);
  v7 = *(_QWORD *)(v6 + *(int *)(type metadata accessor for FriendsHighlightCard(0) + 36));
  v22 = v7;
  sub_10004F8C8(a1, (uint64_t)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FriendsHighlightCardView);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1007A9BA0, v9 + v4, v8 | 7);
  sub_100047C88((uint64_t)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for FriendsHighlightCardView);
  swift_bridgeObjectRetain(v7);
  v11 = sub_100047110(&qword_10083AD18);
  v12 = type metadata accessor for UUID(0);
  v13 = sub_100047110(&qword_10083AD20);
  v14 = sub_100028384(&qword_10083AD28, &qword_10083AD18, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = sub_100007050(&qword_10083AD30);
  v16 = sub_10056FA74();
  v21[0] = v15;
  v21[1] = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v21, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v18 = sub_1000083D8(&qword_10083AD70, type metadata accessor for ActivitySharingHighlightViewModel, (uint64_t)&unk_10063162C);
  return ForEach<>.init(_:content:)(&v22, sub_10056FA28, v10, v11, v12, v13, v14, OpaqueTypeConformance2, v18);
}

uint64_t sub_10056D138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = (CHWorkoutDetailHeartRateTableViewCell *)a2;
  v68 = a2;
  v78 = a3;
  v79 = a1;
  v4 = type metadata accessor for FriendsHighlightCardView(0);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v5;
  __chkstk_darwin(v4);
  v75 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v8;
  __chkstk_darwin(v7);
  v72 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083AD68);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10083AD58);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - v17;
  v19 = sub_100047110(&qword_10083AD40);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100047110(&qword_10083AD78);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_10083AD30);
  __chkstk_darwin(v70);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter(v26, v27, v28, v29, v30);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v31 = sub_100047110(&qword_10083AD80);
  v32 = sub_10056D694(v3, v79, (uint64_t)&v12[*(int *)(v31 + 44)]);
  LOBYTE(v3) = static Edge.Set.bottom.getter(v32);
  v33 = EdgeInsets.init(_all:)(32.0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_100021CC0((uint64_t)v12, (uint64_t)v15, &qword_10083AD68);
  v40 = &v15[*(int *)(v13 + 36)];
  *v40 = (char)v3;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_10001BE90((uint64_t)v12, &qword_10083AD68);
  v41 = sub_100045AD4((uint64_t)v15, (uint64_t)v18, &qword_10083AD58);
  LOBYTE(v3) = static Edge.Set.horizontal.getter(v41);
  v42 = EdgeInsets.init(_all:)(15.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_100021CC0((uint64_t)v18, (uint64_t)v21, &qword_10083AD58);
  v49 = &v21[*(int *)(v19 + 36)];
  *v49 = (char)v3;
  *((double *)v49 + 1) = v42;
  *((_QWORD *)v49 + 2) = v44;
  *((_QWORD *)v49 + 3) = v46;
  *((_QWORD *)v49 + 4) = v48;
  v49[40] = 0;
  sub_10001BE90((uint64_t)v18, &qword_10083AD58);
  v51 = static Axis.Set.horizontal.getter(v50);
  v52 = static Alignment.center.getter(v51);
  v54 = v53;
  v55 = sub_1000F4518(&qword_10083AD48, &qword_10083AD40, (void (*)(void))sub_10056FB40);
  View.containerRelativeFrame(_:alignment:)(v51, v52, v54, v19, v55);
  sub_10001BE90((uint64_t)v21, &qword_10083AD40);
  v56 = v69;
  v57 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v25, v23, v71);
  v58 = v70;
  v25[*(int *)(v70 + 36)] = 0;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v57);
  v59 = v72;
  sub_10004F8C8(v79, v72, type metadata accessor for ActivitySharingHighlightViewModel);
  v60 = v75;
  sub_10004F8C8(v68, v75, type metadata accessor for FriendsHighlightCardView);
  v61 = *(unsigned __int8 *)(v73 + 80);
  v62 = (v61 + 16) & ~v61;
  v63 = *(unsigned __int8 *)(v76 + 80);
  v64 = (v74 + v63 + v62) & ~v63;
  v65 = swift_allocObject(&unk_1007A9BC8, v64 + v77, v61 | v63 | 7);
  sub_100047C88(v59, v65 + v62, type metadata accessor for ActivitySharingHighlightViewModel);
  sub_100047C88(v60, v65 + v64, type metadata accessor for FriendsHighlightCardView);
  v66 = sub_10056FA74();
  View.onTapGesture(count:perform:)(1, sub_10056FDE4, v65, v58, v66);
  swift_release(v65);
  return sub_10001BE90((uint64_t)v25, &qword_10083AD30);
}

uint64_t sub_10056D5B8(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[4];
  _QWORD v11[3];
  uint64_t v12;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 28));
  v4 = type metadata accessor for FriendsHighlightCardView(0);
  sub_100021CC0(a2 + *(int *)(v4 + 24), (uint64_t)v11, &qword_10081F600);
  if (!v12)
    return sub_10001BE90((uint64_t)v11, &qword_10081F600);
  v5 = sub_100016804(v11, v12);
  v6 = a2 + *(int *)(v4 + 20);
  v10[3] = &type metadata for FriendCardActionContext;
  v10[0] = v3;
  v7 = *v5;
  v8 = v3;
  sub_10040BD10(v6, (uint64_t)v10, v7);

  sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
}

uint64_t sub_10056D694@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  char v83;
  __int128 v84;
  __int128 v85;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  unsigned __int8 v116;
  _OWORD v117[21];
  _OWORD v118[2];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  char v128;
  _OWORD v129[8];
  uint64_t v130;
  char v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  _BYTE v153[7];
  uint64_t v154;
  char v155;
  _BYTE v156[7];
  uint64_t v157;
  char v158;
  _BYTE v159[7];
  double v160;
  char v161;
  _BYTE v162[7];
  uint64_t v163;
  char v164;
  _BYTE v165[7];
  uint64_t v166;
  char v167;
  _BYTE v168[7];
  uint64_t v169;
  uint64_t v170;
  _OWORD v171[8];
  __int16 v172;
  _BYTE v173[7];
  char v174;
  _BYTE v175[7];
  char v176;
  _BYTE v177[7];
  char v178;
  _BYTE v179[7];
  unsigned __int8 v180;
  _BYTE v181[7];
  unsigned __int8 v182;
  _BYTE v183[7];
  unsigned __int8 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  uint64_t v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int16 v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  unsigned __int8 v213;
  double v214;
  char v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  char v227;
  char v228;
  __int128 v229;
  uint64_t v230;
  uint64_t v231;
  char v232;

  v4 = a1;
  v97 = a3;
  v98 = a1;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v95 = *(_QWORD *)(v5 - 8);
  v96 = v5;
  __chkstk_darwin(v5);
  v94 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v93 = (uint64_t)&v89 - v8;
  v9 = sub_100047110(&qword_10083AD88);
  __chkstk_darwin(v9);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083AD90);
  __chkstk_darwin(v12);
  v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - v16;
  v100 = (uint64_t)&v89 - v16;
  v18 = sub_10056DF18(v4, a2, (uint64_t)v11);
  LOBYTE(v4) = static Edge.Set.top.getter(v18);
  v19 = EdgeInsets.init(_all:)(12.0);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_10083AD88);
  v26 = &v14[*(int *)(v12 + 36)];
  *v26 = (char)v4;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_10001BE90((uint64_t)v11, &qword_10083AD88);
  v27 = sub_100045AD4((uint64_t)v14, (uint64_t)v17, &qword_10083AD90);
  v105 = static Alignment.center.getter(v27);
  v103 = v28;
  v90 = a2;
  sub_100270514((uint64_t)&v137);
  v30 = *((_QWORD *)&v137 + 1);
  v31 = v137;
  v106 = v137;
  v32 = v138;
  v33 = v139;
  if (*(unsigned __int8 *)(a2 + 8) >= 2u)
    v34 = 0x4028000000000000;
  else
    v34 = 0x4034000000000000;
  v35 = static Edge.Set.all.getter(v29);
  v36 = type metadata accessor for FriendsHighlightCardView(0);
  v37 = *((_BYTE *)&v98->super.super.super.super.isa + *(int *)(v36 + 28));
  v38 = INFINITY;
  if (v37)
    v38 = 0.0;
  v102 = v38;
  v222 = v105;
  v223 = v103;
  v224 = v31;
  v225 = v30;
  v226 = v32;
  v227 = v33;
  v228 = v35;
  v229 = xmmword_1006281F0;
  v230 = v34;
  v231 = 0;
  v232 = 0;
  v39 = static Alignment.center.getter(v36);
  sub_1003ED4CC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v185, 0.0, 1, v102, v37, v39, v40);
  sub_100283FC0(v106, v30, v32, *((uint64_t *)&v32 + 1), v33);
  v42 = static Alignment.center.getter(v41);
  LOBYTE(v88) = 1;
  LOBYTE(v87) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v208, 0, 1, 0, 1, 0, 1, 0x4059000000000000, 0, 0, v87, 0, v88, v42, v43);
  v99 = v208;
  v101 = v210;
  v103 = v212;
  v102 = v214;
  v105 = v216;
  v106 = v218;
  v91 = v221;
  v92 = v220;
  v184 = v209;
  v182 = v211;
  v180 = v213;
  v178 = v215;
  v176 = v217;
  v174 = v219;
  sub_100270AF8((uint64_t)v171);
  v205 = v171[6];
  v206 = v171[7];
  v207 = v172;
  v201 = v171[2];
  v202 = v171[3];
  v204 = v171[5];
  v203 = v171[4];
  v200 = v171[1];
  v199 = v171[0];
  LODWORD(v90) = static Edge.Set.horizontal.getter(v44);
  v45 = v93;
  sub_1003F6E18(v93);
  v46 = v94;
  v47 = v95;
  v48 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, enum case for DynamicTypeSize.accessibility1(_:), v96);
  v49 = v46;
  LOBYTE(v46) = static DynamicTypeSize.< infix(_:_:)(v45, v46);
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v49, v48);
  v50((char *)v45, v48);
  v51 = 15.0;
  if ((v46 & 1) != 0)
    v51 = 0.0;
  v52 = EdgeInsets.init(_all:)(v51);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v113 = v205;
  v114 = v206;
  LOWORD(v115) = v207;
  v109 = v201;
  v110 = v202;
  v111 = v203;
  v112 = v204;
  v107 = v199;
  v108 = v200;
  v116 = 0;
  v59 = (uint64_t)v104;
  sub_100021CC0(v100, (uint64_t)v104, &qword_10083AD90);
  v60 = v184;
  LODWORD(v95) = v184;
  v61 = v182;
  LODWORD(v96) = v182;
  v62 = v180;
  LODWORD(v98) = v180;
  v63 = v178;
  v64 = v176;
  v65 = v174;
  LODWORD(v94) = v116;
  v66 = v59;
  v67 = v97;
  sub_100021CC0(v66, v97, &qword_10083AD90);
  v68 = sub_100047110(&qword_10083AD98);
  v69 = (void *)(v67 + *(int *)(v68 + 48));
  v117[10] = v195;
  v117[11] = v196;
  v117[12] = v197;
  v117[6] = v191;
  v117[7] = v192;
  v117[8] = v193;
  v117[9] = v194;
  v117[4] = v189;
  v117[5] = v190;
  v117[2] = v187;
  v117[3] = v188;
  v117[0] = v185;
  v117[1] = v186;
  *(_QWORD *)&v117[13] = v198;
  *((_QWORD *)&v117[13] + 1) = v99;
  LOBYTE(v117[14]) = v60;
  *(_DWORD *)((char *)&v117[14] + 1) = *(_DWORD *)v183;
  DWORD1(v117[14]) = *(_DWORD *)&v183[3];
  *((_QWORD *)&v117[14] + 1) = v101;
  LOBYTE(v117[15]) = v61;
  *(_DWORD *)((char *)&v117[15] + 1) = *(_DWORD *)v181;
  DWORD1(v117[15]) = *(_DWORD *)&v181[3];
  *((_QWORD *)&v117[15] + 1) = v103;
  LOBYTE(v117[16]) = v62;
  *(_DWORD *)((char *)&v117[16] + 1) = *(_DWORD *)v179;
  DWORD1(v117[16]) = *(_DWORD *)&v179[3];
  *((double *)&v117[16] + 1) = v102;
  LOBYTE(v117[17]) = v63;
  v70 = v63;
  *(_DWORD *)((char *)&v117[17] + 1) = *(_DWORD *)v177;
  DWORD1(v117[17]) = *(_DWORD *)&v177[3];
  *((_QWORD *)&v117[17] + 1) = v105;
  LOBYTE(v117[18]) = v64;
  v71 = v64;
  *(_DWORD *)((char *)&v117[18] + 1) = *(_DWORD *)v175;
  DWORD1(v117[18]) = *(_DWORD *)&v175[3];
  *((_QWORD *)&v117[18] + 1) = v106;
  LOBYTE(v117[19]) = v65;
  *(_DWORD *)((char *)&v117[19] + 1) = *(_DWORD *)v173;
  DWORD1(v117[19]) = *(_DWORD *)&v173[3];
  v73 = v91;
  v72 = v92;
  *((_QWORD *)&v117[19] + 1) = v92;
  *(_QWORD *)&v117[20] = v91;
  memcpy(v69, v117, 0x148uLL);
  v74 = v67 + *(int *)(v68 + 64);
  v123 = v113;
  v124 = v114;
  *(_QWORD *)&v125 = v115;
  v121 = v111;
  v122 = v112;
  v119 = v109;
  v120 = v110;
  v75 = v108;
  v118[0] = v107;
  v118[1] = v108;
  LOBYTE(v67) = v90;
  BYTE8(v125) = v90;
  v76 = v112;
  v77 = v113;
  v78 = v110;
  *(_OWORD *)(v74 + 64) = v111;
  *(_OWORD *)(v74 + 80) = v76;
  v79 = v124;
  v80 = v125;
  *(_OWORD *)(v74 + 96) = v77;
  *(_OWORD *)(v74 + 112) = v79;
  v81 = v119;
  *(_OWORD *)v74 = v118[0];
  *(_OWORD *)(v74 + 16) = v75;
  *(double *)&v126 = v52;
  *((_QWORD *)&v126 + 1) = v54;
  *(_QWORD *)&v127 = v56;
  *((_QWORD *)&v127 + 1) = v58;
  v82 = (char)v94;
  v128 = (char)v94;
  *(_BYTE *)(v74 + 176) = (_BYTE)v94;
  v83 = v82;
  *(_OWORD *)(v74 + 32) = v81;
  *(_OWORD *)(v74 + 48) = v78;
  v84 = v126;
  v85 = v127;
  *(_OWORD *)(v74 + 128) = v80;
  *(_OWORD *)(v74 + 144) = v84;
  *(_OWORD *)(v74 + 160) = v85;
  sub_10056FE44((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100283DC8);
  sub_1002840CC((uint64_t)v118, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100283E28);
  sub_10001BE90(v100, &qword_10083AD90);
  v129[6] = v113;
  v129[7] = v114;
  v130 = v115;
  v129[2] = v109;
  v129[3] = v110;
  v129[4] = v111;
  v129[5] = v112;
  v129[0] = v107;
  v129[1] = v108;
  v131 = v67;
  v132 = v52;
  v133 = v54;
  v134 = v56;
  v135 = v58;
  v136 = v83;
  sub_1002840CC((uint64_t)v129, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100284018);
  v147 = v195;
  v148 = v196;
  v149 = v197;
  v143 = v191;
  v144 = v192;
  v145 = v193;
  v146 = v194;
  v139 = v187;
  v140 = v188;
  v141 = v189;
  v142 = v190;
  v137 = v185;
  v138 = v186;
  v150 = v198;
  v151 = v99;
  v152 = v95;
  *(_DWORD *)v153 = *(_DWORD *)v183;
  *(_DWORD *)&v153[3] = *(_DWORD *)&v183[3];
  v154 = v101;
  v155 = v96;
  *(_DWORD *)v156 = *(_DWORD *)v181;
  *(_DWORD *)&v156[3] = *(_DWORD *)&v181[3];
  v157 = v103;
  v158 = (char)v98;
  *(_DWORD *)v159 = *(_DWORD *)v179;
  *(_DWORD *)&v159[3] = *(_DWORD *)&v179[3];
  v160 = v102;
  v161 = v70;
  *(_DWORD *)v162 = *(_DWORD *)v177;
  *(_DWORD *)&v162[3] = *(_DWORD *)&v177[3];
  v163 = v105;
  v164 = v71;
  *(_DWORD *)v165 = *(_DWORD *)v175;
  *(_DWORD *)&v165[3] = *(_DWORD *)&v175[3];
  v166 = v106;
  v167 = v65;
  *(_DWORD *)v168 = *(_DWORD *)v173;
  *(_DWORD *)&v168[3] = *(_DWORD *)&v173[3];
  v169 = v72;
  v170 = v73;
  sub_10056FE44((uint64_t)&v137, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100283FC0);
  return sub_10001BE90((uint64_t)v104, &qword_10083AD90);
}

uint64_t sub_10056DF18@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a2;
  v32 = a3;
  v33 = sub_100047110(&qword_10083ADA0);
  __chkstk_darwin(v33);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10083ADA8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_10083ADB0);
  __chkstk_darwin(v31);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  sub_1003F6E18((uint64_t)&v30 - v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DynamicTypeSize.accessibility1(_:), v11);
  v18 = static DynamicTypeSize.< infix(_:_:)(v17, v14);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v20 = ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
  if ((v18 & 1) != 0)
  {
    *(_QWORD *)v10 = static VerticalAlignment.top.getter(v20);
    *((_QWORD *)v10 + 1) = 0x4020000000000000;
    v10[16] = 0;
    v21 = sub_100047110(&qword_10083ADD0);
    sub_10056E224(v30, a1, (uint64_t)&v10[*(int *)(v21 + 44)]);
    v22 = &qword_10083ADB0;
    sub_100021CC0((uint64_t)v10, (uint64_t)v8, &qword_10083ADB0);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v23 = sub_100028384(&qword_10083ADC0, &qword_10083ADB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v24 = sub_100028384(&qword_10083ADC8, &qword_10083ADA0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v8, v31, v33, v23, v24);
    v25 = (uint64_t)v10;
  }
  else
  {
    *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v20);
    *((_QWORD *)v5 + 1) = 0x4020000000000000;
    v5[16] = 0;
    v26 = sub_100047110(&qword_10083ADB8);
    sub_10056E88C(v30, (uint64_t)a1, (uint64_t)&v5[*(int *)(v26 + 44)]);
    v22 = &qword_10083ADA0;
    sub_100021CC0((uint64_t)v5, (uint64_t)v8, &qword_10083ADA0);
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v27 = sub_100028384(&qword_10083ADC0, &qword_10083ADB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v28 = sub_100028384(&qword_10083ADC8, &qword_10083ADA0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v8, v31, v33, v27, v28);
    v25 = (uint64_t)v5;
  }
  return sub_10001BE90(v25, v22);
}

uint64_t sub_10056E224@<X0>(uint64_t a1@<X0>, CHWorkoutDetailHeartRateTableViewCell *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  _BYTE v84[4];
  int v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  _OWORD v98[9];
  char v99;
  _BYTE v100[152];
  char v101;
  __int128 v102;
  _OWORD v103[10];
  __int128 v104;
  char v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  _QWORD v116[5];
  unsigned __int8 v117;
  uint64_t v118;
  _BYTE *v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;

  v86 = a2;
  v95 = a1;
  v91 = a3;
  v3 = type metadata accessor for FriendsHighlightCardView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v4;
  __chkstk_darwin(v3);
  v88 = &v84[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ActivitySharingHighlight(0);
  __chkstk_darwin(v6);
  v87 = &v84[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DynamicTypeSize(0);
  v97 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v84[-v12];
  v14 = type metadata accessor for ActivitySharingAvatarView(0);
  __chkstk_darwin(v14);
  v16 = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_100047110(&qword_10082B2D8);
  __chkstk_darwin(v17);
  v19 = &v84[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v92 = &v84[-v21];
  sub_10004F8C8(v95, (uint64_t)v16, type metadata accessor for ActivitySharingHighlightViewModel);
  v22 = *(int *)(v14 + 20);
  *(_QWORD *)&v102 = 0;
  v23 = sub_100047110(&qword_100827568);
  v24 = State.init(wrappedValue:)(&v104, &v102, v23);
  *(_OWORD *)&v16[v22] = v104;
  LOBYTE(v22) = static Edge.Set.top.getter(v24);
  v25 = EdgeInsets.init(_all:)(2.0);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_10004F8C8((uint64_t)v16, (uint64_t)v19, type metadata accessor for ActivitySharingAvatarView);
  v32 = (double *)&v19[*(int *)(v17 + 36)];
  v94 = v19;
  *(_BYTE *)v32 = v22;
  v32[1] = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  *((_BYTE *)v32 + 40) = 0;
  sub_100011F54((uint64_t)v16, type metadata accessor for ActivitySharingAvatarView);
  v33 = v92;
  v34 = sub_100045AD4((uint64_t)v19, (uint64_t)v92, &qword_10082B2D8);
  v93 = static HorizontalAlignment.leading.getter(v34);
  v35 = (uint64_t)v86;
  sub_1003F6E18((uint64_t)v13);
  v36 = v97;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v97 + 104))(v10, enum case for DynamicTypeSize.xLarge(_:), v8);
  LOBYTE(v17) = static DynamicTypeSize.< infix(_:_:)(v13, v10);
  v37 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
  v37(v10, v8);
  v37(v13, v8);
  v38 = 0x4000000000000000;
  if ((v17 & 1) == 0)
    v38 = 0;
  v97 = v38;
  v39 = v95;
  sub_10056F2C8((uint64_t)v98);
  *(_OWORD *)&v100[103] = v98[6];
  *(_OWORD *)&v100[119] = v98[7];
  *(_OWORD *)&v100[135] = v98[8];
  *(_OWORD *)&v100[39] = v98[2];
  *(_OWORD *)&v100[55] = v98[3];
  *(_OWORD *)&v100[71] = v98[4];
  *(_OWORD *)&v100[87] = v98[5];
  *(_OWORD *)&v100[7] = v98[0];
  v101 = 0;
  v100[151] = v99;
  *(_OWORD *)&v100[23] = v98[1];
  v96 = 0;
  v40 = v87;
  sub_10004F8C8(v39, (uint64_t)v87, type metadata accessor for ActivitySharingHighlight);
  v41 = type metadata accessor for ActivitySharingReplyCoordinator(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = sub_1000D7480((uint64_t)v40, 0);
  v43 = v88;
  sub_10004F8C8(v35, (uint64_t)v88, type metadata accessor for FriendsHighlightCardView);
  v44 = *(unsigned __int8 *)(v89 + 80);
  v45 = (v44 + 16) & ~v44;
  v46 = swift_allocObject(&unk_1007A9BF0, v45 + v90, v44 | 7);
  sub_100047C88((uint64_t)v43, v46 + v45, type metadata accessor for FriendsHighlightCardView);
  sub_10051D2CC(v42, (uint64_t)sub_10056FE80, v46, (uint64_t)v116);
  v47 = (uint64_t)v94;
  sub_100021CC0((uint64_t)v33, (uint64_t)v94, &qword_10082B2D8);
  v95 = v116[1];
  v48 = (CHWorkoutDetailHeartRateTableViewCell *)v116[3];
  v89 = v116[2];
  v90 = v116[0];
  v49 = v116[4];
  v85 = v117;
  v50 = v118;
  v51 = v121;
  v86 = v120;
  v52 = v123;
  v87 = v122;
  v88 = v119;
  v53 = v47;
  v54 = v91;
  sub_100021CC0(v53, v91, &qword_10082B2D8);
  v55 = (int *)sub_100047110(&qword_10083ADD8);
  v56 = (_OWORD *)(v54 + v55[12]);
  *(_QWORD *)&v102 = v93;
  *((_QWORD *)&v102 + 1) = v97;
  LOBYTE(v103[0]) = v96;
  *(_OWORD *)((char *)&v103[6] + 1) = *(_OWORD *)&v100[96];
  *(_OWORD *)((char *)&v103[7] + 1) = *(_OWORD *)&v100[112];
  *(_OWORD *)((char *)&v103[8] + 1) = *(_OWORD *)&v100[128];
  *(_QWORD *)((char *)&v103[9] + 1) = *(_QWORD *)&v100[144];
  *(_OWORD *)((char *)&v103[2] + 1) = *(_OWORD *)&v100[32];
  *(_OWORD *)((char *)&v103[3] + 1) = *(_OWORD *)&v100[48];
  *(_OWORD *)((char *)&v103[4] + 1) = *(_OWORD *)&v100[64];
  *(_OWORD *)((char *)&v103[5] + 1) = *(_OWORD *)&v100[80];
  *(_OWORD *)((char *)&v103[1] + 1) = *(_OWORD *)&v100[16];
  *(_OWORD *)((char *)v103 + 1) = *(_OWORD *)v100;
  v57 = v103[8];
  v56[8] = v103[7];
  v56[9] = v57;
  *(_OWORD *)((char *)v56 + 153) = *(_OWORD *)((char *)&v103[8] + 9);
  v58 = v103[4];
  v56[4] = v103[3];
  v56[5] = v58;
  v59 = v103[6];
  v56[6] = v103[5];
  v56[7] = v59;
  v60 = v103[0];
  *v56 = v102;
  v56[1] = v60;
  v61 = v103[2];
  v56[2] = v103[1];
  v56[3] = v61;
  v62 = v54 + v55[16];
  *(_QWORD *)v62 = 0;
  *(_BYTE *)(v62 + 8) = 0;
  v63 = v54 + v55[20];
  v64 = v85 & 1;
  v65 = v95;
  *(_QWORD *)v63 = v90;
  *(_QWORD *)(v63 + 8) = v65;
  *(_QWORD *)(v63 + 16) = v89;
  *(_QWORD *)(v63 + 24) = v48;
  *(_QWORD *)(v63 + 32) = v49;
  *(_BYTE *)(v63 + 40) = v64;
  v67 = v87;
  v66 = v88;
  *(_QWORD *)(v63 + 48) = v50;
  *(_QWORD *)(v63 + 56) = v66;
  v68 = v86;
  *(_QWORD *)(v63 + 64) = v86;
  *(_QWORD *)(v63 + 72) = v51;
  *(_QWORD *)(v63 + 80) = v67;
  *(_QWORD *)(v63 + 88) = v52;
  sub_10056FE84((uint64_t)&v102);
  swift_retain(v51);
  swift_retain(v65);
  swift_bridgeObjectRetain(v48);
  swift_retain(v49);
  swift_retain(v50);
  swift_bridgeObjectRetain(v68);
  sub_10003AFE0((uint64_t)v67, v52);
  sub_10001BE90((uint64_t)v92, &qword_10082B2D8);
  swift_release(v51);
  swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
  swift_release(v50);
  swift_release(v49);
  swift_bridgeObjectRelease(v48, v76, v77, v78, v79, v80, v81, v82);
  swift_release(v95);
  sub_100022BA4((uint64_t)v67, v52);
  v112 = *(_OWORD *)&v100[96];
  v113 = *(_OWORD *)&v100[112];
  v114 = *(_OWORD *)&v100[128];
  v108 = *(_OWORD *)&v100[32];
  v109 = *(_OWORD *)&v100[48];
  v110 = *(_OWORD *)&v100[64];
  v111 = *(_OWORD *)&v100[80];
  v106 = *(_OWORD *)v100;
  *(_QWORD *)&v104 = v93;
  *((_QWORD *)&v104 + 1) = v97;
  v105 = v96;
  v115 = *(_QWORD *)&v100[144];
  v107 = *(_OWORD *)&v100[16];
  sub_10056FF4C((uint64_t)&v104);
  return sub_10001BE90((uint64_t)v94, &qword_10082B2D8);
}

uint64_t sub_10056E88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[9];
  char v37;
  _BYTE v38[152];
  char v39;
  __int128 v40;
  _OWORD v41[10];
  _QWORD v42[2];
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v35 = a3;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = sub_100047110(&qword_10083ADE0);
  __chkstk_darwin(v12);
  v34 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  *(_QWORD *)v16 = static VerticalAlignment.top.getter(v17);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v18 = sub_100047110(&qword_10083ADE8);
  v19 = sub_10056EBB0(a1, a2, (uint64_t)&v16[*(int *)(v18 + 44)]);
  v33 = static HorizontalAlignment.leading.getter(v19);
  sub_1003F6E18((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DynamicTypeSize.xLarge(_:), v5);
  LOBYTE(a2) = static DynamicTypeSize.< infix(_:_:)(v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  v20(v11, v5);
  if ((a2 & 1) != 0)
    v21 = 0x4000000000000000;
  else
    v21 = 0;
  sub_10056F2C8((uint64_t)v36);
  *(_OWORD *)&v38[103] = v36[6];
  *(_OWORD *)&v38[119] = v36[7];
  *(_OWORD *)&v38[135] = v36[8];
  *(_OWORD *)&v38[39] = v36[2];
  *(_OWORD *)&v38[55] = v36[3];
  *(_OWORD *)&v38[71] = v36[4];
  *(_OWORD *)&v38[87] = v36[5];
  *(_OWORD *)&v38[7] = v36[0];
  v39 = 0;
  v38[151] = v37;
  *(_OWORD *)&v38[23] = v36[1];
  v22 = v34;
  sub_100021CC0((uint64_t)v16, v34, &qword_10083ADE0);
  v23 = v35;
  sub_100021CC0(v22, v35, &qword_10083ADE0);
  v24 = (_OWORD *)(v23 + *(int *)(sub_100047110(&qword_10083ADF0) + 48));
  v25 = v33;
  *(_QWORD *)&v40 = v33;
  *((_QWORD *)&v40 + 1) = v21;
  LOBYTE(v41[0]) = 0;
  *(_OWORD *)((char *)&v41[6] + 1) = *(_OWORD *)&v38[96];
  *(_OWORD *)((char *)&v41[7] + 1) = *(_OWORD *)&v38[112];
  *(_OWORD *)((char *)&v41[8] + 1) = *(_OWORD *)&v38[128];
  *(_QWORD *)((char *)&v41[9] + 1) = *(_QWORD *)&v38[144];
  *(_OWORD *)((char *)&v41[2] + 1) = *(_OWORD *)&v38[32];
  *(_OWORD *)((char *)&v41[3] + 1) = *(_OWORD *)&v38[48];
  *(_OWORD *)((char *)&v41[4] + 1) = *(_OWORD *)&v38[64];
  *(_OWORD *)((char *)&v41[5] + 1) = *(_OWORD *)&v38[80];
  *(_OWORD *)((char *)&v41[1] + 1) = *(_OWORD *)&v38[16];
  *(_OWORD *)((char *)v41 + 1) = *(_OWORD *)v38;
  v26 = v41[8];
  v24[8] = v41[7];
  v24[9] = v26;
  *(_OWORD *)((char *)v24 + 153) = *(_OWORD *)((char *)&v41[8] + 9);
  v27 = v41[4];
  v24[4] = v41[3];
  v24[5] = v27;
  v28 = v41[6];
  v24[6] = v41[5];
  v24[7] = v28;
  v29 = v41[0];
  *v24 = v40;
  v24[1] = v29;
  v30 = v41[2];
  v24[2] = v41[1];
  v24[3] = v30;
  sub_10056FE84((uint64_t)&v40);
  sub_10001BE90((uint64_t)v16, &qword_10083ADE0);
  v50 = *(_OWORD *)&v38[96];
  v51 = *(_OWORD *)&v38[112];
  v52 = *(_OWORD *)&v38[128];
  v46 = *(_OWORD *)&v38[32];
  v47 = *(_OWORD *)&v38[48];
  v48 = *(_OWORD *)&v38[64];
  v49 = *(_OWORD *)&v38[80];
  v44 = *(_OWORD *)v38;
  v42[0] = v25;
  v42[1] = v21;
  v43 = 0;
  v53 = *(_QWORD *)&v38[144];
  v45 = *(_OWORD *)&v38[16];
  sub_10056FF4C((uint64_t)v42);
  return sub_10001BE90(v22, &qword_10083ADE0);
}

uint64_t sub_10056EBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  char *v98;
  __int128 v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _OWORD v108[2];
  _OWORD v109[2];
  uint64_t v110;
  char v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  _OWORD v117[7];
  _OWORD v118[3];

  *(_QWORD *)&v99 = a2;
  v94 = a3;
  v85 = sub_100047110(&qword_100825FB8);
  __chkstk_darwin(v85);
  v83 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v84 = (char *)&v81 - v6;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v100 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v98 = (char *)&v81 - v11;
  v89 = sub_100047110(&qword_100825FC0);
  __chkstk_darwin(v89);
  v82 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v81 - v14;
  v15 = type metadata accessor for FriendsHighlightCardView(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = type metadata accessor for ActivitySharingHighlight(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_10083ADF8);
  v92 = *(_QWORD *)(v21 - 8);
  v93 = v21;
  __chkstk_darwin(v21);
  v86 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v91 = (char *)&v81 - v24;
  v25 = type metadata accessor for ActivitySharingAvatarView(0);
  __chkstk_darwin(v25);
  v90 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v81 - v28;
  sub_10004F8C8(a1, (uint64_t)&v81 - v28, type metadata accessor for ActivitySharingHighlightViewModel);
  v30 = *(int *)(v25 + 20);
  *(_QWORD *)&v101 = 0;
  v31 = sub_100047110(&qword_100827568);
  State.init(wrappedValue:)(v117, &v101, v31);
  v87 = v29;
  *(_OWORD *)&v29[v30] = v117[0];
  v32 = a1;
  v33 = v8;
  sub_10004F8C8(v32, (uint64_t)v20, type metadata accessor for ActivitySharingHighlight);
  v34 = type metadata accessor for ActivitySharingReplyCoordinator(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = sub_1000D7480((uint64_t)v20, 0);
  sub_10004F8C8(v99, (uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FriendsHighlightCardView);
  v36 = *(unsigned __int8 *)(v16 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = swift_allocObject(&unk_1007A9C18, v37 + v17, v36 | 7);
  sub_100047C88((uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v38 + v37, type metadata accessor for FriendsHighlightCardView);
  sub_10051D2CC(v35, (uint64_t)sub_10056FE80, v38, (uint64_t)v109);
  v99 = v109[0];
  v39 = v110;
  LOBYTE(v38) = v111;
  v96 = v112;
  v97 = v109[1];
  v95 = v113;
  v40 = v114;
  v41 = v115;
  LOBYTE(v35) = static Edge.Set.top.getter(v42);
  v43 = EdgeInsets.init(_all:)(2.0);
  v116 = 0;
  v101 = v99;
  v102 = v97;
  *(_QWORD *)&v103 = v39;
  BYTE8(v103) = v38;
  v104 = v96;
  v105 = v95;
  *(_QWORD *)&v106 = v40;
  *((_QWORD *)&v106 + 1) = v41;
  v44 = v100;
  v45 = v98;
  LOBYTE(v107) = v35;
  *((double *)&v107 + 1) = v43;
  *(_QWORD *)&v108[0] = v46;
  *((_QWORD *)&v108[0] + 1) = v47;
  *(_QWORD *)&v108[1] = v48;
  BYTE8(v108[1]) = 0;
  v49 = (void (*)(char *, _QWORD, uint64_t))v33[13];
  v49(v98, enum case for DynamicTypeSize.xSmall(_:), v7);
  v49(v44, enum case for DynamicTypeSize.xxxLarge(_:), v7);
  v50 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v51 = v7;
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v45, v44, v7, v50);
  if ((result & 1) != 0)
  {
    v54 = v84;
    v53 = v85;
    v55 = &v84[*(int *)(v85 + 48)];
    v56 = (void (*)(char *, char *, uint64_t))v33[4];
    v57 = v51;
    v56(v84, v45, v51);
    v58 = v55;
    *(_QWORD *)&v99 = v55;
    v56(v55, v44, v51);
    v59 = v83;
    v60 = &v83[*(int *)(v53 + 48)];
    v61 = (void (*)(char *, char *, uint64_t))v33[2];
    v61(v83, v54, v57);
    v61(v60, v58, v57);
    v62 = (uint64_t)v82;
    v56(v82, v59, v57);
    v63 = (void (*)(char *, uint64_t))v33[1];
    v63(v60, v57);
    v64 = &v59[*(int *)(v53 + 48)];
    v56(v59, v54, v57);
    v56(v64, (char *)v99, v57);
    v65 = v89;
    v56((char *)(v62 + *(int *)(v89 + 36)), v64, v57);
    v63(v59, v57);
    v66 = v88;
    sub_100045AD4(v62, v88, &qword_100825FC0);
    v67 = sub_100047110(&qword_10083AE00);
    v68 = sub_1000F4518(&qword_10083AE08, &qword_10083AE00, (void (*)(void))sub_10057017C);
    v69 = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v70 = v86;
    View.dynamicTypeSize<A>(_:)(v66, v67, v65, v68, v69);
    sub_10001BE90(v66, &qword_100825FC0);
    v117[6] = v107;
    v118[0] = v108[0];
    *(_OWORD *)((char *)v118 + 9) = *(_OWORD *)((char *)v108 + 9);
    v117[2] = v103;
    v117[3] = v104;
    v117[4] = v105;
    v117[5] = v106;
    v117[0] = v101;
    v117[1] = v102;
    sub_100284274(v117);
    v72 = v91;
    v71 = v92;
    v73 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v70, v93);
    v74 = (uint64_t)v87;
    v75 = v90;
    sub_10004F8C8((uint64_t)v87, v90, type metadata accessor for ActivitySharingAvatarView);
    v76 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v76(v70, v72, v73);
    v77 = v94;
    sub_10004F8C8(v75, v94, type metadata accessor for ActivitySharingAvatarView);
    v78 = sub_100047110(&qword_10083AE18);
    v79 = v77 + *(int *)(v78 + 48);
    *(_QWORD *)v79 = 0;
    *(_BYTE *)(v79 + 8) = 1;
    v76((char *)(v77 + *(int *)(v78 + 64)), v70, v73);
    v80 = *(void (**)(char *, uint64_t))(v71 + 8);
    v80(v72, v73);
    sub_100011F54(v74, type metadata accessor for ActivitySharingAvatarView);
    v80(v70, v73);
    return sub_100011F54(v75, type metadata accessor for ActivitySharingAvatarView);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10056F2C8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  __n128 v11;
  void (*v12)(char *, uint64_t, __n128);
  unsigned __int8 v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  char v71;
  _BYTE v72[7];
  unsigned __int8 v73;
  _BYTE v74[7];
  char v75;
  char v76;

  v2 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026FE48((uint64_t)&v67);
  v63 = v67;
  v66 = v68;
  v65 = v69;
  v6 = v70;
  v8 = static Font.subheadline.getter(v7);
  v9 = enum case for Font.Leading.tight(_:);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v10(v5, enum case for Font.Leading.tight(_:), v2);
  v62 = Font.leading(_:)(v5, v8);
  v11 = swift_release(v8);
  v12 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v12(v5, v2, v11);
  KeyPath = swift_getKeyPath(&unk_100646D40);
  v60 = swift_getKeyPath(&unk_100646D70);
  sub_1002701D8(&v67);
  v57 = v68;
  v58 = v67;
  v13 = v69;
  v59 = v70;
  v15 = static Font.caption.getter(v14);
  v10(v5, v9, v2);
  v56 = Font.leading(_:)(v5, v15);
  v16 = swift_release(v15);
  v12(v5, v2, v16);
  v17 = swift_getKeyPath(&unk_100646D40);
  v53 = v17;
  v54 = static HierarchicalShapeStyle.secondary.getter(v18);
  v19 = swift_getKeyPath(&unk_100646D70);
  v55 = v19;
  LOBYTE(v10) = v65;
  v76 = v65;
  v75 = 0;
  LOBYTE(v5) = v13;
  v73 = v13;
  v71 = 0;
  *(_DWORD *)(a1 + 17) = v67;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v67 + 3);
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v74;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v74[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v72;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v72[3];
  v21 = v62;
  v20 = v63;
  v22 = v66;
  *(_QWORD *)a1 = v63;
  *(_QWORD *)(a1 + 8) = v22;
  *(_BYTE *)(a1 + 16) = (_BYTE)v10;
  v23 = (char)v10;
  v24 = v6;
  v61 = v6;
  *(_QWORD *)(a1 + 24) = v6;
  v25 = KeyPath;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_QWORD *)(a1 + 40) = v21;
  v26 = v59;
  v27 = v60;
  *(_QWORD *)(a1 + 48) = v60;
  *(_QWORD *)(a1 + 56) = 1;
  *(_BYTE *)(a1 + 64) = 0;
  v29 = v57;
  v28 = v58;
  *(_QWORD *)(a1 + 72) = v58;
  *(_QWORD *)(a1 + 80) = v29;
  *(_BYTE *)(a1 + 88) = (_BYTE)v5;
  *(_QWORD *)(a1 + 96) = v26;
  *(_QWORD *)(a1 + 104) = v17;
  v30 = v56;
  *(_QWORD *)(a1 + 112) = v56;
  *(_DWORD *)(a1 + 120) = v54;
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = 1;
  *(_BYTE *)(a1 + 144) = 0;
  v31 = v20;
  sub_1000E439C(v20, v22, v23);
  swift_bridgeObjectRetain(v24);
  swift_retain(v25);
  v32 = v21;
  swift_retain(v21);
  swift_retain(v27);
  v33 = v28;
  sub_1000E439C(v28, v29, (char)v5);
  v34 = v26;
  swift_bridgeObjectRetain(v26);
  v35 = v53;
  swift_retain(v53);
  v36 = v30;
  swift_retain(v30);
  v37 = v55;
  swift_retain(v55);
  sub_1000E4458(v33, v29, (char)v5);
  swift_release(v37);
  swift_release(v36);
  swift_release(v35);
  swift_bridgeObjectRelease(v34, v38, v39, v40, v41, v42, v43, v44);
  sub_1000E4458(v31, v66, v65);
  swift_release(v27);
  swift_release(v32);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v61, v45, v46, v47, v48, v49, v50, v51);
}

uint64_t sub_10056F5EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[4];
  _QWORD v11[3];
  uint64_t v12;

  v4 = type metadata accessor for FriendsHighlightCardView(0);
  sub_100021CC0(a2 + *(int *)(v4 + 24), (uint64_t)v11, &qword_10081F600);
  if (!v12)
    return sub_10001BE90((uint64_t)v11, &qword_10081F600);
  v5 = sub_100016804(v11, v12);
  v6 = a2 + *(int *)(v4 + 20);
  v10[3] = sub_1000E0D58();
  v10[0] = a1;
  v7 = *v5;
  v8 = a1;
  sub_10040E898(v6, (uint64_t)v10, v7);
  sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
}

uint64_t sub_10056F6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = sub_100047110(&qword_100832E00);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v6, v7, v8, v9, v10);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v11 = sub_100047110(&qword_10083ACC0);
  v12 = sub_10056C550(v1, &v5[*(int *)(v11 + 44)]);
  v13 = static Alignment.center.getter(v12);
  sub_1003ED474(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v13, v14);
  return sub_10001BE90((uint64_t)v5, &qword_100832E00);
}

uint64_t sub_10056F79C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsHighlightCardView(0) - 8) + 80);
  return sub_10056CEE4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10056F7C8(uint64_t result)
{
  *(_BYTE *)(result + 161) = 1;
  return result;
}

unint64_t sub_10056F7D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083ACE0;
  if (!qword_10083ACE0)
  {
    v1 = sub_100007050(&qword_10083ACD0);
    sub_100028384(&qword_10083ACE8, &qword_10083ACF0, (uint64_t)&unk_100632628);
    sub_1001F1D34();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083ACE0);
  }
  return result;
}

uint64_t sub_10056F858()
{
  return sub_1000F4518(&qword_10083AD00, &qword_10083AD08, (void (*)(void))sub_10056F874);
}

uint64_t sub_10056F874()
{
  return sub_1000F4518(&qword_100820638, &qword_100820640, (void (*)(void))sub_10010771C);
}

uint64_t sub_10056F890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,char a22)
{
  uint64_t result;

  if ((a22 & 1) == 0)
  {
    swift_retain(a6);
    swift_bridgeObjectRetain(a7);
    swift_retain(a10);
    swift_retain(a2);
    return swift_retain(a4);
  }
  return result;
}

uint64_t sub_10056F8FC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_WORD *)(a1 + 160));
  return a1;
}

uint64_t sub_10056F970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,char a22)
{
  uint64_t result;

  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRelease(a7);
    swift_release(a10);
    swift_release(a2);
    swift_release(a4);
    return swift_release(a6);
  }
  return result;
}

uint64_t sub_10056F9E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsHighlightCardView(0) - 8) + 80);
  return sub_10056CF88(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_10056FA1C(uint64_t result)
{
  *(_BYTE *)(result + 161) = 0;
  return result;
}

uint64_t sub_10056FA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsHighlightCardView(0) - 8) + 80);
  return sub_10056D138(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_10056FA74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083AD38;
  if (!qword_10083AD38)
  {
    v1 = sub_100007050(&qword_10083AD30);
    v2[0] = sub_100007050(&qword_10083AD40);
    v2[1] = sub_1000F4518(&qword_10083AD48, &qword_10083AD40, (void (*)(void))sub_10056FB40);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083AD38);
  }
  return result;
}

unint64_t sub_10056FB40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083AD50;
  if (!qword_10083AD50)
  {
    v1 = sub_100007050(&qword_10083AD58);
    sub_100028384(&qword_10083AD60, &qword_10083AD68, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083AD50);
  }
  return result;
}

uint64_t sub_10056FBC4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  int *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;

  v1 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v34 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v34 + 16) & ~v34;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FriendsHighlightCardView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v33 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;

  v10 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v11 = v0 + v3 + v10[5];
  v12 = type metadata accessor for UUID(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = v9 + v10[6];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  v16 = v9 + v1[10];
  v17 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);

  v18 = (_QWORD *)(v0 + v8);
  v19 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v8, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v0 + v8, v20);
  }
  else
  {
    v21 = swift_release(*v18);
  }
  v22 = (char *)v18 + *(int *)(v5 + 20);
  ((void (*)(char *, uint64_t, __n128))v13)(v22, v12, v21);
  v23 = (int *)type metadata accessor for FriendsHighlightCard(0);
  sub_1000EB41C(*(_QWORD *)&v22[v23[5]], *(_QWORD *)&v22[v23[5] + 8], v22[v23[5] + 16]);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v22[v23[9]], v24, v25, v26, v27, v28, v29, v30);

  v31 = (_QWORD *)((char *)v18 + *(int *)(v5 + 24));
  if (v31[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
  return swift_deallocObject(v0, v8 + v33, v34 | v7 | 7);
}

uint64_t sub_10056FDE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsHighlightCardView(0) - 8) + 80);
  return sub_10056D5B8(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_10056FE44(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_10056FE84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_BYTE *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 152);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  sub_1000E439C(v6, v7, v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  return a1;
}

uint64_t sub_10056FF4C(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_BYTE *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 128);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 120);
  v27 = *(_QWORD *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 152);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v5);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v11, v12, v13, v14, v15, v16, v17);
  swift_release(v4);
  sub_1000E4458(v6, v7, v8);
  swift_release(v10);
  swift_release(v9);
  swift_bridgeObjectRelease(v26, v18, v19, v20, v21, v22, v23, v24);
  swift_release(v27);
  return a1;
}

uint64_t sub_100570028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;

  v1 = type metadata accessor for FriendsHighlightCardView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)v6 + *(int *)(v1 + 20);
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (int *)type metadata accessor for FriendsHighlightCard(0);
  sub_1000EB41C(*(_QWORD *)&v9[v11[5]], *(_QWORD *)&v9[v11[5] + 8], v9[v11[5] + 16]);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v9[v11[9]], v12, v13, v14, v15, v16, v17, v18);

  v19 = (_QWORD *)((char *)v6 + *(int *)(v1 + 24));
  if (v19[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100570140(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FriendsHighlightCardView(0) - 8) + 80);
  return sub_10056F5EC(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_10057017C()
{
  unint64_t result;

  result = qword_10083AE10;
  if (!qword_10083AE10)
  {
    result = swift_getWitnessTable(&unk_1006438CC, &type metadata for ActivitySharingReplyMenu);
    atomic_store(result, (unint64_t *)&qword_10083AE10);
  }
  return result;
}

unint64_t sub_1005701C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083AE20;
  if (!qword_10083AE20)
  {
    v1 = sub_100007050(&qword_100832E08);
    sub_100028384(&qword_10083AE28, &qword_100832E00, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083AE20);
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadCardFactory()
{
  return &type metadata for LoadCardFactory;
}

void sub_100570258(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  void *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v16 = a3;
  v17 = sub_100047110((uint64_t *)&unk_10082E690);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v16 < 3 || a1 ^ 1 | a2)
  {
    v24 = static os_log_type_t.error.getter(v18);
    v25 = (void *)HKLogActivity;
    v26 = v24;
    if (os_log_type_enabled(HKLogActivity, v24))
    {
      sub_1000EB3F4(a1, a2, a3);
      sub_1000EB3F4(a1, a2, a3);
      v36 = v25;
      v27 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v42 = v28;
      *(_DWORD *)v27 = 136315394;
      v37 = sub_10003E8EC(0x6472614364616F4CLL, 0xEF79726F74636146, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v27 + 4);
      *(_WORD *)(v27 + 12) = 2080;
      v37 = a1;
      v38 = a2;
      v39 = a3;
      sub_1000EB3F4(a1, a2, a3);
      v29 = String.init<A>(describing:)(&v37, &type metadata for CardType);
      v31 = v30;
      v37 = sub_10003E8EC(v29, v30, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v27 + 14);
      swift_bridgeObjectRelease(v31);
      sub_1000EB41C(a1, a2, a3);
      sub_1000EB41C(a1, a2, a3);
      v32 = v36;
      _os_log_impl((void *)&_mh_execute_header, v36, v26, "%s tried making load card with cardType %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    *(_QWORD *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    sub_1001B7120(a5, (uint64_t)&v37);
    v21 = v40;
    if (v40)
    {
      v22 = v41;
      sub_100016804(&v37, v40);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      v23 = type metadata accessor for UUID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 0, 1, v23);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v37);
    }
    else
    {
      sub_1001B7168((uint64_t)&v37);
      v33 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v20, 1, 1, v33);
    }
    *(_QWORD *)(a8 + 24) = type metadata accessor for LoadCard(0);
    *(_QWORD *)(a8 + 32) = &off_1007A5EF8;
    v34 = sub_10004C480((_QWORD *)a8);
    sub_10050BBB0((uint64_t)v20, a4 & 1, a6 & 1, 1, (uint64_t)a7, (uint64_t)v34);
  }
}

id UIButton.withLineBreakMode(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v5;

  v3 = objc_msgSend(v1, "titleLabel");
  objc_msgSend(v3, "setLineBreakMode:", a1);

  return v5;
}

uint64_t sub_1005705FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100570638 + 4 * byte_100646DF0[a1]))(0xD000000000000013, 0x80000001006A6630);
}

uint64_t sub_100570638()
{
  uint64_t v0;

  return v0 - 2;
}

uint64_t sub_100570748@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1005705FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t storeEnumTagSinglePayload for TrendsCoachingGoalBucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1005707BC + 4 * byte_100646E04[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1005707F0 + 4 * byte_100646DFF[v4]))();
}

uint64_t sub_1005707F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005707F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100570800);
  return result;
}

uint64_t sub_10057080C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100570814);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100570818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100570820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrendsCoachingGoalBucket()
{
  return &type metadata for TrendsCoachingGoalBucket;
}

unint64_t sub_100570840()
{
  unint64_t result;

  result = qword_10083AE30;
  if (!qword_10083AE30)
  {
    result = swift_getWitnessTable(&unk_100646E7C, &type metadata for TrendsCoachingGoalBucket);
    atomic_store(result, (unint64_t *)&qword_10083AE30);
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone()
{
  return &type metadata for Zone;
}

unint64_t sub_100570898()
{
  unint64_t result;

  result = qword_10083AE38;
  if (!qword_10083AE38)
  {
    result = swift_getWitnessTable(&unk_100646EF4, &type metadata for Zone);
    atomic_store(result, (unint64_t *)&qword_10083AE38);
  }
  return result;
}

Swift::Int sub_1005708DC()
{
  double *v0;
  double v1;
  double v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  sub_1002A1478(v1, v2);
  return Hasher._finalize()();
}

void sub_10057092C()
{
  double *v0;

  sub_1002A1478(*v0, v0[1]);
}

Swift::Int sub_100570934(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  sub_1002A1478(v2, v3);
  return Hasher._finalize()();
}

char *sub_100570980(char *a1)
{
  char *v1;
  void *v3;
  id v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  char *result;
  char *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v20[3];
  objc_super v21;

  *(_QWORD *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_hostingViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_subView] = 0;
  v3 = *(void **)&a1[OBJC_IVAR___CHFitnessAppContext_cloudDeviceProvider];
  *(_QWORD *)&v1[OBJC_IVAR___CHLegacyDevicesViewController_cloudDeviceProvider] = v3;
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  v4 = v3;
  v5 = (char *)objc_msgSendSuper2(&v21, "initWithNibName:bundle:", 0, 0);
  v6 = *(void **)&v5[OBJC_IVAR___CHLegacyDevicesViewController_cloudDeviceProvider];
  v7 = swift_allocObject(&unk_1007A9E88, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v20[0] = v6;
  v20[1] = sub_1005712E0;
  v20[2] = v7;
  objc_allocWithZone((Class)sub_100047110(&qword_10083AE80));
  v8 = v6;
  v9 = v5;
  swift_retain(v7);
  v10 = (void *)UIHostingController.init(rootView:)(v20);
  v11 = objc_msgSend(v10, "view");
  v12 = *(void **)&v9[OBJC_IVAR___CHLegacyDevicesViewController_subView];
  *(_QWORD *)&v9[OBJC_IVAR___CHLegacyDevicesViewController_subView] = v11;

  objc_msgSend(v9, "addChildViewController:", v10);
  result = (char *)objc_msgSend(v9, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v14 = result;
  result = (char *)objc_msgSend(v10, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v15 = result;
  objc_msgSend(v14, "addSubview:", result);

  v16 = objc_msgSend(v9, "navigationController");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setToolbarHidden:", 0);

  }
  v18 = objc_msgSend(v9, "navigationItem");
  v19 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v9, "doneTapped");
  objc_msgSend(v18, "setLeftBarButtonItem:", v19);
  swift_release(v7);

  return v9;
}

void sub_100570BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    swift_bridgeObjectRetain(a2);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v8 = objc_msgSend((id)objc_opt_self(OBPrivacyPresenter), "presenterForPrivacySplashWithIdentifier:", v7);

    if (v8)
    {
      v10 = v8;
      objc_msgSend(v10, "setPresentingViewController:", v6);
      objc_msgSend(v10, "present");

      v6 = v10;
    }
    else
    {
      v11 = static os_log_type_t.error.getter(v9);
      v10 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v10, "Failed to create privacyPresenter", 33, 2, _swiftEmptyArrayStorage);
    }

  }
}

void sub_100570DB4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  objc_super v31;

  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  objc_msgSendSuper2(&v31, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR___CHLegacyDevicesViewController_subView];
  if (!v1)
    goto LABEL_15;
  v2 = v1;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "addSubview:", v2);

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = objc_msgSend(v2, "leadingAnchor");
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "safeAreaLayoutGuide");

  v12 = objc_msgSend(v11, "leadingAnchor");
  v13 = objc_msgSend(v8, "constraintEqualToAnchor:", v12);

  objc_msgSend(v13, "setActive:", 1);
  v14 = objc_msgSend(v2, "trailingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "safeAreaLayoutGuide");

  v18 = objc_msgSend(v17, "trailingAnchor");
  v19 = objc_msgSend(v14, "constraintEqualToAnchor:", v18);

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v2, "topAnchor");
  v21 = objc_msgSend(v0, "view");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "safeAreaLayoutGuide");

    v24 = objc_msgSend(v23, "topAnchor");
    v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);

    objc_msgSend(v25, "setActive:", 1);
    v26 = objc_msgSend(v2, "bottomAnchor");
    v27 = objc_msgSend(v0, "view");
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, "bottomAnchor");

      v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);
      objc_msgSend(v30, "setActive:", 1);

      return;
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005BLL, 0x80000001006A6700, "FitnessApp/LegacyDevicesViewController.swift", 44, 2, 42, 0);
  __break(1u);
}

id sub_100571224()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyDevicesViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LegacyDevicesViewController()
{
  return objc_opt_self(CHLegacyDevicesViewController);
}

uint64_t sub_1005712BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005712E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100570BE4(a1, a2, v2);
}

uint64_t sub_1005712E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  char *v24;
  char *v25;
  char v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  _DWORD v32[2];
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  char *v39;
  _BYTE v40[32];

  v1 = type metadata accessor for IndexSet.Index(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (_QWORD *)((char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v7 = (char *)v32 - v6;
  v8 = type metadata accessor for IndexSet(0);
  v9 = *(char **)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083AF40);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v9;
  v37 = (void (*)(char *, uint64_t, uint64_t, __n128))*((_QWORD *)v9 + 2);
  v37(v11, v0, v8, v13);
  v16 = sub_1000083D8(&qword_10083AF48, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Sequence.makeIterator()(v8, v16);
  v17 = &v15[*(int *)(v12 + 36)];
  v36 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v36(v7, v17, v1);
  v18 = sub_1000083D8(&qword_10083AF50, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Collection.endIndex.getter(v4, v8, v18);
  v35 = sub_1000083D8(&qword_10083AF58, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v4, v1, v35);
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v39 = v4;
  v20((char *)v4, v1);
  v38 = v7;
  v20(v7, v1);
  v21 = 0;
  if ((v19 & 1) == 0)
  {
    v32[1] = v19;
    v22 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
    v21 = *v23;
    v22(v40, 0);
    ((void (*)(char *, char *, uint64_t))v37)(v11, v15, v8);
    dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
    v33 = (void (*)(char *, uint64_t))*((_QWORD *)v34 + 1);
    v34 = v11;
    v33(v11, v8);
    v24 = v38;
    while (1)
    {
      v36(v24, v17, v1);
      v25 = (char *)v39;
      dispatch thunk of Collection.endIndex.getter((char *)v39, v8, v18);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25, v1, v35);
      v20(v25, v1);
      v20(v24, v1);
      if ((v26 & 1) != 0)
        break;
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
      v29 = *v28;
      v27(v40, 0);
      v30 = v34;
      ((void (*)(char *, char *, uint64_t))v37)(v34, v15, v8);
      dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
      v33(v30, v8);
      if (v29 < v21)
        v21 = v29;
    }
  }
  sub_10001BE90((uint64_t)v15, &qword_10083AF40);
  return v21;
}

uint64_t sub_10057165C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t sub_1005716A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  char *v24;
  char *v25;
  char v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  _DWORD v32[2];
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  char *v39;
  _BYTE v40[32];

  v1 = type metadata accessor for IndexSet.Index(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (_QWORD *)((char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v7 = (char *)v32 - v6;
  v8 = type metadata accessor for IndexSet(0);
  v9 = *(char **)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083AF40);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v9;
  v37 = (void (*)(char *, uint64_t, uint64_t, __n128))*((_QWORD *)v9 + 2);
  v37(v11, v0, v8, v13);
  v16 = sub_1000083D8(&qword_10083AF48, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Sequence.makeIterator()(v8, v16);
  v17 = &v15[*(int *)(v12 + 36)];
  v36 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v36(v7, v17, v1);
  v18 = sub_1000083D8(&qword_10083AF50, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Collection.endIndex.getter((char *)v4, v8, v18);
  v35 = sub_1000083D8(&qword_10083AF58, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v7, (char *)v4, v1, v35);
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v39 = (char *)v4;
  v20((char *)v4, v1);
  v38 = v7;
  v20(v7, v1);
  v21 = 0;
  if ((v19 & 1) == 0)
  {
    v32[1] = v19;
    v22 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
    v21 = *v23;
    v22(v40, 0);
    ((void (*)(char *, char *, uint64_t))v37)(v11, v15, v8);
    dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
    v33 = (void (*)(char *, uint64_t))*((_QWORD *)v34 + 1);
    v34 = v11;
    v33(v11, v8);
    v24 = v38;
    while (1)
    {
      v36(v24, v17, v1);
      v25 = v39;
      dispatch thunk of Collection.endIndex.getter(v39, v8, v18);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25, v1, v35);
      v20(v25, v1);
      v20(v24, v1);
      if ((v26 & 1) != 0)
        break;
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
      v29 = *v28;
      v27(v40, 0);
      v30 = v34;
      ((void (*)(char *, char *, uint64_t))v37)(v34, v15, v8);
      dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
      v33(v30, v8);
      if (v21 <= v29)
        v21 = v29;
    }
  }
  sub_10001BE90((uint64_t)v15, &qword_10083AF40);
  return v21;
}

__n128 sub_100571A14@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  _OWORD v10[9];
  _OWORD v11[2];

  KeyPath = swift_getKeyPath(&unk_100647000);
  v4 = swift_getKeyPath(&unk_100647028);
  static Published.subscript.getter(v10, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v11[0];
  *(_OWORD *)(a1 + 128) = v10[8];
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 153) = *(_OWORD *)((char *)v11 + 9);
  v6 = v10[5];
  *(_OWORD *)(a1 + 64) = v10[4];
  *(_OWORD *)(a1 + 80) = v6;
  v7 = v10[7];
  *(_OWORD *)(a1 + 96) = v10[6];
  *(_OWORD *)(a1 + 112) = v7;
  v8 = v10[1];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v8;
  result = (__n128)v10[3];
  *(_OWORD *)(a1 + 32) = v10[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t DivingDataCalculator.formatAxisDate(_:)()
{
  uint64_t v0;
  void *v1;
  Class isa;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR___CHDivingDataCalculator_axisFormatter);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "stringFromDate:", isa);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t DivingDataCalculator.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___CHDivingDataCalculator_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___CHDivingDataCalculator_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t DivingDataCalculator.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___CHDivingDataCalculator_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*DivingDataCalculator.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___CHDivingDataCalculator_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100571CD4;
}

void sub_100571CD4(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t property wrapper backing initializer of DivingDataCalculator.metrics(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[9];
  _OWORD v8[2];

  v1 = a1[9];
  v7[8] = a1[8];
  v8[0] = v1;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 153);
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  return Published.init(initialValue:)(v7, &type metadata for DiveMetrics);
}

uint64_t DivingDataCalculator.chartWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___CHDivingDataCalculator__chartWidth);
}

void DivingDataCalculator.chartWidth.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v3 + OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  if (*(_BYTE *)(v3 + OBJC_IVAR___CHDivingDataCalculator__chartWidth + 8) == 1)
  {
    *(_QWORD *)v14 = a1;
    *(_BYTE *)(v14 + 8) = a2 & 1;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v16 = (void *)static OS_dispatch_queue.main.getter(v15);
    v17 = swift_allocObject(&unk_1007A9EB0, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    aBlock[4] = sub_1005721AC;
    v24 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007A9EC8;
    v18 = _Block_copy(aBlock);
    swift_release(v24);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v20 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_100047110(&qword_100828C80);
    v22 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v6, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_100571FD0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100571FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  int64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t KeyPath;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  int64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _QWORD);
  char *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  char *v46;
  void *v47;
  void *v48;
  _BYTE v49[32];
  char v50[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v50, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(Strong + OBJC_IVAR___CHDivingDataCalculator_rawTempSamples);
    swift_bridgeObjectRetain(v4);
    v6 = sub_1005721B4(v5);
    swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
    KeyPath = swift_getKeyPath(&unk_100647000);
    v15 = swift_getKeyPath(&unk_100647028);
    v16 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v49, v3, KeyPath, v15);
    v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(v17 + 8);
    *(_QWORD *)(v17 + 8) = v6;
    swift_bridgeObjectRelease(v18, (SEL)v17, v19, v20, v21, v22, v23, v24);
    v16(v49, 0);
    swift_release(KeyPath);
    swift_release(v15);
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)&v3[OBJC_IVAR___CHDivingDataCalculator_rawDepthSamples];
    swift_bridgeObjectRetain(v25);
    v27 = sub_1005721B4(v26);
    swift_bridgeObjectRelease(v25, v28, v29, v30, v31, v32, v33, v34);
    v35 = swift_getKeyPath(&unk_100647000);
    v36 = swift_getKeyPath(&unk_100647028);
    v37 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v49, v3, v35, v36);
    v39 = *(CHWorkoutDetailHeartRateTableViewCell **)v38;
    *(_QWORD *)v38 = v27;
    swift_bridgeObjectRelease(v39, v38, v40, v41, v42, v43, v44, v45);
    v37(v49, 0);
    swift_release(v35);
    swift_release(v36);
    v46 = &v3[OBJC_IVAR___CHDivingDataCalculator_delegate];
    swift_beginAccess(&v3[OBJC_IVAR___CHDivingDataCalculator_delegate], v49, 0, 0);
    v47 = (void *)swift_unknownObjectWeakLoadStrong(v46);
    if (v47)
    {
      v48 = v47;
      objc_msgSend(v47, "divingDataDidFinishLoading");

      swift_unknownObjectRelease(v48);
    }
    else
    {

    }
  }
}

void sub_1005721AC()
{
  uint64_t v0;

  sub_100571FF4(v0);
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005721B4(int64_t a1)
{
  char *v1;
  unint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (**v25)(unint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  unint64_t v34;
  double *v35;
  double v36;
  unint64_t v37;
  objc_class *v38;
  objc_class *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  double v44;
  char *v45;
  id v46;
  id v47;
  double v48;
  double v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  void (*v55)(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t), uint64_t (*)(uint64_t), uint64_t);
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  char v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  CHWorkoutDetailHeartRateTableViewCell *result;
  __n128 v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  uint64_t v87;
  unint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  const char *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  uint64_t v103;
  __n128 v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  double v116;
  uint64_t v117;
  char v118;
  double v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v126;
  SEL v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  SEL v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  int v144;
  char *v145;
  uint64_t v146;
  char *v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t (*v151)(uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v152;
  CHWorkoutDetailHeartRateTableViewCell *v153;
  uint64_t v154;
  unint64_t *v155;
  uint64_t *v156;
  void (**v157)(unint64_t *, uint64_t, uint64_t, uint64_t);
  __n128 v158;
  unint64_t v159;
  char *v160;
  CHWorkoutDetailHeartRateTableViewCell *v161;
  uint64_t v162;
  CHWorkoutDetailHeartRateTableViewCell *v163;
  unint64_t v164;
  CHWorkoutDetailHeartRateTableViewCell *v165;
  CHWorkoutDetailHeartRateTableViewCell *v166;

  v3 = type metadata accessor for WorkoutChartDataElement(0);
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(v3 - 8);
  __chkstk_darwin(v3);
  v154 = (uint64_t)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100047110(&qword_10083AF28);
  v157 = *(void (***)(unint64_t *, uint64_t, uint64_t, uint64_t))(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083AF30);
  __chkstk_darwin(v7);
  v9 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100047110(&qword_10083AF38);
  __chkstk_darwin(v10);
  v155 = (unint64_t *)((char *)&v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v156 = (uint64_t *)((char *)&v142 - v13);
  v14 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  v162 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (uint64_t (*)(uint64_t))((char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v161 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v142 - v18);
  __chkstk_darwin(v19);
  v146 = (uint64_t)&v142 - v20;
  __chkstk_darwin(v21);
  v145 = (char *)&v142 - v22;
  __chkstk_darwin(v23);
  v25 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))((char *)&v142 - v24);
  v26 = type metadata accessor for Date(0);
  v159 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v163 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  v158.n128_u64[0] = (unint64_t)&v142 - v29;
  __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  v34 = (unint64_t)&v142 - v33;
  v160 = v1;
  v35 = (double *)&v1[OBJC_IVAR___CHDivingDataCalculator__chartWidth];
  if ((v1[OBJC_IVAR___CHDivingDataCalculator__chartWidth + 8] & 1) != 0)
    return &_swiftEmptyArrayStorage;
  v36 = *v35;
  if (*v35 <= 0.0)
    return &_swiftEmptyArrayStorage;
  v153 = v9;
  if ((unint64_t)a1 >> 62)
    goto LABEL_79;
  v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v37)
    return &_swiftEmptyArrayStorage;
LABEL_5:
  v164 = (unint64_t)v32;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v38 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    v38 = (objc_class *)*(id *)(a1 + 32);
  }
  v39 = v38;
  v40 = -[objc_class quantityType](v38, "quantityType");

  v41 = objc_msgSend((id)objc_opt_self(HKObjectType), "quantityTypeForIdentifier:", HKQuantityTypeIdentifierUnderwaterDepth);
  v148 = v4;
  v149 = v3;
  if (v40)
  {
    if (v41)
    {
      v42 = v41;
      sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
      v43 = v40;
      v144 = static NSObject.== infix(_:_:)(v43, v42);

      v40 = v42;
    }
    else
    {
      v144 = 0;
    }
  }
  else
  {
    if (!v41)
    {
      v144 = 1;
      goto LABEL_15;
    }
    v144 = 0;
    v40 = v41;
  }

LABEL_15:
  v44 = floor(v36 / 3.0 * 0.5);
  v4 = (CHWorkoutDetailHeartRateTableViewCell *)OBJC_IVAR___CHDivingDataCalculator_diveSession;
  v45 = v160;
  v46 = objc_msgSend(*(id *)&v160[OBJC_IVAR___CHDivingDataCalculator_diveSession], "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v46);

  v47 = objc_msgSend(*(id *)((char *)&v4->super.super.super.super.isa + (_QWORD)v45), "startDate");
  v3 = v164;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v47);

  v37 = v34;
  v48 = Date.timeIntervalSince(_:)(v3);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v159 + 8);
  ((void (*)(unint64_t, uint64_t))v9)(v3, v26);
  ((void (*)(unint64_t, uint64_t))v9)(v34, v26);
  v166 = &_swiftEmptyArrayStorage;
  if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0)
    goto LABEL_86;
  if (v44 <= -9.22337204e18)
    goto LABEL_87;
  if (v44 >= 9.22337204e18)
    goto LABEL_88;
  v151 = v16;
  v164 = v14;
  v3 = (uint64_t)v44;
  if ((uint64_t)v44 < 0)
    goto LABEL_89;
  v36 = v48 / v44;
  v143 = (CHWorkoutDetailHeartRateTableViewCell *)a1;
  *(_QWORD *)&v49 = swift_bridgeObjectRetain(a1).n128_u64[0];
  a1 = 0;
  v152 = (CHWorkoutDetailHeartRateTableViewCell *)(v3 + 1);
  v16 = (uint64_t (*)(uint64_t))v158.n128_u64[0];
  do
  {
    v3 = (unint64_t)v160;
    v14 = (uint64_t)&selRef_setIncludeUpcomingEventMembers_;
    v50 = objc_msgSend(*(id *)((char *)&v4->super.super.super.super.isa + (_QWORD)v160), "startDate", v49);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v50);

    Date.addingTimeInterval(_:)(v51, v36 * (double)a1);
    ((void (*)(unint64_t, uint64_t))v9)(v34, v26);
    v52 = objc_msgSend(*(id *)((char *)&v4->super.super.super.super.isa + v3), "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v52);

    if (__OFADD__(a1, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      if (a1 < 0)
        v134 = a1;
      else
        v134 = a1 & 0xFFFFFFFFFFFFFF8;
      v9 = v32;
      swift_bridgeObjectRetain(a1);
      v37 = _CocoaArrayWrapper.endIndex.getter(v134);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v135, v136, v137, v138, v139, v140, v141);
      v32 = v9;
      if (!v37)
        return &_swiftEmptyArrayStorage;
      goto LABEL_5;
    }
    v54 = v163;
    Date.addingTimeInterval(_:)(v53, v36 * (double)(a1 + 1));
    ((void (*)(unint64_t, uint64_t))v9)(v34, v26);
    v55 = *(void (**)(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t), uint64_t (*)(uint64_t), uint64_t))(v159 + 16);
    v55(v25, v16, v26);
    v56 = ((uint64_t (*)(char *, CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v55)((char *)v25 + *(int *)(v164 + 20), v54, v26);
    IndexSet.init()(v56);
    v57 = v166;
    if ((swift_isUniquelyReferenced_nonNull_native(v166) & 1) == 0)
      v57 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A98(0, *(_QWORD *)v57->cellPadding + 1, 1, (unint64_t)v57);
    v59 = *(_QWORD *)v57->cellPadding;
    v58 = *(_QWORD *)v57->cellInset;
    if (v59 >= v58 >> 1)
      v57 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A98(v58 > 1, v59 + 1, 1, (unint64_t)v57);
    *(_QWORD *)v57->cellPadding = v59 + 1;
    v3 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
    v14 = *(_QWORD *)(v162 + 72);
    sub_100047C88((uint64_t)v25, (uint64_t)v57 + v3 + v14 * v59, type metadata accessor for DivingDataCalculator.SampleBucket);
    v166 = v57;
    ((void (*)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t))v9)(v163, v26);
    v16 = (uint64_t (*)(uint64_t))v158.n128_u64[0];
    v60 = ((uint64_t (*)(unint64_t, uint64_t))v9)(v158.n128_u64[0], v26);
    ++a1;
  }
  while (v152 != (CHWorkoutDetailHeartRateTableViewCell *)a1);
  v165 = 0;
  v37 = (unint64_t)v166;
  __chkstk_darwin(v60);
  v61 = v143;
  *(&v142 - 4) = (uint64_t)v143;
  v62 = v144;
  *((_BYTE *)&v142 - 24) = v144 & 1;
  *(&v142 - 2) = (uint64_t)&v166;
  *(&v142 - 1) = (uint64_t)&v165;
  swift_bridgeObjectRetain(v37);
  sub_100577D2C(v63, (void (*)(uint64_t, char *))sub_100576F98);
  swift_bridgeObjectRelease(v61, v64, v65, v66, v67, v68, v69, v70);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v37, v71, v72, v73, v74, v75, v76, v77);
  v9 = v166;
  if ((v62 & 1) == 0)
  {
    v26 = v150;
    v25 = v157;
    v83 = (uint64_t)v153;
    v16 = (uint64_t (*)(uint64_t))v164;
    v4 = v161;
    goto LABEL_45;
  }
  v78 = *(_QWORD *)v166->cellPadding;
  v26 = v150;
  v25 = v157;
  v16 = (uint64_t (*)(uint64_t))v164;
  v4 = v161;
  if (!v78)
    goto LABEL_90;
  v34 = (unint64_t)v145;
  if (v78 >= 3)
  {
    v16 = 0;
    a1 = v78 - 2;
    v26 = v3;
    do
    {
      if ((unint64_t)v16 >= *(_QWORD *)v166->cellPadding)
        goto LABEL_76;
      v79 = sub_100577FB4((uint64_t)v166 + v26, v34);
      v80 = IndexSet.isEmpty.getter(v79);
      sub_100578040(v34);
      if ((v80 & 1) == 0)
      {
        if ((unint64_t)v16 + 1 >= *(_QWORD *)v166->cellPadding)
          goto LABEL_77;
        v81 = sub_100577FB4((uint64_t)v166 + v14 + v26, v34);
        v82 = IndexSet.isEmpty.getter(v81);
        sub_100578040(v34);
        if ((v82 & 1) != 0)
        {
          v4 = v166;
          if ((swift_isUniquelyReferenced_nonNull_native(v166) & 1) == 0)
            v4 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1004DEF88((unint64_t)v4);
          if ((unint64_t)v16 >= *(_QWORD *)v4->cellPadding)
            goto LABEL_78;
          IndexSet.insert(_:)(0);
          v166 = v4;
          v4 = v161;
        }
      }
      v16 = (uint64_t (*)(uint64_t))((char *)v16 + 1);
      v26 += v14;
    }
    while ((uint64_t (*)(uint64_t))a1 != v16);
    v9 = v166;
    v26 = v150;
    v16 = (uint64_t (*)(uint64_t))v164;
  }
  v37 = (unint64_t)v165;
  result = (CHWorkoutDetailHeartRateTableViewCell *)swift_isUniquelyReferenced_nonNull_native(v9);
  if ((result & 1) != 0)
  {
    if ((v37 & 0x8000000000000000) == 0)
      goto LABEL_43;
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
LABEL_91:
  result = (CHWorkoutDetailHeartRateTableViewCell *)sub_1004DEF88((unint64_t)v9);
  v9 = result;
  if ((v37 & 0x8000000000000000) != 0)
    goto LABEL_92;
LABEL_43:
  if (v37 < *(_QWORD *)v9->cellPadding)
  {
    IndexSet.insert(_:)(0);
    v166 = v9;
    v83 = (uint64_t)v153;
LABEL_45:
    a1 = *(_QWORD *)v9->cellPadding;
    v160 = (char *)v9 + v3;
    v163 = v9;
    v85 = swift_bridgeObjectRetain(v9);
    v159 = 0;
    v34 = 0;
    v86 = &_swiftEmptyArrayStorage;
    v85.n128_u64[0] = 134218240;
    v158 = v85;
    v36 = 0.0;
    while (2)
    {
      if (v34 == a1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t)))(v162 + 56))(v83, 1, 1, v16);
        v34 = a1;
        goto LABEL_52;
      }
      if (v34 >= *(_QWORD *)v163->cellPadding)
        goto LABEL_74;
      sub_100577FB4((uint64_t)&v160[v34 * v14], v83);
      ++v34;
      v87 = v162;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t (*)(uint64_t)))(v162 + 56))(v83, 0, 1, v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t)))(v87 + 48))(v83, 1, v16) == 1)
      {
LABEL_52:
        sub_10001BE90(v83, &qword_10083AF30);
        v88 = v155;
        v25[7](v155, 1, 1, v26);
      }
      else
      {
        v89 = v146;
        v16 = type metadata accessor for DivingDataCalculator.SampleBucket;
        sub_100047C88(v83, v146, type metadata accessor for DivingDataCalculator.SampleBucket);
        v90 = (uint64_t)&v147[*(int *)(v26 + 48)];
        sub_100047C88(v89, v90, type metadata accessor for DivingDataCalculator.SampleBucket);
        v3 = v159 + 1;
        if (__OFADD__(v159, 1))
          goto LABEL_75;
        v91 = v155;
        v92 = (uint64_t)v155 + *(int *)(v26 + 48);
        *v155 = v159;
        v93 = v90;
        v88 = v91;
        sub_100047C88(v93, v92, type metadata accessor for DivingDataCalculator.SampleBucket);
        v25[7](v88, 0, 1, v26);
        v159 = v3;
      }
      v94 = (uint64_t)v88;
      v95 = v156;
      sub_100577FF8(v94, (uint64_t)v156);
      if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v25[6])(v95, 1, v26) == 1)
      {
        swift_bridgeObjectRelease(v163, v96, v97, v98, v99, v100, v101, v102);
        swift_bridgeObjectRelease(v166, v127, v128, v129, v130, v131, v132, v133);
        return v86;
      }
      v103 = *v95;
      sub_100047C88((uint64_t)v95 + *(int *)(v26 + 48), (uint64_t)v4, type metadata accessor for DivingDataCalculator.SampleBucket);
      v105 = static os_log_type_t.debug.getter(v104);
      v106 = (uint64_t)v4;
      v107 = (uint64_t)v151;
      sub_100577FB4(v106, (uint64_t)v151);
      v108 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
      v109 = static OS_os_log.default.getter(v108);
      if (os_log_type_enabled(v109, v105))
      {
        v110 = swift_slowAlloc(22, -1);
        *(_DWORD *)v110 = v158.n128_u32[0];
        *(_QWORD *)(v110 + 4) = v103;
        *(_WORD *)(v110 + 12) = 2048;
        v3 = v164;
        v111 = IndexSet.count.getter();
        sub_100578040(v107);
        *(_QWORD *)(v110 + 14) = v111;
        _os_log_impl((void *)&_mh_execute_header, v109, v105, "DDC: Bucket %ld has %ld samples", (uint8_t *)v110, 0x16u);
        v112 = v110;
        v26 = v150;
        swift_slowDealloc(v112, -1, -1);
      }
      else
      {
        sub_100578040(v107);
        v3 = v164;
      }

      v4 = v161;
      v16 = (uint64_t (*)(uint64_t))v3;
      if ((IndexSet.isEmpty.getter(v113) & 1) != 0)
      {
        v25 = v157;
      }
      else
      {
        v114 = sub_1005712E8();
        if ((v115 & 1) != 0)
          v116 = 0.0;
        else
          v116 = (double)v114;
        v117 = sub_1005716A0();
        if ((v118 & 1) != 0)
          v119 = 0.0;
        else
          v119 = (double)v117;
        v120 = Date.timeIntervalSince(_:)(v4);
        v121 = v154;
        Date.addingTimeInterval(_:)(v122, v120 * 0.5);
        v123 = v149;
        *(double *)(v121 + *(int *)(v149 + 24)) = v116;
        *(double *)(v121 + *(int *)(v123 + 28)) = v119;
        *(double *)(v121 + *(int *)(v123 + 20)) = (v116 + v119) * 0.5;
        v124 = (unint64_t)v86;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v86);
        v25 = v157;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v124 = sub_10013FD24(0, *(_QWORD *)v86->cellPadding + 1, 1, (unint64_t)v86);
        v3 = *(_QWORD *)(v124 + 16);
        v126 = *(_QWORD *)(v124 + 24);
        v86 = (CHWorkoutDetailHeartRateTableViewCell *)v124;
        if (v3 >= v126 >> 1)
          v86 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD24(v126 > 1, v3 + 1, 1, v124);
        *(_QWORD *)v86->cellPadding = v3 + 1;
        sub_100047C88(v154, (uint64_t)v86+ ((v148[2].cellPadding[0] + 32) & ~(unint64_t)v148[2].cellPadding[0])+ *(_QWORD *)v148[2].heartRateController * v3, type metadata accessor for WorkoutChartDataElement);
      }
      sub_100578040((uint64_t)v4);
      v83 = (uint64_t)v153;
      continue;
    }
  }
LABEL_93:
  __break(1u);
  return result;
}

void (*DivingDataCalculator.chartWidth.modify(_QWORD *a1))(void ****a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = malloc(*(_QWORD *)(v5 + 64));
  v6 = type metadata accessor for DispatchQoS(0);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  v9 = OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  v10 = v1 + OBJC_IVAR___CHDivingDataCalculator__chartWidth;
  v3[6] = *(_QWORD *)(v1 + OBJC_IVAR___CHDivingDataCalculator__chartWidth);
  v3 += 6;
  v3[9] = v8;
  v3[10] = v9;
  *((_BYTE *)v3 + 8) = *(_BYTE *)(v10 + 8);
  return sub_100572FB0;
}

void sub_100572FB0(void ****a1, char a2)
{
  void ***v2;
  void **v3;
  void **v4;
  char *v5;
  void **v6;
  void **v7;
  void **v8;
  void **v9;
  char v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void **v19;
  void **v20;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[15];
    v4 = v2[12];
    DivingDataCalculator.chartWidth.setter((uint64_t)v2[6], *((_BYTE *)v2 + 56));
  }
  else
  {
    v5 = (char *)v2[16] + (_QWORD)v2[9];
    if (v5[8] == 1)
    {
      v6 = v2[15];
      v7 = v2[12];
      v19 = v2[14];
      v20 = v2[13];
      v9 = v2[10];
      v8 = v2[11];
      v10 = *((_BYTE *)v2 + 56);
      *(_QWORD *)v5 = v2[6];
      v5[8] = v10;
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v12 = (void *)static OS_dispatch_queue.main.getter(v11);
      v13 = swift_allocObject(&unk_1007A9EB0, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16);
      v2[4] = (void **)sub_1005721AC;
      v2[5] = (void **)v13;
      *v2 = _NSConcreteStackBlock;
      v2[1] = (void **)1107296256;
      v2[2] = (void **)sub_10002D0F8;
      v2[3] = (void **)&unk_1007A9EF0;
      v14 = _Block_copy(v2);
      swift_release(v2[5]);
      static DispatchQoS.unspecified.getter(v15);
      v2[8] = (void **)&_swiftEmptyArrayStorage;
      v16 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v17 = sub_100047110(&qword_100828C80);
      v18 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(v2 + 8, v17, v18, v9, v16);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v7, v14);
      _Block_release(v14);

      ((void (*)(void **, void **))v8[1])(v7, v9);
      ((void (*)(void **, void **))v19[1])(v6, v20);
    }
    v3 = v2[15];
    v4 = v2[12];
  }
  free(v3);
  free(v4);
  free(v2);
}

void sub_1005731AC(void *a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  char v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  os_log_type_t v35;
  id v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  char v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *log;
  uint64_t v76;
  double v77;
  uint64_t v78;

  v2 = objc_msgSend(a1, "quantity");
  objc_msgSend(v2, "_value");
  v4 = v3;

  if (v4 > 0.0)
    v5 = v4;
  else
    v5 = 0.0;
  v6 = objc_msgSend(a1, "quantityType");
  v7 = objc_msgSend(v6, "identifier");

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(HKQuantityTypeIdentifierUnderwaterDepth);
  if (v8 == v11 && v10 == v12)
  {
    v30 = swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    v14 = v12;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    swift_bridgeObjectRelease(v10, v16, v17, v18, v19, v20, v21, v22);
    swift_bridgeObjectRelease(v14, v23, v24, v25, v26, v27, v28, v29);
    if ((v15 & 1) == 0)
      goto LABEL_14;
  }
  v31.n128_u64[0] = 0x40C57C0000000000;
  if (v5 >= 11000.0)
  {
    v32 = static os_log_type_t.error.getter(v30);
    v33 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
    log = static OS_os_log.default.getter(v33);
    if (os_log_type_enabled(log, v32))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      v77 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v34 + 4);
      _os_log_impl((void *)&_mh_execute_header, log, v32, "DivingDataCalculator bad sample value (out of bounds): %f", v34, 0xCu);
      swift_slowDealloc(v34, -1, -1);

      return;
    }
    goto LABEL_20;
  }
LABEL_14:
  v35 = static os_log_type_t.debug.getter(v31);
  sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
  v36 = a1;
  v37 = static OS_os_log.default.getter(v36);
  if (!os_log_type_enabled(v37, v35))
  {

    if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) != 0)
    {
LABEL_28:
      if (v5 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v5 < 9.22337204e18)
      {
        type metadata accessor for DivingDataCalculator.SampleBucket(0);
        IndexSet.insert(_:)((uint64_t)v5);
        return;
      }
      __break(1u);
      goto LABEL_33;
    }
    __break(1u);
LABEL_20:

    return;
  }
  v38 = 0x6874706564;
  v39 = swift_slowAlloc(32, -1);
  v40 = swift_slowAlloc(32, -1);
  v77 = *(double *)&v40;
  *(_DWORD *)v39 = 136315650;
  v41 = objc_msgSend(v36, "quantityType");
  v42 = objc_msgSend(v41, "identifier");

  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v45 = v44;

  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(HKQuantityTypeIdentifierUnderwaterDepth);
  v48 = v46;
  if (v43 == v47 && v45 == v46)
  {
    swift_bridgeObjectRelease_n(v45, 2);
    v49 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
  }
  else
  {
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);
    swift_bridgeObjectRelease(v45, v51, v52, v53, v54, v55, v56, v57);
    swift_bridgeObjectRelease(v48, v58, v59, v60, v61, v62, v63, v64);
    if ((v50 & 1) != 0)
    {
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
    }
    else
    {
      v38 = 1886217588;
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
    }
  }
  v76 = sub_10003E8EC(v38, (unint64_t)v49, (uint64_t *)&v77);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v39 + 4);

  swift_bridgeObjectRelease(v49, v65, v66, v67, v68, v69, v70, v71);
  *(_WORD *)(v39 + 12) = 2048;
  v72 = objc_msgSend(v36, "quantity");
  objc_msgSend(v72, "_value");
  v74 = v73;

  v76 = v74;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v39 + 14);

  *(_WORD *)(v39 + 22) = 2048;
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v5 < 9.22337204e18)
  {
    v76 = (uint64_t)v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v39 + 24);
    _os_log_impl((void *)&_mh_execute_header, v37, v35, "DivingDataCalculator: inserting %s %f (%ld)", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

    goto LABEL_28;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1005736FC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  __chkstk_darwin(v4);
  v37 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v40 = (uint64_t)&v37 - v7;
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v37 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a1, "startDate", v18);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

  sub_1000083D8((unint64_t *)&qword_1008274E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LOBYTE(v21) = dispatch thunk of static Comparable.< infix(_:_:)(v2, v20, v16);
  v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  v22(v20, v16);
  sub_100577FB4(v2, (uint64_t)v15);
  v38 = v4;
  if ((v21 & 1) != 0)
  {
    sub_100578040((uint64_t)v15);
    sub_100577FB4(v2, (uint64_t)v12);
  }
  else
  {
    v23 = objc_msgSend(a1, "endDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

    LOBYTE(v23) = dispatch thunk of static Comparable.< infix(_:_:)(v20, &v15[*(int *)(v4 + 20)], v16);
    v22(v20, v16);
    sub_100578040((uint64_t)v15);
    sub_100577FB4(v2, (uint64_t)v12);
    if ((v23 & 1) == 0)
    {
      sub_100578040((uint64_t)v12);
      v35 = v2;
      v27 = v40;
      sub_100577FB4(v35, v40);
      goto LABEL_11;
    }
  }
  v24 = objc_msgSend(a1, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

  LOBYTE(v24) = dispatch thunk of static Comparable.< infix(_:_:)(v20, v12, v16);
  v22(v20, v16);
  v25 = v39;
  sub_100577FB4((uint64_t)v12, v39);
  if ((v24 & 1) != 0)
  {
    sub_100578040(v25);
    sub_100578040((uint64_t)v12);
    v26 = v2;
    v27 = v40;
    sub_100577FB4(v26, v40);
    v28 = v38;
    goto LABEL_7;
  }
  v29 = objc_msgSend(a1, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

  v28 = v38;
  LOBYTE(v29) = dispatch thunk of static Comparable.< infix(_:_:)(v25 + *(int *)(v38 + 20), v20, v16);
  v22(v20, v16);
  sub_100578040(v25);
  sub_100578040((uint64_t)v12);
  v30 = v2;
  v27 = v40;
  sub_100577FB4(v30, v40);
  if ((v29 & 1) == 0)
  {
LABEL_11:
    v33 = 1;
    goto LABEL_12;
  }
LABEL_7:
  v31 = objc_msgSend(a1, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v31);

  LOBYTE(v31) = dispatch thunk of static Comparable.< infix(_:_:)(v27 + *(int *)(v28 + 20), v20, v16);
  v22(v20, v16);
  v32 = v37;
  sub_100577FB4(v27, v37);
  if ((v31 & 1) != 0)
  {
    sub_100578040(v32);
    v33 = 0;
  }
  else
  {
    v34 = objc_msgSend(a1, "endDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

    v33 = dispatch thunk of static Comparable.< infix(_:_:)(v20, v32, v16) ^ 1;
    v22(v20, v16);
    sub_100578040(v32);
  }
LABEL_12:
  sub_100578040(v27);
  return v33 & 1;
}

char *sub_100573B24(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  NSString v25;
  uint64_t v27;
  objc_class *ObjectType;
  objc_super v29;
  _QWORD v30[15];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  char v35;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v8 = sub_100047110(&qword_10083AF20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR___CHDivingDataCalculator_delegate]);
  v12 = &v4[OBJC_IVAR___CHDivingDataCalculator__metrics];
  v35 = 1;
  memset(v30, 0, 24);
  v30[3] = 11565;
  v30[4] = 0xE200000000000000;
  v30[5] = 0;
  v30[6] = 0xE000000000000000;
  v30[7] = 11565;
  v30[8] = 0xE200000000000000;
  v30[9] = 0;
  v30[10] = 0xE000000000000000;
  v30[11] = 11565;
  v30[12] = 0xE200000000000000;
  v30[13] = 11565;
  v30[14] = 0xE200000000000000;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 1;
  v13 = v4;
  Published.init(initialValue:)(v30, &type metadata for DiveMetrics);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v14 = &v13[OBJC_IVAR___CHDivingDataCalculator__chartWidth];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_rawTempSamples] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_rawDepthSamples] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_healthStore] = a1;
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_diveSession] = a2;
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_formattingManager] = a3;
  v15 = objc_allocWithZone((Class)NSDateFormatter);
  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = objc_msgSend(v15, "init");
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_axisFormatter] = v19;
  v20 = objc_msgSend((id)objc_opt_self(HKQuery), "predicateForObjectsFromWorkout:", v17);
  *(_QWORD *)&v13[OBJC_IVAR___CHDivingDataCalculator_predicate] = v20;

  v29.receiver = v13;
  v29.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v29, "init");
  v22 = *(void **)&v21[OBJC_IVAR___CHDivingDataCalculator_axisFormatter];
  v23 = v21;
  objc_msgSend(v22, "setDoesRelativeDateFormatting:", 0);
  objc_msgSend(v22, "setDateStyle:", 0);
  objc_msgSend(v22, "setTimeStyle:", 1);
  v24 = v22;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setDateFormat:", v25);

  sub_100573E04();
  return v23;
}

double sub_100573E04()
{
  uint64_t v0;
  Class isa;
  uint64_t v2;
  _QWORD *v3;
  double result;

  v0 = swift_allocObject(&unk_1007A9EB0, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  swift_retain(v0);
  isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierWaterTemperature).super.super.super.isa;
  v2 = swift_allocObject(&unk_1007A9EB0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = (_QWORD *)swift_allocObject(&unk_1007A9FD0, 40, 7);
  v3[2] = v2;
  v3[3] = sub_10057641C;
  v3[4] = v0;
  swift_retain(v2);
  swift_retain(v0);
  sub_1005756CC(isa, (uint64_t)sub_100576428, (uint64_t)v3);
  swift_release_n(v0, 2);

  swift_release(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

double sub_100573F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t Strong;
  double result;
  void *v9;
  _QWORD *v10;
  Class isa;
  uint64_t v12;
  _QWORD *v13;
  _BYTE v14[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (_QWORD *)swift_allocObject(&unk_1007AA070, 40, 7);
    v10[2] = a3;
    v10[3] = a2;
    v10[4] = a1;
    sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
    swift_retain(a3);
    swift_errorRetain(a2);
    swift_bridgeObjectRetain(a1);
    isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierUnderwaterDepth).super.super.super.isa;
    v12 = swift_allocObject(&unk_1007A9EB0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    v13 = (_QWORD *)swift_allocObject(&unk_1007AA098, 40, 7);
    v13[2] = v12;
    v13[3] = sub_100576D50;
    v13[4] = v10;
    swift_retain(v12);
    swift_retain(v10);
    sub_1005756CC(isa, (uint64_t)sub_100576D8C, (uint64_t)v13);

    swift_release(v10);
    swift_release(v12);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1005740E4(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char *Strong;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  unint64_t v33;
  uint64_t v34;
  const char *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  double v62;
  double v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  uint64_t v93;
  const char *v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  SEL v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  double v111;
  double v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  id v117;
  double v118;
  double v119;
  double v120;
  id v121;
  double v122;
  double v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  void *v145;
  _OWORD v146[9];
  _OWORD v147[2];
  _QWORD v148[3];
  char v149[8];
  _QWORD v150[3];
  char v151[8];
  uint64_t v152;
  char v153[40];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v153, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v9);
  if (!Strong)
  {
LABEL_10:
    v67 = static os_log_type_t.error.getter(Strong);
    sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
    swift_errorRetain(a4);
    swift_errorRetain(a2);
    swift_errorRetain(a4);
    v68 = swift_errorRetain(a2);
    v69 = static OS_os_log.default.getter(v68);
    if (os_log_type_enabled(v69, v67))
    {
      v70 = swift_slowAlloc(22, -1);
      v144 = swift_slowAlloc(64, -1);
      v152 = v144;
      *(_DWORD *)v70 = 136315394;
      if (a4)
      {
        swift_getErrorValue(a4, v149, v148);
        Error.localizedDescription.getter(v148[1], v148[2]);
        v72 = v71;
      }
      else
      {
        v72 = 0;
      }
      *((_QWORD *)&v146[0] + 1) = v72;
      v73 = sub_100047110(&qword_10082B520);
      v74 = Optional.description.getter(v73);
      v76 = (CHWorkoutDetailHeartRateTableViewCell *)v75;
      swift_bridgeObjectRelease(v72, v75, v77, v78, v79, v80, v81, v82);
      *(_QWORD *)&v146[0] = sub_10003E8EC(v74, (unint64_t)v76, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v146, (char *)v146 + 8, v70 + 4);
      swift_bridgeObjectRelease(v76, v83, v84, v85, v86, v87, v88, v89);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
      *(_WORD *)(v70 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue(a2, v151, v150);
        v90 = Error.localizedDescription.getter(v150[1], v150[2]);
        v92 = v91;
      }
      else
      {
        v90 = 0;
        v92 = 0;
      }
      *(_QWORD *)&v146[0] = v90;
      *((_QWORD *)&v146[0] + 1) = v92;
      v93 = Optional.description.getter(v73);
      v95 = (CHWorkoutDetailHeartRateTableViewCell *)v94;
      swift_bridgeObjectRelease(v92, v94, v96, v97, v98, v99, v100, v101);
      *(_QWORD *)&v146[0] = sub_10003E8EC(v93, (unint64_t)v95, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v146, (char *)v146 + 8, v70 + 14);
      swift_bridgeObjectRelease(v95, v102, v103, v104, v105, v106, v107, v108);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v69, v67, "DivingDataCalculator internal error: %s %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v144, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v144, -1, -1);
      swift_slowDealloc(v70, -1, -1);

    }
    else
    {

      swift_errorRelease(a4);
      swift_errorRelease(a4);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }
    return;
  }
  v11 = Strong;
  if (a4 | a2)
  {

    goto LABEL_10;
  }
  v12 = swift_allocObject(&unk_1007AA0C0, 185, 7);
  *(_QWORD *)(v12 + 16) = 0;
  LOBYTE(v152) = 1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 11565;
  *(_QWORD *)(v12 + 48) = 0xE200000000000000;
  *(_QWORD *)(v12 + 56) = 0;
  *(_QWORD *)(v12 + 64) = 0xE000000000000000;
  *(_QWORD *)(v12 + 72) = 11565;
  *(_QWORD *)(v12 + 80) = 0xE200000000000000;
  *(_QWORD *)(v12 + 88) = 0;
  *(_QWORD *)(v12 + 96) = 0xE000000000000000;
  *(_QWORD *)(v12 + 104) = 11565;
  *(_QWORD *)(v12 + 112) = 0xE200000000000000;
  *(_QWORD *)(v12 + 120) = 11565;
  *(_QWORD *)(v12 + 128) = 0xE200000000000000;
  *(_OWORD *)(v12 + 136) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_BYTE *)(v12 + 184) = v152;
  sub_100574880(a5);
  v14 = v13;
  v143 = v15;
  v16 = sub_100574DD0();
  v140 = v17;
  v141 = v16;
  v138 = v19;
  v139 = v18;
  v20 = sub_1005721B4(a1);
  v137 = sub_1005721B4(a5);
  v136 = sub_100575104();
  v21 = (void *)objc_opt_self(FIUIFormattingManager);
  sub_100575358();
  v23 = v22;
  v24 = objc_msgSend(v21, "stringWithNumber:decimalPrecision:", v22, 1);

  if (!v24)
  {
    __break(1u);
    goto LABEL_32;
  }
  v135 = v20;
  v145 = v14;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v133 = v26;
  v134 = v25;

  v27 = OBJC_IVAR___CHDivingDataCalculator_formattingManager;
  v28 = objc_msgSend(*(id *)&v11[OBJC_IVAR___CHDivingDataCalculator_formattingManager], "localizedStringWithDepthInMeters:depthUnit:", 1, 0.0);
  if (!v28)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v29 = v28;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v32 = v31;

  *(_QWORD *)&v146[0] = v30;
  *((_QWORD *)&v146[0] + 1) = v32;
  v33 = sub_100038CA0();
  v34 = StringProtocol.localizedUppercase.getter(&type metadata for String, v33);
  v131 = v35;
  v132 = v34;
  swift_bridgeObjectRelease(v32, v35, v36, v37, v38, v39, v40, v41);
  v42 = *(void **)&v11[OBJC_IVAR___CHDivingDataCalculator_diveSession];
  v43 = *(id *)&v11[v27];
  objc_msgSend(v42, "duration");
  v44 = objc_msgSend(v43, "localizedUnderwaterTime:");

  if (!v44)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v47 = v46;

  v48 = *(id *)&v11[v27];
  v49 = sub_100575564(v48, a5);
  v130 = v27;
  v51 = v50;

  v52 = *(_OWORD *)(v12 + 160);
  v146[8] = *(_OWORD *)(v12 + 144);
  v147[0] = v52;
  *(_OWORD *)((char *)v147 + 9) = *(_OWORD *)(v12 + 169);
  v53 = *(_OWORD *)(v12 + 96);
  v146[4] = *(_OWORD *)(v12 + 80);
  v146[5] = v53;
  v54 = *(_OWORD *)(v12 + 128);
  v146[6] = *(_OWORD *)(v12 + 112);
  v146[7] = v54;
  v55 = *(_OWORD *)(v12 + 32);
  v146[0] = *(_OWORD *)(v12 + 16);
  v146[1] = v55;
  v56 = *(_OWORD *)(v12 + 64);
  v146[2] = *(_OWORD *)(v12 + 48);
  v146[3] = v56;
  *(_QWORD *)(v12 + 16) = v135;
  *(_QWORD *)(v12 + 24) = v137;
  *(_QWORD *)(v12 + 32) = v136;
  *(_QWORD *)(v12 + 40) = v134;
  *(_QWORD *)(v12 + 48) = v133;
  *(_QWORD *)(v12 + 56) = v132;
  *(_QWORD *)(v12 + 64) = v131;
  *(_QWORD *)(v12 + 72) = v141;
  *(_QWORD *)(v12 + 80) = v140;
  *(_QWORD *)(v12 + 88) = v139;
  *(_QWORD *)(v12 + 96) = v138;
  *(_QWORD *)(v12 + 104) = v45;
  *(_QWORD *)(v12 + 112) = v47;
  *(_QWORD *)(v12 + 120) = v49;
  *(_QWORD *)(v12 + 128) = v51;
  *(_OWORD *)(v12 + 136) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_BYTE *)(v12 + 184) = 1;
  sub_1001B5240((uint64_t *)v146);
  if (v145)
  {
    v57 = *(void **)&v11[v130];
    v58 = v145;
    v59 = v143;
    v60 = v57;
    sub_100576E28(v145, v143);
    v61 = objc_msgSend(v58, "quantity");
    objc_msgSend(v61, "_value");
    v63 = v62;

    v64 = objc_msgSend(v60, "localizedWaterTemperatureValue:", v63);
    if (v64)
    {
      v142 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v66 = v65;

    }
    else
    {
      v142 = 0;
      v66 = 0;
    }
    v109 = *(id *)&v11[v130];
    v110 = objc_msgSend(v59, "quantity");
    objc_msgSend(v110, "_value");
    v112 = v111;

    v113 = objc_msgSend(v109, "localizedWaterTemperatureValue:", v112);
    if (v113)
    {
      v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
      v116 = v115;

    }
    else
    {
      v114 = 0;
      v116 = 0;
    }
    v117 = objc_msgSend(v58, "quantity");
    objc_msgSend(v117, "_value");
    v119 = v118;

    v120 = floor(v119);
    v121 = objc_msgSend(v59, "quantity");
    objc_msgSend(v121, "_value");
    v123 = v122;

    *(double *)(v12 + 168) = v120;
    *(double *)(v12 + 176) = floor(v123);
    *(_BYTE *)(v12 + 184) = 0;

    if (!v116)
    {
      v114 = 11565;
      v116 = 0xE200000000000000;
    }

    v124 = v142;
    if (v66)
    {
      v125 = v66;
    }
    else
    {
      v124 = 11565;
      v125 = 0xE200000000000000;
    }
    v126 = *(_QWORD *)(v12 + 136);
    v127 = *(_QWORD *)(v12 + 144);
    v128 = *(_QWORD *)(v12 + 152);
    v129 = *(_QWORD *)(v12 + 160);
    *(_QWORD *)(v12 + 136) = v124;
    *(_QWORD *)(v12 + 144) = v125;
    *(_QWORD *)(v12 + 152) = v114;
    *(_QWORD *)(v12 + 160) = v116;
    sub_1001B5310(v126, v127, v128, v129);
    sub_100574BC8(v11, v12);
    sub_100576E54(v145, v143);
  }
  else
  {
    sub_100574BC8(v11, v12);
  }

  swift_release(v12);
}

void sub_100574880(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  objc_class *v4;
  id v5;
  Class isa;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = (objc_class *)_CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v24, v25, v26, v27, v28, v29, v30);
    if (!v4)
      goto LABEL_10;
  }
  else
  {
    v4 = *(objc_class **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
    {
LABEL_10:
      v9 = static os_log_type_t.error.getter(a1);
      v10 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
      v11 = (void *)static OS_os_log.default.getter(v10);
      os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v11, "DivingDataCalculator empty temperature samples", 46, 2, &_swiftEmptyArrayStorage);
LABEL_11:

      return;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(a1);
    v4 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v31, v32, v33, v34, v35, v36, v37);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v4 = (objc_class *)*(id *)(a1 + 32);
  }
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v5 = -[objc_class quantityType](v4, "quantityType");
  sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  isa = HKQuantityType.init(_:)(HKQuantityTypeIdentifierWaterTemperature).super.super.super.isa;
  v7 = static NSObject.== infix(_:_:)(v5, isa);

  if ((v7 & 1) == 0)
  {

    goto LABEL_10;
  }
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    v8 = (uint64_t)sub_10029682C(v12);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v42 = v8;
  sub_100576FA8(&v42);
  v1 = v42;
  if ((v42 & 0x8000000000000000) == 0 && (v42 & 0x4000000000000000) == 0)
  {
    v20 = *(_QWORD *)(v42 + 16);
    swift_retain(v42);
    if (v20)
      goto LABEL_16;
    goto LABEL_31;
  }
LABEL_30:
  swift_retain(v1);
  v20 = _CocoaArrayWrapper.endIndex.getter(v38);
  if (!v20)
  {
LABEL_31:
    v39 = swift_release_n(v1, 2);
    v40 = static os_log_type_t.error.getter(v39);
    v41 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
    v11 = (void *)static OS_os_log.default.getter(v41);
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v11, "DivingDataCalculator temperature sample sorting error", 53, 2, &_swiftEmptyArrayStorage);

    goto LABEL_11;
  }
LABEL_16:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      *(id *)(v1 + 32);
      swift_release(v1);
      v21 = v20 - 1;
      if (!__OFSUB__(v20, 1))
      {
        if ((v21 & 0x8000000000000000) == 0)
        {
          if (v21 < *(_QWORD *)(v1 + 16))
          {
            v22 = *(id *)(v1 + 32 + 8 * v21);
LABEL_22:

            swift_release(v1);
            return;
          }
          goto LABEL_37;
        }
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_36;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  swift_release(v1);
  if (!__OFSUB__(v20, 1))
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 1, v1);
    goto LABEL_22;
  }
LABEL_38:
  __break(1u);
  swift_release(v1);
  __break(1u);
}

uint64_t sub_100574BC8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1007AA0E8, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_100576EAC;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007AA100;
  v13 = _Block_copy(aBlock);
  v14 = v24;
  v15 = a1;
  swift_retain(a2);
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v17 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100047110(&qword_100828C80);
  v19 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
}

id sub_100574DD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  uint64_t v25;
  id result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  _QWORD v41[2];
  id v42[2];

  v1 = *(void **)(v0 + OBJC_IVAR___CHDivingDataCalculator_formattingManager);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___CHDivingDataCalculator_healthStore);
  v42[0] = 0;
  v4 = objc_msgSend(v1, "localizedGoalDescriptionForDive:healthStore:outValue:", v2, v3, v42);
  v5 = v42[0];
  if (v4)
  {
    v6 = v4;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;
    v10 = v5;

  }
  else
  {
    v11 = v42[0];
    v9 = (void *)0xE200000000000000;
    v7 = 11565;
  }
  v12 = objc_msgSend(v1, "unitManager");
  if (!v12)
    __break(1u);
  v13 = v12;
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v14 = objc_msgSend(v13, "userDepthHKUnit");

  v15 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  LOBYTE(v13) = static NSObject.== infix(_:_:)(v14, v15);

  if ((v13 & 1) != 0)
    v16 = 1;
  else
    v16 = 2;
  v42[0] = (id)v7;
  v42[1] = v9;
  v41[0] = 43;
  v41[1] = 0xE100000000000000;
  v17 = sub_100038CA0();
  if ((StringProtocol.contains<A>(_:)(v41, &type metadata for String, &type metadata for String, v17, v17) & 1) == 0)
  {
    v39 = objc_msgSend(v1, "localizedDepthUnit:", v16);
    if (v39)
    {
      v40 = v39;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v39);

    }
    return (id)v7;
  }
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = sub_100047110((uint64_t *)&unk_100827460);
  v25 = swift_allocObject(v24, 72, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100622F90;
  result = objc_msgSend(v1, "localizedDepthUnit:", v16);
  if (result)
  {
    v27 = result;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v30 = v29;

    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_100038CF8();
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v30;
    String.init(format:_:)(v21, v23, v25, v31);
    swift_bridgeObjectRelease(v23, v32, v33, v34, v35, v36, v37, v38);
    return (id)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100575104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  double v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, uint64_t);

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v29 - v8;
  v10 = OBJC_IVAR___CHDivingDataCalculator_diveSession;
  v11 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession), "endDate", v7);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v12 = objc_msgSend(*(id *)(v0 + v10), "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v13 = Date.timeIntervalSince(_:)(v5);
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v30 = v14;
  v14(v5, v2);
  v15 = v2;
  v14(v9, v2);
  v16 = v13 / 3.0;
  v17 = sub_100047110((uint64_t *)&unk_100828730);
  v18 = *(_QWORD *)(v3 + 72);
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 32) & ~v19;
  v29 = 2 * v18;
  v21 = swift_allocObject(v17, v20 + 3 * v18, v19 | 7);
  *(_OWORD *)(v21 + 16) = xmmword_100624A40;
  v22 = objc_msgSend(*(id *)(v1 + v10), "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v9, v15);
  v23 = objc_msgSend(*(id *)(v1 + v10), "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

  Date.addingTimeInterval(_:)(v24, v16);
  v25 = v30;
  v30(v5, v15);
  v26 = objc_msgSend(*(id *)(v1 + v10), "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v26);

  Date.addingTimeInterval(_:)(v27, v16 + v16);
  v25(v5, v15);
  return v21;
}

void sub_100575358()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___CHDivingDataCalculator_diveSession), "workoutEvents");
  if (!v1)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    NSNumber.init(integerLiteral:)(1);
    return;
  }
  v2 = v1;
  v3 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v25 = v4;
    else
      v25 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v12 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v26, v27, v28, v29, v30, v31, v32);
    if (v12)
    {
LABEL_4:
      if (v12 < 1)
        goto LABEL_27;
      for (i = 0; i != v12; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0)
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
        else
          v23 = *(id *)(v4 + 8 * i + 32);
        v24 = v23;
        if (objc_msgSend(v23, "type") == (id)2)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(2);
          v14 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
          v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v24);
          specialized ContiguousArray._endMutation()(v15);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v16, v17, v18, v19, v20, v21, v22);
      if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_25;
      goto LABEL_21;
    }
  }
  else
  {
    v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v5, v6, v7, v8, v9, v10, v11);
  if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
  {
LABEL_25:
    swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
    v33 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_release(&_swiftEmptyArrayStorage);
    goto LABEL_23;
  }
LABEL_21:
  if (((unint64_t)&_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    goto LABEL_25;
  v33 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
LABEL_23:
  swift_release(&_swiftEmptyArrayStorage);
  if (!__OFADD__(v33, 1))
  {
    Int._bridgeToObjectiveC()();
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_100575564(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  uint64_t result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  sub_100574880(a2);
  if (!v3)
  {
    v17 = static os_log_type_t.error.getter(0);
    v18 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
    v19 = (void *)static OS_os_log.default.getter(v18);
    os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v19, "DivingDataCalculator extrema error", 34, 2, &_swiftEmptyArrayStorage);

    return 11565;
  }
  v5 = v4;
  v6 = v3;
  v7 = v5;
  v8 = objc_msgSend(v6, "quantity");
  objc_msgSend(v8, "_value");
  v10 = v9;

  v11 = objc_msgSend(v7, "quantity");
  objc_msgSend(v11, "_value");
  v13 = v12;

  result = (uint64_t)objc_msgSend(a1, "localizedWaterTemperatureRangeWithColdest:hottest:", v10, v13);
  if (result)
  {
    v15 = (void *)result;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return v16;
  }
  __break(1u);
  return result;
}

void sub_1005756CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v7 = swift_allocObject(&unk_1007A9FF8, 24, 7);
  *(_QWORD *)(v7 + 16) = &_swiftEmptyArrayStorage;
  v8 = *(_QWORD *)(v3 + OBJC_IVAR___CHDivingDataCalculator_predicate);
  v9 = (_QWORD *)swift_allocObject(&unk_1007AA020, 48, 7);
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v7;
  v9[5] = a1;
  v10 = objc_allocWithZone((Class)HKQuantitySeriesSampleQuery);
  v14[4] = sub_1005764A4;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100576BC0;
  v14[3] = &unk_1007AA038;
  v11 = _Block_copy(v14);
  v12 = a1;
  swift_retain(a3);
  v13 = objc_msgSend(v10, "initWithQuantityType:predicate:quantityHandler:", v12, v8, v11, swift_retain(v7).n128_f64[0]);
  _Block_release(v11);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR___CHDivingDataCalculator_healthStore), "executeQuery:", v13, swift_release(v15).n128_f64[0]);
  swift_release(v7);

}

uint64_t sub_100575824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v10 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *a6;
    v14 = *(_QWORD *)(Strong + *a6);
    *(_QWORD *)(Strong + v13) = a1;
    swift_bridgeObjectRetain(a1);

    swift_bridgeObjectRelease(v14);
  }
  return a4(a1, a2);
}

void sub_1005758BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(__n128), uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  __n128 v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  Class isa;
  Class v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(__n128);
  int v52;
  _BYTE v53[24];

  v50 = a8;
  v51 = a7;
  v49 = a6;
  v52 = a5;
  v12 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - v16;
  v18 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DateInterval(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (_QWORD *)(a9 + 16);
  if (!a2)
  {
LABEL_4:
    if ((v52 & 1) == 0)
      return;
    goto LABEL_5;
  }
  sub_10038F108(a3, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10001BE90((uint64_t)v20, (uint64_t *)&unk_100827440);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  v35 = a2;
  v36 = a10;
  v37 = DateInterval.start.getter(v36);
  DateInterval.end.getter(v37);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v39 = Date._bridgeToObjectiveC()().super.isa;
  v46 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v36, v35, isa, v39);

  v40 = v48;
  v41 = *(void (**)(char *, uint64_t))(v47 + 8);
  v41(v14, v48);
  v41(v17, v40);
  swift_beginAccess(v25, v53, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v44 = *(_QWORD *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v44 >= v43 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
  v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v46);
  specialized Array._endMutation()(v45);
  swift_endAccess(v53);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if ((v52 & 1) != 0)
  {
LABEL_5:
    swift_beginAccess(v25, v53, 0, 0);
    v26 = (CHWorkoutDetailHeartRateTableViewCell *)*v25;
    v27 = swift_bridgeObjectRetain(*v25);
    v51(v27);
    swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
  }
}

id DivingDataCalculator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void DivingDataCalculator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("FitnessApp.DivingDataCalculator", 31, "init()", 6, 0);
  __break(1u);
}

id DivingDataCalculator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100575D08@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType(v2);
  result = ObservableObject<>.objectWillChange.getter(ObjectType, a1);
  *a2 = result;
  return result;
}

uint64_t destroy for DiveMetrics(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(a1[14]);
  result = a1[16];
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a1[18]);
  }
  return result;
}

uint64_t initializeWithCopy for DiveMetrics(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v22;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v9 = a2[4];
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  v11 = a2[6];
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v10;
  v13 = a2[8];
  v12 = a2[9];
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v12;
  v15 = a2[10];
  v14 = a2[11];
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v14;
  v17 = a2[12];
  v16 = a2[13];
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v16;
  v18 = a2[14];
  *(_QWORD *)(a1 + 112) = v18;
  v22 = a2[16];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  if (v22)
  {
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v22;
    v19 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v19;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v20 = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 136) = v20;
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  return a1;
}

uint64_t assignWithCopy for DiveMetrics(uint64_t a1, uint64_t *a2)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  _OWORD *v85;
  _OWORD *v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  uint64_t v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;

  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)a1;
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4, v6, v7, v8, v9, v10, v11, v12);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  v14 = a2[1];
  *(_QWORD *)(a1 + 8) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  v22 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  v23 = a2[2];
  *(_QWORD *)(a1 + 16) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  *(_QWORD *)(a1 + 24) = a2[3];
  v31 = a2[4];
  v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
  *(_QWORD *)(a1 + 40) = a2[5];
  v40 = a2[6];
  v41 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  *(_QWORD *)(a1 + 56) = a2[7];
  v49 = a2[8];
  v50 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v49;
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRelease(v50, v51, v52, v53, v54, v55, v56, v57);
  *(_QWORD *)(a1 + 72) = a2[9];
  v58 = a2[10];
  v59 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59, v60, v61, v62, v63, v64, v65, v66);
  *(_QWORD *)(a1 + 88) = a2[11];
  v67 = a2[12];
  v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
  *(_QWORD *)(a1 + 104) = a2[13];
  v76 = a2[14];
  v77 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77, v78, v79, v80, v81, v82, v83, v84);
  v85 = (_OWORD *)(a1 + 120);
  v86 = a2 + 15;
  v87 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 128);
  v88 = a2[16];
  if (v87)
  {
    if (v88)
    {
      *(_QWORD *)(a1 + 120) = a2[15];
      v89 = a2[16];
      *(_QWORD *)(a1 + 128) = v89;
      swift_bridgeObjectRetain(v89);
      swift_bridgeObjectRelease(v87, v90, v91, v92, v93, v94, v95, v96);
      *(_QWORD *)(a1 + 136) = a2[17];
      v97 = a2[18];
      v98 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 144);
      *(_QWORD *)(a1 + 144) = v97;
      swift_bridgeObjectRetain(v97);
      swift_bridgeObjectRelease(v98, v99, v100, v101, v102, v103, v104, v105);
    }
    else
    {
      sub_10001BE90(a1 + 120, &qword_10083AEA0);
      v108 = *(_OWORD *)(a2 + 17);
      *v85 = *v86;
      *(_OWORD *)(a1 + 136) = v108;
    }
  }
  else if (v88)
  {
    *(_QWORD *)(a1 + 120) = a2[15];
    v106 = a2[16];
    *(_QWORD *)(a1 + 128) = v106;
    *(_QWORD *)(a1 + 136) = a2[17];
    v107 = a2[18];
    *(_QWORD *)(a1 + 144) = v107;
    swift_bridgeObjectRetain(v106);
    swift_bridgeObjectRetain(v107);
  }
  else
  {
    v109 = *(_OWORD *)(a2 + 17);
    *v85 = *v86;
    *(_OWORD *)(a1 + 136) = v109;
  }
  v110 = *(_OWORD *)(a2 + 19);
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_OWORD *)(a1 + 152) = v110;
  return a1;
}

__n128 initializeWithTake for DiveMetrics(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(__int128 *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for DiveMetrics(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  const char *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  __int128 v99;

  v10 = *(CHWorkoutDetailHeartRateTableViewCell **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v10, (SEL)a2, a3, a4, a5, a6, a7, a8);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
  v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
  v27 = *(_QWORD *)(a2 + 32);
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v27;
  swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = *(_QWORD *)(a2 + 48);
  v37 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v36;
  swift_bridgeObjectRelease(v37, v38, v39, v40, v41, v42, v43, v44);
  v45 = *(_QWORD *)(a2 + 64);
  v46 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v45;
  swift_bridgeObjectRelease(v46, v47, v48, v49, v50, v51, v52, v53);
  v54 = *(_QWORD *)(a2 + 80);
  v55 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v54;
  swift_bridgeObjectRelease(v55, v56, v57, v58, v59, v60, v61, v62);
  v63 = *(_QWORD *)(a2 + 96);
  v64 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v63;
  swift_bridgeObjectRelease(v64, v65, v66, v67, v68, v69, v70, v71);
  v72 = *(_QWORD *)(a2 + 112);
  v73 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v72;
  swift_bridgeObjectRelease(v73, v74, v75, v76, v77, v78, v79, v80);
  v88 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 128);
  if (!v88)
    goto LABEL_5;
  v89 = *(_QWORD *)(a2 + 128);
  if (!v89)
  {
    sub_10001BE90(a1 + 120, &qword_10083AEA0);
LABEL_5:
    v99 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v99;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v89;
  swift_bridgeObjectRelease(v88, v81, v82, v83, v84, v85, v86, v87);
  v90 = *(_QWORD *)(a2 + 144);
  v91 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v90;
  swift_bridgeObjectRelease(v91, v92, v93, v94, v95, v96, v97, v98);
LABEL_6:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiveMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 169))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiveMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 169) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiveMetrics()
{
  return &type metadata for DiveMetrics;
}

uint64_t sub_1005762FC()
{
  return type metadata accessor for DivingDataCalculator(0);
}

uint64_t type metadata accessor for DivingDataCalculator(uint64_t a1)
{
  return sub_100024334(a1, (uint64_t *)&unk_10083AF08, (uint64_t)&nominal type descriptor for DivingDataCalculator);
}

void sub_100576318(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1005763C0();
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100646FE0;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1005763C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10083AF18)
  {
    v0 = type metadata accessor for Published(0, &type metadata for DiveMetrics);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10083AF18);
  }
}

double sub_10057641C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100573F74(a1, a2, v2);
}

uint64_t sub_100576428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100575824(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), &OBJC_IVAR___CHDivingDataCalculator_rawTempSamples);
}

uint64_t sub_10057644C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100576470()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1005764A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;

  sub_1005758BC(a1, a2, a3, a4, a5, a6, *(void (**)(__n128))(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(void **)(v6 + 40));
}

void sub_1005764CC(unint64_t a1, unint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t *a6)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __n128 i;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  os_log_type_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t *v72;
  unint64_t v73;
  uint64_t v74;

  v68 = a6;
  v72 = a5;
  v71 = a4;
  v69 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v10 = (unint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v60 = (uint64_t)&v57 - v12;
  v13 = a1 - 1;
  if (__OFSUB__(a1, 1))
    goto LABEL_49;
  if (a3 < 0 || (a3 & 0x4000000000000000) != 0)
    goto LABEL_50;
  v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = swift_bridgeObjectRetain(a3); v14; v14 = _CocoaArrayWrapper.endIndex.getter(v56))
  {
    v23 = 0;
    v64 = v13 & ~(v13 >> 63);
    v70 = a3 & 0xC000000000000001;
    v58 = &v74;
    i.n128_u64[0] = 134218240;
    v61 = i;
    i.n128_u64[0] = 134217984;
    v59 = i;
    v65 = v10;
    v66 = v14;
    v62 = (CHWorkoutDetailHeartRateTableViewCell *)a3;
    v63 = a2;
    while (1)
    {
      v24 = v70
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, a3)
          : *(id *)(a3 + 8 * v23 + 32);
      v25 = v24;
      v26 = v23 + 1;
      if (__OFADD__(v23, 1))
        break;
      if ((sub_1005736FC(v24) & 1) != 0)
      {
        LOBYTE(a2) = static os_log_type_t.debug.getter(v27);
        v28 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
        v29 = static OS_os_log.default.getter(v28);
        a2 = a2;
        if (os_log_type_enabled(v29, (os_log_type_t)a2))
        {
          v30 = swift_slowAlloc(22, -1);
          *(_DWORD *)v30 = v61.n128_u32[0];
          *(_QWORD *)(v30 + 4) = v23;
          *(_WORD *)(v30 + 12) = 2048;
          *(_QWORD *)(v30 + 14) = a1;
          _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)a2, "DDC: Putting sample %ld into bucket %ld", (uint8_t *)v30, 0x16u);
          swift_slowDealloc(v30, -1, -1);
        }

        v13 = (uint64_t)v72;
        v31 = *v72;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v72);
        *(_QWORD *)v13 = v31;
        v10 = v64;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_45;
        }
        else
        {
          v31 = sub_1004DEF88(v31);
          *v72 = v31;
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_45;
        }
        if (*(_QWORD *)(v31 + 16) <= a1)
          goto LABEL_44;
        a2 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
        v13 = *(_QWORD *)(v67 + 72);
        a3 = v13 * a1;
        sub_1005731AC(v25);
        v34 = *v72;
        *v68 = a1;
        if ((v71 & 1) == 0)
          goto LABEL_6;
        if (!a1)
          goto LABEL_22;
        if (v10 >= *(_QWORD *)(v34 + 16))
          goto LABEL_47;
        v35 = v34 + a2 + v13 * v10;
        v10 = a1;
        v36 = v60;
        v37 = sub_100577FB4(v35, v60);
        v13 = IndexSet.isEmpty.getter(v37);
        v38 = v36;
        a1 = v10;
        sub_100578040(v38);
        if ((v13 & 1) != 0)
        {
LABEL_22:
          v39 = static os_log_type_t.debug.getter(v33);
          v40 = v39;
          v41 = static OS_os_log.default.getter(v39);
          v42 = v40;
          if (os_log_type_enabled(v41, v40))
          {
            v43 = (uint8_t *)swift_slowAlloc(12, -1);
            *(_DWORD *)v43 = v59.n128_u32[0];
            v73 = a1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v58, v43 + 4);
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "DDC: Writing 0 descent to %ld", v43, 0xCu);
            swift_slowDealloc(v43, -1, -1);
          }

          v13 = (uint64_t)v72;
          v44 = *v72;
          v45 = swift_isUniquelyReferenced_nonNull_native(*v72);
          *(_QWORD *)v13 = v44;
          if ((v45 & 1) == 0)
          {
            v44 = sub_1004DEF88(v44);
            *v72 = v44;
          }
          v14 = v66;
          if (*(_QWORD *)(v44 + 16) <= a1)
            goto LABEL_46;
          IndexSet.insert(_:)(0);

          a3 = (uint64_t)v62;
          a2 = v63;
          v10 = v65;
        }
        else
        {
LABEL_6:

          a3 = (uint64_t)v62;
          a2 = v63;
          v10 = v65;
          v14 = v66;
        }
      }
      else
      {
        v46 = sub_100577FB4(a2, v10);
        if ((v71 & 1) != 0)
        {
          v13 = IndexSet.isEmpty.getter(v46);
          sub_100578040(v10);
          if ((v13 & 1) != 0)
          {

          }
          else
          {
            v48 = static os_log_type_t.debug.getter(v47);
            v49 = sub_10001E724(0, &qword_100828C78, OS_os_log_ptr);
            v50 = static OS_os_log.default.getter(v49);
            v51 = v48;
            if (os_log_type_enabled(v50, v48))
            {
              v52 = swift_slowAlloc(12, -1);
              *(_DWORD *)v52 = v59.n128_u32[0];
              *(_QWORD *)(v52 + 4) = a1;
              _os_log_impl((void *)&_mh_execute_header, v50, v51, "DDC: Writing 0 to ascent %ld", (uint8_t *)v52, 0xCu);
              swift_slowDealloc(v52, -1, -1);
            }

            v13 = *v68;
            v53 = v72;
            v54 = *v72;
            v55 = swift_isUniquelyReferenced_nonNull_native(*v72);
            *v53 = v54;
            if ((v55 & 1) != 0)
            {
              v10 = v65;
              v14 = v66;
              if (v13 < 0)
                goto LABEL_41;
            }
            else
            {
              v54 = sub_1004DEF88(v54);
              *v72 = v54;
              v10 = v65;
              v14 = v66;
              if (v13 < 0)
              {
LABEL_41:
                __break(1u);
                goto LABEL_54;
              }
            }
            if ((unint64_t)v13 >= *(_QWORD *)(v54 + 16))
              goto LABEL_48;
            IndexSet.insert(_:)(0);

          }
        }
        else
        {

          sub_100578040(v10);
        }
      }
      ++v23;
      if (v26 == v14)
        goto LABEL_54;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (a3 < 0)
      v56 = a3;
    else
      v56 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_54:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a3, v15, v16, v17, v18, v19, v20, v21);
}

void *sub_100576A88(void *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t KeyPath;
  uint64_t v10;
  char *v11;
  char *v12;
  void *result;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[2];
  char v25[24];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];

  swift_beginAccess(a2 + 1, v25, 0, 0);
  v4 = a2[10];
  v34 = a2[9];
  v35[0] = v4;
  *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)a2 + 169);
  v5 = a2[6];
  v30 = a2[5];
  v31 = v5;
  v6 = a2[8];
  v32 = a2[7];
  v33 = v6;
  v7 = a2[2];
  v26 = a2[1];
  v27 = v7;
  v8 = a2[4];
  v28 = a2[3];
  v29 = v8;
  KeyPath = swift_getKeyPath(&unk_100647000);
  v10 = swift_getKeyPath(&unk_100647028);
  v23 = v34;
  v24[0] = v35[0];
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v35 + 9);
  v19 = v30;
  v20 = v31;
  v21 = v32;
  v22 = v33;
  v15 = v26;
  v16 = v27;
  v17 = v28;
  v18 = v29;
  v11 = a1;
  sub_100576EB4((uint64_t *)&v26);
  static Published.subscript.setter(&v15, v11, KeyPath, v10);
  v12 = &v11[OBJC_IVAR___CHDivingDataCalculator_delegate];
  swift_beginAccess(v12, &v15, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, "divingDataDidFinishLoading", v15, v16, v17, v18, v19, v20, v21, v22, v23, v24[0], v24[1]);
    return (void *)swift_unknownObjectRelease(v14);
  }
  return result;
}

uint64_t sub_100576BC0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, unsigned int a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(id, void *, char *, void *, _QWORD, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v25;
  unsigned int v26;

  v26 = a6;
  v13 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(id, void *, char *, void *, _QWORD, void *))(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  if (a4)
  {
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v18 = type metadata accessor for DateInterval(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 0, 1, v18);
  }
  else
  {
    v19 = type metadata accessor for DateInterval(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 1, 1, v19);
  }
  swift_retain(v17);
  v20 = a2;
  v21 = a3;
  v22 = a5;
  v23 = a7;
  v16(v20, a3, v15, a5, v26, a7);

  swift_release(v17);
  return sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_100827440);
}

uint64_t sub_100576D1C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_errorRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100576D50(int64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1005740E4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100576D60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100576D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100575824(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), &OBJC_IVAR___CHDivingDataCalculator_rawDepthSamples);
}

uint64_t sub_100576DB0()
{
  _QWORD *v0;
  uint64_t v1;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  swift_bridgeObjectRelease(v0[14]);
  swift_bridgeObjectRelease(v0[16]);
  v1 = v0[18];
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[20]);
  }
  return swift_deallocObject(v0, 185, 7);
}

id sub_100576E28(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

void sub_100576E54(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t sub_100576E80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void *sub_100576EAC()
{
  uint64_t v0;

  return sub_100576A88(*(void **)(v0 + 16), *(_OWORD **)(v0 + 24));
}

uint64_t *sub_100576EB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = *a1;
  v14 = a1[1];
  v2 = a1[4];
  v3 = a1[6];
  v4 = a1[8];
  v5 = a1[10];
  v6 = a1[12];
  v7 = a1[14];
  v8 = a1[15];
  v10 = a1[16];
  v9 = a1[17];
  v12 = a1[18];
  swift_bridgeObjectRetain(a1[2]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  sub_1001B57B8(v8, v10, v9, v12);
  return a1;
}

uint64_t type metadata accessor for DivingDataCalculator.SampleBucket(uint64_t a1)
{
  return sub_100024334(a1, qword_10083AFB8, (uint64_t)&nominal type descriptor for DivingDataCalculator.SampleBucket);
}

void sub_100576F98(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1005764CC(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unint64_t **)(v2 + 32), *(uint64_t **)(v2 + 40));
}

uint64_t sub_100576FA8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100149F48(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100577020(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100577020(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  Swift::Int v18;
  unint64_t v19;
  Swift::Int v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  id *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  id v37;
  double v38;
  double v39;
  uint64_t *v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t *v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  Class *v50;
  unint64_t v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  Class *v64;
  Class v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  Class *v69;
  Class v70;
  Class v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  Class *v75;
  Class v76;
  Class v77;
  uint64_t v78;
  BOOL v79;
  Class isa;
  uint64_t v81;
  Class *v82;
  Class v83;
  Class v84;
  uint64_t v85;
  Class *v86;
  Class v87;
  Class v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  uint64_t *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void *v99;
  Swift::Int v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  double v105;
  double v106;
  id v107;
  double v108;
  double v109;
  void *v110;
  uint64_t v111;
  unint64_t v112;
  objc_class *v113;
  objc_class *v114;
  Class *v115;
  unint64_t v116;
  uint64_t v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  Swift::Int v128;
  Swift::Int v129;
  Swift::Int v130;
  Swift::Int v131;
  uint64_t v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_100577834(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v12 = v3;
  else
    v12 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v13 = v4;
  v125 = a1;
  if (v3 < 2)
  {
    v17 = &_swiftEmptyArrayStorage;
    v135 = (uint64_t)&_swiftEmptyArrayStorage;
    v133 = (void **)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v19 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
LABEL_98:
      if (v19 >= 2)
      {
        v111 = *v125;
        do
        {
          v112 = v19 - 2;
          if (v19 < 2)
            goto LABEL_127;
          if (!v111)
            goto LABEL_139;
          v113 = (objc_class *)*((_QWORD *)&v17[1].super.super.super.super.isa + 2 * v112);
          v114 = *(objc_class **)&v17->cellInset[16 * v19];
          sub_100577964((id *)(v111 + 8 * (_QWORD)v113), (id *)(v111 + 8 * *(_QWORD *)&v17->cellPadding[16 * v19]), v111 + 8 * (_QWORD)v114, v133);
          if (v1)
            break;
          if ((uint64_t)v114 < (uint64_t)v113)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v17);
          if (v112 >= *(_QWORD *)v17->cellPadding)
            goto LABEL_129;
          v115 = &v17[1].super.super.super.super.isa + 2 * v112;
          *v115 = v113;
          v115[1] = v114;
          v116 = *(_QWORD *)v17->cellPadding;
          if (v19 > v116)
            goto LABEL_130;
          memmove(&v17->cellPadding[16 * v19], (char *)&v17[1] + 16 * v19, 16 * (v116 - v19));
          *(_QWORD *)v17->cellPadding = v116 - 1;
          v19 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease(v17, v5, v6, v7, v8, v9, v10, v11);
      *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v117);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v135, v118, v119, v120, v121, v122, v123, v124);
      return;
    }
  }
  else
  {
    v14 = v12 >> 1;
    v15 = sub_10001E724(0, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
    v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(v14, v15);
    *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
    v133 = (void **)((v16 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v16;
  }
  v128 = v13;
  v18 = 0;
  v134 = *a1;
  v126 = *a1 - 8;
  v127 = *a1 + 16;
  v17 = &_swiftEmptyArrayStorage;
  v131 = v3;
  while (1)
  {
    v20 = v18++;
    v130 = v20;
    if (v18 < v3)
    {
      v21 = *(void **)(v134 + 8 * v20);
      v22 = *(id *)(v134 + 8 * v18);
      v23 = v21;
      v24 = objc_msgSend(v22, "quantity");
      objc_msgSend(v24, "_value");
      v26 = v25;

      v27 = objc_msgSend(v23, "quantity");
      objc_msgSend(v27, "_value");
      v29 = v28;

      v3 = v131;
      v18 = v20 + 2;
      if (v20 + 2 < v131)
      {
        v30 = (id *)(v127 + 8 * v20);
        while (1)
        {
          v31 = *(v30 - 1);
          v32 = *v30;
          v33 = v31;
          v34 = objc_msgSend(v32, "quantity");
          objc_msgSend(v34, "_value");
          v36 = v35;

          v37 = objc_msgSend(v33, "quantity");
          objc_msgSend(v37, "_value");
          v39 = v38;

          if (v26 < v29 == v36 >= v39)
            break;
          ++v18;
          ++v30;
          v3 = v131;
          if (v131 == v18)
          {
            v18 = v131;
            goto LABEL_22;
          }
        }
        v3 = v131;
LABEL_22:
        v20 = v130;
      }
      if (v26 < v29)
      {
        if (v18 < v20)
          goto LABEL_133;
        if (v20 < v18)
        {
          v40 = (uint64_t *)(v126 + 8 * v18);
          v41 = v18;
          v42 = v20;
          v43 = (uint64_t *)(v134 + 8 * v20);
          do
          {
            if (v42 != --v41)
            {
              if (!v134)
                goto LABEL_138;
              v44 = *v43;
              *v43 = *v40;
              *v40 = v44;
            }
            ++v42;
            --v40;
            ++v43;
          }
          while (v42 < v41);
        }
      }
    }
    if (v18 >= v3)
      goto LABEL_40;
    if (__OFSUB__(v18, v20))
      goto LABEL_131;
    if (v18 - v20 >= v128)
      goto LABEL_40;
    if (__OFADD__(v20, v128))
      goto LABEL_134;
    v45 = v20 + v128 >= v3 ? v3 : v20 + v128;
    if (v45 < v20)
      break;
    if (v18 != v45)
    {
      v98 = v126 + 8 * v18;
      v46 = v134;
      v129 = v45;
      do
      {
        v99 = *(void **)(v134 + 8 * v18);
        v100 = v20;
        v132 = v98;
        do
        {
          v101 = *(void **)v98;
          v102 = v99;
          v103 = v101;
          v104 = objc_msgSend(v102, "quantity");
          objc_msgSend(v104, "_value");
          v106 = v105;

          v107 = objc_msgSend(v103, "quantity");
          objc_msgSend(v107, "_value");
          v109 = v108;

          if (v106 >= v109)
            break;
          if (!v134)
            goto LABEL_136;
          v110 = *(void **)v98;
          v99 = *(void **)(v98 + 8);
          *(_QWORD *)v98 = v99;
          *(_QWORD *)(v98 + 8) = v110;
          v98 -= 8;
          ++v100;
        }
        while (v18 != v100);
        ++v18;
        v98 = v132 + 8;
        v20 = v130;
      }
      while (v18 != v129);
      v18 = v129;
      if (v129 < v130)
        goto LABEL_126;
      goto LABEL_41;
    }
LABEL_40:
    v46 = v134;
    if (v18 < v20)
      goto LABEL_126;
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
      v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v17->cellPadding + 1, 1, (char *)v17);
    v48 = *(_QWORD *)v17->cellPadding;
    v47 = *(_QWORD *)v17->cellInset;
    v19 = v48 + 1;
    if (v48 >= v47 >> 1)
      v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v47 > 1), v48 + 1, 1, (char *)v17);
    *(_QWORD *)v17->cellPadding = v19;
    v49 = v17 + 1;
    v50 = &v17[1].super.super.super.super.isa + 2 * v48;
    *v50 = (Class)v20;
    v50[1] = (Class)v18;
    if (v48)
    {
      while (1)
      {
        v51 = v19 - 1;
        if (v19 >= 4)
        {
          v56 = (char *)v49 + 16 * v19;
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_115;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_116;
          v63 = v19 - 2;
          v64 = &v49[-1].super.super.super.super.isa + 2 * v19;
          v66 = *v64;
          v65 = v64[1];
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_118;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_121;
          if (v68 >= v59)
          {
            v86 = &v49->super.super.super.super.isa + 2 * v51;
            v88 = *v86;
            v87 = v86[1];
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_125;
            v79 = v54 < v89;
            goto LABEL_77;
          }
        }
        else
        {
          if (v19 != 3)
          {
            isa = v17[1].super.super.super.super.isa;
            v81 = *(_QWORD *)v17[1].heartRateController;
            v62 = __OFSUB__(v81, isa);
            v73 = v81 - (_QWORD)isa;
            v74 = v62;
            goto LABEL_71;
          }
          v53 = v17[1].super.super.super.super.isa;
          v52 = *(_QWORD *)v17[1].heartRateController;
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - (_QWORD)v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_117;
        v63 = v19 - 2;
        v69 = &v49[-1].super.super.super.super.isa + 2 * v19;
        v71 = *v69;
        v70 = v69[1];
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_120;
        v75 = &v49->super.super.super.super.isa + 2 * v51;
        v77 = *v75;
        v76 = v75[1];
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_123;
        if (__OFADD__(v73, v78))
          goto LABEL_124;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_77:
          if (v79)
            v51 = v63;
          goto LABEL_79;
        }
LABEL_71:
        if ((v74 & 1) != 0)
          goto LABEL_119;
        v82 = &v49->super.super.super.super.isa + 2 * v51;
        v84 = *v82;
        v83 = v82[1];
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_122;
        if (v85 < v73)
          goto LABEL_14;
LABEL_79:
        v90 = v51 - 1;
        if (v51 - 1 >= v19)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v91 = v46;
        if (!v46)
          goto LABEL_137;
        v92 = v17;
        v93 = (uint64_t *)v49 + 2 * v90;
        v94 = *v93;
        v95 = &v49->super.super.super.super.isa + 2 * v51;
        v96 = v95[1];
        sub_100577964((id *)(v91 + 8 * *v93), (id *)(v91 + 8 * *v95), v91 + 8 * v96, v133);
        if (v1)
        {
          v17 = v92;
          goto LABEL_109;
        }
        if (v96 < v94)
          goto LABEL_112;
        if (v51 > *(_QWORD *)v92->cellPadding)
          goto LABEL_113;
        *v93 = v94;
        *(_QWORD *)&v49->heartRateController[16 * v90] = v96;
        v97 = *(_QWORD *)v92->cellPadding;
        if (v51 >= v97)
          goto LABEL_114;
        v17 = v92;
        v19 = v97 - 1;
        memmove((char *)v49 + 16 * v51, v95 + 2, 16 * (v97 - 1 - v51));
        *(_QWORD *)v92->cellPadding = v97 - 1;
        v46 = v134;
        if (v97 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v3 = v131;
    if (v18 >= v131)
      goto LABEL_98;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100577834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  void *v18;
  uint64_t v21;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v21 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "quantity");
      objc_msgSend(v12, "_value");
      v14 = v13;

      v15 = objc_msgSend(v11, "quantity");
      objc_msgSend(v15, "_value");
      v17 = v16;

      if (v14 >= v17)
      {
LABEL_4:
        ++v4;
        v6 = v21 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v18 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v18;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100577964(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  id *v24;
  void **v25;
  char *v26;
  id *v27;
  id *v28;
  char *v29;
  void *v30;
  unint64_t v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  id v37;
  double v38;
  double v39;
  uint64_t result;
  id *v41;
  id *v43;
  id *v45;
  char *v46;
  void **v47;
  id *v48;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v48 = __src;
  v47 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v26 = (char *)&a4[v11];
      v46 = v26;
      v48 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v27 = (id *)(a3 - 8);
        v28 = v4;
        v41 = v5;
        while (1)
        {
          v43 = v27 + 1;
          v45 = v4;
          v29 = v26 - 8;
          v30 = *--v28;
          v31 = (unint64_t)v26;
          v32 = *((id *)v26 - 1);
          v33 = v30;
          v34 = objc_msgSend(v32, "quantity");
          objc_msgSend(v34, "_value");
          v36 = v35;

          v37 = objc_msgSend(v33, "quantity");
          objc_msgSend(v37, "_value");
          v39 = v38;

          if (v36 >= v39)
          {
            v46 = v29;
            if ((unint64_t)v43 < v31 || (unint64_t)v27 >= v31)
            {
              *v27 = *(id *)v29;
              v28 = v45;
              v26 = v29;
              if (v45 <= v41)
                goto LABEL_45;
            }
            else
            {
              if (v43 != (id *)v31)
                *v27 = *(id *)v29;
              v28 = v45;
              v26 = v29;
              if (v45 <= v41)
                goto LABEL_45;
            }
          }
          else
          {
            if (v43 != v45 || v27 >= v45)
              *v27 = *v28;
            v48 = v28;
            v26 = (char *)v31;
            if (v28 <= v41)
              goto LABEL_45;
          }
          --v27;
          v4 = v28;
          if (v26 <= (char *)a4)
            goto LABEL_45;
        }
      }
      goto LABEL_45;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = (char *)&a4[v8];
    v46 = v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, "quantity");
        objc_msgSend(v18, "_value");
        v20 = v19;

        v21 = objc_msgSend(v17, "quantity");
        objc_msgSend(v21, "_value");
        v23 = v22;

        if (v20 >= v23)
        {
          v25 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v47 = ++v13;
          v24 = v4;
        }
        else
        {
          v24 = v4 + 1;
          v25 = v14;
          if (v14 < v4 || v14 >= v24 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v25 + 1;
        if (v13 >= (void **)v12)
          break;
        v4 = v24;
      }
      while ((unint64_t)v24 < a3);
      v48 = v5;
    }
LABEL_45:
    sub_100147308(&v48, &v47, &v46);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100577D2C(CHWorkoutDetailHeartRateTableViewCell *a1, void (*a2)(uint64_t, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *);
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v44 = a2;
  v5 = sub_100047110(&qword_10083AF30);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  v8 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v43 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100047110(&qword_10083AF28);
  __chkstk_darwin(v42);
  v41 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v40 = (uint64_t *)((char *)&v34 - v12);
  v13 = *(_QWORD *)a1->cellPadding;
  swift_bridgeObjectRetain(a1);
  v39 = v13;
  v35 = a1;
  v36 = v3;
  if (v13)
  {
    v14 = 0;
    v15 = (uint64_t)a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v38 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_100577FB4(v15, (uint64_t)v7);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v17 = v45;
      v16(v7, 0, 1, v45);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v17) == 1)
        break;
      v37 = v16;
      v46 = v14 + 1;
      v18 = v43;
      sub_100047C88((uint64_t)v7, v43, type metadata accessor for DivingDataCalculator.SampleBucket);
      v19 = v42;
      v20 = (uint64_t)&v41[*(int *)(v42 + 48)];
      sub_100047C88(v18, v20, type metadata accessor for DivingDataCalculator.SampleBucket);
      v21 = *(int *)(v19 + 48);
      v22 = v7;
      v23 = v8;
      v24 = (uint64_t)v40;
      v25 = (char *)v40 + v21;
      *v40 = v14;
      sub_100047C88(v20, v24 + v21, type metadata accessor for DivingDataCalculator.SampleBucket);
      v26 = v25;
      v8 = v23;
      v7 = v22;
      v44(v14, v26);
      sub_10001BE90(v24, &qword_10083AF28);
      v15 += v38;
      v14 = v46;
      if (v39 == v46)
      {
        v37(v22, 1, 1, v45);
        break;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v45);
  }
  sub_10001BE90((uint64_t)v7, &qword_10083AF30);
  swift_bridgeObjectRelease(v35, v27, v28, v29, v30, v31, v32, v33);
}

uint64_t sub_100577FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100577FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10083AF38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100578040(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DivingDataCalculator.SampleBucket(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_10057807C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for IndexSet(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100578144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for IndexSet(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1005781BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100578258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_1005782F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_100578390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_10057842C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100578438);
}

uint64_t sub_100578438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for IndexSet(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1005784AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005784B8);
}

uint64_t sub_1005784B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for IndexSet(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_100578534(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for IndexSet(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005785CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = type metadata accessor for StepType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == enum case for StepType.work(_:)
    || v5 == enum case for StepType.rest(_:)
    || v5 == enum case for StepType.warmUp(_:)
    || v5 == enum case for StepType.coolDown(_:))
  {
    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    return v9;
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v1, v1);
    __break(1u);
  }
  return result;
}

id sub_1005787EC()
{
  return (id)sub_100578ED8();
}

uint64_t sub_100578828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005795BC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100578878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005795BC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1005788C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005795BC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_1005788EC(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  unint64_t v27;
  char v28;
  double v29;
  char v30;
  double v31;
  double v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    goto LABEL_30;
  v7 = objc_allocWithZone((Class)UIView);
  swift_retain(a1);
  v55 = a2;
  v8 = objc_msgSend(v7, "init", swift_bridgeObjectRetain(v3).n128_f64[0]);
  v9 = v8;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v51 = v3 & 0xFFFFFFFFFFFFFF8;
    else
      v51 = v3;
    swift_bridgeObjectRetain(v3);
    v10 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v54 = v3;
  v56 = a1;
  v11 = (id)FIUIBundle(v8);
  if (!v11)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010068A840, "FitnessApp/WorkoutPowerTimeInZonesView.swift", 44, 2, 82, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = sub_100038CA0();
  v18 = StringProtocol.localizedUppercase.getter(&type metadata for String, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v52 = v9;
  v53 = a3;
  v21 = v54;
  if (v10)
  {
    v22 = 0;
    v23 = OBJC_IVAR____TtC10FitnessApp16WorkoutPowerInfo_elapsedTimeInZones;
    do
    {
      if ((v54 & 0xC000000000000001) != 0)
      {
        v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v21);
      }
      else
      {
        v24 = *(_QWORD *)(v21 + 8 * v22 + 32);
        swift_retain(v24);
      }
      v25 = *(_QWORD *)(v56 + v23);
      v26 = 0.0;
      if (v25)
      {
        if (*(_QWORD *)(v25 + 16))
        {
          v27 = sub_100030DDC(v22);
          if ((v28 & 1) != 0)
            v26 = *(double *)(*(_QWORD *)(v25 + 56) + 8 * v27);
        }
      }
      v29 = COERCE_DOUBLE(sub_10056B47C());
      v31 = v26 / v29;
      if (v29 <= 0.0)
        v31 = 0.0;
      if ((v30 & 1) != 0)
        v32 = 0.0;
      else
        v32 = v31;
      v33 = objc_allocWithZone((Class)type metadata accessor for WorkoutTimeInZoneView());
      v34 = v55;
      swift_retain(v24);
      swift_bridgeObjectRetain(v20);
      v35 = sub_1002F19E4(v24, v34, v18, v20, v26, v32);
      objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v36 = v35;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 >= v37 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
      ++v22;
      v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
      specialized Array._endMutation()(v39);

      swift_release(v24);
      v21 = v54;
    }
    while (v10 != v22);
  }
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v21);
  v40 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v45 = v44;

  v46 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setText:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

  v47 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  objc_msgSend(v40, "setTextColor:", v47);

  v48 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v49 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
  v50 = objc_msgSend(v48, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v49);

  objc_msgSend(v40, "setFont:", v50);
  objc_msgSend(v40, "setNumberOfLines:", 0);

  swift_release(v56);
  *v53 = v56;
  v53[1] = v55;
  v53[2] = v52;
  v53[3] = _swiftEmptyArrayStorage;
  v53[4] = v40;
}

ValueMetadata *type metadata accessor for WorkoutPowerTimeInZonesView()
{
  return &type metadata for WorkoutPowerTimeInZonesView;
}

unint64_t sub_100578E94()
{
  unint64_t result;

  result = qword_10083AFF8;
  if (!qword_10083AFF8)
  {
    result = swift_getWitnessTable(&unk_10064708C, &type metadata for WorkoutPowerTimeInZonesView);
    atomic_store(result, (unint64_t *)&qword_10083AFF8);
  }
  return result;
}

uint64_t sub_100578ED8()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char **v29;
  id v30;
  id v31;
  uint64_t v32;
  Class v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  char *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  Class isa;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t result;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;

  v2 = (char *)v0[2];
  v3 = *(_QWORD *)(*v0 + 16);
  if (!v3)
    goto LABEL_39;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v6 = (char *)(v3 & 0xFFFFFFFFFFFFFF8);
    else
      v6 = *(char **)(*v0 + 16);
    v60 = v2;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v61, v62, v63, v64, v65, v66, v67);
    if (v4 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v2;
  }
  v6 = v2;
  if (!v4)
  {
LABEL_18:
    v1 = v106;
    v4 = *(_QWORD *)(v106 + 24);
    v111 = v4;
    v41 = v4 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v4 >> 62))
    {
      v42 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (v42)
      {
LABEL_20:
        if (v42 >= 1)
        {
          v43 = 0;
          do
          {
            if ((v4 & 0xC000000000000001) != 0)
              v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v4);
            else
              v44 = *(id *)(v4 + 8 * v43 + 32);
            v45 = v44;
            ++v43;
            swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
            swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
            sub_1002F1330((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 10.0);

            swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v46, v47, v48, v49, v50, v51, v52);
            swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v53, v54, v55, v56, v57, v58, v59);
          }
          while (v42 != v43);
          goto LABEL_36;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      sub_1000478F4(&v111);
      swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v69, v70, v71, v72, v73, v74, v75);
      swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v76, v77, v78, v79, v80, v81, v82);
      v83 = *(void **)(v1 + 32);
      objc_msgSend(v2, "addSubview:", v83);
      v84 = (void *)objc_opt_self(NSLayoutConstraint);
      v85 = sub_100047110((uint64_t *)&unk_100828340);
      v86 = swift_allocObject(v85, 56, 7);
      *(_OWORD *)(v86 + 16) = xmmword_100624C90;
      v87 = objc_msgSend(v83, "leadingAnchor");
      v88 = objc_msgSend(v2, "leadingAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      *(_QWORD *)(v86 + 32) = v89;
      v90 = objc_msgSend(v83, "trailingAnchor");
      v91 = objc_msgSend(v2, "trailingAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      *(_QWORD *)(v86 + 40) = v92;
      v93 = objc_msgSend(v83, "topAnchor");
      v94 = objc_msgSend(v6, "bottomAnchor");
      v95 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, 5.0);

      *(_QWORD *)(v86 + 48) = v95;
      specialized Array._endMutation()(v96);
      sub_100039898();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v86, v98, v99, v100, v101, v102, v103, v104);
      objc_msgSend(v84, "activateConstraints:", isa);

      return (uint64_t)v2;
    }
LABEL_32:
    if (v4 >= 0)
      v68 = v41;
    else
      v68 = v4;
    swift_bridgeObjectRetain(v4);
    v42 = _CocoaArrayWrapper.endIndex.getter(v68);
    if (v42)
      goto LABEL_20;
    goto LABEL_36;
  }
  v7 = *(_QWORD *)(v106 + 24);
  v110 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0 || (unint64_t)(v4 - 1) < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v107 = (id)objc_opt_self(NSLayoutConstraint);
    v8 = 0;
    v9 = v2;
    v108 = v7;
    v109 = v4;
    do
    {
      if (v110)
        v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v7);
      else
        v10 = (char *)*(id *)(v7 + 8 * v8 + 32);
      v6 = v10;
      v11 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC10FitnessApp21WorkoutTimeInZoneView_zoneNameLabel], "trailingAnchor");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      v15 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp21WorkoutTimeInZoneView_rangeLabel], "leadingAnchor", specialized Array._endMutation()(v14).n128_f64[0]);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = v8 + 1;
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      objc_msgSend(v2, "addSubview:", v6, specialized Array._endMutation()(v19).n128_f64[0]);
      v20 = sub_100047110((uint64_t *)&unk_100828340);
      v21 = swift_allocObject(v20, 56, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100624C90;
      v22 = objc_msgSend(v6, "leadingAnchor");
      v23 = objc_msgSend(v2, "leadingAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      *(_QWORD *)(v21 + 32) = v24;
      v25 = objc_msgSend(v6, "trailingAnchor");
      v26 = objc_msgSend(v2, "trailingAnchor");
      v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

      *(_QWORD *)(v21 + 40) = v27;
      v28 = objc_msgSend(v6, "topAnchor");
      v29 = &selRef_bottomAnchor;
      if (!v8)
        v29 = &selRef_topAnchor;
      v30 = objc_msgSend(v9, *v29);
      v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);

      *(_QWORD *)(v21 + 48) = v31;
      v111 = v21;
      specialized Array._endMutation()(v32);
      sub_100039898();
      v33 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v21, v34, v35, v36, v37, v38, v39, v40);
      objc_msgSend(v107, "activateConstraints:", v33);

      v9 = v6;
      ++v8;
      v7 = v108;
    }
    while (v109 != v18);
    goto LABEL_18;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010068A840, "FitnessApp/WorkoutPowerTimeInZonesView.swift", 44, 2, 23, 0);
  __break(1u);
  return result;
}

unint64_t sub_1005795BC()
{
  unint64_t result;

  result = qword_10083B000;
  if (!qword_10083B000)
  {
    result = swift_getWitnessTable(&unk_1006470DC, &type metadata for WorkoutPowerTimeInZonesView);
    atomic_store(result, (unint64_t *)&qword_10083B000);
  }
  return result;
}

uint64_t *sub_100579600(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *Card;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  char v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    Card = (int *)type metadata accessor for LoadCard(0);
    v19 = Card[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = v21[16];
    sub_1000EB3F4(*(_QWORD *)v21, v23, v24);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v24;
    v15[Card[6]] = v16[Card[6]];
    v15[Card[7]] = v16[Card[7]];
    v15[Card[8]] = v16[Card[8]];
    v25 = Card[9];
    v26 = *(void **)&v16[v25];
    *(_QWORD *)&v15[v25] = v26;
    v27 = a3[6];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(uint64_t *)((char *)a2 + v27 + 24);
    v31 = v26;
    if (v30)
    {
      v32 = *((_QWORD *)v29 + 4);
      *((_QWORD *)v28 + 3) = v30;
      *((_QWORD *)v28 + 4) = v32;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
    }
    else
    {
      v33 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v33;
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    }
    v34 = a3[7];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *(id *)v36;
    v38 = v36[8];
    sub_10010C5D0(*(id *)v36, v38);
    *(_QWORD *)v35 = v37;
    v35[8] = v38;
  }
  return a1;
}

void sub_1005797EC(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Card;
  _QWORD *v9;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  Card = type metadata accessor for LoadCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[*(int *)(Card + 20)], *(_QWORD *)&v6[*(int *)(Card + 20) + 8], v6[*(int *)(Card + 20) + 16]);

  v9 = (_QWORD *)((char *)a1 + a2[6]);
  if (v9[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v9);
  sub_10010C5EC(*(id *)((char *)a1 + a2[7]), *((_BYTE *)a1 + a2[7] + 8));
}

uint64_t *sub_1005798D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *Card;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  char v36;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  Card = (int *)type metadata accessor for LoadCard(0);
  v17 = Card[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  v13[Card[6]] = v14[Card[6]];
  v13[Card[7]] = v14[Card[7]];
  v13[Card[8]] = v14[Card[8]];
  v23 = Card[9];
  v24 = *(void **)&v14[v23];
  *(_QWORD *)&v13[v23] = v24;
  v25 = a3[6];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(uint64_t *)((char *)a2 + v25 + 24);
  v29 = v24;
  if (v28)
  {
    v30 = *((_QWORD *)v27 + 4);
    *((_QWORD *)v26 + 3) = v28;
    *((_QWORD *)v26 + 4) = v30;
    (**(void (***)(char *, char *, uint64_t))(v28 - 8))(v26, v27, v28);
  }
  else
  {
    v31 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v31;
    *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  }
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(id *)v34;
  v36 = v34[8];
  sub_10010C5D0(*(id *)v34, v36);
  *(_QWORD *)v33 = v35;
  v33[8] = v36;
  return a1;
}

uint64_t *sub_100579A90(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *Card;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  char v40;
  void *v41;
  char v42;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  Card = (int *)type metadata accessor for LoadCard(0);
  v17 = Card[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  v23 = *(_QWORD *)v18;
  v24 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v25 = v18[16];
  v18[16] = v22;
  sub_1000EB41C(v23, v24, v25);
  v13[Card[6]] = v14[Card[6]];
  v13[Card[7]] = v14[Card[7]];
  v13[Card[8]] = v14[Card[8]];
  v26 = Card[9];
  v27 = *(void **)&v14[v26];
  v28 = *(void **)&v13[v26];
  *(_QWORD *)&v13[v26] = v27;
  v29 = v27;

  v30 = a3[6];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(uint64_t *)((char *)a2 + v30 + 24);
  if (!*(uint64_t *)((char *)a1 + v30 + 24))
  {
    if (v33)
    {
      *((_QWORD *)v31 + 3) = v33;
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      (**(void (***)(char *, char *))(v33 - 8))(v31, v32);
      goto LABEL_13;
    }
LABEL_12:
    v34 = *(_OWORD *)v32;
    v35 = *((_OWORD *)v32 + 1);
    *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
    *(_OWORD *)v31 = v34;
    *((_OWORD *)v31 + 1) = v35;
    goto LABEL_13;
  }
  if (!v33)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
    goto LABEL_12;
  }
  sub_1000F1A58(v31, v32);
LABEL_13:
  v36 = a3[7];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(id *)v38;
  v40 = v38[8];
  sub_10010C5D0(*(id *)v38, v40);
  v41 = *(void **)v37;
  v42 = v37[8];
  *(_QWORD *)v37 = v39;
  v37[8] = v40;
  sub_10010C5EC(v41, v42);
  return a1;
}

char *sub_100579CAC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *Card;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  char *v21;
  char *v22;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  Card = (int *)type metadata accessor for LoadCard(0);
  v13 = Card[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[Card[6]] = v10[Card[6]];
  v9[Card[7]] = v10[Card[7]];
  v9[Card[8]] = v10[Card[8]];
  *(_QWORD *)&v9[Card[9]] = *(_QWORD *)&v10[Card[9]];
  v16 = a3[6];
  v17 = a3[7];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v21 = &a1[v17];
  v22 = &a2[v17];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_100579E04(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *Card;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  char v30;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  Card = (int *)type metadata accessor for LoadCard(0);
  v13 = Card[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v19 = v14[16];
  v14[16] = v16;
  sub_1000EB41C(v17, v18, v19);
  v9[Card[6]] = v10[Card[6]];
  v9[Card[7]] = v10[Card[7]];
  v9[Card[8]] = v10[Card[8]];
  v20 = Card[9];
  v21 = *(void **)&v9[v20];
  *(_QWORD *)&v9[v20] = *(_QWORD *)&v10[v20];

  v22 = a3[6];
  v23 = &a1[v22];
  if (*(_QWORD *)&a1[v22 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v22]);
  v24 = *(_OWORD *)&a2[v22 + 16];
  *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = *(_QWORD *)&a2[v22 + 32];
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = v27[8];
  v29 = *(void **)v26;
  v30 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = (char)v27;
  sub_10010C5EC(v29, v30);
  return a1;
}

uint64_t sub_100579FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100579FB8);
}

uint64_t sub_100579FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t Card;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  Card = type metadata accessor for LoadCard(0);
  v12 = *(_QWORD *)(Card - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = Card;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10057A074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057A080);
}

uint64_t sub_10057A080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for LoadCard(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  return result;
}

uint64_t type metadata accessor for LoadCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083B060;
  if (!qword_10083B060)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadCardView);
  return result;
}

void sub_10057A168(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t Card;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    Card = type metadata accessor for LoadCard(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(Card - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_1006471A0;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_10057A200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BBD70, 1);
}

uint64_t sub_10057A210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ViewModel;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  char v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t View;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t DataType;

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v1 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v27 = *(_QWORD *)(ViewModel - 8);
  v28 = ViewModel;
  __chkstk_darwin(ViewModel);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizationFeature(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v12 = *(id *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_10010C5D0(*(id *)v11, v13);
  v14 = (char *)sub_1003F70B8(v12, v13);
  sub_10010C5EC(v12, v13);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v15);

  LOBYTE(v14) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  v16 = swift_release(v15);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7, v16);
    View = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000021, 0x80000001006A6AA0, v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_10010C5D0(v12, v13);
    v18 = (char *)sub_1003F70B8(v12, v13);
    sub_10010C5EC(v12, v13);
    v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v19);

    v20 = DataType;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for TrainingLoadDataType.workout(_:), DataType);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v3);
    v21 = swift_release(v19);
    v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v20, v21);
    View = TrainingLoadViewModel.formattedFractionalDifferenceFromChronicBaselineForToday.getter(v22);
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
    if (!v24)
      return 11565;
  }
  return View;
}

uint64_t sub_10057A484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ViewModel;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  char v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t countAndFlagsBits;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t DataType;

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v1 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v24 = *(_QWORD *)(ViewModel - 8);
  v25 = ViewModel;
  __chkstk_darwin(ViewModel);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizationFeature(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v12 = *(id *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_10010C5D0(*(id *)v11, v13);
  v14 = (char *)sub_1003F70B8(v12, v13);
  sub_10010C5EC(v12, v13);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v15);

  LOBYTE(v14) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  v16 = swift_release(v15);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7, v16);
    countAndFlagsBits = static Localization.workoutUILocalizedString(_:feature:)(0x45554C41564F4ELL, 0xE700000000000000, v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_10010C5D0(v12, v13);
    v18 = (char *)sub_1003F70B8(v12, v13);
    sub_10010C5EC(v12, v13);
    v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v19);

    v20 = DataType;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for TrainingLoadDataType.workout(_:), DataType);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v3);
    v21 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v20, v21);
    countAndFlagsBits = TrainingLoadViewModel.loadBandTodayLocalizedDescription()()._countAndFlagsBits;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  }
  return countAndFlagsBits;
}

void sub_10057A6E4(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  char v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD v42[2];

  v4 = type metadata accessor for OvernightMetricsViewModel(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v9 = *(id *)v8;
  v10 = *(_BYTE *)(v8 + 8);
  sub_10010C5D0(*(id *)v8, v10);
  v11 = (char *)sub_1003F70B8(v9, v10);
  sub_10010C5EC(v9, v10);
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider];
  swift_retain(v12);

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v13 = swift_release(v12);
  v14 = OvernightMetricsViewModel.localizedTitle.getter(v13);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v42[0] = v14;
  v42[1] = v16;
  v17 = sub_100038CA0();
  v18 = Text.init<A>(_:)(v42, &type metadata for String, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v26 = Color.init(_:)(v25);
  v42[0] = v26;
  v27 = Text.foregroundStyle<A>(_:)(v42, v18, v20, v24, v22, &type metadata for Color, &protocol witness table for Color);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_1000E4458(v18, v20, v24);
  swift_release(v26);
  swift_bridgeObjectRelease(v22, v34, v35, v36, v37, v38, v39, v40);
  *(_QWORD *)a1 = v27;
  *(_QWORD *)(a1 + 8) = v29;
  *(_BYTE *)(a1 + 16) = v31 & 1;
  *(_QWORD *)(a1 + 24) = v33;
}

double sub_10057A8AC@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned __int8 v32;
  uint64_t v33;

  v27 = a1;
  v3 = type metadata accessor for OvernightMetricsViewModel(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10057AA64(v2, &v28);
  v7 = *((_QWORD *)&v28 + 1);
  v25 = v28;
  v8 = v29;
  v9 = v30;
  v26 = v32;
  v10 = v31;
  v11 = v2 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v12 = *(id *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_10010C5D0(*(id *)v11, v13);
  v14 = (char *)sub_1003F70B8(v12, v13);
  sub_10010C5EC(v12, v13);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider];
  swift_retain(v15);

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v16 = swift_release(v15);
  v17 = OvernightMetricsViewModel.primaryTintColor.getter(v16);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = v25;
  *(_QWORD *)&v28 = v25;
  *((_QWORD *)&v28 + 1) = v7;
  v29 = v8;
  v30 = v9;
  v31 = v10;
  v32 = v26;
  v33 = v17;
  v20 = static Font.Weight.medium.getter(v18);
  v21 = sub_100047110(&qword_10083B1D8);
  v22 = sub_1002341A4(&qword_10083B1E0, &qword_10083B1D8, (void (*)(void))sub_10057F290);
  View.fontWeight(_:)(*(_QWORD *)&v20, 0, v21, v22);
  sub_10057F314(v19, v7, v8, v9);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double sub_10057AA64@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BYTE *v19;
  void *v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  _BYTE *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  char v44;
  char v45;
  id v46;
  void (*v47)(char *, uint64_t);
  uint64_t (*v48)(char *, uint64_t);
  char v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  double result;
  __int128 v81;
  unsigned __int8 v82;
  char v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD *v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int16 v97;
  __int128 v98;
  __int128 v99;
  unsigned __int8 v100;
  char v101;

  v93 = a2;
  v90 = type metadata accessor for LocalizationFeature(0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v89 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for OvernightMetricsViewModel.Summary(0);
  v92 = *(_QWORD *)(v94 - 8);
  v4 = __chkstk_darwin(v94);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OvernightMetricsViewModel(0, v4);
  v91 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OvernightMetricsViewModel.Summary.Variant(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v85 - v16;
  v18 = *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v86 = a1;
  v19 = (_BYTE *)(a1 + v18);
  v20 = *(void **)v19;
  v87 = v19;
  v21 = v19[8];
  sub_10010C5D0(v20, v21);
  v22 = sub_1003F70B8(v20, v21);
  sub_10010C5EC(v20, v21);
  v23 = dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  OvernightMetricsViewModel.summary.getter(v23);
  v24 = *(uint64_t (**)(char *, uint64_t))(v91 + 8);
  v91 = v7;
  v25 = v7;
  v26 = v6;
  v27 = v24(v10, v25);
  OvernightMetricsViewModel.Summary.variant.getter(v27);
  v28 = *(void (**)(char *, uint64_t))(v92 + 8);
  v28(v26, v94);

  v29 = *(_BYTE **)(v12 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v29)(v14, enum case for OvernightMetricsViewModel.Summary.Variant.noData(_:), v11);
  LOBYTE(v20) = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)(v17, v14);
  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v14, v11);
  v92 = v11;
  v30(v17, v11);
  if ((v20 & 1) != 0)
  {
    v31 = v88;
    v32 = v89;
    v33 = v90;
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v89, enum case for LocalizationFeature.workout(_:), v90);
    v34 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000002ELL, 0x8000000100695310, v32);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    *(_QWORD *)&v98 = v34;
    *((_QWORD *)&v98 + 1) = v36;
    v37 = sub_100038CA0();
    v38 = Text.init<A>(_:)(&v98, &type metadata for String, v37);
    v40 = v38;
    v41 = v39;
    v43 = v42;
    *(_QWORD *)&v95 = v38;
    *((_QWORD *)&v95 + 1) = v39;
    v45 = v44 & 1;
    *(_QWORD *)&v96 = v44 & 1;
    *((_QWORD *)&v96 + 1) = v42;
    LOBYTE(v97) = 0;
  }
  else
  {
    v46 = *(id *)v87;
    v47 = v28;
    v48 = v24;
    v49 = v87[8];
    sub_10010C5D0(*(id *)v87, v49);
    v50 = sub_1003F70B8(v46, v49);
    v87 = v29;
    v51 = v50;
    sub_10010C5EC(v46, v49);
    v52 = dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    OvernightMetricsViewModel.summary.getter(v52);
    v53 = v48(v10, v91);
    OvernightMetricsViewModel.Summary.variant.getter(v53);
    v47(v26, v94);

    v54 = v92;
    ((void (*)(char *, _QWORD, uint64_t))v87)(v14, enum case for OvernightMetricsViewModel.Summary.Variant.insufficientData(_:), v92);
    v55 = static OvernightMetricsViewModel.Summary.Variant.== infix(_:_:)(v17, v14);
    v30(v14, v54);
    v30(v17, v54);
    if ((v55 & 1) == 0)
    {
      sub_10057AFF0(v86, &v98);
      v95 = v98;
      v96 = v99;
      LOBYTE(v97) = v100;
      HIBYTE(v97) = 1;
      v76 = sub_100047110(&qword_100826BF0);
      v77 = sub_100047110(&qword_10082C630);
      v78 = sub_1002B35FC();
      v79 = sub_1002B37D4();
      _ConditionalContent<>.init(storage:)(&v95, v76, v77, v78, v79);
      goto LABEL_7;
    }
    v57 = v88;
    v56 = v89;
    v58 = v90;
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v89, enum case for LocalizationFeature.workout(_:), v90);
    v59 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000002ELL, 0x80000001006952E0, v56);
    v61 = v60;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    *(_QWORD *)&v98 = v59;
    *((_QWORD *)&v98 + 1) = v61;
    v62 = sub_100038CA0();
    v38 = Text.init<A>(_:)(&v98, &type metadata for String, v62);
    v40 = v38;
    v41 = v39;
    v43 = v63;
    v45 = v64 & 1;
    *(_QWORD *)&v95 = v38;
    *((_QWORD *)&v95 + 1) = v39;
    *(_QWORD *)&v96 = v64 & 1;
    *((_QWORD *)&v96 + 1) = v63;
    LOBYTE(v97) = 1;
  }
  sub_1000E439C(v38, v39, v45);
  swift_bridgeObjectRetain(v43);
  _ConditionalContent<>.init(storage:)(&v95, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  v95 = v98;
  v96 = v99;
  v97 = v100;
  v65 = sub_100047110(&qword_100826BF0);
  v66 = sub_100047110(&qword_10082C630);
  v67 = sub_1002B35FC();
  v68 = sub_1002B37D4();
  _ConditionalContent<>.init(storage:)(&v95, v65, v66, v67, v68);
  sub_1000E4458(v40, v41, v45);
  swift_bridgeObjectRelease(v43, v69, v70, v71, v72, v73, v74, v75);
LABEL_7:
  result = *(double *)&v98;
  v81 = v99;
  v82 = v100;
  v83 = v101;
  v84 = v93;
  *v93 = v98;
  v84[1] = v81;
  *((_BYTE *)v84 + 32) = v82;
  *((_BYTE *)v84 + 33) = v83;
  return result;
}

double sub_10057AFF0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  __int128 v64;
  char v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _OWORD v75[2];
  char v76;

  v69 = a2;
  v3 = type metadata accessor for LocalizationFeature(0);
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OvernightMetricsViewModel(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v67 - v12;
  v14 = a1 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v15 = *(id *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10010C5D0(*(id *)v14, v16);
  v17 = (char *)sub_1003F70B8(v15, v16);
  sub_10010C5EC(v15, v16);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider];
  swift_retain(v18);

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v19 = swift_release(v18);
  v20 = OvernightMetricsViewModel.changeCountDescription.getter(v19);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v13, v7);
  if (v22)
  {
    *(_QWORD *)&v75[0] = v20;
    *((_QWORD *)&v75[0] + 1) = v22;
    v24 = sub_100038CA0();
    v70 = Text.init<A>(_:)(v75, &type metadata for String, v24);
    v71 = v25;
    v72 = v26 & 1;
    v73 = v27;
    v74 = 0;
  }
  else
  {
    v28 = *(id *)v14;
    v29 = *(unsigned __int8 *)(v14 + 8);
    sub_10010C5D0(*(id *)v14, *(_BYTE *)(v14 + 8));
    v30 = (char *)sub_1003F70B8(v28, v29);
    sub_10010C5EC(v28, v29);
    v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider];
    swift_retain(v31);

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    v32 = swift_release(v31);
    v33 = OvernightMetricsViewModel.changeDetectedCountToday.getter(v32);
    LOBYTE(v29) = v34;
    v23(v10, v7);
    if ((v29 & 1) != 0)
      v35 = 0;
    else
      v35 = v33;
    v37 = v67;
    v36 = v68;
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v6, enum case for LocalizationFeature.workout(_:), v68);
    v38 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000022, 0x8000000100695370, v6);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v36);
    v41 = sub_100047110((uint64_t *)&unk_100827460);
    v42 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100622F90;
    *(_QWORD *)(v42 + 56) = &type metadata for Int;
    *(_QWORD *)(v42 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v42 + 32) = v35;
    v43 = static String.localizedStringWithFormat(_:_:)(v38, v40, v42);
    v45 = v44;
    swift_bridgeObjectRelease(v40, v44, v46, v47, v48, v49, v50, v51);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v42, v52, v53, v54, v55, v56, v57, v58);
    *(_QWORD *)&v75[0] = v43;
    *((_QWORD *)&v75[0] + 1) = v45;
    v59 = sub_100038CA0();
    v70 = Text.init<A>(_:)(v75, &type metadata for String, v59);
    v71 = v61;
    v72 = v60 & 1;
    v73 = v62;
    v74 = 1;
  }
  _ConditionalContent<>.init(storage:)(&v70, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)v75;
  v64 = v75[1];
  v65 = v76;
  v66 = v69;
  *v69 = v75[0];
  v66[1] = v64;
  *((_BYTE *)v66 + 32) = v65;
  return result;
}

void sub_10057B324(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t DataType;
  uint64_t v6;
  uint64_t ViewModel;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  char v49;
  char *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t View;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  char v69;
  char v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  __n128 v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  void *object;
  char v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t KeyPath;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  char *v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  uint64_t v125;
  uint64_t v126;
  SEL v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  CHWorkoutDetailHeartRateTableViewCell *v144;
  CHWorkoutDetailHeartRateTableViewCell *v145;
  uint64_t (*v146)(char *, uint64_t);
  void (*v147)(char *, _QWORD, uint64_t);
  void (*v148)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int v149;
  uint64_t v150;
  void (*v151)(char *, _QWORD, uint64_t);
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t countAndFlagsBits;
  char v158;
  _BYTE v159[7];
  _BYTE v160[7];
  char v161;
  int v162;
  __int16 v163;
  char v164;
  Swift::String v165;
  Swift::String v166;
  Swift::String v167;
  Swift::String v168;
  Swift::String v169;
  Swift::String v170;
  Swift::String v171;
  Swift::String v172;
  _OWORD v173[2];
  Swift::String v174[10];
  char v175;
  _BYTE v176[7];
  _BYTE v177[7];
  char v178;
  _QWORD v179[8];
  char v180;
  char v181;
  int v182;
  __int16 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  _BYTE v189[7];
  char v190;
  _BYTE v191[7];
  double v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;

  countAndFlagsBits = a1;
  v3 = type metadata accessor for Font.Leading(0);
  v155 = *(_QWORD *)(v3 - 8);
  v156 = v3;
  __chkstk_darwin(v3);
  v154 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v139 = *(_QWORD *)(DataType - 8);
  v140 = (void *)DataType;
  __chkstk_darwin(DataType);
  v136 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v137 = *(_QWORD *)(ViewModel - 8);
  v138 = (void *)ViewModel;
  __chkstk_darwin(ViewModel);
  v135 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v9);
  v11 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174[0]._countAndFlagsBits = sub_10057A484();
  v174[0]._object = v16;
  v17 = sub_100038CA0();
  v143 = Text.init<A>(_:)(v174, &type metadata for String, v17);
  v144 = v18;
  v141 = v19;
  v21 = v20 & 1;
  v151 = *(void (**)(char *, _QWORD, uint64_t))(v13 + 104);
  v151(v15, enum case for Font.TextStyle.title2(_:), v12);
  v22 = enum case for Font.Design.rounded(_:);
  v23 = type metadata accessor for Font.Design(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v24 + 104);
  v149 = v22;
  v147 = v25;
  v25(v11, v22, v23);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v150 = v23;
  v148 = v26;
  v26(v11, 0, 1, v23);
  v27 = static Font.system(_:design:weight:)(v15, v11, 0, 1);
  sub_10001BE90((uint64_t)v11, &qword_10081F2F8);
  v28 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v152 = v15;
  v153 = v12;
  v146 = v28;
  v29 = v28(v15, v12);
  static Font.Weight.semibold.getter(v29);
  v30 = Font.weight(_:)(v27);
  v31 = swift_release(v27);
  v33 = v143;
  v32 = v144;
  v34 = v141;
  v35 = Text.font(_:)(v30, v143, v141, v21, v144, v31);
  v142 = v36;
  LODWORD(v145) = v37;
  v39 = v38;
  swift_release(v30);
  sub_1000E4458(v33, v34, v21);
  swift_bridgeObjectRelease(v32, v40, v41, v42, v43, v44, v45, v46);
  v47 = countAndFlagsBits + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v48 = *(id *)v47;
  v49 = *(_BYTE *)(v47 + 8);
  sub_10010C5D0(*(id *)v47, v49);
  v50 = (char *)sub_1003F70B8(v48, v49);
  sub_10010C5EC(v48, v49);
  v51 = *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v51);

  LOBYTE(v50) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  v52 = swift_release(v51);
  if ((v50 & 1) != 0)
  {
    View = static Color.white.getter(v52);
  }
  else
  {
    sub_10010C5D0(v48, v49);
    v54 = (char *)sub_1003F70B8(v48, v49);
    sub_10010C5EC(v48, v49);
    v55 = *(_QWORD *)&v54[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v55);

    v57 = v139;
    v56 = v140;
    v58 = v136;
    (*(void (**)(char *, _QWORD, void *))(v139 + 104))(v136, enum case for TrainingLoadDataType.workout(_:), v140);
    v144 = (CHWorkoutDetailHeartRateTableViewCell *)v35;
    v59 = v39;
    v60 = v135;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v58);
    v61 = swift_release(v55);
    v62 = (*(uint64_t (**)(char *, void *, __n128))(v57 + 8))(v58, v56, v61);
    View = TrainingLoadViewModel.loadBandTodayColor()(v62);
    v63 = v60;
    v39 = v59;
    v35 = (uint64_t)v144;
    (*(void (**)(char *, void *))(v137 + 8))(v63, v138);
  }
  v64 = v145 & 1;
  v174[0]._countAndFlagsBits = View;
  v65 = v142;
  v66 = Text.foregroundStyle<A>(_:)(v174, v35, v142, v145 & 1, v39, &type metadata for Color, &protocol witness table for Color);
  v143 = v67;
  v144 = (CHWorkoutDetailHeartRateTableViewCell *)v66;
  v145 = v68;
  v70 = v69 & 1;
  sub_1000E4458(v35, v65, v64);
  swift_release(View);
  swift_bridgeObjectRelease(v39, v71, v72, v73, v74, v75, v76, v77);
  LODWORD(v142) = static Edge.Set.bottom.getter(v78);
  v79.n128_f64[0] = EdgeInsets.init(_all:)(2.0);
  v80 = v79.n128_u64[0];
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v87 = sub_10057BB60(countAndFlagsBits, v174, v79);
  object = v174[0]._object;
  countAndFlagsBits = v174[0]._countAndFlagsBits;
  v140 = v174[1]._object;
  v141 = v174[1]._countAndFlagsBits;
  v138 = v174[2]._object;
  v139 = v174[2]._countAndFlagsBits;
  v136 = (char *)v174[3]._object;
  v137 = v174[3]._countAndFlagsBits;
  LODWORD(v135) = LOBYTE(v174[4]._countAndFlagsBits);
  v89 = BYTE1(v174[4]._countAndFlagsBits);
  v91 = v152;
  v90 = v153;
  ((void (*)(char *, _QWORD, uint64_t, double))v151)(v152, enum case for Font.TextStyle.footnote(_:), v153, v87);
  v92 = v150;
  v147(v11, v149, v150);
  v148(v11, 0, 1, v92);
  v93 = static Font.system(_:design:weight:)(v91, v11, 0, 1);
  sub_10001BE90((uint64_t)v11, &qword_10081F2F8);
  v94 = v146(v91, v90);
  static Font.Weight.medium.getter(v94);
  v95 = Font.weight(_:)(v93);
  v96 = swift_release(v93);
  v98 = v154;
  v97 = v155;
  v99 = v156;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v155 + 104))(v154, enum case for Font.Leading.tight(_:), v156, v96);
  v100 = Font.leading(_:)(v98, v95);
  v101 = swift_release(v95);
  (*(void (**)(char *, uint64_t, __n128))(v97 + 8))(v98, v99, v101);
  KeyPath = swift_getKeyPath(&unk_100647258);
  v103 = swift_getKeyPath(&unk_100647288);
  LOBYTE(v97) = static Edge.Set.bottom.getter(v103);
  v104 = EdgeInsets.init(_all:)(6.0);
  *(_DWORD *)v189 = *(_DWORD *)v160;
  *(_DWORD *)&v191[3] = *(_DWORD *)&v159[3];
  *(_DWORD *)v191 = *(_DWORD *)v159;
  v182 = v162;
  v183 = v163;
  *(_DWORD *)&v189[3] = *(_DWORD *)&v160[3];
  HIWORD(v169._countAndFlagsBits) = v163;
  v164 = v89;
  v161 = 0;
  v158 = 0;
  *(_DWORD *)((char *)&v169._countAndFlagsBits + 2) = v162;
  HIDWORD(v171._object) = *(_DWORD *)&v160[3];
  v105 = countAndFlagsBits;
  v165._countAndFlagsBits = countAndFlagsBits;
  v165._object = object;
  v107 = v140;
  v106 = v141;
  v166._countAndFlagsBits = v141;
  v166._object = v140;
  v109 = v138;
  v108 = v139;
  v167._countAndFlagsBits = v139;
  v167._object = v138;
  v111 = v136;
  v110 = v137;
  v168._countAndFlagsBits = v137;
  v168._object = v136;
  v112 = (char)v135;
  LOBYTE(v169._countAndFlagsBits) = (_BYTE)v135;
  BYTE1(v169._countAndFlagsBits) = v89;
  v169._object = (void *)KeyPath;
  v170._countAndFlagsBits = v100;
  v170._object = (void *)v103;
  v171._countAndFlagsBits = 0;
  LOBYTE(v171._object) = 0;
  *(_DWORD *)((char *)&v171._object + 1) = *(_DWORD *)v160;
  LOBYTE(v172._countAndFlagsBits) = v97;
  HIDWORD(v172._countAndFlagsBits) = *(_DWORD *)&v159[3];
  *(_DWORD *)((char *)&v172._countAndFlagsBits + 1) = *(_DWORD *)v159;
  *(double *)&v172._object = v104;
  *(_QWORD *)&v173[0] = v113;
  *((_QWORD *)&v173[0] + 1) = v114;
  *(_QWORD *)&v173[1] = v115;
  BYTE8(v173[1]) = 0;
  v178 = v70;
  v175 = 0;
  v174[9] = *(Swift::String *)((char *)v173 + 9);
  *(_OWORD *)((char *)&v174[8] + 7) = v173[0];
  *(Swift::String *)((char *)&v174[7] + 7) = v172;
  *(Swift::String *)((char *)&v174[6] + 7) = v171;
  *(Swift::String *)((char *)&v174[1] + 7) = v166;
  *(Swift::String *)((char *)v174 + 7) = v165;
  *(Swift::String *)((char *)&v174[5] + 7) = v170;
  *(Swift::String *)((char *)&v174[4] + 7) = v169;
  *(Swift::String *)((char *)&v174[3] + 7) = v168;
  *(Swift::String *)((char *)&v174[2] + 7) = v167;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v177;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v177[3];
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v176;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v176[3];
  v116 = v175;
  v118 = v143;
  v117 = (uint64_t)v144;
  *(_QWORD *)a2 = v144;
  *(_QWORD *)(a2 + 8) = v118;
  *(_BYTE *)(a2 + 16) = v70;
  v119 = v145;
  *(_QWORD *)(a2 + 24) = v145;
  *(_BYTE *)(a2 + 32) = v142;
  *(_QWORD *)(a2 + 40) = v80;
  *(_QWORD *)(a2 + 48) = v82;
  *(_QWORD *)(a2 + 56) = v84;
  *(_QWORD *)(a2 + 64) = v86;
  *(_BYTE *)(a2 + 72) = v116;
  v120 = v174[7];
  *(Swift::String *)(a2 + 169) = v174[6];
  *(Swift::String *)(a2 + 185) = v120;
  v121 = v174[9];
  *(Swift::String *)(a2 + 201) = v174[8];
  *(Swift::String *)(a2 + 217) = v121;
  v122 = v174[3];
  *(Swift::String *)(a2 + 105) = v174[2];
  *(Swift::String *)(a2 + 121) = v122;
  v123 = v174[5];
  *(Swift::String *)(a2 + 137) = v174[4];
  *(Swift::String *)(a2 + 153) = v123;
  v124 = v174[1];
  *(Swift::String *)(a2 + 73) = v174[0];
  *(Swift::String *)(a2 + 89) = v124;
  v179[0] = v105;
  v179[1] = object;
  v179[2] = v106;
  v179[3] = v107;
  v179[4] = v108;
  v179[5] = v109;
  v179[6] = v110;
  v179[7] = v111;
  v180 = v112;
  v181 = v89;
  v184 = KeyPath;
  v185 = v100;
  v186 = v103;
  v187 = 0;
  v188 = 0;
  v190 = v97;
  v192 = v104;
  v193 = v113;
  v194 = v114;
  v195 = v115;
  v196 = 0;
  v125 = v117;
  v126 = v118;
  sub_1000E439C(v117, v118, v70);
  swift_bridgeObjectRetain(v119);
  sub_10057F31C((uint64_t)&v165);
  sub_10057F394((uint64_t)v179);
  sub_1000E4458(v125, v126, v70);
  swift_bridgeObjectRelease(v119, v127, v128, v129, v130, v131, v132, v133);
}

double sub_10057BB60@<D0>(uint64_t a1@<X0>, Swift::String *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t DataType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  char *v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  __n128 v34;
  double (*v35)(char *, uint64_t, __n128);
  __n128 v36;
  char *v37;
  uint64_t countAndFlagsBits;
  void (*v39)(char *, uint64_t);
  uint64_t SampleDaySummary;
  uint64_t v41;
  char *v42;
  uint64_t ChronicBaseline;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t countAndFlagsBits_low;
  void *object;
  uint64_t KeyPath;
  void *v54;
  char v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  Swift::String v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double result;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  char v91;
  char v92;
  Swift::String *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, _QWORD, uint64_t);
  unsigned int v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t BaselineComparison;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;
  Swift::String v105;
  char *v106;
  Swift::String *v107;
  Swift::String v108;
  Swift::String v109;
  _BYTE v110[32];
  __int16 v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String v115;
  char v116;
  char v117;

  v107 = a2;
  BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison(0, a3);
  v100 = *(_QWORD *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  v99 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v6 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105._countAndFlagsBits = type metadata accessor for TrainingLoadViewModel(0);
  v104._countAndFlagsBits = *(_QWORD *)(v105._countAndFlagsBits - 8);
  __chkstk_darwin(v105._countAndFlagsBits);
  v103._countAndFlagsBits = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v94 - v11;
  v13 = sub_100047110(&qword_100837AD8);
  __chkstk_darwin(v13);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100837AE0);
  __chkstk_darwin(v16);
  v98 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v106 = (char *)&v94 - v19;
  v20 = a1 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v21 = *(void **)v20;
  v102._countAndFlagsBits = v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_10010C5D0(v21, v22);
  v23 = (char *)sub_1003F70B8(v21, v22);
  sub_10010C5EC(v21, v22);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v24);

  LOBYTE(v23) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release(v24);
  if ((v23 & 1) == 0)
  {
    v95 = a1;
    sub_10010C5D0(v21, v22);
    v31 = (char *)sub_1003F70B8(v21, v22);
    sub_10010C5EC(v21, v22);
    v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v32);

    v33 = *(void (**)(_QWORD))(v6 + 104);
    v97 = enum case for TrainingLoadDataType.workout(_:);
    v96 = (void (*)(char *, _QWORD, uint64_t))v33;
    v33(v8);
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v8);
    v34 = swift_release(v32);
    v35 = *(double (**)(char *, uint64_t, __n128))(v6 + 8);
    v36.n128_f64[0] = v35(v8, DataType, v34);
    TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter(v36);
    v37 = v12;
    countAndFlagsBits = v105._countAndFlagsBits;
    v39 = *(void (**)(char *, uint64_t))(v104._countAndFlagsBits + 8);
    v39(v37, v105._countAndFlagsBits);
    SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary(0);
    v41 = *(_QWORD *)(SampleDaySummary - 8);
    v42 = v8;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v15, 1, SampleDaySummary) == 1)
    {
      sub_10001BE90((uint64_t)v15, &qword_100837AD8);
      ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline(0);
      v44 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ChronicBaseline - 8) + 56))(v106, 1, 1, ChronicBaseline);
    }
    else
    {
      v45 = v99;
      TrainingLoadSampleDaySummary.trainingLoad.getter();
      v46 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v15, SampleDaySummary);
      v44 = (uint64_t)v106;
      TrainingLoadBaselineComparison.chronicBaseline.getter(v46);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v45, BaselineComparison);
      v47 = type metadata accessor for TrainingLoadChronicBaseline(0);
      v48 = *(_QWORD *)(v47 - 8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      v49 = v98;
      sub_100021CC0(v44, v98, &qword_100837AE0);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v48 + 88))(v49, v47) == enum case for TrainingLoadChronicBaseline.available(_:))
      {
        sub_10057C5FC(v95, &v112._countAndFlagsBits);
        v50 = v112;
        countAndFlagsBits_low = LOBYTE(v113._countAndFlagsBits);
        object = v113._object;
        KeyPath = swift_getKeyPath(&unk_100647288);
        v108 = v50;
        v109._countAndFlagsBits = countAndFlagsBits_low;
        v109._object = object;
        *(_QWORD *)v110 = KeyPath;
        *(_QWORD *)&v110[8] = 4;
        *(_QWORD *)&v110[16] = 0;
        *(_QWORD *)&v110[24] = 0;
        LOBYTE(v111) = 0;
LABEL_9:
        v79 = sub_100047110(&qword_10083B210);
        v80 = sub_100047110(&qword_10083B218);
        v81 = sub_10057F40C();
        v82 = sub_10057F4EC();
        _ConditionalContent<>.init(storage:)(&v108, v79, v80, v81, v82);
        v105 = v112;
        v104 = v113;
        v103 = v114;
        v102 = v115;
        LOBYTE(v79) = v116;
        sub_10001BE90(v44, &qword_100837AE0);
        v108 = v105;
        v109 = v104;
        *(Swift::String *)v110 = v103;
        *(Swift::String *)&v110[16] = v102;
        LOBYTE(v111) = v79;
        HIBYTE(v111) = 1;
        goto LABEL_10;
      }
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
    }
    v54 = *(void **)v102._countAndFlagsBits;
    v55 = *(_BYTE *)(v102._countAndFlagsBits + 8);
    sub_10010C5D0(*(id *)v102._countAndFlagsBits, v55);
    v56 = (char *)sub_1003F70B8(v54, v55);
    sub_10010C5EC(v54, v55);
    v57 = *(_QWORD *)&v56[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
    swift_retain(v57);

    v96(v42, v97, DataType);
    v58 = (char *)v103._countAndFlagsBits;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v42);
    v59 = swift_release(v57);
    v35(v42, DataType, v59);
    v60 = (CHWorkoutDetailHeartRateTableViewCell *)TrainingLoadViewModel.loadBandTodayLocalizedLongDescriptionInNonActiveState()()._object;
    v39(v58, countAndFlagsBits);
    v61 = String.uppercased()();
    swift_bridgeObjectRelease(v60, (SEL)v61._object, v62, v63, v64, v65, v66, v67);
    v112 = v61;
    v68 = sub_100038CA0();
    v69 = Text.init<A>(_:)(&v112, &type metadata for String, v68);
    v71 = v70;
    v73 = v72;
    v75 = v74 & 1;
    v76 = swift_getKeyPath(&unk_100647288);
    v77 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v78 = Color.init(_:)(v77);
    v108._countAndFlagsBits = v69;
    v108._object = v71;
    v109._countAndFlagsBits = v75;
    v109._object = v73;
    *(_QWORD *)v110 = v76;
    *(_OWORD *)&v110[8] = xmmword_10063AEF0;
    *(_QWORD *)&v110[24] = v78;
    LOBYTE(v111) = 1;
    goto LABEL_9;
  }
  sub_10057C310((unint64_t *)&v112);
  v25 = v112;
  v26 = LOBYTE(v113._countAndFlagsBits);
  v27 = v113._object;
  v28 = swift_getKeyPath(&unk_100647288);
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v30 = Color.init(_:)(v29);
  v108 = v25;
  v109._countAndFlagsBits = v26;
  v109._object = v27;
  *(_QWORD *)v110 = v28;
  *(_OWORD *)&v110[8] = xmmword_10063AEF0;
  *(_QWORD *)&v110[24] = v30;
  v111 = 0;
LABEL_10:
  v83 = sub_100047110(&qword_10083B240);
  v84 = sub_100047110(&qword_10083B248);
  v85 = sub_1002341A4(&qword_10083B250, &qword_10083B240, (void (*)(void))sub_10057F40C);
  v86 = sub_1001C735C(&qword_10083B258, &qword_10083B248, (void (*)(void))sub_10057F40C, (void (*)(void))sub_10057F4EC);
  _ConditionalContent<>.init(storage:)(&v108, v83, v84, v85, v86);
  result = *(double *)&v112._countAndFlagsBits;
  v88 = v113;
  v89 = v114;
  v90 = v115;
  v91 = v116;
  v92 = v117;
  v93 = v107;
  *v107 = v112;
  v93[1] = v88;
  v93[2] = v89;
  v93[3] = v90;
  LOBYTE(v93[4]._countAndFlagsBits) = v91;
  BYTE1(v93[4]._countAndFlagsBits) = v92;
  return result;
}

void sub_10057C310(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  char v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  uint64_t v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  unint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  unint64_t *v93;
  uint64_t v94;
  uint64_t v95;

  v93 = a1;
  v88 = type metadata accessor for LocalizationFeature(0);
  v1 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v3 = (char *)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10057A210();
  v95 = v4;
  v87 = sub_100038CA0();
  v5 = Text.init<A>(_:)(&v94, &type metadata for String, v87);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = LocalizedStringKey.init(stringLiteral:)(32, 0xE100000000000000);
  v13 = Text.init(_:tableName:bundle:comment:)(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Text.+ infix(_:_:)(v5, v7, v11, v9, v13, v14, v19, v16);
  v90 = v21;
  v91 = v20;
  v92 = v22;
  v89 = v23 & 1;
  sub_1000E4458(v13, v15, v19);
  swift_bridgeObjectRelease(v17, v24, v25, v26, v27, v28, v29, v30);
  sub_1000E4458(v5, v7, v11);
  swift_bridgeObjectRelease(v9, v31, v32, v33, v34, v35, v36, v37);
  v38 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizationFeature.workout(_:), v88);
  v39 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000016, 0x80000001006A1BD0, v3);
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v38);
  v94 = v39;
  v95 = v41;
  v42 = Text.init<A>(_:)(&v94, &type metadata for String, v87);
  v44 = v43;
  v46 = v45;
  v48 = v47 & 1;
  v49 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v50 = Color.init(_:)(v49);
  v94 = v50;
  v51 = Text.foregroundStyle<A>(_:)(&v94, v42, v44, v48, v46, &type metadata for Color, &protocol witness table for Color);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  sub_1000E4458(v42, v44, v48);
  swift_release(v50);
  swift_bridgeObjectRelease(v46, v58, v59, v60, v61, v62, v63, v64);
  v65 = v90;
  v66 = v91;
  LOBYTE(v42) = v89;
  v67 = v92;
  v87 = static Text.+ infix(_:_:)(v91, v90, v89, v92, v51, v53, v57, v55);
  v88 = v68;
  v70 = v69;
  LOBYTE(v46) = v71;
  sub_1000E4458(v51, v53, v57);
  swift_bridgeObjectRelease(v55, v72, v73, v74, v75, v76, v77, v78);
  sub_1000E4458(v66, v65, v42);
  swift_bridgeObjectRelease(v67, v79, v80, v81, v82, v83, v84, v85);
  v86 = v93;
  *v93 = v87;
  v86[1] = v70;
  *((_BYTE *)v86 + 16) = v46 & 1;
  v86[3] = v88;
}

void sub_10057C5FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t DataType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ViewModel;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t View;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  char v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  char v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  char v88;
  uint64_t v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t *v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  uint64_t v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;

  v125 = a2;
  v3 = type metadata accessor for LocalizationFeature(0);
  v123 = *(_QWORD *)(v3 - 8);
  v124 = v3;
  __chkstk_darwin(v3);
  v122 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v6 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v119 = *(_QWORD *)(ViewModel - 8);
  v120 = (CHWorkoutDetailHeartRateTableViewCell *)ViewModel;
  __chkstk_darwin(ViewModel);
  v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10057A210();
  v127 = v12;
  v121 = sub_100038CA0();
  v13 = Text.init<A>(_:)(&v126, &type metadata for String, v121);
  v15 = v14;
  v118 = v16;
  v18 = v17 & 1;
  v19 = a1 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v20 = *(id *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_10010C5D0(*(id *)v19, v21);
  v22 = (char *)sub_1003F70B8(v20, v21);
  sub_10010C5EC(v20, v21);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v23);

  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v8);
  v24 = swift_release(v23);
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, DataType, v24);
  View = TrainingLoadViewModel.loadBandTodayColor()(v25);
  (*(void (**)(char *, CHWorkoutDetailHeartRateTableViewCell *))(v119 + 8))(v11, v120);
  v126 = View;
  v27 = v118;
  v28 = Text.foregroundStyle<A>(_:)(&v126, v13, v15, v18, v118, &type metadata for Color, &protocol witness table for Color);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  sub_1000E4458(v13, v15, v18);
  swift_release(View);
  swift_bridgeObjectRelease(v27, v35, v36, v37, v38, v39, v40, v41);
  v42 = LocalizedStringKey.init(stringLiteral:)(32, 0xE100000000000000);
  v43 = Text.init(_:tableName:bundle:comment:)(v42);
  v45 = v44;
  v47 = v46;
  v49 = v48 & 1;
  v50 = static Text.+ infix(_:_:)(v28, v30, v34, v32, v43, v44, v49, v46);
  v119 = v51;
  v120 = v52;
  LODWORD(v118) = v53 & 1;
  sub_1000E4458(v43, v45, v49);
  swift_bridgeObjectRelease(v47, v54, v55, v56, v57, v58, v59, v60);
  sub_1000E4458(v28, v30, v34);
  swift_bridgeObjectRelease(v32, v61, v62, v63, v64, v65, v66, v67);
  v69 = v122;
  v68 = v123;
  v70 = v124;
  (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v122, enum case for LocalizationFeature.workout(_:), v124);
  v71 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000016, 0x80000001006A1BD0, v69);
  v73 = v72;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  v126 = v71;
  v127 = v73;
  v74 = Text.init<A>(_:)(&v126, &type metadata for String, v121);
  v76 = v75;
  v78 = v77;
  v80 = v79 & 1;
  v81 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v82 = Color.init(_:)(v81);
  v126 = v82;
  v83 = Text.foregroundStyle<A>(_:)(&v126, v74, v76, v80, v78, &type metadata for Color, &protocol witness table for Color);
  v85 = v84;
  v87 = v86;
  v89 = v88 & 1;
  sub_1000E4458(v74, v76, v80);
  swift_release(v82);
  swift_bridgeObjectRelease(v78, v90, v91, v92, v93, v94, v95, v96);
  v97 = v119;
  v98 = v120;
  LOBYTE(v74) = (_BYTE)v118;
  v123 = static Text.+ infix(_:_:)(v50, v119, v118, v120, v83, v85, v89, v87);
  v124 = v99;
  v101 = v100;
  LOBYTE(v78) = v102;
  sub_1000E4458(v83, v85, v89);
  swift_bridgeObjectRelease(v87, v103, v104, v105, v106, v107, v108, v109);
  sub_1000E4458(v50, v97, v74);
  swift_bridgeObjectRelease(v98, v110, v111, v112, v113, v114, v115, v116);
  v117 = v125;
  *v125 = v123;
  v117[1] = v101;
  *((_BYTE *)v117 + 16) = v78 & 1;
  v117[3] = v124;
}

uint64_t sub_10057CA74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v29;
  uint64_t CardView;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v35 = a1;
  CardView = type metadata accessor for LoadCardView(0);
  v33 = *(_QWORD *)(CardView - 8);
  v2 = *(_QWORD *)(v33 + 64);
  __chkstk_darwin(CardView);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10083B0A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083B0A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100047110(&qword_10083B0B0);
  __chkstk_darwin(v29);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100047110(&qword_10083B0B8);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_10083B0C0);
  __chkstk_darwin(v31);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10057CDD4(v1, (uint64_t)v6);
  sub_100021CC0((uint64_t)v6, (uint64_t)v9, &qword_10083B0A0);
  v9[*(int *)(v7 + 36)] = 0;
  sub_10001BE90((uint64_t)v6, &qword_10083B0A0);
  v16 = v1;
  sub_100021CC0(v1 + *(int *)(CardView + 24), (uint64_t)v36, &qword_10081F600);
  LOBYTE(v7) = v37 != 0;
  sub_10001BE90((uint64_t)v36, &qword_10081F600);
  sub_100021CC0((uint64_t)v9, (uint64_t)v11, &qword_10083B0A8);
  v17 = v29;
  v11[*(int *)(v29 + 36)] = v7;
  sub_10001BE90((uint64_t)v9, &qword_10083B0A8);
  sub_10057EAB8(v16, (uint64_t)v3);
  v18 = *(unsigned __int8 *)(v33 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = v19 + v2;
  v21 = v18 | 7;
  v22 = swift_allocObject(&unk_1007AA298, v20, v18 | 7);
  sub_10057EB00((uint64_t)v3, v22 + v19);
  v23 = sub_10057EB50();
  View.onTapGesture(count:perform:)(1, sub_10057EB44, v22, v17, v23);
  swift_release(v22);
  sub_10001BE90((uint64_t)v11, &qword_10083B0B0);
  sub_10057EAB8(v16, (uint64_t)v3);
  v24 = swift_allocObject(&unk_1007AA2C0, v20, v21);
  sub_10057EB00((uint64_t)v3, v24 + v19);
  v25 = v32;
  v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v15, v13, v34);
  v27 = (uint64_t (**)())&v15[*(int *)(v31 + 36)];
  *v27 = sub_10057ED24;
  v27[1] = (uint64_t (*)())v24;
  v27[2] = 0;
  v27[3] = 0;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return sub_100045AD4((uint64_t)v15, v35, &qword_10083B0C0);
}

uint64_t sub_10057CDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t CardView;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  unsigned int *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v54 = a1;
  v56 = a2;
  CardView = type metadata accessor for LoadCardView(0);
  v47 = *(_QWORD *)(CardView - 8);
  __chkstk_darwin(CardView);
  v48 = v3;
  v49 = (uint64_t)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - v9;
  v11 = type metadata accessor for AdaptiveStackType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100047110(&qword_10083B100);
  v51 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v46 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v50 = (char *)&v46 - v16;
  v52 = sub_100047110(&qword_10083B108);
  __chkstk_darwin(v52);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081DA00 != -1)
    swift_once(&qword_10081DA00, sub_1002B7E84);
  v19 = qword_10086A4B0;
  KeyPath = swift_getKeyPath(&unk_100647230);
  v57 = v19;
  v21 = sub_1000083D8((unint64_t *)&qword_100820FC0, type metadata accessor for TrainingLoadOnboardingStateHandler, (uint64_t)&unk_1006333E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v57, KeyPath, v21);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v19 + 16) & 1) != 0)
  {
    sub_1003F6E18((uint64_t)v10);
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v22(v7, enum case for DynamicTypeSize.accessibility1(_:), v4);
    v23 = static DynamicTypeSize.< infix(_:_:)(v10, v7);
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v7, v4);
    v24(v10, v4);
    v25 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
    if ((v23 & 1) == 0)
      v25 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v53, *v25, v11);
    sub_1003F6E18((uint64_t)v10);
    v22(v7, enum case for DynamicTypeSize.xLarge(_:), v4);
    v26 = static DynamicTypeSize.< infix(_:_:)(v10, v7);
    v24(v7, v4);
    v27 = ((uint64_t (*)(char *, uint64_t))v24)(v10, v4);
    if ((v26 & 1) != 0)
      v28 = static VerticalAlignment.center.getter(v27);
    else
      v28 = static VerticalAlignment.top.getter(v27);
    v32 = v28;
    v33 = static HorizontalAlignment.leading.getter(v28);
    v34 = v49;
    sub_10057EAB8(v54, v49);
    v35 = *(unsigned __int8 *)(v47 + 80);
    v36 = (v35 + 16) & ~v35;
    v37 = swift_allocObject(&unk_1007AA2E8, v36 + v48, v35 | 7);
    sub_10057EB00(v34, v37 + v36);
    v38 = sub_100047110(&qword_10083B110);
    v39 = sub_100028384(&qword_10083B118, &qword_10083B110, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v40 = v46;
    AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)(v53, v32, v33, 0, 0, sub_10057EEA8, v37, v38, v39);
    v42 = v50;
    v41 = v51;
    v43 = v55;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v50, v40, v55);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v18, v42, v43);
    swift_storeEnumTagMultiPayload(v18, v52, 1);
    v44 = sub_10057ECDC();
    v45 = sub_100028384(&qword_10083B0F8, &qword_10083B100, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
    _ConditionalContent<>.init(storage:)(v18, &type metadata for LoadCardPendingView, v43, v44, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
  else
  {
    swift_storeEnumTagMultiPayload(v18, v52, 0);
    v29 = sub_10057ECDC();
    v30 = sub_100028384(&qword_10083B0F8, &qword_10083B100, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
    return _ConditionalContent<>.init(storage:)(v18, &type metadata for LoadCardPendingView, v55, v29, v30);
  }
}

uint64_t sub_10057D28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DataType;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t ViewModel;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t View;
  char v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  id v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t, uint64_t);
  void (*v57)(_BYTE *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  double *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v108[4];
  unsigned int v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t DayView;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t *v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  _OWORD v132[3];

  v128 = a2;
  v129 = a1;
  v3 = sub_100047110(&qword_10083B120);
  __chkstk_darwin(v3);
  v122 = (uint64_t *)&v108[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v125 = sub_100047110(&qword_100832DF0);
  __chkstk_darwin(v125);
  v123 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100047110(&qword_100832DF8);
  __chkstk_darwin(v6);
  v127 = &v108[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v124 = &v108[-v9];
  __chkstk_darwin(v10);
  v126 = &v108[-v11];
  v130 = type metadata accessor for DynamicTypeSize(0);
  v119 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v110 = &v108[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v111 = &v108[-v14];
  v15 = sub_100047110(&qword_10083B128);
  __chkstk_darwin(v15);
  v113 = &v108[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v18 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v20 = &v108[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v22 = *(_QWORD *)(ViewModel - 8);
  v23 = __chkstk_darwin(ViewModel);
  v25 = &v108[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DayView = type metadata accessor for TrainingLoadDayView(0, v23);
  v116 = *(_QWORD *)(DayView - 8);
  __chkstk_darwin(DayView);
  v112 = &v108[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v115 = sub_100047110(&qword_10083B130);
  __chkstk_darwin(v115);
  v114 = &v108[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = sub_100047110(&qword_10083B138);
  __chkstk_darwin(v120);
  v121 = &v108[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  v118 = &v108[-v30];
  __chkstk_darwin(v31);
  v131 = &v108[-v32];
  v33 = a1 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v34 = *(id *)v33;
  v35 = *(_BYTE *)(v33 + 8);
  sub_10010C5D0(*(id *)v33, v35);
  v36 = (char *)sub_1003F70B8(v34, v35);
  sub_10010C5EC(v34, v35);
  v37 = *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v37);

  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)(v20);
  v38 = swift_release(v37);
  v39 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v18 + 8))(v20, DataType, v38);
  View = TrainingLoadViewModel.fractionalBaselineDifferenceFromChronicForToday.getter(v39);
  v42 = v41 & 1;
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v25, ViewModel);
  v43 = type metadata accessor for WidgetRenderingMode(0);
  v44 = v113;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v113, 1, 1, v43);
  v45 = *(id *)v33;
  LOBYTE(v36) = *(_BYTE *)(v33 + 8);
  sub_10010C5D0(*(id *)v33, (char)v36);
  v46 = (char *)sub_1003F70B8(v45, (char)v36);
  sub_10010C5EC(v45, (char)v36);
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_trainingLoadViewModelProvider];
  swift_retain(v47);

  LOBYTE(v36) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  v48 = swift_release(v47);
  v49 = v112;
  TrainingLoadDayView.init(fractionalDifferenceFromAcuteToChronicBaseline:widgetRenderingMode:isLoading:)(View, v42, v44, v36 & 1, v48);
  v50 = v111;
  sub_1003F6E18((uint64_t)v111);
  v51 = enum case for DynamicTypeSize.accessibility1(_:);
  v52 = v119;
  v53 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v119 + 104);
  v54 = v110;
  v109 = enum case for DynamicTypeSize.accessibility1(_:);
  v55 = v130;
  v53(v110, enum case for DynamicTypeSize.accessibility1(_:), v130);
  v56 = v53;
  v113 = v53;
  LOBYTE(v44) = static DynamicTypeSize.< infix(_:_:)(v50, v54);
  v57 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
  v57(v54, v55);
  v58 = ((uint64_t (*)(_BYTE *, uint64_t))v57)(v50, v55);
  if ((v44 & 1) != 0)
    v59 = 0x4052800000000000;
  else
    v59 = 0x7FF0000000000000;
  v60 = static Alignment.center.getter(v58);
  _FrameLayout.init(width:height:alignment:)(v132, v59, 0, 0x4052800000000000, 0, v60, v61);
  v62 = v116;
  v63 = (uint64_t)v114;
  v64 = DayView;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v116 + 16))(v114, v49, DayView);
  v65 = (_OWORD *)(v63 + *(int *)(v115 + 36));
  v66 = v132[1];
  *v65 = v132[0];
  v65[1] = v66;
  v65[2] = v132[2];
  (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v49, v64);
  v67 = v50;
  sub_1003F6E18((uint64_t)v50);
  v68 = v54;
  v69 = v51;
  v70 = v130;
  v56(v54, v69, v130);
  v71 = (uint64_t)v67;
  v72 = static DynamicTypeSize.< infix(_:_:)(v67, v68);
  v57(v68, v70);
  v73 = ((uint64_t (*)(_BYTE *, uint64_t))v57)(v67, v70);
  if ((v72 & 1) != 0)
    v74 = 0;
  else
    v74 = 0x4024000000000000;
  if ((v72 & 1) != 0)
    v75 = 0x4028000000000000;
  else
    v75 = 0;
  v76 = static Edge.Set.all.getter(v73);
  v77 = v118;
  sub_100021CC0(v63, (uint64_t)v118, &qword_10083B130);
  v78 = &v77[*(int *)(v120 + 36)];
  *v78 = v76;
  *((_QWORD *)v78 + 1) = 0;
  *((_QWORD *)v78 + 2) = 0;
  *((_QWORD *)v78 + 3) = v74;
  *((_QWORD *)v78 + 4) = v75;
  v78[40] = 0;
  sub_10001BE90(v63, &qword_10083B130);
  v79 = sub_100045AD4((uint64_t)v77, (uint64_t)v131, &qword_10083B138);
  v80 = static HorizontalAlignment.leading.getter(v79);
  v81 = (uint64_t)v122;
  *v122 = v80;
  *(_QWORD *)(v81 + 8) = 0x4000000000000000;
  *(_BYTE *)(v81 + 16) = 0;
  v82 = sub_100047110(&qword_10083B140);
  v83 = sub_10057DB74(v129, (_OWORD *)(v81 + *(int *)(v82 + 44)));
  v84 = static Edge.Set.top.getter(v83);
  sub_1003F6E18(v71);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v113)(v68, v109, v70);
  v85 = static DynamicTypeSize.< infix(_:_:)(v71, v68);
  v57(v68, v70);
  v57((_BYTE *)v71, v70);
  v86 = 0.0;
  if ((v85 & 1) != 0)
    v86 = -4.0;
  v87 = EdgeInsets.init(_all:)(v86);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v94 = v123;
  sub_100021CC0(v81, (uint64_t)v123, &qword_10083B120);
  v95 = (double *)&v94[*(int *)(v125 + 36)];
  v96 = (uint64_t)v94;
  *(_BYTE *)v95 = v84;
  v95[1] = v87;
  *((_QWORD *)v95 + 2) = v89;
  *((_QWORD *)v95 + 3) = v91;
  *((_QWORD *)v95 + 4) = v93;
  *((_BYTE *)v95 + 40) = 0;
  sub_10001BE90(v81, &qword_10083B120);
  v98 = static Alignment.leading.getter(v97);
  v99 = v124;
  sub_1003ED68C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v124, 0.0, 1, 0.0, 1, v98, v100);
  sub_10001BE90(v96, &qword_100832DF0);
  v101 = v126;
  sub_100045AD4((uint64_t)v99, (uint64_t)v126, &qword_100832DF8);
  v102 = v131;
  v103 = v121;
  sub_100021CC0((uint64_t)v131, (uint64_t)v121, &qword_10083B138);
  v104 = v127;
  sub_100021CC0((uint64_t)v101, (uint64_t)v127, &qword_100832DF8);
  v105 = v128;
  sub_100021CC0((uint64_t)v103, v128, &qword_10083B138);
  v106 = sub_100047110(&qword_10083B148);
  sub_100021CC0((uint64_t)v104, v105 + *(int *)(v106 + 48), &qword_100832DF8);
  sub_10001BE90((uint64_t)v101, &qword_100832DF8);
  sub_10001BE90((uint64_t)v102, &qword_10083B138);
  sub_10001BE90((uint64_t)v104, &qword_100832DF8);
  return sub_10001BE90((uint64_t)v103, &qword_10083B138);
}

uint64_t sub_10057DB74@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t CardView;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  id v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v53;
  id v54;
  char v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  char v60;
  uint64_t v61;
  __n128 v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _OWORD v107[13];
  _OWORD v108[2];
  _OWORD v109[13];
  _OWORD v110[2];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _OWORD v124[3];

  v4 = sub_100047110(&qword_10083B150);
  __chkstk_darwin(v4);
  v94 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_10083B158);
  __chkstk_darwin(v92);
  v95 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100047110(&qword_10083B160);
  __chkstk_darwin(v93);
  v100 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v98 = (uint64_t)&v91 - v9;
  v99 = type metadata accessor for Divider(0);
  v96 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v103 = (char *)&v91 - v12;
  CardView = type metadata accessor for LoadCardView(0);
  v14 = __chkstk_darwin(CardView);
  v104 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OvernightMetricsViewModel(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v101 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v91 - v20;
  v22 = sub_100047110(&qword_10083B168);
  __chkstk_darwin(v22);
  v106 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v105 = (uint64_t)&v91 - v25;
  sub_10057B324(a1, (uint64_t)&v111);
  v26 = a1;
  v27 = a1 + *(int *)(CardView + 28);
  v28 = *(id *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_10010C5D0(*(id *)v27, v29);
  v30 = sub_1003F70B8(v28, v29);
  sub_10010C5EC(v28, v29);
  v31 = dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v32 = OvernightMetricsViewModel.isWatchExperienceAvailable.getter(v31);
  v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v102 = v16;
  v33(v21, v16);

  if (v32 == 2)
  {
    v34 = v104;
    sub_10057EAB8(v26, v104);
LABEL_4:
    sub_10057EEE4(v34);
    goto LABEL_5;
  }
  v34 = v104;
  sub_10057EAB8(v26, v104);
  if ((v32 & 1) == 0)
    goto LABEL_4;
  v53 = v34 + *(int *)(CardView + 28);
  v54 = *(id *)v53;
  v55 = *(_BYTE *)(v53 + 8);
  sub_10010C5D0(*(id *)v53, v55);
  v56 = (char *)sub_1003F70B8(v54, v55);
  sub_10010C5EC(v54, v55);
  v57 = *(_QWORD *)&v56[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider_overnightSleepingSampleViewModelProvider];
  swift_retain(v57);

  v58 = v101;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  v59 = swift_release(v57);
  v60 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter(v59);
  v33(v58, v102);
  v61 = sub_10057EEE4(v34);
  if (v60 != 2 && (v60 & 1) == 0)
  {
    Divider.init()(v61);
    v63 = static Axis.Set.horizontal.getter(v62);
    v64 = (uint64_t)v94;
    *v94 = v63;
    v65 = sub_100047110(&qword_10083B180);
    v66 = sub_10057E298(v64 + *(int *)(v65 + 44));
    v67 = static Edge.Set.top.getter(v66);
    v68 = EdgeInsets.init(_all:)(6.0);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v75 = v95;
    sub_100021CC0(v64, v95, &qword_10083B150);
    v76 = v75 + *(int *)(v92 + 36);
    *(_BYTE *)v76 = v67;
    *(double *)(v76 + 8) = v68;
    *(_QWORD *)(v76 + 16) = v70;
    *(_QWORD *)(v76 + 24) = v72;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    sub_10001BE90(v64, &qword_10083B150);
    v78 = static Font.subheadline.getter(v77);
    KeyPath = swift_getKeyPath(&unk_100647258);
    v80 = v100;
    sub_100021CC0(v75, v100, &qword_10083B158);
    v81 = (uint64_t *)(v80 + *(int *)(v93 + 36));
    *v81 = KeyPath;
    v81[1] = v78;
    sub_10001BE90(v75, &qword_10083B158);
    v82 = v98;
    sub_100045AD4(v80, v98, &qword_10083B160);
    v84 = v96;
    v83 = v97;
    v85 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
    v86 = v103;
    v87 = v99;
    v85(v97, v103, v99);
    sub_100021CC0(v82, v80, &qword_10083B160);
    v37 = (uint64_t)v106;
    v85(v106, v83, v87);
    v88 = sub_100047110(&qword_10083B188);
    sub_100021CC0(v80, v37 + *(int *)(v88 + 48), &qword_10083B160);
    sub_10001BE90(v82, &qword_10083B160);
    v89 = *(void (**)(char *, uint64_t))(v84 + 8);
    v89(v86, v87);
    sub_10001BE90(v80, &qword_10083B160);
    v89(v83, v87);
    v90 = sub_100047110(&qword_10083B170);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v37, 0, 1, v90);
    v36 = v105;
    sub_100045AD4(v37, v105, &qword_10083B168);
    goto LABEL_6;
  }
LABEL_5:
  v35 = sub_100047110(&qword_10083B170);
  v36 = v105;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v105, 1, 1, v35);
  v37 = (uint64_t)v106;
LABEL_6:
  sub_100021CC0(v36, v37, &qword_10083B168);
  v38 = v124[0];
  v107[12] = v123;
  v108[0] = v124[0];
  *(_OWORD *)((char *)v108 + 9) = *(_OWORD *)((char *)v124 + 9);
  v39 = v119;
  v40 = v120;
  v107[8] = v119;
  v107[9] = v120;
  v42 = v121;
  v41 = v122;
  v107[10] = v121;
  v107[11] = v122;
  v43 = v115;
  v44 = v116;
  v107[4] = v115;
  v107[5] = v116;
  v46 = v117;
  v45 = v118;
  v107[6] = v117;
  v107[7] = v118;
  v47 = v111;
  v48 = v112;
  v107[0] = v111;
  v107[1] = v112;
  v50 = v113;
  v49 = v114;
  v107[2] = v113;
  v107[3] = v114;
  a2[12] = v123;
  a2[13] = v38;
  *(_OWORD *)((char *)a2 + 217) = *(_OWORD *)((char *)v124 + 9);
  a2[8] = v39;
  a2[9] = v40;
  a2[10] = v42;
  a2[11] = v41;
  a2[4] = v43;
  a2[5] = v44;
  a2[6] = v46;
  a2[7] = v45;
  *a2 = v47;
  a2[1] = v48;
  a2[2] = v50;
  a2[3] = v49;
  v51 = sub_100047110(&qword_10083B178);
  sub_100021CC0(v37, (uint64_t)a2 + *(int *)(v51 + 48), &qword_10083B168);
  sub_10057EF20((uint64_t)v107);
  sub_10001BE90(v36, &qword_10083B168);
  sub_10001BE90(v37, &qword_10083B168);
  v109[12] = v123;
  v110[0] = v124[0];
  *(_OWORD *)((char *)v110 + 9) = *(_OWORD *)((char *)v124 + 9);
  v109[8] = v119;
  v109[9] = v120;
  v109[10] = v121;
  v109[11] = v122;
  v109[4] = v115;
  v109[5] = v116;
  v109[6] = v117;
  v109[7] = v118;
  v109[0] = v111;
  v109[1] = v112;
  v109[2] = v113;
  v109[3] = v114;
  return sub_10057F0D8((uint64_t)v109);
}

uint64_t sub_10057E298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = sub_100047110(&qword_10083B190);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - v6;
  v8 = sub_100047110(&qword_10083B198);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - v12;
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v14);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v15 = sub_100047110(&qword_10083B1A0);
  sub_10057E460((uint64_t)&v13[*(int *)(v15 + 44)]);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v16);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v17 = sub_100047110(&qword_10083B1A8);
  sub_10057E5B0((uint64_t)&v7[*(int *)(v17 + 44)]);
  sub_100021CC0((uint64_t)v13, (uint64_t)v10, &qword_10083B198);
  sub_100021CC0((uint64_t)v7, (uint64_t)v4, &qword_10083B190);
  sub_100021CC0((uint64_t)v10, a1, &qword_10083B198);
  v18 = sub_100047110(&qword_10083B1B0);
  sub_100021CC0((uint64_t)v4, a1 + *(int *)(v18 + 48), &qword_10083B190);
  sub_10001BE90((uint64_t)v7, &qword_10083B190);
  sub_10001BE90((uint64_t)v13, &qword_10083B198);
  sub_10001BE90((uint64_t)v4, &qword_10083B190);
  return sub_10001BE90((uint64_t)v10, &qword_10083B198);
}

void sub_10057E460(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  __n128 v14;
  double v15;
  void (*v16)(char *, char *, uint64_t, double);
  uint64_t v17;
  void (*v18)(char *, uint64_t, __n128);
  __n128 v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _QWORD v27[2];
  char v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;

  v2 = sub_100047110(&qword_10083B1B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v27 - v8;
  sub_10057A6E4((uint64_t)v27, v7);
  v10 = v27[0];
  v11 = v27[1];
  v12 = v28;
  v13 = v29;
  v15 = sub_10057A8AC((uint64_t)v9, v14);
  v16 = *(void (**)(char *, char *, uint64_t, double))(v3 + 16);
  v16(v5, v9, v2, v15);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  v17 = sub_100047110(&qword_10083B208);
  ((void (*)(uint64_t, char *, uint64_t))v16)(a1 + *(int *)(v17 + 64), v5, v2);
  sub_1000E439C(v10, v11, v12);
  v18 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v19 = swift_bridgeObjectRetain(v13);
  v18(v9, v2, v19);
  ((void (*)(char *, uint64_t))v18)(v5, v2);
  sub_1000E4458(v10, v11, v12);
  swift_bridgeObjectRelease(v13, v20, v21, v22, v23, v24, v25, v26);
}

void sub_10057E5B0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t KeyPath;
  int v34;
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  _QWORD v38[2];
  unsigned __int8 v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;

  v2 = sub_100047110(&qword_10083B1B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10083B1C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10083B1C8);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v32 - v14;
  sub_10057A6E4((uint64_t)v38, v13);
  v35 = v38[1];
  v36 = v38[0];
  v34 = v39;
  v37 = v40;
  KeyPath = swift_getKeyPath(&unk_100647288);
  v17 = sub_10057A8AC((uint64_t)v5, v16);
  (*(void (**)(char *, char *, uint64_t, double))(v3 + 16))(v8, v5, v2, v17);
  *(_WORD *)&v8[*(int *)(v6 + 36)] = 256;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18 = swift_getKeyPath(&unk_100647288);
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_10083B1C0);
  v19 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v19 = v18;
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 0;
  sub_10001BE90((uint64_t)v8, &qword_10083B1C0);
  sub_100045AD4((uint64_t)v11, (uint64_t)v15, &qword_10083B1C8);
  sub_100021CC0((uint64_t)v15, (uint64_t)v11, &qword_10083B1C8);
  v21 = v35;
  v20 = v36;
  *(_QWORD *)a1 = v36;
  *(_QWORD *)(a1 + 8) = v21;
  LOBYTE(v3) = v34;
  *(_BYTE *)(a1 + 16) = v34;
  v22 = v37;
  *(_QWORD *)(a1 + 24) = v37;
  *(_WORD *)(a1 + 32) = 256;
  v23 = KeyPath;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_QWORD *)(a1 + 48) = 4;
  *(_BYTE *)(a1 + 56) = 0;
  v24 = sub_100047110(&qword_10083B1D0);
  sub_100021CC0((uint64_t)v11, a1 + *(int *)(v24 + 48), &qword_10083B1C8);
  sub_1000E439C(v20, v21, v3);
  swift_bridgeObjectRetain(v22);
  swift_retain(v23);
  sub_10001BE90((uint64_t)v15, &qword_10083B1C8);
  sub_10001BE90((uint64_t)v11, &qword_10083B1C8);
  sub_1000E4458(v20, v21, v3);
  swift_release(v23);
  swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
}

uint64_t sub_10057E844(uint64_t a1)
{
  uint64_t CardView;
  uint64_t *v3;
  uint64_t v4;
  _OWORD v6[2];
  _QWORD v7[3];
  uint64_t v8;

  CardView = type metadata accessor for LoadCardView(0);
  sub_100021CC0(a1 + *(int *)(CardView + 24), (uint64_t)v7, &qword_10081F600);
  if (!v8)
    return sub_10001BE90((uint64_t)v7, &qword_10081F600);
  v3 = sub_100016804(v7, v8);
  v4 = a1 + *(int *)(CardView + 20);
  memset(v6, 0, sizeof(v6));
  sub_10040CBC0(v4, (uint64_t)v6, *v3);
  sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v7);
}

void sub_10057E8E8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  char v3;
  unsigned __int8 *v4;
  uint64_t KeyPath;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[4];
  __int16 v12;
  unsigned __int8 *v13;

  v1 = a1 + *(int *)(type metadata accessor for LoadCardView(0) + 28);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_10010C5D0(*(id *)v1, v3);
  v4 = (unsigned __int8 *)sub_1003F70B8(v2, v3);
  sub_10010C5EC(v2, v3);
  KeyPath = swift_getKeyPath(&unk_100647208);
  v13 = v4;
  v6 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v6);
  swift_release(KeyPath);
  v7 = v4[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter + 9] << 8;

  if (v7 != 768)
  {
    sub_10010C5D0(v2, v3);
    v8 = (unsigned __int8 *)sub_1003F70B8(v2, v3);
    sub_10010C5EC(v2, v3);
    v9 = swift_getKeyPath(&unk_100647208);
    __chkstk_darwin(v9);
    v11[2] = v8;
    v11[3] = 0;
    v12 = 768;
    v13 = v8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v9, sub_1004DDBFC, v11, (char *)&type metadata for () + 8, v6);

    swift_release(v9);
  }
  sub_10010C5D0(v2, v3);
  v10 = sub_1003F70B8(v2, v3);
  sub_10010C5EC(v2, v3);
  sub_100176BB8();

}

uint64_t sub_10057EAB8(uint64_t a1, uint64_t a2)
{
  uint64_t CardView;

  CardView = type metadata accessor for LoadCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(CardView - 8) + 16))(a2, a1, CardView);
  return a2;
}

uint64_t sub_10057EB00(uint64_t a1, uint64_t a2)
{
  uint64_t CardView;

  CardView = type metadata accessor for LoadCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(CardView - 8) + 32))(a2, a1, CardView);
  return a2;
}

uint64_t sub_10057EB44()
{
  return sub_10057ED30(sub_10057E844);
}

unint64_t sub_10057EB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B0C8;
  if (!qword_10083B0C8)
  {
    v1 = sub_100007050(&qword_10083B0B0);
    sub_10057EBBC();
    sub_1001F1D34();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B0C8);
  }
  return result;
}

unint64_t sub_10057EBBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B0D0;
  if (!qword_10083B0D0)
  {
    v1 = sub_100007050(&qword_10083B0A8);
    sub_1000E1A9C(&qword_10083B0D8, &qword_10083B0A0, (void (*)(void))sub_10057EC58);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B0D0);
  }
  return result;
}

unint64_t sub_10057EC58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B0E0;
  if (!qword_10083B0E0)
  {
    v1 = sub_100007050(&qword_10083B0E8);
    sub_10057ECDC();
    sub_100028384(&qword_10083B0F8, &qword_10083B100, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B0E0);
  }
  return result;
}

unint64_t sub_10057ECDC()
{
  unint64_t result;

  result = qword_10083B0F0;
  if (!qword_10083B0F0)
  {
    result = swift_getWitnessTable(&unk_100635EB4, &type metadata for LoadCardPendingView);
    atomic_store(result, (unint64_t *)&qword_10083B0F0);
  }
  return result;
}

uint64_t sub_10057ED24()
{
  return sub_10057ED30((uint64_t (*)(uint64_t))sub_10057E8E8);
}

uint64_t sub_10057ED30(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadCardView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10057ED80()
{
  uint64_t v0;
  int *CardView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Card;
  _QWORD *v12;

  CardView = (int *)type metadata accessor for LoadCardView(0);
  v2 = *((_QWORD *)CardView - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)v6 + CardView[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  Card = type metadata accessor for LoadCard(0);
  sub_1000EB41C(*(_QWORD *)&v9[*(int *)(Card + 20)], *(_QWORD *)&v9[*(int *)(Card + 20) + 8], v9[*(int *)(Card + 20) + 16]);

  v12 = (_QWORD *)((char *)v6 + CardView[6]);
  if (v12[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v12);
  sub_10010C5EC(*(id *)((char *)v6 + CardView[7]), *((_BYTE *)v6 + CardView[7] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10057EEA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LoadCardView(0) - 8) + 80);
  return sub_10057D28C(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10057EEE4(uint64_t a1)
{
  uint64_t CardView;

  CardView = type metadata accessor for LoadCardView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(CardView - 8) + 8))(a1, CardView);
  return a1;
}

uint64_t sub_10057EF20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 144);
  v10 = *(_BYTE *)(a1 + 145);
  v12 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 152);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  sub_10057EFF8(v14, v13, v3, v4, v5, v6, v7, v8, v9, v10);
  swift_retain(v12);
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

double sub_10057EFF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  double result;

  if ((a10 & 1) != 0)
    return sub_10057F070(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
  sub_1000E439C(a1, a2, a3 & 1);
  swift_bridgeObjectRetain(a4);
  swift_retain(a5);
  *(_QWORD *)&result = swift_retain(a8).n128_u64[0];
  return result;
}

double sub_10057F070(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  double result;

  if ((a9 & 1) != 0)
  {
    sub_1000E439C(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    swift_retain(a5);
    a5 = a8;
  }
  else
  {
    sub_1000E439C(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
  }
  *(_QWORD *)&result = swift_retain(a5).n128_u64[0];
  return result;
}

uint64_t sub_10057F0D8(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 80);
  v3 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 104);
  v19 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 136);
  v8 = *(_BYTE *)(a1 + 144);
  v9 = *(_BYTE *)(a1 + 145);
  v10 = *(_QWORD *)(a1 + 168);
  v22 = *(_QWORD *)(a1 + 152);
  v23 = *(_QWORD *)(a1 + 160);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2, v11, v12, v13, v14, v15, v16, v17);
  sub_10057F1AC(v21, v20, v19, v3, v4, v5, v6, v7, v8, v9);
  swift_release(v10);
  swift_release(v22);
  swift_release(v23);
  return a1;
}

void sub_10057F1AC(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  if ((a10 & 1) != 0)
  {
    sub_10057F224(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
  }
  else
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_release(a8);
    swift_release(a5);
    swift_bridgeObjectRelease(a4, v13, v14, v15, v16, v17, v18, v19);
  }
}

void sub_10057F224(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  if ((a9 & 1) != 0)
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_release(a8);
  }
  else
  {
    sub_1000E4458(a1, a2, a3 & 1);
  }
  swift_release(a5);
  swift_bridgeObjectRelease(a4, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t sub_10057F290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B1E8;
  if (!qword_10083B1E8)
  {
    v1 = sub_100007050(&qword_10083B1F0);
    sub_1001C735C(&qword_10083B1F8, &qword_10083B200, (void (*)(void))sub_1002B35FC, (void (*)(void))sub_1002B37D4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B1E8);
  }
  return result;
}

double sub_10057F314(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100116B88(a1, a2, a3, a4);
}

uint64_t sub_10057F31C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  sub_10057EFF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v2);
  return a1;
}

uint64_t sub_10057F394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  sub_10057F1AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
  swift_release(v4);
  swift_release(v2);
  swift_release(v3);
  return a1;
}

unint64_t sub_10057F40C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B220;
  if (!qword_10083B220)
  {
    v1 = sub_100007050(&qword_10083B210);
    sub_10057F490();
    sub_100028384(&qword_1008255A0, &qword_1008255A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B220);
  }
  return result;
}

unint64_t sub_10057F490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B228;
  if (!qword_10083B228)
  {
    v1 = sub_100007050(&qword_10083B230);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B228);
  }
  return result;
}

uint64_t sub_10057F4EC()
{
  return sub_1002341A4(&qword_10083B238, &qword_10083B218, (void (*)(void))sub_1001C3060);
}

unint64_t sub_10057F50C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083B260;
  if (!qword_10083B260)
  {
    v1 = sub_100007050(&qword_10083B0C0);
    v2[0] = sub_100007050(&qword_10083B0B0);
    v2[1] = sub_10057EB50();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B260);
  }
  return result;
}

void sub_10057F600(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  void *v17;
  __n128 v18;
  _QWORD v19[2];

  v3 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_100047110((uint64_t *)&unk_10083D730);
    v9 = a2;
    LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
    v10 = EntityProperty<>.init(title:)(v8);
    v11 = v9;
    LOBYTE(v19[0]) = objc_msgSend(v11, "unearned", swift_retain(v10).n128_f64[0]) ^ 1;
    EntityProperty.wrappedValue.setter(v19);

    swift_release(v10);
    v19[0] = &_swiftEmptyArrayStorage;
    v12 = sub_1002B7C54();
    v13 = sub_100047110((uint64_t *)&unk_10083D740);
    v14 = sub_1001121C8();
    dispatch thunk of SetAlgebra.init<A>(_:)(v19, v13, v14, v3, v12);
    v19[0] = v10;
    v19[1] = v11;
    v15 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
    v16 = sub_1000F49B4();
    v17 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v19, v5, &type metadata for AwardEntity, v16);
    UIView.annotate(with:)(v17, v18);

  }
}

_QWORD *sub_10057F7C0(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, _QWORD *a7, void *a8, char a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  objc_class *v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (**v48)();
  uint64_t v49;
  uint64_t v50;
  id v52;
  _QWORD v57[5];
  objc_super v58;

  v11 = v10;
  v17 = (objc_class *)type metadata accessor for TodayActivityTileDataModel();
  v11[7] = 0;
  v11[8] = 0;
  v18 = (char *)objc_allocWithZone(v17);
  swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_todayCell], 0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activitySummary] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_observers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp26TodayActivityTileDataModel_activityDataProvider] = a2;
  v58.receiver = v18;
  v58.super_class = v17;
  v19 = a2;
  v20 = objc_msgSendSuper2(&v58, "init");
  v21 = *(void **)(*(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener]
                 + OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers);
  v22 = v20;
  objc_msgSend(v21, "addObject:", v22);
  sub_100019DFC();

  v11[2] = v22;
  v23 = type metadata accessor for HistoryActivityTileDataModel();
  swift_allocObject(v23, 64, 7);
  v24 = a3;
  v25 = sub_100009870(v24);

  v11[3] = v25;
  v26 = type metadata accessor for CatalogTipActivityTileDataModel(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  swift_retain(a10);
  v11[6] = sub_10000B624(v27);
  v28 = type metadata accessor for TrendsActivityTileDataModel();
  swift_allocObject(v28, 128, 7);
  v29 = a1;
  v52 = a4;
  v30 = a5;
  v31 = a6;
  v11[4] = sub_100013C38(v29, v52, v30, v31, a9);
  sub_1000252E0((uint64_t)a7, (uint64_t)v57);
  v32 = objc_allocWithZone((Class)type metadata accessor for AwardsActivityTileDataModel());
  v33 = v19;
  v34 = a8;
  v11[5] = sub_1002A99F4(v57, v34, v33);
  v35 = swift_allocObject(&unk_1007AA358, 24, 7);
  swift_weakInit(v35 + 16, v11);
  v36 = v25[5];
  v37 = v25[6];
  v25[5] = sub_100580068;
  v25[6] = v35;
  sub_100022BA4(v36, v37);
  v38 = v11[6];
  v39 = swift_allocObject(&unk_1007AA358, 24, 7);
  swift_weakInit(v39 + 16, v11);
  v40 = *(_QWORD *)(v38 + 32);
  v41 = *(_QWORD *)(v38 + 40);
  *(_QWORD *)(v38 + 32) = sub_100580070;
  *(_QWORD *)(v38 + 40) = v39;
  sub_100022BA4(v40, v41);
  v42 = v11[4];
  v43 = swift_allocObject(&unk_1007AA358, 24, 7);
  swift_weakInit(v43 + 16, v11);
  v44 = *(_QWORD *)(v42 + 104);
  v45 = *(_QWORD *)(v42 + 112);
  *(_QWORD *)(v42 + 104) = sub_100580090;
  *(_QWORD *)(v42 + 112) = v43;
  sub_100022BA4(v44, v45);
  v46 = v11[5];
  v47 = swift_allocObject(&unk_1007AA358, 24, 7);
  swift_weakInit(v47 + 16, v11);
  v48 = (void (**)())(v46 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
  v49 = *(_QWORD *)(v46 + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_onModelDidUpdate);
  v50 = (uint64_t)v48[1];
  *v48 = sub_1005800B0;
  v48[1] = (void (*)())v47;
  swift_retain(v47);
  sub_100022BA4(v49, v50);

  swift_release(a10);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a7);
  swift_release(v47);
  return v11;
}

double sub_10057FB30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  _UNKNOWN **v15;
  _BYTE v16[24];

  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(void (**)(char *))(Strong + 56);
    if (v9)
    {
      v10 = *(_QWORD *)(Strong + 64);
      v15 = &off_1007834A0;
      v11 = sub_10003B368();
      swift_retain(v10);
      v12 = sub_100047110(&qword_1008282B0);
      v13 = sub_10003B31C();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v12, v13, v2, v11);
      v9(v5);
      sub_100022BA4((uint64_t)v9, v10);
      v14 = swift_release(v8);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v14);
    }
    else
    {
      *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
    }
  }
  return result;
}

void sub_10057FC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  void (*v10)(char *);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void (**)(char *))(Strong + 56);
    v11 = *(_QWORD *)(Strong + 64);
    sub_10003AFE0((uint64_t)v10, v11);
    swift_release(v9);
    if (v10)
    {
      v15 = a2;
      v12 = sub_10003B368();
      v13 = sub_100047110(&qword_1008282B0);
      v14 = sub_10003B31C();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v13, v14, v4, v12);
      v10(v7);
      sub_100022BA4((uint64_t)v10, v11);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_10057FD88@<X0>(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = type metadata accessor for TrendPairTableViewCell.TrailingMetricType(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrendListMetric(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v3 + 32);
  if (*(_BYTE *)(v15 + 96) != 2)
  {
    v23 = sub_100047110(&qword_1008283F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  v16 = *(_QWORD *)(v15 + 88);
  if ((a2 & 1) == 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)(v16 + 16) > a1)
      {
        sub_10025D818(v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * a1, a3);
        v24 = sub_100047110(&qword_1008283F0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3 + *(int *)(v24 + 48), 2, 2, v10);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a3, 0, 1, v24);
      }
LABEL_19:
      __break(1u);
      return result;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((uint64_t)(a1 + 0x4000000000000000) < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v17 = 2 * a1;
  if (((2 * a1) & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = *(_QWORD *)(v16 + 16);
  if (v17 >= v18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v19 = v17 | 1;
  v20 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v21 = *(_QWORD *)(v11 + 72);
  sub_10025D818(v20 + v21 * v17, (uint64_t)v14);
  if (v19 >= (uint64_t)v18)
  {
    v22 = 1;
  }
  else
  {
    sub_10025D818(v20 + v21 * v19, (uint64_t)v9);
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v22, 2, v10);
  v25 = sub_100047110(&qword_1008283F0);
  v26 = a3 + *(int *)(v25 + 48);
  sub_100047C88((uint64_t)v14, a3, type metadata accessor for TrendListMetric);
  sub_100047C88((uint64_t)v9, v26, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_10057FFF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  sub_100022BA4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_100580044()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100580068()
{
  uint64_t v0;

  return sub_10057FB30(v0);
}

void sub_100580070()
{
  uint64_t v0;

  sub_10057FC64(v0, (uint64_t)&off_1007834C8);
}

void sub_100580090()
{
  uint64_t v0;

  sub_10057FC64(v0, (uint64_t)&off_1007834F0);
}

void sub_1005800B0()
{
  uint64_t v0;

  sub_10057FC64(v0, (uint64_t)&off_100783520);
}

uint64_t sub_1005800D0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1006473B0);
  v2 = swift_getKeyPath(&unk_1006473D8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_100580140()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v2 = swift_getKeyPath(&unk_100647420);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1005801B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  v6 = sub_100047110(&qword_10081E650);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10058020C, 0, 0);
}

id sub_10058020C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0 || (objc_msgSend(*(id *)(v0 + 40), "hasAnyFriendsSetup") & 1) != 0)
    goto LABEL_5;
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    v5 = (unint64_t)objc_msgSend(result, "fitnessMode");

    if ((v5 & 0xFFFFFFFFFFFFFFFELL) != 2)
    {
      v11 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v11);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
      v9 = v12;
      v10 = sub_100580330;
      return (id)swift_task_switch(v10, v7, v9);
    }
LABEL_5:
    v6 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 72) = v6;
    *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v6);
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_1005803B8;
    return (id)swift_task_switch(v10, v7, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_100580330()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(void **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 64));
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v3 = swift_getKeyPath(&unk_100647420);
  *(_QWORD *)(v0 + 24) = 2;
  static Published.subscript.setter(v0 + 24, v1, KeyPath, v3);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005803B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 80));
  KeyPath = swift_getKeyPath(&unk_1006473B0);
  v3 = swift_getKeyPath(&unk_1006473D8);
  static Published.subscript.getter((_QWORD *)(v0 + 96), v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  *(_BYTE *)(v0 + 97) = *(_BYTE *)(v0 + 96);
  return swift_task_switch(sub_100580450, 0, 0);
}

uint64_t sub_100580450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((*(_BYTE *)(v1 + 97) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 48);
    v3 = *(_QWORD *)(v1 + 56);
    v4 = *(_BYTE **)(v1 + 32);
    v5 = sub_100581FD0(a1);
    v6 = v5;
    v8 = FIDeviceMeetsMinimumOSVersionDaytona(v5, v7);
    v4[v3] = v8;
    v9 = static os_log_type_t.default.getter(v8);
    v10 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Handling account status change", 30, 2, &_swiftEmptyArrayStorage);

    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
    v12 = swift_allocObject(&unk_1007AA650, 41, 7);
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v4;
    *(_BYTE *)(v12 + 40) = v6 & 1;
    v13 = v4;
    v14 = sub_10020D9C0(v2, (uint64_t)&unk_10083B528, v12);
    swift_release(v14);
    swift_task_dealloc(*(_QWORD *)(v1 + 48));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v1 + 88) = static MainActor.shared.getter(a1);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005805B8, v17, v18);
  }
}

uint64_t sub_1005805B8()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(void **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 88));
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v3 = swift_getKeyPath(&unk_100647420);
  *(_QWORD *)(v0 + 16) = 0;
  static Published.subscript.setter(v0 + 16, v1, KeyPath, v3);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10058063C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;
  _BYTE v14[24];

  v2 = a2 + 16;
  v3 = static os_log_type_t.default.getter(a1);
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Received phone status changed notification", 42, 2, &_swiftEmptyArrayStorage);

  swift_beginAccess(v2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = static os_log_type_t.default.getter(Strong);
    v8 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v8, "Asking for phone account", 24, 2, &_swiftEmptyArrayStorage);

    v9 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendManager];
    v10 = swift_allocObject(&unk_1007AA498, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    aBlock[4] = sub_10004E738;
    v13 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000058A4;
    aBlock[3] = &unk_1007AA618;
    v11 = _Block_copy(aBlock);
    objc_msgSend(v9, "cloudKitAccountStatusWithCompletion:", v11, swift_release(v13).n128_f64[0]);
    _Block_release(v11);

  }
}

void sub_1005807B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *Strong;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char v27[24];

  v3 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v7 = static os_log_type_t.default.getter(v6);
  v8 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v8, "Received Watch pairing changed notification", 43, 2, &_swiftEmptyArrayStorage);

  swift_beginAccess(a2, v27, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    v12 = FIDeviceMeetsMinimumOSVersionDaytona(v10, v11);
    v14 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion;
    if ((_DWORD)v12 != v10[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion])
    {
      v15 = FIDeviceMeetsMinimumOSVersionDaytona(v12, v13);
      v10[v14] = v15;
      v16 = sub_100581FD0(v15);
      v17 = v16;
      v19 = FIDeviceMeetsMinimumOSVersionDaytona(v16, v18);
      v10[v14] = v19;
      v20 = static os_log_type_t.default.getter(v19);
      v21 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v21, "Handling account status change", 30, 2, &_swiftEmptyArrayStorage);

      v22 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
      v23 = swift_allocObject(&unk_1007AA600, 41, 7);
      *(_QWORD *)(v23 + 16) = 0;
      *(_QWORD *)(v23 + 24) = 0;
      *(_QWORD *)(v23 + 32) = v10;
      *(_BYTE *)(v23 + 40) = v17 & 1;
      v24 = v10;
      v25 = sub_10020D9C0((uint64_t)v5, (uint64_t)&unk_10083B520, v23);
      swift_release(v25);
    }

  }
}

id sub_1005809C0()
{
  void *v0;
  __CFNotificationCenter *v1;
  id v2;
  objc_super v4;

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v0);

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v2, "removeObserver:", v0);

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FriendsSetupCoordinator(0);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100580BB8()
{
  return type metadata accessor for FriendsSetupCoordinator(0);
}

void sub_100580BC0(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  Class isa;
  NSString v23;
  void *v24;
  id v25;
  __n128 v26;
  void *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v2 = a1 & 1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v46 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v44 = (char *)v40 - v13;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) != v2)
  {
    v40[1] = v1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) = v2;
    v18 = (void *)objc_opt_self(NSUserDefaults);
    v43 = v6;
    v19 = v18;
    v20 = objc_msgSend(v18, "standardUserDefaults");
    v41 = v3;
    v21 = v20;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v23 = String._bridgeToObjectiveC()();
    v42 = v4;
    v24 = v23;
    objc_msgSend(v21, "setValue:forKey:", isa, v23);

    v25 = objc_msgSend(v19, "standardUserDefaults");
    Date.init()(v25);
    NSUserDefaults.set<A>(_:for:)(v17, 0xD000000000000043, 0x80000001006A7150, v14);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v26);
    static DispatchTime.now()(v27);
    v28 = v44;
    + infix(_:_:)(v11, 600.0);
    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30 = v45;
    v29(v11, v45);
    v31 = swift_allocObject(&unk_1007AA498, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16);
    aBlock[4] = sub_100582EC4;
    v50 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007AA4B0;
    v32 = _Block_copy(aBlock);
    swift_release(v50);
    v33 = v46;
    static DispatchQoS.unspecified.getter(v34);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v35 = sub_10002FAC0();
    v36 = sub_100047110(&qword_100828C80);
    v37 = sub_10002FB08();
    v38 = v43;
    v39 = v41;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v41, v35);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v28, v33, v38, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
    v29(v28, v30);
  }
}

void sub_100580F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  char v7;
  os_log_type_t v8;
  void *v9;
  NSObject *v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    swift_beginAccess(v2, v28, 0, 0);
    v5 = swift_unknownObjectWeakLoadStrong(v2);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = sub_10000F414();

    }
    else
    {
      v7 = 0;
    }
    v4[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] = v7 & 1;

  }
  v8 = static os_log_type_t.default.getter(Strong);
  v9 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v8))
  {
    swift_retain_n(a1, 2);
    v10 = v9;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v27 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_beginAccess(v2, v26, 0, 0);
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v2);
    if (v13)

    v14 = sub_100047110(&qword_10083B4F0);
    v15 = Optional.description.getter(v14);
    v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
    v25 = sub_10003E8EC(v15, v16, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v11 + 4);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v17, v18, v19, v20, v21, v22, v23, v24);
    _os_log_impl((void *)&_mh_execute_header, v10, v8, "No longer assuming parity between phone and watch, resetting assumption to value from cache: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
}

uint64_t sub_100581188(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1007AA420, 40, 7);
  v14[2] = a2;
  v14[3] = a1;
  v14[4] = a3;
  aBlock[4] = sub_100582E20;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007AA438;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a1);
  v17 = a3;
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10002FAC0();
  v20 = sub_100047110(&qword_100828C80);
  v21 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_100581384(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_log_type_t v13;
  void *v14;
  os_log_type_t v15;
  NSObject *v16;
  uint8_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  Class isa;
  char v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  int v47;
  uint64_t v48;
  os_log_type_t v49;
  void *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint8_t *v53;
  uint64_t v54;
  unsigned __int8 v55;
  id v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD v71[2];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  unsigned __int8 v76;

  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081E650);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = static os_log_type_t.fault.getter(v10);
    v14 = (void *)HKLogActivity;
    v15 = v13;
    if (os_log_type_enabled(HKLogActivity, v13))
    {
      swift_errorRetain(a1);
      swift_errorRetain(a1);
      v16 = v14;
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v17 = 138412290;
      swift_errorRetain(a1);
      v19 = _swift_stdlib_bridgeErrorToNSError(a1);
      *(_QWORD *)&v72 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, (char *)&v72 + 8, v17 + 4);
      *v18 = v19;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v16, v15, "Failed to fetch watch accounts info with error: %@", v17, 0xCu);
      v20 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v18, 1, v20);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    goto LABEL_40;
  }
  v21 = static os_log_type_t.default.getter(v10);
  v22 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v21, &_mh_execute_header, v22, "Successfully fetched watch account info from NSS.", 49, 2, _swiftEmptyArrayStorage);

  v76 = 0;
  if (!a2)
  {
    v74 = 0u;
    v75 = 0u;
LABEL_28:
    v27 = sub_10001BE90((uint64_t)&v74, (uint64_t *)&unk_100828420);
    goto LABEL_29;
  }
  v71[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(kNSSAccountsKey);
  v71[1] = v23;
  AnyHashable.init<A>(_:)(&v72, v71, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v24 = sub_10004C814((uint64_t)&v72), (v25 & 1) != 0))
  {
    sub_10003E9BC(*(_QWORD *)(a2 + 56) + 32 * v24, (uint64_t)&v74);
  }
  else
  {
    v74 = 0u;
    v75 = 0u;
  }
  sub_10004CC10((uint64_t)&v72);
  if (!*((_QWORD *)&v75 + 1))
    goto LABEL_28;
  v26 = sub_100047110(&qword_10083B4E8);
  v27 = swift_dynamicCast(&v72, &v74, (char *)&type metadata for Any + 8, v26, 6);
  if ((v27 & 1) == 0)
  {
LABEL_29:
    v43 = static os_log_type_t.fault.getter(v27);
    v44 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v43, &_mh_execute_header, v44, "Failed to access accounts dictionary from NSS. Unable to determine if watch account exists.", 91, 2, _swiftEmptyArrayStorage);
    goto LABEL_30;
  }
  v28 = v72;
  v29 = *(_QWORD *)(v72 + 16);
  if (!v29)
  {
    swift_bridgeObjectRelease(v72);
    goto LABEL_31;
  }
  v30 = 0;
  v31 = kNSSAccountIsPrimaryiCloudAccountKey;
  v70 = (char *)&type metadata for Any + 8;
  while (1)
  {
    v32 = *(_QWORD *)(v28 + 8 * v30 + 32);
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v35 = v34;
    if (*(_QWORD *)(v32 + 16))
    {
      v36 = v33;
      swift_bridgeObjectRetain(v32);
      v37 = sub_100438F74(v36, v35);
      if ((v38 & 1) != 0)
      {
        sub_10003E9BC(*(_QWORD *)(v32 + 56) + 32 * v37, (uint64_t)&v72);
      }
      else
      {
        v72 = 0u;
        v73 = 0u;
      }
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v72 = 0u;
      v73 = 0u;
    }
    swift_bridgeObjectRelease(v35);
    if (*((_QWORD *)&v73 + 1))
    {
      v39 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
      if (swift_dynamicCast(&v74, &v72, v70, v39, 6))
      {
        isa = (Class)v74;
        goto LABEL_24;
      }
    }
    else
    {
      sub_10001BE90((uint64_t)&v72, (uint64_t *)&unk_100828420);
    }
    sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
    isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
LABEL_24:
    v41 = Bool.init(truncating:)(isa);

    if ((v41 & 1) != 0)
      break;
    if (v29 == ++v30)
    {
      swift_bridgeObjectRelease(v28);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease(v28);
  v76 = 1;
  v68 = static os_log_type_t.default.getter(v67);
  v44 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v68, &_mh_execute_header, v44, "Found a primary account from NSS. Setting watchAccountExists to true.", 69, 2, _swiftEmptyArrayStorage);
LABEL_30:

LABEL_31:
  if (a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist] == 1)
  {
    v45 = static os_log_type_t.default.getter(v42);
    v46 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v45, &_mh_execute_header, v46, "Currently assuming parity between phone and watch, ignoring this result", 71, 2, _swiftEmptyArrayStorage);

  }
  else
  {
    v47 = v76;
    v48 = OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists;
    if (v76 != a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists])
    {
      v49 = static os_log_type_t.default.getter(v42);
      v50 = (void *)HKLogActivity;
      v51 = v49;
      if (os_log_type_enabled(HKLogActivity, v49))
      {
        v52 = v50;
        v53 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v53 = 67109120;
        LODWORD(v72) = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, (char *)&v72 + 4, v53 + 4);
        _os_log_impl((void *)&_mh_execute_header, v52, v51, "Watch CloudKit status changed to %{BOOL}d handling.", v53, 8u);
        swift_slowDealloc(v53, -1, -1);

      }
      v54 = swift_beginAccess(&v76, &v72, 0, 0);
      v55 = v76;
      if (v76 != a3[v48])
      {
        a3[v48] = v76;
        v56 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        LOBYTE(v74) = v55;
        NSUserDefaults.set<A>(_:for:)(&v74, 0xD000000000000031, 0x80000001006A6FD0, &type metadata for Bool);

      }
      v57 = sub_100581FD0(v54);
      v58 = FIDeviceMeetsMinimumOSVersionDaytona();
      a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion] = v58;
      v59 = static os_log_type_t.default.getter(v58);
      v60 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v59, &_mh_execute_header, v60, "Handling account status change", 30, 2, _swiftEmptyArrayStorage);

      v61 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v12, 1, 1, v61);
      v62 = swift_allocObject(&unk_1007AA470, 41, 7);
      *(_QWORD *)(v62 + 16) = 0;
      *(_QWORD *)(v62 + 24) = 0;
      *(_QWORD *)(v62 + 32) = a3;
      *(_BYTE *)(v62 + 40) = v57 & 1;
      v63 = a3;
      v64 = sub_10020D9C0((uint64_t)v12, (uint64_t)&unk_10083B4E0, v62);
      swift_release(v64);
    }
    Date.init()(v42);
    v65 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v8, 0, 1, v65);
    v66 = (uint64_t)&a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastWatchCloudKitAccountFetchTimestamp];
    swift_beginAccess(&a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_lastWatchCloudKitAccountFetchTimestamp], &v74, 33, 0);
    sub_10004D99C((uint64_t)v8, v66);
    swift_endAccess(&v74);
  }
LABEL_40:
  a3[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountFetchInProgress] = 0;
}

uint64_t sub_100581B18(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_100581BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 64) = a5;
  *(_QWORD *)(v5 + 24) = a4;
  return swift_task_switch(sub_100581BC8, 0, 0);
}

uint64_t sub_100581BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100581C34, v2, v3);
}

uint64_t sub_100581C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  KeyPath = swift_getKeyPath(&unk_1006473B0);
  v3 = swift_getKeyPath(&unk_1006473D8);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  *(_BYTE *)(v0 + 65) = *(_BYTE *)(v0 + 16);
  return swift_task_switch(sub_100581CCC, 0, 0);
}

id sub_100581CCC(id a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_currentlyPairedWatchIsMinimumVersion) & 1) != 0)
    goto LABEL_5;
  a1 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_friendListSectionManager), "hasAnyFriendsSetup");
  if ((a1 & 1) != 0)
    goto LABEL_5;
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    v5 = (unint64_t)objc_msgSend(result, "fitnessMode");

    if ((v5 & 0xFFFFFFFFFFFFFFFELL) != 2)
    {
      v13 = static os_log_type_t.default.getter(a1);
      v14 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v14, "Showing upgrade watch page.", 27, 2, &_swiftEmptyArrayStorage);

      return (id)(*(uint64_t (**)(void))(v1 + 8))();
    }
LABEL_5:
    if ((*(_BYTE *)(v1 + 64) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + 65) & 1) == 0)
      {
        v6 = *(_QWORD *)(v1 + 32);
        *(_QWORD *)(v1 + 56) = static MainActor.shared.getter(a1);
        v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
        v9 = v8;
        v10 = sub_100581F54;
        return (id)swift_task_switch(v10, v7, v9);
      }
    }
    else if ((*(_BYTE *)(v1 + 65) & 1) == 0)
    {
      v11 = *(_QWORD *)(v1 + 32);
      *(_QWORD *)(v1 + 48) = static MainActor.shared.getter(a1);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
      v9 = v12;
      v10 = sub_100581E54;
      return (id)swift_task_switch(v10, v7, v9);
    }
    return (id)(*(uint64_t (**)(void))(v1 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_100581E54()
{
  _QWORD *v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = (void *)v0[3];
  swift_release(v0[6]);
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v3 = swift_getKeyPath(&unk_100647420);
  v0[2] = 1;
  static Published.subscript.setter(v0 + 2, v1, KeyPath, v3);
  return swift_task_switch(sub_100581EE0, 0, 0);
}

uint64_t sub_100581EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Showing iCloud signin page.", 27, 2, _swiftEmptyArrayStorage);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100581F54()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v3 = swift_getKeyPath(&unk_100647420);
  *(_QWORD *)(v0 + 16) = 0;
  static Published.subscript.setter(v0 + 16, v1, KeyPath, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100581FD0(uint64_t a1)
{
  void *v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v5 = v1;
    v6 = v3;
    v7 = swift_slowAlloc(20, -1);
    *(_DWORD *)v7 = 67109632;
    v13 = v5[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v7 + 4);
    *(_WORD *)(v7 + 8) = 1024;
    v12 = v5[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v7 + 10);
    *(_WORD *)(v7 + 14) = 1024;
    v11 = v5[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v7 + 16);

    _os_log_impl((void *)&_mh_execute_header, v6, v4, "Deriving account status from: [phone=%{BOOL}d], [watch=%{BOOL}d], [watch(assumed)=%{BOOL}d]", (uint8_t *)v7, 0x14u);
    swift_slowDealloc(v7, -1, -1);

  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive) != 1)
    return 0;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) & 1) != 0
    || (*((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountAssumedToExist) & 1) != 0)
  {
    return 1;
  }
  result = (uint64_t)objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v9 = (void *)result;
    v10 = (unint64_t)objc_msgSend((id)result, "fitnessMode");

    return (v10 & 0xFFFFFFFFFFFFFFFELL) == 2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005821D0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for FriendsSetupCoordinator(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_100582258()
{
  sub_100582290(0xD000000000000035, 0x80000001006A6EB0);
}

void sub_100582274()
{
  sub_100582290(0xD000000000000033, 0x80000001006A6E70);
}

void sub_100582290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  Class isa;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v4 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v7)
  {
    v8 = v7;
    URL.init(string:)(a1, a2);
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v12 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      URL._bridgeToObjectiveC()(v11);
      v12 = v13;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    }
    v14 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8((uint64_t)&_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
    objc_msgSend(v8, "openSensitiveURL:withOptions:", v12, isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005824AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v5 = swift_getKeyPath(&unk_100647420);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_100582528(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006473F8);
  v5 = swift_getKeyPath(&unk_100647420);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100582594(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

uint64_t sub_1005825BC(uint64_t *a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  double v9;
  uint64_t v10;

  v5 = a4();
  v6 = *a1;
  v7 = *a1 + 8;
  v9 = v5;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v6);
  *a1 = v7;
  return result;
}

void sub_10058260C(char a1)
{
  __CFString *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  id v5;
  NSString v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  os_log_type_t v16;
  void *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint8_t *v20;
  id v21;
  Class isa;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  __CFString *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  Class v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = (__CFString *)kASDomain;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kASDomain);
  v4 = v3;
  v5 = objc_allocWithZone((Class)NSUserDefaults);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
  v14 = objc_msgSend(v5, "initWithSuiteName:", v6);

  v16 = static os_log_type_t.default.getter(v15);
  v17 = (void *)HKLogActivity;
  v18 = os_log_type_enabled(HKLogActivity, v16);
  if (v14)
  {
    if (v18)
    {
      v19 = v17;
      v20 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v20 = 67109120;
      LODWORD(v53) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4, v20 + 4);
      _os_log_impl((void *)&_mh_execute_header, v19, v16, "Setting defaults for fitness friends setup: %{BOOL}d", v20, 8u);
      swift_slowDealloc(v20, -1, -1);

    }
    v21 = v14;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v23 = kASActivitySharingIsSetup;
    objc_msgSend(v21, "setValue:forKey:", isa, kASActivitySharingIsSetup);

    CFPreferencesAppSynchronize(v2);
    v24 = objc_msgSend(objc_allocWithZone((Class)NPSManager), "init");
    v25 = sub_100047110(&qword_100820020);
    inited = swift_initStackObject(v25, &v51);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    *(_QWORD *)(inited + 40) = v27;
    v28 = v2;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100230B90(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    v30 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29, v31, v32, v33, v34, v35, v36, v37);
    objc_msgSend(v24, "synchronizeUserDefaultsDomain:keys:", v28, v30);

  }
  else if (v18)
  {
    v38 = v17;
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v53 = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v43 = (CHWorkoutDetailHeartRateTableViewCell *)v42;
    v52 = sub_10003E8EC(v41, v42, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v39 + 4);
    swift_bridgeObjectRelease(v43, v44, v45, v46, v47, v48, v49, v50);
    _os_log_impl((void *)&_mh_execute_header, v38, v16, "Error fetching UserDefaults with suitename %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
}

void sub_10058294C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSURL *v24;
  void *v25;
  void *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  Class isa;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void (*v49)();
  uint64_t v50;

  v3 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v9 = *(v43 - 1);
  __chkstk_darwin(v43);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS.QoSClass(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    v20 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v20)
    {
      v21 = v20;
      URL.init(string:)(0xD000000000000032, 0x80000001006A6E30);
      v22 = type metadata accessor for URL(0);
      v23 = *(_QWORD *)(v22 - 8);
      v25 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22) != 1)
      {
        URL._bridgeToObjectiveC()(v24);
        v25 = v26;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
      }
      v27 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8((uint64_t)&_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v27, v29, v30, v31, v32, v33, v34, v35);
      objc_msgSend(v21, "openSensitiveURL:withOptions:", v25, isa);

    }
    else
    {
      __break(1u);
    }
  }
  else if (a1 == 1)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_phoneCloudKitAccountIsActive) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator_watchCloudKitAccountExists) & 1) != 0)
        return;
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v18 = (void *)static OS_dispatch_queue.main.getter(v17);
      v49 = sub_100582274;
      v50 = 0;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v19 = &unk_1007AA398;
    }
    else
    {
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for DispatchQoS.QoSClass.default(_:), v12);
      v18 = (void *)static OS_dispatch_queue.global(qos:)(v16);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v49 = sub_100582258;
      v50 = 0;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v19 = &unk_1007AA370;
    }
    v47 = sub_10002D0F8;
    v48 = v19;
    v37 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v37);
    v44 = &_swiftEmptyArrayStorage;
    v38 = sub_10002FAC0();
    v39 = sub_100047110(&qword_100828C80);
    v40 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v39, v40, v6, v38);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v6);
    (*(void (**)(char *, _QWORD *))(v9 + 8))(v11, v43);
  }
  else if (a1)
  {
    v36 = static os_log_type_t.fault.getter(v14);
    v43 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v36, &_mh_execute_header, v43, "Found unknown friend setup state.", 33, 2, &_swiftEmptyArrayStorage);

  }
  else
  {
    sub_10058260C(1);
  }
}

uint64_t sub_100582DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100582DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100581188(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100582DEC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100582E20()
{
  uint64_t v0;

  sub_100581384(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE **)(v0 + 32));
}

uint64_t sub_100582E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc(dword_10083B4DC);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1000EA380;
  *(_BYTE *)(v4 + 64) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  return swift_task_switch(sub_100581BC8, 0, 0);
}

uint64_t sub_100582EA0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100582EC4()
{
  uint64_t v0;

  sub_100580F84(v0);
}

uint64_t sub_100582ECC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100582F00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10083B50C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_1005801B0(a1, v4, v5, v7, v6);
}

void sub_100582F78(uint64_t a1)
{
  uint64_t v1;

  sub_10058063C(a1, v1);
}

void sub_100582F80(uint64_t a1)
{
  uint64_t v1;

  sub_1005807B8(a1, v1);
}

uint64_t sub_100582F88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100582FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc(dword_10083B4DC);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1000DA0E4;
  *(_BYTE *)(v4 + 64) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  return swift_task_switch(sub_100581BC8, 0, 0);
}

uint64_t sub_100583020()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 41, 7);
}

double sub_100583088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double result;
  _QWORD v24[4];

  v4 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1007AA6A0, 48, 7);
  v9[2] = 0;
  v10 = v9 + 2;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_10003423C((uint64_t)v6);
    v12 = 0;
    v13 = 0;
    v14 = 7168;
  }
  else
  {
    v15 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v14 = v15 | 0x1C00;
    v16 = *v10;
    if (*v10)
    {
      v17 = v9[3];
      ObjectType = swift_getObjectType(*v10);
      swift_unknownObjectRetain(v16);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v13 = v19;
      swift_unknownObjectRelease(v16);
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v20 = swift_allocObject(&unk_1007AA6C8, 32, 7);
  *(_QWORD *)(v20 + 16) = &unk_10082AE88;
  *(_QWORD *)(v20 + 24) = v9;
  if (v13 | v12)
  {
    v24[0] = 0;
    v24[1] = 0;
    v21 = v24;
    v24[2] = v12;
    v24[3] = v13;
  }
  else
  {
    v21 = 0;
  }
  v22 = swift_task_create(v14, v21, (char *)&type metadata for () + 8, &unk_1008282A0, v20);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_10058325C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1000EA380;
  return v7();
}

uint64_t sub_1005832B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005832DC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10083B534);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000DA0E4;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc(v2[1]);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1000EA380;
  return v6();
}

uint64_t sub_100583358()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10058339C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  if (v1)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "startAnimating");
  v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v4 = swift_allocObject(&unk_1007AA6F0, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v8[4] = sub_100257A18;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100583FE8;
  v8[3] = &unk_1007AA708;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = v0;
  objc_msgSend(v2, "trackLapsForWorkout:completion:", v3, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

void sub_1005834A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  dispatch_group_t v33;
  id v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  id v39;
  NSObject *v40;
  id v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  dispatch_group_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  unint64_t v56;
  dispatch_group_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[8];
  _QWORD *v64;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  void *v69;
  _QWORD *v70;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = sub_100047110(&qword_10082CEC0);
    v16 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v63, &v61);
    v17 = v61;
    v18 = v62;
    *(_QWORD *)(v16 + 56) = v62;
    v19 = sub_10004C480((_QWORD *)(v16 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v16, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
    return;
  }
  if (a1)
  {
    v59 = v12;
    v57 = dispatch_group_create();
    v49 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    v22 = swift_allocObject(&unk_1007AA740, 32, 7);
    *(_QWORD *)(v22 + 16) = a3;
    *(_QWORD *)(v22 + 24) = a1;
    v69 = sub_100584664;
    v70 = (_QWORD *)v22;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007AA758;
    v23 = _Block_copy(&aBlock);
    v60 = a1;
    v24 = v23;
    v25 = v70;
    v58 = a3;
    swift_bridgeObjectRetain(v60);
    swift_release(v25);
    static DispatchQoS.unspecified.getter(v26);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v27 = sub_10002FAC0();
    v28 = sub_100047110(&qword_100828C80);
    v29 = sub_10002FB08();
    v55 = v28;
    v56 = v27;
    v53 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v28, v29, v6, v27);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v24);
    v30 = v60;
    _Block_release(v24);

    v54 = *(void (**)(char *, uint64_t))(v7 + 8);
    v54(v9, v6);
    v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v14, v59);
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0)
        v42 = v30 & 0xFFFFFFFFFFFFFF8;
      else
        v42 = v30;
      swift_bridgeObjectRetain(v30);
      v31 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v31)
        goto LABEL_6;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v30);
      if (v31)
      {
LABEL_6:
        if (v31 < 1)
        {
          __break(1u);
          return;
        }
        v32 = 0;
        v51 = *(_QWORD *)&v58[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue];
        v50 = v30 & 0xC000000000000001;
        v33 = v57;
        do
        {
          if (v50)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
          else
            v34 = *(id *)(v30 + 8 * v32 + 32);
          v35 = v34;
          v36 = (_QWORD *)swift_allocObject(&unk_1007AA790, 40, 7);
          v37 = v58;
          v36[2] = v58;
          v36[3] = v35;
          v36[4] = v32;
          v69 = sub_100584698;
          v70 = v36;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_10002D0F8;
          v68 = &unk_1007AA7A8;
          v38 = _Block_copy(&aBlock);
          v39 = v37;
          v40 = v33;
          v41 = v35;
          static DispatchQoS.unspecified.getter(v41);
          v64 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
          OS_dispatch_queue.async(group:qos:flags:execute:)(v33, v14, v9, v38);
          _Block_release(v38);

          v54(v9, v6);
          v52(v14, v59);
          swift_release(v70);
          ++v32;
          v30 = v60;
        }
        while (v31 != v32);
      }
    }
    v43 = swift_bridgeObjectRelease(v30);
    v44 = (void *)static OS_dispatch_queue.main.getter(v43);
    v45 = swift_allocObject(&unk_1007AA7E0, 24, 7);
    v46 = v58;
    *(_QWORD *)(v45 + 16) = v58;
    v69 = sub_10030C498;
    v70 = (_QWORD *)v45;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_1007AA7F8;
    v47 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v46);
    v64 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
    v48 = v57;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v14, v9, v44, v47);
    _Block_release(v47);

    v54(v9, v6);
    v52(v14, v59);
    swift_release(v70);
  }
}

uint64_t sub_100583A10(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_14;
  v26 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v4);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v25 = a1;
    v7 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a2);
      else
        v19 = *(id *)(a2 + 8 * v7 + 32);
      v20 = v19;
      v21 = objc_msgSend(v19, "distance", v25);
      if (v21)
      {
        v8 = v21;
        v9 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
        objc_msgSend(v8, "doubleValueForUnit:", v9);
        v11 = v10;

      }
      else
      {
        v11 = 0;
      }
      ++v7;
      objc_msgSend(v20, "elapsedTime");
      v13 = v12;
      v14 = type metadata accessor for WorkoutDurationMetrics();
      v15 = swift_allocObject(v14, 160, 7);
      *(_QWORD *)(v15 + 16) = 0;
      *(_QWORD *)(v15 + 24) = 0;
      *(_QWORD *)(v15 + 48) = 0;
      *(_BYTE *)(v15 + 56) = 1;
      *(_QWORD *)(v15 + 72) = 0;
      *(_BYTE *)(v15 + 80) = 1;
      *(_OWORD *)(v15 + 88) = 0u;
      *(_OWORD *)(v15 + 104) = 0u;
      *(_QWORD *)(v15 + 120) = 0;
      *(_BYTE *)(v15 + 128) = 1;
      *(_QWORD *)(v15 + 144) = 0;
      *(_QWORD *)(v15 + 152) = 0;
      *(_QWORD *)(v15 + 136) = 0;
      *(_QWORD *)(v15 + 32) = v11;
      *(_BYTE *)(v15 + 40) = 0;
      *(_QWORD *)(v15 + 64) = v13;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v26[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
    }
    while (v4 != v7);
    a1 = v25;
    v5 = v26;
LABEL_14:
    KeyPath = swift_getKeyPath(&unk_100647500);
    v23 = swift_getKeyPath(&unk_100647528);
    v26 = v5;
    static Published.subscript.setter(&v26, a1, KeyPath, v23);
    return sub_10028F290();
  }
  __break(1u);
  return result;
}

uint64_t sub_100583C58(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  _QWORD *v36;

  v31 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v12 = *(_QWORD *)&a1[OBJC_IVAR___CHWorkoutDetailTrackLapDataSource_distanceUnit];
  v13 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v14 = type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject(v14, 160, 7);
  v15 = v11;
  v16 = a2;
  v17 = v13;
  v18 = sub_100355AE8(v15, v16, v12, v17, 0, 0);

  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_1007AA830, 40, 7);
  v22 = v31;
  v21[2] = a1;
  v21[3] = v22;
  v21[4] = v18;
  aBlock[4] = sub_1005846D0;
  v36 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007AA848;
  v23 = _Block_copy(aBlock);
  v24 = v36;
  v25 = a1;
  swift_retain(v18);
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_10002FAC0();
  v28 = sub_100047110(&qword_100828C80);
  v29 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v5, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v23);
  _Block_release(v23);
  swift_release(v18);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v33);
}

uint64_t sub_100583EE4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  KeyPath = swift_getKeyPath(&unk_100647500);
  v7 = swift_getKeyPath(&unk_100647528);
  swift_retain(a3);
  v8 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v15, a1, KeyPath, v7);
  v10 = v9;
  v11 = *v9;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v9);
  *v10 = v11;
  if (!(_DWORD)result || v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    result = sub_1004DEE2C(v11);
    v11 = result;
    *v10 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    v14 = swift_release(v13);
    specialized Array._endMutation()(v14);
    v8(v15, 0);
    swift_release(KeyPath);
    return swift_release(v7);
  }
  __break(1u);
  return result;
}

double sub_100583FE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10001E724(0, &qword_10083B570, &off_100776630);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_100584074(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66[2];
  char v67;
  uint64_t v68;

  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - v10;
  KeyPath = swift_getKeyPath(&unk_100647548);
  v13 = swift_getKeyPath(&unk_100647570);
  static Published.subscript.getter(v66, v2, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)v66[0]->cellPadding <= a2)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v21 = *((_BYTE *)&v66[0][1].super.super.super.super.isa + a2);
  swift_bridgeObjectRelease(v66[0], v14, v15, v16, v17, v18, v19, v20);
  v22 = sub_1001A561C(v21);
  if (v22 == 0x65636E6174736964 && v23 == (const char *)0xE800000000000000)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v23, v24, v25, v26, v27, v28, v29);
  }
  else
  {
    v31 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0x65636E6174736964, 0xE800000000000000, 0);
    swift_bridgeObjectRelease(v31, v33, v34, v35, v36, v37, v38, v39);
    if ((v32 & 1) == 0)
    {
      sub_100290D80(a1, a2);
      return;
    }
  }
  sub_10028F028(a1, *(CHWorkoutDetailHeartRateTableViewCell **)(v2 + OBJC_IVAR___CHWorkoutDetailTrackLapDataSource_distanceUnit), 0, (uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v40 = Text.init(_:)(v8);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_1001A5D38(1);
  v48 = v47;
  v49 = (CHWorkoutDetailHeartRateTableViewCell *)Text.foregroundColor(_:)(v47, v40, v42, v46, v44);
  v64 = v11;
  v65 = v5;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  swift_release(v48);
  sub_1000E4458(v40, v42, v46);
  swift_bridgeObjectRelease(v44, v56, v57, v58, v59, v60, v61, v62);
  v66[0] = v49;
  v66[1] = v51;
  v67 = v53 & 1;
  v68 = v55;
  AnyView.init<A>(_:)(v66, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v64, v65);
}

uint64_t sub_1005842C8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100647500);
  v5 = swift_getKeyPath(&unk_100647528);
  static Published.subscript.getter(&v15, v2, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v15;
  if ((v15 & 0xC000000000000001) != 0)
  {
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v15);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(v15 + 8 * a1 + 32);
  swift_retain(v8);
LABEL_5:
  swift_bridgeObjectRelease(v7);
  if (*(_QWORD *)(v8 + 24))
  {
    v9 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain(*(_QWORD *)(v8 + 24));
    swift_release(v8);
    return v9;
  }
  result = objc_opt_self(NSNumberFormatter);
  v10 = __OFADD__(a1, 1);
  v11 = a1 + 1;
  if (!v10)
  {
    v12 = (void *)result;
    v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v11);
    v14 = objc_msgSend(v12, "localizedStringFromNumber:numberStyle:", v13, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    swift_release(v8);

    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_100584548()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailTrackLapDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10058457C()
{
  return type metadata accessor for WorkoutDetailTrackLapDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailTrackLapDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10083B560;
  if (!qword_10083B560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailTrackLapDataSource);
  return result;
}

uint64_t sub_1005845C0(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 432);
}

uint64_t sub_100584614()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100584638()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100584664()
{
  uint64_t v0;

  return sub_100583A10(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10058466C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100584698()
{
  uint64_t v0;

  return sub_100583C58(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1005846A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005846D0()
{
  uint64_t v0;

  return sub_100583EE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

char *sub_1005846F4(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  objc_class *v10;
  id v11;
  double v12;
  char *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  id v18;
  _QWORD *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  id v26;
  NSString v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  NSString v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  char *result;
  char *v40;
  char *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  objc_super v46;

  v7 = type metadata accessor for EntryLinksListView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_dashboardViewController] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_catalogTipDataModel] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_summaryUserProfile] = a3;
  v10 = (objc_class *)type metadata accessor for EntryLinksViewController();
  v46.receiver = v3;
  v46.super_class = v10;
  v11 = a1;
  *(_QWORD *)&v12 = swift_retain(a2).n128_u64[0];
  v13 = (char *)objc_msgSendSuper2(&v46, "initWithNibName:bundle:", 0, 0, v12);
  v14 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_dashboardViewController];
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_summaryUserProfile];
  *v9 = v14;
  v9[1] = v15;
  v45 = 0x403E000000000000;
  v16 = sub_10030A42C();
  v17 = v13;
  v18 = v14;
  ScaledMetric.init(wrappedValue:)(&v45, &type metadata for Double, v16);
  v19 = (_QWORD *)((char *)v9 + *(int *)(v7 + 28));
  *v19 = 0x4024000000000000;
  v19[1] = 0;
  v19[2] = 0;
  v19[3] = 0;
  v20 = objc_allocWithZone((Class)sub_100047110(&qword_10083B5C0));
  v21 = (void *)UIHostingController.init(rootView:)(v9);
  v22 = *(void **)&v17[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController];
  *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController] = v21;
  v23 = v21;

  objc_msgSend(v17, "addChildViewController:", v23);
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = v17;
  v26 = objc_msgSend(v24, "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend(v25, "setTitle:", v31);

  result = (char *)objc_msgSend(v25, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v40 = result;
  result = (char *)objc_msgSend(v23, "view");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v41 = result;
  objc_msgSend(v40, "addSubview:", result);

  result = (char *)objc_msgSend(v25, "view");
  if (result)
  {
    v42 = result;
    v43 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    objc_msgSend(v42, "setBackgroundColor:", v43);

    swift_release(a2);
    return v25;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100584AAC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  objc_super v29;

  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for EntryLinksViewController();
  objc_msgSendSuper2(&v29, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24EntryLinksViewController_hostingController];
  if (!v1)
    goto LABEL_14;
  v2 = objc_msgSend(v1, "view");
  if (!v2)
    goto LABEL_14;
  v3 = v2;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = objc_msgSend(v3, "leadingAnchor");
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "leadingAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  objc_msgSend(v11, "setActive:", 1);
  v12 = objc_msgSend(v3, "trailingAnchor");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "safeAreaLayoutGuide");

  v16 = objc_msgSend(v15, "trailingAnchor");
  v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v3, "topAnchor");
  v19 = objc_msgSend(v0, "view");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "safeAreaLayoutGuide");

    v22 = objc_msgSend(v21, "topAnchor");
    v23 = objc_msgSend(v18, "constraintEqualToAnchor:", v22);

    objc_msgSend(v23, "setActive:", 1);
    v24 = objc_msgSend(v3, "bottomAnchor");
    v25 = objc_msgSend(v0, "view");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, "bottomAnchor");

      v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
      objc_msgSend(v28, "setActive:", 1);

      return;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010069A5F0, "FitnessApp/EntryListViewController.swift", 40, 2, 45, 0);
  __break(1u);
}

id sub_100584F74()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntryLinksViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EntryLinksViewController()
{
  return objc_opt_self(_TtC10FitnessApp24EntryLinksViewController);
}

ValueMetadata *type metadata accessor for AppSettingsPane()
{
  return &type metadata for AppSettingsPane;
}

unint64_t sub_10058501C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100585094(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100585050()
{
  unint64_t result;

  result = qword_10083B5C8;
  if (!qword_10083B5C8)
  {
    result = swift_getWitnessTable(&unk_100647650, &type metadata for AppSettingsPane);
    atomic_store(result, (unint64_t *)&qword_10083B5C8);
  }
  return result;
}

unint64_t sub_100585094(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

void sub_1005850DC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  NSString v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewController();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v1;
  objc_msgSend(v1, "setDelegate:", v0);

  v3 = objc_msgSend(v0, "collectionView");
  if (!v3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "setDataSource:", v0);

  v5 = objc_msgSend(v0, "collectionView");
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  objc_msgSend(v5, "setScrollEnabled:", 0);

  v7 = objc_msgSend(v0, "collectionView");
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  v9 = type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v11);

  v12 = objc_msgSend(v0, "collectionView");
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = v12;
  v14 = sub_100032490();
  objc_msgSend(v13, "setBackgroundColor:", v14);

  v15 = objc_msgSend(v0, "collectionView");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "reloadData");

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_100585344()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutAppRecommendationCollectionViewController()
{
  return objc_opt_self(_TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController);
}

unint64_t sub_1005853FC(void *a1)
{
  uint64_t v1;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  unint64_t result;
  uint64_t *v12;
  _QWORD v13[5];

  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v3, isa);

  v6 = type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
    return (unint64_t)v5;
  v8 = (char *)v7;
  v9 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_recentWorkoutAppRecommendations);
  v10 = v5;
  result = IndexPath.row.getter(v10);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v9 + 16))
  {
    sub_1000252E0(v9 + 40 * result + 32, (uint64_t)v13);
    v12 = sub_100016804((_QWORD *)(v1+ OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_appRecommendationDataProvider), *(_QWORD *)(v1+ OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_appRecommendationDataProvider+ 24));
    sub_100585884(v13, *v12, v8);

    _s10FitnessApp24HistoryViewActionContextVwxx_0(v13);
    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10058573C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16[2];
  __int128 v17[2];
  _QWORD v18[5];

  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = type metadata accessor for AppRecommendationDataProvider();
  v18[4] = &off_1007A2968;
  v18[0] = a2;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1000252E0((uint64_t)v18, (uint64_t)v17);
  sub_1000252E0(a1, (uint64_t)v16);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v10 = a3;
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_1007AA938, 120, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  sub_10002411C(v17, (uint64_t)(v12 + 5));
  sub_10002411C(v16, (uint64_t)(v12 + 10));
  v13 = sub_10020D9C0((uint64_t)v8, (uint64_t)&unk_10083B610, (uint64_t)v12);
  swift_release(v13);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v18);
}

uint64_t sub_100585884(_QWORD *a1, uint64_t a2, char *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  NSString v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t *v21;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v24 = type metadata accessor for AppRecommendationDataProvider();
  v25 = &off_1007A2968;
  v23[0] = a2;
  v6 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel];
  v7 = a1[3];
  v8 = a1[4];
  sub_100016804(a1, v7);
  v9 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
  v10 = swift_retain(a2);
  v9(v7, v8, v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  objc_msgSend(v6, "setText:", v13);

  objc_msgSend(v6, "sizeToFit");
  v21 = sub_100016804(v23, v24);
  sub_10058573C((uint64_t)a1, *v21, a3);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v23);
}

unint64_t sub_100585988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  NSString v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC10FitnessApp48WorkoutAppRecommendationCollectionViewController_recentWorkoutAppRecommendations);
  result = IndexPath.row.getter(a1);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1000252E0(v2 + 40 * result + 32, (uint64_t)v17);
  result = (unint64_t)objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v4 = (void *)result;
    v5 = v18;
    v6 = v19;
    sub_100016804(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
    objc_msgSend(v4, "openApplicationWithBundleID:", v9);

    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v17);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100585A78()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 40));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100585AB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10082F144);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_100342264(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

id sub_100585B38()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSNumber v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  Class isa;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v0 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v2 = objc_msgSend(v1, "CGColor");

  objc_msgSend(v0, "setStrokeColor:", v2);
  objc_msgSend(v0, "setLineWidth:", 1.0);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100629280;
  sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  *(NSNumber *)(v4 + 32) = NSNumber.init(floatLiteral:)(3.0);
  v5.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  *(NSNumber *)(v4 + 40) = v5;
  specialized Array._endMutation()(v5.super.super.isa);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  objc_msgSend(v0, "setLineDashPattern:", isa);

  return v0;
}

id sub_100585C90()
{
  id v0;
  Class isa;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSNumber v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  Class v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v0 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58431, 0.0, 1.0).super.isa;
  v2 = -[objc_class CGColor](isa, "CGColor");

  objc_msgSend(v0, "setStrokeColor:", v2);
  objc_msgSend(v0, "setLineWidth:", 1.0);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100629280;
  sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  *(NSNumber *)(v4 + 32) = NSNumber.init(floatLiteral:)(5.0);
  v5.super.super.isa = NSNumber.init(floatLiteral:)(2.0).super.super.isa;
  *(NSNumber *)(v4 + 40) = v5;
  specialized Array._endMutation()(v5.super.super.isa);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)v4;
  v7 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  objc_msgSend(v0, "setLineDashPattern:", v7);

  return v0;
}

char *sub_100585E00(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  objc_class *v49;
  char *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  objc_super v61;
  _BYTE v62[56];
  _OWORD v63[3];
  uint64_t v64;
  _OWORD v65[3];
  uint64_t v66;

  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - v14;
  v16 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  v17 = objc_allocWithZone((Class)type metadata accessor for YearlyChartAxisLayer());
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, "init");
  v19 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  sub_10003D1C0(1, (uint64_t)v62, 0.0, 1.0);
  v20 = objc_allocWithZone((Class)type metadata accessor for LineSeriesLayer());
  *(_QWORD *)&v18[v19] = sub_100528610((uint64_t)v62);
  v21 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  *(_QWORD *)&v18[v21] = sub_100587340();
  v22 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  *(_QWORD *)&v18[v22] = sub_100587340();
  v23 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  *(_QWORD *)&v18[v23] = sub_100585B38();
  v24 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  *(_QWORD *)&v18[v24] = sub_100585C90();
  v25 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  *(_QWORD *)&v18[v25] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ChartValueGesturalOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthStrings] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels] = &_swiftEmptyArrayStorage;
  v26 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthFormatter;
  v27 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setLocalizedDateFormatFromTemplate:", v28);

  *(_QWORD *)&v18[v26] = v27;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter] = 0;
  v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType] = 9;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_months] = &_swiftEmptyArrayStorage;
  v29 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  v29[32] = 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = &_swiftEmptyArrayStorage;
  v31 = Date.init()(v30);
  v32 = Date.init()(v31);
  v33 = Date.timeIntervalSinceReferenceDate.getter(v32);
  v35 = Date.timeIntervalSinceReferenceDate.getter(v34);
  sub_10003D1C0(12, (uint64_t)v63, v33, v35);
  v60 = v63[2];
  v36 = v64;
  v37 = *(void (**)(char *, uint64_t))(v10 + 8);
  v59 = v63[1];
  v58 = v63[0];
  v37(v12, v9);
  v38 = ((uint64_t (*)(char *, uint64_t))v37)(v15, v9);
  v39 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram];
  v40 = v59;
  *(_OWORD *)v39 = v58;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v60;
  *((_QWORD *)v39 + 6) = v36;
  v41 = Date.init()(v38);
  v42 = Date.init()(v41);
  v43 = Date.timeIntervalSinceReferenceDate.getter(v42);
  v45 = Date.timeIntervalSinceReferenceDate.getter(v44);
  sub_10003D1C0(365, (uint64_t)v65, v43, v45);
  v60 = v65[2];
  v46 = v66;
  v59 = v65[1];
  v58 = v65[0];
  v37(v12, v9);
  v37(v15, v9);
  v47 = &v18[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitHistogram];
  v48 = v59;
  *(_OWORD *)v47 = v58;
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v60;
  *((_QWORD *)v47 + 6) = v46;

  v49 = (objc_class *)type metadata accessor for YearlyLineChartView();
  v61.receiver = v18;
  v61.super_class = v49;
  v50 = (char *)objc_msgSendSuper2(&v61, "initWithFrame:", a1, a2, a3, a4);
  v51 = objc_msgSend(v50, "layer");
  objc_msgSend(v51, "addSublayer:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer]);

  v52 = objc_msgSend(v50, "layer");
  objc_msgSend(v52, "addSublayer:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer]);

  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel]);
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel]);
  v53 = objc_msgSend(v50, "layer");
  objc_msgSend(v53, "addSublayer:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer]);

  v54 = objc_msgSend(v50, "layer");
  objc_msgSend(v54, "addSublayer:", *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer]);

  v55 = *(_QWORD *)&v50[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay];
  objc_msgSend(v50, "addSubview:", v55);
  v56 = v55 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource;
  *(_QWORD *)(v56 + 8) = &off_1007AA950;
  swift_unknownObjectWeakAssign(v56, v50);

  return v50;
}

uint64_t sub_10058637C(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[56];

  v2 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  v61 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer;
  v3 = objc_allocWithZone((Class)type metadata accessor for YearlyChartAxisLayer());
  v4 = v1;
  *(_QWORD *)&v1[v2] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  v58 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer;
  sub_10003D1C0(1, (uint64_t)v63, 0.0, 1.0);
  v6 = objc_allocWithZone((Class)type metadata accessor for LineSeriesLayer());
  *(_QWORD *)&v4[v5] = sub_100528610((uint64_t)v63);
  v7 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  v57 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel;
  v62 = type metadata accessor for YearlyLineChartView();
  *(_QWORD *)&v4[v7] = sub_100587340();
  v8 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  v56 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel;
  *(_QWORD *)&v4[v8] = sub_100587340();
  v9 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  v55 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer;
  *(_QWORD *)&v4[v9] = sub_100585B38();
  v10 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  v54 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer;
  *(_QWORD *)&v4[v10] = sub_100585C90();
  v11 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  v53 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay;
  *(_QWORD *)&v4[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ChartValueGesturalOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthStrings;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthStrings] = &_swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels] = &_swiftEmptyArrayStorage;
  v14 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthFormatter;
  v15 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setLocalizedDateFormatFromTemplate:", v16);

  *(_QWORD *)&v4[v14] = v15;
  v17 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_colors] = 0;
  v18 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter] = 0;
  v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType] = 9;
  v19 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit] = 0;
  v20 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_months;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_months] = &_swiftEmptyArrayStorage;
  v21 = &v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v21[32] = 1;
  v22 = OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = &_swiftEmptyArrayStorage;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v12], v23, v24, v25, v26, v27, v28, v29);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v13], v30, v31, v32, v33, v34, v35, v36);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v20], v37, v38, v39, v40, v41, v42, v43);
  v44 = *(CHWorkoutDetailHeartRateTableViewCell **)&v4[v22];

  swift_bridgeObjectRelease(v44, v45, v46, v47, v48, v49, v50, v51);
  swift_deallocPartialClassInstance(v4, v62, 288, 7);
  return 0;
}

id sub_10058668C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  double v29;
  double MaxY;
  double v31;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v2 = v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  v3 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram + 8);
  v33 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v3);
  sub_100529194(v4, v5, v6, v7, v8, v9, v10, v11);
  v13 = v12;
  swift_bridgeObjectRelease(v3, v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease(v33, v21, v22, v23, v24, v25, v26, v27);
  v28 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer);
  v29 = v13 / *(double *)(v2 + 24);
  objc_msgSend(v28, "bounds");
  MaxY = CGRectGetMaxY(v34);
  objc_msgSend(v28, "bounds");
  v31 = MaxY - v29 * CGRectGetHeight(v35);
  objc_msgSend(v1, "moveToPoint:", 0.0, v31);
  objc_msgSend(v28, "bounds");
  objc_msgSend(v1, "addLineToPoint:", CGRectGetMaxX(v36), v31);
  return v1;
}

id sub_1005867BC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double MaxX;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v3 = v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram + 8);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
    v6 = *(double *)(v4 + 32);
  else
    v6 = 0.0;
  v7 = *(double *)(v3 + 24);
  v8 = 1.0 - (v6 * a1 + a2) / v7;
  v9 = 1.0 - ((v6 + *(double *)(v3 + 16) * (double)v5) * a1 + a2) / v7;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v11 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer);
  objc_msgSend(v11, "bounds");
  objc_msgSend(v10, "moveToPoint:", 0.0, v8 * CGRectGetHeight(v14));
  objc_msgSend(v11, "bounds");
  MaxX = CGRectGetMaxX(v15);
  objc_msgSend(v11, "bounds");
  objc_msgSend(v10, "addLineToPoint:", MaxX, v9 * CGRectGetHeight(v16));
  return v10;
}

void sub_1005868D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  double v25;
  id v26;
  double MaxY;
  uint64_t v28;
  void *v29;
  CGFloat v30;
  CGFloat v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  double v39;
  int64_t v40;
  double v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  unint64_t v44;
  unint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  __n128 v47;
  void *v48;
  uint64_t v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  CGFloat v74;
  CGFloat v75;
  _QWORD aBlock[5];
  uint64_t v77;
  objc_super v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v71 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for DispatchQoS(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for YearlyLineChartView();
  v78.receiver = v0;
  v78.super_class = v5;
  objc_msgSendSuper2(&v78, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  x = v79.origin.x;
  y = v79.origin.y;
  width = v79.size.width;
  height = v79.size.height;
  v80 = CGRectInset(v79, 16.0, 24.0);
  v6 = v80.origin.x;
  v7 = v80.origin.y;
  v8 = v80.size.width;
  v9 = v80.size.height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer], "setFrame:");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer], "setFrame:", v6, v7, v8, v9);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer], "setFrame:", v6, v7, v8, v9);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer], "setFrame:", v6, v7, v8, v9);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_gestureOverlay], "setFrame:", v6, v7, v8, v9);
  v74 = v7;
  v75 = v6;
  v81.origin.x = v6;
  v81.origin.y = v7;
  v81.size.width = v8;
  v81.size.height = v9;
  v10 = CGRectGetWidth(v81);
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_monthLabels];
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v28 = v11;
    else
      v28 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v11);
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  v20 = 0;
  v21 = v10 / 11.0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v11);
    else
      v22 = *(id *)(v11 + 8 * v20 + 32);
    v23 = v22;
    v24 = v20 + 1;
    v25 = v21 * (double)v20 + 16.0;
    objc_msgSend(v22, "sizeToFit");
    v26 = v23;
    v82.origin.y = v74;
    v82.origin.x = v75;
    v82.size.width = v8;
    v82.size.height = v9;
    MaxY = CGRectGetMaxY(v82);
    objc_msgSend(v26, "bounds");
    objc_msgSend(v26, "setCenter:", v25, MaxY + CGRectGetHeight(v83) * 0.5 + 1.0);

    v20 = v24;
  }
  while (v12 != v24);
LABEL_13:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v11, v13, v14, v15, v16, v17, v18, v19);
  v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_maximumValueLabel];
  objc_msgSend(v29, "sizeToFit");
  objc_msgSend(v29, "frame");
  objc_msgSend(v29, "setFrame:", 16.0, 0.0);
  v31 = v74;
  v30 = v75;
  v84.origin.x = v75;
  v84.origin.y = v74;
  v84.size.width = v8;
  v84.size.height = v9;
  objc_msgSend(v29, "_setFirstLineCapFrameOriginY:", CGRectGetMinY(v84));
  v85.origin.x = v30;
  v85.origin.y = v31;
  v85.size.width = v8;
  v85.size.height = v9;
  v39 = CGRectGetWidth(v85);
  v40 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram] + 16);
  if (v40)
  {
    v41 = v39 / (double)(v40 - 1);
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_10012185C(0, v40, 0);
    v42 = 0;
    v43 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
    v44 = *(_QWORD *)(aBlock[0] + 16);
    do
    {
      aBlock[0] = v43;
      v45 = *(_QWORD *)v43->cellInset;
      if (v44 >= v45 >> 1)
      {
        sub_10012185C(v45 > 1, v44 + 1, 1);
        v43 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
      }
      *(_QWORD *)v43->cellPadding = v44 + 1;
      *((double *)&v43[1].super.super.super.super.isa + v44++) = v41 * (double)v42++;
    }
    while (v40 != v42);
  }
  else
  {
    v43 = &_swiftEmptyArrayStorage;
  }
  v46 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions] = v43;
  swift_bridgeObjectRelease(v46, v32, v33, v34, v35, v36, v37, v38);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v48 = (void *)static OS_dispatch_queue.main.getter(v47);
  v49 = swift_allocObject(&unk_1007AA970, 104, 7);
  *(_QWORD *)(v49 + 16) = v1;
  *(_OWORD *)(v49 + 24) = xmmword_1006476D0;
  v50 = v74;
  *(CGFloat *)(v49 + 40) = v75;
  *(CGFloat *)(v49 + 48) = v50;
  *(double *)(v49 + 56) = v8;
  *(double *)(v49 + 64) = v9;
  v51 = y;
  *(CGFloat *)(v49 + 72) = x;
  *(CGFloat *)(v49 + 80) = v51;
  v52 = height;
  *(CGFloat *)(v49 + 88) = width;
  *(CGFloat *)(v49 + 96) = v52;
  aBlock[4] = sub_100587820;
  v77 = v49;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007AA988;
  v53 = _Block_copy(aBlock);
  v54 = v77;
  v55 = v1;
  swift_release(v54);
  v56 = v68;
  static DispatchQoS.unspecified.getter(v57);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v58 = sub_10002FAC0();
  v59 = sub_100047110(&qword_100828C80);
  v60 = sub_10002FB08();
  v61 = v71;
  v62 = v73;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v59, v60, v73, v58);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v61, v53);
  _Block_release(v53);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v70);
}

id sub_100586EC8(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  double v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  double v44;
  double v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  double v60;
  double MaxY;
  double v62;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double Width;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v24 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageLayer);
  v25 = sub_10058668C();
  v26 = objc_msgSend(v25, "CGPath");

  objc_msgSend(v24, "setPath:", v26);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit + 32) & 1) == 0)
  {
    v27 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fitLayer);
    v28 = sub_1005867BC(*(double *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit), *(double *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_fit + 8));
    v29 = objc_msgSend(v28, "CGPath");

    objc_msgSend(v27, "setPath:", v29);
  }
  v30 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_lineSeriesLayer);
  v31 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v31, "begin");
  objc_msgSend(v31, "setDisableActions:", 1);
  sub_100528E24(v30);
  objc_msgSend(v31, "commit");
  v32 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_averageValueLabel);
  objc_msgSend(v32, "sizeToFit");
  objc_msgSend(v32, "frame");
  objc_msgSend(v32, "setFrame:", a2, a3);
  v33 = a5 + 4.0;
  v34 = a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram;
  v35 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram + 8);
  v72 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram);
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v35);
  sub_100529194(v36, v37, v38, v39, v40, v41, v42, v43);
  v45 = v44;
  swift_bridgeObjectRelease(v35, v46, v47, v48, v49, v50, v51, v52);
  swift_bridgeObjectRelease(v72, v53, v54, v55, v56, v57, v58, v59);
  v60 = v45 / *(double *)(v34 + 24);
  objc_msgSend(v24, "bounds");
  MaxY = CGRectGetMaxY(v73);
  objc_msgSend(v24, "bounds");
  objc_msgSend(v32, "_setFirstLineCapFrameOriginY:", v33 + MaxY - v60 * CGRectGetHeight(v74));
  objc_msgSend(v32, "frame");
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v75.origin.x = a8;
  v75.origin.y = a9;
  v75.size.width = a10;
  v75.size.height = a11;
  Width = CGRectGetWidth(v75);
  v76.origin.x = v63;
  v76.origin.y = v65;
  v76.size.width = v67;
  v76.size.height = v69;
  return objc_msgSend(v32, "setFrame:", Width - CGRectGetMaxX(v76), v65, v67, v69);
}

id sub_1005871B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for YearlyLineChartView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for YearlyLineChartView()
{
  return objc_opt_self(_TtC10FitnessApp19YearlyLineChartView);
}

id sub_100587340()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v1);

  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "lightGrayColor");
  objc_msgSend(v0, "setTextColor:", v3);

  v4 = objc_msgSend(v0, "layer");
  v5 = objc_msgSend(v2, "blackColor");
  v6 = objc_msgSend(v5, "CGColor");

  objc_msgSend(v4, "setShadowColor:", v6);
  v7 = objc_msgSend(v0, "layer");
  objc_msgSend(v7, "setShadowRadius:", 2.0);

  v8 = objc_msgSend(v0, "layer");
  LODWORD(v9) = 1063675494;
  objc_msgSend(v8, "setShadowOpacity:", v9);

  v10 = objc_msgSend(v0, "layer");
  objc_msgSend(v10, "setShadowOffset:", 0.0, 2.0);

  return v0;
}

uint64_t sub_100587510(double a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  int v4;
  void *v6;
  id v7;
  id v8;
  double MaxX;
  double v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  void *v24;
  id v25;
  NSString v26;
  id v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  double v37;
  CGRect v38;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_formatter);
  if (!v2)
    return 0;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_canonicalUnit);
  if (!v3)
    return 0;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_trendType);
  if (v4 == 9)
    return 0;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_axisLayer);
  v7 = v2;
  v8 = v3;
  objc_msgSend(v6, "bounds");
  MaxX = CGRectGetMaxX(v38);
  if (a1 <= 0.0)
  {
    a1 = 0.0;
    if (MaxX >= 0.0)
      goto LABEL_14;
  }
  else if (MaxX >= a1)
  {
    goto LABEL_14;
  }
  if ((*(_QWORD *)&MaxX & 0xFFFFFFFFFFFFFLL) != 0)
    v10 = a1;
  else
    v10 = MaxX;
  if ((~*(_QWORD *)&MaxX & 0x7FF0000000000000) != 0)
    a1 = MaxX;
  else
    a1 = v10;
LABEL_14:
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_xPositions);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = 0;
    v15 = v11 + 32;
    v16 = -1000.0;
    do
    {
      v17 = vabdd_f64(*(double *)(v15 + 8 * v14), a1);
      v18 = vabdd_f64(v16, a1);
      if (v17 < v18)
        v13 = v14;
      v19 = v14 + 1;
      if (v17 < v18)
        v16 = *(double *)(v15 + 8 * v14);
      ++v14;
    }
    while (v12 != v19);
    if ((v13 & 0x8000000000000000) != 0)
      goto LABEL_26;
  }
  else
  {
    v13 = 0;
    v16 = -1000.0;
  }
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19YearlyLineChartView_histogram);
  if (v13 >= *(_QWORD *)(v20 + 16) || (v21 = v20 + 24 * v13, (*(_BYTE *)(v21 + 48) & 1) != 0))
  {
LABEL_26:

    return 0;
  }
  v23 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v8, *(double *)(v21 + 32));
  v24 = v23;
  if ((v4 | 4) == 7)
  {
    sub_10055E814(v23);
  }
  else
  {
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v29 = v28;

    sub_10055E5F4(v24, v4);
    swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  }
  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  v37 = UIRoundToScale(v16, *(double *)&qword_10086AA00);

  return *(_QWORD *)&v37;
}

uint64_t sub_1005877FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 104, 7);
}

id sub_100587820()
{
  uint64_t v0;

  return sub_100586EC8(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(CGFloat *)(v0 + 72), *(CGFloat *)(v0 + 80), *(CGFloat *)(v0 + 88), *(CGFloat *)(v0 + 96));
}

id sub_10058794C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PageControlView.Coordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PageControlView.Coordinator()
{
  return objc_opt_self(_TtCV10FitnessApp15PageControlView11Coordinator);
}

uint64_t destroy for PageControlView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *initializeWithCopy for PageControlView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for PageControlView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  v5 = a2[1];
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for PageControlView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  a1[3] = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PageControlView()
{
  return &type metadata for PageControlView;
}

id sub_100587AF8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v6;

  v1 = *v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIPageControl), "init");
  objc_msgSend(v2, "setBackgroundStyle:", 2);
  objc_msgSend(v2, "setNumberOfPages:", v1);
  v3 = sub_100047110(&qword_10083B710);
  UIViewRepresentableContext.coordinator.getter(&v6, v3);
  v4 = v6;
  objc_msgSend(v2, "addTarget:action:forControlEvents:", v6, "updateCurrentPageWithSender:", 4096);

  return v2;
}

id sub_100587BAC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_OWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 24);
  v3 = sub_100047110(&qword_100823EE8);
  Binding.wrappedValue.getter(v3);
  return objc_msgSend(a1, "setCurrentPage:", v7, v5, v6);
}

id sub_100587C0C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  double v10;
  id result;
  objc_super v12;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = (objc_class *)type metadata accessor for PageControlView.Coordinator();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = &v8[OBJC_IVAR____TtCV10FitnessApp15PageControlView11Coordinator_control];
  *(_QWORD *)v9 = v4;
  *((_QWORD *)v9 + 1) = v3;
  *((_QWORD *)v9 + 2) = v5;
  *((_QWORD *)v9 + 3) = v6;
  v12.receiver = v8;
  v12.super_class = v7;
  swift_retain(v3);
  *(_QWORD *)&v10 = swift_retain(v5).n128_u64[0];
  result = objc_msgSendSuper2(&v12, "init", v10);
  *a1 = result;
  return result;
}

uint64_t sub_100587C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100587D5C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100587CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100587D5C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100587D34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100587D5C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100587D5C()
{
  unint64_t result;

  result = qword_10083B718;
  if (!qword_10083B718)
  {
    result = swift_getWitnessTable(&unk_10064778C, &type metadata for PageControlView);
    atomic_store(result, (unint64_t *)&qword_10083B718);
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogTipCardFactory()
{
  return &type metadata for CatalogTipCardFactory;
}

void destroy for MirrorRaceCompleteView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for MirrorRaceCompleteView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_retain(v3);
  swift_retain(v4);
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for MirrorRaceCompleteView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[4];
  v9 = (void *)a1[4];
  a1[4] = v8;
  v10 = v8;

  v11 = (void *)a2[5];
  v12 = (void *)a1[5];
  a1[5] = v11;
  v13 = v11;

  return a1;
}

_QWORD *assignWithTake for MirrorRaceCompleteView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(a1[3]);
  v6 = (void *)a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);

  v7 = (void *)a1[5];
  a1[5] = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for MirrorRaceCompleteView()
{
  return &type metadata for MirrorRaceCompleteView;
}

uint64_t sub_100587F44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BC3BC, 1);
}

uint64_t sub_100587F54@<X0>(id *a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  char *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  __n128 v35;
  double v36;
  __n128 v37;
  __n128 v38;
  double v39;
  char *v40;
  __n128 v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  int *v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char v80;
  __int128 v81;

  v74 = a2;
  v73 = type metadata accessor for RaceSecondsAheadOfGhostMetricView(0, a3);
  v79 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v72 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v77 = (char *)&v67 - v7;
  v71 = type metadata accessor for RaceCompleteRaceTimeMetricView(0, v6);
  v68 = *(_QWORD *)(v71 - 8);
  v8 = v68;
  __chkstk_darwin(v71);
  v78 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - v11;
  v13 = type metadata accessor for LocalizationFeature(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_100824458);
  v70 = *(_QWORD *)(v76 - 8);
  v17 = v70;
  __chkstk_darwin(v76);
  v75 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v67 - v21;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, enum case for LocalizationFeature.workout(_:), v13, v20);
  v23 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000001BLL, 0x80000001006A77B0, v16);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v26 = v22;
  v69 = v22;
  static WorkoutNotificationFont.multilineTextView(with:lineLimit:)(v23, v25, 2);
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  v81 = *(_OWORD *)a1;
  v34 = *((_QWORD *)&v81 + 1);
  v35 = swift_retain(*((_QWORD *)&v81 + 1));
  v36 = RacePositionStatePublisher.raceFinishTime.getter(v35);
  sub_10004D634((uint64_t)&v81);
  v37 = swift_retain(v34);
  RacePositionStatePublisher.raceFinishTime.getter(v37);
  sub_10004D634((uint64_t)&v81);
  v38 = swift_retain(v34);
  v39 = RacePositionStatePublisher.secondsAheadOfGhost.getter(v38);
  sub_10004D634((uint64_t)&v81);
  v40 = v12;
  v67 = v12;
  RaceCompleteRaceTimeMetricView.init(raceTime:didWinRace:)(v39 >= 0.0, v36);
  v41 = swift_retain(v34);
  v42 = RacePositionStatePublisher.secondsAheadOfGhost.getter(v41);
  sub_10004D634((uint64_t)&v81);
  type metadata accessor for RaceWorkoutConfiguration(0);
  v43 = static RaceWorkoutConfiguration.raceCompleteColor.getter();
  v44 = Color.init(_:)(v43);
  v45 = a1[5];
  v46 = v77;
  RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)(v44, v45, 1, v42);
  v47 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v49 = v75;
  v48 = v76;
  v47(v75, v26, v76);
  v50 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v51 = v78;
  v52 = v71;
  v50(v78, v40, v71);
  v53 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v54 = v72;
  v55 = v46;
  v56 = v73;
  v53(v72, v55, v73);
  v80 = 1;
  v57 = v74;
  v47(v74, v49, v48);
  v58 = (int *)sub_100047110(&qword_10083B738);
  v50(&v57[v58[12]], v51, v52);
  v53(&v57[v58[16]], v54, v56);
  v59 = &v57[v58[20]];
  v60 = v80;
  *(_QWORD *)v59 = 0;
  v59[8] = v60;
  v61 = *(void (**)(char *, uint64_t))(v79 + 8);
  v62 = v56;
  v61(v77, v56);
  v63 = *(void (**)(char *, uint64_t))(v68 + 8);
  v63(v67, v52);
  v64 = *(void (**)(char *, uint64_t))(v70 + 8);
  v65 = v76;
  v64(v69, v76);
  v61(v54, v62);
  v63(v78, v52);
  return ((uint64_t (*)(char *, uint64_t))v64)(v75, v65);
}

uint64_t sub_100588354()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  _OWORD v14[3];

  v1 = type metadata accessor for WorkoutViewStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10083B720);
  __chkstk_darwin(v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0[1];
  v14[0] = *v0;
  v14[1] = v8;
  v14[2] = v0[2];
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v9);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v10 = sub_100047110(&qword_10083B728);
  sub_100587F54((id *)v14, &v7[*(int *)(v10 + 44)], v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v1);
  v12 = sub_100588490();
  View.workoutViewStyle(_:)(v4, v5, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1005884DC((uint64_t)v7);
}

unint64_t sub_100588490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083B730;
  if (!qword_10083B730)
  {
    v1 = sub_100007050(&qword_10083B720);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B730);
  }
  return result;
}

uint64_t sub_1005884DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_10083B720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10058851C()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_10083B720);
  v1[1] = sub_100588490();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
}

char *sub_100588568(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class isa;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  objc_super v46;

  v9 = OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView;
  v10 = type metadata accessor for TrendsFooterTextView();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");

  v46.receiver = v12;
  v46.super_class = (Class)type metadata accessor for TrendExplanationView();
  v13 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView;
  v15 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView];
  v16 = v13;
  objc_msgSend(v15, "setDelegate:", v16);
  objc_msgSend(v16, "addSubview:", v15);
  v17 = objc_msgSend(v15, "leadingAnchor");
  v18 = objc_msgSend(v16, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 10.0);

  v20 = objc_msgSend(*(id *)&v13[v14], "trailingAnchor");
  v21 = objc_msgSend(v16, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -10.0);

  v23 = objc_msgSend(*(id *)&v13[v14], "topAnchor");
  v24 = objc_msgSend(v16, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 10.0);

  v26 = objc_msgSend(*(id *)&v13[v14], "bottomAnchor");
  v27 = objc_msgSend(v16, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, -10.0);

  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v30 = sub_100047110((uint64_t *)&unk_100828340);
  v31 = swift_allocObject(v30, 64, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100623750;
  *(_QWORD *)(v31 + 32) = v19;
  *(_QWORD *)(v31 + 40) = v22;
  *(_QWORD *)(v31 + 48) = v25;
  *(_QWORD *)(v31 + 56) = v28;
  v45 = (CHWorkoutDetailHeartRateTableViewCell *)v31;
  specialized Array._endMutation()(v31);
  sub_100039898();
  v32 = v19;
  v33 = v22;
  v34 = v25;
  v35 = v28;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v45, v37, v38, v39, v40, v41, v42, v43);
  objc_msgSend(v29, "activateConstraints:", isa);

  return v16;
}

id sub_100588940(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  NSString *v9;
  NSString *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;

  v6 = sub_100047110(&qword_10083B7D0);
  inited = swift_initStackObject(v6, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView);
  v9 = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 40) = objc_msgSend(v8, "textColor");
  *(_QWORD *)(inited + 48) = NSFontAttributeName;
  v10 = NSFontAttributeName;
  *(_QWORD *)(inited + 56) = objc_msgSend(v8, "font");
  v11 = sub_1004365D0(inited);
  swift_bridgeObjectRetain(a3);
  sub_1002F7C50(v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  v14 = objc_allocWithZone((Class)NSMutableAttributedString);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  type metadata accessor for Key(0);
  sub_100135B1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v14, "initWithString:attributes:", v15, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v18 = objc_msgSend(v8, "textColor");
  v19 = objc_msgSend(v8, "font");
  sub_1004E5EC0((uint64_t)v19, a1);
  v21 = v20;

  if (v21)
  {
    v22 = (void *)sub_1003CBA78(v21);
    objc_msgSend(v17, "appendAttributedString:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
  return v17;
}

id sub_100588BD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendExplanationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendExplanationView()
{
  return objc_opt_self(_TtC10FitnessApp20TrendExplanationView);
}

uint64_t sub_100588C34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Date.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100588C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1001B1A94(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithCopy for DivingDetailUnderwaterDepthChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1001B1A94(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1001B1AB4(v7, v8, v9);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for DivingDetailUnderwaterDepthChartView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1001B1AB4(v5, v6, v7);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for DivingDetailUnderwaterDepthChartView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DivingDetailUnderwaterDepthChartView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DivingDetailUnderwaterDepthChartView()
{
  return &type metadata for DivingDetailUnderwaterDepthChartView;
}

uint64_t sub_100588E08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BC468, 1);
}

uint64_t sub_100588E18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  id v43;
  void (*v44)(uint64_t, char *, uint64_t);
  uint64_t v45;
  char *v46;
  id v47;
  id v48;
  char *v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v6 = type metadata accessor for Date(0);
  v63 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  v12 = type metadata accessor for DivingDataCalculator(0);
  v13 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v14 = a3 & 1;
  v58 = a1;
  v59 = a2;
  v15 = a2;
  v57 = a3 & 1;
  v16 = v13;
  v17 = (char *)StateObject.wrappedValue.getter(a1, a2, v14, v12, v13);
  v18 = *(id *)&v17[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  v19 = objc_msgSend(v18, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v20 = v15;
  v21 = v14;
  v22 = v8;
  v23 = v6;
  v24 = v16;
  v56 = v16;
  v25 = (char *)StateObject.wrappedValue.getter(a1, v20, v21, v12, v16);
  v26 = *(id *)&v25[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  v27 = objc_msgSend(v26, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

  v28 = sub_1000083D8((unint64_t *)&qword_100824D50, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v60 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v22, v6, v28);
  v29 = v63;
  v30 = *(void (**)(char *, uint64_t))(v63 + 8);
  v61 = v22;
  v30(v22, v23);
  v55 = v30;
  v30(v11, v23);
  v31 = sub_100047110((uint64_t *)&unk_100828730);
  v32 = *(_QWORD *)(v29 + 72);
  v33 = *(unsigned __int8 *)(v29 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = swift_allocObject(v31, v34 + 2 * v32, v33 | 7);
  *(_OWORD *)(v35 + 16) = xmmword_100620BC0;
  v62 = v35;
  v36 = v35 + v34;
  v37 = v58;
  v38 = v59;
  v39 = v57;
  v40 = v12;
  v41 = (char *)StateObject.wrappedValue.getter(v58, v59, v57, v12, v24);
  v42 = *(id *)&v41[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  v43 = objc_msgSend(v42, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v43);

  v44 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
  v44(v36, v11, v23);
  v45 = v36 + v32;
  v46 = (char *)StateObject.wrappedValue.getter(v37, v38, v39, v40, v56);
  v47 = *(id *)&v46[OBJC_IVAR___CHDivingDataCalculator_diveSession];

  if ((v60 & 1) != 0)
  {
    v48 = objc_msgSend(v47, "startDate");

    v49 = v61;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v48);

    Date.addingTimeInterval(_:)(v50, 1.0);
    v55(v49, v23);
  }
  else
  {
    v51 = objc_msgSend(v47, "endDate");

    v52 = v61;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

    v44(v45, v52, v23);
  }
  return v62;
}

double sub_1005891E4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  double result;
  _OWORD v27[10];
  __int16 v28;
  _BYTE v29[169];
  char v30;
  __int128 v31;
  _OWORD v32[11];
  _QWORD v33[2];
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
  v9 = Color.init(_:)(v8);
  v10 = static HorizontalAlignment.leading.getter(v9);
  sub_100589400(a1, a2, a3 & 0x101, (uint64_t)v27);
  v30 = 1;
  *(_OWORD *)&v29[71] = v27[4];
  *(_OWORD *)&v29[55] = v27[3];
  *(_OWORD *)&v29[119] = v27[7];
  *(_OWORD *)&v29[135] = v27[8];
  *(_OWORD *)&v29[151] = v27[9];
  *(_WORD *)&v29[167] = v28;
  *(_OWORD *)&v29[87] = v27[5];
  *(_OWORD *)&v29[103] = v27[6];
  *(_OWORD *)&v29[7] = v27[0];
  *(_OWORD *)&v29[23] = v27[1];
  *(_OWORD *)&v29[39] = v27[2];
  v31 = (unint64_t)v10;
  LOBYTE(v32[0]) = 1;
  v11 = *(_OWORD *)&v29[128];
  *(_OWORD *)((char *)&v32[7] + 1) = *(_OWORD *)&v29[112];
  v12 = *(_OWORD *)&v29[112];
  *(_OWORD *)((char *)&v32[8] + 1) = *(_OWORD *)&v29[128];
  v13 = *(_OWORD *)&v29[144];
  *(_OWORD *)((char *)&v32[9] + 1) = *(_OWORD *)&v29[144];
  *(_OWORD *)((char *)&v32[9] + 10) = *(_OWORD *)&v29[153];
  v14 = *(_OWORD *)&v29[64];
  *(_OWORD *)((char *)&v32[3] + 1) = *(_OWORD *)&v29[48];
  v15 = *(_OWORD *)&v29[48];
  *(_OWORD *)((char *)&v32[4] + 1) = *(_OWORD *)&v29[64];
  v16 = *(_OWORD *)&v29[96];
  *(_OWORD *)((char *)&v32[5] + 1) = *(_OWORD *)&v29[80];
  v17 = *(_OWORD *)&v29[80];
  *(_OWORD *)((char *)&v32[6] + 1) = *(_OWORD *)&v29[96];
  v18 = *(_OWORD *)&v29[16];
  *(_OWORD *)((char *)v32 + 1) = *(_OWORD *)v29;
  v19 = *(_OWORD *)v29;
  *(_OWORD *)((char *)&v32[1] + 1) = *(_OWORD *)&v29[16];
  v20 = *(_OWORD *)&v29[32];
  *(_OWORD *)((char *)&v32[2] + 1) = *(_OWORD *)&v29[32];
  v21 = v32[8];
  *(_OWORD *)(a4 + 136) = v32[7];
  *(_OWORD *)(a4 + 152) = v21;
  *(_OWORD *)(a4 + 168) = v32[9];
  *(_OWORD *)(a4 + 178) = *(_OWORD *)((char *)&v32[9] + 10);
  v22 = v32[4];
  *(_OWORD *)(a4 + 72) = v32[3];
  *(_OWORD *)(a4 + 88) = v22;
  v23 = v32[6];
  *(_OWORD *)(a4 + 104) = v32[5];
  *(_OWORD *)(a4 + 120) = v23;
  v24 = v32[0];
  *(_OWORD *)(a4 + 8) = v31;
  *(_OWORD *)(a4 + 24) = v24;
  v25 = v32[2];
  *(_OWORD *)(a4 + 40) = v32[1];
  *(_OWORD *)(a4 + 56) = v25;
  v42 = v12;
  v43 = v11;
  v44[0] = v13;
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)&v29[153];
  v38 = v15;
  v39 = v14;
  v40 = v17;
  v41 = v16;
  v35 = v19;
  v36 = v18;
  *(_QWORD *)a4 = v9;
  v33[0] = v10;
  v33[1] = 0;
  v34 = 1;
  v37 = v20;
  swift_retain(v9);
  sub_10058BE0C((uint64_t *)&v31);
  sub_10058BECC((uint64_t)v33);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_100589400(uint64_t a1@<X0>, void *a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  char v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  char v25;
  char v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  char v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  char v75;
  uint64_t v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  SEL v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  uint64_t v118;
  _OWORD v119[3];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _OWORD v126[2];
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  _OWORD v136[3];

  v6 = a3 & 1;
  v115 = a3 & 0x100;
  if ((a3 & 0x100) != 0)
  {
    v110 = 0;
    v111 = 0;
    v117 = 0;
    v118 = 0;
    v7 = a2;
    v8 = 0;
    v9 = 0;
    v113 = 0;
    v114 = 0;
    v112 = 0;
    v10 = 0;
  }
  else
  {
    v109 = a3 & 1;
    v11 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000022, 0x80000001006A7820);
    v12 = Text.init(_:tableName:bundle:comment:)(v11);
    v14 = v13;
    v16 = v15;
    v18 = v17 & 1;
    v20 = static Font.body.getter(v19);
    v22 = Text.font(_:)(v20, v12, v14, v18, v16, v21);
    v117 = v23;
    v118 = v22;
    v108 = v24;
    v26 = v25;
    swift_release(v20);
    v107 = v26 & 1;
    sub_1000E4458(v12, v14, v18);
    swift_bridgeObjectRelease(v16, v27, v28, v29, v30, v31, v32, v33);
    v34 = type metadata accessor for DivingDataCalculator(0);
    v35 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
    v36 = (void *)StateObject.wrappedValue.getter(a1, a2, v109, v34, v35);
    KeyPath = swift_getKeyPath(&unk_1006479D8);
    v38 = swift_getKeyPath(&unk_100647A00);
    static Published.subscript.getter(v119, v36, KeyPath, v38);

    swift_release(KeyPath);
    swift_release(v38);
    v130 = v120;
    v135 = v125;
    v136[0] = v126[0];
    *(_OWORD *)((char *)v136 + 9) = *(_OWORD *)((char *)v126 + 9);
    v131 = v121;
    v132 = v122;
    v133 = v123;
    v134 = v124;
    v127 = v119[0];
    v128 = v119[1];
    v129 = v119[2];
    v39 = *((_QWORD *)&v120 + 1);
    v40 = v121;
    swift_bridgeObjectRetain(v121);
    sub_1001B5240((uint64_t *)&v127);
    *(_QWORD *)&v119[0] = v39;
    *((_QWORD *)&v119[0] + 1) = v40;
    v41 = sub_100038CA0();
    v42 = Text.init<A>(_:)(v119, &type metadata for String, v41);
    v44 = v43;
    v46 = v45;
    v48 = v47 & 1;
    v50 = static Font.body.getter(v49);
    v52 = Text.font(_:)(v50, v42, v44, v48, v46, v51);
    v54 = v53;
    v106 = a2;
    v56 = v55;
    v58 = v57;
    swift_release(v50);
    v59 = v56 & 1;
    sub_1000E4458(v42, v44, v48);
    swift_bridgeObjectRelease(v46, v60, v61, v62, v63, v64, v65, v66);
    v68 = static Color.teal.getter(v67);
    *(_QWORD *)&v119[0] = v68;
    v69 = v58;
    v70 = Text.foregroundStyle<A>(_:)(v119, v52, v54, v59, v58, &type metadata for Color, &protocol witness table for Color);
    v72 = v71;
    v74 = v73;
    v76 = v75 & 1;
    sub_1000E4458(v52, v54, v59);
    swift_release(v68);
    swift_bridgeObjectRelease(v69, v77, v78, v79, v80, v81, v82, v83);
    v8 = v108;
    LOBYTE(v119[0]) = v107;
    v9 = v107;
    sub_1000E439C(v118, v108, v107);
    swift_bridgeObjectRetain(v117);
    sub_1000E439C(v70, v72, v76);
    swift_bridgeObjectRetain(v74);
    v113 = v72;
    v114 = v70;
    v112 = v76;
    sub_1000E4458(v70, v72, v76);
    v10 = v74;
    swift_bridgeObjectRelease(v74, v84, v85, v86, v87, v88, v89, v90);
    v7 = v106;
    sub_1000E4458(v118, v108, v119[0]);
    swift_bridgeObjectRelease(v117, v91, v92, v93, v94, v95, v96, v97);
    v6 = v109;
    v110 = 0x4040000000000000;
    v111 = 0x4020000000000000;
  }
  v98 = swift_allocObject(&unk_1007AACD8, 34, 7);
  *(_QWORD *)(v98 + 16) = a1;
  *(_QWORD *)(v98 + 24) = v7;
  *(_BYTE *)(v98 + 32) = v6 != 0;
  *(_BYTE *)(v98 + 33) = BYTE1(v115);
  v99 = sub_1001B1A94(a1, v7, v6);
  v100 = static Alignment.center.getter(v99);
  _FrameLayout.init(width:height:alignment:)(&v127, 0, 1, 0x4063E00000000000, 0, v100, v101);
  v102 = v127;
  v103 = BYTE8(v127);
  v104 = v128;
  LOBYTE(v119[0]) = BYTE8(v127);
  v105 = BYTE8(v128);
  *(_QWORD *)a4 = v118;
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)(a4 + 24) = v117;
  *(_QWORD *)(a4 + 32) = v114;
  *(_QWORD *)(a4 + 40) = v113;
  *(_QWORD *)(a4 + 48) = v112;
  *(_QWORD *)(a4 + 56) = v10;
  *(_QWORD *)(a4 + 64) = v111;
  *(_BYTE *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = sub_10058BF98;
  *(_QWORD *)(a4 + 88) = v98;
  *(_WORD *)(a4 + 96) = 0;
  *(_QWORD *)(a4 + 104) = v102;
  *(_BYTE *)(a4 + 112) = v103;
  *(_QWORD *)(a4 + 120) = v104;
  *(_BYTE *)(a4 + 128) = v105;
  *(_OWORD *)(a4 + 136) = v129;
  *(_QWORD *)(a4 + 152) = v110;
  *(_BYTE *)(a4 + 160) = 0;
  *(_BYTE *)(a4 + 161) = v115 != 0;
  sub_10058BE64(v118, v8, v9, (uint64_t)v117, v114, v113, v112, (uint64_t)v10);
  sub_10058BF24(v118, v8, v9, v117, v114, v113, v112, v10);
}

uint64_t sub_1005898E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)();
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char v83[16];
  uint64_t v84;
  void *v85;
  char v86;
  char v87;
  char v88[16];
  uint64_t v89;
  void *v90;
  char v91;
  char v92;
  char v93[4];
  uint64_t v94;
  void *v95;
  char v96;
  char v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v80 = a1;
  v81 = a5;
  v73 = a4 & 0x100;
  v78 = type metadata accessor for GeometryProxy(0);
  v77 = *(_QWORD *)(v78 - 8);
  v79 = *(_QWORD *)(v77 + 64);
  __chkstk_darwin(v78);
  v76 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100824C50);
  __chkstk_darwin(v9);
  v71 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100824C58);
  v63 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100047110(&qword_100824C60);
  v68 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v82 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_10083B7D8);
  v72 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100047110(&qword_10083B7E0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a2;
  v95 = a3;
  LODWORD(v16) = a4;
  v62 = a4;
  v17 = a4 & 1;
  v96 = v17;
  v18 = (v16 >> 8) & 1;
  v97 = BYTE1(v16) & 1;
  v19 = sub_100047110(&qword_100824CB8);
  v20 = sub_1001B534C();
  Chart.init(content:)(sub_10058BFA4, v93, v19, v20);
  v89 = a2;
  v90 = a3;
  v61 = a2;
  v91 = v17;
  v65 = v17;
  v92 = v18;
  v66 = v18;
  v21 = sub_100047110(&qword_100824CD0);
  v22 = sub_100028384(&qword_100824CD8, &qword_100824C58, (uint64_t)&protocol conformance descriptor for Chart<A>);
  v23 = sub_100028384(&qword_100824CE0, &qword_100824CD0, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  View.chartYAxis<A>(content:)(sub_10058BFB0, v88, v11, v21, v22, v23);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v11);
  v84 = a2;
  v85 = a3;
  v24 = a3;
  v86 = v17;
  v87 = v18;
  v25 = sub_100047110(&qword_10083B7E8);
  v99 = v11;
  v100 = v21;
  v101 = v22;
  v102 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
  v27 = sub_100028384(&qword_10083B7F0, &qword_10083B7E8, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  v28 = v64;
  v29 = v67;
  v30 = v82;
  View.chartXAxis<A>(content:)(sub_10058BFBC, v83, v67, v25, OpaqueTypeConformance2, v27);
  v31 = v29;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v29);
  v32 = v61;
  v98 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100588E18(v61, (uint64_t)v24, v73 & 0xFE | v62 & 1u);
  v33 = type metadata accessor for ScaleType(0);
  v34 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v71, 1, 1, v33);
  v35 = sub_100047110(&qword_100824CE8);
  v99 = v31;
  v100 = v25;
  v101 = OpaqueTypeConformance2;
  v102 = v27;
  v36 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  v37 = sub_100372E34();
  v38 = v69;
  v39 = v70;
  View.chartXScale<A>(domain:type:)(&v98, v34, v70, v35, v36, v37);
  sub_10001BE90(v34, &qword_100824C50);
  swift_bridgeObjectRelease(v98, v40, v41, v42, v43, v44, v45, v46);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v39);
  v47 = v77;
  v48 = v76;
  v49 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v80, v78);
  v50 = *(unsigned __int8 *)(v47 + 80);
  v51 = v47;
  v52 = (v50 + 34) & ~v50;
  v53 = swift_allocObject(&unk_1007AAD00, v52 + v79, v50 | 7);
  v54 = v32;
  *(_QWORD *)(v53 + 16) = v32;
  *(_QWORD *)(v53 + 24) = v24;
  LOBYTE(v32) = v65;
  *(_BYTE *)(v53 + 32) = v65;
  *(_BYTE *)(v53 + 33) = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v53 + v52, v48, v49);
  v55 = v74;
  v56 = v81;
  v57 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v81, v38, v75);
  v58 = (void (**)())(v56 + *(int *)(sub_100047110(&qword_10083B7F8) + 36));
  *v58 = sub_10058C06C;
  v58[1] = (void (*)())v53;
  v58[2] = 0;
  v58[3] = 0;
  sub_1001B1A94(v54, v24, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v38, v57);
}

uint64_t sub_100589EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  _OWORD v39[9];
  _OWORD v40[3];

  v27 = a4;
  v7 = sub_100047110(&qword_100824CB8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DivingDataCalculator(0);
  v12 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v13 = (void *)StateObject.wrappedValue.getter(a1, a2, a3 & 1, v11, v12);
  KeyPath = swift_getKeyPath(&unk_1006479D8);
  v15 = swift_getKeyPath(&unk_100647A00);
  static Published.subscript.getter(&v29, v13, KeyPath, v15);

  swift_release(KeyPath);
  swift_release(v15);
  v39[7] = v36;
  v39[8] = v37;
  v40[0] = v38[0];
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v38 + 9);
  v39[4] = v33;
  v39[5] = v34;
  v39[6] = v35;
  v39[0] = v29;
  v39[1] = v30;
  v39[2] = v31;
  v39[3] = v32;
  v16 = (CHWorkoutDetailHeartRateTableViewCell *)v29;
  swift_bridgeObjectRetain(v29);
  sub_1001B5240((uint64_t *)v39);
  v17 = &_swiftEmptyArrayStorage;
  if (v16)
    v17 = v16;
  v28 = v17;
  v18 = sub_100047110(&qword_100824DA0);
  v19 = sub_100047110(&qword_100824DA8);
  v20 = sub_100028384(&qword_100824DB0, &qword_100824DA0, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = sub_100007050(&qword_100824CC8);
  *(_QWORD *)&v29 = type metadata accessor for RuleMark(255);
  *((_QWORD *)&v29 + 1) = &type metadata for Color;
  *(_QWORD *)&v30 = &protocol witness table for RuleMark;
  *((_QWORD *)&v30 + 1) = &protocol witness table for Color;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  *(_QWORD *)&v29 = v21;
  *((_QWORD *)&v29 + 1) = OpaqueTypeConformance2;
  v23 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  v24 = sub_1000083D8(&qword_100824DB8, type metadata accessor for WorkoutChartDataElement, (uint64_t)&unk_10064791C);
  v25 = ForEach<>.init(_:content:)(&v28, sub_10058A150, 0, v18, &type metadata for Int, v19, v20, v23, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v8 + 32))(v27, v10, v7, v25);
}

uint64_t sub_10058A150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  char v19;
  char v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  char v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  char *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  char v65;
  char *v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __n128 v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[4];
  double v100[5];

  v98 = a2;
  v3 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v3);
  v93 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v91 = (char *)&v90 - v6;
  v7 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v7);
  v90 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RuleMark(0);
  v10 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  v95 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100824CC8);
  v14 = *(_QWORD *)(v13 - 8);
  v96 = v13;
  v97 = v14;
  __chkstk_darwin(v13);
  v92 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = LocalizedStringKey.init(stringLiteral:)(1702125892, 0xE400000000000000);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = type metadata accessor for Date(0);
  static PlottableValue.value(_:_:)(v16, v18, v20 & 1, v22, a1, v23, &protocol witness table for Date);
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  swift_bridgeObjectRelease(v18, v31, v32, v33, v34, v35, v36, v37);
  v38 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000014, 0x80000001006A7850);
  v40 = v39;
  LOBYTE(v16) = v41;
  v43 = v42;
  v44 = type metadata accessor for WorkoutChartDataElement(0);
  v100[0] = -*(double *)(a1 + *(int *)(v44 + 24));
  v45 = v91;
  static PlottableValue.value(_:_:)(v38, v40, v16 & 1, v43, v100, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v43, v46, v47, v48, v49, v50, v51, v52);
  swift_bridgeObjectRelease(v40, v53, v54, v55, v56, v57, v58, v59);
  v60 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000014, 0x80000001006A7870);
  v62 = v61;
  v64 = v63;
  v100[0] = -*(double *)(a1 + *(int *)(v44 + 28));
  v66 = v93;
  static PlottableValue.value(_:_:)(v60, v61, v65 & 1, v63, v100, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v64, v67, v68, v69, v70, v71, v72, v73);
  swift_bridgeObjectRelease(v62, v74, v75, v76, v77, v78, v79, v80);
  v82 = RuleMark.init<A, B>(x:yStart:yEnd:)(v90, v45, v66, v23, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v81);
  v83 = static Color.teal.getter(v82);
  *(_QWORD *)&v100[0] = v83;
  v84 = v92;
  v85 = v94;
  ChartContent.foregroundStyle<A>(_:)(v100, v94, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
  v86 = swift_release(v83);
  (*(void (**)(char *, uint64_t, __n128))(v95 + 8))(v12, v85, v86);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v100, 1, 0, &_swiftEmptyArrayStorage, 3.0, 10.0, 0.0);
  v99[0] = v85;
  v99[1] = &type metadata for Color;
  v99[2] = &protocol witness table for RuleMark;
  v99[3] = &protocol witness table for Color;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v99, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v88 = v96;
  ChartContent.lineStyle(_:)(v100, v96, OpaqueTypeConformance2);
  sub_1001B57E8((uint64_t)v100);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v84, v88);
}

uint64_t sub_10058A504(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v6 = type metadata accessor for AxisMarkValues(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static AxisMarkPreset.inset.getter(v15);
  v16 = swift_allocObject(&unk_1007AAD50, 34, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_BYTE *)(v16 + 32) = a3 & 1;
  *(_BYTE *)(v16 + 33) = HIBYTE(a3) & 1;
  v17 = sub_1001B1A94(a1, a2, a3 & 1);
  v18 = static AxisMarkPosition.automatic.getter(v17);
  static AxisMarkValues.automatic.getter(v18);
  v19 = sub_100047110(&qword_100824D58);
  v20 = sub_1001B55C8();
  return AxisMarks.init(preset:position:values:content:)(v14, v11, v8, sub_10058C1F8, v16, v19, v20);
}

uint64_t sub_10058A670@<X0>(uint64_t a1@<X1>, void (*a2)(char *, char *, uint64_t)@<X2>, unsigned __int16 a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (**v14)(char *, char *, char *);
  uint64_t v15;
  void (**v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (**v40)(char *, char *, char *);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (**v62)(char *, char *, char *);
  char *v63;
  void (*v64)(char *, char *, char *);
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, char *, char *);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  double v84;
  uint64_t *v85;
  char *v86;
  char *v87;
  char *v88;
  void (**v89)(char *, char *, char *);
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  _OWORD v101[2];
  uint64_t v102;

  v99 = a2;
  v96 = a4;
  v97 = a1;
  v98 = a3;
  v94 = a3 & 0x100;
  v92 = sub_100047110(&qword_100824D88);
  __chkstk_darwin(v92);
  v90 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100824D80);
  __chkstk_darwin(v5);
  v91 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100824D58);
  __chkstk_darwin(v7);
  v95 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v12);
  v14 = (void (**)(char *, char *, char *))((char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100047110(&qword_100824D28);
  v16 = *(void (***)(char *, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100824D90);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v100 = (char *)&v83 - v24;
  v25 = type metadata accessor for AxisGridLine(0);
  v26 = *(char **)(v25 - 8);
  v88 = (char *)v25;
  v89 = (void (**)(char *, char *, char *))v26;
  __chkstk_darwin(v25);
  v87 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v83 - v29;
  v32 = AxisValue.index.getter(v31);
  v93 = v20;
  if (!v32)
  {
    v102 = 0;
    memset(v101, 0, sizeof(v101));
    v86 = v30;
    AxisGridLine.init(centered:stroke:)(2, v101);
    v54 = static UnitPoint.bottomTrailing.getter(v53);
    v85 = &v83;
    v84 = v54;
    v83 = v55;
    __chkstk_darwin(v56);
    v58 = static AxisValueLabelCollisionResolution.automatic.getter(v57);
    static AxisValueLabelOrientation.automatic.getter(v58);
    v81 = &type metadata for Text;
    v82 = &protocol witness table for Text;
    v80 = &v78;
    LOBYTE(v79) = 1;
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, void (**)(char *, char *, char *), char, char *, _QWORD, char, _QWORD, int, uint64_t (*)()))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, *(_QWORD *)&v84, v83, 0, 0, 0, 1, v14, 2, v11, 0, 1, 0, v79, sub_10058C284);
    v59 = sub_100028384(&qword_100824D30, &qword_100824D28, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    AxisMark.offset(x:y:)(v15, v59, 3.0, 22.0);
    v16[1](v18, v15);
    v99 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v60 = v20;
    v61 = v100;
    v99(v100, v22, v19);
    v63 = v88;
    v62 = v89;
    v64 = v89[2];
    v65 = v87;
    v64(v87, v30, v88);
    v66 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    v66(v22, v61, v19);
    v67 = v90;
    v64(v90, v65, v63);
    v68 = v92;
    v69 = &v67[*(int *)(v92 + 48)];
    v66(v69, v22, v19);
    v70 = (uint64_t)v91;
    v62[4](v91, v67, v63);
    v99((char *)(v70 + *(int *)(v68 + 48)), v69, v19);
    v71 = *(void (**)(char *, uint64_t))(v93 + 8);
    v71(v22, v19);
    v72 = v62[1];
    ((void (*)(char *, char *))v72)(v65, v63);
    v73 = v95;
    sub_10058C290(v70, v95);
    v74 = sub_100047110(&qword_100824D98);
    swift_storeEnumTagMultiPayload(v73, v74, 0);
    sub_10001BE90(v70, &qword_100824D80);
    v71(v100, v19);
    ((void (*)(char *, char *))v72)(v86, v63);
    v75 = sub_100047110(&qword_100824D70);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v73, 0, 1, v75);
    v52 = v73;
    return sub_10058C23C(v52, v96);
  }
  v88 = v11;
  v89 = v14;
  v90 = v18;
  v91 = (char *)v16;
  v33 = v15;
  v92 = v19;
  v34 = AxisValue.index.getter(v32);
  result = AxisValue.count.getter();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v34 == result - 1)
    {
      v36 = static UnitPoint.trailing.getter(result);
      v38 = v37;
      __chkstk_darwin(v39);
      v40 = v89;
      v42 = static AxisValueLabelCollisionResolution.automatic.getter(v41);
      v43 = v88;
      static AxisValueLabelOrientation.automatic.getter(v42);
      v81 = &type metadata for Text;
      v82 = &protocol witness table for Text;
      v80 = &v78;
      LOBYTE(v79) = 1;
      v77 = v43;
      v44 = v90;
      ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, void (**)(char *, char *, char *), char, char *, _QWORD, char, _QWORD, int, uint64_t (*)()))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, *(_QWORD *)&v36, v38, 0, 0, 0, 1, v40, 2, v77, 0, 1, 0, v79, sub_10058C230);
      v45 = sub_100028384(&qword_100824D30, &qword_100824D28, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
      AxisMark.offset(x:y:)(v33, v45, 3.0, -22.0);
      (*((void (**)(char *, uint64_t))v91 + 1))(v44, v33);
      v46 = v92;
      v47 = v93;
      v48 = v100;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v100, v22, v92);
      v49 = v95;
      (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v95, v48, v46);
      v50 = sub_100047110(&qword_100824D98);
      swift_storeEnumTagMultiPayload(v49, v50, 1);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
      v51 = sub_100047110(&qword_100824D70);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 0, 1, v51);
      v52 = v49;
      return sub_10058C23C(v52, v96);
    }
    v76 = sub_100047110(&qword_100824D70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v96, 1, 1, v76);
  }
  return result;
}

void sub_10058ADCC(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t *v42;
  uint64_t *v43;
  _OWORD v44[3];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[2];
  _OWORD v52[9];
  _OWORD v53[3];

  v43 = a4;
  v7 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v7);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DivingDataCalculator(0);
  v11 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v12 = (void *)StateObject.wrappedValue.getter(a1, a2, a3 & 1, v10, v11);
  KeyPath = swift_getKeyPath(&unk_1006479D8);
  v14 = swift_getKeyPath(&unk_100647A00);
  static Published.subscript.getter(v44, v12, KeyPath, v14);

  swift_release(KeyPath);
  swift_release(v14);
  v52[3] = v45;
  v52[7] = v49;
  v52[8] = v50;
  v53[0] = v51[0];
  *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)v51 + 9);
  v52[4] = v46;
  v52[5] = v47;
  v52[6] = v48;
  v52[0] = v44[0];
  v52[1] = v44[1];
  v52[2] = v44[2];
  v15 = *((_QWORD *)&v45 + 1);
  v16 = v46;
  swift_bridgeObjectRetain(v46);
  sub_1001B5240((uint64_t *)v52);
  *(_QWORD *)&v44[0] = v15;
  *((_QWORD *)&v44[0] + 1) = v16;
  v17 = sub_100038CA0();
  v18 = Text.init<A>(_:)(v44, &type metadata for String, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  v26 = static Font.system(size:weight:design:)(0, 1, v9, 12.0);
  sub_10001BE90((uint64_t)v9, &qword_10081F2F8);
  v28 = Text.font(_:)(v26, v18, v20, v24, v22, v27);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_release(v26);
  sub_1000E4458(v18, v20, v24);
  swift_bridgeObjectRelease(v22, v35, v36, v37, v38, v39, v40, v41);
  v42 = v43;
  *v43 = v28;
  v42[1] = v30;
  *((_BYTE *)v42 + 16) = v32 & 1;
  v42[3] = v34;
}

void sub_10058B00C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t *v42;
  uint64_t *v43;
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[9];
  _OWORD v54[3];

  v43 = a4;
  v7 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v7);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DivingDataCalculator(0);
  v11 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v12 = (void *)StateObject.wrappedValue.getter(a1, a2, a3 & 1, v10, v11);
  KeyPath = swift_getKeyPath(&unk_1006479D8);
  v14 = swift_getKeyPath(&unk_100647A00);
  static Published.subscript.getter(v44, v12, KeyPath, v14);

  swift_release(KeyPath);
  swift_release(v14);
  v53[3] = v46;
  v53[7] = v50;
  v53[8] = v51;
  v54[0] = v52[0];
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v52 + 9);
  v53[4] = v47;
  v53[5] = v48;
  v53[6] = v49;
  v53[0] = v44[0];
  v53[1] = v44[1];
  v53[2] = v45;
  v15 = *((_QWORD *)&v45 + 1);
  v16 = v46;
  swift_bridgeObjectRetain(v46);
  sub_1001B5240((uint64_t *)v53);
  *(_QWORD *)&v44[0] = v15;
  *((_QWORD *)&v44[0] + 1) = v16;
  v17 = sub_100038CA0();
  v18 = Text.init<A>(_:)(v44, &type metadata for String, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  v26 = static Font.system(size:weight:design:)(0, 1, v9, 12.0);
  sub_10001BE90((uint64_t)v9, &qword_10081F2F8);
  v28 = Text.font(_:)(v26, v18, v20, v24, v22, v27);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_release(v26);
  sub_1000E4458(v18, v20, v24);
  swift_bridgeObjectRelease(v22, v35, v36, v37, v38, v39, v40, v41);
  v42 = v43;
  *v43 = v28;
  v42[1] = v30;
  *((_BYTE *)v42 + 16) = v32 & 1;
  v42[3] = v34;
}

uint64_t sub_10058B24C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  _OWORD v45[9];
  _OWORD v46[3];

  v4 = a3;
  v31 = a3;
  v34 = a4;
  v7 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v7);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100047110(&qword_10083B7E8);
  v32 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  __chkstk_darwin(v13);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for DivingDataCalculator(0);
  v17 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v18 = v4 & 1;
  v19 = (void *)StateObject.wrappedValue.getter(a1, a2, v4 & 1, v16, v17);
  KeyPath = swift_getKeyPath(&unk_1006479D8);
  v21 = swift_getKeyPath(&unk_100647A00);
  static Published.subscript.getter(&v35, v19, KeyPath, v21);

  swift_release(KeyPath);
  swift_release(v21);
  v45[8] = v43;
  v46[0] = v44[0];
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)v44 + 9);
  v45[4] = v39;
  v45[5] = v40;
  v45[6] = v41;
  v45[7] = v42;
  v45[0] = v35;
  v45[1] = v36;
  v45[2] = v37;
  v45[3] = v38;
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)v36;
  swift_bridgeObjectRetain(v36);
  sub_1001B5240((uint64_t *)v45);
  if (!v22)
    v22 = &_swiftEmptyArrayStorage;
  v23 = swift_allocObject(&unk_1007AAD28, 34, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  *(_BYTE *)(v23 + 32) = v18;
  *(_BYTE *)(v23 + 33) = BYTE1(v31) & 1;
  v24 = sub_1001B1A94(a1, a2, v18);
  v25 = static AxisMarkPreset.automatic.getter(v24);
  static AxisMarkPosition.automatic.getter(v25);
  v26 = sub_100047110(&qword_10083B800);
  v27 = type metadata accessor for Date(0);
  v28 = sub_10058C0CC();
  AxisMarks.init<A>(preset:position:values:content:)(v12, v9, v22, sub_10058C0C0, v23, v26, v27, v28, &protocol witness table for Date);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v32 + 32))(v34, v15, v33);
}

uint64_t sub_10058B4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67[16];
  uint64_t v68;
  uint64_t v69;
  __int16 v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[2];
  uint64_t v74;

  v58 = a4;
  v56 = a3;
  v55 = a2;
  v59 = a1;
  v64 = a5;
  v63 = sub_100047110(&qword_10083B810);
  __chkstk_darwin(v63);
  v62 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100824D28);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100047110(&qword_100824D40);
  v66 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v65 = (char *)&v53 - v18;
  v57 = type metadata accessor for AxisGridLine(0);
  v19 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v74 = 0;
  memset(v73, 0, sizeof(v73));
  v24 = (char *)&v53 - v23;
  v54 = (char *)&v53 - v23;
  AxisGridLine.init(centered:stroke:)(2, v73);
  v26 = static UnitPoint.topLeading.getter(v25);
  v28 = v27;
  v68 = v55;
  v69 = v56;
  v70 = v58 & 0x101;
  v71 = v59;
  v30 = static AxisValueLabelCollisionResolution.automatic.getter(v29);
  static AxisValueLabelOrientation.automatic.getter(v30);
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)(2, *(_QWORD *)&v26, v28, 0, 0, 0, 1, v11, 2, v8, 0, 1, 0, 1, sub_10058C1A0, v67, &type metadata for Text, &protocol witness table for Text);
  v32 = static Color.gray.getter(v31);
  v33 = Color.opacity(_:)(0.5);
  swift_release(v32);
  v72 = v33;
  v34 = sub_100028384(&qword_100824D30, &qword_100824D28, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  AxisMark.foregroundStyle<A>(_:)(&v72, v12, &type metadata for Color, v34, &protocol witness table for Color);
  v35 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v14, v12, v35);
  v37 = v65;
  v36 = v66;
  v38 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v39 = v16;
  v40 = v16;
  v41 = v60;
  v38(v65, v39, v60);
  v42 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v43 = v24;
  v44 = v57;
  v42(v21, v43, v57);
  v45 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v45(v40, v37, v41);
  v46 = v62;
  v42(v62, v21, v44);
  v47 = v63;
  v48 = &v46[*(int *)(v63 + 48)];
  v45(v48, v40, v41);
  v49 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v64, v46, v44);
  v38((char *)(v49 + *(int *)(v47 + 48)), v48, v41);
  v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v65, v41);
  v51 = *(void (**)(char *, uint64_t))(v19 + 8);
  v51(v54, v44);
  v50(v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v51)(v21, v44);
}

void sub_10058B93C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  unint64_t v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  Class isa;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[2];
  _OWORD v80[9];
  _OWORD v81[3];

  v68 = a5;
  v69 = a4;
  v8 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v8);
  v67 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DivingDataCalculator(0);
  v14 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v15 = a3 & 1;
  v16 = (char *)StateObject.wrappedValue.getter(a1, a2, v15, v13, v14);
  v17 = (void *)StateObject.wrappedValue.getter(a1, a2, v15, v13, v14);
  KeyPath = swift_getKeyPath(&unk_1006479D8);
  v19 = swift_getKeyPath(&unk_100647A00);
  static Published.subscript.getter(&v70, v17, KeyPath, v19);

  swift_release(KeyPath);
  swift_release(v19);
  v80[7] = v77;
  v80[8] = v78;
  v81[0] = v79[0];
  *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)((char *)v79 + 9);
  v80[4] = v74;
  v80[5] = v75;
  v80[6] = v76;
  v80[0] = v70;
  v80[1] = v71;
  v80[2] = v72;
  v80[3] = v73;
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)v71;
  swift_bridgeObjectRetain(v71);
  v21 = sub_1001B5240((uint64_t *)v80);
  if (v20)
    v22 = v20;
  else
    v22 = &_swiftEmptyArrayStorage;
  v23 = AxisValue.index.getter(v21);
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)v22->cellPadding)
  {
    v24 = v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, (unint64_t)v22+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v23, v66);
    swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
    v32 = *(void **)&v16[OBJC_IVAR___CHDivingDataCalculator_axisFormatter];
    isa = Date._bridgeToObjectiveC()().super.isa;
    v34 = objc_msgSend(v32, "stringFromDate:", isa);

    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
    *(_QWORD *)&v70 = v35;
    *((_QWORD *)&v70 + 1) = v37;
    v38 = sub_100038CA0();
    v39 = Text.init<A>(_:)(&v70, &type metadata for String, v38);
    v41 = v40;
    v43 = v42;
    v45 = v44 & 1;
    v46 = type metadata accessor for Font.Design(0);
    v47 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v67, 1, 1, v46);
    v48 = static Font.system(size:weight:design:)(0, 1, v47, 12.0);
    sub_10001BE90(v47, &qword_10081F2F8);
    v50 = Text.font(_:)(v48, v39, v41, v45, v43, v49);
    v52 = v51;
    v54 = v53;
    v56 = v55;
    swift_release(v48);
    sub_1000E4458(v39, v41, v45);
    swift_bridgeObjectRelease(v43, v57, v58, v59, v60, v61, v62, v63);
    v64 = v68;
    *v68 = v50;
    v64[1] = v52;
    *((_BYTE *)v64 + 16) = v54 & 1;
    v64[3] = v56;
    return;
  }
  __break(1u);
}

void sub_10058BCA4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = type metadata accessor for DivingDataCalculator(0);
  v7 = sub_1000083D8(&qword_100824CB0, type metadata accessor for DivingDataCalculator, (uint64_t)&protocol conformance descriptor for DivingDataCalculator);
  v9 = (id)StateObject.wrappedValue.getter(a1, a2, a3 & 1, v6, v7);
  *(double *)&v8 = GeometryProxy.size.getter(v9);
  DivingDataCalculator.chartWidth.setter(v8, 0);

}

__n128 sub_10058BD40@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  __int16 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __n128 result;
  _OWORD v18[12];
  __int16 v19;

  v4 = *(_QWORD *)v2;
  v5 = *(void **)(v2 + 8);
  v6 = *(unsigned __int8 *)(v2 + 16);
  v7 = *(unsigned __int8 *)(v2 + 17);
  v8 = static Alignment.center.getter(a1);
  v10 = v9;
  if (v7)
    v11 = 256;
  else
    v11 = 0;
  sub_1005891E4(v4, v5, v11 | v6, (uint64_t)v18);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  v12 = v18[11];
  *(_OWORD *)(a2 + 176) = v18[10];
  *(_OWORD *)(a2 + 192) = v12;
  *(_WORD *)(a2 + 208) = v19;
  v13 = v18[7];
  *(_OWORD *)(a2 + 112) = v18[6];
  *(_OWORD *)(a2 + 128) = v13;
  v14 = v18[9];
  *(_OWORD *)(a2 + 144) = v18[8];
  *(_OWORD *)(a2 + 160) = v14;
  v15 = v18[3];
  *(_OWORD *)(a2 + 48) = v18[2];
  *(_OWORD *)(a2 + 64) = v15;
  v16 = v18[5];
  *(_OWORD *)(a2 + 80) = v18[4];
  *(_OWORD *)(a2 + 96) = v16;
  result = (__n128)v18[1];
  *(_OWORD *)(a2 + 16) = v18[0];
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t *sub_10058BE0C(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[14];
  sub_10058BE64(a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  swift_retain(v2);
  return a1;
}

double sub_10058BE64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v12;
  double result;

  if (a4)
  {
    v12 = a7 & 1;
    sub_1000E439C(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    sub_1000E439C(a5, a6, v12);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10058BECC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 112);
  sub_10058BF24(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 80));
  swift_release(v2);
  return a1;
}

void sub_10058BF24(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, char a7, CHWorkoutDetailHeartRateTableViewCell *a8)
{
  char v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  if (a4)
  {
    v12 = a7 & 1;
    sub_1000E4458(a1, a2, a3 & 1);
    swift_bridgeObjectRelease(a4, v13, v14, v15, v16, v17, v18, v19);
    sub_1000E4458(a5, a6, v12);
    swift_bridgeObjectRelease(a8, v20, v21, v22, v23, v24, v25, v26);
  }
}

uint64_t sub_10058BF98(uint64_t a1)
{
  return sub_10058C204(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1005898E0);
}

uint64_t sub_10058BFA4()
{
  return sub_10058BFC8((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_100589EC0);
}

uint64_t sub_10058BFB0()
{
  return sub_10058BFC8((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10058A504);
}

uint64_t sub_10058BFBC()
{
  return sub_10058BFC8((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10058B24C);
}

uint64_t sub_10058BFC8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 33))
    v2 = 256;
  else
    v2 = 0;
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_10058BFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 34) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_1001B1AB4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10058C06C()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  sub_10058BCA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_10058C0C0(uint64_t a1)
{
  return sub_10058C204(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_10058B4EC);
}

unint64_t sub_10058C0CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_10083B808;
  if (!qword_10083B808)
  {
    v1 = sub_100007050(&qword_10083B800);
    v2[4] = &protocol witness table for AxisGridLine;
    v2[0] = sub_100007050(&qword_100824D28);
    v2[1] = &type metadata for Color;
    v2[2] = sub_100028384(&qword_100824D30, &qword_100824D28, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    v2[3] = &protocol witness table for Color;
    v2[5] = swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10083B808);
  }
  return result;
}

void sub_10058C1A0(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10058B93C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_10058C1D0()
{
  uint64_t v0;

  sub_1001B1AB4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject(v0, 34, 7);
}

uint64_t sub_10058C1F8(uint64_t a1)
{
  return sub_10058C204(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_10058A670);
}

uint64_t sub_10058C204(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 33))
    v3 = 256;
  else
    v3 = 0;
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_10058C230()
{
  return sub_10058BFC8((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10058B00C);
}

uint64_t sub_10058C23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100824D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10058C284()
{
  return sub_10058BFC8((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10058ADCC);
}

uint64_t sub_10058C290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100824D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DivingDetailChartDisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10058C324 + 4 * byte_100647915[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10058C358 + 4 * asc_100647910[v4]))();
}

uint64_t sub_10058C358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058C368);
  return result;
}

uint64_t sub_10058C374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058C37CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10058C380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DivingDetailChartDisplayType()
{
  return &type metadata for DivingDetailChartDisplayType;
}

uint64_t sub_10058C3A4()
{
  return sub_100028384(&qword_10083B818, &qword_10083B820, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

unint64_t sub_10058C3D4()
{
  unint64_t result;

  result = qword_10083B828;
  if (!qword_10083B828)
  {
    result = swift_getWitnessTable(&unk_100647A80, &type metadata for DivingDetailChartDisplayType);
    atomic_store(result, (unint64_t *)&qword_10083B828);
  }
  return result;
}

void sub_10058C418(_QWORD *a1)
{
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  NSString v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  Class v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __n128 v33;
  _BYTE v34[128];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "BOOLForKey:", v3);

  v4 = sub_100047110(&qword_100830BC0);
  inited = swift_initStackObject(v4, v34);
  *(_OWORD *)(inited + 16) = xmmword_100624D00;
  *(_QWORD *)(inited + 32) = 0x6570795464726163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v6 = a1[3];
  v7 = a1[4];
  sub_100016804(a1, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  v10 = v9;
  LOBYTE(v7) = v11;
  isa = sub_10058CACC(v8, v9, v11).super.super.isa;
  sub_1000EB41C(v8, v10, v7);
  *(_QWORD *)(inited + 48) = isa;
  *(_QWORD *)(inited + 56) = 0x657A695364726163;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v13 = a1[3];
  v14 = a1[4];
  sub_100016804(a1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x65646E4964726163;
  *(_QWORD *)(inited + 88) = 0xE900000000000078;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0xD000000000000016;
  *(_QWORD *)(inited + 112) = 0x800000010069E8C0;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10043574C(inited);
  v16 = String._bridgeToObjectiveC()();
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002F7258(v15);
  swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v25 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17, v26, v27, v28, v29, v30, v31, v32);
  FIActivityAnalyticsSubmissionWithPayload(v16, v25, v33);

}

void sub_10058C67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  NSString v7;
  unsigned __int8 v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  Class v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSString v32;
  uint64_t v33;
  Class v34;
  __n128 v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[184];

  v5 = (void *)objc_opt_self(NSUserDefaults);
  v6 = objc_msgSend(v5, "standardUserDefaults");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "BOOLForKey:", v7);

  if ((v8 & 1) == 0)
  {
    v9 = objc_msgSend(v5, "standardUserDefaults");
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setBool:forKey:", 1, v10);

  }
  v11 = sub_100047110(&qword_100830BC0);
  inited = swift_initStackObject(v11, v39);
  *(_OWORD *)(inited + 16) = xmmword_100632400;
  *(_QWORD *)(inited + 32) = 0x6570795474696465;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x546472614377656ELL;
  *(_QWORD *)(inited + 64) = 0xEB00000000657079;
  sub_1001B7120(a2, (uint64_t)v36);
  v13 = v37;
  if (v37)
  {
    v14 = v38;
    sub_100016804(v36, v37);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    v13 = v16;
    v18 = v17;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v36);
  }
  else
  {
    sub_1001B7168((uint64_t)v36);
    v15 = 0;
    v18 = -1;
  }
  isa = sub_10058CACC(v15, v13, v18).super.super.isa;
  sub_1000EFBB8(v15, v13, v18);
  *(_QWORD *)(inited + 72) = isa;
  *(_QWORD *)(inited + 80) = 0x5464726143646C6FLL;
  *(_QWORD *)(inited + 88) = 0xEB00000000657079;
  sub_1001B7120(a3, (uint64_t)v36);
  v20 = v37;
  if (v37)
  {
    v21 = v38;
    sub_100016804(v36, v37);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    v20 = v23;
    v25 = v24;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v36);
  }
  else
  {
    sub_1001B7168((uint64_t)v36);
    v22 = 0;
    v25 = -1;
  }
  v26 = sub_10058CACC(v22, v20, v25).super.super.isa;
  sub_1000EFBB8(v22, v20, v25);
  *(_QWORD *)(inited + 96) = v26;
  *(_QWORD *)(inited + 104) = 0x536472614377656ELL;
  *(_QWORD *)(inited + 112) = 0xEB00000000657A69;
  sub_1001B7120(a2, (uint64_t)v36);
  v27 = v37;
  if (v37)
  {
    v28 = v38;
    sub_100016804(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v36);
  }
  else
  {
    sub_1001B7168((uint64_t)v36);
  }
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 128) = 0x5364726143646C6FLL;
  *(_QWORD *)(inited + 136) = 0xEB00000000657A69;
  sub_1001B7120(a3, (uint64_t)v36);
  v29 = v37;
  if (v37)
  {
    v30 = v38;
    sub_100016804(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v36);
  }
  else
  {
    sub_1001B7168((uint64_t)v36);
  }
  *(NSNumber *)(inited + 144) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 152) = 0x65646E4964726163;
  *(_QWORD *)(inited + 160) = 0xE900000000000078;
  *(NSNumber *)(inited + 168) = Int._bridgeToObjectiveC()();
  v31 = sub_10043574C(inited);
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_1002F7258(v31);
  swift_bridgeObjectRelease(v31);
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v34 = Dictionary._bridgeToObjectiveC()().super.isa;
  v35 = swift_bridgeObjectRelease(v33);
  FIActivityAnalyticsSubmissionWithPayload(v32, v34, v35);

}

NSNumber sub_10058CACC(uint64_t a1, uint64_t a2, char a3)
{
  Swift::Int v3;

  v3 = 17;
  switch(a3)
  {
    case 0:
      v3 = qword_100647AF0[(char)a1];
      break;
    case 1:
      break;
    case 2:
      v3 = qword_100647C28[(char)a1];
      break;
    case 3:
      v3 = qword_100647AB0[a1];
      break;
    default:
      v3 = -1;
      break;
  }
  sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  return NSNumber.init(integerLiteral:)(v3);
}

void sub_10058CB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;
  NSString v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  Class isa;
  unint64_t v18;
  NSString v19;
  uint64_t v20;
  Class v21;
  __n128 v22;
  _BYTE v23[160];

  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "BOOLForKey:", v9);

  v10 = sub_100047110(&qword_100830BC0);
  inited = swift_initStackObject(v10, v23);
  *(_OWORD *)(inited + 16) = xmmword_100624EB0;
  *(_QWORD *)(inited + 32) = 0x7463617265746E69;
  *(_QWORD *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x6570795464726163;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  v14 = v13;
  v16 = v15;
  isa = sub_10058CACC(v12, v13, v15).super.super.isa;
  sub_1000EB41C(v12, v14, v16);
  *(_QWORD *)(inited + 72) = isa;
  *(_QWORD *)(inited + 80) = 0x657A695364726163;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  (*(void (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x65646E4964726163;
  *(_QWORD *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 128) = 0xD000000000000016;
  *(_QWORD *)(inited + 136) = 0x800000010069E8C0;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  v18 = sub_10043574C(inited);
  v19 = String._bridgeToObjectiveC()();
  v20 = sub_1002F7258(v18);
  swift_bridgeObjectRelease(v18);
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v21 = Dictionary._bridgeToObjectiveC()().super.isa;
  v22 = swift_bridgeObjectRelease(v20);
  FIActivityAnalyticsSubmissionWithPayload(v19, v21, v22);

}

uint64_t sub_10058CDF4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_10058CE1C()
{
  return sub_10058CE44(&OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint, (SEL *)&selRef_widthAnchor);
}

id sub_10058CE30()
{
  return sub_10058CE44(&OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint, (SEL *)&selRef_heightAnchor);
}

id sub_10058CE44(uint64_t *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView), *a2);
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", 43.0);

    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v9 = v4;
  return v5;
}

id sub_10058CEE8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  qword_10083B830 = (uint64_t)result;
  return result;
}

char *sub_10058CF2C(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSString v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  objc_super v35;

  v4 = v3;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext] = 0;
  v7 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView;
  v8 = objc_allocWithZone((Class)UIImageView);
  v9 = v4;
  v10 = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)UIView.withContentMode(_:)(2);

  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v12, "setCornerRadius:", 10.0);

  objc_msgSend(v11, "setClipsToBounds:", 1);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v7] = v11;
  v13 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081E060 != -1)
    swift_once(&qword_10081E060, sub_10058CEE8);
  v15 = (void *)UILabel.withFont(_:)(qword_10083B830);

  objc_msgSend(v15, "setLineBreakMode:", 0);
  objc_msgSend(v15, "setNumberOfLines:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v13] = v15;
  v16 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v16] = v17;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  if (a3)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    v18 = 0;
  }
  v35.receiver = v9;
  v35.super_class = (Class)type metadata accessor for MindfulnessSessionDetailHeaderCell();
  v26 = objc_msgSendSuper2(&v35, "initWithStyle:reuseIdentifier:", a1, v18);

  v27 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v28 = (char *)v26;
  v29 = objc_msgSend(v27, "initWithTarget:action:", v28, "navigateToCatalogItem");
  v30 = objc_msgSend(v28, "contentView");
  objc_msgSend(v30, "addGestureRecognizer:", v29);

  v31 = objc_msgSend(v28, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView]);

  v32 = objc_msgSend(v28, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel]);

  v33 = objc_msgSend(v28, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel]);

  sub_10058D2E4();
  return v28;
}

void sub_10058D2E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  Class isa;

  v51 = (void *)objc_opt_self(NSLayoutConstraint);
  v1 = sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v1, 128, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100632330;
  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, 16.0);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, "leadingAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "leadingAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v10, 16.0);
  *(_QWORD *)(v2 + 40) = v11;
  *(_QWORD *)(v2 + 48) = sub_10058CE1C();
  *(_QWORD *)(v2 + 56) = sub_10058CE30();
  v12 = objc_msgSend(v3, "bottomAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "bottomAnchor");

  v15 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:constant:", v14, -27.0);
  *(_QWORD *)(v2 + 64) = v15;
  v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel];
  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v0, "contentView");
  v19 = objc_msgSend(v18, "topAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v19, 16.0);
  *(_QWORD *)(v2 + 72) = v20;
  v21 = objc_msgSend(v16, "leadingAnchor");
  v22 = objc_msgSend(v3, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 19.0);

  *(_QWORD *)(v2 + 80) = v23;
  v24 = objc_msgSend(v16, "trailingAnchor");
  v25 = objc_msgSend(v0, "contentView");
  v26 = objc_msgSend(v25, "trailingAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, -16.0);
  *(_QWORD *)(v2 + 88) = v27;
  v28 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel];
  v29 = objc_msgSend(v28, "topAnchor");
  v30 = objc_msgSend(v16, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, 4.0);

  *(_QWORD *)(v2 + 96) = v31;
  v32 = objc_msgSend(v28, "leadingAnchor");
  v33 = objc_msgSend(v16, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v2 + 104) = v34;
  v35 = objc_msgSend(v28, "trailingAnchor");
  v36 = objc_msgSend(v0, "contentView");
  v37 = objc_msgSend(v36, "trailingAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, -16.0);
  *(_QWORD *)(v2 + 112) = v38;
  v39 = objc_msgSend(v28, "bottomAnchor");
  v40 = objc_msgSend(v0, "contentView");
  v41 = objc_msgSend(v40, "bottomAnchor");

  v42 = objc_msgSend(v39, "constraintLessThanOrEqualToAnchor:constant:", v41, -27.0);
  *(_QWORD *)(v2 + 120) = v42;
  specialized Array._endMutation()(v43);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v2, v44, v45, v46, v47, v48, v49, v50);
  objc_msgSend(v51, "activateConstraints:", isa);

}

void sub_10058D878(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  const void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  char v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 aBlock;
  void (*v76)(uint64_t, void *, void *);
  void *v77;
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;

  v6 = v5;
  v71 = a4;
  v72 = a5;
  v10 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel) = a1;
  v14 = a1;

  v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext) = a2;
  v16 = a2;

  v17 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);
  v19 = type metadata accessor for Trainer(0, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_1004C3E8C((uint64_t)v14, (uint64_t)v12);
  sub_10001BE90((uint64_t)v12, &qword_1008239C0);
  objc_msgSend(v17, "setAttributedText:", v20);

  v21 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel);
  v22 = sub_1004C51AC();
  objc_msgSend(v21, "setAttributedText:", v22);

  v23 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView);
  v24 = swift_allocObject(&unk_1007AB058, 24, 7);
  *(_QWORD *)(v24 + 16) = v23;
  v25 = v23;
  v26 = (void *)MindfulnessSessionViewModel.sourceRevision.getter(v25);
  v27 = objc_msgSend(v26, "source");

  LODWORD(v26) = objc_msgSend(v27, "_hasFirstPartyBundleID");
  if ((_DWORD)v26)
  {
    v28 = sub_1004C4E3C((uint64_t)v14);
    objc_msgSend(v25, "setImage:", v28);
  }
  else
  {
    v70 = v16;
    v29 = a3;
    v30 = swift_allocObject(&unk_1007AB080, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_1005909F4;
    *(_QWORD *)(v30 + 24) = v24;
    swift_retain(v24);
    v32 = MindfulnessSessionViewModel.sourceRevision.getter(v31);
    v33 = objc_msgSend((id)v32, "source");

    LOBYTE(v32) = objc_msgSend(v33, "_isAppleWatch");
    if ((v32 & 1) != 0)
    {
      v28 = sub_1004C4F08(43.0);
      v34 = (void *)objc_opt_self(CHIconCache);
      v78 = sub_100186FBC;
      v79 = v30;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v76 = sub_1001ABA78;
      v77 = &unk_1007AB0E8;
      v35 = _Block_copy(&aBlock);
      v36 = v79;
      swift_retain(v30);
      objc_msgSend(v34, "fetchWatchIconWithParameters:completion:", v28, v35, swift_release(v36).n128_f64[0]);
      swift_release(v30);
      v37 = v35;
    }
    else
    {
      v28 = sub_1004C5064(43.0);
      v38 = (void *)objc_opt_self(CHIconCache);
      v78 = sub_100186FBC;
      v79 = v30;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v76 = sub_1001ABA78;
      v77 = &unk_1007AB098;
      v39 = _Block_copy(&aBlock);
      v40 = v79;
      swift_retain(v30);
      objc_msgSend(v38, "fetchPhoneIconWithParameters:completion:", v28, v39, swift_release(v40).n128_f64[0]);
      swift_release(v30);
      v37 = v39;
    }
    _Block_release(v37);
    a3 = v29;
    v16 = v70;
  }

  swift_release(v24);
  v42 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter(v41);
  if ((v43 & 1) != 0 || v42 != 3)
    goto LABEL_27;
  v44 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
  v45 = v44;
  if ((unint64_t)v44 >> 62)
  {
    if (v44 >= 0)
      v44 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v44))
      goto LABEL_11;
LABEL_26:
    swift_bridgeObjectRelease(v45);
    goto LABEL_27;
  }
  if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_26;
LABEL_11:
  if ((v45 & 0xC000000000000001) != 0)
  {
    v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
  }
  else
  {
    if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v46 = *(id *)(v45 + 32);
  }
  v47 = v46;
  v48 = objc_msgSend(v46, "metadata", swift_bridgeObjectRelease(v45).n128_f64[0]);
  if (v48)
  {
    v49 = v48;
    v50 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v48, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyMindfulnessSessionTrainerID);
    v53 = v52;
    if (*(_QWORD *)(v50 + 16) && (v54 = sub_100438F74(v51, v52), (v55 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)(v50 + 56) + 32 * v54, (uint64_t)&v73);
    }
    else
    {
      v73 = 0u;
      v74 = 0u;
    }
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v50);
    if (*((_QWORD *)&v74 + 1))
    {
      sub_100038FD4(&v73, &aBlock);
      *(_QWORD *)&v73 = 0;
      *((_QWORD *)&v73 + 1) = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(&aBlock, &v73, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v56 = v73;
      v57 = *(char **)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      v58 = swift_allocObject(&unk_1007AB0D0, 24, 7);
      swift_unknownObjectWeakInit(v58 + 16, v6);
      v59 = v14;
      v60 = a3;
      sub_10039FB64(v56, *((uint64_t *)&v56 + 1), v57, v58, v60, v59);

      swift_bridgeObjectRelease(*((_QWORD *)&v56 + 1));
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&aBlock);
      swift_release(v58);
      return;
    }
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }

  sub_10001BE90((uint64_t)&v73, (uint64_t *)&unk_100828420);
LABEL_27:
  v61 = *(_QWORD *)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v62 = v14;
  v63 = sub_1005EEBB4((uint64_t)v62);

  if ((v63 & 1) != 0)
  {
    v64 = swift_allocObject(&unk_1007AB0D0, 24, 7);
    swift_unknownObjectWeakInit(v64 + 16, v6);
    v65 = v62;
    v66 = v16;
    v68 = v71;
    v67 = v72;
    sub_10003AFE0(v71, v72);
    sub_1003A0514(v65, v61, v65, v64, v66, v68, v67);
    sub_100022BA4(v68, v67);
    swift_release(v64);

  }
}

uint64_t sub_10058DEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100590A2C(a1, a2, a4);
}

double sub_10058DEF8(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t Strong;
  void *v19;
  id v20;
  _QWORD *v21;
  double result;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  _BYTE v30[24];

  if (a1)
  {
    v10 = a3 + 16;
    v11 = *(_QWORD *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    v12 = objc_allocWithZone((Class)NSMutableAttributedString);
    v13 = a1;
    v14 = objc_msgSend(v12, "initWithAttributedString:", v11);
    v15 = objc_allocWithZone((Class)NSAttributedString);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "initWithString:", v16);

    objc_msgSend(v14, "appendAttributedString:", v17);
    objc_msgSend(v14, "appendAttributedString:", *(_QWORD *)&v13[OBJC_IVAR___CHCatalogItemViewModel_subtitle]);
    swift_beginAccess(v10, v30, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v19 = (void *)Strong;
      v20 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);

      objc_msgSend(v20, "setAttributedText:", v14);
    }
    v21 = (_QWORD *)swift_allocObject(&unk_1007AB120, 40, 7);
    v21[2] = a5;
    v21[3] = a6;
    v21[4] = a3;
    sub_10003AFE0(a5, a6);
    swift_retain(a3);
    sub_10039636C(v13, (uint64_t)sub_100590C80, (uint64_t)v21, 135.0, 76.0);

    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  else
  {
    v24 = static os_log_type_t.error.getter(0);
    v25 = (void *)HKLogActivity;
    v26 = sub_100047110((uint64_t *)&unk_100827460);
    v27 = swift_allocObject(v26, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_100038CF8();
    *(_QWORD *)(v27 + 32) = 0xD000000000000050;
    *(_QWORD *)(v27 + 40) = 0x800000010069C4B0;
    *(_QWORD *)(v27 + 96) = type metadata accessor for MindfulnessSessionViewModel(0);
    *(_QWORD *)(v27 + 104) = sub_100590C04();
    *(_QWORD *)(v27 + 72) = a2;
    v28 = v25;
    v29 = a2;
    os_log(_:dso:log:_:_:)(v24, &_mh_execute_header, v28, "%@ failed to fetch catalog item view model for mindfulness session %@", 69, 2, v27);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  return result;
}

void sub_10058E1B8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];

  if (a1)
  {
    v6 = a4 + 16;
    swift_beginAccess(a4 + 16, v18, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (void *)Strong;
      v9 = sub_10058CE1C();

      objc_msgSend(v9, "setConstant:", 135.0);
    }
    swift_beginAccess(v6, v17, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v6);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = sub_10058CE30();

      objc_msgSend(v12, "setConstant:", 76.0);
    }
    swift_beginAccess(v6, v16, 0, 0);
    v13 = swift_unknownObjectWeakLoadStrong(v6);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = *(id *)(v13 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView);

      objc_msgSend(v15, "setImage:", a1);
    }
  }
  if (a2)
    a2();
}

void sub_10058E2FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  char v4;
  id v5;
  char *v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext);
    if (v2)
    {
      v3 = v1;
      v6 = v2;
      v4 = sub_1005EEBB4((uint64_t)v3);

      if ((v4 & 1) != 0)
      {
        v5 = v3;
        sub_10058FDB0(v5, v6);

        v6 = (char *)v5;
      }

    }
  }
}

id sub_10058E3F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailHeaderCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MindfulnessSessionDetailHeaderCell()
{
  return objc_opt_self(_TtC10FitnessApp34MindfulnessSessionDetailHeaderCell);
}

uint64_t sub_10058E4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject(&unk_1007AB030, 32, 7);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_retain(a3);
  return Promise.init(asyncOperation:)(sub_1005909C8, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_10058E534(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;
  uint64_t v6;
  char v7;

  a3(&v6);
  v4 = v6;
  v7 = 0;
  a1(&v6);
  return sub_100016864(v4, 0);
}

uint64_t sub_10058E5A8(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *Strong;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _BYTE *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  _QWORD *v65;
  unint64_t v66;
  void *v67;
  id v68;
  char *v69;
  id v70;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t (*)(), uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  id v144;
  __int128 v145;
  __int128 v146;
  _QWORD v147[2];
  _QWORD v148[5];

  v131 = sub_100047110(&qword_100830B18);
  v130 = *(_QWORD *)(v131 - 8);
  v4 = *(_QWORD *)(v130 + 64);
  v5 = __chkstk_darwin(v131);
  v128 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v138 = (char *)&v113 - v6;
  v7 = sub_100047110((uint64_t *)&unk_100836170);
  v129 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v129 + 64);
  v9 = __chkstk_darwin(v7);
  v143 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v127 = (char *)&v113 - v11;
  v12 = __chkstk_darwin(v10);
  v132 = (char *)&v113 - v13;
  v14 = __chkstk_darwin(v12);
  v135 = (char *)&v113 - v15;
  __chkstk_darwin(v14);
  v136 = (char *)&v113 - v16;
  v126 = type metadata accessor for NavigationPriority(0);
  v124 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v125 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for NavigationRoutingBehavior(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v123 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for NavigationSource(0);
  v117 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v120 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for NavigationIntent(0);
  v20 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v118 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v22);
  v116 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for NavigationRequest(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v142 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for NavigationResource(0);
  v140 = *(_QWORD *)(v25 - 8);
  v141 = v25;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v139 = (uint64_t *)((char *)&v113 - v29);
  v30 = type metadata accessor for Logger(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148[3] = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v148[4] = &off_10078FAE8;
  v148[0] = a1;
  v137 = a2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR___CHFitnessAppContext_navigationDelegate]);
  if (!Strong)
  {
    v70 = a1;
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v148);
  }
  v144 = Strong;
  v114 = v7;
  v35 = objc_msgSend(a1, "metadata");
  if (!v35)
  {
    v145 = 0u;
    v146 = 0u;
    goto LABEL_13;
  }
  v36 = v35;
  v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v35, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v38 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v40 = v39;
  if (!*(_QWORD *)(v37 + 16) || (v41 = sub_100438F74(v38, v39), (v42 & 1) == 0))
  {
    v145 = 0u;
    v146 = 0u;
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v37);
    goto LABEL_13;
  }
  sub_10003E9BC(*(_QWORD *)(v37 + 56) + 32 * v41, (uint64_t)&v145);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v37);
  if (!*((_QWORD *)&v146 + 1))
  {
LABEL_13:
    swift_unknownObjectRelease(v144);
    sub_10001BE90((uint64_t)&v145, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v148);
  }
  if ((swift_dynamicCast(v147, &v145, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v44 = v147[0];
    v43 = v147[1];
    v45 = v144;
    v46 = objc_msgSend(v144, "navigateToSeymourTab");
    if ((v46 & 1) != 0)
    {
      static Log.default.getter(v46);
      v47._countAndFlagsBits = 0xD000000000000059;
      v47._object = (void *)0x8000000100690C90;
      v48._object = (void *)0x80000001006A7920;
      v48._countAndFlagsBits = 0xD000000000000019;
      Logger.trace(file:function:)(v47, v48);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      v49 = v44;
      v50 = *(_QWORD **)&v137[OBJC_IVAR___CHFitnessAppContext_navigator];
      v51 = v50[14];
      v52 = v50[15];
      sub_100016804(v50 + 11, v51);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v51, v52);
      v53 = v139;
      *v139 = v49;
      v53[1] = v43;
      v54 = enum case for WorkoutNavigationResource.identifier(_:);
      v55 = type metadata accessor for WorkoutNavigationResource(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
      v57 = v140;
      v56 = v141;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v140 + 104))(v53, enum case for NavigationResource.workout(_:), v141);
      v58 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v57 + 16))(v28, v53, v56);
      v59 = v116;
      static NavigationAnnotation.tabSwitch.getter(v58);
      v60 = v118;
      *v118 = 1;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v20 + 104))(v60, enum case for NavigationIntent.push(_:), v115);
      v61 = v120;
      (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v120, enum case for NavigationSource.default(_:), v119);
      v62 = v123;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v123, enum case for NavigationRoutingBehavior.default(_:), v122);
      v63 = v125;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v125, enum case for NavigationPriority.default(_:), v126);
      v64 = v142;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v28, v60, v61, v62, v63, v59);
      sub_1001B9F9C(0, *(void **)&v137[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator], *(_QWORD *)&v137[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8]);
      v65 = sub_100016804(v50 + 6, v50[9]);
      v67 = (void *)*v65;
      v66 = v65[1];
      if ((v66 & 0x8000000000000000) != 0)
      {
        v72 = swift_retain(*v65);
        v69 = v127;
        AppCoordinator.navigateToRequest(_:)(v64, v72);
        sub_1001B9E74(v67, v66);
      }
      else
      {
        v68 = v67;
        v69 = v127;
        BrowsingViewController.navigateToRequest(_:)(v64);

      }
      v73 = v114;
      v74 = v129;
      v127 = *(char **)(v129 + 16);
      v75 = v143;
      ((void (*)(char *, char *, uint64_t))v127)(v143, v69, v114);
      v76 = *(unsigned __int8 *)(v74 + 80);
      v124 = ((v76 + 16) & ~v76) + v8;
      v77 = (v76 + 16) & ~v76;
      v126 = v77;
      v125 = (char *)(v76 | 7);
      v78 = swift_allocObject(&unk_1007AB2D8, v124, v76 | 7);
      v137 = *(char **)(v74 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v137)(v78 + v77, v75, v73);
      v79 = v130;
      v80 = v128;
      v81 = v138;
      v82 = v131;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v138, v131);
      v83 = *(unsigned __int8 *)(v79 + 80);
      v84 = (v83 + 16) & ~v83;
      v85 = (v4 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
      v86 = v69;
      v87 = swift_allocObject(&unk_1007AB300, v85 + 16, v83 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v87 + v84, v80, v82);
      v88 = (_QWORD *)(v87 + v85);
      *v88 = sub_100590940;
      v88[1] = v78;
      v128 = (char *)&type metadata for () + 8;
      v89 = v132;
      Promise.init(asyncOperation:)(sub_100590950, v87, (char *)&type metadata for () + 8);
      v129 = *(_QWORD *)(v74 + 8);
      v90 = v114;
      ((void (*)(char *, uint64_t))v129)(v86, v114);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v82);
      sub_1000252E0((uint64_t)v148, (uint64_t)&v145);
      v91 = swift_allocObject(&unk_1007AB328, 56, 7);
      sub_10002411C(&v145, v91 + 16);
      v92 = swift_allocObject(&unk_1007AB350, 32, 7);
      *(_QWORD *)(v92 + 16) = sub_10059105C;
      *(_QWORD *)(v92 + 24) = v91;
      v93 = swift_allocObject(&unk_1007AB378, 32, 7);
      *(_QWORD *)(v93 + 16) = sub_100591034;
      *(_QWORD *)(v93 + 24) = v92;
      v94 = v143;
      ((void (*)(char *, char *, uint64_t))v127)(v143, v89, v90);
      v95 = (v124 + 7) & 0xFFFFFFFFFFFFFFF8;
      v138 = (char *)(v95 + 16);
      v96 = v125;
      v97 = swift_allocObject(&unk_1007AB3A0, v95 + 16, v125);
      v98 = v126;
      ((void (*)(uint64_t, char *, uint64_t))v137)(v97 + v126, v94, v90);
      v99 = (_QWORD *)(v97 + v95);
      *v99 = sub_10046BB10;
      v99[1] = v93;
      v100 = v135;
      Promise.init(asyncOperation:)(sub_10016AEF8, v97, v128);
      v101 = (void (*)(char *, uint64_t))v129;
      ((void (*)(char *, uint64_t))v129)(v89, v90);
      sub_1000252E0((uint64_t)v148, (uint64_t)&v145);
      v102 = swift_allocObject(&unk_1007AB3C8, 56, 7);
      sub_10002411C(&v145, v102 + 16);
      v103 = swift_allocObject(&unk_1007AB3F0, 32, 7);
      *(_QWORD *)(v103 + 16) = sub_100591020;
      *(_QWORD *)(v103 + 24) = v102;
      ((void (*)(char *, char *, uint64_t))v127)(v94, v100, v90);
      v104 = swift_allocObject(&unk_1007AB418, v138, v96);
      ((void (*)(uint64_t, char *, uint64_t))v137)(v104 + v98, v94, v90);
      v105 = (_QWORD *)(v104 + v95);
      *v105 = sub_1001104C4;
      v105[1] = v103;
      v106 = v136;
      Promise.init(asyncOperation:)(sub_100110010, v104, v128);
      v101(v100, v90);
      v107 = v90;
      v108 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v90);
      v110 = v109;
      v111 = swift_allocObject(&unk_1007AB440, 32, 7);
      *(_QWORD *)(v111 + 16) = 0;
      *(_QWORD *)(v111 + 24) = 0;
      v108(sub_1001104CC, v111);
      swift_unknownObjectRelease(v144);
      swift_release(v110);
      v112 = swift_release(v111);
      ((void (*)(char *, uint64_t, __n128))v101)(v106, v107, v112);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v142, v134);
      (*(void (**)(_QWORD *, uint64_t))(v140 + 8))(v139, v141);
    }
    else
    {
      swift_unknownObjectRelease(v45);
      swift_bridgeObjectRelease(v43);
    }
  }
  else
  {
    swift_unknownObjectRelease(v144);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v148);
}

uint64_t sub_10058F170(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *Strong;
  uint64_t v35;
  uint64_t inited;
  __n128 v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  unint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  id v60;
  id v61;
  Swift::String v62;
  Swift::String v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _BYTE *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  _QWORD *v79;
  unint64_t v80;
  void *v81;
  id v82;
  char *v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  __n128 v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  void (*v124)(uint64_t (*)(), uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  id v161;
  __int128 v162;
  __int128 v163;
  _QWORD v164[2];
  char v165[8];
  _QWORD v166[5];

  v147 = sub_100047110(&qword_100830B18);
  v146 = *(_QWORD *)(v147 - 8);
  v6 = *(_QWORD *)(v146 + 64);
  __chkstk_darwin(v147);
  v144 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v154 = (char *)&v130 - v8;
  v9 = sub_100047110((uint64_t *)&unk_100836170);
  v145 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v145 + 64);
  __chkstk_darwin(v9);
  v159 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v160 = (char *)&v130 - v12;
  __chkstk_darwin(v13);
  v148 = (char *)&v130 - v14;
  __chkstk_darwin(v15);
  v151 = (char *)&v130 - v16;
  __chkstk_darwin(v17);
  v152 = (char *)&v130 - v18;
  v143 = (void (*)(char *, char *, uint64_t))type metadata accessor for NavigationPriority(0);
  v141 = *((_QWORD *)v143 - 1);
  __chkstk_darwin(v143);
  v142 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for NavigationRoutingBehavior(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v140 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for NavigationSource(0);
  v134 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v137 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for NavigationIntent(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v135 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v23);
  v133 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for NavigationRequest(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v158 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for NavigationResource(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v27 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v155 = (uint64_t *)((char *)&v130 - v29);
  v30 = type metadata accessor for Logger(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v130 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166[3] = &type metadata for SeymourWorkoutRecommendation;
  v166[4] = &off_1007A3C38;
  v166[0] = a1;
  v166[1] = a2;
  v153 = a3;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR___CHFitnessAppContext_navigationDelegate]);
  if (Strong)
  {
    v161 = Strong;
    v130 = v9;
    v35 = sub_100047110(&qword_100820A50);
    inited = swift_initStackObject(v35, v165);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    v37 = swift_bridgeObjectRetain(a2);
    *(_QWORD *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter(v37);
    *(_QWORD *)(inited + 40) = v38;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 56) = a2;
    swift_bridgeObjectRetain(a2);
    v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8(inited);
    v41 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter(v40);
    v49 = (CHWorkoutDetailHeartRateTableViewCell *)v42;
    if (*(_QWORD *)v39->cellPadding && (v50 = sub_100438F74(v41, v42), (v42 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)v39[1].cellInset + 32 * v50, (uint64_t)&v162);
    }
    else
    {
      v163 = 0u;
      v162 = 0u;
    }
    swift_bridgeObjectRelease(v49, (SEL)v42, v43, v44, v45, v46, v47, v48);
    swift_bridgeObjectRelease(v39, v51, v52, v53, v54, v55, v56, v57);
    if (*((_QWORD *)&v163 + 1))
    {
      if (swift_dynamicCast(v164, &v162, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v59 = v164[0];
        v58 = (CHWorkoutDetailHeartRateTableViewCell *)v164[1];
        v60 = v161;
        v61 = objc_msgSend(v161, "navigateToSeymourTab");
        if ((v61 & 1) != 0)
        {
          static Log.default.getter(v61);
          v62._countAndFlagsBits = 0xD000000000000059;
          v62._object = (void *)0x8000000100690C90;
          v63._object = (void *)0x80000001006A7920;
          v63._countAndFlagsBits = 0xD000000000000019;
          Logger.trace(file:function:)(v62, v63);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
          v64 = *(_QWORD **)&v153[OBJC_IVAR___CHFitnessAppContext_navigator];
          v65 = v64[14];
          v66 = v64[15];
          sub_100016804(v64 + 11, v65);
          dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v65, v66);
          v67 = v155;
          *v155 = v59;
          v67[1] = v58;
          v68 = enum case for WorkoutNavigationResource.identifier(_:);
          v69 = type metadata accessor for WorkoutNavigationResource(0);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v67, v68, v69);
          v70 = v156;
          v71 = v157;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v156 + 104))(v67, enum case for NavigationResource.workout(_:), v157);
          v72 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v70 + 16))(v27, v67, v71);
          v73 = v133;
          static NavigationAnnotation.tabSwitch.getter(v72);
          v74 = v135;
          *v135 = 1;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v131 + 104))(v74, enum case for NavigationIntent.push(_:), v132);
          v75 = v137;
          (*(void (**)(char *, _QWORD, uint64_t))(v134 + 104))(v137, enum case for NavigationSource.default(_:), v136);
          v76 = v140;
          (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v140, enum case for NavigationRoutingBehavior.default(_:), v139);
          v77 = v142;
          (*(void (**)(char *, _QWORD, _QWORD *))(v141 + 104))(v142, enum case for NavigationPriority.default(_:), v143);
          v78 = v158;
          NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v27, v74, v75, v76, v77, v73);
          sub_1001B9F9C(0, *(void **)&v153[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator], *(_QWORD *)&v153[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8]);
          v79 = sub_100016804(v64 + 6, v64[9]);
          v81 = (void *)*v79;
          v80 = v79[1];
          if ((v80 & 0x8000000000000000) != 0)
          {
            v91 = swift_retain(*v79);
            v83 = v160;
            AppCoordinator.navigateToRequest(_:)(v78, v91);
            sub_1001B9E74(v81, v80);
          }
          else
          {
            v82 = v81;
            v83 = v160;
            BrowsingViewController.navigateToRequest(_:)(v78);

          }
          v92 = v145;
          v143 = *(void (**)(char *, char *, uint64_t))(v145 + 16);
          v93 = v159;
          v94 = v130;
          v143(v159, v83, v130);
          v95 = *(unsigned __int8 *)(v92 + 80);
          v140 = (char *)(((v95 + 16) & ~v95) + v10);
          v96 = (v95 + 16) & ~v95;
          v142 = (char *)v96;
          v141 = v95 | 7;
          v97 = swift_allocObject(&unk_1007AB148, v140, v95 | 7);
          v153 = *(char **)(v92 + 32);
          ((void (*)(uint64_t, char *, uint64_t))v153)(v97 + v96, v93, v94);
          v98 = v146;
          v99 = v144;
          v100 = v154;
          v101 = v147;
          (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v144, v154, v147);
          v102 = *(unsigned __int8 *)(v98 + 80);
          v103 = (v102 + 16) & ~v102;
          v104 = (v6 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
          v105 = swift_allocObject(&unk_1007AB170, v104 + 16, v102 | 7);
          (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v105 + v103, v99, v101);
          v106 = (_QWORD *)(v105 + v104);
          *v106 = sub_100590940;
          v106[1] = v97;
          v144 = (char *)&type metadata for () + 8;
          v107 = v148;
          Promise.init(asyncOperation:)(sub_100590950, v105, (char *)&type metadata for () + 8);
          v108 = *(void (**)(char *, uint64_t))(v92 + 8);
          v108(v160, v94);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v101);
          sub_1000252E0((uint64_t)v166, (uint64_t)&v162);
          v109 = swift_allocObject(&unk_1007AB198, 56, 7);
          sub_10002411C(&v162, v109 + 16);
          v110 = swift_allocObject(&unk_1007AB1C0, 32, 7);
          *(_QWORD *)(v110 + 16) = sub_10059105C;
          *(_QWORD *)(v110 + 24) = v109;
          v111 = swift_allocObject(&unk_1007AB1E8, 32, 7);
          *(_QWORD *)(v111 + 16) = sub_100591034;
          *(_QWORD *)(v111 + 24) = v110;
          v112 = v159;
          v143(v159, v107, v94);
          v113 = (unint64_t)(v140 + 7) & 0xFFFFFFFFFFFFFFF8;
          v160 = (char *)(v113 + 16);
          v114 = v141;
          v115 = swift_allocObject(&unk_1007AB210, v113 + 16, v141);
          v116 = v142;
          ((void (*)(char *, char *, uint64_t))v153)(&v142[v115], v112, v94);
          v117 = (_QWORD *)(v115 + v113);
          *v117 = sub_10046BB10;
          v117[1] = v111;
          v118 = v151;
          Promise.init(asyncOperation:)(sub_10016AEF8, v115, v144);
          v108(v107, v94);
          sub_1000252E0((uint64_t)v166, (uint64_t)&v162);
          v119 = swift_allocObject(&unk_1007AB238, 56, 7);
          sub_10002411C(&v162, v119 + 16);
          v120 = swift_allocObject(&unk_1007AB260, 32, 7);
          *(_QWORD *)(v120 + 16) = sub_100591020;
          *(_QWORD *)(v120 + 24) = v119;
          v143(v112, v118, v94);
          v121 = swift_allocObject(&unk_1007AB288, v160, v114);
          ((void (*)(char *, char *, uint64_t))v153)(&v116[v121], v112, v94);
          v122 = (_QWORD *)(v121 + v113);
          *v122 = sub_1001104C4;
          v122[1] = v120;
          v123 = v152;
          Promise.init(asyncOperation:)(sub_100110010, v121, v144);
          v108(v118, v94);
          v124 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter(v94);
          v126 = v125;
          v127 = swift_allocObject(&unk_1007AB2B0, 32, 7);
          *(_QWORD *)(v127 + 16) = 0;
          *(_QWORD *)(v127 + 24) = 0;
          v124(sub_1001104CC, v127);
          swift_unknownObjectRelease(v161);
          swift_release(v126);
          v128 = swift_release(v127);
          ((void (*)(char *, uint64_t, __n128))v108)(v123, v94, v128);
          (*(void (**)(char *, uint64_t))(v149 + 8))(v158, v150);
          (*(void (**)(_QWORD *, uint64_t))(v156 + 8))(v155, v157);
        }
        else
        {
          swift_unknownObjectRelease(v60);
          swift_bridgeObjectRelease(v58, v84, v85, v86, v87, v88, v89, v90);
        }
      }
      else
      {
        swift_unknownObjectRelease(v161);
      }
    }
    else
    {
      swift_unknownObjectRelease(v161);
      sub_10001BE90((uint64_t)&v162, (uint64_t *)&unk_100828420);
    }
  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v166);
}

uint64_t sub_10058FDB0(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *Strong;
  uint64_t v35;
  __n128 v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  unint64_t v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  uint64_t v63;
  id v64;
  id v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _BYTE *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  _QWORD *v84;
  unint64_t v85;
  void *v86;
  id v87;
  char *v88;
  id v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  SEL v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (**v132)(uint64_t);
  char *v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (**v138)(uint64_t);
  char *v139;
  uint64_t v140;
  void (*v141)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  id v177;
  __int128 v178;
  __int128 v179;
  _QWORD v180[2];
  _QWORD v181[5];

  v164 = sub_100047110(&qword_100830B18);
  v163 = *(_QWORD *)(v164 - 8);
  v4 = *(_QWORD *)(v163 + 64);
  __chkstk_darwin(v164);
  v161 = (char *)&v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v171 = (char *)&v146 - v6;
  v7 = sub_100047110((uint64_t *)&unk_100836170);
  v162 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v162 + 64);
  __chkstk_darwin(v7);
  v176 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v160 = (char *)&v146 - v10;
  __chkstk_darwin(v11);
  v165 = (char *)&v146 - v12;
  __chkstk_darwin(v13);
  v168 = (char *)&v146 - v14;
  __chkstk_darwin(v15);
  v169 = (char *)&v146 - v16;
  v159 = type metadata accessor for NavigationPriority(0);
  v157 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v158 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for NavigationRoutingBehavior(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v156 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for NavigationSource(0);
  v150 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v153 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for NavigationIntent(0);
  v20 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v151 = (char *)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NavigationAnnotation(0);
  __chkstk_darwin(v22);
  v149 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for NavigationRequest(0);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v175 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for NavigationResource(0);
  v173 = *(_QWORD *)(v25 - 8);
  v174 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v172 = (uint64_t *)((char *)&v146 - v29);
  v30 = type metadata accessor for Logger(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181[3] = type metadata accessor for MindfulnessSessionViewModel(0);
  v181[4] = &off_10078FAD0;
  v181[0] = a1;
  v170 = a2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR___CHFitnessAppContext_navigationDelegate]);
  if (!Strong)
  {
    v89 = a1;
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v181);
  }
  v177 = Strong;
  v35 = MindfulnessSessionViewModel.metadata.getter(a1);
  if (!v35)
  {
    v178 = 0u;
    v179 = 0u;
    goto LABEL_13;
  }
  v37 = (CHWorkoutDetailHeartRateTableViewCell *)v35;
  v147 = v7;
  v38 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter(v36);
  v46 = (CHWorkoutDetailHeartRateTableViewCell *)v39;
  if (!*(_QWORD *)v37->cellPadding || (v47 = sub_100438F74(v38, v39), (v39 & 1) == 0))
  {
    v178 = 0u;
    v179 = 0u;
    swift_bridgeObjectRelease(v46, (SEL)v39, v40, v41, v42, v43, v44, v45);
    swift_bridgeObjectRelease(v37, v90, v91, v92, v93, v94, v95, v96);
    goto LABEL_13;
  }
  sub_10003E9BC(*(_QWORD *)v37[1].cellInset + 32 * v47, (uint64_t)&v178);
  swift_bridgeObjectRelease(v46, v48, v49, v50, v51, v52, v53, v54);
  swift_bridgeObjectRelease(v37, v55, v56, v57, v58, v59, v60, v61);
  if (!*((_QWORD *)&v179 + 1))
  {
LABEL_13:
    swift_unknownObjectRelease(v177);
    sub_10001BE90((uint64_t)&v178, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v181);
  }
  if ((swift_dynamicCast(v180, &v178, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v63 = v180[0];
    v62 = (CHWorkoutDetailHeartRateTableViewCell *)v180[1];
    v64 = v177;
    v65 = objc_msgSend(v177, "navigateToSeymourTab");
    if ((v65 & 1) != 0)
    {
      static Log.default.getter(v65);
      v66._countAndFlagsBits = 0xD000000000000059;
      v66._object = (void *)0x8000000100690C90;
      v67._object = (void *)0x80000001006A7920;
      v67._countAndFlagsBits = 0xD000000000000019;
      Logger.trace(file:function:)(v66, v67);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      v68 = v63;
      v69 = *(_QWORD **)&v170[OBJC_IVAR___CHFitnessAppContext_navigator];
      v70 = v69[14];
      v71 = v69[15];
      sub_100016804(v69 + 11, v70);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()(v70, v71);
      v72 = v172;
      *v172 = v68;
      v72[1] = v62;
      v73 = enum case for WorkoutNavigationResource.identifier(_:);
      v74 = type metadata accessor for WorkoutNavigationResource(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v72, v73, v74);
      v76 = v173;
      v75 = v174;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v173 + 104))(v72, enum case for NavigationResource.workout(_:), v174);
      v77 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v76 + 16))(v27, v72, v75);
      v78 = v149;
      static NavigationAnnotation.tabSwitch.getter(v77);
      v79 = v151;
      *v151 = 1;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v20 + 104))(v79, enum case for NavigationIntent.push(_:), v148);
      v80 = v153;
      (*(void (**)(char *, _QWORD, uint64_t))(v150 + 104))(v153, enum case for NavigationSource.default(_:), v152);
      v81 = v156;
      (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v156, enum case for NavigationRoutingBehavior.default(_:), v155);
      v82 = v158;
      (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v158, enum case for NavigationPriority.default(_:), v159);
      v83 = v175;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)(v27, v79, v80, v81, v82, v78);
      sub_1001B9F9C(0, *(void **)&v170[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator], *(_QWORD *)&v170[OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8]);
      v84 = sub_100016804(v69 + 6, v69[9]);
      v86 = (void *)*v84;
      v85 = v84[1];
      if ((v85 & 0x8000000000000000) != 0)
      {
        v105 = swift_retain(*v84);
        v88 = v160;
        AppCoordinator.navigateToRequest(_:)(v83, v105);
        sub_1001B9E74(v86, v85);
      }
      else
      {
        v87 = v86;
        v88 = v160;
        BrowsingViewController.navigateToRequest(_:)(v83);

      }
      v106 = v147;
      v107 = v162;
      v160 = *(char **)(v162 + 16);
      v108 = v176;
      ((void (*)(char *, char *, uint64_t))v160)(v176, v88, v147);
      v109 = *(unsigned __int8 *)(v107 + 80);
      v157 = ((v109 + 16) & ~v109) + v8;
      v110 = (v109 + 16) & ~v109;
      v159 = v110;
      v158 = (char *)(v109 | 7);
      v111 = swift_allocObject(&unk_1007AAEA0, v157, v109 | 7);
      v170 = *(char **)(v107 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v170)(v111 + v110, v108, v106);
      v112 = v163;
      v113 = v161;
      v114 = v171;
      v115 = v164;
      (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v161, v171, v164);
      v116 = *(unsigned __int8 *)(v112 + 80);
      v117 = (v116 + 16) & ~v116;
      v118 = (v4 + v117 + 7) & 0xFFFFFFFFFFFFFFF8;
      v119 = v88;
      v120 = swift_allocObject(&unk_1007AAEC8, v118 + 16, v116 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v120 + v117, v113, v115);
      v121 = (_QWORD *)(v120 + v118);
      *v121 = sub_100590940;
      v121[1] = v111;
      v161 = (char *)&type metadata for () + 8;
      v122 = v165;
      Promise.init(asyncOperation:)(sub_100590950, v120, (char *)&type metadata for () + 8);
      v162 = *(_QWORD *)(v107 + 8);
      v123 = v147;
      ((void (*)(char *, uint64_t))v162)(v119, v147);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v114, v115);
      sub_1000252E0((uint64_t)v181, (uint64_t)&v178);
      v124 = swift_allocObject(&unk_1007AAEF0, 56, 7);
      sub_10002411C(&v178, v124 + 16);
      v125 = swift_allocObject(&unk_1007AAF18, 32, 7);
      *(_QWORD *)(v125 + 16) = sub_100590964;
      *(_QWORD *)(v125 + 24) = v124;
      v126 = swift_allocObject(&unk_1007AAF40, 32, 7);
      *(_QWORD *)(v126 + 16) = sub_10059096C;
      *(_QWORD *)(v126 + 24) = v125;
      v127 = v176;
      ((void (*)(char *, char *, uint64_t))v160)(v176, v122, v123);
      v128 = (v157 + 7) & 0xFFFFFFFFFFFFFFF8;
      v171 = (char *)(v128 + 16);
      v129 = v158;
      v130 = swift_allocObject(&unk_1007AAF68, v128 + 16, v158);
      v131 = v159;
      ((void (*)(uint64_t, char *, uint64_t))v170)(v130 + v159, v127, v123);
      v132 = (uint64_t (**)(uint64_t))(v130 + v128);
      *v132 = sub_10016AEE4;
      v132[1] = (uint64_t (*)(uint64_t))v126;
      v133 = v168;
      Promise.init(asyncOperation:)(sub_10016AEF8, v130, v161);
      v134 = (void (*)(char *, uint64_t))v162;
      ((void (*)(char *, uint64_t))v162)(v122, v123);
      sub_1000252E0((uint64_t)v181, (uint64_t)&v178);
      v135 = swift_allocObject(&unk_1007AAF90, 56, 7);
      sub_10002411C(&v178, v135 + 16);
      v136 = swift_allocObject(&unk_1007AAFB8, 32, 7);
      *(_QWORD *)(v136 + 16) = sub_1005909A0;
      *(_QWORD *)(v136 + 24) = v135;
      ((void (*)(char *, char *, uint64_t))v160)(v127, v133, v123);
      v137 = swift_allocObject(&unk_1007AAFE0, v171, v129);
      ((void (*)(uint64_t, char *, uint64_t))v170)(v137 + v131, v127, v123);
      v138 = (uint64_t (**)(uint64_t))(v137 + v128);
      *v138 = sub_10010FFFC;
      v138[1] = (uint64_t (*)(uint64_t))v136;
      v139 = v169;
      Promise.init(asyncOperation:)(sub_100110010, v137, v161);
      v134(v133, v123);
      v140 = v123;
      v141 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v123);
      v143 = v142;
      v144 = swift_allocObject(&unk_1007AB008, 32, 7);
      *(_QWORD *)(v144 + 16) = 0;
      *(_QWORD *)(v144 + 24) = 0;
      v141(sub_100110028, v144);
      swift_unknownObjectRelease(v177);
      swift_release(v143);
      v145 = swift_release(v144);
      ((void (*)(char *, uint64_t, __n128))v134)(v139, v140, v145);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v175, v167);
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v172, v174);
    }
    else
    {
      swift_unknownObjectRelease(v64);
      swift_bridgeObjectRelease(v62, v98, v99, v100, v101, v102, v103, v104);
    }
  }
  else
  {
    swift_unknownObjectRelease(v177);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v181);
}

uint64_t sub_100590944()
{
  return sub_10004BE58(&qword_100830B18);
}

uint64_t sub_100590950(uint64_t a1, uint64_t a2)
{
  return sub_1001103E8(a1, a2, &qword_100830B18, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_10039B2F4);
}

uint64_t sub_100590964()
{
  uint64_t v0;

  return sub_1005329FC(v0 + 16);
}

uint64_t sub_10059096C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100590994()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1005909A0(uint64_t a1)
{
  uint64_t v1;

  return sub_100532BDC(a1, v1 + 16);
}

uint64_t sub_1005909B8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1005909C8(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_10058E534(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16));
}

uint64_t sub_1005909D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1005909F4(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "setImage:", a1);
}

uint64_t sub_100590A08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100590A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  id v21;
  id v22;
  _BYTE v24[24];

  v6 = sub_100047110(&qword_1008239C0);
  v7 = __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v24[-v10 - 8];
  v13 = type metadata accessor for Trainer(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1002C46E4(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
    return sub_10001BE90((uint64_t)v11, &qword_1008239C0);
  v18 = a2 + 16;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v11, v13);
  swift_beginAccess(v18, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel);

    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    v22 = sub_1004C3E8C(a3, (uint64_t)v9);
    sub_10001BE90((uint64_t)v9, &qword_1008239C0);
    objc_msgSend(v21, "setAttributedText:", v22);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_100590C04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100823AB0;
  if (!qword_100823AB0)
  {
    v1 = type metadata accessor for MindfulnessSessionViewModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100823AB0);
  }
  return result;
}

uint64_t sub_100590C4C()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100590C80(uint64_t a1)
{
  uint64_t v1;

  sub_10058E1B8(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100590C8C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_mindfulnessSessionViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_fitnessAppContext] = 0;
  v2 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_iconImageView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = (void *)UIView.withContentMode(_:)(2);

  v5 = objc_msgSend(v4, "layer");
  objc_msgSend(v5, "setCornerRadius:", 10.0);

  objc_msgSend(v4, "setClipsToBounds:", 1);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v4;
  v6 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_titleLabel;
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081E060 != -1)
    swift_once(&qword_10081E060, sub_10058CEE8);
  v8 = (void *)UILabel.withFont(_:)(qword_10083B830);

  objc_msgSend(v8, "setLineBreakMode:", 0);
  objc_msgSend(v8, "setNumberOfLines:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v6] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell_subtitleLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v9] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp34MindfulnessSessionDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/MindfulnessSessionDetailHeaderCell.swift", 51, 2, 147, 0);
  __break(1u);
}

uint64_t sub_100590EB0()
{
  return sub_10004BE58(&qword_100830B18);
}

uint64_t sub_100590EBC()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100590EC8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100590EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110((uint64_t *)&unk_100836170);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100590F40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_100047110((uint64_t *)&unk_100836170);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_100590F88()
{
  return sub_10004BE58(&qword_100830B18);
}

uint64_t sub_100590F94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100590FB8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100590FC4()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100590FE8()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_100591020(uint64_t a1)
{
  return sub_1005909A0(a1);
}

uint64_t sub_100591034()
{
  return sub_10059096C();
}

double sub_100591060(void (*a1)(double *__return_ptr, double *, char *), double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  void (*v24)(double *__return_ptr, double *, char *);
  double v25;
  double v26;

  v24 = a1;
  v7 = type metadata accessor for DateInterval(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  v14 = *(_QWORD *)(a4 + 16);
  if (v14)
  {
    v15 = a4;
    v16 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
    v22 = *(_QWORD *)(v8 + 72);
    v23 = v17;
    v21 = v15;
    v18 = swift_bridgeObjectRetain(v15);
    while (1)
    {
      v23(v13, v16, v7, v18);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v19)(v13, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
      {
        a4 = v21;
        goto LABEL_10;
      }
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      v24(&v25, &v26, v10);
      if (v4)
        break;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      a2 = v25;
      v26 = v25;
      v16 += v22;
      if (!--v14)
      {
        a4 = v21;
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
    v18 = swift_bridgeObjectRetain(a4);
LABEL_8:
    v19(v13, 1, 1, v7, v18);
LABEL_10:
    swift_bridgeObjectRelease(a4);
  }
  return a2;
}

uint64_t sub_100591260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = sub_100047110((uint64_t *)&unk_100828370);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v19 - v10;
  v13 = *(void (**)(char *, char *))(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
  }
  else
  {
    v15 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  }
  if (a3)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v16 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  else
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  swift_retain(v12);
  v13(v11, v9);
  swift_release(v12);
  sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100828370);
  return sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828370);
}

id sub_1005913D4(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  char **v42;
  const char *v43;
  id v44;
  _QWORD *v45;
  unsigned __int8 v46;
  uint64_t *v47;
  void *v48;
  CHWorkoutDetailHeartRateTableViewCell **v49;
  id v50;
  id v51;
  void *v52;
  void (*v53)(char *, char *, _QWORD *);
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t *v57;
  id v58;
  id v59;
  void (*v60)(char *, char *, _QWORD *);
  id v61;
  _QWORD *v62;
  char *v63;
  void (*v64)(_QWORD);
  char *v65;
  double v66;
  void (*v67)(char *, _QWORD *);
  id v68;
  NSString v69;
  id v70;
  uint64_t v71;
  objc_class *v72;
  objc_class *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v76;
  unint64_t v77;
  Class *v78;
  id v79;
  NSString v80;
  id v81;
  uint64_t v82;
  objc_class *v83;
  objc_class *v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  char v86;
  unint64_t v87;
  unint64_t v88;
  Class *v89;
  id v90;
  NSString v91;
  id v92;
  uint64_t v93;
  objc_class *v94;
  objc_class *v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  char v97;
  unint64_t v98;
  unint64_t v99;
  Class *v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  uint64_t v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  Class isa;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  id v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t KeyPath;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  objc_class *v155;
  id v156;
  char *v158;
  CHWorkoutDetailHeartRateTableViewCell **v159;
  char *v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  id v167;
  _QWORD *v168;
  id v169;
  char *v170;
  void *v171;
  objc_super v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE v176[32];

  v169 = a5;
  v162 = a4;
  v163 = a3;
  v171 = a2;
  v167 = a1;
  v164 = type metadata accessor for WorkoutChartGroupView(0);
  __chkstk_darwin(v164);
  v165 = (uint64_t)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v166 = (uint64_t *)((char *)&v158 - v8);
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v160 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for Date(0);
  v168 = (_QWORD *)*(v11 - 1);
  __chkstk_darwin(v11);
  v170 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v158 - v14;
  __chkstk_darwin(v16);
  v158 = (char *)&v158 - v17;
  v18 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity;
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity] = 0;
  v19 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  v20 = objc_allocWithZone((Class)UIView);
  v21 = v5;
  *(_QWORD *)&v5[v19] = objc_msgSend(v20, "init");
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = 0;
  v22 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  *(_QWORD *)&v21[v22] = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  v23 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  v24 = type metadata accessor for WorkoutGradientView();
  *(_QWORD *)&v21[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline] = 0;
  v25 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback;
  *(_QWORD *)&v21[v25] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  v159 = (CHWorkoutDetailHeartRateTableViewCell **)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions];
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions] = &_swiftEmptyArrayStorage;
  v26 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView;
  v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutChartHeaderView()), "init");
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v21[v26] = v27;
  v28 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue;
  v29 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v29, "setQualityOfService:", 25);
  objc_msgSend(v29, "setMaxConcurrentOperationCount:", 1);

  *(_QWORD *)&v21[v28] = v29;
  v31 = v162;
  v30 = v163;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_dataCalculator] = v163;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager] = v31;
  v32 = v169;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings] = v169;
  v33 = v167;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout] = v167;
  v34 = *(void **)&v5[v18];
  v35 = v171;
  *(_QWORD *)&v5[v18] = v171;
  v163 = v30;
  v36 = v31;
  v161 = v32;
  v37 = v33;
  v38 = v35;

  sub_1000DCA14();
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_downhillRunDateIntervals] = v39;
  v40 = objc_msgSend(v37, "sourceRevision");
  v41 = objc_msgSend(v40, "source");

  LODWORD(v40) = objc_msgSend(v41, "_hasFirstPartyBundleID");
  v42 = &selRef_supportsDistanceForWorkout_workoutActivity_;
  if (!(_DWORD)v40)
    v42 = &selRef_hasDistanceForWorkout_workoutActivity_;
  v43 = *v42;
  v162 = v36;
  v169 = v37;
  v167 = v38;
  v44 = v38;
  v45 = v168;
  v46 = objc_msgSend(v36, v43, v37, v44);
  v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance] = v46;
  v47 = &qword_10083B000;
  v48 = v35;
  v49 = v159;
  if (v48)
  {
    v50 = v167;
    v51 = objc_msgSend(v50, "endDate");
    if (v51)
    {
      v52 = v51;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

      v53 = (void (*)(char *, char *, _QWORD *))v45[4];
      v54 = (uint64_t)v160;
      v53(v160, v15, v11);
      ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v45[7])(v54, 0, 1, v11);
      if (((unsigned int (*)(uint64_t, uint64_t, _QWORD *))v45[6])(v54, 1, v11) != 1)
      {
        v55 = v158;
        v53(v158, (char *)v54, v11);
        v56 = objc_msgSend(v50, "startDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v56);

        v57 = &qword_10083B000;
        v53(&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_startDate], v15, v11);
        v53(&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate], v55, v11);
        goto LABEL_10;
      }
    }
    else
    {
      v54 = (uint64_t)v160;
      ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v45[7])(v160, 1, 1, v11);
    }

    sub_10001BE90(v54, (uint64_t *)&unk_100828370);
    v47 = &qword_10083B000;
  }
  v58 = v169;
  v59 = objc_msgSend(v169, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v59);

  v60 = (void (*)(char *, char *, _QWORD *))v45[4];
  v60(&v21[v47[282]], v15, v11);
  v61 = objc_msgSend(v58, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v61);

  v60(&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate], v15, v11);
  v57 = v47;
LABEL_10:
  v62 = v45;
  v63 = &v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate];
  v64 = (void (*)(_QWORD))v62[2];
  ((void (*)(char *, char *, _QWORD *))v64)(v15, &v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate], v11);
  v65 = v170;
  v160 = &v21[v57[282]];
  v64(v170);
  v66 = Date.timeIntervalSince(_:)(v65);
  v67 = (void (*)(char *, _QWORD *))v62[1];
  v67(v65, v11);
  v67(v15, v11);
  v168 = v11;
  if (v66 > 1350.0)
  {
    v68 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v69 = String._bridgeToObjectiveC()();
    v70 = objc_msgSend(v68, "localizedStringForKey:value:table:", v69, 0, 0);

    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v73 = v72;

    swift_beginAccess(v49, v176, 33, 0);
    v74 = *v49;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v49);
    *v49 = v74;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v74 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C(0, *(_QWORD *)v74->cellPadding + 1, 1, v74);
      *v49 = v74;
    }
    v77 = *(_QWORD *)v74->cellPadding;
    v76 = *(_QWORD *)v74->cellInset;
    if (v77 >= v76 >> 1)
    {
      v74 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C((_QWORD *)(v76 > 1), v77 + 1, 1, v74);
      *v49 = v74;
    }
    *(_QWORD *)v74->cellPadding = v77 + 1;
    v78 = &v74->super.super.super.super.isa + 2 * v77;
    v78[4] = (Class)v71;
    v78[5] = v73;
    swift_endAccess(v176);
    v11 = v168;
  }
  if (v66 > 5400.0)
  {
    v158 = v63;
    v79 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v80 = String._bridgeToObjectiveC()();
    v81 = objc_msgSend(v79, "localizedStringForKey:value:table:", v80, 0, 0);

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v84 = v83;

    swift_beginAccess(v49, v176, 33, 0);
    v85 = *v49;
    v86 = swift_isUniquelyReferenced_nonNull_native(*v49);
    *v49 = v85;
    if ((v86 & 1) == 0)
    {
      v85 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C(0, *(_QWORD *)v85->cellPadding + 1, 1, v85);
      *v49 = v85;
    }
    v88 = *(_QWORD *)v85->cellPadding;
    v87 = *(_QWORD *)v85->cellInset;
    if (v88 >= v87 >> 1)
    {
      v85 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C((_QWORD *)(v87 > 1), v88 + 1, 1, v85);
      *v49 = v85;
    }
    *(_QWORD *)v85->cellPadding = v88 + 1;
    v89 = &v85->super.super.super.super.isa + 2 * v88;
    v89[4] = (Class)v82;
    v89[5] = v84;
    swift_endAccess(v176);
    v11 = v168;
    v63 = v158;
  }
  swift_beginAccess(v49, v176, 0, 0);
  if (*(_QWORD *)(*v49)->cellPadding)
  {
    v90 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v91 = String._bridgeToObjectiveC()();
    v92 = objc_msgSend(v90, "localizedStringForKey:value:table:", v91, 0, 0);

    v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
    v95 = v94;

    swift_beginAccess(v49, &v174, 33, 0);
    v96 = *v49;
    v97 = swift_isUniquelyReferenced_nonNull_native(*v49);
    *v49 = v96;
    if ((v97 & 1) == 0)
    {
      v96 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C(0, *(_QWORD *)v96->cellPadding + 1, 1, v96);
      *v49 = v96;
    }
    v99 = *(_QWORD *)v96->cellPadding;
    v98 = *(_QWORD *)v96->cellInset;
    if (v99 >= v98 >> 1)
    {
      v96 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C((_QWORD *)(v98 > 1), v99 + 1, 1, v96);
      *v49 = v96;
    }
    *(_QWORD *)v96->cellPadding = v99 + 1;
    v100 = &v96->super.super.super.super.isa + 2 * v99;
    v100[4] = (Class)v93;
    v100[5] = v95;
    v101 = *v49;
    swift_endAccess(&v174);
    swift_bridgeObjectRetain(v101);
    v103 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013D7A4(v102);
    swift_bridgeObjectRelease(v101, v104, v105, v106, v107, v108, v109, v110);
    v111 = objc_allocWithZone((Class)UISegmentedControl);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v103, v113, v114, v115, v116, v117, v118, v119);
    v120 = objc_msgSend(v111, "initWithItems:", isa);

    *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl] = v120;
    v11 = v168;
    if (v120)
      objc_msgSend(v120, "setSelectedSegmentIndex:", *(_QWORD *)(*v49)->cellPadding - 1);
  }
  else
  {
    *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl] = 0;
  }
  ((void (*)(char *, char *, _QWORD *))v64)(v15, v160, v11);
  v121 = v170;
  ((void (*)(char *, char *, _QWORD *))v64)(v170, v63, v11);
  v122 = type metadata accessor for WorkoutChartProperties(0);
  swift_allocObject(v122, *(unsigned int *)(v122 + 48), *(unsigned __int16 *)(v122 + 52));
  v123 = sub_10026A764((uint64_t)v15, v121, 0, 1, 0, 1, 1, 10.0, 90.0);
  v124 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties;
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties] = v123;
  v125 = v169;
  v168 = v125;
  v170 = (char *)v167;
  v126 = v162;
  v127 = objc_msgSend(v162, "dataCalculator");
  v128 = *(_QWORD *)&v21[v124];
  v129 = type metadata accessor for WorkoutChartDataStore(0);
  swift_allocObject(v129, *(unsigned int *)(v129 + 48), *(unsigned __int16 *)(v129 + 52));
  v130 = v126;
  v169 = v130;
  v131 = v161;
  swift_retain(v128);
  v132 = sub_1004C73B8(v125, v171, v127, v131, v128, v130);
  v133 = *(_QWORD *)&v21[v124];
  KeyPath = swift_getKeyPath(&unk_100647D70);
  v135 = (uint64_t)v166;
  *v166 = KeyPath;
  v136 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v135, v136, 0);
  v137 = (int *)v164;
  v138 = *(int *)(v164 + 20);
  v139 = objc_allocWithZone((Class)UISelectionFeedbackGenerator);
  swift_retain(v132);
  *(_QWORD *)(v135 + v138) = objc_msgSend(v139, "init", swift_retain(v133).n128_f64[0]);
  v140 = v135 + v137[8];
  v173 = 0;
  State.init(wrappedValue:)(&v174, &v173, &type metadata for Bool);
  v141 = v175;
  *(_BYTE *)v140 = v174;
  *(_QWORD *)(v140 + 8) = v141;
  v142 = v135 + v137[9];
  v173 = 0;
  State.init(wrappedValue:)(&v174, &v173, &type metadata for Bool);
  v143 = v175;
  *(_BYTE *)v142 = v174;
  *(_QWORD *)(v142 + 8) = v143;
  v144 = (_QWORD *)(v135 + v137[7]);
  v145 = sub_1000083D8(&qword_100838DA8, type metadata accessor for WorkoutChartDataStore, (uint64_t)&unk_1006412B0);
  swift_retain(v132);
  *v144 = ObservedObject.init(wrappedValue:)(v146, v129, v145);
  v144[1] = v147;
  v148 = (uint64_t *)(v135 + v137[6]);
  v149 = sub_1000083D8(&qword_10083B9B0, type metadata accessor for WorkoutChartProperties, (uint64_t)&unk_1006314F0);
  v150 = ObservedObject.init(wrappedValue:)(v133, v122, v149);
  v152 = v151;
  swift_release(v132);
  *v148 = v150;
  v148[1] = v152;
  v153 = v165;
  sub_1005970E4(v135, v165);
  v154 = objc_allocWithZone((Class)sub_100047110(&qword_10083B9B8));
  *(_QWORD *)&v21[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController] = UIHostingController.init(rootView:)(v153);

  v155 = (objc_class *)type metadata accessor for WorkoutDetailedMetricsViewController(0);
  v172.receiver = v21;
  v172.super_class = v155;
  v156 = objc_msgSendSuper2(&v172, "initWithNibName:bundle:", 0, 0);
  swift_release(v132);

  sub_1005971F4(v135);
  return v156;
}

void sub_100592228()
{
  char *v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char **v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  NSString v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char **v26;
  char **v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  const char *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  Class isa;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  id v103;
  id v104;
  uint64_t v105;
  void *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  char v111[48];
  objc_super v112;

  v2 = v0;
  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v107 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for WorkoutDetailedMetricsViewController(0);
  v112.receiver = v0;
  v112.super_class = v5;
  objc_msgSendSuper2(&v112, "viewDidLoad");
  v6 = &selRef_systemBlueColor;
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v8 = v7;
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "systemBackgroundColor");
  objc_msgSend(v8, "setBackgroundColor:", v10);

  v11 = objc_msgSend(v2, "navigationItem");
  v12 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v2, "close");
  objc_msgSend(v11, "setRightBarButtonItem:", v12);

  v13 = objc_msgSend(v2, "navigationItem");
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v1 = v17;

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1, v19, v20, v21, v22, v23, v24, v25);
  objc_msgSend(v13, "setTitle:", v18);

  v26 = &selRef_setIncludeUpcomingEventMembers_;
  v27 = &selRef__insertGuidedRunMediaMomentsSection;
  if ((uint64_t)objc_msgSend(*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings], "count") < 2)
  {
LABEL_19:
    v76 = *(_QWORD *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties]
        + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate;
    *(_QWORD *)(v76 + 8) = &off_1007AB458;
    swift_unknownObjectWeakAssign(v76, v2);
    sub_1005945DC(0);
    v77 = type metadata accessor for Date(0);
    v78 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v107, 1, 1, v77);
    sub_100593D6C(v78);
    sub_10001BE90(v78, (uint64_t *)&unk_100828370);
    v79 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
    objc_msgSend(*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView], v27[341], *(_QWORD *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView]);
    v80 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl];
    if (v80)
    {
      v81 = v80;
      objc_msgSend(v81, "addTarget:action:forControlEvents:", v2, "durationChanged:", 4096);
      objc_msgSend(v81, v26[285], 0);
      objc_msgSend(*(id *)&v2[v79], v27[341], v81);

    }
    objc_msgSend(*(id *)&v2[v79], v26[285], 0, v102);
    v82 = objc_msgSend(v2, v6[123]);
    if (v82)
    {
      v83 = v82;
      objc_msgSend(v82, v27[341], *(_QWORD *)&v2[v79]);

      v84 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController];
      v85 = objc_msgSend(v84, v6[123]);
      if (v85)
      {
        v86 = v85;
        objc_msgSend(v85, v26[285], 0);

        v87 = objc_msgSend(v84, v6[123]);
        if (v87)
        {
          v88 = v87;
          v89 = objc_msgSend(v9, "clearColor");
          objc_msgSend(v88, "setBackgroundColor:", v89);

          v90 = objc_msgSend(v2, v6[123]);
          if (v90)
          {
            v91 = v90;
            v92 = objc_msgSend(v84, v6[123]);
            if (v92)
            {
              v93 = v92;
              objc_msgSend(v91, v27[341], v92);

              objc_msgSend(v2, "addChildViewController:", v84);
              objc_msgSend(v84, "didMoveToParentViewController:", v2);
              sub_100592DE0();
              sub_100594A70();
              return;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v28 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView], "setDelegate:", v2);
  objc_msgSend(*(id *)&v2[v28], "setShowsScale:", 1);
  objc_msgSend(*(id *)&v2[v28], "setShowsCompass:", 0);
  objc_msgSend(*(id *)&v2[v28], "setShowsAttribution:", 0);
  objc_msgSend(*(id *)&v2[v28], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v2[v28], "setMapType:", 5);
  v29 = objc_msgSend(*(id *)&v2[v28], "layer");
  objc_msgSend(v29, "setCornerRadius:", 12.0);

  v105 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView], "addSubview:", *(_QWORD *)&v2[v28]);
  v30 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  v31 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView];
  v32 = sub_100047110((uint64_t *)&unk_100828340);
  inited = swift_initStackObject(v32, v111);
  *(_OWORD *)(inited + 16) = xmmword_100629280;
  v34 = v31;
  v35 = objc_msgSend(v9, "blackColor");
  v36 = objc_msgSend(v35, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(inited + 32) = v36;
  v106 = v9;
  v37 = objc_msgSend(v9, "blackColor");
  v38 = objc_msgSend(v37, "colorWithAlphaComponent:", 0.5);

  *(_QWORD *)(inited + 40) = v38;
  *(_QWORD *)&v108 = inited;
  *(_QWORD *)&v40 = specialized Array._endMutation()(v39).n128_u64[0];
  v41 = v108;
  v104 = v34;
  v1 = (CHWorkoutDetailHeartRateTableViewCell *)objc_msgSend(v34, "layer", v40);
  v42 = objc_opt_self(CAGradientLayer);
  v43 = (void *)swift_dynamicCastObjCClass(v1, v42);
  if (v43)
  {
    v103 = v43;
    if ((unint64_t)v41 >> 62)
      goto LABEL_28;
    v51 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v27 = &selRef__insertGuidedRunMediaMomentsSection;
      v26 = &selRef_setIncludeUpcomingEventMembers_;
      if (!v51)
        break;
      v110 = &_swiftEmptyArrayStorage;
      sub_100121554(0, v51 & ~(v51 >> 63), 0);
      if (v51 < 0)
      {
        __break(1u);
        goto LABEL_33;
      }
      v102 = v1;
      v6 = 0;
      v52 = v110;
      v1 = (CHWorkoutDetailHeartRateTableViewCell *)&off_1007F9000;
      while ((char **)v51 != v6)
      {
        if ((v41 & 0xC000000000000001) != 0)
          v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v41);
        else
          v53 = *(id *)(v41 + 8 * (_QWORD)v6 + 32);
        v54 = v53;
        v55 = objc_msgSend(v53, "CGColor", v102);
        type metadata accessor for CGColor(0);
        v109 = v56;

        *(_QWORD *)&v108 = v55;
        v110 = v52;
        v58 = *(_QWORD *)v52->cellPadding;
        v57 = *(_QWORD *)v52->cellInset;
        if (v58 >= v57 >> 1)
        {
          sub_100121554(v57 > 1, v58 + 1, 1);
          v52 = v110;
        }
        v6 = (char **)((char *)v6 + 1);
        *(_QWORD *)v52->cellPadding = v58 + 1;
        sub_100038FD4(&v108, &v52[v58 + 1]);
        if ((char **)v51 == v6)
        {
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v41, v59, v60, v61, v62, v63, v64, v65);
          v6 = &selRef_systemBlueColor;
          v27 = &selRef__insertGuidedRunMediaMomentsSection;
          v26 = &selRef_setIncludeUpcomingEventMembers_;
          v1 = v102;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_28:
      if (v41 < 0)
        v94 = v41;
      else
        v94 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v41);
      v51 = _CocoaArrayWrapper.endIndex.getter(v94);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v41, v95, v96, v97, v98, v99, v100, v101);
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v41, v44, v45, v46, v47, v48, v49, v50);
    v52 = &_swiftEmptyArrayStorage;
LABEL_18:
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v52, v67, v68, v69, v70, v71, v72, v73);
    objc_msgSend(v103, "setColors:", isa);

    v74 = *(id *)&v2[v30];
    sub_1003D4A8C((CHWorkoutDetailHeartRateTableViewCell *)&off_100783548);

    objc_msgSend(*(id *)&v2[v30], v26[285], 0);
    v75 = objc_msgSend(*(id *)&v2[v30], "layer");
    objc_msgSend(v75, "setCornerRadius:", 12.0);

    objc_msgSend(*(id *)&v2[v105], v27[341], *(_QWORD *)&v2[v30]);
    v9 = v106;
    goto LABEL_19;
  }
LABEL_39:

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x800000010069DF00, "FitnessApp/WorkoutGradientView.swift", 36, 2, 19, 0);
  __break(1u);
}

void sub_100592B5C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WorkoutDetailedMetricsViewController(0);
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  objc_msgSend(v3, "configureWithOpaqueBackground");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = v5;
  v8 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v7, "setShadowColor:", v8);

  v9 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v9, "setScrollEdgeAppearance:", v7);

  v10 = objc_msgSend(v1, "tabBarController");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "tabBar");

    v13 = objc_msgSend(objc_allocWithZone((Class)UITabBarAppearance), "init");
    objc_msgSend(v12, "setScrollEdgeAppearance:", v13);

  }
}

void sub_100592DE0()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  double v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  Class v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  void *v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  NSArray v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  CHWorkoutDetailHeartRateTableViewCell *v132;
  SEL v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  uint64_t v140;
  void *v141;
  id v142;
  void *v143;
  id v144;
  id v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  void *v155;
  id v156;
  id v157;
  void *v158;
  id v159;
  id v160;
  id v161;
  void *v162;
  id v163;
  id v164;
  void *v165;
  id v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  id v171;
  uint64_t v172;
  SEL v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  uint64_t v180;
  Class v181;
  CGRect v182;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v182.origin.x = v4;
  v182.origin.y = v6;
  v182.size.width = v8;
  v182.size.height = v10;
  Width = CGRectGetWidth(v182);
  v180 = sub_100047110((uint64_t *)&unk_100828340);
  v12 = swift_allocObject(v180, 56, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100624C90;
  v13 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  v14 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView], "topAnchor");
  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "safeAreaLayoutGuide");

  v18 = objc_msgSend(v17, "topAnchor");
  v19 = objc_msgSend(v14, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v12 + 32) = v19;
  v20 = objc_msgSend(*(id *)&v1[v13], "leadingAnchor");
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "safeAreaLayoutGuide");

  v24 = objc_msgSend(v23, "leadingAnchor");
  v25 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v24, 16.0);

  *(_QWORD *)(v12 + 40) = v25;
  v26 = objc_msgSend(*(id *)&v1[v13], "trailingAnchor");
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v28 = v27;
  v29 = (Width + -32.0) * 0.7;
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = objc_msgSend(v28, "safeAreaLayoutGuide");

  v32 = objc_msgSend(v31, "trailingAnchor");
  v33 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v32, -16.0);

  *(_QWORD *)(v12 + 48) = v33;
  specialized Array._endMutation()(v34);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v12, v36, v37, v38, v39, v40, v41, v42);
  objc_msgSend(v30, "activateConstraints:", isa);

  v43 = objc_msgSend(*(id *)&v1[v13], "heightAnchor");
  v44 = objc_msgSend(v43, "constraintEqualToConstant:", 0.0);

  v45 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint];
  *(_QWORD *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = v44;

  if ((uint64_t)objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings], "count") < 2)
  {
    v46 = swift_allocObject(v180, 56, 7);
    *(_OWORD *)(v46 + 16) = xmmword_100624C90;
    v72 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView];
    v83 = objc_msgSend(v72, "topAnchor");
    v84 = objc_msgSend(*(id *)&v1[v13], "topAnchor");
    v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

    *(_QWORD *)(v46 + 32) = v85;
    v86 = objc_msgSend(v72, "leadingAnchor");
    v87 = objc_msgSend(*(id *)&v1[v13], "leadingAnchor");
    v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

    *(_QWORD *)(v46 + 40) = v88;
    v89 = objc_msgSend(v72, "trailingAnchor");
    v90 = objc_msgSend(*(id *)&v1[v13], "trailingAnchor");
    v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

    *(_QWORD *)(v46 + 48) = v91;
  }
  else
  {
    v46 = swift_allocObject(v180, 120, 7);
    *(_OWORD *)(v46 + 16) = xmmword_1006375B0;
    v47 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
    v48 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView], "topAnchor");
    v49 = objc_msgSend(*(id *)&v1[v13], "topAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    *(_QWORD *)(v46 + 32) = v50;
    v51 = objc_msgSend(*(id *)&v1[v47], "leadingAnchor");
    v52 = objc_msgSend(*(id *)&v1[v13], "leadingAnchor");
    v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

    *(_QWORD *)(v46 + 40) = v53;
    v54 = objc_msgSend(*(id *)&v1[v47], "trailingAnchor");
    v55 = objc_msgSend(*(id *)&v1[v13], "trailingAnchor");
    v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

    *(_QWORD *)(v46 + 48) = v56;
    v57 = objc_msgSend(*(id *)&v1[v47], "heightAnchor");
    v58 = objc_msgSend(v57, "constraintEqualToConstant:", v29);

    *(_QWORD *)(v46 + 56) = v58;
    v59 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
    v60 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView], "topAnchor");
    v61 = objc_msgSend(*(id *)&v1[v47], "topAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v46 + 64) = v62;
    v63 = objc_msgSend(*(id *)&v1[v59], "leadingAnchor");
    v64 = objc_msgSend(*(id *)&v1[v47], "leadingAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(v46 + 72) = v65;
    v66 = objc_msgSend(*(id *)&v1[v59], "trailingAnchor");
    v67 = objc_msgSend(*(id *)&v1[v47], "trailingAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

    *(_QWORD *)(v46 + 80) = v68;
    v69 = objc_msgSend(*(id *)&v1[v59], "bottomAnchor");
    v70 = objc_msgSend(*(id *)&v1[v47], "bottomAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v46 + 88) = v71;
    v72 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView];
    v73 = objc_msgSend(v72, "bottomAnchor");
    v74 = objc_msgSend(*(id *)&v1[v47], "bottomAnchor");
    v75 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, -6.0);

    *(_QWORD *)(v46 + 96) = v75;
    v76 = objc_msgSend(v72, "leadingAnchor");
    v77 = objc_msgSend(*(id *)&v1[v13], "leadingAnchor");
    v78 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v77, 16.0);

    *(_QWORD *)(v46 + 104) = v78;
    v79 = objc_msgSend(v72, "trailingAnchor");
    v80 = objc_msgSend(*(id *)&v1[v13], "trailingAnchor");
    v81 = objc_msgSend(v79, "constraintEqualToAnchor:constant:", v80, -16.0);

    *(_QWORD *)(v46 + 112) = v81;
  }
  specialized Array._endMutation()(v82);
  v92 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46, v93, v94, v95, v96, v97, v98, v99);
  v100 = v30;
  objc_msgSend(v30, "activateConstraints:", v92);

  v101 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationControl];
  if (v101)
  {
    v102 = swift_allocObject(v180, 64, 7);
    *(_OWORD *)(v102 + 16) = xmmword_100623750;
    v103 = v101;
    v104 = objc_msgSend(v103, "topAnchor");
    v105 = objc_msgSend(v72, "bottomAnchor");
    v106 = objc_msgSend(v104, "constraintEqualToAnchor:constant:", v105, 22.0);

    v107 = NSLayoutConstraint.priority(_:)(750.0);
    *(_QWORD *)(v102 + 32) = v107;
    v108 = objc_msgSend(v103, "leadingAnchor");
    v109 = objc_msgSend(*(id *)&v1[v13], "leadingAnchor");
    v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

    *(_QWORD *)(v102 + 40) = v110;
    v111 = objc_msgSend(v103, "trailingAnchor");
    v112 = v180;
    v113 = objc_msgSend(*(id *)&v1[v13], "trailingAnchor");
    v114 = objc_msgSend(v111, "constraintEqualToAnchor:", v113);

    *(_QWORD *)(v102 + 48) = v114;
    v115 = objc_msgSend(v103, "bottomAnchor");
    v116 = objc_msgSend(*(id *)&v1[v13], "bottomAnchor");
    v117 = objc_msgSend(v115, "constraintEqualToAnchor:", v116);

    *(_QWORD *)(v102 + 56) = v117;
    v100 = v30;
    specialized Array._endMutation()(v118);
    v119.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v102, v120, v121, v122, v123, v124, v125, v126);
    objc_msgSend(v30, "activateConstraints:", v119.super.isa);

  }
  else
  {
    v112 = v180;
    v127 = swift_allocObject(v180, 40, 7);
    *(_OWORD *)(v127 + 16) = xmmword_100623630;
    v128 = objc_msgSend(*(id *)&v1[v13], "bottomAnchor");
    v129 = objc_msgSend(v72, "bottomAnchor");
    v130 = objc_msgSend(v128, "constraintEqualToAnchor:", v129);

    *(_QWORD *)(v127 + 32) = v130;
    specialized Array._endMutation()(v131);
    v132 = (CHWorkoutDetailHeartRateTableViewCell *)v127;
    v119.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v132, v133, v134, v135, v136, v137, v138, v139);
    objc_msgSend(v30, "activateConstraints:", v119.super.isa);
  }

  v140 = swift_allocObject(v112, 72, 7);
  *(_OWORD *)(v140 + 16) = xmmword_10062ED40;
  v141 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartsController];
  v142 = objc_msgSend(v141, "view");
  if (!v142)
    goto LABEL_22;
  v143 = v142;
  v144 = objc_msgSend(v142, "topAnchor");

  v145 = objc_msgSend(*(id *)&v1[v13], "bottomAnchor");
  v146 = objc_msgSend(v144, "constraintEqualToAnchor:constant:", v145, 16.0);

  *(_QWORD *)(v140 + 32) = v146;
  v147 = objc_msgSend(v141, "view");
  if (!v147)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v148 = v147;
  v149 = objc_msgSend(v147, "leadingAnchor");

  v150 = objc_msgSend(v1, "view");
  if (!v150)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v151 = v150;
  v152 = objc_msgSend(v150, "leadingAnchor");

  v153 = objc_msgSend(v149, "constraintEqualToAnchor:", v152);
  *(_QWORD *)(v140 + 40) = v153;
  v154 = objc_msgSend(v141, "view");
  if (!v154)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v155 = v154;
  v156 = objc_msgSend(v154, "trailingAnchor");

  v157 = objc_msgSend(v1, "view");
  if (!v157)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v158 = v157;
  v159 = objc_msgSend(v157, "trailingAnchor");

  v160 = objc_msgSend(v156, "constraintEqualToAnchor:", v159);
  *(_QWORD *)(v140 + 48) = v160;
  v161 = objc_msgSend(v141, "view");
  if (!v161)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v162 = v161;
  v163 = objc_msgSend(v161, "bottomAnchor");

  v164 = objc_msgSend(v1, "view");
  if (!v164)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v165 = v164;
  v166 = objc_msgSend(v164, "bottomAnchor");

  v167 = objc_msgSend(v163, "constraintEqualToAnchor:", v166);
  *(_QWORD *)(v140 + 56) = v167;
  v168 = objc_msgSend(v141, "view");
  if (v168)
  {
    v169 = v168;
    v170 = objc_msgSend(v168, "heightAnchor");

    v171 = objc_msgSend(v170, "constraintGreaterThanOrEqualToConstant:", v29);
    *(_QWORD *)(v140 + 64) = v171;
    specialized Array._endMutation()(v172);
    v181 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v140, v173, v174, v175, v176, v177, v178, v179);
    objc_msgSend(v100, "activateConstraints:", v181);

    return;
  }
LABEL_29:
  __break(1u);
}

void sub_100593D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;

  v2 = v1;
  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __chkstk_darwin(v9);
  v14 = (uint64_t *)((char *)&v61 - v13);
  __chkstk_darwin(v12);
  v16 = (char *)&v61 - v15;
  sub_100031D7C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828370);
    v17 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties;
    v18 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties);
    v19 = *(double *)(v18 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    v20 = *(double *)(v18 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
        * *(double *)(v18 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    if (v19 < v20 || v19 - v20 < 0.01)
    {
      v56 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v14, v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_endDate, v7);
      sub_100594240((uint64_t)v14);
      v58 = v57;
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v14, v7);
      v59 = *(void **)(v56 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
      v60 = String._bridgeToObjectiveC()();
      objc_msgSend(v59, "setText:", v60);
      swift_bridgeObjectRelease(v58);

    }
    else
    {
      KeyPath = swift_getKeyPath(&unk_100647D28);
      v22 = swift_getKeyPath(&unk_100647D50);
      swift_retain(v18);
      static Published.subscript.getter(v14, v23, KeyPath, v22);
      swift_release(v18);
      swift_release(KeyPath);
      swift_release(v22);
      sub_100594240((uint64_t)v14);
      v62 = v24;
      v26 = v25;
      v27 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
      v27(v14, v7);
      v28 = *(_QWORD *)(v2 + v17);
      v29 = swift_getKeyPath(&unk_100647D28);
      v30 = swift_getKeyPath(&unk_100647D50);
      swift_retain(v28);
      static Published.subscript.getter(v11, v31, v29, v30);
      swift_release(v29);
      swift_release(v30);
      Date.addingTimeInterval(_:)(v32, *(double *)(v28 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v28 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
      v27(v11, v7);
      swift_release(v28);
      sub_100594240((uint64_t)v14);
      v34 = v33;
      v36 = v35;
      v27(v14, v7);
      v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      v43 = sub_100047110((uint64_t *)&unk_100827460);
      v44 = swift_allocObject(v43, 112, 7);
      *(_OWORD *)(v44 + 16) = xmmword_100620BC0;
      *(_QWORD *)(v44 + 56) = &type metadata for String;
      v45 = sub_100038CF8();
      *(_QWORD *)(v44 + 32) = v62;
      *(_QWORD *)(v44 + 40) = v26;
      *(_QWORD *)(v44 + 96) = &type metadata for String;
      *(_QWORD *)(v44 + 104) = v45;
      *(_QWORD *)(v44 + 64) = v45;
      *(_QWORD *)(v44 + 72) = v34;
      *(_QWORD *)(v44 + 80) = v36;
      String.init(format:_:)(v40, v42, v44, v46);
      v48 = v47;
      swift_bridgeObjectRelease(v42);
      v49 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView)
                     + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
      v50 = String._bridgeToObjectiveC()();
      objc_msgSend(v49, "setText:", v50);
      swift_bridgeObjectRelease(v48);

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    v51 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
    sub_100594240((uint64_t)v16);
    v53 = v52;
    v54 = *(void **)(v51 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel);
    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v54, "setText:", v55);
    swift_bridgeObjectRelease(v53);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
  }
}

void sub_100594240(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD v18[6];
  void **aBlock;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  void *v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  if (v3)
  {
    v4 = swift_allocObject(&unk_1007AB668, 24, 7);
    *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
    v5 = v4 + 16;
    v23 = sub_1005973DC;
    v24 = v4;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v6 = sub_100596898;
    v7 = &unk_1007AB680;
  }
  else
  {
    v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
    v4 = swift_allocObject(&unk_1007AB668, 24, 7);
    *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
    v5 = v4 + 16;
    v23 = sub_1001F8A38;
    v24 = v4;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v6 = sub_100591260;
    v7 = &unk_1007AB6A8;
  }
  v21 = v6;
  v22 = v7;
  v8 = _Block_copy(&aBlock);
  v9 = v24;
  v10 = v3;
  swift_retain(v4);
  objc_msgSend(v10, "_enumerateActiveTimePeriods:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  swift_beginAccess(v5, &aBlock, 0, 0);
  v11 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain(v11);

  swift_release(v4);
  __chkstk_darwin(v12);
  v18[2] = a1;
  v13 = sub_100591060((void (*)(double *__return_ptr, double *, char *))sub_1005973E4, 0.0, (uint64_t)v18, v11);
  swift_bridgeObjectRelease(v11);
  v14 = floor(v13);
  if (v14 < 3600.0)
    v15 = 3;
  else
    v15 = 2;
  v16 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager), "fitnessUIFormattingManager");
  v17 = objc_msgSend(v16, "stringWithDuration:durationFormat:", v15, v14);

  if (v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v17);

  }
  else
  {
    __break(1u);
  }
}

void sub_1005944A8(double *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  DateInterval.end.getter(v6);
  v10 = Date.compare(_:)(v8);
  v11 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v12 = v11(v8, v4);
  if (v10 == 1)
  {
    v9 = v9 + DateInterval.duration.getter(v12);
  }
  else
  {
    DateInterval.start.getter(v12);
    v13 = Date.compare(_:)(v8);
    v14 = v11(v8, v4);
    if (v13 == 1)
    {
      DateInterval.start.getter(v14);
      v15 = Date.timeIntervalSince(_:)(v8);
      v11(v8, v4);
      v9 = v9 + v15;
    }
  }
  *a2 = v9;
}

void sub_1005945DC(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;

  v3 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance) != 1)
    return;
  v5 = *(void **)(v3 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v6, "distanceType");
    if (v7)
    {
      v2 = v7;
      v8 = objc_msgSend(v6, "statisticsForType:", v7);
      if (v8)
      {
        v9 = v8;
        v10 = a1;
        if (!a1)
          v10 = objc_msgSend(v8, "sumQuantity");
        v11 = a1;
        v36 = objc_msgSend(v6, "fiui_activityType");

        goto LABEL_14;
      }

    }
    else
    {
      v2 = v6;
    }

  }
  v10 = a1;
  if (!a1)
    v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout), "totalDistance"));
  v12 = *(void **)(v3 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
  v13 = a1;
  v36 = objc_msgSend(v12, "fiui_activityType");
  if (!v36)
  {

    __break(1u);
LABEL_30:

    swift_bridgeObjectRelease(v2);
    __break(1u);
    return;
  }
LABEL_14:
  if (!v10)
  {
LABEL_19:

    return;
  }
  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v10 = v10;
  v14 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle2, UIFontDescriptorSystemDesignRounded, 0x100000000, *(_QWORD *)&UIFontWeightMedium, 0, 0);
  v15 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
  v16 = objc_msgSend(v14, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v15);

  if (!v16)
  {

    goto LABEL_19;
  }
  v17 = FIUIDistanceTypeForActivityType(v36);
  v37 = 1;
  v18 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager;
  v19 = objc_msgSend(*(id *)(v3 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_formattingManager), "fitnessUIFormattingManager");
  v20 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  objc_msgSend(v10, "doubleValueForUnit:", v20);
  v22 = v21;

  v23 = objc_msgSend(v19, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:", v17, 0, &v37, v22);
  if (v23)
  {
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v2 = v25;

  }
  else
  {
    v24 = 0;
    v2 = 0;
  }
  v26 = objc_msgSend(*(id *)(v3 + v18), "fitnessUIFormattingManager");
  v27 = objc_msgSend(v26, "localizedShortUnitStringForDistanceUnit:", v37);

  if (!v27)
    goto LABEL_30;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;

  v30 = sub_100038CA0();
  v31 = StringProtocol.localizedUppercase.getter(&type metadata for String, v30);
  v33 = v32;
  swift_bridgeObjectRelease(v29);
  if (v2)
    v34 = v24;
  else
    v34 = 11565;
  if (!v2)
    v2 = (void *)0xE200000000000000;
  v35 = sub_1000387C4(v34, (uint64_t)v2, v31, v33, v16);
  swift_bridgeObjectRelease(v2);
  objc_msgSend(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView)+ OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel), "setAttributedText:", v35, swift_bridgeObjectRelease(v33).n128_f64[0]);

}

void sub_100594A70()
{
  uint64_t v0;
  uint64_t v1;
  char **v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  MKMapPoint v44;
  id v45;
  id v46;
  id v47;
  const char *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t i;
  id v57;
  void *v58;
  MKMapPoint v59;
  const char *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  SEL v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  uint64_t v105;
  void *v106;
  id v107;
  CLLocationCoordinate2D v108;
  CLLocationCoordinate2D v109;

  v5 = v0;
  v6 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings;
  v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings), "allValidLocations");
  v8 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v69 = v9;
    else
      v69 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v70 = _CocoaArrayWrapper.endIndex.getter(v69);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v71, v72, v73, v74, v75, v76, v77);
    if (!v70)
      goto LABEL_37;
  }
  else if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_37;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v17 = *(id *)(v9 + 32);
  }
  v25 = v17;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v18, v19, v20, v21, v22, v23, v24);
  v2 = &selRef_setRightBarButtonItems_animated_;
  objc_msgSend(v25, "coordinate");
  v3 = v26;
  v4 = v27;

  v28 = objc_msgSend(*(id *)(v5 + v6), "allValidLocations");
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v8);

  if (!((unint64_t)v9 >> 62))
  {
    v29 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_8;
LABEL_37:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v10, v11, v12, v13, v14, v15, v16);
    return;
  }
LABEL_33:
  if (v9 < 0)
    v78 = v9;
  else
    v78 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v29 = _CocoaArrayWrapper.endIndex.getter(v78);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v79, v80, v81, v82, v83, v84, v85);
  if (!v29)
    goto LABEL_37;
LABEL_8:
  v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
  }
  else if ((v9 & 0xC000000000000001) == 0)
  {
    if ((v30 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v30 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v31 = *(id *)(v9 + 8 * v30 + 32);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_42;
  }
  v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v9);
LABEL_13:
  v39 = v31;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend(v39, v2[8]);
  v41 = v40;
  v43 = v42;

  v107 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()), "init");
  objc_msgSend(v107, "setCoordinate:", v3, v4);
  v1 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  objc_msgSend(*(id *)(v5 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView), "addAnnotation:", v107);
  if (objc_msgSend(*(id *)(v5 + v6), "count") == (id)1)
  {
    v108.latitude = v3;
    v108.longitude = v4;
    v44 = MKMapPointForCoordinate(v108);
    v45 = *(id *)(v5 + v1);
    objc_msgSend(v45, "setVisibleMapRect:", v44.x, v44.y, 1500.0, 1500.0);

    objc_msgSend(*(id *)(v5 + v1), "setCenterCoordinate:", v3, v4);
LABEL_48:
    objc_msgSend(*(id *)(v5 + v1), "_setEdgeInsets:", 12.0, 12.0, 60.0, 12.0);

    return;
  }
  v46 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()), "init");
  objc_msgSend(v46, "setCoordinate:", v41, v43);
  v106 = v46;
  objc_msgSend(*(id *)(v5 + v1), "addAnnotation:", v46);
  v47 = objc_msgSend(*(id *)(v5 + v6), "allValidLocations");
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v8);

  if (!((unint64_t)v29 >> 62))
  {
    v55 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v55)
      goto LABEL_17;
LABEL_46:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v48, v49, v50, v51, v52, v53, v54);
LABEL_47:
    v94 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithPoints:count:", &_swiftEmptyArrayStorage + 1, objc_msgSend(*(id *)(v5 + v6), "count"));
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v95, v96, v97, v98, v99, v100, v101);
    v102 = *(void **)(v5 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
    *(_QWORD *)(v5 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline) = v94;
    v103 = v94;

    objc_msgSend(*(id *)(v5 + v1), "addOverlay:level:", v103, 1);
    v104 = *(id *)(v5 + v1);
    objc_msgSend(v103, "boundingMapRect");
    objc_msgSend(v104, "setVisibleMapRect:");

    goto LABEL_48;
  }
LABEL_42:
  if (v29 < 0)
    v86 = v29;
  else
    v86 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v29);
  v55 = _CocoaArrayWrapper.endIndex.getter(v86);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v87, v88, v89, v90, v91, v92, v93);
  if (!v55)
    goto LABEL_46;
LABEL_17:
  v105 = v1;
  sub_1001219A0(0, v55 & ~(v55 >> 63), 0);
  if ((v55 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v55; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
        v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v29);
      else
        v57 = *(id *)(v29 + 8 * i + 32);
      v58 = v57;
      objc_msgSend(v57, v2[8], v105);
      v59 = MKMapPointForCoordinate(v109);

      v68 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v67 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v68 >= v67 >> 1)
        sub_1001219A0(v67 > 1, v68 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v68 + 1;
      *((MKMapPoint *)&_swiftEmptyArrayStorage + v68 + 2) = v59;
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v60, v61, v62, v63, v64, v65, v66);
    v1 = v105;
    goto LABEL_47;
  }
  __break(1u);
}

uint64_t sub_100594FEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char v51[24];

  v3 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v3);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutChartGroupView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v48 - v11;
  v13 = objc_msgSend(a1, "selectedSegmentIndex", v10);
  v14 = v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions;
  v15 = swift_beginAccess(v1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions, v51, 0, 0);
  if (v13 == (id)(*(_QWORD *)(*(_QWORD *)v14 + 16) - 1))
  {
    v16 = (uint64_t)v12;
    dispatch thunk of UIHostingController.rootView.getter(v15);
    v17 = *(_QWORD *)&v12[*(int *)(v5 + 24) + 8];
    swift_retain(v17);
    sub_10026AB2C(1, 10.0, 90.0);
    swift_release(v17);
    v18 = *(_QWORD *)&v12[*(int *)(v5 + 28) + 8];
    v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties);
    *(_QWORD *)(v18 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v17;
    swift_retain(v17);
    swift_release(v19);
    v20 = type metadata accessor for TaskPriority(0);
    v21 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v50, 1, 1, v20);
    sub_1005970E4((uint64_t)v12, (uint64_t)v8);
    v22 = type metadata accessor for MainActor(0);
    v23 = static MainActor.shared.getter(v22);
    v24 = *(unsigned __int8 *)(v6 + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject(&unk_1007AB640, v25 + v7, v24 | 7);
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
    sub_10059712C((uint64_t)v8, v26 + v25);
    v27 = &unk_10083B9A0;
    v28 = (uint64_t)v21;
  }
  else
  {
    v49 = v7;
    v29 = v50;
    v30 = objc_msgSend(a1, "selectedSegmentIndex", v15.n128_f64[0]);
    v16 = (uint64_t)v12;
    ((void (*)(void))dispatch thunk of UIHostingController.rootView.getter)();
    v31 = *(_QWORD *)&v12[*(int *)(v5 + 24) + 8];
    swift_retain(v31);
    if (v30)
    {
      sub_10026AB2C(0, 60.0, 60.0);
      swift_release(v31);
      v32 = *(_QWORD *)&v12[*(int *)(v5 + 28) + 8];
      v33 = *(_QWORD *)(v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties);
      *(_QWORD *)(v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v31;
      swift_retain(v31);
      swift_release(v33);
      v34 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v29, 1, 1, v34);
      sub_1005970E4((uint64_t)v12, (uint64_t)v8);
      v35 = type metadata accessor for MainActor(0);
      v36 = static MainActor.shared.getter(v35);
      v37 = *(unsigned __int8 *)(v6 + 80);
      v38 = (v37 + 32) & ~v37;
      v26 = swift_allocObject(&unk_1007AB5F0, v38 + v49, v37 | 7);
      *(_QWORD *)(v26 + 16) = v36;
      *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
      sub_10059712C((uint64_t)v8, v26 + v38);
      v27 = &unk_10083B990;
    }
    else
    {
      sub_10026AB2C(0, 15.0, 60.0);
      swift_release(v31);
      v39 = *(_QWORD *)&v12[*(int *)(v5 + 28) + 8];
      v40 = *(_QWORD *)(v39 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties);
      *(_QWORD *)(v39 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v31;
      swift_retain(v31);
      swift_release(v40);
      v41 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v29, 1, 1, v41);
      sub_1005970E4((uint64_t)v12, (uint64_t)v8);
      v42 = type metadata accessor for MainActor(0);
      v43 = static MainActor.shared.getter(v42);
      v44 = *(unsigned __int8 *)(v6 + 80);
      v45 = (v44 + 32) & ~v44;
      v26 = swift_allocObject(&unk_1007AB618, v45 + v49, v44 | 7);
      *(_QWORD *)(v26 + 16) = v43;
      *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
      sub_10059712C((uint64_t)v8, v26 + v45);
      v27 = &unk_10083B998;
    }
    v28 = (uint64_t)v29;
  }
  v46 = sub_10020D9C0(v28, (uint64_t)v27, v26);
  swift_release(v46);
  return sub_1005971F4(v16);
}

id sub_1005954BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailedMetricsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100595680()
{
  return type metadata accessor for WorkoutDetailedMetricsViewController(0);
}

uint64_t type metadata accessor for WorkoutDetailedMetricsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10083B978;
  if (!qword_10083B978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailedMetricsViewController);
  return result;
}

uint64_t sub_1005956C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t v6;
  char *v7;
  const char *v8;
  char *v9;
  char *v10;
  const char *v11;
  const char *v12;
  const char *v13;
  char *v14;
  char *v15;
  const char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = "\b";
  v4[5] = &unk_100647D00;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8 = "\b";
    v9 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v10 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v11 = "\b";
    v12 = "\b";
    v13 = "\b";
    v14 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v16 = "\b";
    v17 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v18 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v19 = (char *)&value witness table for Builtin.NativeObject + 64;
    v20 = (char *)&value witness table for Builtin.UnknownObject + 64;
    return swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_10059582C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  objc_class *v45;
  char *v46;
  double *v47;
  id v48;
  void *v49;
  objc_super v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v3 = sub_100047110((uint64_t *)&unk_100828370);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - v14;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback], "selectionChanged");
  sub_100031D7C(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v15, v8, v9);
    v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v23(v6, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    sub_100593D6C((uint64_t)v6);
    sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828370);
    if (v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_supportsDistance] == 1)
    {
      v24 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue];
      objc_msgSend(v24, "cancelAllOperations");
      v23(v13, v15, v9);
      v25 = *(unsigned __int8 *)(v10 + 80);
      v26 = (v25 + 24) & ~v25;
      v27 = swift_allocObject(&unk_1007AB488, v26 + v11, v25 | 7);
      *(_QWORD *)(v27 + 16) = v1;
      v22((char *)(v27 + v26), v13, v9);
      aBlock[4] = sub_100596704;
      v52 = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_1007AB4A0;
      v28 = _Block_copy(aBlock);
      v29 = v52;
      v30 = v1;
      objc_msgSend(v24, "addOperationWithBlock:", v28, swift_release(v29).n128_f64[0]);
      _Block_release(v28);
      v31 = *(double *)(*(_QWORD *)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties]
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration)
          * 0.5;
      v32 = *(id *)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings];
      v33 = sub_1005B12A8((uint64_t)v15, v31);

      if (v33)
      {
        objc_msgSend(v33, "coordinate");
        v35 = v34;
        v37 = v36;

        v38 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
        v39 = *(void **)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
        if (v39)
        {
          objc_msgSend(v39, "setCoordinate:", v35, v37);
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        }
        v45 = (objc_class *)type metadata accessor for WorkoutScrubbedLocationAnnotation();
        v46 = (char *)objc_allocWithZone(v45);
        v47 = (double *)&v46[OBJC_IVAR____TtC10FitnessApp33WorkoutScrubbedLocationAnnotation_coordinate];
        *v47 = v35;
        v47[1] = v37;
        v50.receiver = v46;
        v50.super_class = v45;
        v48 = objc_msgSendSuper2(&v50, "init");
        v49 = *(void **)&v30[v38];
        *(_QWORD *)&v30[v38] = v48;
        v44 = v48;

        objc_msgSend(*(id *)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView], "addAnnotation:", v44);
      }
      else
      {
        v40 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
        v41 = *(void **)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
        if (!v41)
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        v42 = *(void **)&v30[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView];
        v43 = v41;
        objc_msgSend(v42, "removeAnnotation:", v43);
        v44 = *(id *)&v30[v40];
        *(_QWORD *)&v30[v40] = 0;

      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828370);
  v16 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation;
  v17 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation];
  if (v17)
  {
    v18 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView];
    v19 = v17;
    objc_msgSend(v18, "removeAnnotation:", v19);
    v20 = *(void **)&v1[v16];
    *(_QWORD *)&v1[v16] = 0;

  }
  sub_1005945DC(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
  sub_100593D6C((uint64_t)v6);
  return sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828370);
}

void sub_100595C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_dataCalculator);
  v8 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout);
  v20 = *(id *)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity);
  v9 = v7;
  v10 = v8;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v12 = swift_allocObject(&unk_1007AB4D8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1007AB500, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1005967CC;
  v22 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001ABA78;
  aBlock[3] = &unk_1007AB518;
  v16 = _Block_copy(aBlock);
  *(_QWORD *)&v17 = swift_release(v22).n128_u64[0];
  v18 = v20;
  objc_msgSend(v9, "totalDistanceForWorkout:workoutActivity:atDate:completion:", v10, v20, isa, v16, v17);
  _Block_release(v16);

}

void sub_100595E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  void **v31;
  __n128 v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  __n128 v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void ***p_aBlock;
  int v56;
  void **v57;
  os_log_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  char v65[8];
  uint64_t v66;
  void **aBlock;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  void *v70;
  void (*v71)();
  uint64_t v72;
  char v73[32];

  v60 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v63 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&p_aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&p_aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&p_aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v73, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v18 = (void *)Strong;
    if (a2)
    {
      v59 = v7;
      v19 = swift_errorRetain(a2);
      v20 = static os_log_type_t.error.getter(v19);
      v21 = HKLogWorkouts;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
      if (os_log_type_enabled(v21, v20))
      {
        swift_errorRetain(a2);
        swift_errorRetain(a2);
        v58 = v21;
        v22 = swift_slowAlloc(22, -1);
        v57 = (void **)swift_slowAlloc(64, -1);
        aBlock = v57;
        *(_DWORD *)v22 = 136315394;
        v56 = v20;
        v23 = Date.debugDescription.getter();
        v25 = v24;
        v66 = sub_10003E8EC(v23, v24, (uint64_t *)&aBlock);
        p_aBlock = &aBlock;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &aBlock, v22 + 4);
        v26 = swift_bridgeObjectRelease(v25);
        (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v26);
        *(_WORD *)(v22 + 12) = 2080;
        swift_getErrorValue(a2, v65, v64);
        v27 = Error.localizedDescription.getter(v64[1], v64[2]);
        v29 = v28;
        v66 = sub_10003E8EC(v27, v28, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, p_aBlock, v22 + 14);
        swift_bridgeObjectRelease(v29);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        v30 = v58;
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v56, "Error receiving distance for %s: %s", (uint8_t *)v22, 0x16u);
        v31 = v57;
        swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v33 = (void *)static OS_dispatch_queue.main.getter(v32);
      v34 = swift_allocObject(&unk_1007AB5A0, 24, 7);
      *(_QWORD *)(v34 + 16) = v18;
      v71 = sub_100596890;
      v72 = v34;
      aBlock = _NSConcreteStackBlock;
      v68 = 1107296256;
      v69 = sub_10002D0F8;
      v70 = &unk_1007AB5B8;
      v35 = _Block_copy(&aBlock);
      v36 = v72;
      v37 = v18;
      swift_release(v36);
      static DispatchQoS.unspecified.getter(v38);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v39 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v40 = sub_100047110(&qword_100828C80);
      v41 = sub_10002FB08();
      v7 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v59, v39);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v35);
      _Block_release(v35);

      swift_errorRelease(a2);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v62);
    }
    v42 = v60;
    if (v60)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v43 = v42;
      v45 = (void *)static OS_dispatch_queue.main.getter(v44);
      v46 = swift_allocObject(&unk_1007AB550, 32, 7);
      *(_QWORD *)(v46 + 16) = v18;
      *(_QWORD *)(v46 + 24) = v43;
      v71 = sub_100596848;
      v72 = v46;
      aBlock = _NSConcreteStackBlock;
      v68 = 1107296256;
      v69 = sub_10002D0F8;
      v70 = &unk_1007AB568;
      v47 = _Block_copy(&aBlock);
      v48 = v72;
      v49 = v18;
      v50 = v43;
      swift_release(v48);
      static DispatchQoS.unspecified.getter(v51);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v52 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v53 = sub_100047110(&qword_100828C80);
      v54 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v53, v54, v7, v52);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v47);
      _Block_release(v47);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v62);
    }
    else
    {

    }
  }
}

void sub_100596404(uint64_t a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView);
  v2 = objc_allocWithZone((Class)NSAttributedString);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithString:", v3);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel), "setAttributedText:", v4);
}

void sub_100596494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  NSURL *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  Class isa;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView), "urlForMapAttribution"));
  if (v9)
  {
    v10 = v9;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
    {
      URL._bridgeToObjectiveC()(v11);
      v13 = v12;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      v14 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435758((uint64_t)&_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1000083D8((unint64_t *)&qword_10081E820, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100622638);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
      objc_msgSend(v8, "openURL:options:completionHandler:", v13, isa, 0);

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  __break(1u);
}

uint64_t sub_100596690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100596704()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_100595C90(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100596734()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100596758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1005967CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_100595E54(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_10059681C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100596848()
{
  uint64_t v0;

  sub_1005945DC(*(void **)(v0 + 24));
}

uint64_t sub_10059686C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100596890()
{
  uint64_t v0;

  sub_100596404(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100596898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v17 - v11;
  v14 = *(void (**)(char *, char *))(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(a2);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(a3);
  swift_retain(v13);
  v14(v12, v10);
  swift_release(v13);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_100596984@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100647D28);
  v5 = swift_getKeyPath(&unk_100647D50);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1005969EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v17;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v17 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v17 - v10, a1, v4, v9);
  v13 = *a2;
  KeyPath = swift_getKeyPath(&unk_100647D28);
  v15 = swift_getKeyPath(&unk_100647D50);
  ((void (*)(char *, char *, uint64_t))v12)(v7, v11, v4);
  swift_retain(v13);
  static Published.subscript.setter(v7, v13, KeyPath, v15);
  sub_100269448();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

void sub_100596AF4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workoutActivity] = 0;
  v1 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_topViewHiddenConstraint] = 0;
  v2 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  v3 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapGradientView;
  v4 = type metadata accessor for WorkoutGradientView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_scrubbedAnnotation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline] = 0;
  v5 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_feedback;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailedMetricsViewController_durationOptions] = &_swiftEmptyArrayStorage;
  v6 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartHeaderView;
  v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutChartHeaderView()), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v6] = v7;
  v8 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_distanceQueue;
  v9 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v9, "setQualityOfService:", 25);
  objc_msgSend(v9, "setMaxConcurrentOperationCount:", 1);

  *(_QWORD *)&v0[v8] = v9;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailedMetricsViewController.swift", 53, 2, 113, 0);
  __break(1u);
}

id sub_100596CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  unint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  char *v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  objc_class *v81;
  id v82;
  id v84;
  unsigned int v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  objc_super v94;
  __int128 v95;
  __int128 v96;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v87 = (char *)&v84 - v8;
  __chkstk_darwin(v9);
  v86 = (id *)((char *)&v84 - v10);
  v11 = type metadata accessor for DateInterval(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_workout), "metadata", v13));
  v91 = v12;
  v92 = v11;
  v90 = v15;
  if (!v16)
  {
    v18 = a1;
    v95 = 0u;
    v96 = 0u;
    goto LABEL_9;
  }
  v17 = v16;
  v18 = a1;
  v19 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutExtendedMode);
  v28 = (CHWorkoutDetailHeartRateTableViewCell *)v21;
  if (!*(_QWORD *)v19->cellPadding || (v29 = sub_100438F74(v20, v21), (v21 & 1) == 0))
  {
    v95 = 0u;
    v96 = 0u;
    swift_bridgeObjectRelease(v28, (SEL)v21, v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease(v19, v46, v47, v48, v49, v50, v51, v52);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)v19[1].cellInset + 32 * v29, (uint64_t)&v95);
  swift_bridgeObjectRelease(v28, v30, v31, v32, v33, v34, v35, v36);
  swift_bridgeObjectRelease(v19, v37, v38, v39, v40, v41, v42, v43);
  if (!*((_QWORD *)&v96 + 1))
  {
LABEL_9:
    sub_10001BE90((uint64_t)&v95, (uint64_t *)&unk_100828420);
    goto LABEL_10;
  }
  v44 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  if ((swift_dynamicCast(&v93, &v95, (char *)&type metadata for Any + 8, v44, 6) & 1) == 0)
  {
LABEL_10:
    v85 = 0;
    goto LABEL_11;
  }
  v45 = v93;
  v85 = objc_msgSend(v93, "BOOLValue");

LABEL_11:
  v53 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_locationReadings);
  v54 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties;
  v55 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_chartProperties);
  KeyPath = swift_getKeyPath(&unk_100647D28);
  v57 = swift_getKeyPath(&unk_100647D50);
  swift_unknownObjectRetain(v18);
  v84 = v53;
  swift_retain(v55);
  v58 = v86;
  static Published.subscript.getter(v86, v59, KeyPath, v57);
  swift_release(v55);
  swift_release(KeyPath);
  swift_release(v57);
  v60 = *(_QWORD *)(v2 + v54);
  v61 = swift_getKeyPath(&unk_100647D28);
  v62 = swift_getKeyPath(&unk_100647D50);
  swift_retain(v60);
  static Published.subscript.getter(v6, v63, v61, v62);
  swift_release(v61);
  swift_release(v62);
  v64 = v87;
  Date.addingTimeInterval(_:)(v65, *(double *)(v60 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v60 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
  (*(void (**)(_QWORD *, uint64_t))(v88 + 8))(v6, v89);
  swift_release(v60);
  v66 = v90;
  DateInterval.init(start:end:)(v58, v64);
  v67 = *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_downhillRunDateIntervals);
  v68 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutChartedDistancePathRenderer(0));
  v69 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
  *(_QWORD *)&v68[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals] = 0;
  v71 = v91;
  v70 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(&v68[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval], v66, v92);
  v72 = *(CHWorkoutDetailHeartRateTableViewCell **)&v68[v69];
  *(_QWORD *)&v68[v69] = v67;
  swift_bridgeObjectRetain(v67);
  v73 = v68;
  swift_bridgeObjectRelease(v72, v74, v75, v76, v77, v78, v79, v80);
  v73[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode] = v85;

  *(_QWORD *)&v73[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = v84;
  v81 = (objc_class *)type metadata accessor for WorkoutOverlayPathRenderer();
  v94.receiver = v73;
  v94.super_class = v81;
  v82 = objc_msgSendSuper2(&v94, "initWithOverlay:", v18);
  swift_unknownObjectRelease(v18);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v70);
  return v82;
}

uint64_t sub_1005970E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutChartGroupView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059712C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutChartGroupView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100597170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100838E4C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_100519BF4(a1, v5, v6, v7);
}

uint64_t sub_1005971F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutChartGroupView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100597234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartGroupView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100838E4C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000DA0E4;
  return sub_100519BF4(a1, v5, v6, v7);
}

uint64_t sub_1005972BC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for WorkoutChartGroupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_100828058);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }

  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[7] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[9] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1005973B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005973DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005AA934(a1, a2, v2);
}

void sub_1005973E4(double *a1@<X0>, double *a2@<X8>)
{
  sub_1005944A8(a1, a2);
}

id sub_100597424(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  char *v4;
  id v7;
  id v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  NSString v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSString v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v31;

  *(_QWORD *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_nextMoveMode] = a1;
  *(_QWORD *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType] = a2;
  *(_QWORD *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_healthStore] = a3;
  *(_QWORD *)&v4[OBJC_IVAR___CHMoveModeChangePromptViewController_formattingManager] = a4;
  v7 = a3;
  v8 = a4;
  sub_100597C0C(a2);
  v10 = v9;
  sub_100597F44(a2);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10, v14, v15, v16, v17, v18, v19, v20);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12, v22, v23, v24, v25, v26, v27, v28);
  v31.receiver = v4;
  v31.super_class = (Class)type metadata accessor for MoveModeChangePromptViewController();
  v29 = objc_msgSendSuper2(&v31, "initWithTitle:detailText:icon:contentLayout:", v13, v21, 0, 2);

  return v29;
}

void sub_100597590()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  NSString v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  id v30;
  NSString v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  objc_super v40;

  v1 = v0;
  v2 = sub_100047110(&qword_10081F6D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  v8 = (objc_class *)type metadata accessor for MoveModeChangePromptViewController();
  v40.receiver = v0;
  v40.super_class = v8;
  objc_msgSendSuper2(&v40, "viewDidLoad");
  v9 = objc_msgSend(v0, "view");
  if (v9)
  {
    v10 = v9;
    v11 = (void *)objc_opt_self(UIColor);
    v12 = objc_msgSend(v11, "secondarySystemGroupedBackgroundColor");
    objc_msgSend(v10, "setBackgroundColor:", v12);

    v13 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
    objc_msgSend(v13, "addTarget:action:forControlEvents:", v1, "didTapAcceptButton", 64);
    v14 = *(_QWORD *)&v1[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType];
    sub_10059827C(v14);
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16, v18, v19, v20, v21, v22, v23, v24);
    objc_msgSend(v13, "setTitle:forState:", v17, 0);

    v25 = v13;
    UIButton.configuration.getter();
    v26 = type metadata accessor for UIButton.Configuration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v7, 1, v26))
    {
      sub_1000F612C((uint64_t)v7, (uint64_t)v4);
      UIButton.configuration.setter(v4);

      sub_1000F6174((uint64_t)v7);
    }
    else
    {
      UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v11, "blackColor"));
      UIButton.configuration.setter(v7);

    }
    v27 = objc_msgSend(v1, "buttonTray");
    objc_msgSend(v27, "addButton:", v25);

    sub_100598538(v14);
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
      objc_msgSend(v30, "addTarget:action:forControlEvents:", v1, "didTapSkipButton", 64);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29, v32, v33, v34, v35, v36, v37, v38);
      objc_msgSend(v30, "setTitle:forState:", v31, 0);

      v39 = objc_msgSend(v1, "buttonTray");
      objc_msgSend(v39, "addButton:", v30);

    }
    objc_msgSend(v1, "setModalInPresentation:", 1);

  }
  else
  {
    __break(1u);
  }
}

id sub_1005978E4()
{
  char *v0;
  unint64_t v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  char *v5;
  NSObject *v6;
  uint8_t *v7;
  const char *v8;
  os_log_type_t v9;
  void *v10;
  char *v11;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_notificationType];
  if (v1 > 6)
  {
    v9 = static os_log_type_t.fault.getter();
    v10 = (void *)HKLogActivity;
    v4 = v9;
    if (os_log_type_enabled(HKLogActivity, v9))
    {
      v11 = v0;
      v6 = v10;
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v7 = 134217984;
      v13 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v7 + 4);

      v8 = "MoveModeChangePromptViewController attempted to handle accept button for unknown notification type: %ld";
      goto LABEL_9;
    }
  }
  else if (((1 << v1) & 0x71) != 0)
  {
    v2 = static os_log_type_t.fault.getter();
    v3 = (void *)HKLogActivity;
    v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      v5 = v0;
      v6 = v3;
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v7 = 134217984;
      v13 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v7 + 4);

      v8 = "MoveModeChangePromptViewController attempted to handle accept button for unexpected notification type: %ld";
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v6, v4, v8, v7, 0xCu);
      swift_slowDealloc(v7, -1, -1);

    }
  }
  else if (((1 << v1) & 6) != 0)
  {
    objc_msgSend((id)objc_opt_self(CHMoveModeUtilities), "saveActivityMoveModeAndDefaultGoalSamplesForActivityMoveMode:healthStore:formattingManager:", *(_QWORD *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_nextMoveMode], *(_QWORD *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_healthStore], *(_QWORD *)&v0[OBJC_IVAR___CHMoveModeChangePromptViewController_formattingManager]);
  }
  return objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_100597B84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MoveModeChangePromptViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MoveModeChangePromptViewController()
{
  return objc_opt_self(CHMoveModeChangePromptViewController);
}

uint64_t sub_100597C0C(uint64_t a1)
{
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t *v7;
  const char *v8;
  os_log_type_t v9;
  void *v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      v2 = static os_log_type_t.fault.getter();
      v3 = (void *)HKLogActivity;
      v4 = v2;
      v5 = 0xD000000000000028;
      if (os_log_type_enabled(HKLogActivity, v2))
      {
        v6 = v3;
        v7 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v7 = 134217984;
        v15 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        v8 = "MoveModeChangePromptViewController attempted to localize title for unexpected notification type: %ld";
        goto LABEL_6;
      }
      break;
    case 1:
    case 2:
    case 3:
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      break;
    default:
      v5 = 0xD000000000000025;
      v9 = static os_log_type_t.fault.getter();
      v10 = (void *)HKLogActivity;
      v4 = v9;
      if (os_log_type_enabled(HKLogActivity, v9))
      {
        v6 = v10;
        v7 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v7 = 134217984;
        v15 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        v8 = "MoveModeChangePromptViewController attempted to localize title for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v6, v4, v8, v7, 0xCu);
        swift_slowDealloc(v7, -1, -1);

      }
      break;
  }
  return v5;
}

uint64_t sub_100597F44(uint64_t a1)
{
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t *v7;
  const char *v8;
  os_log_type_t v9;
  void *v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      v2 = static os_log_type_t.fault.getter();
      v3 = (void *)HKLogActivity;
      v4 = v2;
      v5 = 0xD00000000000002ELL;
      if (os_log_type_enabled(HKLogActivity, v2))
      {
        v6 = v3;
        v7 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v7 = 134217984;
        v15 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        v8 = "MoveModeChangePromptViewController attempted to localize description for unexpected notification type: %ld";
        goto LABEL_6;
      }
      break;
    case 1:
    case 2:
    case 3:
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      break;
    default:
      v5 = 0xD00000000000002BLL;
      v9 = static os_log_type_t.fault.getter();
      v10 = (void *)HKLogActivity;
      v4 = v9;
      if (os_log_type_enabled(HKLogActivity, v9))
      {
        v6 = v10;
        v7 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v7 = 134217984;
        v15 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        v8 = "MoveModeChangePromptViewController attempted to localize description for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v6, v4, v8, v7, 0xCu);
        swift_slowDealloc(v7, -1, -1);

      }
      break;
  }
  return v5;
}

uint64_t sub_10059827C(unint64_t a1)
{
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t *v7;
  const char *v8;
  id v9;
  NSString v10;
  id v11;
  os_log_type_t v12;
  void *v13;
  unint64_t v15;
  uint64_t v16;

  if (a1 > 6)
  {
    v5 = 0xD000000000000033;
    v12 = static os_log_type_t.fault.getter();
    v13 = (void *)HKLogActivity;
    v4 = v12;
    if (os_log_type_enabled(HKLogActivity, v12))
    {
      v6 = v13;
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v7 = 134217984;
      v15 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
      v8 = "MoveModeChangePromptViewController attempted to localize accept button title for unknown notification type: %ld";
      goto LABEL_8;
    }
  }
  else if (((1 << a1) & 0x71) != 0)
  {
    v2 = static os_log_type_t.fault.getter();
    v3 = (void *)HKLogActivity;
    v4 = v2;
    v5 = 0xD000000000000036;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      v6 = v3;
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v7 = 134217984;
      v15 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
      v8 = "MoveModeChangePromptViewController attempted to localize accept button title for unexpected notification type: %ld";
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v6, v4, v8, v7, 0xCu);
      swift_slowDealloc(v7, -1, -1);

    }
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  }
  return v5;
}

uint64_t sub_100598538(uint64_t a1)
{
  uint64_t v2;
  os_log_type_t v3;
  void *v4;
  os_log_type_t v5;
  NSObject *v6;
  uint8_t *v7;
  const char *v8;
  os_log_type_t v9;
  void *v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v2 = 0;
  switch(a1)
  {
    case 0:
    case 4:
    case 5:
    case 6:
      v3 = static os_log_type_t.fault.getter();
      v4 = (void *)HKLogActivity;
      v5 = v3;
      if (!os_log_type_enabled(HKLogActivity, v3))
        goto LABEL_7;
      v6 = v4;
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v7 = 134217984;
      v15 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
      v8 = "MoveModeChangePromptViewController attempted to localize skip button title for unexpected notification type: %ld";
      goto LABEL_6;
    case 1:
    case 2:
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

      v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      break;
    case 3:
      return v2;
    default:
      v9 = static os_log_type_t.fault.getter();
      v10 = (void *)HKLogActivity;
      v5 = v9;
      if (os_log_type_enabled(HKLogActivity, v9))
      {
        v6 = v10;
        v7 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v7 = 134217984;
        v15 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        v8 = "MoveModeChangePromptViewController attempted to localize skip button title for unknown notification type: %ld";
LABEL_6:
        _os_log_impl((void *)&_mh_execute_header, v6, v5, v8, v7, 0xCu);
        swift_slowDealloc(v7, -1, -1);

      }
LABEL_7:
      v2 = 0;
      break;
  }
  return v2;
}

uint64_t sub_1005987D0(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = v3;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  *(double *)(v4 + 24) = a1;
  return swift_task_switch(sub_1005987F0, 0, 0);
}

uint64_t sub_1005987F0()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  id v5;
  NSString v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double *v16;
  double **v17;
  uint64_t v18;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(*((_QWORD *)v0 + 6) + 24);
  v5 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(v4);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
  v14 = objc_msgSend(v5, "initWithBundleIdentifier:", v6);
  *((_QWORD *)v0 + 7) = v14;

  v15 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", v3, v2, v1);
  *((_QWORD *)v0 + 8) = v15;
  v16 = (double *)swift_task_alloc(48);
  *((_QWORD *)v0 + 9) = v16;
  *((_QWORD *)v16 + 2) = v14;
  *((_QWORD *)v16 + 3) = v15;
  v16[4] = v1;
  v17 = (double **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *((_QWORD *)v0 + 10) = v17;
  v18 = sub_100047110(&qword_100827568);
  *v17 = v0;
  v17[1] = (double *)sub_10059893C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000019, 0x80000001006A7FB0, sub_100598F78, v16, v18);
}

uint64_t sub_10059893C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005989E0;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 72));
    v4 = sub_1005989A8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005989A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005989E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100598A24(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v8 = sub_100047110(&qword_100832C58);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_1007AB728, v13 + v10, v12 | 7);
  *(double *)(v14 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100598FE8;
  v17 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100598C48;
  aBlock[3] = &unk_1007AB740;
  v15 = _Block_copy(aBlock);
  objc_msgSend(a2, "getCGImageForImageDescriptor:completion:", a3, v15, swift_release(v17).n128_f64[0]);
  _Block_release(v15);
}

void sub_100598B6C(void *a1, double a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;

  if (a1)
  {
    v4 = objc_allocWithZone((Class)UIImage);
    v5 = a1;
    v10 = objc_msgSend(v4, "initWithCGImage:scale:orientation:", v5, 0, a2);
    v6 = v10;
    v7 = sub_100047110(&qword_100832C58);
    CheckedContinuation.resume(returning:)(&v10, v7);

  }
  else
  {
    v8 = sub_10059902C();
    v10 = (id)swift_allocError(&type metadata for RecentWorkoutAppRecommendation.RecentWorkoutAppError, v8, 0, 0);
    v9 = sub_100047110(&qword_100832C58);
    CheckedContinuation.resume(throwing:)(&v10, v9);
  }
}

void sub_100598C48(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_100598C9C(double a1, double a2, double a3)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;

  v8 = v3[1];
  *(_OWORD *)(v4 + 16) = *v3;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v3[2];
  *(_OWORD *)(v4 + 57) = *(_OWORD *)((char *)v3 + 41);
  v9 = swift_task_alloc(dword_10083BA1C);
  *(_QWORD *)(v4 + 80) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_100598D38;
  *(_QWORD *)(v9 + 48) = v4 + 16;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(double *)(v9 + 24) = a1;
  return swift_task_switch(sub_1005987F0, 0, 0);
}

uint64_t sub_100598D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

Swift::Int sub_100598D8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  Hasher.init(_seed:)(v6, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100598E10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v6, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100598E80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v4 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v7, v5, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100598F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
}

unint64_t sub_100598F34()
{
  unint64_t result;

  result = qword_10083BA08;
  if (!qword_10083BA08)
  {
    result = swift_getWitnessTable(&unk_100647DEC, &type metadata for RecentWorkoutAppRecommendation);
    atomic_store(result, (unint64_t *)&qword_10083BA08);
  }
  return result;
}

void sub_100598F78(uint64_t a1)
{
  uint64_t v1;

  sub_100598A24(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_100598F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_100832C58);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100598FE8(void *a1)
{
  uint64_t v1;

  sub_100047110(&qword_100832C58);
  sub_100598B6C(a1, *(double *)(v1 + 16));
}

unint64_t sub_10059902C()
{
  unint64_t result;

  result = qword_10083BA20;
  if (!qword_10083BA20)
  {
    result = swift_getWitnessTable(&unk_100647F28, &type metadata for RecentWorkoutAppRecommendation.RecentWorkoutAppError);
    atomic_store(result, (unint64_t *)&qword_10083BA20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecentWorkoutAppRecommendation.RecentWorkoutAppError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1005990B0 + 4 * asc_100647DE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1005990D0 + 4 * byte_100647DE5[v4]))();
}

_BYTE *sub_1005990B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1005990D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005990D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005990E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005990E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005990F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RecentWorkoutAppRecommendation.RecentWorkoutAppError()
{
  return &type metadata for RecentWorkoutAppRecommendation.RecentWorkoutAppError;
}

uint64_t initializeWithCopy for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t assignWithTake for RecentWorkoutAppRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for RecentWorkoutAppRecommendation()
{
  return &type metadata for RecentWorkoutAppRecommendation;
}

unint64_t sub_100599284()
{
  unint64_t result;

  result = qword_10083BA28;
  if (!qword_10083BA28)
  {
    result = swift_getWitnessTable(&unk_100647F00, &type metadata for RecentWorkoutAppRecommendation.RecentWorkoutAppError);
    atomic_store(result, (unint64_t *)&qword_10083BA28);
  }
  return result;
}

uint64_t *sub_1005992C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for TrendListMetric(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100047110(&qword_10082EDD0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      v12 = *(int *)(v7 + 28);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for AttributedString(0);
      v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
      v17 = swift_bridgeObjectRetain(v11);
      v16(v13, v14, v15, v17);
      v18 = *(int *)(v7 + 32);
      v19 = (uint64_t *)((char *)a1 + v18);
      v20 = (uint64_t *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      v22 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
      v23 = swift_bridgeObjectRetain(v21);
      v22(a1, 0, 1, v7, v23);
    }
    v24 = *(int *)(a3 + 20);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = v26[8];
    if (v27 == 255)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v26[8];
    }
    else
    {
      v28 = *(_QWORD *)v26;
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v27;
      swift_bridgeObjectRetain(v28);
    }
  }
  return a1;
}

void sub_10059943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v4 = type metadata accessor for TrendListMetric(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16), v5, v6, v7, v8, v9, v10, v11);
    v12 = a1 + *(int *)(v4 + 28);
    v13 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + *(int *)(v4 + 32) + 8), v14, v15, v16, v17, v18, v19, v20);
  }
  v21 = a1 + *(int *)(a2 + 20);
  if (*(unsigned __int8 *)(v21 + 8) != 255)
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v21, v5, v6, v7, v8, v9, v10, v11);
}

_QWORD *sub_1005994F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100047110(&qword_10082EDD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v9 = a2[2];
    a1[1] = a2[1];
    a1[2] = v9;
    v10 = *(int *)(v6 + 28);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for AttributedString(0);
    v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
    v15 = swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13, v15);
    v16 = *(int *)(v6 + 32);
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
    v21 = swift_bridgeObjectRetain(v19);
    v20(a1, 0, 1, v6, v21);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[8];
  if (v25 == 255)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
  }
  else
  {
    v26 = *(_QWORD *)v24;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v25;
    swift_bridgeObjectRetain(v26);
  }
  return a1;
}

uint64_t sub_100599638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  int v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v11 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v11;
      v12 = *(int *)(v6 + 28);
      v13 = a1 + v12;
      v14 = a2 + v12;
      v15 = type metadata accessor for AttributedString(0);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
      v17 = swift_bridgeObjectRetain(v11);
      v16(v13, v14, v15, v17);
      v18 = *(int *)(v6 + 32);
      v19 = (_QWORD *)(a1 + v18);
      v20 = (_QWORD *)(a2 + v18);
      *v19 = *v20;
      v21 = v20[1];
      v19[1] = v21;
      v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
      v23 = swift_bridgeObjectRetain(v21);
      v22(a1, 0, 1, v6, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100011F54(a1, type metadata accessor for TrendListMetric);
LABEL_6:
    v24 = sub_100047110(&qword_10082EDD0);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v41 = *(_QWORD *)(a2 + 16);
  v42 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42, v43, v44, v45, v46, v47, v48, v49);
  v50 = *(int *)(v6 + 28);
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
  v54 = *(int *)(v6 + 32);
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v57 = v56[1];
  v58 = (CHWorkoutDetailHeartRateTableViewCell *)v55[1];
  v55[1] = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
LABEL_7:
  v25 = *(int *)(a3 + 20);
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *(unsigned __int8 *)(a1 + v25 + 8);
  v29 = *((unsigned __int8 *)v27 + 8);
  if (v28 == 255)
  {
    if (v29 == 255)
    {
      v66 = *v27;
      *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
      *(_QWORD *)v26 = v66;
    }
    else
    {
      v39 = *v27;
      *(_QWORD *)v26 = *v27;
      *(_BYTE *)(v26 + 8) = v29;
      swift_bridgeObjectRetain(v39);
    }
  }
  else if (v29 == 255)
  {
    sub_1005998A0((_QWORD *)v26);
    v40 = *((_BYTE *)v27 + 8);
    *(_QWORD *)v26 = *v27;
    *(_BYTE *)(v26 + 8) = v40;
  }
  else
  {
    v30 = *v27;
    v31 = *(CHWorkoutDetailHeartRateTableViewCell **)v26;
    *(_QWORD *)v26 = v30;
    *(_BYTE *)(v26 + 8) = v29;
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRelease(v31, v32, v33, v34, v35, v36, v37, v38);
  }
  return a1;
}

_QWORD *sub_1005998A0(_QWORD *a1)
{
  destroy for ActivitySharingHighlightDataProvider.State(a1);
  return a1;
}

_WORD *sub_1005998D4(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100047110(&qword_10082EDD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
    v9 = *(int *)(v6 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

_QWORD *sub_1005999DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;

  v6 = type metadata accessor for TrendListMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v18 = *(int *)(v6 + 28);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100011F54((uint64_t)a1, type metadata accessor for TrendListMetric);
LABEL_6:
    v29 = sub_100047110(&qword_10082EDD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  *(_WORD *)a1 = *(_WORD *)a2;
  v36 = a2[2];
  v37 = (CHWorkoutDetailHeartRateTableViewCell *)a1[2];
  a1[1] = a2[1];
  a1[2] = v36;
  swift_bridgeObjectRelease(v37, v11, v12, v13, v14, v15, v16, v17);
  v38 = *(int *)(v6 + 28);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  v42 = *(int *)(v6 + 32);
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  v47 = (CHWorkoutDetailHeartRateTableViewCell *)v43[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47, v48, v49, v50, v51, v52, v53, v54);
LABEL_7:
  v30 = *(int *)(a3 + 20);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  if (*((unsigned __int8 *)a1 + v30 + 8) == 255)
  {
LABEL_11:
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
    return a1;
  }
  v33 = v32[8];
  if (v33 == 255)
  {
    sub_1005998A0(v31);
    goto LABEL_11;
  }
  v34 = *(CHWorkoutDetailHeartRateTableViewCell **)v31;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v33;
  swift_bridgeObjectRelease(v34, v22, v23, v24, v25, v26, v27, v28);
  return a1;
}

uint64_t sub_100599BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100599BB8);
}

uint64_t sub_100599BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_100047110(&qword_10082EDD0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 <= 3)
    return 0;
  else
    return v9 ^ 0xFF;
}

uint64_t sub_100599C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100599C44);
}

uint64_t sub_100599C44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_10082EDD0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = ~(_BYTE)a2;
  return result;
}

uint64_t type metadata accessor for TrendsActionContext(uint64_t a1)
{
  return sub_100024334(a1, qword_10083BA88, (uint64_t)&nominal type descriptor for TrendsActionContext);
}

void sub_100599CD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1000087BC(319, (unint64_t *)&qword_100827158, type metadata accessor for TrendListMetric, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t *sub_100599D60(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = (int *)type metadata accessor for TrendsCard(0);
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = v21[16];
    sub_1000EB3F4(*(_QWORD *)v21, v23, v24);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v24;
    v15[v18[6]] = v16[v18[6]];
    v15[v18[7]] = v16[v18[7]];
    v15[v18[8]] = v16[v18[8]];
    v25 = v18[9];
    v26 = &v15[v25];
    v27 = &v16[v25];
    v28 = *(_QWORD *)v27;
    LOBYTE(v27) = v27[8];
    *(_QWORD *)v26 = v28;
    v26[8] = (char)v27;
    v29 = a3[6];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *(uint64_t *)((char *)a2 + v29 + 24);
    v33 = swift_bridgeObjectRetain(v28);
    if (v32)
    {
      v34 = *((_QWORD *)v31 + 4);
      *((_QWORD *)v30 + 3) = v32;
      *((_QWORD *)v30 + 4) = v34;
      (**(void (***)(char *, char *, uint64_t, __n128))(v32 - 8))(v30, v31, v32, v33);
    }
    else
    {
      v35 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v35;
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    }
    v36 = a3[7];
    v37 = a3[8];
    v12 = *(uint64_t *)((char *)a2 + v36);
    *(uint64_t *)((char *)a1 + v36) = v12;
    *(uint64_t *)((char *)a1 + v37) = *(uint64_t *)((char *)a2 + v37);
  }
  swift_retain(v12);
  return a1;
}

double sub_100599F48(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;
  double result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for TrendsCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[*(int *)(v8 + 20)], *(_QWORD *)&v6[*(int *)(v8 + 20) + 8], v6[*(int *)(v8 + 20) + 16]);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v6[*(int *)(v8 + 36)], v9, v10, v11, v12, v13, v14, v15);
  v16 = (_QWORD *)((char *)a1 + a2[6]);
  if (v16[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v16);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[7])).n128_u64[0];
  return result;
}

uint64_t *sub_10059A024(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = (int *)type metadata accessor for TrendsCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v23 = v16[9];
  v24 = &v13[v23];
  v25 = &v14[v23];
  v26 = *(_QWORD *)v25;
  LOBYTE(v25) = v25[8];
  *(_QWORD *)v24 = v26;
  v24[8] = (char)v25;
  v27 = a3[6];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(uint64_t *)((char *)a2 + v27 + 24);
  v31 = swift_bridgeObjectRetain(v26);
  if (v30)
  {
    v32 = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 3) = v30;
    *((_QWORD *)v28 + 4) = v32;
    (**(void (***)(char *, char *, uint64_t, __n128))(v30 - 8))(v28, v29, v30, v31);
  }
  else
  {
    v33 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v33;
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
  }
  v34 = a3[7];
  v35 = a3[8];
  v36 = *(uint64_t *)((char *)a2 + v34);
  *(uint64_t *)((char *)a1 + v34) = v36;
  *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
  swift_retain(v36);
  return a1;
}

uint64_t *sub_10059A1E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = (int *)type metadata accessor for TrendsCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  v23 = *(_QWORD *)v18;
  v24 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v25 = v18[16];
  v18[16] = v22;
  sub_1000EB41C(v23, v24, v25);
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v26 = v16[9];
  v27 = &v13[v26];
  v28 = &v14[v26];
  v29 = *(_QWORD *)v28;
  LOBYTE(v28) = v28[8];
  v30 = *(CHWorkoutDetailHeartRateTableViewCell **)v27;
  *(_QWORD *)v27 = v29;
  v27[8] = (char)v28;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
  v38 = a3[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = *(uint64_t *)((char *)a2 + v38 + 24);
  if (!*(uint64_t *)((char *)a1 + v38 + 24))
  {
    if (v41)
    {
      *((_QWORD *)v39 + 3) = v41;
      *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
      (**(void (***)(char *, char *))(v41 - 8))(v39, v40);
      goto LABEL_13;
    }
LABEL_12:
    v42 = *(_OWORD *)v40;
    v43 = *((_OWORD *)v40 + 1);
    *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
    *(_OWORD *)v39 = v42;
    *((_OWORD *)v39 + 1) = v43;
    goto LABEL_13;
  }
  if (!v41)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v39);
    goto LABEL_12;
  }
  sub_1000F1A58(v39, v40);
LABEL_13:
  v44 = a3[7];
  v45 = *(uint64_t *)((char *)a1 + v44);
  v46 = *(uint64_t *)((char *)a2 + v44);
  *(uint64_t *)((char *)a1 + v44) = v46;
  swift_retain(v46);
  swift_release(v45);
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  return a1;
}

char *sub_10059A408(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = (int *)type metadata accessor for TrendsCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v16 = v12[9];
  v17 = &v9[v16];
  v18 = &v10[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = a3[6];
  v20 = a3[7];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *sub_10059A56C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = (int *)type metadata accessor for TrendsCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v19 = v14[16];
  v14[16] = v16;
  sub_1000EB41C(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v20 = v12[9];
  v21 = &v9[v20];
  v22 = &v10[v20];
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = v22[8];
  v24 = *(CHWorkoutDetailHeartRateTableViewCell **)v21;
  *(_QWORD *)v21 = v23;
  v21[8] = (char)v22;
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  v32 = a3[6];
  v33 = &a1[v32];
  if (*(_QWORD *)&a1[v32 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v32]);
  v34 = *(_OWORD *)&a2[v32 + 16];
  *(_OWORD *)v33 = *(_OWORD *)&a2[v32];
  *((_OWORD *)v33 + 1) = v34;
  *((_QWORD *)v33 + 4) = *(_QWORD *)&a2[v32 + 32];
  v35 = a3[7];
  v36 = *(_QWORD *)&a1[v35];
  *(_QWORD *)&a1[v35] = *(_QWORD *)&a2[v35];
  swift_release(v36);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

uint64_t sub_10059A71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10059A728);
}

uint64_t sub_10059A728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TrendsCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10059A7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10059A7F0);
}

uint64_t sub_10059A7F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for TrendsCard(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  return result;
}

uint64_t type metadata accessor for TrendsCardView(uint64_t a1)
{
  return sub_100024334(a1, qword_10083BB18, (uint64_t)&nominal type descriptor for TrendsCardView);
}

void sub_10059A8B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000087BC(319, (unint64_t *)&qword_10081F4B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TrendsCard(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_100647FD8;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_10059A96C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BC828, 1);
}

uint64_t sub_10059A97C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v3 >= result)
      v4 = result;
    else
      v4 = *(_QWORD *)(a2 + 16);
    if (result)
      v5 = v4;
    else
      v5 = 0;
    if (v3 >= v5)
    {
      type metadata accessor for TrendListMetric(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10059A9EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v2 = sub_100047110(&qword_10083BB60);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10083BB68);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10083BB70);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + *(int *)(type metadata accessor for TrendsCardView(0) + 20);
  if (*(_BYTE *)(v11 + *(int *)(type metadata accessor for TrendsCard(0) + 24)) == 1)
  {
    sub_10059ABDC(a1, (uint64_t)v10);
    sub_100021CC0((uint64_t)v10, (uint64_t)v7, &qword_10083BB70);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    v12 = sub_10059C6D0();
    v13 = sub_10059C8E0();
    _ConditionalContent<>.init(storage:)(v7, v8, v2, v12, v13);
    v14 = (uint64_t)v10;
    v15 = &qword_10083BB70;
  }
  else
  {
    sub_10059AFE4(a1, (uint64_t)v4);
    sub_100021CC0((uint64_t)v4, (uint64_t)v7, &qword_10083BB60);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    v16 = sub_10059C6D0();
    v17 = sub_10059C8E0();
    _ConditionalContent<>.init(storage:)(v7, v8, v2, v16, v17);
    v14 = (uint64_t)v4;
    v15 = &qword_10083BB60;
  }
  return sub_10001BE90(v14, v15);
}

_QWORD *sub_10059ABDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell **v16;
  int v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[6];

  v39 = a2;
  v38 = sub_100047110(&qword_10083BBB0);
  __chkstk_darwin(v38);
  v37 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10083BC20);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083BC28);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083BB98);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TrendsCardView(0);
  v14 = a1 + v13[5];
  v15 = type metadata accessor for TrendsCard(0);
  v16 = (CHWorkoutDetailHeartRateTableViewCell **)(v14 + *(int *)(v15 + 36));
  v17 = *((unsigned __int8 *)v16 + 8);
  if ((v17 - 1) >= 2)
  {
    v37 = v10;
    if (v17)
    {
      swift_storeEnumTagMultiPayload(v6, v4, 1);
      v36 = sub_1001C735C(&qword_10083BB90, &qword_10083BB98, (void (*)(void))sub_10059C778, (void (*)(void))sub_10059C7BC);
      return (_QWORD *)_ConditionalContent<>.init(storage:)(v6, v37, &type metadata for EmptyView, v36, &protocol witness table for EmptyView);
    }
    else
    {
      v31 = v15;
      sub_100021CC0(a1 + v13[6], (uint64_t)v40, &qword_10081F600);
      v41[3] = v31;
      v41[4] = &off_1007A4840;
      v32 = sub_10004C480(v41);
      sub_10004F8C8(v14, (uint64_t)v32, type metadata accessor for TrendsCard);
      v41[5] = *(_QWORD *)(a1 + v13[8]);
      sub_100262F10((uint64_t)v40, (uint64_t)v9);
      swift_storeEnumTagMultiPayload(v9, v7, 0);
      v33 = sub_10059C778();
      v34 = sub_10059C7BC();
      _ConditionalContent<>.init(storage:)(v9, &type metadata for TrendsSplashScreen, v38, v33, v34);
      sub_100021CC0((uint64_t)v12, (uint64_t)v6, &qword_10083BB98);
      swift_storeEnumTagMultiPayload(v6, v4, 0);
      v35 = sub_1001C735C(&qword_10083BB90, &qword_10083BB98, (void (*)(void))sub_10059C778, (void (*)(void))sub_10059C7BC);
      _ConditionalContent<>.init(storage:)(v6, v37, &type metadata for EmptyView, v35, &protocol witness table for EmptyView);
      sub_10001BE90((uint64_t)v12, &qword_10083BB98);
      return sub_10059CA8C(v40);
    }
  }
  else
  {
    v18 = *v16;
    swift_bridgeObjectRetain(*v16);
    v19 = v37;
    sub_10059B7BC(a1, v14, (uint64_t)v18, v37);
    swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
    sub_100021CC0(v19, (uint64_t)v9, &qword_10083BBB0);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v27 = sub_10059C778();
    v28 = sub_10059C7BC();
    _ConditionalContent<>.init(storage:)(v9, &type metadata for TrendsSplashScreen, v38, v27, v28);
    sub_100021CC0((uint64_t)v12, (uint64_t)v6, &qword_10083BB98);
    swift_storeEnumTagMultiPayload(v6, v4, 0);
    v29 = sub_1001C735C(&qword_10083BB90, &qword_10083BB98, (void (*)(void))sub_10059C778, (void (*)(void))sub_10059C7BC);
    _ConditionalContent<>.init(storage:)(v6, v10, &type metadata for EmptyView, v29, &protocol witness table for EmptyView);
    sub_10001BE90((uint64_t)v12, &qword_10083BB98);
    return (_QWORD *)sub_10001BE90(v19, &qword_10083BBB0);
  }
}

uint64_t sub_10059AFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  _UNKNOWN **v89;

  v86 = a2;
  v3 = sub_100047110(&qword_10081EE68);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_100827060);
  __chkstk_darwin(v85);
  v76 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v79 = (char *)&v67 - v8;
  v84 = sub_100047110(&qword_10083BC60);
  __chkstk_darwin(v84);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TrendsCardView(0);
  v69 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v70 = v12;
  v74 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for VerticalLayoutTrendView(0);
  __chkstk_darwin(v68);
  v14 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = sub_100047110(&qword_10083BC08);
  __chkstk_darwin(v72);
  v73 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_10083BC68);
  v81 = *(_QWORD *)(v16 - 8);
  v82 = v16;
  __chkstk_darwin(v16);
  v71 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TrendListMetric(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v83 = (uint64_t)&v67 - v23;
  v24 = sub_100047110(&qword_10083BC00);
  __chkstk_darwin(v24);
  v80 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(int *)(v11 + 20);
  v75 = a1;
  v27 = a1 + v26;
  v28 = type metadata accessor for TrendsCard(0);
  v30 = v27 + *(int *)(v28 + 36);
  if (*(unsigned __int8 *)(v30 + 8) - 1 > 1)
  {
    v54 = ProgressView<>.init<>()(v29);
    v55 = static Alignment.center.getter(v54);
    v56 = v76;
    v58 = sub_1003EB98C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v76, 0.0, 1, INFINITY, 0, v55, v57);
    (*(void (**)(char *, uint64_t, double))(v77 + 8))(v5, v78, v58);
    v59 = &qword_100827060;
    v60 = v56;
    v50 = (uint64_t)v79;
    sub_100045AD4(v60, (uint64_t)v79, &qword_100827060);
    sub_100021CC0(v50, (uint64_t)v10, &qword_100827060);
    swift_storeEnumTagMultiPayload(v10, v84, 1);
    v61 = sub_10059C964();
    v62 = sub_1001F4C9C();
    v63 = v10;
    v64 = v24;
  }
  else
  {
    v78 = v24;
    v79 = v10;
    v31 = *(_QWORD *)v30;
    if (*(_QWORD *)(v31 + 16))
    {
      v32 = v28;
      v33 = *(unsigned __int8 *)(v19 + 80);
      v34 = v83;
      sub_10004F8C8(v31 + ((v33 + 32) & ~v33), v83, type metadata accessor for TrendListMetric);
      sub_10004F8C8(v34, (uint64_t)v21, type metadata accessor for TrendListMetric);
      v88 = v32;
      v89 = &off_1007A4840;
      v35 = sub_10004C480(&v87);
      sub_10004F8C8(v27, (uint64_t)v35, type metadata accessor for TrendsCard);
      v36 = v75;
      v37 = *(_QWORD *)(v75 + *(int *)(v11 + 28));
      *v14 = swift_getKeyPath(&unk_100648040);
      v38 = sub_100047110(&qword_1008325D0);
      swift_storeEnumTagMultiPayload(v14, v38, 0);
      v39 = v68;
      sub_100047C88((uint64_t)v21, (uint64_t)v14 + *(int *)(v68 + 20), type metadata accessor for TrendListMetric);
      sub_10002411C(&v87, (uint64_t)v14 + *(int *)(v39 + 24));
      *(_QWORD *)((char *)v14 + *(int *)(v39 + 28)) = v37;
      v40 = v73;
      sub_10004F8C8((uint64_t)v14, v73, type metadata accessor for VerticalLayoutTrendView);
      v41 = v72;
      *(_BYTE *)(v40 + *(int *)(v72 + 36)) = 0;
      swift_retain(v37);
      sub_100011F54((uint64_t)v14, type metadata accessor for VerticalLayoutTrendView);
      sub_10004F8C8(v83, (uint64_t)v21, type metadata accessor for TrendListMetric);
      v42 = v74;
      sub_10004F8C8(v36, v74, type metadata accessor for TrendsCardView);
      v43 = (v33 + 16) & ~v33;
      v44 = *(unsigned __int8 *)(v69 + 80);
      v45 = (v43 + v20 + v44) & ~v44;
      v46 = swift_allocObject(&unk_1007AB8F8, v45 + v70, v33 | v44 | 7);
      sub_100047C88((uint64_t)v21, v46 + v43, type metadata accessor for TrendListMetric);
      sub_100047C88(v42, v46 + v45, type metadata accessor for TrendsCardView);
      v47 = sub_10059C9F0();
      v48 = v71;
      View.onTapGesture(count:perform:)(1, sub_10059CC58, v46, v41, v47);
      swift_release(v46);
      sub_10001BE90(v40, &qword_10083BC08);
      sub_100011F54(v83, type metadata accessor for TrendListMetric);
      v50 = (uint64_t)v80;
      v49 = v81;
      v51 = v48;
      v52 = v82;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v51, v82);
      v53 = 0;
    }
    else
    {
      v53 = 1;
      v49 = v81;
      v52 = v82;
      v50 = (uint64_t)v80;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, v53, 1, v52);
    v59 = &qword_10083BC00;
    v65 = (uint64_t)v79;
    sub_100021CC0(v50, (uint64_t)v79, &qword_10083BC00);
    swift_storeEnumTagMultiPayload(v65, v84, 0);
    v61 = sub_10059C964();
    v62 = sub_1001F4C9C();
    v63 = (char *)v65;
    v64 = v78;
  }
  _ConditionalContent<>.init(storage:)(v63, v64, v85, v61, v62);
  return sub_10001BE90(v50, v59);
}

uint64_t sub_10059B644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[4];
  _QWORD v16[3];
  uint64_t v17;

  v4 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(a1, (uint64_t)v6, type metadata accessor for TrendListMetric);
  v7 = type metadata accessor for TrendListMetric(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v8 = 0;
  v8[8] = -1;
  v9 = type metadata accessor for TrendsCardView(0);
  sub_100021CC0(a2 + *(int *)(v9 + 24), (uint64_t)v16, &qword_10081F600);
  if (v17)
  {
    v10 = sub_100016804(v16, v17);
    v11 = a2 + *(int *)(v9 + 20);
    v15[3] = v4;
    v12 = sub_10004C480(v15);
    sub_10004F8C8((uint64_t)v6, (uint64_t)v12, type metadata accessor for TrendsActionContext);
    sub_10040BD2C(v11, (uint64_t)v15, *v10);
    sub_100011F54((uint64_t)v6, type metadata accessor for TrendsActionContext);
    sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v16);
  }
  else
  {
    sub_100011F54((uint64_t)v6, type metadata accessor for TrendsActionContext);
    return sub_10001BE90((uint64_t)v16, &qword_10081F600);
  }
}

uint64_t sub_10059B7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t OpaqueTypeConformance2;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _BYTE v85[40];
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  _UNKNOWN **v89;

  v82 = a2;
  v83 = (_QWORD *)a3;
  v80 = a4;
  v81 = sub_100047110(&qword_10083BBD8);
  __chkstk_darwin(v81);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100047110(&qword_10083BC30);
  __chkstk_darwin(v77);
  v79 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_100825FB8);
  __chkstk_darwin(v70);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v67 = (char *)&v66 - v10;
  v76 = sub_100047110(&qword_100825FC0);
  __chkstk_darwin(v76);
  v68 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v72 = (uint64_t)&v66 - v13;
  v84 = type metadata accessor for TrendsStack(0);
  __chkstk_darwin(v84);
  v15 = (void (**)(char *, uint64_t))((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = sub_100047110(&qword_10083BC38);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v69 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v73 = (char *)&v66 - v18;
  v19 = type metadata accessor for DynamicTypeSize(0);
  v20 = *(_QWORD **)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v66 - v24;
  v26 = a1;
  sub_1003F6E18((uint64_t)&v66 - v24);
  v27 = (void (*)(char *, _QWORD, uint64_t))v20[13];
  v27(v22, enum case for DynamicTypeSize.xLarge(_:), v19);
  v75 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)(v22, v25, v19);
  v28 = (void (*)(char *, uint64_t))v20[1];
  v28(v22, v19);
  v29 = ((uint64_t (*)(char *, uint64_t))v28)(v25, v19);
  if ((a1 & 1) != 0)
  {
    v66 = v28;
    v88 = type metadata accessor for TrendsCard(0);
    v89 = &off_1007A4840;
    v30 = sub_10004C480(&v86);
    sub_10004F8C8(v82, (uint64_t)v30, type metadata accessor for TrendsCard);
    v31 = type metadata accessor for TrendsCardView(0);
    sub_100021CC0(v26 + *(int *)(v31 + 24), (uint64_t)v85, &qword_10081F600);
    v32 = *(_QWORD *)(v26 + *(int *)(v31 + 28));
    *v15 = swift_getKeyPath(&unk_100648040);
    v33 = sub_100047110(&qword_1008325D0);
    swift_storeEnumTagMultiPayload(v15, v33, 0);
    v34 = (int *)v84;
    sub_10002411C(&v86, (uint64_t)v15 + *(int *)(v84 + 20));
    sub_100045AD4((uint64_t)v85, (uint64_t)v15 + v34[6], &qword_10081F600);
    v35 = (uint64_t)v83;
    *(_QWORD *)((char *)v15 + v34[7]) = v83;
    *(_QWORD *)((char *)v15 + v34[8]) = v32;
    v27(v25, enum case for DynamicTypeSize.xxLarge(_:), v19);
    v27(v22, enum case for DynamicTypeSize.accessibility4(_:), v19);
    swift_retain(v32);
    swift_bridgeObjectRetain(v35);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v25, v22, v19, v75);
    if ((result & 1) != 0)
    {
      v83 = v15;
      v37 = v70;
      v38 = v67;
      v39 = &v67[*(int *)(v70 + 48)];
      v40 = (void (*)(char *, char *, uint64_t))v20[4];
      v40(v67, v25, v19);
      v40(v39, v22, v19);
      v41 = v71;
      v42 = &v71[*(int *)(v37 + 48)];
      v43 = (void (*)(char *, char *, uint64_t))v20[2];
      v43(v71, v38, v19);
      v43(v42, v39, v19);
      v44 = (uint64_t)v68;
      v40(v68, v41, v19);
      v45 = v66;
      v66(v42, v19);
      v46 = &v41[*(int *)(v37 + 48)];
      v40(v41, v38, v19);
      v40(v46, v39, v19);
      v47 = v76;
      v40((char *)(v44 + *(int *)(v76 + 36)), v46, v19);
      v45(v41, v19);
      v48 = v72;
      sub_100045AD4(v44, v72, &qword_100825FC0);
      v49 = sub_1000083D8(&qword_10083BBC8, type metadata accessor for TrendsStack, (uint64_t)&unk_100648510);
      v50 = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
      v51 = v69;
      v52 = (uint64_t)v83;
      v53 = v84;
      View.dynamicTypeSize<A>(_:)(v48, v84, v47, v49, v50);
      sub_10001BE90(v48, &qword_100825FC0);
      sub_100011F54(v52, type metadata accessor for TrendsStack);
      v54 = v74;
      v55 = v73;
      v56 = v78;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v51, v78);
      v57 = v79;
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v79, v55, v56);
      swift_storeEnumTagMultiPayload(v57, v77, 0);
      *(_QWORD *)&v86 = v53;
      *((_QWORD *)&v86 + 1) = v47;
      v87 = v49;
      v88 = v50;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
      v59 = sub_100028384(&qword_10083BBD0, &qword_10083BBD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
      _ConditionalContent<>.init(storage:)(v57, v56, v81, OpaqueTypeConformance2, v59);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v56);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)v6 = static VerticalAlignment.center.getter(v29);
    *((_QWORD *)v6 + 1) = 0x4024000000000000;
    v6[16] = 0;
    v60 = sub_100047110(&qword_10083BC40);
    sub_10059BF48(v26, (uint64_t)v83, v82, (uint64_t)&v6[*(int *)(v60 + 44)]);
    v61 = v79;
    sub_100021CC0((uint64_t)v6, v79, &qword_10083BBD8);
    swift_storeEnumTagMultiPayload(v61, v77, 1);
    v62 = sub_1000083D8(&qword_10083BBC8, type metadata accessor for TrendsStack, (uint64_t)&unk_100648510);
    v63 = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    *(_QWORD *)&v86 = v84;
    *((_QWORD *)&v86 + 1) = v76;
    v87 = v62;
    v88 = v63;
    v64 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v65 = sub_100028384(&qword_10083BBD0, &qword_10083BBD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v61, v78, v81, v64, v65);
    return sub_10001BE90((uint64_t)v6, &qword_10083BBD8);
  }
  return result;
}

uint64_t sub_10059BF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[40];
  __int128 v72;
  uint64_t v73;
  _UNKNOWN **v74;

  v70 = a4;
  v7 = sub_100047110(&qword_10083BC48);
  v8 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  v68 = v8;
  __chkstk_darwin(v7);
  v63 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083BC50);
  __chkstk_darwin(v10);
  v69 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v65 = (uint64_t)&v60 - v13;
  v14 = (int *)type metadata accessor for TrendsStack(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - v18;
  v20 = sub_10059C3B8(a2);
  v64 = v21;
  v22 = type metadata accessor for TrendsCard(0);
  v73 = v22;
  v74 = &off_1007A4840;
  v23 = sub_10004C480(&v72);
  v61 = a3;
  sub_10004F8C8(a3, (uint64_t)v23, type metadata accessor for TrendsCard);
  v24 = type metadata accessor for TrendsCardView(0);
  v25 = a1 + *(int *)(v24 + 24);
  sub_100021CC0(v25, (uint64_t)v71, &qword_10081F600);
  v26 = *(int *)(v24 + 28);
  v62 = a1;
  v27 = *(_QWORD *)(a1 + v26);
  *v16 = swift_getKeyPath(&unk_100648040);
  v28 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v16, v28, 0);
  sub_10002411C(&v72, (uint64_t)v16 + v14[5]);
  sub_100045AD4((uint64_t)v71, (uint64_t)v16 + v14[6], &qword_10081F600);
  *(_QWORD *)((char *)v16 + v14[7]) = v20;
  *(_QWORD *)((char *)v16 + v14[8]) = v27;
  v66 = v19;
  v29 = (uint64_t)v19;
  v30 = v64;
  sub_100047C88((uint64_t)v16, v29, type metadata accessor for TrendsStack);
  if (*(_QWORD *)v30->cellPadding)
  {
    v73 = v22;
    v74 = &off_1007A4840;
    v31 = sub_10004C480(&v72);
    sub_10004F8C8(v61, (uint64_t)v31, type metadata accessor for TrendsCard);
    sub_100021CC0(v25, (uint64_t)v71, &qword_10081F600);
    v32 = *(_QWORD *)(v62 + v26);
    *v16 = swift_getKeyPath(&unk_100648040);
    swift_storeEnumTagMultiPayload(v16, v28, 0);
    sub_10002411C(&v72, (uint64_t)v16 + v14[5]);
    sub_100045AD4((uint64_t)v71, (uint64_t)v16 + v14[6], &qword_10081F600);
    *(_QWORD *)((char *)v16 + v14[7]) = v30;
    *(_QWORD *)((char *)v16 + v14[8]) = v32;
    swift_retain(v32);
    swift_retain(v27);
    v34 = static Edge.Set.trailing.getter(v33);
    v35 = EdgeInsets.init(_all:)(-5.0);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v42 = v63;
    sub_10004F8C8((uint64_t)v16, v63, type metadata accessor for TrendsStack);
    v43 = v67;
    v44 = v42 + *(int *)(v67 + 36);
    *(_BYTE *)v44 = v34;
    *(double *)(v44 + 8) = v35;
    *(_QWORD *)(v44 + 16) = v37;
    *(_QWORD *)(v44 + 24) = v39;
    *(_QWORD *)(v44 + 32) = v41;
    *(_BYTE *)(v44 + 40) = 0;
    sub_100011F54((uint64_t)v16, type metadata accessor for TrendsStack);
    v45 = v65;
    sub_100045AD4(v42, v65, &qword_10083BC48);
    v46 = 0;
    v47 = v43;
  }
  else
  {
    swift_retain(v27);
    swift_bridgeObjectRelease(v30, v48, v49, v50, v51, v52, v53, v54);
    v46 = 1;
    v47 = v67;
    v45 = v65;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v45, v46, 1, v47);
  v55 = (uint64_t)v66;
  sub_10004F8C8((uint64_t)v66, (uint64_t)v16, type metadata accessor for TrendsStack);
  v56 = v69;
  sub_100021CC0(v45, v69, &qword_10083BC50);
  v57 = v70;
  sub_10004F8C8((uint64_t)v16, v70, type metadata accessor for TrendsStack);
  v58 = sub_100047110(&qword_10083BC58);
  sub_100021CC0(v56, v57 + *(int *)(v58 + 48), &qword_10083BC50);
  sub_10001BE90(v45, &qword_10083BC50);
  sub_100011F54(v55, type metadata accessor for TrendsStack);
  sub_10001BE90(v56, &qword_10083BC50);
  return sub_100011F54((uint64_t)v16, type metadata accessor for TrendsStack);
}

CHWorkoutDetailHeartRateTableViewCell *sub_10059C3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = ceil((double)v7 * 0.5);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v1 = a1;
  a1 = (uint64_t)v8;
  v3 = v7 - (uint64_t)v8;
  if (__OFSUB__(v7, (uint64_t)v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = sub_10059A97C(a1, v1);
  v2 = v9;
  v5 = v10;
  v6 = v11;
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRetain(v1);
LABEL_7:
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100296838(v4, v2, v5, v6);
    goto LABEL_14;
  }
  v13 = type metadata accessor for __ContiguousArrayStorageBase(0);
  swift_unknownObjectRetain_n(v4, 2);
  swift_bridgeObjectRetain(v1);
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v4, v13);
  if (!v14)
  {
    swift_unknownObjectRelease(v4);
    v14 = &_swiftEmptyArrayStorage;
  }
  v15 = *(_QWORD *)v14->cellPadding;
  swift_release(v14);
  if (__OFSUB__(v6 >> 1, v5))
    goto LABEL_28;
  a1 = v4;
  if (v15 != (v6 >> 1) - v5)
  {
LABEL_29:
    swift_unknownObjectRelease(a1);
    goto LABEL_7;
  }
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v4, v13);
  if (!v12)
  {
    swift_unknownObjectRelease(v4);
    v12 = &_swiftEmptyArrayStorage;
  }
LABEL_14:
  swift_unknownObjectRelease(v4);
  v16 = sub_1004887E8(v3, v1);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRetain(v1);
LABEL_16:
    sub_100296838(v16, v18, v20, v22);
    goto LABEL_23;
  }
  v23 = type metadata accessor for __ContiguousArrayStorageBase(0);
  swift_unknownObjectRetain_n(v16, 2);
  swift_bridgeObjectRetain(v1);
  v24 = (CHWorkoutDetailHeartRateTableViewCell *)swift_dynamicCastClass(v16, v23);
  if (!v24)
  {
    swift_unknownObjectRelease(v16);
    v24 = &_swiftEmptyArrayStorage;
  }
  v25 = *(_QWORD *)v24->cellPadding;
  swift_release(v24);
  if (__OFSUB__(v22 >> 1, v20))
  {
    __break(1u);
    goto LABEL_31;
  }
  v26 = v16;
  if (v25 != (v22 >> 1) - v20)
  {
LABEL_31:
    swift_unknownObjectRelease(v26);
    goto LABEL_16;
  }
  if (!swift_dynamicCastClass(v16, v23))
    swift_unknownObjectRelease(v16);
LABEL_23:
  swift_unknownObjectRelease(v16);
  return v12;
}

uint64_t sub_10059C604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_100047110(&qword_100832E20);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10059A9EC(v1);
  v7 = static Alignment.center.getter(v6);
  sub_1003ED6E4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return sub_10001BE90((uint64_t)v5, &qword_100832E20);
}

uint64_t sub_10059C6D0()
{
  return sub_1000E1A9C(&qword_10083BB78, &qword_10083BB70, (void (*)(void))sub_10059C6EC);
}

unint64_t sub_10059C6EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083BB80;
  if (!qword_10083BB80)
  {
    v1 = sub_100007050(&qword_10083BB88);
    sub_1001C735C(&qword_10083BB90, &qword_10083BB98, (void (*)(void))sub_10059C778, (void (*)(void))sub_10059C7BC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BB80);
  }
  return result;
}

unint64_t sub_10059C778()
{
  unint64_t result;

  result = qword_10083BBA0;
  if (!qword_10083BBA0)
  {
    result = swift_getWitnessTable(&unk_100631244, &type metadata for TrendsSplashScreen);
    atomic_store(result, (unint64_t *)&qword_10083BBA0);
  }
  return result;
}

uint64_t sub_10059C7BC()
{
  return sub_1000E1A9C(&qword_10083BBA8, &qword_10083BBB0, (void (*)(void))sub_10059C7D8);
}

unint64_t sub_10059C7D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10083BBB8;
  if (!qword_10083BBB8)
  {
    v1 = sub_100007050(&qword_10083BBC0);
    v2[0] = type metadata accessor for TrendsStack(255);
    v2[1] = sub_100007050(&qword_100825FC0);
    v2[2] = sub_1000083D8(&qword_10083BBC8, type metadata accessor for TrendsStack, (uint64_t)&unk_100648510);
    v2[3] = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    sub_100028384(&qword_10083BBD0, &qword_10083BBD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BBB8);
  }
  return result;
}

unint64_t sub_10059C8E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083BBE0;
  if (!qword_10083BBE0)
  {
    v1 = sub_100007050(&qword_10083BB60);
    sub_1001C735C(&qword_10083BBE8, &qword_10083BBF0, (void (*)(void))sub_10059C964, (void (*)(void))sub_1001F4C9C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BBE0);
  }
  return result;
}

unint64_t sub_10059C964()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083BBF8;
  if (!qword_10083BBF8)
  {
    v1 = sub_100007050(&qword_10083BC00);
    v2[0] = sub_100007050(&qword_10083BC08);
    v2[1] = sub_10059C9F0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10083BBF8);
  }
  return result;
}

unint64_t sub_10059C9F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083BC10;
  if (!qword_10083BC10)
  {
    v1 = sub_100007050(&qword_10083BC08);
    sub_1000083D8(&qword_10083BC18, type metadata accessor for VerticalLayoutTrendView, (uint64_t)&unk_100630688);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BC10);
  }
  return result;
}

_QWORD *sub_10059CA8C(_QWORD *a1)
{
  destroy for TrendsSplashScreen(a1);
  return a1;
}

uint64_t sub_10059CAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;

  v1 = type metadata accessor for TrendListMetric(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for TrendsCardView(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v0 + v4;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v4 + 16), v12, v13, v14, v15, v16, v17, v18);
  v19 = v0 + v4 + *(int *)(v1 + 28);
  v20 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v11 + *(int *)(v1 + 32) + 8), v21, v22, v23, v24, v25, v26, v27);
  v28 = (_QWORD *)(v0 + v9);
  v29 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v29) == 1)
  {
    v30 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v0 + v9, v30);
  }
  else
  {
    swift_release(*v28);
  }
  v31 = (char *)v28 + v6[5];
  v32 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = type metadata accessor for TrendsCard(0);
  sub_1000EB41C(*(_QWORD *)&v31[*(int *)(v33 + 20)], *(_QWORD *)&v31[*(int *)(v33 + 20) + 8], v31[*(int *)(v33 + 20) + 16]);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v31[*(int *)(v33 + 36)], v34, v35, v36, v37, v38, v39, v40);
  v41 = (_QWORD *)((char *)v28 + v6[6]);
  if (v41[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v41);
  swift_release(*(_QWORD *)((char *)v28 + v6[7]));
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_10059CC58()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for TrendListMetric(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrendsCardView(0) - 8) + 80);
  return sub_10059B644(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

unint64_t sub_10059CCBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083BC70;
  if (!qword_10083BC70)
  {
    v1 = sub_100007050(&qword_100832E28);
    sub_10059CD28();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BC70);
  }
  return result;
}

unint64_t sub_10059CD28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083BC78;
  if (!qword_10083BC78)
  {
    v1 = sub_100007050(&qword_100832E20);
    sub_1001C735C(&qword_10083BC80, &qword_10083BC88, (void (*)(void))sub_10059C6D0, (void (*)(void))sub_10059C8E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083BC78);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsCoachingAverageInformation()
{
  return &type metadata for TrendsCoachingAverageInformation;
}

id sub_10059CDBC(uint64_t a1)
{
  char *v1;
  double v3;
  id v4;
  id result;
  void *v6;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProviderObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProvider] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  *(_QWORD *)&v3 = swift_retain(a1).n128_u64[0];
  v4 = objc_msgSendSuper2(&v7, "initWithNibName:bundle:", 0, 0, v3);
  result = objc_msgSend(v4, "tableView", v7.receiver, v7.super_class);
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "setSeparatorStyle:", 0);

    swift_release(a1);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10059CE78()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  id v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  NSString v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  objc_msgSendSuper2(&v31, "viewDidLoad");
  v3 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v3, "setLargeTitleDisplayMode:", 1);

  v4 = objc_msgSend(v1, "navigationItem");
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
  objc_msgSend(v4, "setTitle:", v10);

  v18 = objc_msgSend(v1, "tableView");
  if (v18)
  {
    v19 = v18;
    v20 = type metadata accessor for WorkoutsListTableViewCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v22);

    v23 = type metadata accessor for ActivitySharingFriendDetailDataProvider(0);
    v24 = sub_1000083D8((unint64_t *)&unk_10082BC10, type metadata accessor for ActivitySharingFriendDetailDataProvider, (uint64_t)&unk_10063C280);
    v30 = ObservableObject<>.objectWillChange.getter(v23, v24);
    v25 = swift_allocObject(&unk_1007AB9E8, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16);
    v26 = swift_allocObject(&unk_1007ABA10, 32, 7);
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = ObjectType;
    v27 = type metadata accessor for ObservableObjectPublisher(0);
    v28 = Publisher<>.sink(receiveValue:)(sub_10059DCD0, v26, v27, &protocol witness table for ObservableObjectPublisher);
    swift_release(v26);
    swift_release(v30);
    v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProviderObserver];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProviderObserver] = v28;
    swift_release(v29);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10059D128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  void *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  os_log_t v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[5];
  uint64_t v47;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = (void *)HKLogActivity;
  v15 = v13;
  if (os_log_type_enabled(HKLogActivity, v13))
  {
    v41 = v14;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v43 = v9;
    v18 = v17;
    aBlock[0] = v17;
    v42 = a2;
    *(_DWORD *)v16 = 136315138;
    v19 = _typeName(_:qualified:)(a3, 0);
    v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
    v45 = sub_10003E8EC(v19, v20, aBlock);
    a2 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, aBlock, v16 + 4);
    swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
    v29 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, v15, "%s received object will change", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v30 = v18;
    v9 = v43;
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  sub_10002FB54();
  v32 = (void *)static OS_dispatch_queue.main.getter(v31);
  aBlock[4] = (uint64_t)sub_10059DCD8;
  v47 = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_1007ABA28;
  v33 = _Block_copy(aBlock);
  v34 = v47;
  swift_retain(a2);
  swift_release(v34);
  static DispatchQoS.unspecified.getter(v35);
  aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
  v36 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v37 = sub_100047110(&qword_100828C80);
  v38 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v38, v5, v36);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v11, v9);
}

void sub_10059D420(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "tableView");

    if (v4)
    {
      objc_msgSend(v4, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_10059D68C(void *a1)
{
  uint64_t v1;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t result;
  id v28;
  const char *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  _QWORD v44[12];

  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v3, isa);

  objc_msgSend(v5, "setSelectionStyle:", 0);
  v6 = type metadata accessor for WorkoutsListTableViewCell();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
    return (unint64_t)v5;
  v8 = v7;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_1006480F8);
  v11 = swift_getKeyPath(&unk_100648120);
  v42 = v9;
  v43 = v5;
  static Published.subscript.getter(v44, v9, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = v44[0];
  v13 = (void *)v44[1];
  v14 = v44[2];
  v15 = (void *)v44[5];
  v16 = (void *)v44[7];
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)v44[8];
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)v44[9];

  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  swift_release(v14);

  swift_release(v12);
  result = IndexPath.row.getter(v26);
  if (((unint64_t)v17 & 0xC000000000000001) != 0)
  {
    v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v17);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v28 = *((id *)&v17[1].super.super.super.super.isa + result);
LABEL_6:
    v36 = v28;
    swift_bridgeObjectRelease(v17, v29, v30, v31, v32, v33, v34, v35);
    v37 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v38 = *(_QWORD *)(v8 + OBJC_IVAR___CHWorkoutsListTableViewCell_workoutContentView);
    objc_msgSend(*(id *)(v38 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_insetContentView), "setBackgroundColor:", v37);

    objc_msgSend(*(id *)(*(_QWORD *)(v38 + OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workoutCellImageLabelView)+ OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView), "setHidden:", 0);
    v39 = *(void **)(v42 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager);
    v40 = objc_retain(*(id *)(v42
                            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext));
    v41 = v39;
    sub_100110A00(v36, v40, v41, 0, 0, 0, 0);

    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

id sub_10059DA3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController()
{
  return objc_opt_self(_TtC10FitnessApp52ActivitySharingFriendDetailWorkoutListViewController);
}

double sub_10059DAC4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double result;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006480F8);
  v5 = swift_getKeyPath(&unk_100648120);
  static Published.subscript.getter(&v16, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v17;
  v7 = v18;
  v8 = v19;
  v9 = v20;
  v10 = v21;
  v11 = v22;
  v12 = v24;
  v13 = v25;
  result = *(double *)&v16;
  v15 = v23;
  *(_OWORD *)a2 = v16;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_BYTE *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_OWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 80) = v12;
  *(_BYTE *)(a2 + 88) = v13;
  return result;
}

uint64_t sub_10059DB84(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  _QWORD v22[4];
  char v23;
  void *v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;

  v3 = *a1;
  v2 = (void *)a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (void *)a1[5];
  v7 = *((_BYTE *)a1 + 48);
  v9 = (void *)a1[7];
  v8 = a1[8];
  v11 = a1[9];
  v10 = (void *)a1[10];
  v17 = *((_BYTE *)a1 + 88);
  v18 = *((_BYTE *)a1 + 32);
  v19 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006480F8);
  v20 = swift_getKeyPath(&unk_100648120);
  v22[0] = v3;
  v22[1] = v2;
  v22[2] = v4;
  v22[3] = v5;
  v23 = v18;
  v24 = v6;
  v25 = v7;
  v26 = v9;
  v27 = v8;
  v28 = v11;
  v29 = v10;
  v30 = v17;
  v12 = v9;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v11);
  v13 = v10;
  swift_retain(v19);
  swift_retain(v3);
  v14 = v2;
  swift_retain(v4);
  v15 = v6;
  return static Published.subscript.setter(v22, v19, KeyPath, v20);
}

uint64_t sub_10059DC88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10059DCAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10059DCD0(uint64_t a1)
{
  uint64_t v1;

  return sub_10059D128(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10059DCD8()
{
  uint64_t v0;

  sub_10059D420(v0);
}

char *sub_10059DCE0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  objc_super v29;

  v9 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = &v11[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v11[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_insets];
  *(_OWORD *)v13 = xmmword_100648140;
  *((_OWORD *)v13 + 1) = xmmword_100648150;

  v29.receiver = v11;
  v29.super_class = (Class)type metadata accessor for PillLabelView();
  v14 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label];
  v17 = v14;
  objc_msgSend(v17, "addSubview:", v16);
  v18 = objc_msgSend(v17, "layer");
  objc_msgSend(v18, "setCornerRadius:", 4.0);

  v19 = (void *)objc_opt_self(UIColor);
  v20 = v17;
  v21 = objc_msgSend(v19, "whiteColor");
  objc_msgSend(v20, "setBackgroundColor:", v21);

  v22 = *(id *)&v14[v15];
  v23 = objc_msgSend(v19, "blackColor");
  objc_msgSend(v22, "setTextColor:", v23);

  v24 = *(void **)&v14[v15];
  v25 = (void *)objc_opt_self(UIFont);
  v26 = v24;
  v27 = objc_msgSend(v25, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  objc_msgSend(v26, "setFont:", v27);

  return v20;
}

uint64_t sub_10059DF38(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  char *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v3 = OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");

  *(_QWORD *)&v1[v3] = v6;
  v7 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_insets];
  *(_OWORD *)v8 = xmmword_100648140;
  *((_OWORD *)v8 + 1) = xmmword_100648150;

  v9 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v7 + 1);
  swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
  v17 = type metadata accessor for PillLabelView();
  swift_deallocPartialClassInstance(v5, v17, 64, 7);
  return 0;
}

id sub_10059E180()
{
  return sub_1000F62A0(0, type metadata accessor for PillLabelView);
}

uint64_t type metadata accessor for PillLabelView()
{
  return objc_opt_self(_TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView);
}

char *sub_10059E1EC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *result;
  char *v15;
  char *v16;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  objc_super v27;

  v9 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer;
  v10 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithTarget:action:", 0, 0);
  v12 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PillLabelView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = (char *)objc_msgSend((id)objc_opt_self(ARUIMetricColors), "energyColors");
  if (result)
  {
    *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors] = result;
    v15 = &v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource];
    *((_QWORD *)v15 + 1) = 0;
    swift_unknownObjectWeakInit(v15);
    v16 = &v11[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
    *((_QWORD *)v16 + 1) = 0;
    *((_QWORD *)v16 + 2) = 0;
    *(_QWORD *)v16 = 0;

    v27.receiver = v11;
    v27.super_class = (Class)type metadata accessor for ChartValueGesturalOverlayView();
    v17 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
    v18 = *(void **)&v17[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer];
    v19 = v17;
    objc_msgSend(v18, "addTarget:action:", v19, "gestureDidChangeWithSender:");
    objc_msgSend(v18, "setMinimumPressDuration:", 0.1);
    objc_msgSend(v19, "addGestureRecognizer:", v18);
    v20 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
    v21 = *(void **)&v19[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView];
    objc_msgSend(v21, "setAlpha:", 0.0);
    v22 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
    objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView], "setAlpha:", 0.0);
    v23 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors;
    v24 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors], "gradientLightColor");
    objc_msgSend(v21, "setBackgroundColor:", v24);

    v25 = *(void **)&v19[v22];
    v26 = objc_msgSend(*(id *)&v19[v23], "gradientDarkColor");
    objc_msgSend(v25, "setBackgroundColor:", v26);

    objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[v20]);
    objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[v22]);

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10059E4B0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v3 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_longPressRecognizer;
  v4 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithTarget:action:", 0, 0);
  v6 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PillLabelView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "energyColors");
  if (result)
  {
    v9 = result;

    v10 = OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors;
    *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_colors] = v9;
    v11 = (uint64_t)&v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource];
    *(_QWORD *)(v11 + 8) = 0;
    swift_unknownObjectWeakInit(v11);
    v12 = &v5[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
    *((_QWORD *)v12 + 1) = 0;
    *((_QWORD *)v12 + 2) = 0;
    *(_QWORD *)v12 = 0;

    sub_1000F61B4(v11);
    v13 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v12 + 2);

    swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
    v21 = type metadata accessor for ChartValueGesturalOverlayView();
    swift_deallocPartialClassInstance(v5, v21, 80, 7);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10059E66C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  NSString v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void **v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void *v40;
  uint64_t v41;

  v1 = &v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData + 16];
  if (v2)
  {
    v3 = *((_QWORD *)v1 + 1);
    v4 = *(_QWORD *)v1;
    v5 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView];
    v6 = &v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text];
    v7 = *(CHWorkoutDetailHeartRateTableViewCell **)&v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_text
                                                      + 8];
    *(_QWORD *)v6 = v3;
    *((_QWORD *)v6 + 1) = v2;
    swift_bridgeObjectRetain_n(v2, 2);
    swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
    v15 = *(void **)&v5[OBJC_IVAR____TtC10FitnessAppP33_4EA4BC32C3BA0CE5667C98FF7F64C93913PillLabelView_label];
    v16 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v6 + 1);
    if (v16)
    {
      swift_bridgeObjectRetain(v16);
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16, v18, v19, v20, v21, v22, v23, v24);
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v15, "setText:", v17);

    objc_msgSend(v5, "setNeedsLayout");
    objc_msgSend(v5, "invalidateIntrinsicContentSize");
    objc_msgSend(v5, "sizeToFit");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView], "alpha");
    if (v30 >= 1.0)
      v31 = 1.0;
    else
      v31 = 0.0;
    v32 = (void *)objc_opt_self(UIView);
    v33 = swift_allocObject(&unk_1007ABB38, 56, 7);
    *(double *)(v33 + 16) = v31;
    *(_QWORD *)(v33 + 24) = v0;
    *(_QWORD *)(v33 + 32) = v4;
    *(_QWORD *)(v33 + 40) = v3;
    *(_QWORD *)(v33 + 48) = v2;
    v40 = sub_10059F038;
    v41 = v33;
    v36 = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10002D0F8;
    v39 = &unk_1007ABB50;
    v27 = _Block_copy(&v36);
    v34 = v41;
    v35 = v0;
    swift_release(v34);
    objc_msgSend(v32, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v27, 0, 0.1, 0.0);
  }
  else
  {
    v25 = (void *)objc_opt_self(UIView);
    v26 = swift_allocObject(&unk_1007ABAE8, 24, 7);
    *(_QWORD *)(v26 + 16) = v0;
    v40 = sub_10059F004;
    v41 = v26;
    v36 = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10002D0F8;
    v39 = &unk_1007ABB00;
    v27 = _Block_copy(&v36);
    v28 = v41;
    v29 = v0;
    swift_release(v28);
    objc_msgSend(v25, "animateWithDuration:animations:", v27, 0.1);
  }
  _Block_release(v27);
}

void sub_10059E900(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  void *v23;
  uint64_t v24;

  v10 = (void *)objc_opt_self(UIView);
  v11 = swift_allocObject(&unk_1007ABB88, 48, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(double *)(v11 + 24) = a5;
  *(_QWORD *)(v11 + 32) = a2;
  *(_QWORD *)(v11 + 40) = a3;
  v23 = sub_10059F078;
  v24 = v11;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10002D0F8;
  v22 = &unk_1007ABBA0;
  v12 = _Block_copy(&v19);
  v13 = v24;
  v14 = a1;
  swift_bridgeObjectRetain(a3);
  swift_release(v13);
  objc_msgSend(v10, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v12, 0.0, a4);
  _Block_release(v12);
  v15 = swift_allocObject(&unk_1007ABBD8, 24, 7);
  *(_QWORD *)(v15 + 16) = v14;
  v23 = sub_10059F088;
  v24 = v15;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10002D0F8;
  v22 = &unk_1007ABBF0;
  v16 = _Block_copy(&v19);
  v17 = v24;
  v18 = v14;
  swift_release(v17);
  objc_msgSend(v10, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v16, 0.0, 1.0);
  _Block_release(v16);
}

void sub_10059EA7C(char *a1, double a2)
{
  void *v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double MaxX;
  double MinX;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v4 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView];
  if (qword_10081DD78 != -1)
    swift_once(&qword_10081DD78, sub_100442F3C);
  v5 = *(double *)&qword_10086AA08;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v4, "setFrame:", a2, 0.0, v5, CGRectGetHeight(v26));
  v6 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView];
  objc_msgSend(v6, "frame");
  v8 = v7 * 0.5;
  if (qword_10081DD70 != -1)
    swift_once(&qword_10081DD70, sub_1000071BC);
  objc_msgSend(v6, "setCenter:", a2, -UIRoundToScale(v8, *(double *)&qword_10086AA00));
  objc_msgSend(a1, "bounds");
  v9 = CGRectGetMinX(v27) + -8.0;
  objc_msgSend(a1, "bounds");
  MaxX = CGRectGetMaxX(v28);
  objc_msgSend(v6, "frame");
  MinX = CGRectGetMinX(v29);
  objc_msgSend(v6, "frame");
  v16 = v12;
  v17 = v13;
  v18 = v14;
  v19 = v15;
  if (MinX >= v9)
  {
    v21 = MaxX + 8.0;
    if (v21 >= CGRectGetMaxX(*(CGRect *)&v12))
      return;
    objc_msgSend(v6, "frame");
    v16 = v22;
    v17 = v23;
    v18 = v24;
    v19 = v25;
    objc_msgSend(v6, "frame");
    v20 = v21 - CGRectGetMaxX(v31);
  }
  else
  {
    objc_msgSend(v6, "frame");
    v20 = v9 - CGRectGetMinX(v30);
  }
  v32.origin.x = v16;
  v32.origin.y = v17;
  v32.size.width = v18;
  v32.size.height = v19;
  v33 = CGRectOffset(v32, v20, 0.0);
  objc_msgSend(v6, "setFrame:", v33.origin.x, v33.origin.y, v33.size.width, v33.size.height);
}

uint64_t sub_10059ECC4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  double v6;
  double v7;
  char *v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  uint64_t *v19;

  v2 = v1;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_dataSource);
  if (result)
  {
    v5 = result;
    objc_msgSend(a1, "locationInView:", v2);
    v7 = v6;
    v8 = (char *)objc_msgSend(a1, "state");
    if ((unint64_t)(v8 - 3) < 3)
    {
      v16 = (_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData);
      v17 = *(CHWorkoutDetailHeartRateTableViewCell **)(v2
                                                      + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData
                                                      + 16);
      *v16 = 0;
      v16[1] = 0;
      v16[2] = 0;
LABEL_7:
      swift_bridgeObjectRelease(v17, v9, v10, v11, v12, v13, v14, v15);
      sub_10059E66C();
      return swift_unknownObjectRelease(v5);
    }
    if ((unint64_t)(v8 - 1) < 2)
    {
      v18 = sub_100587510(v7);
      v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData);
      v17 = *(CHWorkoutDetailHeartRateTableViewCell **)(v2
                                                      + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_currentData
                                                      + 16);
      *v19 = v18;
      v19[1] = (uint64_t)v9;
      v19[2] = (uint64_t)v10;
      goto LABEL_7;
    }
    if (!v8)
      return swift_unknownObjectRelease(v5);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x800000010069B200, "FitnessApp/ChartValueGesturalOverlayView.swift", 46, 2, 147, 0);
    __break(1u);
  }
  return result;
}

id sub_10059EE6C(uint64_t a1)
{
  return sub_1000F62A0(a1, type metadata accessor for ChartValueGesturalOverlayView);
}

uint64_t type metadata accessor for ChartValueGesturalOverlayView()
{
  return objc_opt_self(_TtC10FitnessApp29ChartValueGesturalOverlayView);
}

uint64_t initializeBufferWithCopyOfBuffer for ChartValueGesturalOverlayData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ChartValueGesturalOverlayData(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *assignWithCopy for ChartValueGesturalOverlayData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ChartValueGesturalOverlayData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  v4 = a1[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for ChartValueGesturalOverlayData()
{
  return &type metadata for ChartValueGesturalOverlayData;
}

uint64_t sub_10059EFE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10059F004()
{
  return sub_10059F090(0.0);
}

uint64_t sub_10059F00C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10059F038()
{
  uint64_t v0;

  sub_10059E900(*(void **)(v0 + 24), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 16), *(double *)(v0 + 32));
}

uint64_t sub_10059F04C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10059F078()
{
  uint64_t v0;

  sub_10059EA7C(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

id sub_10059F088()
{
  return sub_10059F090(1.0);
}

id sub_10059F090(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_lineView), "setAlpha:");
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29ChartValueGesturalOverlayView_labelView), "setAlpha:", a1);
}

uint64_t sub_10059F104()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for IdleTimerAssertion();
  result = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(result + 16) = &_swiftEmptyArrayStorage;
  qword_10083BD60 = result;
  return result;
}

uint64_t sub_10059F138@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(unint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE v34[24];
  char v35[24];

  v33 = a1;
  v2 = type metadata accessor for Logger(0);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - v10;
  UUID.init()(v12);
  v13 = (unint64_t *)(v1 + 16);
  swift_beginAccess(v1 + 16, v35, 0, 0);
  v14 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_beginAccess(v1 + 16, v34, 33, 0);
  v15 = *(_QWORD *)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
  *(_QWORD *)(v1 + 16) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_10013FCF0(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    *v13 = v15;
  }
  v18 = *(_QWORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  if (v18 >= v17 >> 1)
  {
    v15 = sub_10013FCF0(v17 > 1, v18 + 1, 1, v15);
    *v13 = v15;
  }
  *(_QWORD *)(v15 + 16) = v18 + 1;
  v19 = v15
      + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(_QWORD *)(v6 + 72) * v18;
  v20 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v20(v19, v8, v5);
  v21 = swift_endAccess(v34);
  if (!v14)
  {
    v22 = static WOLog.app.getter(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Disabling idle timer", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
    v26 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v26, "setIdleTimerDisabled:", 1);

  }
  v27 = v33;
  v33[3] = v5;
  v28 = sub_10004C480(v27);
  return ((uint64_t (*)(_QWORD *, char *, uint64_t))v20)(v28, v11, v5);
}

void sub_10059F3D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  BOOL v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint8_t *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[4];

  v3 = type metadata accessor for Logger(0);
  v88 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v83 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v83 - v10;
  v12 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v12);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v86 = (char *)&v83 - v20;
  sub_10003E9BC(a1, (uint64_t)v92);
  v21 = swift_dynamicCast(v14, v92, (char *)&type metadata for Any + 8, v15, 6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (!v21)
  {
    v22(v14, 1, 1, v15);
LABEL_11:
    v46 = sub_10004D914((uint64_t)v14);
    static WOLog.app.getter(v46);
    v47 = sub_10003E9BC(a1, (uint64_t)v92);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = swift_slowAlloc(32, -1);
      v87 = v3;
      v52 = v51;
      v91 = v51;
      *(_DWORD *)v50 = 136315138;
      sub_10003E9BC((uint64_t)v92, (uint64_t)&v89);
      v53 = String.init<A>(describing:)(&v89, (char *)&type metadata for Any + 8);
      v55 = (CHWorkoutDetailHeartRateTableViewCell *)v54;
      v89 = sub_10003E8EC(v53, v54, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v50 + 4);
      swift_bridgeObjectRelease(v55, v56, v57, v58, v59, v60, v61, v62);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v92);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Trying to release an idle timer assertion, but the token is not a UUID: %s", v50, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v5, v87);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v92);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v5, v3);
    }
    return;
  }
  v22(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_11;
  v85 = v8;
  v87 = v3;
  v23 = v86;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v86, v14, v15);
  v24 = v1 + 16;
  v25 = swift_beginAccess(v1 + 16, v92, 0, 0);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 16);
  __chkstk_darwin(v25);
  *(&v83 - 2) = (uint64_t)v23;
  swift_bridgeObjectRetain(v26);
  v27 = sub_1004C66C0((uint64_t (*)(char *))sub_1005A0364, (_BOOL8)(&v83 - 4), (uint64_t)v26);
  swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
  if (v27)
  {
    __chkstk_darwin(v35);
    *(&v83 - 2) = (uint64_t)v23;
    swift_beginAccess(v24, &v89, 33, 0);
    sub_1005A000C((uint64_t (*)(char *, __n128))sub_10059FA90, (uint64_t)(&v83 - 4));
    v37 = *(_QWORD *)(*(_QWORD *)v24 + 16);
    v38 = v87;
    if (v37 < v36)
    {
      __break(1u);
    }
    else
    {
      v39 = v23;
      sub_10011FC98(v36, v37);
      v40 = swift_endAccess(&v89);
      if (!*(_QWORD *)(*(_QWORD *)v24 + 16))
      {
        v41 = static WOLog.app.getter(v40);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.default.getter(v42);
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Enabling idle timer", v44, 2u);
          swift_slowDealloc(v44, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v88 + 8))(v11, v38);
        v45 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        objc_msgSend(v45, "setIdleTimerDisabled:", 0);

      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v39, v15);
    }
  }
  else
  {
    v63 = v85;
    static WOLog.app.getter(v35);
    v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 16))(v18, v23, v15);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.error.getter(v65);
    v67 = os_log_type_enabled(v65, v66);
    v68 = v87;
    if (v67)
    {
      v69 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = swift_slowAlloc(32, -1);
      v89 = v70;
      *(_DWORD *)v69 = 136315138;
      v84 = v69 + 4;
      v71 = sub_10027F100();
      v72 = dispatch thunk of CustomStringConvertible.description.getter(v15, v71);
      v74 = (CHWorkoutDetailHeartRateTableViewCell *)v73;
      v91 = sub_10003E8EC(v72, v73, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v84);
      swift_bridgeObjectRelease(v74, v75, v76, v77, v78, v79, v80, v81);
      v82 = *(void (**)(char *, uint64_t))(v16 + 8);
      v82(v18, v15);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Trying to remove an idle timer token that we don't know about: %s", v69, 0xCu);
      swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1, -1);
      v23 = v86;
      swift_slowDealloc(v69, -1, -1);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v63, v87);
    }
    else
    {
      v82 = *(void (**)(char *, uint64_t))(v16 + 8);
      v82(v18, v15);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v63, v68);
    }
    v82(v23, v15);
  }
}

uint64_t type metadata accessor for IdleTimerAssertion()
{
  return objc_opt_self(_TtC10FitnessApp18IdleTimerAssertion);
}

uint64_t sub_10059FA90(uint64_t a1)
{
  uint64_t v1;

  return static UUID.== infix(_:_:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_10059FABC(uint64_t (*a1)(uint64_t *, __n128))
{
  CHWorkoutDetailHeartRateTableViewCell **v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  __n128 v15;
  char v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  __n128 v54;
  char v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  Class *v65;
  Class v66;
  Class v67;
  Class v68;
  Class v69;
  Class v70;
  Class v71;
  Class v72;
  objc_class *v73;
  objc_class *v74;
  objc_class *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  const char *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  Class *v84;
  Class v85;
  Class v86;
  Class v87;
  Class v88;
  Class v89;
  Class v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  const char *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  Class *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  BOOL v107;
  Class v108;
  Class v109;
  Class v110;
  Class v111;
  Class v112;
  Class v113;
  Class v114;
  Class v115;
  objc_class *v116;
  objc_class *v117;
  objc_class *v118;
  objc_class *v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  objc_class *v121;
  objc_class *v122;
  objc_class *v123;
  CHWorkoutDetailHeartRateTableViewCell **v124;
  uint64_t v125;
  objc_class *v126;
  uint64_t v127;
  uint64_t v128;
  CHWorkoutDetailHeartRateTableViewCell *v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  CHWorkoutDetailHeartRateTableViewCell *v142;
  unint64_t v143;

  v3 = *v1;
  v127 = *(_QWORD *)(*v1)->cellPadding;
  if (v127)
  {
    swift_bridgeObjectRetain(v3);
    v4 = 0;
    v5 = 0;
    v130 = v3;
    while (1)
    {
      v143 = v5;
      v6 = *(uint64_t *)((char *)&v3[1].super.super.super.super.isa + v4);
      v7 = *(_QWORD *)&v3[1].heartRateController[v4];
      v8 = *(_QWORD *)&v3[1].cellPadding[v4];
      v9 = *(_QWORD *)&v3[1].cellInset[v4];
      v11 = *(uint64_t *)((char *)&v3[2].super.super.super.super.isa + v4);
      v10 = *(_QWORD *)&v3[2].heartRateController[v4];
      v13 = *(_QWORD *)&v3[2].cellPadding[v4];
      v12 = *(_QWORD *)&v3[2].cellInset[v4];
      v14 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)&v3[3].super.super.super.super.isa + v4);
      v134 = v6;
      v135 = v7;
      v136 = v8;
      v137 = v9;
      v138 = v11;
      v139 = v10;
      v140 = v13;
      v141 = v12;
      v142 = v14;
      v132 = v6;
      swift_retain(v6);
      swift_retain(v7);
      swift_retain(v8);
      swift_retain(v9);
      swift_retain(v11);
      swift_retain(v13);
      v15 = swift_bridgeObjectRetain(v14);
      v16 = a1(&v134, v15);
      if (v2)
      {
        swift_bridgeObjectRelease(v130, v17, v18, v19, v20, v21, v22, v23);
        swift_bridgeObjectRelease(v14, v32, v33, v34, v35, v36, v37, v38);
        swift_release(v13);
        swift_release(v11);
        swift_release(v9);
        swift_release(v8);
        swift_release(v7);
        swift_release(v132);
        return;
      }
      v24 = v16;
      swift_bridgeObjectRelease(v14, v17, v18, v19, v20, v21, v22, v23);
      swift_release(v13);
      swift_release(v11);
      swift_release(v9);
      swift_release(v8);
      swift_release(v7);
      swift_release(v132);
      if ((v24 & 1) != 0)
        break;
      v5 = v143 + 1;
      v4 += 72;
      v3 = v130;
      if (v127 == v143 + 1)
      {
        swift_bridgeObjectRelease(v130, v25, v26, v27, v28, v29, v30, v31);
        return;
      }
    }
    v39 = v130;
    swift_bridgeObjectRelease(v130, v25, v26, v27, v28, v29, v30, v31);
    v40 = v143;
    v41 = v143 + 1;
    if (!__OFADD__(v143, 1))
    {
      v42 = *(_QWORD *)v130->cellPadding;
      if (v41 == v42)
        return;
      v43 = v4 + 168;
      while (v41 < v42)
      {
        v131 = v39;
        v133 = v41;
        v143 = v40;
        v45 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)v39 + v43);
        v46 = *(_QWORD *)((char *)&v39[-1] + v43 - 24);
        v125 = *(uint64_t *)((char *)&v39[-2].super.super.super.super.isa + v43);
        v128 = v43;
        v47 = *(_QWORD *)((char *)&v39[-1] + v43 - 16);
        v48 = *(_QWORD *)((char *)&v39[-1] + v43 - 8);
        v50 = *(uint64_t *)((char *)&v39[-1].super.super.super.super.isa + v43);
        v49 = (uint64_t)*(v45 - 3);
        v52 = (uint64_t)*(v45 - 2);
        v51 = (uint64_t)*(v45 - 1);
        v53 = *v45;
        v134 = v125;
        v135 = v46;
        v136 = v47;
        v137 = v48;
        v138 = v50;
        v139 = v49;
        v140 = v52;
        v141 = v51;
        v142 = v53;
        swift_retain(v125);
        swift_retain(v46);
        swift_retain(v47);
        swift_retain(v48);
        swift_retain(v50);
        swift_retain(v52);
        v54 = swift_bridgeObjectRetain(v53);
        v55 = a1(&v134, v54);
        swift_bridgeObjectRelease(v53, v56, v57, v58, v59, v60, v61, v62);
        swift_release(v52);
        swift_release(v50);
        swift_release(v48);
        swift_release(v47);
        swift_release(v46);
        swift_release(v125);
        if ((v55 & 1) != 0)
        {
          v39 = v131;
          v44 = v133;
          v40 = v143;
        }
        else
        {
          v63 = v143;
          v39 = v131;
          v44 = v133;
          if (v133 != v143)
          {
            if ((v143 & 0x8000000000000000) != 0)
              goto LABEL_30;
            v64 = *(_QWORD *)v131->cellPadding;
            if (v143 >= v64)
              goto LABEL_31;
            if (v133 >= v64)
              goto LABEL_32;
            v65 = &v131[1].super.super.super.super.isa + 9 * v143;
            v66 = *v65;
            v67 = v65[1];
            v68 = v65[2];
            v69 = v65[3];
            v70 = v65[4];
            v111 = v65[5];
            v71 = v65[6];
            v109 = v65[7];
            v72 = v65[8];
            v73 = (objc_class *)*(v45 - 6);
            v116 = (objc_class *)*(v45 - 7);
            v117 = (objc_class *)*(v45 - 8);
            v126 = (objc_class *)*(v45 - 5);
            v74 = (objc_class *)*(v45 - 3);
            v122 = (objc_class *)*(v45 - 2);
            v123 = (objc_class *)*(v45 - 4);
            v75 = (objc_class *)*(v45 - 1);
            v76 = *v45;
            v118 = v75;
            v119 = v74;
            v115 = v66;
            swift_retain(v66);
            swift_retain(v67);
            v114 = v68;
            swift_retain(v68);
            v113 = v69;
            swift_retain(v69);
            v112 = v70;
            swift_retain(v70);
            v110 = v71;
            swift_retain(v71);
            v108 = v72;
            swift_bridgeObjectRetain(v72);
            swift_retain(v117);
            swift_retain(v116);
            v121 = v73;
            swift_retain(v73);
            swift_retain(v126);
            swift_retain(v123);
            swift_retain(v122);
            v120 = v76;
            swift_bridgeObjectRetain(v76);
            if ((swift_isUniquelyReferenced_nonNull_native(v131) & 1) == 0)
              v39 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1004DEF24(v131);
            v84 = &v39->super.super.super.super.isa + 9 * v63;
            v86 = v84[4];
            v85 = v84[5];
            v87 = v84[6];
            v88 = v84[7];
            v89 = v84[8];
            v90 = v84[10];
            v91 = (CHWorkoutDetailHeartRateTableViewCell *)v84[12];
            v84[4] = v117;
            v84[5] = v116;
            v84[6] = v121;
            v84[7] = v126;
            v84[8] = v123;
            v84[9] = v119;
            v84[10] = v122;
            v84[11] = v118;
            v84[12] = (Class)v120;
            swift_bridgeObjectRelease(v91, v77, v78, v79, v80, v81, v82, v83);
            swift_release(v90);
            swift_release(v89);
            swift_release(v88);
            swift_release(v87);
            swift_release(v85);
            swift_release(v86);
            v44 = v133;
            if (v133 >= *(_QWORD *)v39->cellPadding)
              goto LABEL_33;
            v99 = (Class *)((char *)&v39->super.super.super.super.isa + v128);
            v100 = *(uint64_t *)((char *)&v39[-2].super.super.super.super.isa + v128);
            v101 = *(_QWORD *)((char *)&v39[-1] + v128 - 24);
            v102 = *(_QWORD *)((char *)&v39[-1] + v128 - 16);
            v103 = *(_QWORD *)((char *)&v39[-1] + v128 - 8);
            v104 = *(uint64_t *)((char *)&v39[-1].super.super.super.super.isa + v128);
            v105 = *(_QWORD *)((char *)v39 + v128 - 16);
            v106 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)&v39->super.super.super.super.isa + v128);
            *(v99 - 8) = v115;
            *(v99 - 7) = v67;
            *(v99 - 6) = v114;
            *(v99 - 5) = v113;
            *(v99 - 4) = v112;
            *(v99 - 3) = v111;
            *(v99 - 2) = v110;
            *(v99 - 1) = v109;
            *v99 = v108;
            swift_bridgeObjectRelease(v106, v92, v93, v94, v95, v96, v97, v98);
            swift_release(v105);
            swift_release(v104);
            swift_release(v103);
            swift_release(v102);
            swift_release(v101);
            swift_release(v100);
            *v124 = v39;
            v63 = v143;
          }
          v107 = __OFADD__(v63, 1);
          v40 = v63 + 1;
          if (v107)
            goto LABEL_29;
        }
        v41 = v44 + 1;
        v42 = *(_QWORD *)v39->cellPadding;
        v43 = v128 + 72;
        if (v41 == v42)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1005A000C(uint64_t (*a1)(char *, __n128), uint64_t a2)
{
  CHWorkoutDetailHeartRateTableViewCell **v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  unint64_t v18;
  char v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(char *);
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  _QWORD v47[2];
  uint64_t (*v48)(char *, __n128);
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;

  v4 = v2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v50 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v49 = (char *)v47 - v11;
  __chkstk_darwin(v12);
  v54 = (unint64_t *)v4;
  v14 = *v4;
  v15 = *(_QWORD *)(*v4)->cellPadding;
  if (v15)
  {
    v52 = (char *)v47 - v13;
    v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v56 = *(_QWORD *)(v8 + 72);
    v17 = swift_bridgeObjectRetain(v14);
    v18 = 0;
    v47[0] = v16;
    while (1)
    {
      v19 = a1((char *)v14 + v16, v17);
      if (v3)
      {
LABEL_6:
        swift_bridgeObjectRelease(v14, v20, v21, v22, v23, v24, v25, v26);
        return;
      }
      if ((v19 & 1) != 0)
        break;
      ++v18;
      v16 += v56;
      if (v15 == v18)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease(v14, v20, v21, v22, v23, v24, v25, v26);
    if (!__OFADD__(v18, 1))
    {
      v27 = *(_QWORD *)v14->cellPadding;
      if (v18 + 1 == v27)
        return;
      v28 = v56 + v16;
      v29 = v18 + 1;
      v53 = v7;
      v47[1] = a2;
      v48 = a1;
      v51 = v8;
      while (v29 < v27)
      {
        v55 = v29;
        v30 = v28;
        v31 = (char *)v14 + v28;
        v32 = (uint64_t (*)(char *))a1;
        v33 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v34 = v52;
        v33(v52, v31, v7);
        LOBYTE(v32) = v32(v34);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v34, v7);
        if ((v32 & 1) != 0)
        {
          a1 = v48;
          v35 = v30;
          v36 = v55;
        }
        else
        {
          v36 = v55;
          v35 = v30;
          if (v55 != v18)
          {
            if ((v18 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v37 = *v54;
            v38 = *(_QWORD *)(*v54 + 16);
            if (v18 >= v38)
              goto LABEL_32;
            v39 = v18 * v56;
            v40 = v53;
            v33(v49, (char *)(v37 + v47[0] + v18 * v56), v53);
            if (v55 >= v38)
              goto LABEL_33;
            v33(v50, (char *)(v37 + v30), v40);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
            *v54 = v37;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v37 = sub_1004DEF38(v37);
              *v54 = v37;
            }
            if (v18 >= *(_QWORD *)(v37 + 16))
              goto LABEL_34;
            v42 = v37 + v47[0] + v39;
            v43 = *(void (**)(unint64_t, char *, uint64_t))(v51 + 40);
            v44 = v53;
            v43(v42, v50, v53);
            if (v55 >= *(_QWORD *)(*v54 + 16))
              goto LABEL_35;
            v43(*v54 + v30, v49, v44);
            v36 = v55;
          }
          v45 = __OFADD__(v18++, 1);
          a1 = v48;
          if (v45)
            goto LABEL_30;
        }
        v46 = v36 + 1;
        v7 = v53;
        v8 = v51;
        if (__OFADD__(v36, 1))
          goto LABEL_29;
        v14 = (CHWorkoutDetailHeartRateTableViewCell *)*v54;
        v27 = *(_QWORD *)(*v54 + 16);
        v29 = v36 + 1;
        v28 = v35 + v56;
        if (v46 == v27)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1005A0364(uint64_t a1)
{
  return sub_10059FA90(a1) & 1;
}

id sub_1005A037C()
{
  char *v0;
  uint64_t v1;
  void **v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  objc_super v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  uint64_t v14;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  swift_beginAccess(&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken], v12, 0, 0);
  sub_100021CC0(v1, (uint64_t)&v10, (uint64_t *)&unk_100828420);
  if (v11)
  {
    sub_100038FD4(&v10, &v13);
    v2 = (void **)&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player];
    swift_beginAccess(&v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player], &v10, 32, 0);
    v3 = *v2;
    if (*v2)
    {
      swift_endAccess(&v10);
      v4 = v14;
      v5 = sub_100016804(&v13, v14);
      v6 = v3;
      v7 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
      objc_msgSend(v6, "removeTimeObserver:", v7);
      swift_unknownObjectRelease(v7);

      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v13);
    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v13);
      swift_endAccess(&v10);
    }
  }
  else
  {
    sub_10001BE90((uint64_t)&v10, (uint64_t *)&unk_100828420);
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for RingCelebrationViewController(0);
  return objc_msgSendSuper2(&v9, "dealloc");
}

uint64_t sub_1005A0590()
{
  return type metadata accessor for RingCelebrationViewController(0);
}

uint64_t type metadata accessor for RingCelebrationViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10083BEB0;
  if (!qword_10083BEB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RingCelebrationViewController);
  return result;
}

id sub_1005A05D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id result;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  NSString v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  NSString v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  NSString v41;
  id v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  NSString v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  double v58;
  double v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  void *v104;
  void *v105;
  id v106;
  id v107;
  void *v108;
  uint64_t v109;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  id v111;
  Class isa;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  id v123;
  void *v124;
  id v125;
  uint64_t v126;
  void *v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  void *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  id v143;
  void **aBlock;
  uint64_t v145;
  uint64_t (*v146)(uint64_t, uint64_t);
  void *v147;
  void (*v148)(uint64_t);
  uint64_t v149;
  objc_super v150;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v138 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v138 - v13;
  v15 = (objc_class *)type metadata accessor for RingCelebrationViewController(0);
  v150.receiver = v1;
  v150.super_class = v15;
  objc_msgSendSuper2(&v150, "viewDidLoad");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  v17 = result;
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  v19 = objc_msgSend((id)objc_opt_self(FICelebrationAssetURLProvider), "celebrationMovieURLForGoalType:", 1);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return (id)sub_10001BE90((uint64_t)v7, &qword_10081E640);
  }
  v20 = v19;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v7, v11, v8);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v22(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return (id)sub_10001BE90((uint64_t)v7, &qword_10081E640);
  v21(v14, v7, v8);
  v139 = v14;
  v140 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v14, v8);
  v141 = v8;
  v22(v4, 0, 1, v8);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url], &aBlock, 33, 0);
  sub_100025DA0((uint64_t)v4, v23, &qword_10081E640);
  swift_endAccess(&aBlock);
  objc_msgSend(v1, "configurePlayer");
  v24 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel];
  v25 = (void *)objc_opt_self(NSBundle);
  v26 = objc_msgSend(v25, "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend(v24, "setText:", v31);

  objc_msgSend(v24, "setTextAlignment:", 1);
  v143 = v24;
  objc_msgSend(v24, "setNumberOfLines:", 0);
  v39 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel];
  v40 = objc_msgSend(v25, "mainBundle");
  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(v40, "localizedStringForKey:value:table:", v41, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v44 = v43;

  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v44, v46, v47, v48, v49, v50, v51, v52);
  objc_msgSend(v39, "setText:", v45);

  objc_msgSend(v39, "setTextAlignment:", 1);
  objc_msgSend(v39, "setNumberOfLines:", 0);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v53 = result;
  v54 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView];
  objc_msgSend(result, "addSubview:", v54);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v55 = result;
  objc_msgSend(result, "addSubview:", v143);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v56 = result;
  objc_msgSend(result, "addSubview:", v39);

  v57 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v57, "_scaledValueForValue:", -40.0);
  v59 = v58;

  v60 = objc_msgSend(v39, "lastBaselineAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v61 = result;
  v142 = v39;
  v62 = objc_msgSend(result, "safeAreaLayoutGuide");

  v63 = objc_msgSend(v62, "bottomAnchor");
  v64 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v63, v59);

  v65 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  v66 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint] = v64;

  v67 = sub_100047110((uint64_t *)&unk_100828340);
  v68 = swift_allocObject(v67, 112, 7);
  *(_OWORD *)(v68 + 16) = xmmword_10062EF60;
  v69 = objc_msgSend(v54, "topAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v70 = result;
  v71 = objc_msgSend(result, "topAnchor");

  v72 = objc_msgSend(v69, "constraintEqualToAnchor:", v71);
  *(_QWORD *)(v68 + 32) = v72;
  v73 = objc_msgSend(v54, "leadingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v74 = result;
  v75 = objc_msgSend(result, "leadingAnchor");

  v76 = objc_msgSend(v73, "constraintEqualToAnchor:", v75);
  *(_QWORD *)(v68 + 40) = v76;
  v77 = objc_msgSend(v54, "trailingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v78 = result;
  v138 = v65;
  v79 = objc_msgSend(result, "trailingAnchor");

  v80 = objc_msgSend(v77, "constraintEqualToAnchor:", v79);
  *(_QWORD *)(v68 + 48) = v80;
  v81 = objc_msgSend(v54, "bottomAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v82 = result;
  v83 = objc_msgSend(result, "bottomAnchor");

  v84 = objc_msgSend(v81, "constraintEqualToAnchor:", v83);
  *(_QWORD *)(v68 + 56) = v84;
  v85 = v143;
  v86 = objc_msgSend(v143, "leadingAnchor");
  result = objc_msgSend(v1, "view");
  v87 = v142;
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v88 = result;
  v89 = objc_msgSend(result, "leadingAnchor");

  v90 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v89, 16.0);
  *(_QWORD *)(v68 + 64) = v90;
  v91 = objc_msgSend(v85, "trailingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v92 = result;
  v93 = objc_msgSend(result, "trailingAnchor");

  v94 = objc_msgSend(v91, "constraintEqualToAnchor:constant:", v93, -16.0);
  *(_QWORD *)(v68 + 72) = v94;
  v95 = objc_msgSend(v85, "bottomAnchor");
  v96 = objc_msgSend(v87, "topAnchor");
  v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

  *(_QWORD *)(v68 + 80) = v97;
  v98 = objc_msgSend(v87, "leadingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v99 = result;
  v100 = objc_msgSend(result, "leadingAnchor");

  v101 = objc_msgSend(v98, "constraintEqualToAnchor:constant:", v100, 16.0);
  *(_QWORD *)(v68 + 88) = v101;
  v102 = objc_msgSend(v87, "trailingAnchor");
  result = objc_msgSend(v1, "view");
  v103 = v138;
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v104 = result;
  v105 = (void *)objc_opt_self(NSLayoutConstraint);
  v106 = objc_msgSend(v104, "trailingAnchor");

  v107 = objc_msgSend(v102, "constraintEqualToAnchor:", v106);
  v108 = *(void **)&v1[v103];
  *(_QWORD *)(v68 + 96) = v107;
  *(_QWORD *)(v68 + 104) = v108;
  aBlock = (void **)v68;
  specialized Array._endMutation()(v109);
  v110 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock;
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v111 = v108;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v110, v113, v114, v115, v116, v117, v118, v119);
  objc_msgSend(v105, "activateConstraints:", isa);

  v120 = (void *)objc_opt_self(NSNotificationCenter);
  v121 = objc_msgSend(v120, "defaultCenter");
  objc_msgSend(v121, "addObserver:selector:name:object:", v1, "textSizeChangedWithNotification:", UIContentSizeCategoryDidChangeNotification, 0);

  v122 = objc_msgSend(v120, "defaultCenter");
  objc_msgSend(v122, "addObserver:selector:name:object:", v1, "appWillResignActive:", UIApplicationWillResignActiveNotification, 0);

  v123 = objc_msgSend(v120, "defaultCenter");
  v124 = (void *)objc_opt_self(NSOperationQueue);
  v125 = objc_msgSend(v124, "mainQueue");
  v126 = swift_allocObject(&unk_1007ABC78, 24, 7);
  swift_unknownObjectWeakInit(v126 + 16);
  v148 = sub_1005A34CC;
  v149 = v126;
  aBlock = _NSConcreteStackBlock;
  v145 = 1107296256;
  v146 = sub_1000398D4;
  v147 = &unk_1007ABF38;
  v127 = _Block_copy(&aBlock);
  v128 = objc_msgSend(v123, "addObserverForName:object:queue:usingBlock:", UIApplicationWillEnterForegroundNotification, 0, v125, v127, swift_release(v149).n128_f64[0]);
  _Block_release(v127);

  swift_unknownObjectRelease(v128);
  v129 = objc_msgSend(v120, "defaultCenter");
  v130 = objc_msgSend(v124, "mainQueue");
  v131 = swift_allocObject(&unk_1007ABC78, 24, 7);
  swift_unknownObjectWeakInit(v131 + 16);
  v148 = sub_1005A34D4;
  v149 = v131;
  aBlock = _NSConcreteStackBlock;
  v145 = 1107296256;
  v146 = sub_1000398D4;
  v147 = &unk_1007ABF60;
  v132 = _Block_copy(&aBlock);
  v133 = objc_msgSend(v129, "addObserverForName:object:queue:usingBlock:", UIApplicationDidEnterBackgroundNotification, 0, v130, v132, swift_release(v149).n128_f64[0]);
  _Block_release(v132);

  swift_unknownObjectRelease(v133);
  if (v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] != 1)
  {
    objc_msgSend(v143, "setAlpha:", 0.0);
    objc_msgSend(v142, "setAlpha:", 0.0);
    v135 = v140;
    v134 = v141;
    v136 = v139;
    return (id)(*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v136, v134);
  }
  result = objc_msgSend(v1, "view");
  v135 = v140;
  v134 = v141;
  v136 = v139;
  if (result)
  {
    v137 = result;
    objc_msgSend(result, "setAlpha:", 0.0);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v136, v134);
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1005A140C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  id *v7;
  id v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "configurePlayer");

  }
  swift_beginAccess(v2, v10, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (id *)(v5 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
    swift_beginAccess(v5 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player, v9, 0, 0);
    v8 = *v7;

    objc_msgSend(v8, "play");
  }
}

void sub_1005A14CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "teardownPlayer");

  }
}

void sub_1005A15FC(char a1)
{
  unsigned __int8 *v1;
  int v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  objc_super v27;

  v27.receiver = v1;
  v27.super_class = (Class)type metadata accessor for RingCelebrationViewController(0);
  objc_msgSendSuper2(&v27, "viewDidAppear:", a1 & 1);
  objc_msgSend(v1, "configurePlayer");
  v3 = v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade];
  v4 = (void *)objc_opt_self(UIView);
  if (v3 == 1)
  {
    v5 = swift_allocObject(&unk_1007ABEA8, 24, 7);
    *(_QWORD *)(v5 + 16) = v1;
    v25 = sub_1005A3470;
    v26 = v5;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10002D0F8;
    v24 = &unk_1007ABEC0;
    v6 = _Block_copy(&v21);
    v7 = v26;
    v8 = v1;
    swift_release(v7);
    v9 = swift_allocObject(&unk_1007ABEF8, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    v25 = sub_1005A346C;
    v26 = v9;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_1003B91BC;
    v24 = &unk_1007ABF10;
    v10 = _Block_copy(&v21);
    v11 = v26;
    v12 = v8;
    swift_release(v11);
    objc_msgSend(v4, "animateWithDuration:animations:completion:", v6, v10, 0.5);
    _Block_release(v10);
    _Block_release(v6);
  }
  else
  {
    v13 = swift_allocObject(&unk_1007ABE08, 24, 7);
    *(_QWORD *)(v13 + 16) = v1;
    v25 = sub_1005A3410;
    v26 = v13;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_10002D0F8;
    v24 = &unk_1007ABE20;
    v14 = _Block_copy(&v21);
    v15 = v26;
    v16 = v1;
    swift_release(v15);
    v17 = swift_allocObject(&unk_1007ABE58, 24, 7);
    *(_QWORD *)(v17 + 16) = v16;
    v25 = sub_1005A346C;
    v26 = v17;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_1003B91BC;
    v24 = &unk_1007ABE70;
    v18 = _Block_copy(&v21);
    v19 = v26;
    v20 = v16;
    swift_release(v19);
    objc_msgSend(v4, "animateWithDuration:animations:completion:", v14, v18, 0.3);
    _Block_release(v18);
    _Block_release(v14);
    objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player], "play", swift_beginAccess(&v20[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player], &v21, 0, 0).n128_f64[0]);
  }
}

void sub_1005A18BC(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setAlpha:", 1.0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005A1AE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[10] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[11] = v4;
  v2[12] = v5;
  return swift_task_switch(sub_1005A1B54, v4, v5);
}

uint64_t sub_1005A1B54()
{
  uint64_t v0;
  id *v1;
  double v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v8;

  v1 = (id *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  *(_QWORD *)&v2 = swift_beginAccess(v1, v0 + 40, 0, 0).n128_u64[0];
  if (*v1 && (v3 = objc_msgSend(*v1, "currentItem", v2)) != 0)
  {
    v4 = v3;
    *(_QWORD *)(v0 + 104) = objc_msgSend(v3, "asset");

    sub_100047110(&qword_100822BA8);
    v5 = static AVPartialAsyncProperty<A>.duration.getter();
    *(_QWORD *)(v0 + 112) = v5;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
    *(_QWORD *)(v0 + 120) = v6;
    *v6 = v0;
    v6[1] = sub_1005A1C5C;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v5);
  }
  else
  {
    v8 = swift_release(*(_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_1005A1C5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (void *)v2[13];
  v3 = v2[14];
  if (v0)
  {
    swift_errorRelease(v0);

    swift_release(v3);
    v5 = v2[11];
    v6 = v2[12];
    v7 = sub_100499D44;
  }
  else
  {

    swift_release(v3);
    v5 = v2[11];
    v6 = v2[12];
    v7 = sub_1005A1CE8;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_1005A1CE8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 0x8000000000000000) != 0 || (v2 = *(unsigned int *)(v0 + 24), (v2 & 0x80000000) != 0))
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    return;
  }
  if (!(_DWORD)v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = v1 / v2;
  if (!is_mul_ok(v3, 0x3B9ACA00uLL))
  {
LABEL_10:
    __break(1u);
    return;
  }
  if ((double)(1000000000 * v3) * 0.9 < (double)*(uint64_t *)(v0 + 64))
    sub_1005A1E6C();
  (*(void (**)(void))(v0 + 8))();
}

void sub_1005A1E6C()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  if ((v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 1;
    v1 = (void *)objc_opt_self(UIView);
    v2 = swift_allocObject(&unk_1007ABCC8, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v14 = sub_1005A33F0;
    v15 = v2;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v12 = sub_10002D0F8;
    v13 = &unk_1007ABCE0;
    v3 = _Block_copy(&v10);
    v4 = v15;
    v5 = v0;
    swift_release(v4);
    v6 = swift_allocObject(&unk_1007ABD18, 24, 7);
    *(_QWORD *)(v6 + 16) = v5;
    v14 = sub_1005A33F8;
    v15 = v6;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v12 = sub_1003B91BC;
    v13 = &unk_1007ABD30;
    v7 = _Block_copy(&v10);
    v8 = v15;
    v9 = v5;
    swift_release(v8);
    objc_msgSend(v1, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v3, v7, 1.5, 0.0);
    _Block_release(v7);
    _Block_release(v3);
  }
}

void sub_1005A1FCC(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1007ABD68, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v15 = sub_1005A3400;
  v16 = v3;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10002D0F8;
  v14 = &unk_1007ABD80;
  v4 = _Block_copy(&v11);
  v5 = v16;
  v6 = a1;
  swift_release(v5);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v4, 0.0, 0.5);
  _Block_release(v4);
  v7 = swift_allocObject(&unk_1007ABDB8, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v15 = sub_1005A3408;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10002D0F8;
  v14 = &unk_1007ABDD0;
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v6;
  swift_release(v9);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v8, 0.5, 1.0);
  _Block_release(v8);
}

void sub_1005A2128(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v3, "setBackgroundColor:", v4);

    v5 = objc_msgSend(a1, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "setAlpha:", 0.0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1005A21E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v3 = static os_log_type_t.default.getter(a1);
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Ring celebration complete", 25, 2, _swiftEmptyArrayStorage);

  return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 0, 0);
}

id sub_1005A22A0(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, void *a3)
{
  _BYTE *v3;
  char *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  NSString v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  objc_super v36;
  char v37;

  v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_observers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer] = 0;
  v4 = &v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  *v6 = 0u;
  v6[1] = 0u;
  v3[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 0;
  v7 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView;
  v8 = objc_allocWithZone((Class)UIView);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v7] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v13 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleFootnote, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  v14 = (void *)UILabel.withFont(_:)(v13);

  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "whiteColor");
  v17 = UILabel.withTextColor(_:)(v16);

  *(_QWORD *)&v9[v11] = v17;
  v18 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = 1;
  v20 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleFootnote, 0, 0x100000000, *(_QWORD *)&UIFontWeightRegular, 0, 0);
  v21 = (void *)UILabel.withFont(_:)(v20);

  v22 = objc_msgSend(v15, "fu_systemTextGreyColor");
  objc_msgSend(v21, "setTextColor:", v22);

  *(_QWORD *)&v9[v18] = v21;
  v23 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  *(_QWORD *)&v9[v23] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  if (a2)
  {
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2, v25, v26, v27, v28, v29, v30, v31);
  }
  else
  {
    v24 = 0;
  }
  v36.receiver = v9;
  v36.super_class = (Class)type metadata accessor for RingCelebrationViewController(0);
  v32 = objc_msgSendSuper2(&v36, "initWithNibName:bundle:", v24, a3);

  return v32;
}

id sub_1005A2628(void *a1)
{
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  objc_super v25;
  char v26;

  v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_observers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer] = 0;
  v2 = &v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
  v3 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
  *v4 = 0u;
  v4[1] = 0u;
  v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_fadeOutStarted] = 0;
  v5 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView;
  v6 = objc_allocWithZone((Class)UIView);
  v7 = v1;
  v8 = objc_msgSend(v6, "init");
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v5] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v11 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleFootnote, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  v12 = (void *)UILabel.withFont(_:)(v11);

  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "whiteColor");
  v15 = UILabel.withTextColor(_:)(v14);

  *(_QWORD *)&v7[v9] = v15;
  v16 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v26 = 1;
  v18 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleFootnote, 0, 0x100000000, *(_QWORD *)&UIFontWeightRegular, 0, 0);
  v19 = (void *)UILabel.withFont(_:)(v18);

  v20 = objc_msgSend(v13, "fu_systemTextGreyColor");
  objc_msgSend(v19, "setTextColor:", v20);

  *(_QWORD *)&v7[v16] = v19;
  v21 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_bottomLabelConstraint;
  *(_QWORD *)&v7[v21] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  v25.receiver = v7;
  v25.super_class = (Class)type metadata accessor for RingCelebrationViewController(0);
  v22 = objc_msgSendSuper2(&v25, "initWithCoder:", a1);

  return v22;
}

void sub_1005A294C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100648260;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_100648278;
  v4[3] = &unk_100648278;
  sub_10014F7C0(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100648290;
    v4[6] = &unk_100648260;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_1005A29FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSURL *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  Swift::Int64 value;
  uint64_t v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  Swift::Int64 epoch;
  id v40;
  id v41;
  id v42;
  _BYTE v43[24];
  void **aBlock;
  unint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t *);
  void *v47;
  double (*v48)(uint64_t, unint64_t, uint64_t);
  uint64_t v49;
  char v50[24];
  char v51[32];
  __C::CMTime v52;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&epoch - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&epoch - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void **)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player], v51, 1, 0);
  if (!*v9)
  {
    v10 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer])
    {
      v11 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url];
      swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_url], v50, 0, 0);
      sub_100021CC0(v11, (uint64_t)v4, &qword_10081E640);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_10001BE90((uint64_t)v4, &qword_10081E640);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        v12 = objc_allocWithZone((Class)AVPlayerItem);
        URL._bridgeToObjectiveC()(v13);
        v15 = v14;
        v16 = objc_msgSend(v12, "initWithURL:", v14);
        v42 = v16;

        v17 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "init");
        objc_msgSend(v17, "_setParticipatesInAudioSession:", 0);
        objc_msgSend(v17, "setActionAtItemEnd:", 1);
        objc_msgSend(v17, "replaceCurrentItemWithPlayerItem:", v16);
        v18 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", v17);
        objc_msgSend(v18, "setVideoGravity:", AVLayerVideoGravityResizeAspect);
        v19 = *v9;
        *v9 = v17;
        v20 = v17;
        v40 = v20;

        v21 = *(void **)&v1[v10];
        *(_QWORD *)&v1[v10] = v18;
        v22 = v18;
        v41 = v22;

        v23 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_containerView], "layer");
        objc_msgSend(v23, "addSublayer:", v22);

        v24 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        v25 = String._bridgeToObjectiveC()();
        v26 = objc_msgSend(v20, "currentItem");
        objc_msgSend(v24, "addObserver:selector:name:object:", v1, "beginFadeOut", v25, v26);

        v52 = CMTime.init(seconds:preferredTimescale:)(0.1, 1000000000);
        value = v52.value;
        LODWORD(v25) = v52.timescale;
        epoch = v52.epoch;
        v28 = HIDWORD(*(_QWORD *)&v52.timescale);
        sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
        v30 = (void *)static OS_dispatch_queue.main.getter(v29);
        v31 = swift_allocObject(&unk_1007ABC28, 24, 7);
        *(_QWORD *)(v31 + 16) = v1;
        v48 = sub_1005A330C;
        v49 = v31;
        aBlock = _NSConcreteStackBlock;
        v45 = 1107296256;
        v46 = sub_1005A3180;
        v47 = &unk_1007ABC40;
        v32 = _Block_copy(&aBlock);
        v33 = v49;
        v34 = v1;
        *(_QWORD *)&v35 = swift_release(v33).n128_u64[0];
        aBlock = (void **)value;
        v45 = __PAIR64__(v28, v25);
        v36 = v40;
        v46 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
        v37 = objc_msgSend(v40, "addPeriodicTimeObserverForInterval:queue:usingBlock:", &aBlock, v30, v32, v35);
        _Block_release(v32);

        _bridgeAnyObjectToAny(_:)(&aBlock, v37);
        swift_unknownObjectRelease(v37);
        v38 = (uint64_t)&v34[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken];
        swift_beginAccess(&v34[OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_timeObserverToken], v43, 33, 0);
        sub_100025DA0((uint64_t)&aBlock, v38, (uint64_t *)&unk_100828420);
        swift_endAccess(v43);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
}

double sub_1005A2E98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v4 = a2;
  v6 = HIDWORD(a2);
  v7 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = swift_allocObject(&unk_1007ABC78, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  type metadata accessor for MainActor(0);
  swift_retain(v11);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1007ABCA0, 64, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = a1;
  *(_DWORD *)(v14 + 48) = v4;
  *(_DWORD *)(v14 + 52) = v6;
  *(_QWORD *)(v14 + 56) = a3;
  swift_release(v11);
  v15 = sub_10020DB28((uint64_t)v9, (uint64_t)&unk_10083BED0, v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1005A2FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[10] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[11] = v9;
  v7[12] = v10;
  return swift_task_switch(sub_1005A3040, v9, v10);
}

uint64_t sub_1005A3040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_10083BEC4);
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_1005A30EC;
    return sub_1005A1AE8(*(_QWORD *)(v0 + 56));
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 80));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 104) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_1005A30EC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));

  return swift_task_switch(sub_1005A313C, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1005A313C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 104) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005A3180(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(v2, v3, v4);
  return swift_release(v5);
}

void sub_1005A3208()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player, v7, 1, 0);
  if (*v1)
    objc_msgSend(*v1, "replaceCurrentItemWithPlayerItem:", 0);
  v2 = OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_playerLayer);
  if (v3)
  {
    objc_msgSend(v3, "setPlayer:", 0);
    v4 = *(void **)(v0 + v2);
    if (v4)
      objc_msgSend(v4, "removeFromSuperlayer");
  }
  v5 = *v1;
  *v1 = 0;

  v6 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = 0;

}

uint64_t sub_1005A32E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1005A330C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1005A2E98(a1, a2, a3);
}

uint64_t sub_1005A3314()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A3338()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1005A3364(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_10083BECC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000DA0E4;
  return sub_1005A2FCC(a1, v4, v5, v6, v7, v9, v8);
}

void sub_1005A33F0()
{
  uint64_t v0;

  sub_1005A1FCC(*(void **)(v0 + 16));
}

id sub_1005A33F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1005A21E8(a1, *(void **)(v1 + 16));
}

id sub_1005A3400()
{
  return sub_1005A3418(0.0);
}

void sub_1005A3408()
{
  uint64_t v0;

  sub_1005A2128(*(void **)(v0 + 16));
}

id sub_1005A3410()
{
  return sub_1005A3418(1.0);
}

id sub_1005A3418(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_titleLabel), "setAlpha:");
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_subtitleLabel), "setAlpha:", a1);
}

void sub_1005A3470()
{
  uint64_t v0;

  sub_1005A18BC(*(void **)(v0 + 16));
}

id sub_1005A3478()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_player);
  swift_beginAccess(v1, v3, 0, 0);
  return objc_msgSend(*v1, "play");
}

void sub_1005A34CC(uint64_t a1)
{
  uint64_t v1;

  sub_1005A140C(a1, v1);
}

void sub_1005A34D4(uint64_t a1)
{
  uint64_t v1;

  sub_1005A14CC(a1, v1);
}

void sub_1005A3538(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0x800000010069BEC0;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0xD00000000000001BLL;
    v4 = 0x800000010069BEA0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x4547444142;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

id sub_1005A359C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  qword_10086AFD0 = (uint64_t)result;
  return result;
}

char *sub_1005A35E0(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  v13 = (void *)UILabel.withNumberOfLines(_:)(0);

  v14 = (void *)UILabel.withLineBreakMode(_:)(0);
  if (qword_10081E070 != -1)
    swift_once(&qword_10081E070, sub_1005A359C);
  v15 = (void *)UILabel.withFont(_:)(qword_10086AFD0);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v9] = v15;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label];
  v18 = v16;
  objc_msgSend(v18, "addSubview:", v17);
  sub_1005A39C8();

  return v18;
}

id sub_1005A3754(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v12;

  v3 = OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  v7 = (void *)UILabel.withNumberOfLines(_:)(0);

  v8 = (void *)UILabel.withLineBreakMode(_:)(0);
  if (qword_10081E070 != -1)
    swift_once(&qword_10081E070, sub_1005A359C);
  v9 = (void *)UILabel.withFont(_:)(qword_10086AFD0);

  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v3] = v9;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

void sub_1005A3884(char a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label);
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x800000010069BEC0;
    else
      v3 = 0x800000010069BEA0;
  }
  else
  {
    v3 = 0xE500000000000000;
  }
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;
  swift_bridgeObjectRelease(v3);

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v2, "setText:", v9);

}

void sub_1005A39C8()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623750;
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView_label];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 25.0);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -10.0);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "trailingAnchor");
  v13 = objc_msgSend(v1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "leadingAnchor");
  v16 = objc_msgSend(v1, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v19, v20, v21, v22, v23, v24, v25);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_1005A3C28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView()
{
  return objc_opt_self(_TtC10FitnessApp45TrophyCaseAwardDetailViewControllerHeaderView);
}

void sub_1005A3C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation) == 1
      && *(_BYTE *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear) == 1
      && (*(_BYTE *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted) & 1) == 0)
    {
      sub_1005A6E58();
    }

  }
}

id sub_1005A3F0C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider + 24];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider + 32];
  sub_100016804(&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider], v1);
  v4 = sub_100028404((unint64_t *)&unk_10082E590, v3, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCaseAwardDetailViewController, (uint64_t)&unk_100648314);
  v5 = v0;
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)(v5, v4, v1, v2);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1005A41C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  NSURL *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v55 - v11;
  if (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1
    && v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowCelebration] == 1)
  {
    v13 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement];
    if ((objc_msgSend(v13, "unearned", v10) & 1) == 0)
    {
      v14 = objc_msgSend(v13, "template");
      v15 = objc_msgSend(v14, "uniqueName");

      if (!v15)
      {
        __break(1u);
        goto LABEL_17;
      }
      v16 = objc_msgSend((id)objc_opt_self(FICelebrationAssetURLProvider), "celebrationMovieURLForAchievementIdentifer:", v15);

      if (v16)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

        v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v17(v4, v8, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v17(v12, v4, v5);
          v18 = objc_msgSend(v1, "view");
          if (v18)
          {
            v19 = v18;
            v20 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer];
            objc_msgSend(v18, "addSubview:", v20);

            v21 = objc_msgSend(v20, "topAnchor");
            v22 = objc_msgSend(v1, "view");
            if (v22)
            {
              v23 = v22;
              v24 = objc_msgSend(v22, "topAnchor");

              v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);
              objc_msgSend(v25, "setActive:", 1);

              v26 = objc_msgSend(v20, "leadingAnchor");
              v27 = objc_msgSend(v1, "view");
              if (v27)
              {
                v28 = v27;
                v29 = objc_msgSend(v27, "leadingAnchor");

                v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);
                objc_msgSend(v30, "setActive:", 1);

                v31 = objc_msgSend(v20, "trailingAnchor");
                v32 = objc_msgSend(v1, "view");
                if (v32)
                {
                  v33 = v32;
                  v34 = objc_msgSend(v32, "trailingAnchor");

                  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
                  objc_msgSend(v35, "setActive:", 1);

                  v36 = objc_msgSend(v20, "bottomAnchor");
                  v37 = objc_msgSend(v1, "view");
                  if (v37)
                  {
                    v38 = v37;
                    v39 = objc_msgSend(v37, "safeAreaLayoutGuide");

                    v40 = objc_msgSend(v39, "bottomAnchor");
                    v41 = objc_msgSend(v36, "constraintEqualToAnchor:", v40);

                    objc_msgSend(v41, "setActive:", 1);
                    v42 = objc_allocWithZone((Class)AVPlayer);
                    URL._bridgeToObjectiveC()(v43);
                    v45 = v44;
                    v46 = objc_msgSend(v42, "initWithURL:", v44);

                    objc_msgSend(v46, "setActionAtItemEnd:", 1);
                    v47 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", v46);
                    objc_msgSend(v47, "setVideoGravity:", AVLayerVideoGravityResizeAspectFill);
                    v48 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer];
                    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = v46;
                    v49 = v46;

                    v50 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer];
                    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = v47;
                    v51 = v47;

                    v52 = objc_msgSend(v20, "layer");
                    objc_msgSend(v52, "addSublayer:", v51);

                    v53 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
                    v54 = objc_msgSend(v49, "currentItem");
                    objc_msgSend(v53, "addObserver:selector:name:object:", v1, "playerFinished:", AVPlayerItemDidPlayToEndTimeNotification, v54);

                    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
                    return;
                  }
                  goto LABEL_21;
                }
LABEL_20:
                __break(1u);
LABEL_21:
                __break(1u);
                return;
              }
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      sub_10012089C((uint64_t)v4);
    }
  }
}

void sub_1005A4858(char a1)
{
  char *v1;
  void *v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1 & 1);
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer];
  if (v3)
  {
    objc_msgSend(v3, "play");
  }
  else if (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1
         && (v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] & 1) == 0)
  {
    sub_1005A6E58();
  }
}

void sub_1005A4930()
{
  _BYTE *v0;
  id v1;
  id v2;

  if (v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] == 1
    && (v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 1;
    v1 = objc_msgSend(v0, "collectionView");
    if (v1)
    {
      v2 = v1;
      objc_msgSend(v1, "setAlpha:", 0.0);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1005A4A8C(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  const char *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  objc_super v56;
  __objc2_prot *v57;
  __objc2_prot *v58;

  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    return;
  v55 = v3;
  v4 = objc_msgSend(v3, "viewControllers");
  v5 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v39 = v6;
    else
      v39 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v14 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v40, v41, v42, v43, v44, v45, v46);
  }
  else
  {
    v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v7, v8, v9, v10, v11, v12, v13);
  if (v14 < 2)
  {

    return;
  }
  v15 = objc_msgSend(v55, "viewControllers");
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v5);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v47 = v16;
    else
      v47 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v24 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v48, v49, v50, v51, v52, v53, v54);
  }
  else
  {
    v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v17, v18, v19, v20, v21, v22, v23);
  v25 = v24 - 2;
  if (__OFSUB__(v24, 2))
  {
    __break(1u);
    goto LABEL_28;
  }
  v26 = objc_msgSend(v55, "viewControllers");
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v5);

  if ((v24 & 0xC000000000000001) != 0)
  {
LABEL_28:
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v24);
    goto LABEL_12;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v25 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    return;
  }
  v27 = *(id *)(v24 + 8 * v25 + 32);
LABEL_12:
  v35 = v27;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v24, v28, v29, v30, v31, v32, v33, v34);
  v58 = &OBJC_PROTOCOL___UINavigationControllerDelegate;
  v36 = swift_dynamicCastObjCProtocolConditional(v35, 1, &v58);
  v37 = v55;
  if (v36)
  {
    objc_msgSend(v55, "setDelegate:");
    v37 = v55;
  }
  v57 = &OBJC_PROTOCOL___CHActivityHistoryPaletteNavigationController;
  v38 = (void *)swift_dynamicCastObjCProtocolConditional(v37, 1, &v57);
  if (v38)
    objc_msgSend(v38, "detachPalette");
  v56.receiver = v1;
  v56.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  objc_msgSendSuper2(&v56, "viewWillAppear:", a1 & 1);

}

uint64_t sub_1005A4D94(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  Class v28;
  void *v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double Height;
  id v40;
  double v41;
  double v42;
  void *v43;
  id v44;
  double v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  Class isa;
  id v58;
  uint64_t v59;
  uint64_t Strong;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  Class v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  NSString v84;
  id v85;
  uint64_t v86;
  id v87;
  Class v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  CGRect v95;

  if (result > 2)
    return 0;
  if ((result & 0x8000000000000000) == 0)
  {
    if (!*((_BYTE *)&off_1007835A0 + result + 32))
    {
      v29 = (void *)objc_opt_self(UIScreen);
      v30 = objc_msgSend(v29, "mainScreen");
      objc_msgSend(v30, "bounds");
      v32 = v31;
      v34 = v33;
      v36 = v35;
      v38 = v37;

      v95.origin.x = v32;
      v95.origin.y = v34;
      v95.size.width = v36;
      v95.size.height = v38;
      Height = CGRectGetHeight(v95);
      v40 = objc_msgSend(v29, "mainScreen");
      objc_msgSend(v40, "scale");
      v42 = v41;

      v43 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v44 = objc_msgSend(v43, "fractionalWidthDimension:", 1.0);
      v45 = Height / v42 * 0.8;
      v46 = objc_msgSend(v43, "estimatedDimension:", v45);
      v47 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v48 = objc_msgSend(v47, "sizeWithWidthDimension:heightDimension:", v44, v46);

      v49 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v48);
      objc_msgSend(v49, "setContentInsets:", 0.0, 0.0, 10.0, 0.0);
      v50 = objc_msgSend(v43, "fractionalWidthDimension:", 1.0);
      v51 = objc_msgSend(v43, "estimatedDimension:", v45);
      v52 = objc_msgSend(v47, "sizeWithWidthDimension:heightDimension:", v50, v51);

      v53 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v54 = sub_100047110((uint64_t *)&unk_100828340);
      v55 = swift_allocObject(v54, 40, 7);
      *(_OWORD *)(v55 + 16) = xmmword_100623630;
      *(_QWORD *)(v55 + 32) = v49;
      v94[0] = v55;
      specialized Array._endMutation()(v55);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v56 = v49;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v58 = objc_msgSend(v53, "verticalGroupWithLayoutSize:subitems:", v52, isa, swift_bridgeObjectRelease(v94[0]).n128_f64[0]);

      v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v58);
      return (uint64_t)v25;
    }
    if (*((_BYTE *)&off_1007835A0 + result + 32) == 1)
    {
      v3 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v4 = objc_msgSend(v3, "fractionalWidthDimension:", 1.0);
      v5 = objc_msgSend(v3, "estimatedDimension:", 80.0);
      v6 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v90 = objc_msgSend(v6, "sizeWithWidthDimension:heightDimension:", v4, v5);

      v7 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v90);
      v8 = objc_msgSend(v3, "fractionalWidthDimension:", 1.0);
      v9 = objc_msgSend(v3, "estimatedDimension:", 80.0);
      v10 = objc_msgSend(v6, "sizeWithWidthDimension:heightDimension:", v8, v9);

      v11 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v12 = sub_100047110((uint64_t *)&unk_100828340);
      v13 = swift_allocObject(v12, 40, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100623630;
      *(_QWORD *)(v13 + 32) = v7;
      v94[0] = v13;
      specialized Array._endMutation()(v13);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v14 = v7;
      v15 = Array._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(v11, "verticalGroupWithLayoutSize:subitems:", v10, v15, swift_bridgeObjectRelease(v94[0]).n128_f64[0]);

      v17 = objc_msgSend(v3, "fractionalWidthDimension:", 1.0);
      v18 = objc_msgSend(v3, "estimatedDimension:", 0.0);
      v19 = objc_msgSend(v6, "sizeWithWidthDimension:heightDimension:", v17, v18);

      static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v21 = v20;
      v22 = v19;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v22, v23, 1);

      objc_msgSend(v24, "setContentInsets:", 0.0, 15.0, 0.0, 15.0);
      v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v16);
      v26 = swift_allocObject(v12, 40, 7);
      *(_OWORD *)(v26 + 16) = xmmword_100623630;
      *(_QWORD *)(v26 + 32) = v24;
      v94[0] = v26;
      specialized Array._endMutation()(v26);
      sub_10001E724(0, (unint64_t *)&unk_10082B4F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
      v27 = v24;
      v28 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v25, "setBoundarySupplementaryItems:", v28, swift_bridgeObjectRelease(v94[0]).n128_f64[0]);

      return (uint64_t)v25;
    }
    v59 = a3 + 16;
    swift_beginAccess(a3 + 16, v94, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v59);
    if (Strong)
    {
      v61 = (void *)Strong;
      v62 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
      swift_bridgeObjectRetain(v62);

      if (!((unint64_t)v62 >> 62))
      {
LABEL_9:
        v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_10;
      }
    }
    else
    {
      v62 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        goto LABEL_9;
    }
    if (v62 < 0)
      v89 = v62;
    else
      v89 = v62 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v62);
    v63 = _CocoaArrayWrapper.endIndex.getter(v89);
    swift_bridgeObjectRelease(v62);
LABEL_10:
    swift_bridgeObjectRelease(v62);
    if (v63)
    {
      v64 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v65 = objc_msgSend(v64, "estimatedDimension:", 80.0);
      v66 = objc_msgSend(v64, "estimatedDimension:", 100.0);
      v67 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v91 = objc_msgSend(v67, "sizeWithWidthDimension:heightDimension:", v65, v66);

      v68 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v91);
      v69 = objc_msgSend(v64, "estimatedDimension:", 80.0);
      v70 = objc_msgSend(v64, "estimatedDimension:", 0.0);
      v71 = objc_msgSend(v67, "sizeWithWidthDimension:heightDimension:", v69, v70);

      v72 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v73 = sub_100047110((uint64_t *)&unk_100828340);
      v74 = swift_allocObject(v73, 40, 7);
      *(_OWORD *)(v74 + 16) = xmmword_100623630;
      *(_QWORD *)(v74 + 32) = v68;
      v92 = v74;
      specialized Array._endMutation()(v74);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v75 = v68;
      v76 = Array._bridgeToObjectiveC()().super.isa;
      v77 = objc_msgSend(v72, "horizontalGroupWithLayoutSize:subitems:", v71, v76, swift_bridgeObjectRelease(v92).n128_f64[0]);

      v78 = objc_msgSend(v64, "fractionalWidthDimension:", 1.0);
      v79 = objc_msgSend(v64, "estimatedDimension:", 0.0);
      v80 = objc_msgSend(v67, "sizeWithWidthDimension:heightDimension:", v78, v79);

      static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v82 = v81;
      v83 = v80;
      v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v82);
      v85 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v83, v84, 1);

      objc_msgSend(v85, "setContentInsets:", 0.0, 0.0, 0.0, 0.0);
      v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v77);
      objc_msgSend(v25, "setOrthogonalScrollingBehavior:", 1);
      v86 = swift_allocObject(v73, 40, 7);
      *(_OWORD *)(v86 + 16) = xmmword_100623630;
      *(_QWORD *)(v86 + 32) = v85;
      v93 = v86;
      specialized Array._endMutation()(v86);
      sub_10001E724(0, (unint64_t *)&unk_10082B4F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
      v87 = v85;
      v88 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v25, "setBoundarySupplementaryItems:", v88, swift_bridgeObjectRelease(v93).n128_f64[0]);

      objc_msgSend(v25, "setContentInsets:", 0.0, 15.0, 0.0, 15.0);
      return (uint64_t)v25;
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1005A58AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void **aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void (*v39)();
  _QWORD *v40;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement), "relevantEarnedInstance");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "externalIdentifier");

    if (v12)
    {
      v33 = v6;
      v34 = v3;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v16 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v16, "workoutForUUID:", v17);

      if (v18)
      {
        swift_bridgeObjectRelease(v15);
        v19 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout) = v18;
        v20 = v18;

        sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
        v22 = (void *)static OS_dispatch_queue.main.getter(v21);
        v23 = swift_allocObject(&unk_1007AC088, 24, 7);
        swift_unknownObjectWeakInit(v23 + 16, v1);
        v39 = sub_10028A414;
        v40 = (_QWORD *)v23;
        aBlock = _NSConcreteStackBlock;
        v36 = 1107296256;
        v37 = sub_10002D0F8;
        v38 = &unk_1007AC118;
        v24 = _Block_copy(&aBlock);
        v25 = swift_release(v40);
        static DispatchQoS.unspecified.getter(v25);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v26 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v27 = sub_100047110(&qword_100828C80);
        v28 = sub_10002FB08();
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v2, v26);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v24);
        _Block_release(v24);

        (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
      }
      else
      {
        v29 = swift_allocObject(&unk_1007AC088, 24, 7);
        swift_unknownObjectWeakInit(v29 + 16, v1);
        v30 = (_QWORD *)swift_allocObject(&unk_1007AC0D8, 40, 7);
        v30[2] = v29;
        v30[3] = v13;
        v30[4] = v15;
        v39 = sub_1005A901C;
        v40 = v30;
        aBlock = _NSConcreteStackBlock;
        v36 = 1107296256;
        v37 = sub_10002D0F8;
        v38 = &unk_1007AC0F0;
        v31 = _Block_copy(&aBlock);
        v32 = v40;
        swift_retain(v30);
        swift_release(v32);
        objc_msgSend(v16, "addUpdateHandler:", v31);
        _Block_release(v31);
        swift_release(v30);
      }
    }
  }
}

void sub_1005A5C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *Strong;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  _QWORD *v32;
  char v33[24];
  char v34[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + 16;
  swift_beginAccess(a1 + 16, v34, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong
    || (v16 = *(_QWORD *)&Strong[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout],
        Strong,
        !v16))
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v18 = static OS_dispatch_queue.main.getter(v17);
    v30 = v7;
    v19 = (void *)v18;
    v20 = swift_allocObject(&unk_1007AC088, 24, 7);
    v29 = v10;
    swift_beginAccess(v14, v33, 0, 0);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(v14);
    swift_unknownObjectWeakInit(v20 + 16, v21);

    v22 = (_QWORD *)swift_allocObject(&unk_1007AC150, 40, 7);
    v22[2] = v20;
    v22[3] = a2;
    v22[4] = a3;
    aBlock[4] = sub_1005A902C;
    v32 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007AC168;
    v23 = _Block_copy(aBlock);
    v24 = v32;
    swift_bridgeObjectRetain(a3);
    v25 = swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_100047110(&qword_100828C80);
    v28 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  }
}

void sub_1005A5ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  NSIndexSet *v20;
  void *v21;
  void *v22;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = a1 + 16;
  swift_beginAccess(v6, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    swift_beginAccess(v6, v25, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v6);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = objc_retain(*(id *)(v9
                              + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider));

      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "workoutForUUID:", v12);

    }
    else
    {
      v13 = 0;
    }
    v14 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout];
    *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = v13;

  }
  swift_beginAccess(v6, v24, 0, 0);
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "collectionView");

    if (v17)
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4547444142, 0xE500000000000000, 0xD000000000000011, 0x800000010069BEC0, 0);
      swift_bridgeObjectRelease(0xE500000000000000);
      if ((v18 & 1) != 0)
      {
        v19 = 0;
      }
      else
      {
        v19 = 1;
        swift_bridgeObjectRelease(0x800000010069BEC0);
      }
      IndexSet.init(integer:)(v19);
      IndexSet._bridgeToObjectiveC()(v20);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v17, "reloadSections:", v22);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for TrophyCaseAwardDetailViewController()
{
  return objc_opt_self(_TtC10FitnessApp35TrophyCaseAwardDetailViewController);
}

void sub_1005A6294(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

id sub_1005A6338(id a1, uint64_t a2)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  id v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  Class v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  const char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  NSString v40;
  Class isa;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  NSString v53;
  Class v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;

  v4 = v2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = IndexPath.section.getter(v11);
  if (v12 > 2)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (!*((_BYTE *)&off_100783578 + v12 + 32))
  {
    v40 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    a1 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v40, isa);

    v42 = type metadata accessor for TrophyCaseAwardDetailBadgeCell();
    v43 = swift_dynamicCastClass(a1, v42);
    if (!v43)
      return a1;
    v44 = (void *)v43;
    v45 = *(Class *)((char *)&v4->super.super.super.super.isa
                   + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider);
    v46 = *(Class *)((char *)&v4->super.super.super.super.isa
                   + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator);
    v47 = a1;
    objc_msgSend(v45, "setPaused:", objc_msgSend(v46, "isPaused"));
    v48 = *(Class *)((char *)&v4->super.super.super.super.isa
                   + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement);
    v49 = *((_BYTE *)&v4->super.super.super.super.isa
          + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowEarned);
    v50 = *(_QWORD *)&v4->cellInset[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider];
    v51 = *(uint64_t *)((char *)&v4[1].super.super.super.super.isa
                     + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider);
    sub_100016804((Class *)((char *)&v4->super.super.super.super.isa+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider), v50);
    v52 = dispatch thunk of AAUIAwardsDataProviding.shouldShowProgressBar(for:)(v48, v50, v51);
    sub_1004B95B4(v48, v49, v52 & 1, *(void **)((char *)&v4->super.super.super.super.isa+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView), *(void **)((char *)&v4->super.super.super.super.isa+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider), v45, *((_BYTE *)&v4->super.super.super.super.isa+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend));
    a1 = v47;
    sub_1005A7BD8(v44);

LABEL_19:
    return a1;
  }
  if (*((_BYTE *)&off_100783578 + v12 + 32) != 1)
  {
    v53 = String._bridgeToObjectiveC()();
    v54 = IndexPath._bridgeToObjectiveC()().super.isa;
    a1 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v53, v54);

    v55 = type metadata accessor for TrophyCaseAwardDetailFriendCell();
    v56 = swift_dynamicCastClass(a1, v55);
    if (!v56)
      return a1;
    v37 = (void *)v56;
    a1 = a1;
    v57 = IndexPath.row.getter(a1);
    a2 = v57;
    v4 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)&v4->super.super.super.super.isa
                                                   + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
    if (((unint64_t)v4 & 0xC000000000000001) == 0)
    {
      if ((v57 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v57 < *(_QWORD *)(((unint64_t)v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v58 = *((id *)&v4[1].super.super.super.super.isa + v57);
LABEL_18:
        sub_1004D9864(v58);

        goto LABEL_19;
      }
      __break(1u);
LABEL_25:
      if (a2 < 0)
        v66 = a2;
      else
        v66 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v38 = _CocoaArrayWrapper.endIndex.getter(v66);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a2, v67, v68, v69, v70, v71, v72, v73);
      goto LABEL_9;
    }
LABEL_22:
    swift_bridgeObjectRetain(v4);
    v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v4);
    swift_bridgeObjectRelease(v4, v59, v60, v61, v62, v63, v64, v65);
    goto LABEL_18;
  }
  v13 = String._bridgeToObjectiveC()();
  v14 = IndexPath._bridgeToObjectiveC()().super.isa;
  a1 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v13, v14);

  v15 = type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  if (!swift_dynamicCastClass(a1, v15))
    return a1;
  v16 = *(Class *)((char *)&v4->super.super.super.super.isa
                 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout);
  if (!v16)
    return a1;
  v17 = *(_QWORD *)&v4->cellInset[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider];
  v75 = *(uint64_t *)((char *)&v4[1].super.super.super.super.isa
                   + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider);
  v74 = sub_100016804((Class *)((char *)&v4->super.super.super.super.isa+ OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider), v17);
  a1 = a1;
  v3 = v16;
  v18 = objc_msgSend(v3, "UUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  a2 = dispatch thunk of AAUIAwardsDataProviding.achievements(forWorkoutIdentifier:)(v20, v22, v17, v75);
  swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
  v37 = *(Class *)((char *)&v4->super.super.super.super.isa
                 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext);
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)&v4->super.super.super.super.isa
                                                 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager);
  if ((unint64_t)a2 >> 62)
    goto LABEL_25;
  v38 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a2, v30, v31, v32, v33, v34, v35, v36);
  sub_10048DA80(v3, v37, v4, v38);

  return a1;
}

double sub_1005A6AA8()
{
  void *v0;
  void *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  void *v22;
  CGRect v24;
  CGRect v25;

  v1 = (void *)objc_opt_self(UIScreen);
  v2 = objc_msgSend(v1, "mainScreen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v24.origin.x = v4;
  v24.origin.y = v6;
  v24.size.width = v8;
  v24.size.height = v10;
  Width = CGRectGetWidth(v24);
  v12 = objc_msgSend(v1, "mainScreen");
  objc_msgSend(v12, "bounds");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v25.origin.x = v14;
  v25.origin.y = v16;
  v25.size.width = v18;
  v25.size.height = v20;
  CGRectGetHeight(v25);
  v21 = objc_msgSend(v0, "navigationController");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "_topBarHeight");

  }
  return (Width - Width * 0.76) * 0.5;
}

void sub_1005A6C00()
{
  uint64_t v0;
  char *v1;
  void *v2;
  void *v3;
  char *v4;
  id v5;
  double MidX;
  id v7;
  CGRect v8;
  CGRect v9;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell);
  if (v1)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView];
    if (v2)
    {
      v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer];
      v4 = v1;
      v5 = v2;
      objc_msgSend(v3, "addSubview:", v5);
      v7 = v5;
      objc_msgSend(v3, "bounds");
      MidX = CGRectGetMidX(v8);
      objc_msgSend(v3, "bounds");
      objc_msgSend(v7, "setCenter:", MidX, CGRectGetMidY(v9));

    }
  }
}

void sub_1005A6E58()
{
  _BYTE *v0;
  void *v1;
  CGFloat v2;
  double v3;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  id v10;
  void *v11;
  CGFloat v12;
  void *v13;
  void *v14;
  CGFloat v15;
  _BYTE *v16;
  CGFloat v17;
  void *v18;
  CGFloat v19;
  _BYTE *v20;
  CGAffineTransform v21;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell])
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 1;
    v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView];
    objc_msgSend(v0, "badgeFrame");
    objc_msgSend(v1, "setFrame:");
    objc_msgSend(v1, "resizeBadgeForCurrentViewSize");
    objc_msgSend(v0, "placeBadgeViewInContainer");
    if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement], "unearned") & 1) != 0)
    {
      v2 = 0.75;
      v3 = 0.5;
    }
    else
    {
      objc_msgSend(v1, "setPaused:", 0);
      objc_msgSend(v1, "playFlipInAnimation");
      v2 = 0.5;
      v3 = 1.0;
    }
    CGAffineTransformMakeScale(&v21, v2, v2);
    a = v21.a;
    b = v21.b;
    c = v21.c;
    d = v21.d;
    tx = v21.tx;
    ty = v21.ty;
    v10 = objc_msgSend(v0, "collectionView");
    if (v10)
    {
      v11 = v10;
      v21.a = a;
      v21.b = b;
      v21.c = c;
      v21.d = d;
      v21.tx = tx;
      v21.ty = ty;
      objc_msgSend(v10, "setTransform:", &v21);

      v12 = COERCE_DOUBLE(swift_allocObject(&unk_1007ABFE8, 24, 7));
      *(_QWORD *)(*(_QWORD *)&v12 + 16) = v0;
      v13 = (void *)objc_opt_self(UIView);
      *(_QWORD *)&v21.tx = sub_1005A8FDC;
      v21.ty = v12;
      *(_QWORD *)&v21.a = _NSConcreteStackBlock;
      *(_QWORD *)&v21.b = 1107296256;
      *(_QWORD *)&v21.c = sub_10002D0F8;
      *(_QWORD *)&v21.d = &unk_1007AC000;
      v14 = _Block_copy(&v21);
      v15 = v21.ty;
      v16 = v0;
      swift_retain(*(_QWORD *)&v12);
      swift_release(*(_QWORD *)&v15);
      v17 = COERCE_DOUBLE(swift_allocObject(&unk_1007AC038, 24, 7));
      *(_QWORD *)(*(_QWORD *)&v17 + 16) = v16;
      *(_QWORD *)&v21.tx = sub_1005A8FE4;
      v21.ty = v17;
      *(_QWORD *)&v21.a = _NSConcreteStackBlock;
      *(_QWORD *)&v21.b = 1107296256;
      *(_QWORD *)&v21.c = sub_1003B91BC;
      *(_QWORD *)&v21.d = &unk_1007AC050;
      v18 = _Block_copy(&v21);
      v19 = v21.ty;
      v20 = v16;
      swift_release(*(_QWORD *)&v19);
      objc_msgSend(v13, "animateWithDuration:animations:completion:", v14, v18, v3);
      _Block_release(v18);
      _Block_release(v14);
      swift_release(*(_QWORD *)&v12);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 1;
  }
}

void sub_1005A70F8(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v2 = objc_msgSend(a1, "collectionView");
  if (v2)
  {
    v3 = v2;
    v6[0] = 0x3FF0000000000000;
    v6[1] = 0;
    v6[2] = 0;
    v6[3] = 0x3FF0000000000000;
    v6[4] = 0;
    v6[5] = 0;
    objc_msgSend(v2, "setTransform:", v6);

    v4 = objc_msgSend(a1, "collectionView");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setAlpha:", 1.0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1005A719C(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNavigationBarHidden:animated:", 0, 0);

  }
}

id sub_1005A71F8(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, char a13, char a14, char a15, char a16, char a17, char *a18, uint64_t a19, uint64_t a20)
{
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t inited;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t **v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id result;
  void *v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t ObjCClassFromMetadata;
  NSString v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  NSString *v72;
  NSString v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  _QWORD *v81;
  id v83;
  id v84;
  id v85;
  id v86;
  id v88;
  id v89;
  id v91;
  uint64_t v92;
  id v94;
  _QWORD aBlock[5];
  uint64_t v96;
  objc_super v97;
  char v98[32];
  _QWORD v99[6];

  v99[3] = a19;
  v99[4] = a20;
  v81 = sub_10004C480(v99);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 32))(v81, a4, a19);
  v25 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer;
  v26 = objc_allocWithZone((Class)UIView);
  v27 = a18;
  v28 = objc_msgSend(v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v28, "setBackgroundColor:", v29);

  v30 = UIView.forAutoLayout()();
  *(_QWORD *)&a18[v25] = v30;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 0;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = 0;
  v31 = &v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v92 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement] = a1;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_healthStore] = a2;
  sub_1000252E0((uint64_t)v99, (uint64_t)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider]);
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeImageFactory] = a5;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider] = a6;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formattingManager] = a7;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider] = a8;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator] = a9;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext] = a10;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager] = a11;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider] = a12;
  v84 = objc_allocWithZone((Class)AAUIBadgeView);
  v32 = a1;
  v79 = a2;
  v80 = a5;
  v83 = a6;
  v88 = a7;
  v91 = a8;
  v78 = a9;
  v85 = a10;
  v86 = a11;
  v89 = a12;
  v33 = objc_msgSend(v84, "initUsingEarnedShader:", a15 & 1);
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeView] = v33;
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendListManager] = a3;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation] = a13;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowCelebration] = a14;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowEarned] = a15;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowAssociatedWorkout] = a16;
  v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend] = a17;
  v34 = type metadata accessor for FriendsAchievementDataProvider();
  inited = swift_initStackObject(v34, v98);
  *(_QWORD *)(inited + 16) = v32;
  *(_QWORD *)(inited + 24) = a3;
  v36 = a3;
  v94 = v32;
  v37 = v36;
  v38 = objc_msgSend(v37, "allFriends");
  if (v38)
  {
    v39 = v38;
    v40 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v41 = sub_100364684();
    v42 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v39, v40, v41);

    v43 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init", v78, v79, v80);
    v44 = sub_100295A4C(v42);
    swift_bridgeObjectRelease(v42);
    v45 = sub_10031B514((unint64_t)v44, inited, v43);
    swift_release(inited);

  }
  else
  {
    swift_release(inited);
    v45 = _swiftEmptyArrayStorage;
  }
  v46 = *(_QWORD *)&v27[v92];
  *(_QWORD *)&v27[v92] = v45;

  swift_bridgeObjectRelease(v46);
  v47 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v97.receiver = v27;
  v97.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailViewController();
  v48 = objc_msgSendSuper2(&v97, "initWithCollectionViewLayout:", v47);

  v49 = v48;
  v50 = objc_msgSend(v49, "navigationItem");
  objc_msgSend(v50, "setLargeTitleDisplayMode:", 2);

  result = objc_msgSend(v49, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v52 = result;
  v53 = swift_allocObject(&unk_1007AC088, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v49);
  v54 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_100319B18;
  v96 = v53;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100319084;
  aBlock[3] = &unk_1007AC190;
  v55 = _Block_copy(aBlock);
  v56 = objc_msgSend(v54, "initWithSectionProvider:", v55);
  _Block_release(v55);
  swift_release(v96);
  objc_msgSend(v52, "setCollectionViewLayout:", v56);

  result = objc_msgSend(v49, "collectionView");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v57 = result;
  v58 = type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v58);
  v60 = String._bridgeToObjectiveC()();
  objc_msgSend(v57, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v60);

  result = objc_msgSend(v49, "collectionView");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v61 = result;
  v62 = type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  v63 = swift_getObjCClassFromMetadata(v62);
  v64 = String._bridgeToObjectiveC()();
  objc_msgSend(v61, "registerClass:forCellWithReuseIdentifier:", v63, v64);

  result = objc_msgSend(v49, "collectionView");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v65 = result;
  v66 = type metadata accessor for TrophyCaseAwardDetailFriendCell();
  v67 = swift_getObjCClassFromMetadata(v66);
  v68 = String._bridgeToObjectiveC()();
  objc_msgSend(v65, "registerClass:forCellWithReuseIdentifier:", v67, v68);

  result = objc_msgSend(v49, "collectionView");
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v69 = result;
  v70 = type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
  v71 = swift_getObjCClassFromMetadata(v70);
  v72 = UICollectionElementKindSectionHeader;
  v73 = String._bridgeToObjectiveC()();
  objc_msgSend(v69, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v71, v72, v73);

  if ((a17 & 1) == 0)
  {
    v75 = objc_msgSend(v49, "navigationItem");
    v76 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 9, v49, "shareTapped:");
    objc_msgSend(v75, "setRightBarButtonItem:", v76);

  }
  sub_100028404((unint64_t *)&unk_10082E590, v74, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCaseAwardDetailViewController, (uint64_t)&unk_100648314);
  v77 = v49;
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();

  sub_1005A58AC();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v99);
  return v77;
}

id sub_1005A7AB0(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, __int128 a9, void *a10, void *a11, unsigned __int8 a12, char a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v25;
  int v26;
  void *v27;
  void *v28;
  __int128 v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;

  v35 = a7;
  v36 = a8;
  v33 = a5;
  v34 = a6;
  v31 = a2;
  v32 = a3;
  v30 = a1;
  v29 = a9;
  v27 = a11;
  v28 = a10;
  v26 = a12;
  v20 = *(_QWORD *)(a18 - 8);
  __chkstk_darwin(a1);
  v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (char *)objc_allocWithZone((Class)type metadata accessor for TrophyCaseAwardDetailViewController());
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a4, a18);
  return sub_1005A71F8(v30, v31, v32, (uint64_t)v22, v33, v34, v35, v36, (void *)v29, *((void **)&v29 + 1), v28, v27, v26, a13, a14, a15, a16, v23, a18,
           a19);
}

void sub_1005A7BD8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell) = a1;
  v13 = a1;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView) == 1)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    v16 = swift_allocObject(&unk_1007AC088, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16);
    aBlock[4] = sub_1005A9010;
    v23 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_1007AC0A0;
    v17 = _Block_copy(aBlock);
    swift_release(v23);
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v19 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_100047110(&qword_100828C80);
    v21 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1005A7E00()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = UIView.forAutoLayout()();
  *(_QWORD *)&v1[v2] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeViewCell] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationComplete] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear] = 0;
  v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_needToAnimatedBadgeView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = 0;
  v6 = &v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseAwardDetailViewController.swift", 52, 2, 229, 0);
  __break(1u);
}

void sub_1005A7F78()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayer], "pause");
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer];
  if (v2)
    objc_msgSend(v2, "removeFromSuperlayer");
  v3 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer], "removeFromSuperview");
  v4 = objc_msgSend(v0, "collectionView");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setAlpha:", 1.0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005A8028()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1007ABF98, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_1005A824C;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007ABFB0;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v16 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100047110(&qword_100828C80);
  v18 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005A8228()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A824C()
{
  uint64_t v0;

  sub_1005A6294(*(void **)(v0 + 16));
}

uint64_t sub_1005A8254(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a1 > 2)
  {
    __break(1u);
  }
  else
  {
    if (!*((_BYTE *)&off_1007835F0 + a1 + 32))
      return 1;
    if (*((_BYTE *)&off_1007835F0 + a1 + 32) == 1)
      return *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout)
          && (*(_BYTE *)(v2
                       + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_shouldShowAssociatedWorkout) & 1) != 0;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formatsForFriend) & 1) != 0)
      return 0;
    v1 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement);
    if (!((unint64_t)v1 >> 62))
      return *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v1 < 0)
    v4 = v1;
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  return v5;
}

void sub_1005A8320(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void (**v23)(char *, id);
  void *v24;
  void *v25;
  void *v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  void (**v49)(char *, id);
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  unint64_t v56;
  char *v57;
  id v58;
  id v59;
  void *v60;
  uint64_t v61;
  Class isa;
  Class v63;
  id v64;
  id v65;
  NSURL *v66;
  void *v67;
  void *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  Class v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  id *v94;
  id v95;
  id v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  id v101;
  void (**v102)(char *, id);
  id v103;
  _QWORD v104[3];
  uint64_t v105;
  uint64_t v106;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v12);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)type metadata accessor for URL(0);
  v102 = (void (**)(char *, id))*(v15 - 1);
  v103 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = IndexPath.section.getter(v18);
  if (v19 > 2)
    return;
  if (v19 < 0)
  {
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain(a1);
    v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, a1);
    swift_bridgeObjectRelease(a1, v78, v79, v80, v81, v82, v83, v84);
    goto LABEL_15;
  }
  if (!*((_BYTE *)&off_100783618 + v19 + 32))
    return;
  if (*((_BYTE *)&off_100783618 + v19 + 32) == 1)
  {
    v20 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_associatedWorkout];
    if (!v20)
      return;
    v21 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_healthStore];
    v22 = objc_allocWithZone((Class)FIUIModel);
    v23 = v21;
    v100 = v20;
    v102 = v23;
    v101 = objc_msgSend(v22, "initWithHealthStore:", v23);
    if (v101)
    {
      v24 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_fitnessAppContext];
      v25 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutFormattingManager];
      v26 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_workoutDataProvider];
      v27 = v2;
      v28 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_badgeImageFactory];
      v29 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendListManager];
      v95 = *(id *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider];
      v30 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_pauseRingsCoordinator];
      v31 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_resourceProvider];
      v99 = *(id *)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_formattingManager];
      v97 = type metadata accessor for CHAwardsDataProvider();
      sub_1000252E0((uint64_t)&v27[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievementDataProvider], (uint64_t)v104);
      v32 = v105;
      v93 = v106;
      v33 = sub_10017C044((uint64_t)v104, v105);
      v94 = &v91;
      v34 = __chkstk_darwin(v33);
      v36 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v37 + 16))(v36, v34);
      v98 = v24;
      v96 = v25;
      v103 = v26;
      v38 = v28;
      v39 = v29;
      v40 = v95;
      v91 = v40;
      v41 = v30;
      v92 = v41;
      v42 = v31;
      v43 = v99;
      v95 = v43;
      v44 = sub_10017DB7C((uint64_t)v36, v97, v32, v93);
      v99 = v44;
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v104);
      v45 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
      v46 = v100;
      v89 = v43;
      v90 = v44;
      v88 = v41;
      v86 = v39;
      v87 = v40;
      v47 = v39;
      v85 = v38;
      v48 = v38;
      v50 = v101;
      v49 = v102;
      v51 = v98;
      v52 = v96;
      v53 = objc_msgSend(v45, "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v46, 0, v102, v101, v98, v96, v103, v85, v86, v87, v88, v42, v89, v90);

      if (v53)
      {
        objc_msgSend(v53, "setEdgesForExtendedLayout:", 0);
        v54 = objc_msgSend(v27, "navigationController");
        if (v54)
        {
          v55 = v54;
          objc_msgSend(v54, "pushViewController:animated:", v53, 1);

        }
      }
      else
      {

      }
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  v56 = IndexPath.row.getter(v19);
  v57 = v2;
  v2 = (char *)v56;
  a1 = *(CHWorkoutDetailHeartRateTableViewCell **)&v57[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_friendsWithAchievement];
  if (((unint64_t)a1 & 0xC000000000000001) != 0)
    goto LABEL_24;
  if ((v56 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v56 >= *(_QWORD *)(((unint64_t)a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v58 = *((id *)&a1[1].super.super.super.super.isa + v56);
LABEL_15:
  v59 = objc_msgSend(v58, "UUID");
  if (v59)
  {
    v60 = v59;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v59);

    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
    if ((_DWORD)v61 == 1)
    {
      isa = 0;
    }
    else
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v61 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  else
  {
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
    isa = 0;
  }
  Date.init()(v61);
  v63 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v64 = (id)ASActivityAppLaunchURLForFriendOnDate(isa, v63);

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v64);
  v65 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v66);
  v68 = v67;
  v69 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435758((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100028404((unint64_t *)&qword_10081E820, 255, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100622638);
  v70 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v69, v71, v72, v73, v74, v75, v76, v77);
  objc_msgSend(v65, "openURL:options:completionHandler:", v68, v70, 0);

  v102[1](v17, v103);
}

uint64_t sub_1005A89C8(void *a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t result;
  NSString *v25;
  NSString v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == (const char *)a3)
  {
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v15 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a2, a3, 0);
    swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
    if ((v16 & 1) == 0)
      return (uint64_t)objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  v25 = UICollectionElementKindSectionHeader;
  v26 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v25, v26, isa);

  result = IndexPath.section.getter(v29);
  if (result > 2)
    return (uint64_t)v28;
  v30 = result;
  if ((result & 0x8000000000000000) == 0)
  {
    v31 = type metadata accessor for TrophyCaseAwardDetailViewControllerHeaderView();
    if (swift_dynamicCastClass(v28, v31))
    {
      v32 = *((_BYTE *)&off_100783578 + v30 + 32);
      v28 = v28;
      sub_1005A3884(v32);

    }
    return (uint64_t)v28;
  }
  __break(1u);
  return result;
}

void sub_1005A8B34()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  Class isa;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_achievement];
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_localizationProvider], "shareDescriptionForAchievement:", v1);
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v7 = sub_100092B54(v1);
    v8 = (uint64_t *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText];
    v9 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText
                                                      + 8];
    *v8 = v4;
    v8[1] = v6;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
    v17 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage];
    *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage] = v7;
    v18 = v7;

    v19 = sub_100047110(&qword_10082CEC0);
    v20 = swift_allocObject(v19, 128, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100624A40;
    v21 = type metadata accessor for TrophyCaseAwardDetailViewController();
    *(_QWORD *)(v20 + 32) = v0;
    *(_QWORD *)(v20 + 88) = &type metadata for String;
    *(_QWORD *)(v20 + 56) = v21;
    *(_QWORD *)(v20 + 64) = v4;
    *(_QWORD *)(v20 + 72) = v6;
    *(_QWORD *)(v20 + 120) = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
    *(_QWORD *)(v20 + 96) = v18;
    v22 = objc_allocWithZone((Class)UIActivityViewController);
    v47 = v18;
    v23 = v0;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v25, v26, v27, v28, v29, v30, v31);
    v32 = objc_msgSend(v22, "initWithActivityItems:applicationActivities:", isa, 0);

    v33 = (Class)sub_10005FD28();
    if (!v33)
    {
      type metadata accessor for ActivityType(0);
      v35 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v34);
      v33 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v35, v36, v37, v38, v39, v40, v41, v42);
    }
    objc_msgSend(v32, "setExcludedActivityTypes:", v33);

    v43 = objc_msgSend(v23, "navigationController");
    if (v43
      || (v45 = objc_msgSend(v23, "hk_window")) != 0
      && (v46 = v45,
          v43 = objc_msgSend(v45, "rootViewController"),
          v46,
          v43))
    {
      objc_msgSend(v43, "presentViewController:animated:completion:", v32, 1, 0);

      v44 = v32;
    }
    else
    {
      v44 = v47;
      v47 = v32;
    }

  }
}

id sub_1005A8DCC()
{
  uint64_t v0;
  id v1;
  void *v2;
  UIImage *v3;
  NSData *v4;
  NSData *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  NSString v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v1 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingImage);
  if (v2)
  {
    v3 = v2;
    v4 = UIImagePNGRepresentation(v3);
    if (v4)
    {
      v5 = v4;
      v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v8 = v7;

      v9 = objc_allocWithZone((Class)LPImage);
      sub_1001AE60C(v6, v8);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v11 = String._bridgeToObjectiveC()();
      v12 = objc_msgSend(v9, "initWithData:MIMEType:", isa, v11);
      sub_10004D9E4(v6, v8);

      objc_msgSend(v1, "setImage:", v12);
      v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0
                                                      + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_sharingText
                                                      + 8);
      if (v13)
      {
        swift_bridgeObjectRetain(v13);
        v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
      }
      else
      {
        v14 = 0;
      }
      objc_msgSend(v1, "setSummary:", v14);

      sub_10004D9E4(v6, v8);
    }

  }
  return v1;
}

void sub_1005A8F54()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_avPlayerLayer);
  if (v1)
    objc_msgSend(v1, "removeFromSuperlayer");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_celebrationVideoContainer), "setAlpha:", 0.0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_forModalPresentation) == 1
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_didAppear) == 1
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp35TrophyCaseAwardDetailViewController_modalBadgeFlipStarted) & 1) == 0)
  {
    sub_1005A6E58();
  }
}

void sub_1005A8FDC()
{
  uint64_t v0;

  sub_1005A70F8(*(void **)(v0 + 16));
}

void sub_1005A8FE4(int a1)
{
  uint64_t v1;

  sub_1005A719C(a1, *(id *)(v1 + 16));
}

uint64_t sub_1005A8FEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A9010()
{
  uint64_t v0;

  sub_1005A3C88(v0);
}

void sub_1005A901C()
{
  uint64_t *v0;

  sub_1005A5C38(v0[2], v0[3], v0[4]);
}

void sub_1005A902C()
{
  uint64_t v0;

  sub_1005A5ECC(*(_QWORD *)(v0 + 16));
}

ValueMetadata *type metadata accessor for ActivitySharingIdentifiableReply()
{
  return &type metadata for ActivitySharingIdentifiableReply;
}

uint64_t sub_1005A9074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10003423C(a1);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
    {
LABEL_6:
      v15 = 0;
      return swift_task_create(v8, v15, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v9);
  swift_unknownObjectRetain(v9);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
  v14 = v13;
  swift_unknownObjectRelease(v9);
  if (!(v14 | v12))
    goto LABEL_6;
  v18[0] = 0;
  v18[1] = 0;
  v15 = v18;
  v18[2] = v12;
  v18[3] = v14;
  return swift_task_create(v8, v15, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_1005A91A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005A92E4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_100493944);
}

uint64_t sub_1005A91AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_10003423C(a1);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = sub_100047110(&qword_100839980);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, v17, a2, a3);
}

uint64_t sub_1005A92D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005A92E4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Locale);
}

uint64_t sub_1005A92E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_10003423C(a1);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v12);
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v18 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = a4(0);
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, v19, a2, a3);
}

char *sub_1005A9410(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t ObjectType;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  char **v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  void **aBlock;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void *v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  objc_super v48;

  v3 = v2;
  ObjectType = swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers] = &_swiftEmptyArrayStorage;
  v7 = &v3[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_url];
  v8 = type metadata accessor for URL(0);
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  (*(void (**)(char *, uint64_t))(v40 + 16))(v7, a1);
  v3[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] = a2;
  v48.receiver = v3;
  v48.super_class = (Class)type metadata accessor for VideoLooperView(0);
  v9 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "configurePlayer");
  v10 = objc_msgSend(v9, "window");

  if (v10 && (v9[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
  {
    v11 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!v11)
      goto LABEL_8;
    v12 = &selRef_play;
  }
  else
  {
    v11 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!v11)
      goto LABEL_8;
    v12 = &selRef_pause;
  }
  objc_msgSend(v11, *v12);
LABEL_8:
  v13 = (void *)objc_opt_self(NSNotificationCenter);
  v14 = objc_msgSend(v13, "defaultCenter");
  if (qword_10081D7D8 != -1)
    swift_once(&qword_10081D7D8, sub_10004CDAC);
  v15 = qword_10086A208;
  v16 = (void *)objc_opt_self(NSOperationQueue);
  v17 = objc_msgSend(v16, "mainQueue");
  v18 = swift_allocObject(&unk_1007AC2B0, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = swift_allocObject(&unk_1007AC2D8, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = ObjectType;
  v46 = sub_1005AA458;
  v47 = v19;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_1000398D4;
  v45 = &unk_1007AC2F0;
  v20 = _Block_copy(&aBlock);
  v21 = objc_msgSend(v14, "addObserverForName:object:queue:usingBlock:", v15, 0, v17, v20, swift_release(v47).n128_f64[0]);
  _Block_release(v20);

  v22 = objc_msgSend(v13, "defaultCenter");
  if (qword_10081D7E0 != -1)
    swift_once(&qword_10081D7E0, sub_10004CD78);
  v23 = qword_10086A210;
  v24 = objc_msgSend(v16, "mainQueue");
  v25 = swift_allocObject(&unk_1007AC2B0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = swift_allocObject(&unk_1007AC328, 32, 7);
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = ObjectType;
  v46 = sub_1005AA484;
  v47 = v26;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_1000398D4;
  v45 = &unk_1007AC340;
  v27 = _Block_copy(&aBlock);
  v28 = objc_msgSend(v22, "addObserverForName:object:queue:usingBlock:", v23, 0, v24, v27, swift_release(v47).n128_f64[0]);
  _Block_release(v27);

  v29 = sub_100047110(&qword_10082CEC0);
  v30 = swift_allocObject(v29, 96, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v30 + 56) = swift_getObjectType(v21);
  *(_QWORD *)(v30 + 32) = v21;
  *(_QWORD *)(v30 + 88) = swift_getObjectType(v28);
  *(_QWORD *)(v30 + 64) = v28;

  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a1, v41);
  v31 = *(CHWorkoutDetailHeartRateTableViewCell **)&v9[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers];
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers] = v30;
  swift_bridgeObjectRelease(v31, v32, v33, v34, v35, v36, v37, v38);
  return v9;
}

void sub_1005A9850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _BYTE *Strong;
  _BYTE *v22;
  id v23;
  void *v24;
  char **v25;
  uint64_t v26;
  uint64_t v27[3];

  v4 = a2 + 16;
  v5 = static os_log_type_t.default.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v27[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(a3, 0);
    v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
    v26 = sub_10003E8EC(v11, v12, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v9 + 4);
    swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s did receive ActivityTileViewControllerPlayVideos", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  swift_beginAccess(v4, v27, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v22 = Strong;
    v23 = objc_msgSend(Strong, "window");

    if (v23 && (v22[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
    {
      v24 = *(void **)&v22[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
      if (v24)
      {
        v25 = &selRef_play;
        goto LABEL_10;
      }
    }
    else
    {
      v24 = *(void **)&v22[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
      if (v24)
      {
        v25 = &selRef_pause;
LABEL_10:
        objc_msgSend(v24, *v25);
      }
    }

  }
}

void sub_1005A9A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t Strong;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26[3];

  v4 = a2 + 16;
  v5 = static os_log_type_t.default.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(a3, 0);
    v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
    v25 = sub_10003E8EC(v11, v12, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v9 + 4);
    swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s did receive ActivityTileViewControllerPauseVideos", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  swift_beginAccess(v4, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player);
    v24 = v23;

    if (v23)
    {
      objc_msgSend(v24, "pause");

    }
  }
}

id sub_1005A9BC0()
{
  char *v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_observers];
  v2 = *(_QWORD *)v1->cellPadding;
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = (uint64_t)&v1[1];
    swift_bridgeObjectRetain(v1);
    do
    {
      sub_10003E9BC(v4, (uint64_t)v18);
      v5 = objc_msgSend(v3, "defaultCenter");
      v6 = v19;
      v7 = sub_100016804(v18, v19);
      v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
      objc_msgSend(v5, "removeObserver:", v8);

      swift_unknownObjectRelease(v8);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v18);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v1, v9, v10, v11, v12, v13, v14, v15);
  }
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for VideoLooperView(0);
  return objc_msgSendSuper2(&v17, "dealloc");
}

uint64_t sub_1005A9D60()
{
  return type metadata accessor for VideoLooperView(0);
}

uint64_t type metadata accessor for VideoLooperView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C070;
  if (!qword_10083C070)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VideoLooperView);
  return result;
}

id sub_1005A9E34()
{
  char *v0;
  id v1;
  id result;
  char **v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoLooperView(0);
  objc_msgSendSuper2(&v4, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");

  if (v1 && (v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_isStatic] & 1) == 0)
  {
    result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!result)
      return result;
    v3 = &selRef_play;
  }
  else
  {
    result = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player];
    if (!result)
      return result;
    v3 = &selRef_pause;
  }
  return objc_msgSend(result, *v3);
}

uint64_t sub_1005A9FD4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100648410;
    v4[3] = "\b";
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1005AA064()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player])
  {
    v6 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer])
    {
      v7 = objc_allocWithZone((Class)AVPlayerItem);
      URL._bridgeToObjectiveC()(v8);
      v10 = v9;
      v11 = objc_msgSend(v7, "initWithURL:", v9);

      v12 = objc_msgSend(objc_allocWithZone((Class)AVQueuePlayer), "init");
      objc_msgSend(v12, "_setParticipatesInAudioSession:", 0);
      objc_msgSend(v12, "setPreventsDisplaySleepDuringVideoPlayback:", 0);
      objc_msgSend(v12, "setAllowsExternalPlayback:", 0);
      objc_msgSend(v12, "insertItem:afterItem:", v11, 0);
      v13 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", v12);
      v14 = *(void **)&v1[v5];
      *(_QWORD *)&v1[v5] = v12;
      v15 = v12;

      v16 = *(void **)&v1[v6];
      *(_QWORD *)&v1[v6] = v13;
      v17 = v13;

      v18 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
      type metadata accessor for MainActor(0);
      v19 = v15;
      v20 = static MainActor.shared.getter(v19);
      v21 = (_QWORD *)swift_allocObject(&unk_1007AC288, 40, 7);
      v21[2] = v20;
      v21[3] = &protocol witness table for MainActor;
      v21[4] = v19;
      v22 = sub_1005A9074((uint64_t)v4, (uint64_t)&unk_10083C088, (uint64_t)v21);
      v23 = objc_msgSend(v1, "layer", swift_release(v22).n128_f64[0]);
      objc_msgSend(v23, "addSublayer:", v17);

    }
  }
}

void sub_1005AA2E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_player);
  if (v2)
    objc_msgSend(v2, "replaceCurrentItemWithPlayerItem:", 0);
  v3 = OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15VideoLooperView_playerLayer);
  if (v4)
  {
    objc_msgSend(v4, "setPlayer:", 0);
    v5 = *(void **)(v0 + v3);
    if (v5)
      objc_msgSend(v5, "removeFromSuperlayer");
  }
  v6 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  v7 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;

}

uint64_t sub_1005AA39C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005AA3C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C084);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10015FDAC(a1, v4, v5, v6);
}

uint64_t sub_1005AA434()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005AA458(uint64_t a1)
{
  uint64_t v1;

  sub_1005A9850(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1005AA460()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005AA484(uint64_t a1)
{
  uint64_t v1;

  sub_1005A9A28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_1005AA490()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unsigned int v13;
  id v14;
  double v15;
  NSString v17;
  double v18;
  void *v19;
  __int128 v20;
  __int128 v21;

  v1 = objc_msgSend(v0, "metadata");
  if (!v1)
  {
    v20 = 0u;
    v21 = 0u;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutAveragePower);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16) || (v7 = sub_100438F74(v4, v5), (v8 & 1) == 0))
  {
    v20 = 0u;
    v21 = 0u;
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v3);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v3 + 56) + 32 * v7, (uint64_t)&v20);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_10:
    sub_10001BE90((uint64_t)&v20, (uint64_t *)&unk_100828420);
    return 0.0;
  }
  v9 = sub_10001E724(0, &qword_1008274C0, HKQuantity_ptr);
  if ((swift_dynamicCast(&v19, &v20, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    return 0.0;
  v10 = v19;
  v11 = (void *)objc_opt_self(HKUnit);
  v12 = objc_msgSend(v11, "wattUnit");
  v13 = objc_msgSend(v10, "isCompatibleWithUnit:", v12);

  if (v13)
  {
    v14 = objc_msgSend(v11, "wattUnit");
  }
  else
  {
    v17 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "unitFromString:", v17);

  }
  objc_msgSend(v10, "doubleValueForUnit:", v14);
  v15 = v18;

  return v15;
}

_QWORD *sub_1005AA694()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  uint64_t v22;
  _QWORD *v23;

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v23 = _swiftEmptyArrayStorage;
  v12 = objc_msgSend(v1, "endDate");
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  v13 = v12;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828370);
    return v23;
  }
  v14(v11, v4, v5);
  v15 = objc_msgSend(v1, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v15);

  v16 = objc_msgSend(v1, "workoutEvents");
  v17 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  sub_10032B950((uint64_t)v9, v11, v18, (uint64_t)&v23);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v20(v9, v5, v19);
  ((void (*)(char *, uint64_t))v20)(v11, v5);
  return v23;
}

uint64_t sub_1005AA934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t *v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  _BYTE v24[24];

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v24[-v11 - 8];
  v23 = type metadata accessor for DateInterval(0);
  v13 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = (unint64_t *)(a3 + 16);
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v17(v12, a1, v6);
  v17(v10, a2, v6);
  DateInterval.init(start:end:)(v12, v10);
  swift_beginAccess(a3 + 16, v24, 33, 0);
  v18 = *(_QWORD *)(a3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *(_QWORD *)(a3 + 16) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_10013F868(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    *v16 = v18;
  }
  v21 = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    v18 = sub_10013F868(v20 > 1, v21 + 1, 1, v18);
    *v16 = v18;
  }
  *(_QWORD *)(v18 + 16) = v21 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v21, v15, v23);
  return swift_endAccess(v24);
}

double sub_1005AAB30()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v1 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v19 - v10;
  v12 = objc_msgSend(v0, "endDate", v9);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  v13 = v12;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v14(v3, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10001BE90((uint64_t)v3, (uint64_t *)&unk_100828370);
    return 0.0;
  }
  v14(v11, v3, v4);
  v15 = objc_msgSend(v0, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v15);

  v16 = Date.timeIntervalSince(_:)(v7);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  v17(v11, v4);
  return v16;
}

id sub_1005AAD98()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  id v10;
  id v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  Class isa;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  _BYTE v40[56];

  v1 = v0;
  v2 = objc_msgSend(v0, "workoutConfiguration");
  v3 = objc_msgSend(v2, "activityType");

  v4 = objc_msgSend(v1, "workoutConfiguration");
  v5 = objc_msgSend(v4, "locationType");

  v6 = v5 == (id)2;
  v7 = sub_100047110(&qword_10083C090);
  inited = swift_initStackObject(v7, v40);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(HKMetadataKeySwimmingLocationType);
  *(_QWORD *)(inited + 40) = v9;
  v10 = objc_msgSend(v1, "workoutConfiguration");
  v11 = objc_msgSend(v10, "swimmingLocationType");

  *(_QWORD *)(inited + 48) = v11;
  v19 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100436D54((CHWorkoutDetailHeartRateTableViewCell *)inited, v12, v13, v14, v15, v16, v17, v18);
  sub_1002F8730((uint64_t)v19);
  v21 = v20;
  swift_bridgeObjectRelease(v19, v22, v23, v24, v25, v26, v27, v28);
  v29 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21, v31, v32, v33, v34, v35, v36, v37);
  v38 = objc_msgSend(v29, "initWithActivityTypeIdentifier:isIndoor:metadata:", v3, v6, isa);

  return v38;
}

double sub_1005AAF1C()
{
  return sub_1005AB46C(&_HKPrivateMetadataKeyWorkoutAverageCadence, (SEL *)&selRef__countPerMinuteUnit);
}

uint64_t sub_1005AB088()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  unint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  unint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (!v2)
  {
    v59 = 0u;
    v60 = 0u;
    goto LABEL_9;
  }
  v3 = v2;
  v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(HKMetadataKeyElevationAscended);
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)v6;
  if (!*(_QWORD *)v4->cellPadding || (v14 = sub_100438F74(v5, v6), (v6 & 1) == 0))
  {
    v59 = 0u;
    v60 = 0u;
    swift_bridgeObjectRelease(v13, (SEL)v6, v7, v8, v9, v10, v11, v12);
    swift_bridgeObjectRelease(v4, v31, v32, v33, v34, v35, v36, v37);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)v4[1].cellInset + 32 * v14, (uint64_t)&v59);
  swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  swift_bridgeObjectRelease(v4, v22, v23, v24, v25, v26, v27, v28);
  if (!*((_QWORD *)&v60 + 1))
  {
LABEL_9:
    sub_10001BE90((uint64_t)&v59, (uint64_t *)&unk_100828420);
    goto LABEL_10;
  }
  v29 = sub_10001E724(0, &qword_1008274C0, HKQuantity_ptr);
  if ((swift_dynamicCast(&v61, &v59, (char *)&type metadata for Any + 8, v29, 6) & 1) != 0)
    return v61;
LABEL_10:
  v38 = objc_msgSend(v1, "metadata", v59, (_QWORD)v60);
  if (!v38)
  {
    v59 = 0u;
    v60 = 0u;
LABEL_20:
    sub_10001BE90((uint64_t)&v59, (uint64_t *)&unk_100828420);
    return 0;
  }
  v39 = v38;
  v40 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutElevationAscended);
  v49 = (CHWorkoutDetailHeartRateTableViewCell *)v42;
  if (*(_QWORD *)v40->cellPadding && (v50 = sub_100438F74(v41, v42), (v42 & 1) != 0))
  {
    sub_10003E9BC(*(_QWORD *)v40[1].cellInset + 32 * v50, (uint64_t)&v59);
  }
  else
  {
    v59 = 0u;
    v60 = 0u;
  }
  swift_bridgeObjectRelease(v49, (SEL)v42, v43, v44, v45, v46, v47, v48);
  swift_bridgeObjectRelease(v40, v51, v52, v53, v54, v55, v56, v57);
  if (!*((_QWORD *)&v60 + 1))
    goto LABEL_20;
  v58 = sub_10001E724(0, &qword_1008274C0, HKQuantity_ptr);
  if (swift_dynamicCast(&v61, &v59, (char *)&type metadata for Any + 8, v58, 6))
    return v61;
  else
    return 0;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005AB2E8(void *a1)
{
  void *v1;
  unsigned int v2;
  Class isa;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v2 = objc_msgSend(a1, "_isMetricDistance");
  isa = (Class)objc_msgSend(v1, "workoutEvents");
  if (!isa)
  {
    v4 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
    v5 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  }
  if (v2)
    v13 = 1;
  else
    v13 = 2;
  v14 = (id)FISplitsForMeasuringSystemIdentifier(isa, v13);

  v15 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
  v16 = (CHWorkoutDetailHeartRateTableViewCell *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  v17 = sub_1005AB9EC((uint64_t)v16);
  swift_bridgeObjectRelease(v16, v18, v19, v20, v21, v22, v23, v24);
  return v17;
}

double sub_1005AB458()
{
  return sub_1005AB46C(&_HKPrivateMetadataKeyWorkoutStepCount, (SEL *)&selRef_countUnit);
}

double sub_1005AB46C(_QWORD *a1, SEL *a2)
{
  void *v2;
  id v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  unint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  double v35;
  double v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v45;
  __int128 v46;
  __int128 v47;

  v5 = objc_msgSend(v2, "metadata");
  if (!v5)
  {
    v46 = 0u;
    v47 = 0u;
    goto LABEL_9;
  }
  v6 = v5;
  v7 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v16 = (CHWorkoutDetailHeartRateTableViewCell *)v9;
  if (!*(_QWORD *)v7->cellPadding || (v17 = sub_100438F74(v8, v9), (v9 & 1) == 0))
  {
    v46 = 0u;
    v47 = 0u;
    swift_bridgeObjectRelease(v16, (SEL)v9, v10, v11, v12, v13, v14, v15);
    swift_bridgeObjectRelease(v7, v37, v38, v39, v40, v41, v42, v43);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)v7[1].cellInset + 32 * v17, (uint64_t)&v46);
  swift_bridgeObjectRelease(v16, v18, v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRelease(v7, v25, v26, v27, v28, v29, v30, v31);
  if (!*((_QWORD *)&v47 + 1))
  {
LABEL_9:
    sub_10001BE90((uint64_t)&v46, (uint64_t *)&unk_100828420);
    return 0.0;
  }
  v32 = sub_10001E724(0, &qword_1008274C0, HKQuantity_ptr);
  if ((swift_dynamicCast(&v45, &v46, (char *)&type metadata for Any + 8, v32, 6) & 1) == 0)
    return 0.0;
  v33 = v45;
  v34 = objc_msgSend((id)objc_opt_self(HKUnit), *a2);
  objc_msgSend(v33, "doubleValueForUnit:", v34);
  v36 = v35;

  return v36;
}

void sub_1005AB63C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  unint64_t v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  unint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  double v69;
  double v70;
  id v71;
  double v72;
  double v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  Class isa;
  __int128 v78;
  __int128 v79;
  void *v80;

  v4 = sub_100047110((uint64_t *)&unk_100827440);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = objc_msgSend(*a1, "metadata", v5);
  if (!v9)
  {
    v78 = 0u;
    v79 = 0u;
    goto LABEL_12;
  }
  v10 = v9;
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(FIPrivateMetadataKeySplitActiveDurationQuantity);
  v20 = (CHWorkoutDetailHeartRateTableViewCell *)v13;
  if (!*(_QWORD *)v11->cellPadding || (v21 = sub_100438F74(v12, v13), (v13 & 1) == 0))
  {
    v78 = 0u;
    v79 = 0u;
    swift_bridgeObjectRelease(v20, (SEL)v13, v14, v15, v16, v17, v18, v19);
    swift_bridgeObjectRelease(v11, v51, v52, v53, v54, v55, v56, v57);
    goto LABEL_12;
  }
  sub_10003E9BC(*(_QWORD *)v11[1].cellInset + 32 * v21, (uint64_t)&v78);
  swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
  swift_bridgeObjectRelease(v11, v29, v30, v31, v32, v33, v34, v35);
  if (!*((_QWORD *)&v79 + 1))
  {
LABEL_12:
    sub_10001BE90((uint64_t)&v78, (uint64_t *)&unk_100828420);
    goto LABEL_13;
  }
  v36 = sub_10001E724(0, &qword_1008274C0, HKQuantity_ptr);
  if ((swift_dynamicCast(&v80, &v78, (char *)&type metadata for Any + 8, v36, 6) & 1) == 0)
  {
LABEL_13:
    v58 = 0;
    goto LABEL_14;
  }
  v37 = v80;
  v38 = objc_msgSend(v8, "metadata");
  if (!v38)
  {
    v78 = 0u;
    v79 = 0u;
LABEL_22:

    goto LABEL_12;
  }
  v39 = v38;
  v40 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(FIPrivateMetadataKeySplitDistanceQuantity);
  v49 = (CHWorkoutDetailHeartRateTableViewCell *)v42;
  if (*(_QWORD *)v40->cellPadding && (v50 = sub_100438F74(v41, v42), (v42 & 1) != 0))
  {
    sub_10003E9BC(*(_QWORD *)v40[1].cellInset + 32 * v50, (uint64_t)&v78);
  }
  else
  {
    v78 = 0u;
    v79 = 0u;
  }
  swift_bridgeObjectRelease(v49, (SEL)v42, v43, v44, v45, v46, v47, v48);
  swift_bridgeObjectRelease(v40, v59, v60, v61, v62, v63, v64, v65);
  if (!*((_QWORD *)&v79 + 1))
    goto LABEL_22;
  if ((swift_dynamicCast(&v80, &v78, (char *)&type metadata for Any + 8, v36, 6) & 1) == 0)
  {

    goto LABEL_13;
  }
  v66 = v80;
  v67 = (void *)objc_opt_self(HKUnit);
  v68 = objc_msgSend(v67, "meterUnit");
  objc_msgSend(v66, "doubleValueForUnit:", v68);
  v70 = v69;

  v71 = objc_msgSend(v67, "secondUnit");
  objc_msgSend(v37, "doubleValueForUnit:", v71);
  v73 = v72;

  v74 = objc_msgSend(v8, "dateInterval");
  static DateInterval._unconditionallyBridgeFromObjectiveC(_:)(v74);

  v75 = type metadata accessor for DateInterval(0);
  v76 = *(_QWORD *)(v75 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v7, 0, 1, v75);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v7, 1, v75) != 1)
  {
    isa = DateInterval._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v7, v75);
  }
  v58 = objc_msgSend(objc_allocWithZone((Class)FIUIWorkoutSplit), "initWithDistance:duration:dateInterval:", isa, v70, v73);

LABEL_14:
  *a2 = v58;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005AB9EC(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t i;
  uint64_t v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;

  v30 = (unint64_t)&_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v27))
  {
    for (i = 4; ; ++i)
    {
      v19 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
          : *(id *)(a1 + 8 * i);
      v20 = v19;
      v21 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v29 = v19;
      sub_1005AB63C(&v29, &v28);

      v23 = v28;
      if (v28)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v25 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v11);
      }
      if (v21 == v2)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v12, v13, v14, v15, v16, v17, v18);
        return (CHWorkoutDetailHeartRateTableViewCell *)v30;
      }
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v3, v4, v5, v6, v7, v8, v9);
  return &_swiftEmptyArrayStorage;
}

uint64_t *sub_1005ABB70(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Calendar(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = v16;
    v17 = v15;
    swift_bridgeObjectRetain(v16);
  }
  return v7;
}

uint64_t sub_1005ABC38(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7]));
}

uint64_t *sub_1005ABCA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Calendar(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(void **)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
  v15 = *(uint64_t *)((char *)a2 + v13);
  *(uint64_t *)((char *)a1 + v13) = v15;
  v16 = v14;
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t *sub_1005ABD40(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  v16 = a3[7];
  v17 = *(uint64_t *)((char *)a2 + v16);
  v18 = *(uint64_t *)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  return a1;
}

_QWORD *sub_1005ABDF0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

uint64_t *sub_1005ABE70(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)((char *)a1 + v11);
  *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);

  v13 = a3[7];
  v14 = *(uint64_t *)((char *)a1 + v13);
  *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_1005ABF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005ABF18);
}

uint64_t sub_1005ABF18(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Calendar(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1005ABF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005ABFA0);
}

char *sub_1005ABFA0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Calendar(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDailyGoalChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C0F0;
  if (!qword_10083C0F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityDailyGoalChartView);
  return result;
}

uint64_t sub_1005AC050(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Calendar(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1005AC0E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BCDE8, 1);
}

uint64_t sub_1005AC0F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100047110(&qword_10083C218);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100825E68);
  sub_100028384(&qword_100825E60, &qword_100825E68, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v6, *a1, v7);
  v9 = type metadata accessor for AxisTick(0);
  v10 = &v6[*(int *)(v4 + 48)];
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))(v10, a1[1], v9);
  sub_1005AE9C4();
  v12 = (uint64_t)&v6[*(int *)(v4 + 64)];
  sub_100021CC0(a1[2], v12, &qword_100825E78);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v4 + 48), v10, v9);
  return sub_100045AD4(v12, a2 + *(int *)(v4 + 64), &qword_100825E78);
}

uint64_t sub_1005AC248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_100047110(&qword_10083C210);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005AED44((unint64_t *)&qword_100826BB8, &qword_100826BC0, &qword_100826BC8, &qword_100826BD0);
  sub_100021CC0(*a1, (uint64_t)v6, &qword_100826BC0);
  v7 = type metadata accessor for AxisGridLine(0);
  v8 = &v6[*(int *)(v4 + 48)];
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, a1[1], v7);
  v10 = type metadata accessor for AxisTick(0);
  v11 = &v6[*(int *)(v4 + 64)];
  v12 = a1[2];
  v13 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, v12, v10);
  sub_100045AD4((uint64_t)v6, a2, &qword_100826BC0);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2 + *(int *)(v4 + 48), v8, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2 + *(int *)(v4 + 64), v11, v10);
}

uint64_t sub_1005AC398@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_100047110(&qword_10083C220);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005AED44((unint64_t *)&qword_10082FEB8, &qword_10082FEC0, &qword_10082FEC8, &qword_10082FED0);
  sub_100021CC0(*a1, (uint64_t)v6, &qword_10082FEC0);
  v7 = type metadata accessor for AxisGridLine(0);
  v8 = &v6[*(int *)(v4 + 48)];
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, a1[1], v7);
  v10 = type metadata accessor for AxisTick(0);
  v11 = &v6[*(int *)(v4 + 64)];
  v12 = a1[2];
  v13 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, v12, v10);
  sub_100045AD4((uint64_t)v6, a2, &qword_10082FEC0);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2 + *(int *)(v4 + 48), v8, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2 + *(int *)(v4 + 64), v11, v10);
}

uint64_t sub_1005AC4E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v3 = sub_100047110(&qword_10083C1E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10083C1B0);
  sub_100028384(&qword_10083C1A8, &qword_10083C1B0, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))(v5, *a1, v6);
  v8 = type metadata accessor for AxisGridLine(0);
  v9 = &v5[*(int *)(v3 + 48)];
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v9, a1[1], v8);
  v11 = type metadata accessor for AxisTick(0);
  v12 = &v5[*(int *)(v3 + 64)];
  v13 = a1[2];
  v14 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v13, v11);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v16 = v19;
  v15(v19, v5, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + *(int *)(v3 + 48), v9, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16 + *(int *)(v3 + 64), v12, v11);
}

double sub_1005AC650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double result;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;

  v2 = type metadata accessor for ActivityDailyGoalChartView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v16 = sub_1005AC78C(*(_QWORD *)(a1 + *(int *)(v5 + 28)));
  sub_1005AEB88(a1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1007AC378, v7 + v4, v6 | 7);
  sub_1005AEC70((uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  v9 = sub_100047110((uint64_t *)&unk_10082F7C0);
  v10 = sub_100047110(&qword_10083C158);
  v11 = sub_100028384(&qword_10083C1E8, (uint64_t *)&unk_10082F7C0, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_1005AE7CC();
  v13 = sub_1005AED00();
  *(_QWORD *)&result = ForEach<>.init(_:content:)(&v16, sub_1005AECB4, v8, v9, &type metadata for String, v10, v11, v12, v13).n128_u64[0];
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005AC78C(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  char **v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *result;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  char **v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  objc_class *v26;
  objc_class *v27;
  objc_class *v28;
  objc_class *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  Class *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;

  if ((unint64_t)a1 >> 62)
  {
LABEL_27:
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
    {
LABEL_3:
      v38 = type metadata accessor for ActivityDailyGoalChartView(0);
      v39 = *(id *)(v40 + *(int *)(v38 + 24));
      v10 = &_swiftEmptyArrayStorage;
      v11 = 4;
      v12 = &selRef_systemBlueColor;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a1);
        else
          v13 = (char *)*(id *)(a1 + 8 * v11);
        v14 = v13;
        v15 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType];
        v17 = *(id *)&v13[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
        result = (CHWorkoutDetailHeartRateTableViewCell *)objc_msgSend(v39, v12[81], v38);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v19 = result;
        v20 = objc_msgSend(result, v12[81]);

        v21 = &selRef_minuteUnit;
        if ((unint64_t)(v16 - 1) < 2)
          goto LABEL_12;
        if (v16)
          break;
        v21 = &selRef_userActiveEnergyBurnedUnit;
        v22 = v20;
LABEL_13:
        v23 = objc_msgSend(v22, *v21);

        objc_msgSend(v17, "doubleValueForUnit:", v23);
        v25 = v24;

        if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) == 0)
          goto LABEL_24;
        if (v25 <= -9.22337204e18)
          goto LABEL_25;
        if (v25 >= 9.22337204e18)
          goto LABEL_26;
        sub_100358738((uint64_t)v14);
        v27 = v26;
        v29 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = sub_100141AAC(0, *(_QWORD *)v10->cellPadding + 1, 1, v10, v30, v31, v32, v33);
        v35 = *(_QWORD *)v10->cellPadding;
        v34 = *(_QWORD *)v10->cellInset;
        if (v35 >= v34 >> 1)
          v10 = sub_100141AAC((CHWorkoutDetailHeartRateTableViewCell *)(v34 > 1), v35 + 1, 1, v10, v30, v31, v32, v33);
        *(_QWORD *)v10->cellPadding = v35 + 1;
        v36 = &v10->super.super.super.super.isa + 3 * v35;
        v36[4] = v27;
        v36[5] = v29;
        v36[6] = (Class)(uint64_t)v25;

        ++v11;
        v12 = &selRef_systemBlueColor;
        if (v15 == v2)
          goto LABEL_32;
      }
      v21 = &selRef_countUnit;
LABEL_12:
      v22 = (void *)objc_opt_self(HKUnit);
      goto LABEL_13;
    }
  }
  v10 = &_swiftEmptyArrayStorage;
LABEL_32:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v3, v4, v5, v6, v7, v8, v9);
  return v10;
}

uint64_t sub_1005ACA58@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  char *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  char v63;
  char *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t OpaqueTypeConformance2;
  uint64_t v94;
  __n128 v95;
  void (*v96)(uint64_t, char *, uint64_t);
  char *v97;
  char *v98;
  uint64_t v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  char v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  CHWorkoutDetailHeartRateTableViewCell *v104;
  uint64_t v105;
  SEL v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  SEL v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  char v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  CHWorkoutDetailHeartRateTableViewCell *v132;
  SEL v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  SEL v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  SEL v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  uint64_t result;
  CHWorkoutDetailHeartRateTableViewCell *v155;
  char v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  CHWorkoutDetailHeartRateTableViewCell *v159;
  char *v160;
  SEL v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  SEL v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, char *, uint64_t);
  char *v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  char *v188;
  uint64_t v189;
  void (*v190)(char *, char *, uint64_t);
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  void (*v195)(char *, uint64_t);
  void (*v196)(char *, uint64_t);
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(uint64_t, char *, uint64_t);
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t *v223;
  uint64_t v224;
  char *v225;
  _QWORD *v226;
  _QWORD v227[4];
  uint64_t v228;
  CHWorkoutDetailHeartRateTableViewCell *v229;
  void *v230;
  uint64_t v231;

  v223 = a2;
  v210 = a3;
  v209 = sub_100047110(&qword_10083C1F8);
  __chkstk_darwin(v209);
  v208 = (char *)&v197 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for RuleMark(0);
  v199 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v198 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100047110(&qword_100824CC8);
  v202 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v197 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_100047110(&qword_100824DA8);
  v205 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v206 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v204 = (char *)&v197 - v9;
  v216 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v216);
  v11 = (_OWORD *)((char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100047110(&qword_10083C200);
  __chkstk_darwin(v12);
  v222 = (char *)&v197 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100826C30);
  __chkstk_darwin(v14);
  v219 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v211 = (char *)&v197 - v17;
  v213 = type metadata accessor for BarMark(0);
  v214 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v19 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_10083C160);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v20 - 8);
  v217 = v20;
  v218 = v21;
  __chkstk_darwin(v20);
  v212 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_100047110(&qword_10083C208);
  v226 = *(_QWORD **)(v224 - 8);
  __chkstk_darwin(v224);
  v24 = (char *)&v197 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v225 = (char *)&v197 - v26;
  v27 = (CHWorkoutDetailHeartRateTableViewCell *)a1[1];
  v215 = *a1;
  v28 = v215;
  v220 = a1[2];
  v29 = v220;
  v30 = LocalizedStringKey.init(stringLiteral:)(0x7961646B656557, 0xE700000000000000);
  v32 = v31;
  LOBYTE(a1) = v33;
  v35 = v34;
  v228 = v28;
  v229 = v27;
  swift_bridgeObjectRetain(v27);
  v36 = v211;
  static PlottableValue.value(_:_:)(v30, v32, a1 & 1, v35, &v228, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v27, v37, v38, v39, v40, v41, v42, v43);
  swift_bridgeObjectRelease(v35, v44, v45, v46, v47, v48, v49, v50);
  swift_bridgeObjectRelease(v32, v51, v52, v53, v54, v55, v56, v57);
  v58 = LocalizedStringKey.init(stringLiteral:)(1818324807, 0xE400000000000000);
  v60 = v59;
  v62 = v61;
  v228 = v29;
  v64 = v222;
  static PlottableValue.value(_:_:)(v58, v59, v63 & 1, v61, &v228, &type metadata for Int, &protocol witness table for Int);
  swift_bridgeObjectRelease(v62, v65, v66, v67, v68, v69, v70, v71);
  swift_bridgeObjectRelease(v60, v72, v73, v74, v75, v76, v77, v78);
  BarMark.init<A, B>(x:y:width:height:stacking:)(v36, v64, 0x401C000000000000, 0, 0, 3, 0, &type metadata for String, &type metadata for Int, &protocol witness table for String, &protocol witness table for Int);
  v79 = v216;
  v80 = (char *)v11 + *(int *)(v216 + 20);
  v81 = enum case for RoundedCornerStyle.continuous(_:);
  v82 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v80, v81, v82);
  __asm { FMOV            V0.2D, #5.0 }
  *v11 = _Q0;
  v88 = sub_1000083D8(&qword_10083C168, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
  v89 = v212;
  v90 = v213;
  ChartContent.clipShape<A>(_:style:)(v11, 256, v213, v79, &protocol witness table for BarMark, v88);
  sub_1001D2ACC((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v214 + 8))(v19, v90);
  v91 = Color.gradient.getter(*v223);
  v227[0] = v91;
  v228 = v90;
  v229 = (CHWorkoutDetailHeartRateTableViewCell *)v79;
  v92 = v219;
  v230 = &protocol witness table for BarMark;
  v231 = v88;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v228, &opaque type descriptor for <<opaque return type of ChartContent.clipShape<A>(_:style:)>>, 1);
  v94 = v217;
  ChartContent.foregroundStyle<A>(_:)(v227, v217, &type metadata for AnyGradient, OpaqueTypeConformance2, &protocol witness table for AnyGradient);
  v95 = swift_release(v91);
  (*((void (**)(char *, uint64_t, __n128))v218 + 1))(v89, v94, v95);
  v96 = (void (*)(uint64_t, char *, uint64_t))v226[4];
  v221 = v24;
  v97 = v24;
  v98 = v36;
  v218 = v96;
  v96((uint64_t)v225, v97, v224);
  v99 = LocalizedStringKey.init(stringLiteral:)(0x7961646B656557, 0xE700000000000000);
  v101 = v100;
  LOBYTE(v91) = v102;
  v104 = v103;
  v105 = v215;
  v228 = v215;
  v229 = v27;
  swift_bridgeObjectRetain(v27);
  static PlottableValue.value(_:_:)(v99, v101, v91 & 1, v104, &v228, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v27, v106, v107, v108, v109, v110, v111, v112);
  swift_bridgeObjectRelease(v104, v113, v114, v115, v116, v117, v118, v119);
  swift_bridgeObjectRelease(v101, v120, v121, v122, v123, v124, v125, v126);
  v127 = LocalizedStringKey.init(stringLiteral:)(0x7961646B656557, 0xE700000000000000);
  v129 = v128;
  LOBYTE(v91) = v130;
  v132 = v131;
  v228 = v105;
  v229 = v27;
  swift_bridgeObjectRetain(v27);
  static PlottableValue.value(_:_:)(v127, v129, v91 & 1, v132, &v228, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v27, v133, v134, v135, v136, v137, v138, v139);
  swift_bridgeObjectRelease(v132, v140, v141, v142, v143, v144, v145, v146);
  swift_bridgeObjectRelease(v129, v147, v148, v149, v150, v151, v152, v153);
  result = LocalizedStringKey.init(stringLiteral:)(1818324807, 0xE400000000000000);
  if (__OFADD__(v220, 1))
  {
    __break(1u);
  }
  else
  {
    v158 = v155;
    v159 = v157;
    v228 = v220 + 1;
    v160 = v222;
    static PlottableValue.value(_:_:)(result, v155, v156 & 1, v157, &v228, &type metadata for Int, &protocol witness table for Int);
    swift_bridgeObjectRelease(v159, v161, v162, v163, v164, v165, v166, v167);
    swift_bridgeObjectRelease(v158, v168, v169, v170, v171, v172, v173, v174);
    v175 = v198;
    RuleMark.init<A, B>(xStart:xEnd:y:)(v98, v92, v160, &type metadata for String, &type metadata for Int, &protocol witness table for String, &protocol witness table for Int);
    v228 = *v223;
    v176 = v201;
    v177 = v200;
    ChartContent.foregroundStyle<A>(_:)(&v228, v200, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v175, v177);
    v178 = sub_100047110(&qword_100821510);
    v179 = swift_allocObject(v178, 40, 7);
    *(_OWORD *)(v179 + 16) = xmmword_100622F90;
    *(_QWORD *)(v179 + 32) = 0x4014000000000000;
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v228, 0, 0, v179, 1.0, 10.0, 0.0);
    v227[0] = v177;
    v227[1] = &type metadata for Color;
    v227[2] = &protocol witness table for RuleMark;
    v227[3] = &protocol witness table for Color;
    v180 = swift_getOpaqueTypeConformance2(v227, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v181 = v206;
    v182 = v203;
    ChartContent.lineStyle(_:)(&v228, v203, v180);
    sub_1001B57E8((uint64_t)&v228);
    (*(void (**)(char *, uint64_t))(v202 + 8))(v176, v182);
    v183 = v205;
    v184 = *(void (**)(char *, char *, uint64_t))(v205 + 32);
    v185 = v204;
    v186 = v207;
    v184(v204, v181, v207);
    v187 = (void (*)(char *, char *, uint64_t))v226[2];
    v188 = v221;
    v189 = v224;
    v187(v221, v225, v224);
    v190 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
    v190(v181, v185, v186);
    v191 = v208;
    v187(v208, v188, v189);
    v192 = v209;
    v193 = &v191[*(int *)(v209 + 48)];
    v190(v193, v181, v186);
    v194 = v210;
    v218(v210, v191, v189);
    v184((char *)(v194 + *(int *)(v192 + 48)), v193, v186);
    v195 = *(void (**)(char *, uint64_t))(v183 + 8);
    v195(v185, v186);
    v196 = (void (*)(char *, uint64_t))v226[1];
    v196(v225, v189);
    v195(v181, v186);
    return ((uint64_t (*)(char *, uint64_t))v196)(v221, v189);
  }
  return result;
}

uint64_t sub_1005AD3E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v0 = type metadata accessor for AxisMarkValues(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static AxisMarkPreset.automatic.getter(v9);
  v11 = static AxisMarkPosition.automatic.getter(v10);
  static AxisMarkValues.automatic.getter(v11);
  v12 = sub_100047110(&qword_10083C1D0);
  v13 = sub_1005AEAE8();
  return AxisMarks.init(preset:position:values:content:)(v8, v5, v2, sub_1005AD500, 0, v12, v13);
}

uint64_t sub_1005AD500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];
  uint64_t v64;
  _QWORD v65[3];
  _OWORD v66[2];
  uint64_t v67;

  v62 = a2;
  v3 = type metadata accessor for AxisTick.Length(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AxisTick(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v59 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v56 = (char *)&v53 - v9;
  v10 = type metadata accessor for AxisGridLine(0);
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_10083C1B0);
  v23 = *(_QWORD *)(v22 - 8);
  v53 = v22;
  v54 = v23;
  __chkstk_darwin(v22);
  v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v53 - v27;
  v64 = a1;
  v30 = static AxisValueLabelCollisionResolution.automatic.getter(v29);
  static AxisValueLabelOrientation.automatic.getter(v30);
  v31 = sub_100047110(&qword_10083C1C0);
  v32 = sub_1005AEA28();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)(2, 0, 0, 1, 0, 0, 1, v21, 2, v18, 0, 1, 0, 1, sub_1005AEB80, v63, v31, v32);
  v67 = 0;
  memset(v66, 0, sizeof(v66));
  AxisGridLine.init(centered:stroke:)(2, v66);
  static AxisTick.Length.automatic.getter(v33);
  v34 = v56;
  AxisTick.init(centered:length:stroke:)(2, v5, v66);
  v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v55 = v25;
  v35(v25, v28, v22);
  v65[0] = v25;
  v36 = v57;
  v37 = v12;
  v38 = v12;
  v39 = v15;
  v40 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v38, v15, v58);
  v65[1] = v37;
  v42 = v59;
  v41 = v60;
  v43 = v34;
  v44 = v34;
  v45 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v43, v61);
  v65[2] = v42;
  sub_1005AC4E8(v65, v62);
  v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  v47 = v45;
  v46(v44, v45);
  v48 = *(void (**)(char *, uint64_t))(v36 + 8);
  v48(v39, v40);
  v49 = *(void (**)(char *, uint64_t))(v54 + 8);
  v50 = v28;
  v51 = v53;
  v49(v50, v53);
  v46(v42, v47);
  v48(v37, v40);
  return ((uint64_t (*)(char *, uint64_t))v49)(v55, v51);
}

uint64_t sub_1005AD888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  void (*v25)(char *, _QWORD, uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;

  v54 = sub_100047110(&qword_100825FB8);
  __chkstk_darwin(v54);
  v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - v5;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - v12;
  v55 = sub_100047110(&qword_100825FC0);
  __chkstk_darwin(v55);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v53 = (uint64_t)&v50 - v17;
  v18 = sub_100047110(&qword_100825FC8);
  v56 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)(&type metadata for String, &type metadata for String, &protocol witness table for String);
  if (!v59)
  {
    v49 = 1;
    v48 = v56;
    v47 = v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(a1, v49, 1, v47);
  }
  v21 = sub_100038CA0();
  v58 = Text.init<A>(_:)(&v58, &type metadata for String, v21);
  v59 = v22;
  v60 = v23 & 1;
  v61 = v24;
  v25 = (void (*)(char *, _QWORD, uint64_t))v8[13];
  v25(v13, enum case for DynamicTypeSize.xSmall(_:), v7);
  v25(v10, enum case for DynamicTypeSize.xxxLarge(_:), v7);
  v26 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v13, v10, v7, v26);
  if ((result & 1) != 0)
  {
    v51 = v20;
    v52 = a1;
    v28 = v54;
    v29 = &v6[*(int *)(v54 + 48)];
    v30 = (void (*)(char *, char *, uint64_t))v8[4];
    v30(v6, v13, v7);
    v30(v29, v10, v7);
    v31 = &v3[*(int *)(v28 + 48)];
    v32 = (void (*)(char *, char *, uint64_t))v8[2];
    v32(v3, v6, v7);
    v32(v31, v29, v7);
    v30(v15, v3, v7);
    v33 = (void (*)(char *, uint64_t))v8[1];
    v33(v31, v7);
    v34 = &v3[*(int *)(v28 + 48)];
    v30(v3, v6, v7);
    v30(v34, v29, v7);
    v35 = v55;
    v30(&v15[*(int *)(v55 + 36)], v34, v7);
    a1 = v52;
    v33(v3, v7);
    v36 = (uint64_t)v15;
    v37 = v53;
    sub_100045AD4(v36, v53, &qword_100825FC0);
    v38 = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v39 = v51;
    View.dynamicTypeSize<A>(_:)(v37, &type metadata for Text, v35, &protocol witness table for Text, v38);
    sub_10001BE90(v37, &qword_100825FC0);
    sub_1000E4458(v58, v59, v60);
    swift_bridgeObjectRelease(v61, v40, v41, v42, v43, v44, v45, v46);
    v48 = v56;
    v47 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(a1, v39, v57);
    v49 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(a1, v49, 1, v47);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005ADC60()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AxisMarkValues(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)(3, 0, 2, 2);
  v10 = static AxisMarkPreset.automatic.getter(v9);
  static AxisMarkPosition.automatic.getter(v10);
  v11 = sub_100047110(&qword_10083C198);
  v12 = sub_1005AE938();
  return AxisMarks.init(preset:position:values:content:)(v5, v2, v8, sub_1005ADD90, 0, v11, v12);
}

uint64_t sub_1005ADD90@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _BYTE v50[16];
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;

  v48 = a2;
  v47 = sub_100047110(&qword_10083C1B8);
  __chkstk_darwin(v47);
  v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100825E78);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v49 = (uint64_t)&v44 - v8;
  v9 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10083C1B0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - v23;
  v51 = a1;
  v26 = static AxisValueLabelCollisionResolution.automatic.getter(v25);
  static AxisValueLabelOrientation.automatic.getter(v26);
  v27 = sub_100047110(&qword_10083C1C0);
  v28 = sub_1005AEA28();
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)(2, 0, 0, 1, 0, 0, 1, v14, 2, v11, 0, 1, 0, 1, sub_1005AEA20, v50, v27, v28);
  v45 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
  v29 = v45(v24, v21, v15);
  if (AxisValue.index.getter(v29))
  {
    v30 = type metadata accessor for AxisGridLine(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v49, 1, 1, v30);
  }
  else
  {
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v52, 0, 0, &_swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
    v54[0] = v52[0];
    v54[1] = v52[1];
    v55 = v53;
    v31 = v49;
    AxisGridLine.init(centered:stroke:)(2, v54);
    v32 = type metadata accessor for AxisGridLine(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v33(v18, v24, v15);
  v44 = v24;
  v34 = v16;
  v35 = v18;
  v36 = v49;
  sub_100021CC0(v49, (uint64_t)v6, &qword_100825E78);
  sub_100028384(&qword_10083C1A8, &qword_10083C1B0, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
  v37 = v46;
  v33(v46, v35, v15);
  sub_1005AE9C4();
  v38 = (uint64_t)v6;
  v39 = v47;
  v40 = (uint64_t)&v37[*(int *)(v47 + 48)];
  sub_100021CC0(v38, v40, &qword_100825E78);
  v41 = v48;
  v45(v48, v37, v15);
  sub_100045AD4(v40, (uint64_t)&v41[*(int *)(v39 + 48)], &qword_100825E78);
  sub_10001BE90(v36, &qword_100825E78);
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v44, v15);
  sub_10001BE90(v38, &qword_100825E78);
  return ((uint64_t (*)(char *, uint64_t))v42)(v35, v15);
}

uint64_t sub_1005AE170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;

  v55 = sub_100047110(&qword_100825FB8);
  __chkstk_darwin(v55);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - v5;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - v12;
  v56 = sub_100047110(&qword_100825FC0);
  __chkstk_darwin(v56);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v54 = (uint64_t)&v51 - v17;
  v18 = sub_100047110(&qword_100825FC8);
  v57 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)(&type metadata for Int, &type metadata for Int, &protocol witness table for Int);
  if (v60 == 1)
  {
    v21 = 1;
    v23 = v57;
    v22 = v58;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1, v21, 1, v22);
  }
  v59 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v60 = v24;
  v25 = sub_100038CA0();
  v59 = Text.init<A>(_:)(&v59, &type metadata for String, v25);
  v60 = v26;
  v61 = v27 & 1;
  v62 = v28;
  v29 = (void (*)(char *, _QWORD, uint64_t))v8[13];
  v29(v13, enum case for DynamicTypeSize.xSmall(_:), v7);
  v29(v10, enum case for DynamicTypeSize.xxxLarge(_:), v7);
  v30 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v13, v10, v7, v30);
  if ((result & 1) != 0)
  {
    v52 = v20;
    v53 = a1;
    v32 = v55;
    v33 = &v6[*(int *)(v55 + 48)];
    v34 = (void (*)(char *, char *, uint64_t))v8[4];
    v34(v6, v13, v7);
    v34(v33, v10, v7);
    v35 = &v3[*(int *)(v32 + 48)];
    v36 = (void (*)(char *, char *, uint64_t))v8[2];
    v36(v3, v6, v7);
    v36(v35, v33, v7);
    v34(v15, v3, v7);
    v37 = (void (*)(char *, uint64_t))v8[1];
    v37(v35, v7);
    v38 = &v3[*(int *)(v32 + 48)];
    v34(v3, v6, v7);
    v34(v38, v33, v7);
    v39 = v56;
    v34(&v15[*(int *)(v56 + 36)], v38, v7);
    a1 = v53;
    v37(v3, v7);
    v40 = (uint64_t)v15;
    v41 = v54;
    sub_100045AD4(v40, v54, &qword_100825FC0);
    v42 = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v43 = v52;
    View.dynamicTypeSize<A>(_:)(v41, &type metadata for Text, v39, &protocol witness table for Text, v42);
    sub_10001BE90(v41, &qword_100825FC0);
    sub_1000E4458(v59, v60, v61);
    swift_bridgeObjectRelease(v62, v44, v45, v46, v47, v48, v49, v50);
    v23 = v57;
    v22 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(a1, v43, v58);
    v21 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1, v21, 1, v22);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005AE564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  _QWORD v19[2];
  _BYTE v20[16];
  uint64_t v21;
  _QWORD v22[4];

  v19[1] = a1;
  v2 = sub_100047110(&qword_10083C130);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10083C138);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v1;
  v10 = sub_100047110(&qword_10083C140);
  v11 = sub_1005AE768();
  Chart.init(content:)(sub_1005AE760, v20, v10, v11);
  v12 = sub_100047110(&qword_10083C170);
  v13 = sub_100028384(&qword_10083C178, &qword_10083C130, (uint64_t)&protocol conformance descriptor for Chart<A>);
  v14 = sub_100028384(&qword_10083C180, &qword_10083C170, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  View.chartXAxis<A>(content:)(sub_1005AD3E0, 0, v2, v12, v13, v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = sub_100047110(&qword_10083C188);
  v22[0] = v2;
  v22[1] = v12;
  v22[2] = v13;
  v22[3] = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v22, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  v17 = sub_100028384(&qword_10083C190, &qword_10083C188, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  View.chartYAxis<A>(content:)(sub_1005ADC60, 0, v6, v15, OpaqueTypeConformance2, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double sub_1005AE760()
{
  uint64_t v0;

  return sub_1005AC650(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1005AE768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C148;
  if (!qword_10083C148)
  {
    v1 = sub_100007050(&qword_10083C140);
    sub_1005AE7CC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C148);
  }
  return result;
}

unint64_t sub_1005AE7CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  result = qword_10083C150;
  if (!qword_10083C150)
  {
    v1 = sub_100007050(&qword_10083C158);
    v2 = sub_100007050(&qword_10083C160);
    v6 = type metadata accessor for BarMark(255);
    v7 = (void *)type metadata accessor for RoundedRectangle(255);
    v8 = &protocol witness table for BarMark;
    v9 = (void *)sub_1000083D8(&qword_10083C168, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.clipShape<A>(_:style:)>>, 1);
    v6 = v2;
    v7 = &type metadata for AnyGradient;
    v8 = (void *)OpaqueTypeConformance2;
    v9 = &protocol witness table for AnyGradient;
    v10 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v4 = sub_100007050(&qword_100824CC8);
    v6 = type metadata accessor for RuleMark(255);
    v7 = &type metadata for Color;
    v8 = &protocol witness table for RuleMark;
    v9 = &protocol witness table for Color;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v6 = v4;
    v7 = (void *)v5;
    v11 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C150);
  }
  return result;
}

unint64_t sub_1005AE938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C1A0;
  if (!qword_10083C1A0)
  {
    v1 = sub_100007050(&qword_10083C198);
    sub_100028384(&qword_10083C1A8, &qword_10083C1B0, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    sub_1005AE9C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C1A0);
  }
  return result;
}

unint64_t sub_1005AE9C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100825E70;
  if (!qword_100825E70)
  {
    v1 = sub_100007050(&qword_100825E78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100825E70);
  }
  return result;
}

uint64_t sub_1005AEA20@<X0>(uint64_t a1@<X8>)
{
  return sub_1005AE170(a1);
}

unint64_t sub_1005AEA28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10083C1C8;
  if (!qword_10083C1C8)
  {
    v1 = sub_100007050(&qword_10083C1C0);
    v2[0] = &type metadata for Text;
    v2[1] = sub_100007050(&qword_100825FC0);
    v2[2] = &protocol witness table for Text;
    v2[3] = sub_100028384(&qword_100825FD0, &qword_100825FC0, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10083C1C8);
  }
  return result;
}

unint64_t sub_1005AEAE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C1D8;
  if (!qword_10083C1D8)
  {
    v1 = sub_100007050(&qword_10083C1D0);
    sub_100028384(&qword_10083C1A8, &qword_10083C1B0, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C1D8);
  }
  return result;
}

uint64_t sub_1005AEB80@<X0>(uint64_t a1@<X8>)
{
  return sub_1005AD888(a1);
}

uint64_t sub_1005AEB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityDailyGoalChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005AEBCC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = (int *)type metadata accessor for ActivityDailyGoalChartView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v8 = v7 + v1[5];
  v9 = type metadata accessor for Calendar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[7]), v10, v11, v12, v13, v14, v15, v16);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005AEC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityDailyGoalChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005AECB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityDailyGoalChartView(0) - 8) + 80);
  return sub_1005ACA58(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

unint64_t sub_1005AED00()
{
  unint64_t result;

  result = qword_10083C1F0;
  if (!qword_10083C1F0)
  {
    result = swift_getWitnessTable(&unk_10062C9B4, &type metadata for DailyGoalChartPoint);
    atomic_store(result, (unint64_t *)&qword_10083C1F0);
  }
  return result;
}

uint64_t sub_1005AED44(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007050(a2);
    sub_100028384(a3, a4, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005AEDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100007050(&qword_10083C138);
  v1 = sub_100007050(&qword_10083C188);
  v5 = sub_100007050(&qword_10083C130);
  v6 = sub_100007050(&qword_10083C170);
  v7 = sub_100028384(&qword_10083C178, &qword_10083C130, (uint64_t)&protocol conformance descriptor for Chart<A>);
  v8 = sub_100028384(&qword_10083C180, &qword_10083C170, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  v3 = sub_100028384(&qword_10083C190, &qword_10083C188, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
}

id sub_1005AEEC8()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

  return v1;
}

id sub_1005AEF5C()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v1;
}

uint64_t *sub_1005AEFB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v4 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(uint64_t *)((char *)a2 + v16 + 24);
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
    v22 = a3[7];
    v23 = a3[8];
    v24 = *(uint64_t *)((char *)a2 + v22);
    *(uint64_t *)((char *)v4 + v22) = v24;
    v12 = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = v12;
    swift_bridgeObjectRetain(v24);
  }
  swift_retain(v12);
  return v4;
}

double sub_1005AF0FC(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  double result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)a1 + a2[5]));
  v13 = (_QWORD *)((char *)a1 + a2[6]);
  if (v13[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v13);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + a2[7]), v6, v7, v8, v9, v10, v11, v12);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t *sub_1005AF198(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[7];
  v21 = a3[8];
  v22 = *(uint64_t *)((char *)a2 + v20);
  *(uint64_t *)((char *)a1 + v20) = v22;
  v23 = *(uint64_t *)((char *)a2 + v21);
  *(uint64_t *)((char *)a1 + v21) = v23;
  swift_bridgeObjectRetain(v22);
  swift_retain(v23);
  return a1;
}

uint64_t *sub_1005AF2B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  sub_1000F1A58((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]));
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t *)((char *)a2 + v12 + 24);
  if (!*(uint64_t *)((char *)a1 + v12 + 24))
  {
    if (v15)
    {
      *((_QWORD *)v13 + 3) = v15;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
      goto LABEL_13;
    }
LABEL_12:
    v16 = *(_OWORD *)v14;
    v17 = *((_OWORD *)v14 + 1);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *(_OWORD *)v13 = v16;
    *((_OWORD *)v13 + 1) = v17;
    goto LABEL_13;
  }
  if (!v15)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v13);
    goto LABEL_12;
  }
  sub_1000F1A58(v13, v14);
LABEL_13:
  v18 = a3[7];
  v19 = *(uint64_t *)((char *)a2 + v18);
  v20 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v18);
  *(uint64_t *)((char *)a1 + v18) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
  v28 = a3[8];
  v29 = *(uint64_t *)((char *)a1 + v28);
  v30 = *(uint64_t *)((char *)a2 + v28);
  *(uint64_t *)((char *)a1 + v28) = v30;
  swift_retain(v30);
  swift_release(v29);
  return a1;
}

char *sub_1005AF42C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  v13 = &a1[v9];
  v14 = &a2[v9];
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  return a1;
}

char *sub_1005AF510(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v8]);
  *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
  v18 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v18;
  v19 = a3[6];
  v20 = &a1[v19];
  if (*(_QWORD *)&a1[v19 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v19]);
  v21 = *(_OWORD *)&a2[v19 + 16];
  *(_OWORD *)v20 = *(_OWORD *)&a2[v19];
  *((_OWORD *)v20 + 1) = v21;
  *((_QWORD *)v20 + 4) = *(_QWORD *)&a2[v19 + 32];
  v22 = a3[7];
  v23 = *(CHWorkoutDetailHeartRateTableViewCell **)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRelease(v23, v11, v12, v13, v14, v15, v16, v17);
  v24 = a3[8];
  v25 = *(_QWORD *)&a1[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  swift_release(v25);
  return a1;
}

uint64_t sub_1005AF644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005AF650);
}

uint64_t sub_1005AF650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005AF6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005AF6E0);
}

uint64_t sub_1005AF6E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TrendsStack(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C280;
  if (!qword_10083C280)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrendsStack);
  return result;
}

void sub_1005AF79C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "(";
    v4[2] = &unk_1006484E0;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_1006484F8;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1005AF830(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BCE38, 1);
}

uint64_t sub_1005AF840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  uint64_t v35;
  char v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  void (*v53)(char *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;

  v2 = v1;
  v56 = a1;
  v3 = type metadata accessor for TrendsStack(0);
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v48 - v12;
  v14 = sub_100047110(&qword_10083C2C8);
  __chkstk_darwin(v14);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100047110(&qword_10083C2D0);
  __chkstk_darwin(v55);
  v54 = (uint64_t)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static HorizontalAlignment.leading.getter(v18);
  sub_1003F6E18((uint64_t)v13);
  v52 = enum case for DynamicTypeSize.xLarge(_:);
  v53 = *(void (**)(char *))(v8 + 104);
  v53(v10);
  v51 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v20 = dispatch thunk of static Comparable.< infix(_:_:)(v10, v13, v7);
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v10, v7);
  v21(v13, v7);
  v22 = 0x4035000000000000;
  if ((v20 & 1) != 0)
    v22 = 0x4024000000000000;
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v22;
  v16[16] = 0;
  v48[1] = &v16[*(int *)(sub_100047110(&qword_10083C2D8) + 44)];
  v48[2] = v2;
  v23 = v2;
  v24 = *(_QWORD *)(v2 + *(int *)(v49 + 28));
  v58 = v24;
  sub_10004F8C8(v23, (uint64_t)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TrendsStack);
  v25 = *(unsigned __int8 *)(v50 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = swift_allocObject(&unk_1007AC3D8, v26 + v5, v25 | 7);
  sub_100047C88((uint64_t)v6, v27 + v26, type metadata accessor for TrendsStack);
  swift_bridgeObjectRetain(v24);
  v28 = sub_100047110(&qword_10083C2E0);
  v29 = sub_100047110(&qword_10083C2E8);
  v30 = sub_100028384(&qword_10083C2F0, &qword_10083C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  v31 = sub_100007050(&qword_10083C2F8);
  v32 = sub_1005B0C24();
  v57[0] = v31;
  v57[1] = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v57, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v34 = sub_1000083D8(&qword_10083C318, type metadata accessor for TrendListMetric, (uint64_t)&unk_100636130);
  v35 = ForEach<>.init(_:content:)(&v58, sub_1005B0BD8, v27, v28, &type metadata for String, v29, v30, OpaqueTypeConformance2, v34);
  v36 = static Edge.Set.top.getter(v35);
  sub_1003F6E18((uint64_t)v13);
  ((void (*)(char *, _QWORD, uint64_t))v53)(v10, v52, v7);
  LOBYTE(OpaqueTypeConformance2) = dispatch thunk of static Comparable.< infix(_:_:)(v10, v13, v7);
  v21(v10, v7);
  v21(v13, v7);
  v37 = 2.0;
  if ((OpaqueTypeConformance2 & 1) != 0)
    v37 = -2.0;
  v38 = EdgeInsets.init(_all:)(v37);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = v54;
  sub_100021CC0((uint64_t)v16, v54, &qword_10083C2C8);
  v46 = v45 + *(int *)(v55 + 36);
  *(_BYTE *)v46 = v36;
  *(double *)(v46 + 8) = v38;
  *(_QWORD *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v42;
  *(_QWORD *)(v46 + 32) = v44;
  *(_BYTE *)(v46 + 40) = 0;
  sub_10001BE90((uint64_t)v16, &qword_10083C2C8);
  return sub_100045AD4(v45, v56, &qword_10083C2D0);
}

uint64_t sub_1005AFC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a3;
  v5 = type metadata accessor for TrendsStack(0);
  v27 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin(v5);
  v7 = type metadata accessor for TrendListMetric(0);
  v26 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083C310);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10083C2F8);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v17 = sub_100047110(&qword_10083C320);
  sub_1005AFEB0(a2, a1, (uint64_t)&v12[*(int *)(v17 + 44)]);
  sub_100021CC0((uint64_t)v12, (uint64_t)v15, &qword_10083C310);
  v15[*(int *)(v13 + 36)] = 0;
  sub_10001BE90((uint64_t)v12, &qword_10083C310);
  sub_10004F8C8(a1, (uint64_t)v9, type metadata accessor for TrendListMetric);
  sub_10004F8C8(a2, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TrendsStack);
  v18 = *(unsigned __int8 *)(v26 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = *(unsigned __int8 *)(v27 + 80);
  v21 = (v8 + v20 + v19) & ~v20;
  v22 = swift_allocObject(&unk_1007AC400, v21 + v6, v18 | v20 | 7);
  sub_100047C88((uint64_t)v9, v22 + v19, type metadata accessor for TrendListMetric);
  sub_100047C88((uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for TrendsStack);
  v23 = sub_1005B0C24();
  View.onTapGesture(count:perform:)(1, sub_1005B0E18, v22, v13, v23);
  swift_release(v22);
  return sub_10001BE90((uint64_t)v15, &qword_10083C2F8);
}

uint64_t sub_1005AFEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[3];
  _BYTE v47[456];
  _BYTE v48[472];
  _QWORD v49[60];
  _QWORD v50[2];
  char v51;
  _BYTE v52[463];

  v41 = a2;
  v45 = a3;
  v4 = type metadata accessor for TrendArrowIndicatorViewRepresentable(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100047110(&qword_100829AB8);
  __chkstk_darwin(v42);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100047110(&qword_100829AC0);
  __chkstk_darwin(v44);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v43 = (uint64_t)&v41 - v12;
  v13 = type metadata accessor for TrendsStack(0);
  v14 = (_QWORD *)(a1 + *(int *)(v13 + 20));
  v15 = v14[3];
  v16 = v14[4];
  sub_100016804(v14, v15);
  LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16) & 1;
  v17 = *(_QWORD *)(a1 + *(int *)(v13 + 32));
  v18 = v41;
  sub_10004F8C8(v41, (uint64_t)v6, type metadata accessor for TrendListMetric);
  v6[*(int *)(v4 + 20)] = v15;
  *(_QWORD *)&v6[*(int *)(v4 + 24)] = v17;
  swift_retain(v17);
  v20 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(v46, 0x4042000000000000, 0, 0x4042000000000000, 0, v20, v21);
  sub_10004F8C8((uint64_t)v6, (uint64_t)v8, type metadata accessor for TrendArrowIndicatorViewRepresentable);
  v22 = &v8[*(int *)(v42 + 36)];
  v23 = v46[1];
  *(_OWORD *)v22 = v46[0];
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v46[2];
  v24 = sub_100011F54((uint64_t)v6, type metadata accessor for TrendArrowIndicatorViewRepresentable);
  LOBYTE(v17) = static Edge.Set.trailing.getter(v24);
  v25 = EdgeInsets.init(_all:)(8.0);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_100021CC0((uint64_t)v8, (uint64_t)v10, &qword_100829AB8);
  v32 = &v10[*(int *)(v44 + 36)];
  *v32 = v17;
  *((double *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_10001BE90((uint64_t)v8, &qword_100829AB8);
  v33 = v43;
  v34 = sub_100045AD4((uint64_t)v10, v43, &qword_100829AC0);
  v35 = static HorizontalAlignment.leading.getter(v34);
  sub_1005B022C(v18, a1, v47);
  v48[464] = 0;
  memcpy(&v48[7], v47, 0x1C8uLL);
  sub_100021CC0(v33, (uint64_t)v10, &qword_100829AC0);
  v36 = v45;
  sub_100021CC0((uint64_t)v10, v45, &qword_100829AC0);
  v37 = sub_100047110(&qword_10083C328);
  v38 = (void *)(v36 + *(int *)(v37 + 48));
  v49[0] = v35;
  v49[1] = 0;
  LOBYTE(v49[2]) = 0;
  memcpy((char *)&v49[2] + 1, v48, 0x1CFuLL);
  memcpy(v38, v49, 0x1E0uLL);
  v39 = v36 + *(int *)(v37 + 64);
  *(_QWORD *)v39 = 0;
  *(_BYTE *)(v39 + 8) = 0;
  sub_1005B0E78((uint64_t)v49);
  sub_10001BE90(v33, &qword_100829AC0);
  v50[0] = v35;
  v50[1] = 0;
  v51 = 0;
  memcpy(v52, v48, sizeof(v52));
  sub_1005B0F58((uint64_t)v50);
  return sub_10001BE90((uint64_t)v10, &qword_100829AC0);
}

uint64_t sub_1005B022C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  char v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  void (*v52)(_BYTE *, uint64_t);
  uint64_t v53;
  double v54;
  char v55;
  double v56;
  char v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  _BYTE v76[12];
  unsigned int v77;
  void (*v78)(_BYTE *);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t KeyPath;
  void *v87;
  __int128 v88;
  uint64_t v89;
  char v90;
  _OWORD v91[9];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char v95;
  _OWORD v96[9];
  __int128 v97;
  __int128 v98;
  unint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _OWORD v105[29];
  _OWORD v106[9];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  double v113;
  char v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  _OWORD v121[9];
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  char v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;

  v85 = a2;
  v87 = a3;
  v4 = type metadata accessor for DynamicTypeSize(0);
  v84 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v83 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v82 = &v76[-v7];
  v8 = type metadata accessor for AttributedString(0);
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  __chkstk_darwin(v8);
  v10 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v81 = (char *)a1;
  *(_QWORD *)&v105[0] = v11;
  *((_QWORD *)&v105[0] + 1) = v12;
  v13 = sub_100038CA0();
  swift_bridgeObjectRetain(v12);
  v14 = Text.init<A>(_:)(v105, &type metadata for String, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v22 = static Alignment.leading.getter(v21);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v105, 0.0, 1, 0.0, 1, v22, v23, v14, v16, v20, (uint64_t)v18);
  sub_1000E4458(v14, v16, v20);
  swift_bridgeObjectRelease(v18, v24, v25, v26, v27, v28, v29, v30);
  v144 = v105[5];
  v145 = v105[6];
  v146 = v105[7];
  v147 = v105[8];
  v140 = v105[1];
  v141 = v105[2];
  v142 = v105[3];
  v143 = v105[4];
  v139 = v105[0];
  KeyPath = swift_getKeyPath(&unk_100648560);
  *((_QWORD *)&v88 + 1) = static Font.callout.getter(v31);
  *(_QWORD *)&v88 = swift_getKeyPath(&unk_100648590);
  v89 = swift_getKeyPath(&unk_1006485C0);
  v138 = 0;
  v32 = type metadata accessor for TrendListMetric(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v79 + 16))(v10, a1 + *(int *)(v32 + 28), v80);
  v33 = Text.init(_:)(v10);
  v35 = v34;
  v37 = v36;
  LOBYTE(v18) = v38 & 1;
  v40 = static Alignment.leading.getter(v39);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v105, 0.0, 1, 0.0, 1, v40, v41, v33, v35, (char)v18, (uint64_t)v37);
  sub_1000E4458(v33, v35, (char)v18);
  swift_bridgeObjectRelease(v37, v42, v43, v44, v45, v46, v47, v48);
  v153 = v105[5];
  v154 = v105[6];
  v155 = v105[7];
  v156 = v105[8];
  v149 = v105[1];
  v150 = v105[2];
  v151 = v105[3];
  v152 = v105[4];
  v148 = v105[0];
  v80 = swift_getKeyPath(&unk_100648560);
  v79 = swift_getKeyPath(&unk_1006485C0);
  v49 = v82;
  sub_1003F6E18((uint64_t)v82);
  v77 = enum case for DynamicTypeSize.xLarge(_:);
  v51 = v83;
  v50 = v84;
  v78 = *(void (**)(_BYTE *))(v84 + 104);
  v78(v83);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v33) = dispatch thunk of static Comparable.< infix(_:_:)(v51, v49, v4);
  v52 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
  v52(v51, v4);
  v53 = ((uint64_t (*)(_BYTE *, uint64_t))v52)(v49, v4);
  if ((v33 & 1) != 0)
    v54 = 0.0;
  else
    v54 = -3.0;
  v134 = v153;
  v135 = v154;
  v136 = v155;
  v137 = v156;
  v131 = v150;
  v132 = v151;
  v133 = v152;
  v129 = v148;
  v130 = v149;
  v128 = 0;
  LODWORD(v84) = static Edge.Set.bottom.getter(v53);
  sub_1003F6E18((uint64_t)v49);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v78)(v51, v77, v4);
  v55 = dispatch thunk of static Comparable.< infix(_:_:)(v51, v49, v4);
  v52(v51, v4);
  v52(v49, v4);
  if ((v55 & 1) != 0)
    v56 = 0.0;
  else
    v56 = -3.0;
  v57 = v128;
  v58 = EdgeInsets.init(_all:)(v56);
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v90 = 0;
  sub_1004E4168(*v81);
  v66 = v65;
  v67 = *(id *)&v65[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  v68 = Color.init(uiColor:)(v67);
  v69 = v90;
  v91[6] = v145;
  v91[7] = v146;
  v91[8] = v147;
  v91[2] = v141;
  v91[3] = v142;
  v91[4] = v143;
  v91[5] = v144;
  v91[0] = v139;
  v91[1] = v140;
  v70 = KeyPath;
  *(_QWORD *)&v92 = KeyPath;
  *((_QWORD *)&v92 + 1) = 0x3FE999999999999ALL;
  v93 = v88;
  *(_QWORD *)&v94 = v89;
  *((_QWORD *)&v94 + 1) = 1;
  v96[6] = v135;
  v96[7] = v136;
  v96[8] = v137;
  v96[2] = v131;
  v96[3] = v132;
  v96[4] = v133;
  v96[5] = v134;
  v96[0] = v129;
  v96[1] = v130;
  v71 = v79;
  v72 = v80;
  *(_QWORD *)&v97 = v80;
  *((_QWORD *)&v97 + 1) = 0x3FE999999999999ALL;
  *(_QWORD *)&v98 = v79;
  *((_QWORD *)&v98 + 1) = 1;
  LOBYTE(v99) = v57;
  v100 = 0;
  *(double *)&v101 = v54;
  v73 = v84;
  BYTE8(v101) = v84;
  *(double *)&v102 = v58;
  *((_QWORD *)&v102 + 1) = v60;
  *(_QWORD *)&v103 = v62;
  *((_QWORD *)&v103 + 1) = v64;
  LOBYTE(v104) = v90;
  *((_QWORD *)&v104 + 1) = v68;
  v105[10] = v88;
  v105[11] = v94;
  v105[6] = v145;
  v105[7] = v146;
  v105[8] = v147;
  v105[9] = v92;
  v105[2] = v141;
  v105[3] = v142;
  v105[4] = v143;
  v105[5] = v144;
  v105[0] = v139;
  v105[1] = v140;
  *(_OWORD *)((char *)&v105[24] + 8) = v101;
  *(_OWORD *)((char *)&v105[25] + 8) = v102;
  *(_OWORD *)((char *)&v105[26] + 8) = v103;
  *(_OWORD *)((char *)&v105[27] + 8) = v104;
  *(_OWORD *)((char *)&v105[20] + 8) = v137;
  *(_OWORD *)((char *)&v105[21] + 8) = v97;
  *(_OWORD *)((char *)&v105[22] + 8) = v98;
  *(_OWORD *)((char *)&v105[23] + 8) = v99;
  *(_OWORD *)((char *)&v105[16] + 8) = v133;
  *(_OWORD *)((char *)&v105[17] + 8) = v134;
  *(_OWORD *)((char *)&v105[18] + 8) = v135;
  *(_OWORD *)((char *)&v105[19] + 8) = v136;
  *(_OWORD *)((char *)&v105[12] + 8) = v129;
  *(_OWORD *)((char *)&v105[13] + 8) = v130;
  *(_OWORD *)((char *)&v105[14] + 8) = v131;
  v74 = v138;
  v95 = v138;
  LOBYTE(v105[12]) = v138;
  *(_OWORD *)((char *)&v105[15] + 8) = v132;
  memcpy(v87, v105, 0x1C8uLL);
  v106[6] = v135;
  v106[7] = v136;
  v106[8] = v137;
  v106[2] = v131;
  v106[3] = v132;
  v106[4] = v133;
  v106[5] = v134;
  v106[0] = v129;
  v106[1] = v130;
  v107 = v72;
  v108 = 0x3FE999999999999ALL;
  v109 = v71;
  v110 = 1;
  v111 = v57;
  v112 = 0;
  v113 = v54;
  v114 = v73;
  v115 = v58;
  v116 = v60;
  v117 = v62;
  v118 = v64;
  v119 = v69;
  v120 = v68;
  sub_1005B1050((uint64_t)v91);
  sub_1005B10C8((uint64_t)v96);
  sub_1005B1138((uint64_t)v106);
  v121[6] = v145;
  v121[7] = v146;
  v121[8] = v147;
  v121[2] = v141;
  v121[3] = v142;
  v121[4] = v143;
  v121[5] = v144;
  v121[0] = v139;
  v121[1] = v140;
  v122 = v70;
  v123 = 0x3FE999999999999ALL;
  v124 = v88;
  v125 = v89;
  v126 = 1;
  v127 = v74;
  return sub_1005B11A8((uint64_t)v121);
}

uint64_t sub_1005B0964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v19[4];
  _QWORD v20[3];
  uint64_t v21;

  v4 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(a1, (uint64_t)v6, type metadata accessor for TrendListMetric);
  v7 = type metadata accessor for TrendListMetric(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v8 = 0;
  v8[8] = -1;
  v9 = type metadata accessor for TrendsStack(0);
  sub_100021CC0(a2 + *(int *)(v9 + 24), (uint64_t)v20, &qword_10081F600);
  if (v21)
  {
    v10 = sub_100016804(v20, v21);
    v11 = (_QWORD *)(a2 + *(int *)(v9 + 20));
    v19[3] = v4;
    v12 = sub_10004C480(v19);
    sub_10004F8C8((uint64_t)v6, (uint64_t)v12, type metadata accessor for TrendsActionContext);
    v13 = *v10;
    v14 = v11[3];
    v15 = v11[4];
    v16 = sub_100016804(v11, v14);
    sub_100561D50((uint64_t)v16, (uint64_t)v19, v13, v14, v15);
    sub_100011F54((uint64_t)v6, type metadata accessor for TrendsActionContext);
    sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
  }
  else
  {
    sub_100011F54((uint64_t)v6, type metadata accessor for TrendsActionContext);
    return sub_10001BE90((uint64_t)v20, &qword_10081F600);
  }
}

uint64_t sub_1005B0AF8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD *v16;

  v1 = (int *)type metadata accessor for TrendsStack(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)v6 + v1[5]));
  v16 = (_QWORD *)((char *)v6 + v1[6]);
  if (v16[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)((char *)v6 + v1[7]), v9, v10, v11, v12, v13, v14, v15);
  swift_release(*(_QWORD *)((char *)v6 + v1[8]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1005B0BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrendsStack(0) - 8) + 80);
  return sub_1005AFC5C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1005B0C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C300;
  if (!qword_10083C300)
  {
    v1 = sub_100007050(&qword_10083C2F8);
    sub_100028384(&qword_10083C308, &qword_10083C310, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C300);
  }
  return result;
}

uint64_t sub_1005B0CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;

  v1 = type metadata accessor for TrendListMetric(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for TrendsStack(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v0 + v4;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v4 + 16), v12, v13, v14, v15, v16, v17, v18);
  v19 = v0 + v4 + *(int *)(v1 + 28);
  v20 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v11 + *(int *)(v1 + 32) + 8), v21, v22, v23, v24, v25, v26, v27);
  v28 = (_QWORD *)(v0 + v9);
  v29 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v29) == 1)
  {
    v30 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v0 + v9, v30);
  }
  else
  {
    swift_release(*v28);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)v28 + v6[5]));
  v38 = (_QWORD *)((char *)v28 + v6[6]);
  if (v38[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)((char *)v28 + v6[7]), v31, v32, v33, v34, v35, v36, v37);
  swift_release(*(_QWORD *)((char *)v28 + v6[8]));
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_1005B0E18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for TrendListMetric(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrendsStack(0) - 8) + 80);
  return sub_1005B0964(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1005B0E78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_QWORD *)(a1 + 232);
  v9 = *(_BYTE *)(a1 + 240);
  v10 = *(_QWORD *)(a1 + 248);
  v12 = *(_QWORD *)(a1 + 368);
  v13 = *(_QWORD *)(a1 + 384);
  v14 = *(_QWORD *)(a1 + 472);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  sub_1000E439C(v7, v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t sub_1005B0F58(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_QWORD *)(a1 + 232);
  v9 = *(_BYTE *)(a1 + 240);
  v27 = *(_QWORD *)(a1 + 368);
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 248);
  v26 = *(_QWORD *)(a1 + 384);
  v10 = *(_QWORD *)(a1 + 472);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v11, v12, v13, v14, v15, v16, v17);
  swift_release(v5);
  sub_1000E4458(v7, v8, v9);
  swift_release(v10);
  swift_release(v26);
  swift_release(v27);
  swift_bridgeObjectRelease(v28, v18, v19, v20, v21, v22, v23, v24);
  return a1;
}

uint64_t sub_1005B1050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 176);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_1005B10C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 248);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_1005B1138(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 248);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1005B11A8(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 176);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v7, v8, v9, v10, v11, v12, v13);
  swift_release(v5);
  return a1;
}

unint64_t sub_1005B1224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C330;
  if (!qword_10083C330)
  {
    v1 = sub_100007050(&qword_10083C2D0);
    sub_100028384(&qword_10083C338, &qword_10083C2C8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C330);
  }
  return result;
}

id sub_1005B12A8(uint64_t a1, double a2)
{
  void *v2;
  uint64_t v3;
  double v4;
  id v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  double v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;

  v5 = v2;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v5;
  v12 = objc_msgSend(v5, "allValidLocations");
  v34 = sub_100221424();
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v34);

  if ((unint64_t)v13 >> 62)
    goto LABEL_36;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
    if (v14 < 2)
      return 0;
    v16 = objc_msgSend(v35, "allValidLocations", v15);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v34);

    if ((v17 & 0xC000000000000001) != 0)
    {
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    }
    else
    {
      if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_42;
      }
      v18 = *(id *)(v17 + 32);
    }
    v5 = v18;
    v19 = objc_msgSend(v18, "timestamp", swift_bridgeObjectRelease(v17).n128_f64[0]);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v4 = Date.timeIntervalSince(_:)(a1);
    v9 = *(_QWORD *)(v9 + 8);
    ((void (*)(char *, uint64_t))v9)(v11, v8);
    v20 = objc_msgSend(v35, "allValidLocations");
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v34);

    if (!((unint64_t)v3 >> 62))
    {
      v21 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
LABEL_42:
    v33 = v3 < 0 ? v3 : v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v21 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v3);
LABEL_9:
    v22 = fabs(v4);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v3).n128_u64[0];
    if (v21 < 1)
      break;
    v13 = 0;
    while (!__OFSUB__(v21, v13))
    {
      v3 = v13 + (v21 - v13) / 2;
      if (__OFADD__(v13, (v21 - v13) / 2))
        goto LABEL_32;
      v24 = objc_msgSend(v35, "allValidLocations", v23);
      v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v34);

      if ((v25 & 0xC000000000000001) != 0)
      {
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v25);
      }
      else
      {
        if (v3 < 0)
          goto LABEL_33;
        if ((unint64_t)v3 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_34;
        v26 = *(id *)(v25 + 8 * v3 + 32);
      }
      v27 = v26;
      v28 = objc_msgSend(v26, "timestamp", swift_bridgeObjectRelease(v25).n128_f64[0]);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

      v29 = Date.timeIntervalSince(_:)(a1);
      ((void (*)(char *, uint64_t))v9)(v11, v8);
      v4 = fabs(v29);
      if (v4 < 0.5)
      {

        return v27;
      }
      if (v4 < v22)
      {

        v5 = v27;
        v22 = v4;
      }
      v30 = objc_msgSend(v27, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v30);

      LOBYTE(v30) = static Date.< infix(_:_:)(v11, a1);
      ((void (*)(char *, uint64_t))v9)(v11, v8);
      if ((v30 & 1) != 0)
      {
        v13 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_35;
        v3 = v21;
      }
      v21 = v3;
      if (v13 >= v3)
        goto LABEL_25;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (v13 < 0)
      v32 = v13;
    else
      v32 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v13);
  }
LABEL_25:
  if (v22 > a2)
  {

    return 0;
  }
  return v5;
}

uint64_t *assignWithCopy for ActivityDayHistogram(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v8 = a2[7];
  v9 = a1[7];
  a1[7] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[8];
  v11 = a1[8];
  a1[8] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  return a1;
}

__n128 initializeWithTake for ActivityDayHistogram(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ActivityDayHistogram(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  v6 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v6);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDayHistogram(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityDayHistogram(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1005B18B8(unsigned __int8 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t result;

  if (*(_QWORD *)(*v1 + 16) <= (unint64_t)a1
    || (v2 = 24 * a1, v3 = *v1 + v2, (*(_BYTE *)(v3 + 48) & 1) != 0)
    || (v4 = v1[7], *(_QWORD *)(v4 + 16) <= (unint64_t)a1)
    || (*(_BYTE *)(v4 + v2 + 48) & 1) != 0
    || (v5 = *(double *)(v4 + v2 + 32), v5 <= 0.0))
  {
    *(double *)&result = 0.0;
  }
  else
  {
    *(double *)&result = *(double *)(v3 + 32) / v5;
  }
  return result;
}

BOOL sub_1005B1928(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v4 = a1[7];
  v3 = a1[8];
  v5 = a2[1];
  v7 = a2[7];
  v6 = a2[8];
  return (sub_1002A09BC(*a1, *a2) & 1) != 0
      && sub_1002A0A2C(v2, v5)
      && (sub_1002A09BC(v4, v7) & 1) != 0
      && sub_1002A0A2C(v3, v6);
}

id sub_1005B1B54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DemoDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DemoDataProvider()
{
  return objc_opt_self(CHDemoDataProvider);
}

char *sub_1005B1BB4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  objc_super v26;

  v5 = v4;
  v10 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  v14 = (void *)UILabel.withNumberOfLines(_:)(0);

  v15 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v10] = v15;
  v16 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = (void *)UILabel.withNumberOfLines(_:)(0);

  v19 = (void *)UILabel.withLineBreakMode(_:)(0);
  v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v21 = (void *)UILabel.withTextColor(_:)(v20);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v16] = v21;

  v26.receiver = v12;
  v26.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  v22 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel];
  v24 = v22;
  objc_msgSend(v24, "addSubview:", v23);
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel]);
  sub_1005B1F2C();

  return v24;
}

id sub_1005B1D9C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  objc_super v18;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  v7 = objc_msgSend(v5, "init");
  v8 = (void *)UILabel.withNumberOfLines(_:)(0);

  v9 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v2[v4] = v9;
  v10 = OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = (void *)UILabel.withNumberOfLines(_:)(0);

  v13 = (void *)UILabel.withLineBreakMode(_:)(0);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v15 = (void *)UILabel.withTextColor(_:)(v14);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v10] = v15;

  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  v16 = objc_msgSendSuper2(&v18, "initWithCoder:", a1);

  return v16;
}

void sub_1005B1F2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  Class isa;

  v1 = v0;
  v35 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 88, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100626C00;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_titleLabel];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "topAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v4, "trailingAnchor");
  v9 = objc_msgSend(v1, "trailingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, -15.0);

  *(_QWORD *)(v3 + 40) = v10;
  v11 = objc_msgSend(v4, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, 15.0);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp27TrophyCaseSectionHeaderView_descriptionLabel];
  v15 = objc_msgSend(v14, "topAnchor");
  v16 = objc_msgSend(v4, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 8.0);

  *(_QWORD *)(v3 + 56) = v17;
  v18 = objc_msgSend(v14, "bottomAnchor");
  v19 = objc_msgSend(v1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -15.0);

  *(_QWORD *)(v3 + 64) = v20;
  v21 = objc_msgSend(v14, "trailingAnchor");
  v22 = objc_msgSend(v1, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -15.0);

  *(_QWORD *)(v3 + 72) = v23;
  v24 = objc_msgSend(v14, "leadingAnchor");
  v25 = objc_msgSend(v1, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 15.0);

  *(_QWORD *)(v3 + 80) = v26;
  specialized Array._endMutation()(v27);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v28, v29, v30, v31, v32, v33, v34);
  objc_msgSend(v35, "activateConstraints:", isa);

}

id sub_1005B22B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseSectionHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseSectionHeaderView()
{
  return objc_opt_self(_TtC10FitnessApp27TrophyCaseSectionHeaderView);
}

id sub_1005B2338()
{
  void *object;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  NSString *v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  NSString v8;
  Class isa;
  id v10;
  _BYTE v12[72];

  object = AAUIAwardsDataProviderSection.localized()()._object;
  v1 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v1, v12);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v3 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v4 = NSFontAttributeName;
  v5 = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleLargeTitle, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 40) = v5;
  v6 = sub_100038C84(inited);
  v7 = objc_allocWithZone((Class)NSAttributedString);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0);
  sub_100135B1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v7, "initWithString:attributes:", v8, isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  return v10;
}

id sub_1005B24B0()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  NSString *v13;
  id v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  id v19;
  _BYTE v21[72];
  uint64_t v22;
  uint64_t v23;

  _StringGuts.grow(_:)(22);
  v1 = AAUIAwardsDataProviderSection.rawValue.getter(v0);
  v3 = v2;
  swift_bridgeObjectRelease(0xE000000000000000);
  v22 = v1;
  v23 = v3;
  v4._object = (void *)0x80000001006A87A0;
  v4._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v4);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;
  swift_bridgeObjectRelease(v3);

  v10 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v10, v21);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v12 = (void *)objc_opt_self(UIFont);
  v13 = NSFontAttributeName;
  v14 = objc_msgSend(v12, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v14;
  v15 = sub_100038C84(inited);
  v16 = objc_allocWithZone((Class)NSAttributedString);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  type metadata accessor for Key(0);
  sub_100135B1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithString:attributes:", v17, isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v19;
}

double sub_1005B26EC(double a1)
{
  double v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v1 = a1 + -30.0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = (void *)UILabel.withNumberOfLines(_:)(0);

  v4 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = (void *)UILabel.withNumberOfLines(_:)(0);

  v7 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = sub_1005B2338();
  objc_msgSend(v4, "setAttributedText:", v8);

  v9 = sub_1005B24B0();
  objc_msgSend(v7, "setAttributedText:", v9);

  objc_msgSend(v4, "sizeThatFits:", v1, 1.79769313e308);
  v11 = v10;
  objc_msgSend(v7, "sizeThatFits:", v1, 1.79769313e308);
  v13 = v12;

  return v11 + 8.0 + v13 + 15.0;
}

uint64_t sub_1005B2880(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = 0;
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate];
  *(_QWORD *)(v3 + 8) = 0;
  swift_unknownObjectWeakInit(v3);
  v4 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription] = 0;
  v5 = &v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell] = 0;
  v7 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations] = &_swiftEmptyArrayStorage;
  v8 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations] = &_swiftEmptyArrayStorage;
  v9 = v1;

  v10 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations] = &_swiftEmptyArrayStorage;
  sub_1000F61B4(v3);
  swift_unknownObjectRelease(*(_QWORD *)&v1[v4]);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v1[v7], v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v1[v8], v18, v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v9[v10], v25, v26, v27, v28, v29, v30, v31);

  v32 = type metadata accessor for AddToYourRingCollectionViewController();
  swift_deallocPartialClassInstance(v9, v32, 328, 7);
  return 0;
}

id sub_1005B29C4()
{
  char *v0;
  id result;
  void *v2;
  uint64_t v3;
  void *v4;
  objc_super v5;

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "removeObserver:", v0);

    v3 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription;
    v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription];
    if (v4)
    {
      objc_msgSend(v4, "invalidate");
      v4 = *(void **)&v0[v3];
    }
    *(_QWORD *)&v0[v3] = 0;
    swift_unknownObjectRelease(v4);
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
    return objc_msgSendSuper2(&v5, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005B2B90()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
  objc_msgSendSuper2(&v7, "viewDidLoad");
  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  objc_msgSend(v1, "setDelegate:", v0);

  v3 = objc_msgSend(v0, "collectionView");
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  objc_msgSend(v3, "setDataSource:", v0);

  v5 = objc_msgSend(v0, "collectionView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setScrollEnabled:", 0);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1005B2CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];

  v1 = v0;
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v0);
  type metadata accessor for MainActor(0);
  swift_retain(v7);
  swift_retain(v5);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1007AC7E0, 56, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = sub_1005B6EE8;
  v10[6] = v5;
  swift_release(v7);
  v11 = sub_10020DB28((uint64_t)v4, (uint64_t)&unk_10083C5B0, (uint64_t)v10);
  swift_release(v11);
  v12 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "addObserver:", v1);

    v14 = objc_msgSend((id)objc_opt_self(APSubject), "subjectMonitorRegistry");
    v15 = objc_msgSend(v14, "addMonitor:", v1);
    swift_unknownObjectRelease(v14);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription) = v15;
    swift_unknownObjectRelease(v16);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_eventHub + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1
                                               + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_eventHub));
    v20 = type metadata accessor for NetworkConditionsChanged(0, v19);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_subscriptionToken);
    v22 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16, v1);
    swift_retain(v22);
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v24, v20, v21, sub_1005B6FC4, v22, v20, &protocol witness table for NetworkConditionsChanged, ObjectType, v17);
    swift_release(v22);
    swift_release(v5);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v24);
    swift_release(v22);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005B2F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a1;
  v6[11] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[14] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[15] = v8;
  v6[16] = v9;
  return swift_task_switch(sub_1005B2FB8, v8, v9);
}

uint64_t sub_1005B2FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider, v0 + 16);

    v4 = sub_100016804((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v5 = *v4;
    *(_QWORD *)(v0 + 144) = *v4;
    return swift_task_switch(sub_1005B3078, v5, 0);
  }
  else
  {
    v7 = swift_release(*(_QWORD *)(v0 + 112));
    **(_BYTE **)(v0 + 80) = *(_QWORD *)(v0 + 136) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
  }
}

uint64_t sub_1005B3078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[13];
  v2 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC10FitnessApp40SeymourWorkoutRecommendationDataProvider_updateHandler);
  v3 = *v2;
  v4 = v2[1];
  *v2 = v0[12];
  v2[1] = v1;
  swift_retain(v1);
  sub_100022BA4(v3, v4);
  sub_10010B7E0();
  return swift_task_switch(sub_1005B30E4, v0[15], v0[16]);
}

uint64_t sub_1005B30E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  **(_BYTE **)(v0 + 80) = *(_QWORD *)(v0 + 136) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

