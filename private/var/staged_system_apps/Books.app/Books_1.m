void sub_100122F64(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double Width;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
  objc_msgSend(v2, "frame");
  v4 = v3;
  v6 = v5;
  v8 = v7;

  Width = CGRectGetWidth(*(CGRect *)(a1 + 40));
  v10 = IMRectFlippedForRTL(objc_msgSend(*(id *)(a1 + 32), "isRTL"), v4, v6, Width, v8, *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
  objc_msgSend(v17, "setFrame:", v10, v12, v14, v16);

}

void sub_1001237A4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  double v7;
  double v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "coverLayer"));
  objc_msgSend(v3, "setAnimateFrameChange:", 0);

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "coverLayer"));
  v5 = *(_QWORD **)(a1 + 32);
  v6 = v5[8];
  objc_msgSend(v5, "coverArea");
  objc_msgSend(v4, "setLibraryAsset:size:", v6, v7, v8);

}

id sub_1001238E4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  if (objc_msgSend(*(id *)(a1 + 32), "isInEditMode")
    && !objc_msgSend(*(id *)(a1 + 32), "isSelected"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "wantToReadMetrics"));
    objc_msgSend(v2, "shrinkAlpha");
    objc_msgSend(*(id *)(a1 + 32), "setAlpha:");

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectedCheckmarkImageForSelectedState:", *(unsigned __int8 *)(a1 + 40)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkmarkView"));
  objc_msgSend(v5, "setImage:", v4);

  if (*(_BYTE *)(a1 + 40))
    v6 = objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  else
    v6 = objc_claimAutoreleasedReturnValue(+[UIColor bc_booksTertiaryLabelColor](UIColor, "bc_booksTertiaryLabelColor"));
  v7 = (void *)v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkmarkView"));
  objc_msgSend(v8, "setTintColor:", v7);

  return objc_msgSend(*(id *)(a1 + 32), "layoutCoverView");
}

void sub_100126390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001263B0(uint64_t a1)
{
  id WeakRetained;
  void (**v3)(id, void *, void *);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSErrorUserInfoKey v10;
  const __CFString *v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void (**)(id, void *, void *))objc_retainBlock(*(id *)(a1 + 32));
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "parameters"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "error"));
      v3[2](v3, v4, v5);

    }
  }
  else
  {
    v10 = NSLocalizedDescriptionKey;
    v11 = CFSTR("Unexpected nil operation");
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKUpdatesParameterProviderDomain"), -1, v6));

    v8 = objc_retainBlock(*(id *)(a1 + 32));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD, void *))v8 + 2))(v8, 0, v7);

  }
}

void sub_100126540(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSOperationQueue);
  v2 = (void *)qword_1009F5030;
  qword_1009F5030 = (uint64_t)v1;

}

void sub_1001267AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_1001267C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(+[BCAppKitBundleLoader appKitBundleClass](BCAppKitBundleLoader, "appKitBundleClass"), "clearRecentDocumentsList");
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_100126824(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  int v14;
  char v15;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012692C;
  block[3] = &unk_1008EBA08;
  objc_copyWeak(&v13, (id *)(a1 + 88));
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v2 = *(id *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(void **)(a1 + 72);
  v12 = v2;
  v10 = v3;
  v14 = *(_DWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 100);
  v11 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v13);
}

void sub_10012692C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  int8x16_t v13;
  _QWORD v14[5];
  id v15;
  int8x16_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char v21;
  int v22;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "urlHandler"));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 56);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100126AA8;
    v14[3] = &unk_1008EB9E0;
    v9 = *(id *)(a1 + 80);
    v21 = *(_BYTE *)(a1 + 96);
    v20 = v9;
    v14[4] = v3;
    v15 = *(id *)(a1 + 32);
    v22 = *(_DWORD *)(a1 + 97);
    v13 = *(int8x16_t *)(a1 + 56);
    v10 = (id)v13.i64[0];
    v16 = vextq_s8(v13, v13, 8uLL);
    v17 = *(id *)(a1 + 40);
    v18 = *(id *)(a1 + 48);
    v19 = *(id *)(a1 + 72);
    objc_msgSend(v4, "handleURL:sourceApplication:annotation:isLaunch:transaction:completion:", v5, v6, v8, 1, v7, v14);

  }
  else
  {
    v11 = objc_retainBlock(*(id *)(a1 + 80));
    v12 = v11;
    if (v11)
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);

  }
}

void sub_100126AA8(uint64_t a1, int a2)
{
  void (**v3)(id, _QWORD);
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void (**v19)(id, _QWORD);
  id v20[2];
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id location;
  _QWORD v26[5];
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  int v32;
  char v33;
  _QWORD v34[4];
  int8x16_t v35;
  id v36;
  id v37;
  int v38;
  uint64_t v39;

  if (a2)
  {
    v3 = (void (**)(id, _QWORD))objc_retainBlock(*(id *)(a1 + 88));
    if (v3)
    {
      v19 = v3;
      v3[2](v3, 0);
      v3 = v19;
    }

  }
  else
  {
    if (!*(_BYTE *)(a1 + 96))
      goto LABEL_11;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
    v5 = objc_msgSend(v4, "canImportURL:openInPlace:options:", *(_QWORD *)(a1 + 40), 0, 0);

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472;
      v34[2] = sub_100126EE8;
      v34[3] = &unk_1008EB990;
      *(_OWORD *)v20 = *(_OWORD *)(a1 + 40);
      v7 = v20[0];
      v35 = vextq_s8(*(int8x16_t *)v20, *(int8x16_t *)v20, 8uLL);
      v38 = *(_DWORD *)(a1 + 97);
      v36 = *(id *)(a1 + 56);
      v37 = *(id *)(a1 + 88);
      objc_msgSend(v6, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("Open in Place Copy First"), v34);

      return;
    }
    if (*(_BYTE *)(a1 + 96) && objc_msgSend(*(id *)(a1 + 40), "bu_isFolder"))
    {
      v8 = *(void **)(a1 + 48);
      v39 = *(_QWORD *)(a1 + 40);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v39, 1));
      objc_msgSend(v8, "handleImportURLs:openAfterImport:importInPlace:showLibraryAllCollection:switchToLibrary:transaction:perURLCompletion:completion:", v9, *(unsigned __int8 *)(a1 + 97), *(unsigned __int8 *)(a1 + 98), *(unsigned __int8 *)(a1 + 99), *(unsigned __int8 *)(a1 + 100), *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 88));

    }
    else
    {
LABEL_11:
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "bu_isbnForURI"));
      v11 = objc_msgSend(v10, "length");

      if (v11)
      {
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_100126F8C;
        v26[3] = &unk_1008EB9B8;
        v12 = *(void **)(a1 + 40);
        v26[4] = *(_QWORD *)(a1 + 32);
        v27 = *(id *)(a1 + 64);
        v28 = *(id *)(a1 + 72);
        v29 = *(id *)(a1 + 80);
        v32 = *(_DWORD *)(a1 + 96);
        v33 = *(_BYTE *)(a1 + 100);
        v30 = *(id *)(a1 + 56);
        v31 = *(id *)(a1 + 88);
        objc_msgSend(v12, "bu_storeURLForISBNURNWithCompletion:", v26);

      }
      else
      {
        v13 = objc_msgSend(*(id *)(a1 + 80), "BOOLValue");
        objc_initWeak(&location, *(id *)(a1 + 32));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "defaultSceneControllerForTransaction:", *(_QWORD *)(a1 + 56)));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "externalURLOpenPrompter"));
        v16 = *(_QWORD *)(a1 + 40);
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_100126FD8;
        v21[3] = &unk_1008E7540;
        objc_copyWeak(&v24, &location);
        v22 = *(id *)(a1 + 40);
        v23 = *(id *)(a1 + 64);
        objc_msgSend(v15, "maybePromptUserBeforeOpeningExternalURL:shouldThrottle:promptContext:completion:", v16, v13 ^ 1, 0, v21);

        v17 = objc_retainBlock(*(id *)(a1 + 88));
        v18 = v17;
        if (v17)
          (*((void (**)(id, _QWORD))v17 + 2))(v17, 0);

        objc_destroyWeak(&v24);
        objc_destroyWeak(&location);
      }
    }
  }
}

void sub_100126EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100126EE8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  objc_msgSend(v2, "handleImportURLs:openAfterImport:importInPlace:showLibraryAllCollection:switchToLibrary:transaction:perURLCompletion:completion:", v3, *(unsigned __int8 *)(a1 + 64), *(unsigned __int8 *)(a1 + 65), *(unsigned __int8 *)(a1 + 66), *(unsigned __int8 *)(a1 + 67), *(_QWORD *)(a1 + 48), 0, *(_QWORD *)(a1 + 56));

}

id sub_100126F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)((char *)&v3 + 1) = *(_WORD *)(a1 + 83);
  LOBYTE(v3) = *(_BYTE *)(a1 + 82);
  return objc_msgSend(*(id *)(a1 + 32), "handleApplicationURL:sourceApplication:annotation:likelyUserInitiated:canImport:openAfterImport:importInPlace:showLibraryAllCollection:switchToLibrary:transaction:completion:", a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 80), *(unsigned __int8 *)(a1 + 81), v3, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

void sub_100126FD8(uint64_t a1, int a2)
{
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "_openExternalURL:sourceApplication:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
}

void sub_100127184(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;
  id v14;
  id v15;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count")));
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v18;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v3);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_findImportEligibleURLsAtURL:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v7)));
        objc_msgSend(v2, "addObjectsFromArray:", v8);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v5);
  }

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100127350;
  v11[3] = &unk_1008EBA58;
  v9 = *(void **)(a1 + 48);
  v11[4] = *(_QWORD *)(a1 + 40);
  v12 = v2;
  v16 = *(_DWORD *)(a1 + 72);
  v13 = v9;
  v14 = *(id *)(a1 + 56);
  v15 = *(id *)(a1 + 64);
  v10 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

}

void sub_100127350(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  int v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100127424;
  v5[3] = &unk_1008EBA58;
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v7 = v4;
  v11 = *(_DWORD *)(a1 + 72);
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v10 = *(id *)(a1 + 64);
  objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("handle Import URLs"), v5);

}

void sub_100127424(uint64_t a1)
{
  void *v2;
  void *i;
  void *v4;
  _BOOL8 v5;
  _BOOL8 v6;
  _BOOL8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id obj;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v17[5];
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryImportStatusController sharedController](BKLibraryImportStatusController, "sharedController"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count")));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstObject"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastObject"));
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  obj = *(id *)(a1 + 32);
  v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v16)
  {
    v12 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v16; i = (char *)i + 1)
      {
        if (*(_QWORD *)v24 != v12)
          objc_enumerationMutation(obj);
        v4 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v2, "startImportOperation");
        if (objc_msgSend(v4, "isEqual:", v14))
        {
          v5 = *(_BYTE *)(a1 + 72) != 0;
          v6 = *(_BYTE *)(a1 + 73) != 0;
          v7 = *(_BYTE *)(a1 + 74) != 0;
        }
        else
        {
          v5 = 0;
          v6 = 0;
          v7 = 0;
        }
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "importCoordinator"));
        v9 = *(unsigned __int8 *)(a1 + 75);
        v10 = *(_QWORD *)(a1 + 48);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_1001276C8;
        v17[3] = &unk_1008EBA30;
        v17[4] = v4;
        v18 = v2;
        v19 = v15;
        v21 = *(id *)(a1 + 56);
        v20 = v13;
        v22 = *(id *)(a1 + 64);
        objc_msgSend(v8, "importBookFromURL:openAfterImport:importInPlace:showLibraryAllCollection:switchToLibrary:transaction:completion:", v4, v7, v9, v6, v5, v10, v17);

      }
      v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v16);
  }

}

void sub_1001276C8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void (**v16)(id, id);
  id v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  v3 = a2;
  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v18 = 141558274;
      v19 = 1752392040;
      v20 = 2112;
      v21 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "handleImportURLs: Imported: %{mask.hash}@", (uint8_t *)&v18, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 40), "completeImportOperation");
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v3);
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006A1850(a1, v6, v8, v9, v10, v11, v12, v13);

    objc_msgSend(*(id *)(a1 + 40), "failImportOperation");
  }
  v14 = objc_retainBlock(*(id *)(a1 + 64));
  v15 = v14;
  if (v14)
    (*((void (**)(id, _QWORD, id))v14 + 2))(v14, *(_QWORD *)(a1 + 32), v3);

  if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", *(_QWORD *)(a1 + 56)))
  {
    v16 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 72));
    if (v16)
    {
      v17 = objc_msgSend(*(id *)(a1 + 48), "copy");
      v16[2](v16, v17);

    }
  }

}

void sub_100127884(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  _QWORD v19[7];

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePDF, "identifier"));
  v19[0] = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeEPUB, "identifier"));
  v19[1] = v2;
  v19[2] = kBKUTITypeEPUBFolder;
  v19[3] = kBKUTITypeBlissEPUB;
  v19[4] = kBKUTITypeBliss;
  v19[5] = kBKUTITypeBlissAlternate;
  v19[6] = kBKUTITypeBlissIBA;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v19, 7));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v3, "count")));
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v15;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v15 != v8)
          objc_enumerationMutation(v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v9), (_QWORD)v14));
        objc_msgSend(v4, "addObject:", v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v7);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppSceneManager supportedAudiobookImportTypes](BKAppSceneManager, "supportedAudiobookImportTypes"));
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "arrayByAddingObjectsFromArray:", v11));
  v13 = (void *)qword_1009F5040;
  qword_1009F5040 = v12;

}

void sub_100127AD4(id a1)
{
  void *v1;

  v1 = (void *)qword_1009F5050;
  qword_1009F5050 = (uint64_t)&__NSArray0__struct;

}

void sub_100127B2C(id a1)
{
  void *v1;

  v1 = (void *)qword_1009F5060;
  qword_1009F5060 = (uint64_t)&__NSArray0__struct;

}

BOOL sub_100128010(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  _BOOL8 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "pathExtension"));
  if (objc_msgSend(v3, "length"))
  {
    v4 = objc_claimAutoreleasedReturnValue(+[BKAssetUtilities utiTypeForContentType:](BKAssetUtilities, "utiTypeForContentType:", +[BKAssetUtilities contentTypeForExtension:](BKAssetUtilities, "contentTypeForExtension:", v3)));
    v5 = (void *)v4;
    if (v4
      && (v4 = objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", v4))) != 0)
    {
      v6 = v4;
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppSceneManager supportedFileImportTypes](BKAppSceneManager, "supportedFileImportTypes", 0));
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v8)
      {
        v9 = *(_QWORD *)v15;
        while (2)
        {
          for (i = 0; i != v8; i = (char *)i + 1)
          {
            if (*(_QWORD *)v15 != v9)
              objc_enumerationMutation(v7);
            if ((-[NSObject conformsToType:](v6, "conformsToType:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i)) & 1) != 0)
            {
              LODWORD(v8) = 1;
              goto LABEL_18;
            }
          }
          v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
          if (v8)
            continue;
          break;
        }
      }
LABEL_18:

    }
    else
    {
      v11 = BKLibraryBookImportLog(v4);
      v6 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1006A18D0();
      LODWORD(v8) = 0;
    }

    v12 = (_DWORD)v8 != 0;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

BOOL sub_1001281D4(id a1, NSURL *a2, NSError *a3)
{
  NSURL *v4;
  NSError *v5;
  uint64_t v6;
  NSObject *v7;

  v4 = a2;
  v5 = a3;
  v6 = BKLibraryBookImportLog(v5);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    sub_1006A1934();

  return 1;
}

id sub_100128604(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", 1);
}

void sub_100128A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100128AAC(uint64_t a1, void *a2)
{
  void *v4;
  void *v5;
  double v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dateAccessed"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dateAccessed"));
    objc_msgSend(v5, "timeIntervalSinceReferenceDate");
    if (v6 > *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      objc_msgSend(v5, "timeIntervalSinceReferenceDate");
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v7;
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    }

  }
}

void sub_100128CBC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  int8x16_t v8;
  NSObject *activity;
  _QWORD block[4];
  id v11;
  int8x16_t v12;
  id v13;

  v2 = objc_opt_class(MPLocalMediaQueryRemotePlaybackQueue);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playbackQueue"));
  v4 = BUDynamicCast(v2, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  activity = _os_activity_create((void *)&_mh_execute_header, "Audiobook playback queue request", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100128DD0;
  block[3] = &unk_1008E8EE0;
  v11 = v5;
  v8 = *(int8x16_t *)(a1 + 32);
  v6 = (id)v8.i64[0];
  v12 = vextq_s8(v8, v8, 8uLL);
  v13 = *(id *)(a1 + 48);
  v7 = v5;
  os_activity_apply(activity, block);

}

void sub_100128DD0(id *a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  _QWORD v49[4];
  id v50;
  id v51;
  _QWORD v52[4];
  id v53;
  id v54;
  _QWORD v55[4];
  _QWORD v56[4];
  uint8_t buf[4];
  id v58;

  v2 = BKCarPlayLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mediaQuery"));
    *(_DWORD *)buf = 138412290;
    v58 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "setplaybackqueue request: %@", buf, 0xCu);

  }
  v5 = a1[4];
  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstItem"));

    if (v6)
    {
      v7 = objc_opt_class(MPMediaItem);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "firstItem"));
      v9 = BUDynamicCast(v7, v8);
      v10 = objc_claimAutoreleasedReturnValue(v9);
    }
    else
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "mediaQuery"));
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "_currentMediaItemFromQuery:", v8));
    }
    v20 = (void *)v10;

    if (v20)
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "bookPresenter"));
      if (v24)
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "bk_assetID"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
        v28 = objc_msgSend(v27, "applicationState");

        if (v28)
        {
          v55[0] = CFSTR("BKBookPresentWithoutAnimations");
          v55[1] = CFSTR("BKBookPresentingForceOpenBeforeWelcomeCompleted");
          v56[0] = &__kCFBooleanTrue;
          v56[1] = &__kCFBooleanTrue;
          v55[2] = AEAudioBookForceAudiobookPlayIfCurrentAsset;
          v55[3] = AEAudiobookOptionsShouldBeginPlaybackInBackground;
          v56[2] = &__kCFBooleanTrue;
          v56[3] = &__kCFBooleanTrue;
          v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v56, v55, 4));
          objc_msgSend(v26, "addEntriesFromDictionary:", v29);

        }
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "sessionIdentifierOverride"));

        if (v30)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "sessionIdentifierOverride"));
          objc_msgSend(v26, "setObject:forKeyedSubscript:", v31, AEAudiobookOptionsSessionID);

        }
        v32 = objc_msgSend(v23, "newShowAssetTransaction");
        v52[0] = _NSConcreteStackBlock;
        v52[1] = 3221225472;
        v52[2] = sub_100129290;
        v52[3] = &unk_1008E7680;
        v33 = v25;
        v53 = v33;
        v54 = a1[7];
        v34 = BKCarPlayLog(objc_msgSend(v32, "whenCancelled:", v52));
        v35 = objc_claimAutoreleasedReturnValue(v34);
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v58 = v33;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "setplaybackqueue begin playback assetID: %@", buf, 0xCu);
        }

        v49[0] = _NSConcreteStackBlock;
        v49[1] = 3221225472;
        v49[2] = sub_100129358;
        v49[3] = &unk_1008E9250;
        v50 = v33;
        v51 = a1[7];
        v36 = v33;
        objc_msgSend(v24, "showAssetWithTransaction:assetID:location:options:completion:", v32, v36, 0, v26, v49);

      }
      else
      {
        v46 = BKCarPlayLog(0);
        v47 = objc_claimAutoreleasedReturnValue(v46);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
          sub_1006A1AC8(v47);

        v48 = objc_retainBlock(a1[7]);
        v26 = v48;
        if (v48)
          (*((void (**)(id, uint64_t))v48 + 2))(v48, 200);
      }

    }
    else
    {
      v37 = BKCarPlayLog(v21);
      v38 = objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
        sub_1006A1A5C((uint64_t)a1, v38, v39, v40, v41, v42, v43, v44);

      v45 = objc_retainBlock(a1[7]);
      v22 = v45;
      if (v45)
        (*((void (**)(id, uint64_t))v45 + 2))(v45, 100);
    }

  }
  else
  {
    v11 = BKCarPlayLog(0);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006A19F0((uint64_t)a1, v12, v13, v14, v15, v16, v17, v18);

    v19 = objc_retainBlock(a1[7]);
    v20 = v19;
    if (v19)
      (*((void (**)(id, uint64_t))v19 + 2))(v19, 200);
  }

}

void sub_100129290(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  void *v6;
  int v7;
  uint64_t v8;

  v2 = BKCarPlayLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v7 = 138412290;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "setplaybackqueue tx was cancelled %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t))v5 + 2))(v5, 200);

}

void sub_100129358(uint64_t a1, int a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  id v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  __int16 v17;
  uint64_t v18;

  v5 = a3;
  v6 = kdebug_trace(725353456, 0, 0, 0, 0);
  if (a2)
    v7 = 0;
  else
    v7 = 200;
  v8 = BKCarPlayLog(v6);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v13 = 134218498;
    v14 = v7;
    v15 = 2112;
    v16 = v5;
    v17 = 2112;
    v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "setplaybackqueue status: %ld error: %@ assetID: %@", (uint8_t *)&v13, 0x20u);
  }

  v11 = objc_retainBlock(*(id *)(a1 + 40));
  v12 = v11;
  if (v11)
    (*((void (**)(id, uint64_t))v11 + 2))(v11, v7);

}

void sub_1001299A0(uint64_t a1)
{
  id v2;
  _QWORD block[5];

  v2 = +[BSUIStoreServices sharedInstance](BSUIStoreServices, "sharedInstance");
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100129A1C;
  block[3] = &unk_1008E72C0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100129A1C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKReachability sharedReachabilityForInternetConnection](BKReachability, "sharedReachabilityForInternetConnection"));
  objc_msgSend(v2, "startNotifier");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  objc_msgSend(v3, "signalConditionSatisfied:", 10);

}

void sub_100129AF8(id a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentPackage"));
  objc_msgSend(v1, "startEviction");

}

void sub_100129F64(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100063C90;
  block[3] = &unk_1008E7458;
  block[4] = *(_QWORD *)(a1 + 32);
  if (qword_1009F5088 != -1)
    dispatch_once(&qword_1009F5088, block);
}

id sub_100129FD4(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSString *v21;
  void *v22;
  unint64_t v23;
  __int128 v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  unsigned int v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  void *v33;
  void *v34;
  __int128 v36;
  id v37;
  uint8_t buf[4];
  id v39;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v5;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "lastPathComponent"));
  if ((objc_msgSend(v9, "hasPrefix:", CFSTR(".itemprovider")) & 1) != 0
    || objc_msgSend(v9, "hasPrefix:", CFSTR(".com.apple.UIKit.ItemProvider")))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "suggestedName"));

    if (!objc_msgSend(v10, "length"))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("Untitled"), &stru_10091C438, 0));

      v10 = (void *)v12;
    }
    v13 = BCDragRepresentationFactoryFileExtensionForURLAndUTI(v8, v6);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    if (v14)
    {
      v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stringByAppendingPathExtension:", v14));

      v10 = (void *)v15;
    }
    v16 = v10;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet illegalCharacterSet](NSMutableCharacterSet, "illegalCharacterSet"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet punctuationCharacterSet](NSCharacterSet, "punctuationCharacterSet"));
    objc_msgSend(v17, "formUnionWithCharacterSet:", v18);

    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet controlCharacterSet](NSCharacterSet, "controlCharacterSet"));
    objc_msgSend(v17, "formUnionWithCharacterSet:", v19);

    objc_msgSend(v17, "addCharactersInString:", CFSTR("/:"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "stringByTrimmingCharactersInSet:", v17));

  }
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v21 = NSTemporaryDirectory();
  v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  v23 = 0;
  *(_QWORD *)&v24 = 138412290;
  v36 = v24;
  do
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID", v36));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "UUIDString"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "stringByAppendingPathComponent:", v26));

    if ((objc_msgSend(v20, "fileExistsAtPath:", v27) & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      v37 = 0;
      v29 = objc_msgSend(v20, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v27, 1, 0, &v37);
      v30 = v37;
      if (v29)
      {
        v28 = v27;
      }
      else
      {
        v31 = BCDragAndDropLog();
        v32 = objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = v36;
          v39 = v30;
          _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "Could not create temporary folder. Error: %@", buf, 0xCu);
        }

        v28 = 0;
      }

    }
    if (v23 > 0x62)
      break;
    ++v23;
  }
  while (!v28);
  v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v28));

  v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "URLByAppendingPathComponent:", v9));
  return v34;
}

id sub_10012A350()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[7];

  v0 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeUTF8PlainText, "identifier"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeURL, "identifier", v0));
  v9[1] = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePDF, "identifier"));
  v9[2] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeEPUB, "identifier"));
  v9[3] = v3;
  v9[4] = kBKUTITypeBliss;
  v9[5] = kBKUTITypeBlissAlternate;
  v9[6] = kBKUTITypeBlissIBA;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 7));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppSceneManager supportedAudiobookImportTypes](BKAppSceneManager, "supportedAudiobookImportTypes"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKeyPath:", CFSTR("identifier")));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "arrayByAddingObjectsFromArray:", v6));
  return v7;
}

id sub_10012A4BC()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppSceneManager supportedFileImportTypes](BKAppSceneManager, "supportedFileImportTypes"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "valueForKeyPath:", CFSTR("identifier")));

  return v1;
}

void sub_10012A504(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "canLoadObjectsOfClass:", objc_opt_class(NSURL)))
  {
    v5 = objc_opt_class(NSURL);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10012A5C4;
    v7[3] = &unk_1008EB968;
    v8 = v4;
    v6 = objc_msgSend(v3, "loadObjectsOfClass:completion:", v5, v7);

  }
}

void sub_10012A5C4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)v7);
        v9 = objc_opt_class(NSURL);
        v10 = BUDynamicCast(v9, v8);
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (v11)
        {
          v12 = (void *)v11;
          goto LABEL_11;
        }
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      if (v5)
        continue;
      break;
    }
  }
  v12 = 0;
LABEL_11:

  v13 = objc_retainBlock(*(id *)(a1 + 32));
  v14 = v13;
  if (v13)
    (*((void (**)(id, void *))v13 + 2))(v13, v12);

}

void sub_10012A708(void *a1)
{
  sub_10012A504(a1, &stru_1008EBBA0);
}

void sub_10012A714(id a1, NSURL *a2)
{
  NSURL *v2;
  NSURL *v3;
  _QWORD block[4];
  NSURL *v5;

  v2 = a2;
  v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10012A790;
    block[3] = &unk_1008E72C0;
    v5 = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_10012A790(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v3, "application:openURL:options:", v2, *(_QWORD *)(a1 + 32), &__NSDictionary0__struct);

}

void sub_10012A7FC(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *i;
  void *v16;
  void *v17;
  NSObject *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *j;
  void *v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id obj;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _QWORD v50[4];
  id v51;
  id v52;
  _QWORD v53[4];
  id v54;
  id v55;
  _QWORD v56[4];
  id v57;
  id v58;
  id v59;
  id v60;
  uint8_t v61[4];
  uint64_t v62;
  _BYTE v63[128];
  _BYTE v64[128];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppSceneManager supportedFileImportTypes](BKAppSceneManager, "supportedFileImportTypes"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_10012AC50;
  v56[3] = &unk_1008EBBF0;
  v34 = v8;
  v57 = v34;
  v33 = v7;
  v58 = v33;
  v31 = v11;
  v59 = v31;
  v32 = v6;
  v60 = v32;
  v12 = objc_retainBlock(v56);
  v53[0] = _NSConcreteStackBlock;
  v53[1] = 3221225472;
  v53[2] = sub_10012AF9C;
  v53[3] = &unk_1008EBC18;
  v30 = v10;
  v54 = v30;
  v13 = v12;
  v55 = v13;
  v14 = objc_retainBlock(v53);
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_10012B290;
  v50[3] = &unk_1008EBC68;
  v29 = v13;
  v51 = v29;
  v28 = v14;
  v52 = v28;
  v38 = objc_retainBlock(v50);
  v35 = v9;
  v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "arrayByAddingObject:", UTTypeFolder));
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v36 = v5;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "items"));
  v41 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v64, 16);
  if (v41)
  {
    v39 = *(_QWORD *)v47;
    do
    {
      for (i = 0; i != v41; i = (char *)i + 1)
      {
        if (*(_QWORD *)v47 != v39)
          objc_enumerationMutation(obj);
        v16 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * (_QWORD)i);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "itemProvider"));
        v42 = 0u;
        v43 = 0u;
        v44 = 0u;
        v45 = 0u;
        v18 = v40;
        v19 = -[NSObject countByEnumeratingWithState:objects:count:](v18, "countByEnumeratingWithState:objects:count:", &v42, v63, 16);
        if (v19)
        {
          v20 = v19;
          v21 = *(_QWORD *)v43;
          while (2)
          {
            for (j = 0; j != v20; j = (char *)j + 1)
            {
              if (*(_QWORD *)v43 != v21)
                objc_enumerationMutation(v18);
              v23 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * (_QWORD)j);
              v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "identifier"));
              v25 = objc_msgSend(v17, "hasRepresentationConformingToTypeIdentifier:fileOptions:", v24, 0);

              if (v25)
              {
                v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "identifier"));
                ((void (*)(_QWORD *, void *, void *))v38[2])(v38, v16, v27);

                goto LABEL_17;
              }
            }
            v20 = -[NSObject countByEnumeratingWithState:objects:count:](v18, "countByEnumeratingWithState:objects:count:", &v42, v63, 16);
            if (v20)
              continue;
            break;
          }
        }

        v26 = BCDragAndDropLog();
        v18 = objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006A1B08(v61, v17, &v62, v18);
LABEL_17:

      }
      v41 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v64, 16);
    }
    while (v41);
  }

}

void sub_10012AC50(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  void *v22;

  v5 = a2;
  v6 = a3;
  v7 = BCDragAndDropLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "path"));
    *(_DWORD *)buf = 141558274;
    v20 = 1752392040;
    v21 = 2112;
    v22 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importURL: %{mask.hash}@", buf, 0x16u);

  }
  v10 = *(void **)(a1 + 32);
  v18 = v5;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10012ADEC;
  v14[3] = &unk_1008EBBC8;
  v17 = v6;
  v12 = *(_QWORD *)(a1 + 40);
  v15 = *(id *)(a1 + 48);
  v16 = *(id *)(a1 + 56);
  v13 = v6;
  objc_msgSend(v10, "handleImportURLs:transaction:perURLCompletion:completion:", v11, v12, v14, 0);

}

void sub_10012ADEC(id *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;

  v4 = a3;
  v5 = objc_retainBlock(a1[6]);
  v6 = v5;
  if (v5)
    (*((void (**)(id, BOOL))v5 + 2))(v5, v4 != 0);

  if (v4)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10012AEC4;
    block[3] = &unk_1008E7928;
    v8 = a1[4];
    v9 = a1[5];
    v10 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_10012AEC4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "collectionOnMainQueueWithCollectionID:error:", *(_QWORD *)(a1 + 40), 0));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionController"));
  v6 = *(_QWORD *)(a1 + 48);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v4, "addBooks:toCollection:forceToTop:completion:", v5, v3, 0, 0);

}

void sub_10012AF9C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  id v30;
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  id v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  id v40;

  v9 = a2;
  v10 = a5;
  v11 = a4;
  v12 = a3;
  v13 = BCDragAndDropLog();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "path"));
    *(_DWORD *)buf = 141558274;
    v32 = 1752392040;
    v33 = 2112;
    v34 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importURLWithMove: %{mask.hash}@", buf, 0x16u);

  }
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "itemProvider"));

  v17 = sub_100129FD4(v9, v11, v16);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

  v19 = *(void **)(a1 + 32);
  v30 = 0;
  LODWORD(v16) = objc_msgSend(v19, "moveItemAtURL:toURL:error:", v9, v18, &v30);
  v20 = v30;
  if ((_DWORD)v16)
  {
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_10012B238;
    v26[3] = &unk_1008E9110;
    v21 = *(_QWORD *)(a1 + 40);
    v27 = *(id *)(a1 + 32);
    v28 = v18;
    v29 = v10;
    (*(void (**)(uint64_t, id, _QWORD *))(v21 + 16))(v21, v28, v26);

    v22 = v27;
  }
  else
  {
    v23 = BCDragAndDropLog();
    v24 = objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 141559042;
      v32 = 1752392040;
      v33 = 2112;
      v34 = v9;
      v35 = 2160;
      v36 = 1752392040;
      v37 = 2112;
      v38 = v18;
      v39 = 2112;
      v40 = v20;
      _os_log_error_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "BKDropSessionImportFiles: importURLWithMove: moveItemAtURL failed. url: %{mask.hash}@ destURL: %{mask.hash}@ error: %@", buf, 0x34u);
    }

    v25 = objc_retainBlock(v10);
    v22 = v25;
    if (v25)
      (*((void (**)(id, _QWORD))v25 + 2))(v25, 0);
  }

}

void sub_10012B238(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "removeItemAtURL:error:", *(_QWORD *)(a1 + 40), 0);
  v4 = objc_retainBlock(*(id *)(a1 + 48));
  if (v4)
  {
    v5 = v4;
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
    v4 = v5;
  }

}

void sub_10012B290(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "itemProvider"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10012B380;
  v11[3] = &unk_1008EBC40;
  v12 = v6;
  v14 = *(id *)(a1 + 32);
  v15 = *(id *)(a1 + 40);
  v13 = v5;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(v7, "loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:", v9, v11);

}

void sub_10012B380(_QWORD *a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  _QWORD v17[4];
  NSObject *v18;
  unsigned __int8 v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  int v23;

  v7 = a2;
  v8 = a4;
  v9 = BCDragAndDropLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = a1[4];
    *(_DWORD *)buf = 138543618;
    v21 = v11;
    v22 = 1024;
    v23 = a3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importItem: type: %{public}@ isInPlace: %d", buf, 0x12u);
  }

  if (v7)
  {
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_10012B51C;
    v17[3] = &unk_1008E9C48;
    v19 = objc_msgSend(v7, "startAccessingSecurityScopedResource");
    v12 = v7;
    v18 = v12;
    v14 = objc_retainBlock(v17);
    if (a3)
      (*(void (**)(_QWORD, NSObject *, _QWORD *, uint64_t))(a1[6] + 16))(a1[6], v12, v14, v13);
    else
      (*(void (**)(_QWORD, NSObject *, _QWORD, _QWORD))(a1[7] + 16))(a1[7], v12, a1[5], a1[4]);

    v16 = v18;
  }
  else
  {
    v15 = BCDragAndDropLog();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1006A1B7C((uint64_t)v8, v16);
  }

}

id *sub_10012B51C(id *result)
{
  if (*((_BYTE *)result + 40))
    return (id *)objc_msgSend(result[4], "stopAccessingSecurityScopedResource");
  return result;
}

uint64_t sub_10012B530(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "canLoadObjectsOfClass:", objc_opt_class(NSURL)))
    v2 = sub_10012B588(v1) ^ 1;
  else
    v2 = 0;

  return v2;
}

uint64_t sub_10012B588(void *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "items", 0));
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v12;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v12 != v4)
          objc_enumerationMutation(v1);
        v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v5), "itemProvider"));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v6, "registeredTypeIdentifiers"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "firstObject"));

        LOBYTE(v6) = objc_msgSend(v8, "isEqualToString:", CFSTR("com.apple.mapkit.map-item"));
        if ((v6 & 1) != 0)
        {
          v9 = 1;
          goto LABEL_11;
        }
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v3)
        continue;
      break;
    }
  }
  v9 = 0;
LABEL_11:

  return v9;
}

uint64_t sub_10012B6D8(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v4, "count")
    && (objc_msgSend(v3, "hasItemsConformingToTypeIdentifiers:", v4) & 1) != 0)
  {
    v5 = 1;
  }
  else if (objc_msgSend(v3, "canLoadObjectsOfClass:", objc_opt_class(NSURL)))
  {
    v5 = sub_10012B588(v3) ^ 1;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_10012B768(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v6;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeFolder, "identifier"));
  v6 = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  v4 = objc_msgSend(v1, "hasItemsConformingToTypeIdentifiers:", v3);

  return v4;
}

void sub_10012C0E0(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[4];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetOnMainQueueWithAssetID:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10012C190;
  v4[3] = &unk_1008E7608;
  v5 = *(id *)(a1 + 48);
  objc_msgSend(v3, "fetchImageForAsset:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:", v2, 0, 0, 0, v4, *(double *)(a1 + 56), *(double *)(a1 + 64));

}

uint64_t sub_10012C190(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(_QWORD, id, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "CGImage"), 0);
}

uint64_t sub_10012C1C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10012C7D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!v5)
  {
    v8 = BKLibraryDataSourceMediaLibraryLog(v6);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006A1CD4(a1, v9, v10, v11, v12, v13, v14, v15);

  }
  v16 = objc_retainBlock(*(id *)(a1 + 40));
  v17 = v16;
  if (v16)
    (*((void (**)(id, id, _QWORD, _QWORD))v16 + 2))(v16, v5, 0, 0);

}

void sub_10012CBF8(id *a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  void *v30;
  __int16 v31;
  id v32;
  __int16 v33;
  void *v34;

  v3 = a2;
  v4 = objc_opt_class(NSString);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0 && objc_msgSend(v3, "length"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "assetFromAssetID:", v3));
    v6 = v5;
    if (v5)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "representativeItem"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "bk_storeID"));

      v9 = (uint64_t)objc_msgSend(v8, "longLongValue");
      if (v9 < 1)
      {
        v12 = objc_opt_class(NSNumber);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "representativeItem"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "valueForProperty:", MPMediaItemPropertyAlbumPersistentID));
        v15 = BUDynamicCast(v12, v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

        v18 = BKLibraryDataSourceMediaLibraryLog(v17);
        v19 = objc_claimAutoreleasedReturnValue(v18);
        v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG);
        if (v16)
        {
          if (v20)
          {
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "title"));
            v29 = 138412802;
            v30 = v16;
            v31 = 2112;
            v32 = v3;
            v33 = 2112;
            v34 = v28;
            _os_log_debug_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Preparing to delete asset with albumPersistentID: %@, assetID: %@, title: %@", (uint8_t *)&v29, 0x20u);

          }
          objc_msgSend(a1[7], "addObject:", v16);
          objc_msgSend(a1[6], "addObject:", v6);
        }
        else
        {
          if (v20)
            sub_1006A1DF8((uint64_t)v3, v19, v21, v22, v23, v24, v25, v26);

        }
      }
      else
      {
        v10 = BKLibraryDataSourceMediaLibraryLog(v9);
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "title"));
          v29 = 138412802;
          v30 = v8;
          v31 = 2112;
          v32 = v3;
          v33 = 2112;
          v34 = v27;
          _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Preparing to delete asset with storePlaylistID: %@, assetID: %@, title: %@", (uint8_t *)&v29, 0x20u);

        }
        objc_msgSend(a1[5], "addObject:", v8);
        objc_msgSend(a1[6], "addObject:", v6);
      }

    }
  }

}

void sub_10012D614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_10012D688(_QWORD *a1)
{
  _QWORD *v2;

  v2 = sub_10007F5BC(a1);
  sub_10007F5BC(v2 + 4);
  sub_10007F5BC(a1 + 8);
  sub_10007F5BC(a1 + 12);
  sub_10007F5BC(a1 + 16);
  sub_10007F5BC(a1 + 20);
  sub_10007F5BC(a1 + 24);
  sub_10007F5BC(a1 + 28);
  sub_10007F5BC(a1 + 32);
  *(_QWORD *)((char *)a1 + 293) = 0;
  a1[36] = 0;
  return a1;
}

void sub_10012EB18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "_addAssetIDsToCacheManager:", v8);
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);

}

void sub_10012F0E8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  id v13;
  void *v14;
  int v15;
  id v16;

  v7 = a3;
  v8 = a4;
  v9 = objc_msgSend(v7, "count");
  if (v9)
  {
    v10 = BKLibraryDataSourceMediaLibraryLog(v9);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v15 = 134217984;
      v16 = objc_msgSend(v7, "count");
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Successfully unclaimed %lu assets", (uint8_t *)&v15, 0xCu);
    }

    +[BKMediaLibraryChangeCollector logAssets:message:](BKMediaLibraryChangeCollector, "logAssets:message:", v7, CFSTR("removing"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    objc_msgSend(v12, "libraryDataSource:removedAssets:", *(_QWORD *)(a1 + 32), v7);

  }
  v13 = objc_retainBlock(*(id *)(a1 + 40));
  v14 = v13;
  if (v13)
    (*((void (**)(id, uint64_t, id))v13 + 2))(v13, a2, v8);

}

void sub_10012FA28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "window"));
  objc_msgSend(v2, "updateWindowSizeIfNeeded:", v4);

}

void sub_1001302D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 216), 8);
  _Block_object_dispose((const void *)(v34 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_100130314(uint64_t a1, char a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100130328(uint64_t a1, char a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10013033C(uint64_t a1, char a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100130350(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  _UNKNOWN **v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  int v33;
  void *v34;
  unsigned int v35;
  unsigned int v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unsigned int v48;
  void *v49;
  id *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  unsigned __int8 v71;
  void *v72;
  unsigned int v73;
  void *v74;
  unsigned int v75;
  unsigned int v76;
  id v77;
  id v78;
  void *v79;
  unsigned int v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  void *v101;
  uint64_t v102;
  void *v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  unsigned int v108;
  void *v109;
  uint64_t v110;
  void *v111;
  id v112;
  id v113;
  NSObject *v114;
  void *v115;
  void *v116;
  void *v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint8_t buf[16];
  id v131;
  _QWORD v132[4];
  id v133;
  id v134;
  id v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _BYTE v144[128];
  uint64_t v145;
  void *v146;
  _BYTE v147[128];

  v1 = a1;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24)
    && (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 24) || *(_BYTE *)(a1 + 112) || *(_BYTE *)(a1 + 113)))
  {
    if (!*(_BYTE *)(a1 + 115) && !*(_BYTE *)(a1 + 113))
    {
      v15 = 0;
      goto LABEL_106;
    }
    v138 = 0u;
    v139 = 0u;
    v136 = 0u;
    v137 = 0u;
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "queryItems"));
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v136, v144, 16);
    v24 = BCMutableCloudSyncVersions_ptr;
    if (!v23)
    {
LABEL_42:
      v33 = 0;
      goto LABEL_47;
    }
    v25 = v23;
    v127 = v1;
    v26 = *(_QWORD *)v137;
LABEL_27:
    v27 = 0;
    while (1)
    {
      if (*(_QWORD *)v137 != v26)
        objc_enumerationMutation(v22);
      v28 = *(void **)(*((_QWORD *)&v136 + 1) + 8 * v27);
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "name"));
      v30 = objc_msgSend(v29, "caseInsensitiveCompare:", CFSTR("reason"));

      if (!v30)
      {
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "value"));
        if (!objc_msgSend(v31, "caseInsensitiveCompare:", CFSTR("preorder-available")))
        {

LABEL_37:
          v34 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance"));
          v35 = objc_msgSend(v34, "isBookStoreAllowed");

          if (!v35)
          {
            v33 = 0;
            v1 = v127;
            v24 = BCMutableCloudSyncVersions_ptr;
            goto LABEL_48;
          }
          v24 = BCMutableCloudSyncVersions_ptr;
          v1 = v127;
          v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL assetIDFromURL:](NSURL, "assetIDFromURL:", *(_QWORD *)(v127 + 32)));
          if (!objc_msgSend(v22, "length"))
            goto LABEL_42;
          v36 = +[BKLibraryDataSourceJalisco isShowPurchasesEnabled](BKLibraryDataSourceJalisco, "isShowPurchasesEnabled");
          v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v127 + 40), "libraryAssetProvider"));
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "libraryAssetOnMainQueueWithAssetID:", v22));

          if ((objc_msgSend(v38, "canOpen") & 1) != 0
            || (objc_msgSend(v38, "isStore") & v36) == 1)
          {
            v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v127 + 40), "libraryAssetProvider"));
            v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
            objc_msgSend(v39, "updateLibraryAssetWithID:withLastOpenDate:completion:", v22, v40, 0);

            v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v127 + 40), "delegate"));
            v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "libraryCollectionPresenter"));
            objc_msgSend(v42, "showLibraryWithTransaction:animated:assetID:completion:", *(_QWORD *)(v127 + 48), 1, v22, 0);

          }
          else
          {
            v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v127 + 40), "delegate"));
            v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "libraryCollectionPresenter"));
            v45 = *(_QWORD *)(v127 + 48);
            v132[0] = _NSConcreteStackBlock;
            v132[1] = 3221225472;
            v132[2] = sub_1001310B8;
            v132[3] = &unk_1008E7928;
            v133 = v38;
            v134 = v22;
            v135 = *(id *)(v127 + 48);
            objc_msgSend(v44, "showLibraryWithTransaction:animated:completion:", v45, 1, v132);

            v41 = v133;
          }

          v33 = 1;
LABEL_47:

LABEL_48:
          if (*(_BYTE *)(v1 + 115))
            v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "host"));
          else
            v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 72), "path"));
          v47 = v46;
          if (v33
            || objc_msgSend(v46, "containsString:", CFSTR("show-reading-now"))
            && (objc_msgSend(*(id *)(v1 + 40), "_handleShowReadingNowWithTransaction:", *(_QWORD *)(v1 + 48)) & 1) != 0)
          {
            goto LABEL_52;
          }
          if (objc_msgSend(v47, "containsString:", CFSTR("reading-goals")))
          {
            v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "delegate"));
            v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "storePresenter"));
            v71 = objc_msgSend(v70, "storeHandleURL:sourceApplication:annotation:isLaunch:transaction:", *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 114), *(_QWORD *)(v1 + 48));

            if ((v71 & 1) != 0)
              goto LABEL_52;
          }
          if (objc_msgSend(v47, "containsString:", CFSTR("show-audiobook-store"))
            && (v72 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance")), v73 = objc_msgSend(v72, "isBookStoreAllowed"), v72, v73)&& (objc_msgSend(*(id *)(v1 + 40), "_handleShowAudiobooksMainWithTransaction:", *(_QWORD *)(v1 + 48)) & 1) != 0)
          {
LABEL_52:
            v48 = 1;
          }
          else if (objc_msgSend(v47, "containsString:", CFSTR("show-manga-store"))
                 && (v74 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance")), v75 = objc_msgSend(v74, "isBookStoreAllowed"), v74, v75))
          {
            v48 = objc_msgSend(*(id *)(v1 + 40), "_handleShowMangaMainWithTransaction:", *(_QWORD *)(v1 + 48));
          }
          else
          {
            v48 = 0;
          }
          v49 = v24[362];
          v50 = (id *)(v1 + 32);
          v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v49, "assetIDFromURL:", *(_QWORD *)(v1 + 32)));
          v52 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "bu_libraryIDFromURL"));
          v53 = (void *)v52;
          if (v52)
            v54 = (void *)v52;
          else
            v54 = v51;
          v55 = v54;

          if (objc_msgSend(v55, "length") && !v48)
          {
            v56 = (void *)objc_claimAutoreleasedReturnValue(+[MPMediaQuery bk_audiobooksQuery](MPMediaQuery, "bk_audiobooksQuery"));
            v57 = (void *)objc_claimAutoreleasedReturnValue(+[MPMediaPropertyPredicate predicateWithValue:forProperty:](MPMediaPropertyPredicate, "predicateWithValue:forProperty:", v55, MPMediaItemPropertyAlbumPersistentID));
            objc_msgSend(v56, "addFilterPredicate:", v57);

            v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "items"));
            v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "firstObject"));

            if (v59)
            {
              v122 = v51;
              v128 = v47;
              v60 = *(void **)(v1 + 40);
              v61 = *(_QWORD *)(v1 + 48);
              v62 = v55;
              v63 = v1;
              v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v59, "bk_assetID"));
              v48 = 1;
              v65 = objc_msgSend(v60, "_newShowAssetTransactionFromExistingTransaction:forAssetID:isAudiobook:", v61, v64, 1);

              v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v63 + 40), "delegate"));
              v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v66, "bookPresenter"));
              v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v59, "bk_assetID"));
              objc_msgSend(v67, "showAssetWithTransaction:assetID:location:options:completion:", v65, v68, 0, 0, 0);

              v1 = v63;
              v55 = v62;

              v47 = v128;
              v51 = v122;

            }
            else
            {
              v48 = 0;
            }

          }
          if (v48)
          {
            v76 = 1;
            goto LABEL_105;
          }
          v77 = *(id *)(v1 + 32);
          v129 = v47;
          if (!*(_BYTE *)(v1 + 115))
          {
            v78 = objc_msgSend(*(id *)(v1 + 72), "copy");
            objc_msgSend(v78, "setScheme:", CFSTR("ibooks"));
            v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "host"));
            v80 = objc_msgSend(v79, "containsString:", CFSTR("books.apple.com"));

            if (v80)
            {
              v81 = v77;
              v82 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "URL"));
              v83 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v82, "absoluteString"));
              v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v83, "stringByReplacingOccurrencesOfString:withString:", CFSTR("books.apple.com/"), &stru_10091C438));

              v85 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v84));
              v86 = v85;
              if (v85)
              {
                v87 = v85;

                v81 = v87;
              }

              v47 = v129;
              v77 = v81;
            }

          }
          v88 = *(_QWORD *)(v1 + 56);
          v89 = *(_QWORD *)(v1 + 64);
          v131 = 0;
          v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "p_libraryAssetFromIbooksSchemeURL:sourceApplication:annotation:remainingPath:canScheduleOperations:transaction:", v77, v88, v89, &v131, *(unsigned __int8 *)(v1 + 114), *(_QWORD *)(v1 + 48)));
          v91 = v131;
          v92 = v91;
          if (v90)
          {
            v125 = v55;
            if (objc_msgSend(v91, "length"))
            {
              v93 = objc_alloc((Class)BKAnchorPathLocation);
              v94 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v50, "fragment"));
              v95 = objc_msgSend(v93, "initWithOrdinal:anchor:andPath:", -1, v94, v92);

            }
            else
            {
              v103 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v50, "fragment"));
              v104 = objc_msgSend(v103, "length");

              if (v104)
                v95 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "locationFromURLFragment:", *(_QWORD *)(v1 + 32)));
              else
                v95 = 0;
            }
            v102 = v1;
            if (objc_msgSend(v90, "canOpen"))
            {
              v120 = v95;
              v100 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
              v105 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v102 + 40), "delegate"));
              if (objc_msgSend(v105, "pushLargeCoverForInitialHandleURLBookOpen"))
              {

                goto LABEL_97;
              }
              v107 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v102 + 40), "delegate"));
              v108 = objc_msgSend(v107, "pushLargeCoverForNextHandleURLBookOpen");

              if (v108)
LABEL_97:
                -[NSObject setObject:forKeyedSubscript:](v100, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("BKBookPresentingUseLargeCoverIfNeeded"));
              v123 = v77;
              if (objc_msgSend(v90, "isPreorderBook"))
                -[NSObject setObject:forKeyedSubscript:](v100, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, AEHelperNumberIsPreorderKey);
              v109 = *(void **)(v102 + 40);
              v110 = *(_QWORD *)(v102 + 48);
              v111 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "assetID"));
              v112 = objc_msgSend(v109, "_newShowAssetTransactionFromExistingTransaction:forAssetID:isAudiobook:", v110, v111, objc_msgSend(v90, "isAudiobook"));

              v113 = sub_100131E00();
              v114 = objc_claimAutoreleasedReturnValue(v113);
              if (os_log_type_enabled(v114, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v114, OS_LOG_TYPE_DEFAULT, "Now proceed to showAssetWithTransaction", buf, 2u);
              }

              v115 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v102 + 40), "delegate"));
              v116 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v115, "bookPresenter"));
              v117 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "assetID"));
              v95 = v120;
              objc_msgSend(v116, "showAssetWithTransaction:assetID:location:options:completion:", v112, v117, v120, v100, 0);

              v76 = 1;
              v77 = v123;
            }
            else
            {
              v106 = sub_100131E00();
              v100 = objc_claimAutoreleasedReturnValue(v106);
              if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR))
                sub_1006A1F10((uint64_t *)v50, v100);
              v76 = 0;
            }
LABEL_103:

            v1 = v102;
            v55 = v125;
            v47 = v129;
          }
          else
          {
            if (objc_msgSend(v51, "length"))
            {
              v125 = v55;
              v96 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
              v97 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v96, "storeController"));
              v98 = objc_claimAutoreleasedReturnValue(objc_msgSend(v97, "bookUrlForStoreId:", v51));

              v99 = v1;
              v100 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "delegate"));
              v101 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject storePresenter](v100, "storePresenter"));
              v102 = v99;
              v76 = objc_msgSend(v101, "storeHandleURL:sourceApplication:annotation:isLaunch:transaction:", v98, *(_QWORD *)(v99 + 56), *(_QWORD *)(v99 + 64), *(unsigned __int8 *)(v99 + 114), *(_QWORD *)(v99 + 48));

              v95 = (id)v98;
              goto LABEL_103;
            }
            v76 = 0;
          }

LABEL_105:
          v15 = v76 != 0;
          goto LABEL_106;
        }
        v32 = objc_msgSend(v31, "caseInsensitiveCompare:", CFSTR("purchase-approved"));

        if (!v32)
          goto LABEL_37;
      }
      if (v25 == (id)++v27)
      {
        v25 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v136, v144, 16);
        if (v25)
          goto LABEL_27;
        v33 = 0;
        v1 = v127;
        v24 = BCMutableCloudSyncVersions_ptr;
        goto LABEL_47;
      }
    }
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fragment"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "query"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsSeparatedByString:", CFSTR("&")));

    v142 = 0u;
    v143 = 0u;
    v140 = 0u;
    v141 = 0u;
    v5 = v4;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v140, v147, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v141;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v141 != v8)
            objc_enumerationMutation(v5);
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v140 + 1) + 8 * (_QWORD)i), "componentsSeparatedByString:", CFSTR("=")));
          if (objc_msgSend(v10, "count") == (id)2)
          {
            v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectAtIndex:", 0));
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectAtIndex:", 1));
            if (objc_msgSend(v11, "isEqualToString:", CFSTR("id")))
            {
              v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "libraryAssetProvider"));
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "libraryAssetOnMainQueueWithStoreID:", v12));

              v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "locationFromURLFragment:", *(_QWORD *)(v1 + 32)));
              if (objc_msgSend(v17, "isPreorderBook"))
              {
                v145 = AEHelperNumberIsPreorderKey;
                v146 = &__kCFBooleanTrue;
                v121 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v146, &v145, 1));
              }
              else
              {
                v121 = 0;
              }
              v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
              v124 = objc_msgSend(*(id *)(v1 + 40), "_newShowAssetTransactionFromExistingTransaction:forAssetID:isAudiobook:", *(_QWORD *)(v1 + 48), v19, objc_msgSend(v17, "isAudiobook"));
              v126 = v17;
              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "delegate"));
              v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "bookPresenter"));
              objc_msgSend(v21, "showAssetWithTransaction:assetID:location:options:completion:", v124, v19, v18, v121, 0);

              v15 = 1;
              goto LABEL_106;
            }

          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v140, v147, 16);
      }
      while (v7);
    }

  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "delegate"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "storePresenter"));
  v15 = (uint64_t)objc_msgSend(v14, "storeHandleURL:sourceApplication:annotation:isLaunch:transaction:", *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 114), *(_QWORD *)(v1 + 48));

LABEL_106:
  v118 = objc_retainBlock(*(id *)(v1 + 80));
  v119 = v118;
  if (v118)
    (*((void (**)(id, uint64_t))v118 + 2))(v118, v15);

}

void sub_1001310B8(uint64_t a1)
{
  uint64_t v2;
  id v3;

  if (objc_msgSend(*(id *)(a1 + 32), "isAudiobook"))
    v2 = 0;
  else
    v2 = 3;
  v3 = (id)objc_claimAutoreleasedReturnValue(+[BSUIStoreServices sharedInstance](BSUIStoreServices, "sharedInstance"));
  objc_msgSend(v3, "showProductPageForStoreID:resourceType:transaction:needsAnalyticsLinkData:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 48), 0);

}

void sub_100131614(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[5];
  id v24;
  id v25;
  id v26;
  id v27;
  _QWORD block[5];
  id v29;
  id v30;
  id v31;
  id v32;
  _QWORD v33[5];
  id v34;
  id v35;
  id v36;
  id v37;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    if (*(_BYTE *)(a1 + 72))
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100131AD8;
      v18[3] = &unk_1008E78B8;
      v8 = *(void **)(a1 + 40);
      v18[4] = *(_QWORD *)(a1 + 32);
      v19 = v8;
      v20 = *(id *)(a1 + 48);
      v21 = *(id *)(a1 + 56);
      v22 = *(id *)(a1 + 64);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);

      v9 = v19;
    }
    else
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_100131A08;
      v23[3] = &unk_1008EBD40;
      v16 = *(void **)(a1 + 40);
      v23[4] = *(_QWORD *)(a1 + 32);
      v24 = v16;
      v25 = *(id *)(a1 + 48);
      v26 = *(id *)(a1 + 56);
      v27 = *(id *)(a1 + 64);
      objc_msgSend(v14, "resolveToLocalAssetWithAssetID:completion:", v15, v23);

      v9 = v24;
    }
    goto LABEL_8;
  }
  if (!v6)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001319EC;
    block[3] = &unk_1008E78B8;
    v17 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v29 = v17;
    v30 = *(id *)(a1 + 48);
    v31 = *(id *)(a1 + 56);
    v32 = *(id *)(a1 + 64);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    v9 = v29;
LABEL_8:

    goto LABEL_9;
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "delegate"));

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "libraryAssetIsNewManager"));
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10013191C;
  v33[3] = &unk_1008E78B8;
  v13 = *(void **)(a1 + 40);
  v33[4] = *(_QWORD *)(a1 + 32);
  v34 = v13;
  v35 = *(id *)(a1 + 48);
  v36 = *(id *)(a1 + 56);
  v37 = *(id *)(a1 + 64);
  objc_msgSend(v12, "updateLibraryAssetEpubIDsHandling:foundAssetHandler:", v7, v33);

LABEL_9:
}

void sub_10013191C(uint64_t a1)
{
  void *v2;
  _QWORD block[5];
  id v4;
  id v5;
  id v6;
  id v7;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001319D0;
  block[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_1001319D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleURL:sourceApplication:annotation:isLaunch:transaction:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 64), 0);
}

id sub_1001319EC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleURL:sourceApplication:annotation:isLaunch:transaction:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 64), 0);
}

void sub_100131A08(uint64_t a1)
{
  void *v2;
  _QWORD block[5];
  id v4;
  id v5;
  id v6;
  id v7;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100131ABC;
  block[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_100131ABC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleURL:sourceApplication:annotation:isLaunch:transaction:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 64), 0);
}

id sub_100131AD8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleURL:sourceApplication:annotation:isLaunch:transaction:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 64), 0);
}

void sub_100131AF4(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;
  id v6;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100131B94;
  v3[3] = &unk_1008E8EE0;
  v2 = *(void **)(a1 + 40);
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

}

void sub_100131B94(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = a1[6];
  v7 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "p_libraryAssetFromIbooksSchemeURL:remainingPath:needsBookID:transaction:", v3, 0, &v7, v4));
  v6 = v7;
  (*(void (**)(void))(a1[7] + 16))();

}

id sub_100131E00()
{
  if (qword_1009F5098 != -1)
    dispatch_once(&qword_1009F5098, &stru_1008EBD88);
  return (id)qword_1009F5090;
}

void sub_100131E40(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKAppURLHandler");
  v2 = (void *)qword_1009F5090;
  qword_1009F5090 = (uint64_t)v1;

}

void sub_100131F74(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bkaxTarget"));
  objc_msgSend(v1, "handleTapIfPossible");

}

id sub_10013213C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleTapIfPossible");
}

void sub_10013262C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a2 != 0));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 32);
  *(_QWORD *)(v4 + 32) = v3;

}

void sub_100133770(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100133844;
    v10[3] = &unk_1008E9D38;
    v7 = *(void **)(a1 + 40);
    v11 = *(id *)(a1 + 32);
    v12 = v7;
    objc_msgSend(v11, "fetchAssetsWithIDs:completion:", v5, v10);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 40));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD, id))v8 + 2))(v8, 0, v6);

  }
}

void sub_100133844(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSMutableArray *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v5 = a2;
  v6 = a3;
  v7 = objc_opt_new(NSMutableArray);
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v20;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v20 != v11)
          objc_enumerationMutation(v8);
        v13 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v12);
        v14 = objc_opt_class(BKPlistAsset);
        v15 = BUDynamicCast(v14, v13);
        v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        if (v16
          && objc_msgSend(*(id *)(a1 + 32), "isEligibleLocalBookToBeMadeUbiquitous:", v16, (_QWORD)v19))
        {
          -[NSMutableArray addObject:](v7, "addObject:", v16);
        }

        v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v10);
  }

  v17 = objc_retainBlock(*(id *)(a1 + 40));
  v18 = v17;
  if (v17)
    (*((void (**)(id, NSMutableArray *, id))v17 + 2))(v17, v7, v6);

}

void sub_100133B1C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v9 = a2;
  if (objc_msgSend(v9, "count"))
  {
    v3 = objc_opt_class(BKPlistAsset);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "firstObject"));
    v5 = BUDynamicCast(v3, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  }
  else
  {
    v6 = 0;
  }
  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(id, void *, _QWORD))v7 + 2))(v7, v6, 0);

}

void sub_100133CE0(id *a1)
{
  id v1;
  uint64_t v2;
  void *i;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id obj;
  void *v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  id v29;
  id location;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];

  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = a1[4];
  v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
  if (v1)
  {
    v21 = 0;
    v2 = *(_QWORD *)v33;
    do
    {
      for (i = 0; i != v1; i = (char *)i + 1)
      {
        if (*(_QWORD *)v33 != v2)
          objc_enumerationMutation(obj);
        v4 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)i);
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "url", v21));
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist purchasesRepositoryPath](IMLibraryPlist, "purchasesRepositoryPath"));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastPathComponent"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "bu_nonCollidingNameForFileName:inDestPath:", v7, v6));

        v9 = objc_alloc((Class)NSURL);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByAppendingPathComponent:", v8));
        v11 = objc_msgSend(v9, "initFileURLWithPath:", v10);

        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "plistAssetWithAsset:andURL:", v4, v11));
        if (v12)
        {
          v31 = 0;
          v13 = objc_msgSend(v24, "setUbiquitous:itemAtURL:destinationURL:error:", 0, v5, v11, &v31);
          v14 = v31;
          v15 = v14;
          if (v13)
          {
            objc_msgSend(a1[6], "addObject:", v12);
          }
          else if (v14)
          {
            v16 = v14;

            v21 = v16;
          }

        }
      }
      v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
    }
    while (v1);
  }
  else
  {
    v21 = 0;
  }

  if (objc_msgSend(a1[6], "count"))
  {
    objc_initWeak(&location, a1[5]);
    v17 = a1[5];
    v18 = a1[6];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_10013404C;
    v25[3] = &unk_1008EBDD8;
    objc_copyWeak(&v29, &location);
    v26 = a1[6];
    v28 = a1[7];
    v27 = v21;
    objc_msgSend(v17, "addPlistAssets:completion:", v18, v25);

    objc_destroyWeak(&v29);
    objc_destroyWeak(&location);
  }
  else
  {
    v19 = objc_retainBlock(a1[7]);
    v20 = v19;
    if (v19)
      (*((void (**)(id, _QWORD, void *))v19 + 2))(v19, 0, v21);

  }
}

void sub_100134028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013404C(uint64_t a1, uint64_t a2, void *a3)
{
  id WeakRetained;
  void *v6;
  void (**v7)(id, _QWORD, id);
  id v8;
  id v9;

  v9 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryManager"));
  objc_msgSend(v6, "libraryDataSource:addedAssets:", WeakRetained, *(_QWORD *)(a1 + 32));

  objc_msgSend(WeakRetained, "reload");
  v7 = (void (**)(id, _QWORD, id))objc_retainBlock(*(id *)(a1 + 48));
  if (v7)
  {
    v8 = v9;
    if (!v9)
      v8 = *(id *)(a1 + 40);
    v7[2](v7, a2, v8);
  }

}

void sub_1001349DC(id a1)
{
  +[UIView replaceInstanceSelector:withSelector:](UIView, "replaceInstanceSelector:withSelector:", "_shouldAnimatePropertyWithKey:", "bk_shouldAnimatePropertyWithKey:");
}

id sub_1001351FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_currentActionComplete");
}

void sub_100135598(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  objc_msgSend(v5, "setFrame:", v1, v2, v3, v4);

}

id sub_100135608(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  UIAccessibilityNotifications v4;
  void *v5;
  void *v6;
  void *v7;
  uint8_t v9[16];

  v2 = BCAugmentedExperienceLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BKToastPresenter toast presentation animation complete", v9, 2u);
  }

  v4 = UIAccessibilityAnnouncementNotification;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("Recommendations for next book available. Check it out using the containers rotor."), &stru_10091C438, 0));
  UIAccessibilityPostNotification(v4, v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  objc_msgSend(v7, "toastPresenter:didPresentToastInViewController:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_currentActionComplete");
}

void sub_100135C14(uint64_t a1, void *a2)
{
  id v3;
  BKEndOfBookCompactViewController *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  BKEndOfBookCompactViewController *v8;
  uint64_t v9;
  BKEndOfBookCompactViewController *v10;
  _QWORD v11[4];
  BKEndOfBookCompactViewController *v12;
  id v13;
  id v14;
  id v15;
  id location;
  _QWORD v17[2];
  _QWORD v18[2];

  v3 = a2;
  v4 = [BKEndOfBookCompactViewController alloc];
  v5 = *(_QWORD *)(a1 + 32);
  v17[0] = CFSTR("storeId");
  v17[1] = CFSTR("additionalSeeds");
  v6 = &__NSArray0__struct;
  if (v3)
    v6 = v3;
  v18[0] = v5;
  v18[1] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v18, v17, 2));
  v8 = -[BKEndOfBookCompactViewController initWithOptions:](v4, "initWithOptions:", v7);

  -[BKEndOfBookCompactViewController setPageProgressionIsRTL:](v8, "setPageProgressionIsRTL:", *(unsigned __int8 *)(a1 + 64));
  -[BKEndOfBookCompactViewController setDelegate:](v8, "setDelegate:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 40), "setToastViewController:", v8);
  objc_initWeak(&location, *(id *)(a1 + 40));
  v9 = *(_QWORD *)(a1 + 48);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100135DF0;
  v11[3] = &unk_1008EBE78;
  objc_copyWeak(&v15, &location);
  v10 = v8;
  v12 = v10;
  v13 = *(id *)(a1 + 32);
  v14 = *(id *)(a1 + 56);
  -[BKEndOfBookCompactViewController preloadContentWithViewController:completion:](v10, "preloadContentWithViewController:completion:", v9, v11);

  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);

}

void sub_100135DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100135DF0(id *a1, int a2)
{
  id *v4;
  id WeakRetained;
  uint64_t v6;
  NSObject *v7;
  const __CFString *v8;
  id v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  _QWORD v27[4];
  NSObject *v28;
  id v29;
  id v30;
  id v31[2];
  uint8_t buf[4];
  id v33;
  __int16 v34;
  const __CFString *v35;

  v4 = a1 + 7;
  WeakRetained = objc_loadWeakRetained(a1 + 7);
  v6 = ((uint64_t (*)(void))BCAugmentedExperienceLog)();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = CFSTR("NO");
    if (a2)
      v8 = CFSTR("YES");
    *(_DWORD *)buf = 138412546;
    v33 = WeakRetained;
    v34 = 2112;
    v35 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@: preloadPresentation (success: %@)", buf, 0x16u);
  }

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "toastViewController"));
  v10 = v9 == a1[4];

  if (v10)
  {
    if (a2)
    {
      v14 = BCAugmentedExperienceLog(v11);
      v15 = objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v33 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%@: preloadPresentation getting resource dictionary from compact feed", buf, 0xCu);
      }

      v16 = BCAugmentedExperienceSignpost();
      v17 = objc_claimAutoreleasedReturnValue(v16);
      v18 = (char *)os_signpost_id_generate(v17);

      v19 = BCAugmentedExperienceSignpost();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      v21 = v20;
      if ((unint64_t)(v18 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v20))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)v18, "EOB.Toast.preload", "", buf, 2u);
      }

      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "feedViewController"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_100136184;
      v27[3] = &unk_1008EBE50;
      v13 = v22;
      v28 = v13;
      objc_copyWeak(v31, v4);
      v31[1] = v18;
      v29 = a1[5];
      v30 = a1[6];
      objc_msgSend(v23, "enqueueBlock:file:line:", v27, CFSTR("BKToastPresenter.m"), 261);

      objc_destroyWeak(v31);
    }
    else
    {
      v24 = BCAugmentedExperienceLog(objc_msgSend(WeakRetained, "setToastViewController:", 0));
      v25 = objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v33 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "%@: preloadPresentation preloading failed", buf, 0xCu);
      }

      v26 = objc_retainBlock(a1[6]);
      v13 = v26;
      if (v26)
        ((void (*)(NSObject *, uint64_t))v26[2].isa)(v26, 1);
    }
  }
  else
  {
    v12 = BCAugmentedExperienceLog(v11);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v33 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%@: preloadPresentation the presentation had been cancelled during preload", buf, 0xCu);
    }
  }

}

void sub_100136168(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100136184(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id WeakRetained;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_signpost_id_t v11;
  const __CFString *v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  id v18;
  uint8_t buf[4];
  const __CFString *v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feed"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "valueForProperty:", CFSTR("resourceDictionary")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "toDictionary"));
  if (!v4)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v6 = BCAugmentedExperienceLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006A1FF8((uint64_t)WeakRetained, (uint64_t)v3, v7);

  }
  v8 = BCAugmentedExperienceSignpost();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 64);
  if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    v12 = CFSTR("YES");
    if (!v4)
      v12 = CFSTR("NO");
    *(_DWORD *)buf = 138412290;
    v20 = v12;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "EOB.Toast.preload", "Success: %@", buf, 0xCu);
  }

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100136378;
  v14[3] = &unk_1008EAE70;
  objc_copyWeak(&v18, (id *)(a1 + 56));
  v15 = *(id *)(a1 + 40);
  v16 = v4;
  v17 = *(id *)(a1 + 48);
  v13 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

  objc_destroyWeak(&v18);
}

void sub_100136378(uint64_t a1)
{
  id WeakRetained;
  BKEndOfBookCardViewController *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  void *v9;
  int v10;
  id v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = -[BKEndOfBookCardViewController initWithStoreID:resource:]([BKEndOfBookCardViewController alloc], "initWithStoreID:resource:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  objc_msgSend(WeakRetained, "setCardViewController:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "toastViewController"));
  objc_msgSend(v5, "setCardViewController:", v4);

  v6 = BCAugmentedExperienceLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v10 = 138412290;
    v11 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@: preloadPresentation preloading succeeded", (uint8_t *)&v10, 0xCu);
  }

  v8 = objc_retainBlock(*(id *)(a1 + 48));
  v9 = v8;
  if (v8)
    (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);

}

void sub_1001364AC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;
  __int16 v18;
  id v19;

  v5 = a2;
  v6 = a3;
  v7 = BCAugmentedExperienceLog(v6);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006A2068(a1, (uint64_t)v6, v9);
  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v10 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    v17 = v10;
    v18 = 2048;
    v19 = objc_msgSend(v5, "count");
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%@: loaded %lu additional seeds", buf, 0x16u);
  }

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100136614;
  v13[3] = &unk_1008E7950;
  v11 = *(id *)(a1 + 40);
  v14 = v5;
  v15 = v11;
  v12 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

}

uint64_t sub_100136614(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100136874(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  objc_msgSend(v5, "setFrame:", v1, v2, v3, v4);

}

id sub_1001368E4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint8_t v11[16];

  v2 = BCAugmentedExperienceLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BKToastPresenter toast dismissed animation complete", v11, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  objc_msgSend(v4, "willMoveToParentViewController:", 0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  objc_msgSend(v5, "removeFromParentViewController");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  objc_msgSend(v7, "removeFromSuperview");

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  objc_msgSend(v8, "didMoveToParentViewController:", 0);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toastViewController"));
  objc_msgSend(v9, "toastPresenterDidDismissToast:", *(_QWORD *)(a1 + 32));

  return objc_msgSend(*(id *)(a1 + 32), "_currentActionComplete");
}

void sub_1001373A4(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_1009F50B8;
  qword_1009F50B8 = v1;

}

void sub_100137698(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1001376C0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100137764;
  v5[3] = &unk_1008E7F50;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100137764(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained && (objc_msgSend(WeakRetained, "isSeriesCollection") & 1) == 0)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "frc"));
    objc_msgSend(v3, "performFetch:", 0);

    objc_msgSend(v6, "updateCounts");
  }
  v4 = objc_retainBlock(*(id *)(a1 + 32));
  v5 = v4;
  if (v4)
    (*((void (**)(id))v4 + 2))(v4);

}

id sub_100138F54(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateCounts");
  objc_msgSend(*(id *)(a1 + 32), "updateCloudButton");
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100139554(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_100139730(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "sortModeDidChange");
}

id sub_100139738(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateAndLayoutCloudButtonAnimated");
}

void sub_100139740(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryAssetStatusController sharedController](BKLibraryAssetStatusController, "sharedController"));
  if (objc_msgSend(v3, "uploadStatus") == (id)3)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uploadProgressNavigationController"));

    if (!v2)
      objc_msgSend(v3, "removeCompletedUploads");
  }
  objc_msgSend(*(id *)(a1 + 32), "updateAndLayoutCloudButtonAnimated");

}

id sub_1001397B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateAndLayoutCloudButtonAnimated");
}

id sub_100139810(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateAndLayoutCloudButtonAnimated");
}

BOOL sub_10013A02C(int a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  if (a1 && (a3 < 0.0500000007 && a7 < 0.0500000007 || a5 < 0.0149999997 && a9 < 0.0149999997))
  {
    *(_QWORD *)&v35 = sub_10007F990(a2, a3, a4);
    *((_QWORD *)&v35 + 1) = v23;
    v36 = v24;
    v37 = v25;
    *(_QWORD *)&v32 = sub_10007F990(a6, a7, a8);
    *((_QWORD *)&v32 + 1) = v26;
    v33 = v27;
    v34 = v28;
    if (sub_10007FC4C(&v35, &v32) <= 1.65999997)
      return 1;
  }
  if (vabdd_f64(a3, a7) > a10 || vabdd_f64(a4, a8) > a10)
    return 0;
  if (vabdd_f64(a2, a6) <= a10)
    return 1;
  v29 = a2 + 1.0;
  if (a2 >= a10)
    v29 = a2;
  v30 = a6 + 1.0;
  if (a6 >= a10)
    v30 = a6;
  return vabdd_f64(v29, v30) <= a10;
}

uint64_t sub_10013A150(uint64_t a1)
{
  sub_10007F5BC((_QWORD *)(a1 + 32));
  sub_10007F5BC((_QWORD *)(a1 + 64));
  sub_10007F5BC((_QWORD *)(a1 + 96));
  sub_10007F5BC((_QWORD *)(a1 + 128));
  sub_10007F5BC((_QWORD *)(a1 + 160));
  sub_10007F5BC((_QWORD *)(a1 + 192));
  sub_10007F5BC((_QWORD *)(a1 + 224));
  sub_10007F5BC((_QWORD *)(a1 + 256));
  sub_10007F5BC((_QWORD *)(a1 + 288));
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  return a1;
}

uint64_t sub_10013A1C8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  if (v2)
  {
    free(v2);
    *(_QWORD *)a1 = 0;
  }
  v3 = *(void **)(a1 + 8);
  if (v3)
  {
    free(v3);
    *(_QWORD *)(a1 + 8) = 0;
  }
  v4 = *(void **)(a1 + 344);
  if (v4)
  {
    *(_QWORD *)(a1 + 352) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 320);
  if (v5)
  {
    *(_QWORD *)(a1 + 328) = v5;
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_10013A228(double *a1, CGContext *a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  result = sub_10013A280(a1, a2);
  if ((_DWORD)result)
  {
    result = sub_10013A470(a1);
    if ((_DWORD)result)
    {
      sub_10013A824((uint64_t)a1);
      sub_10013A9D8((uint64_t)a1);
      sub_10013AF18((uint64_t)a1);
      return 1;
    }
  }
  return result;
}

uint64_t sub_10013A280(double *a1, CGContextRef context)
{
  int Width;
  int Height;
  uint64_t result;
  __int16 BitmapInfo;
  double v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  size_t BytesPerRow;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33[2];

  if (!context)
    return 0;
  BytesPerRow = CGBitmapContextGetBytesPerRow(context);
  Width = CGBitmapContextGetWidth(context);
  Height = CGBitmapContextGetHeight(context);
  result = 0;
  if (Height == 22 && Width == 22)
  {
    sub_10007F5BC(v32);
    BitmapInfo = CGBitmapContextGetBitmapInfo(context);
    result = (uint64_t)CGBitmapContextGetData(context);
    v29 = result;
    if (result)
    {
      result = (uint64_t)malloc_type_calloc((22 * Width), 0x20uLL, 0x1000040E0EAB150uLL);
      *(_QWORD *)a1 = result;
      if (result)
      {
        v11 = 0;
        v12 = BitmapInfo & 0x3000;
        v13 = 1;
        v14 = 24;
        do
        {
          v15 = 0;
          v31 = v14;
          do
          {
            v16 = v29 + BytesPerRow * v13 + v15;
            if (v12)
              v17 = 6;
            else
              v17 = 5;
            if (v12)
              v18 = 5;
            else
              v18 = 6;
            if (v12)
              v19 = 4;
            else
              v19 = 7;
            LOBYTE(v8) = *(_BYTE *)(v16 + v17);
            LOBYTE(v9) = *(_BYTE *)(v16 + v18);
            LOBYTE(v10) = *(_BYTE *)(v16 + v19);
            sub_10007F824((double *)v33, (double)*(unint64_t *)&v8 / 255.0, (double)*(unint64_t *)&v9 / 255.0, (double)v10 / 255.0, 1.0);
            v32[0] = v33[0];
            v32[1] = v33[1];
            v20 = sub_10007F9CC((double *)v33);
            v22 = v21;
            v24 = v23;
            sub_10007FB30(v33);
            v25 = *a1;
            v26 = (double *)(*(_QWORD *)a1 + v14);
            *(v26 - 3) = v20;
            v27 = *(_QWORD *)&v25 + v11 + 8 * v15;
            *(_QWORD *)(v27 + 8) = v22;
            *(_QWORD *)(v27 + 16) = v24;
            *v26 = v28;
            v9 = a1[47];
            v8 = v28 + v9;
            a1[47] = v8;
            v15 += 4;
            v14 += 32;
          }
          while ((_DWORD)v15 != 80);
          ++v13;
          v14 = v31 + 640;
          v11 += 640;
        }
        while (v13 != 21);
        a1[47] = v8 / 400.0;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_10013A470(_QWORD *a1)
{
  uint64_t result;
  _BYTE *v3;
  uint64_t v4;
  double *v5;
  unint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  double *v17;
  uint64_t v18;
  double *v19;
  char *v20;
  double *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned int (*v27)(_QWORD, _QWORD);
  unsigned int (*v28)(_QWORD, _QWORD);
  unsigned int (*v29)(_QWORD, _QWORD);
  unsigned int (*v30)(_QWORD, _QWORD);
  _BOOL8 v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  unint64_t v36;
  double *v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  _OWORD *v41;
  __int128 v42;
  _OWORD *v43;
  unsigned int (*v44[4])(_QWORD, _QWORD);
  int v45;
  double v46;
  void *__p;
  double *v48;
  double *v49;

  result = (uint64_t)malloc_type_calloc(0x190uLL, 8uLL, 0x100004000313F17uLL);
  a1[1] = result;
  if (result)
  {
    result = (uint64_t)malloc_type_calloc(0x190uLL, 1uLL, 0x100004077774924uLL);
    if (result)
    {
      v3 = (_BYTE *)result;
      v4 = 0;
      v5 = 0;
      v6 = 0;
      __p = 0;
      v48 = 0;
      v49 = 0;
      v7 = 1;
      do
      {
        if (!v3[v6])
        {
          v8 = (double *)(*a1 + 32 * v6);
          v9 = *v8;
          v10 = v8[1];
          v11 = v8[2];
          v12 = v8[3];
          v13 = sub_10013B1BC(result, v6 - 20 * ((unsigned __int16)v6 / 0x14u), (unsigned __int16)v6 / 0x14u);
          v14 = v13;
          v48 = v5;
          if (v5 >= v49)
          {
            v15 = 0x5555555555555556 * (((char *)v49 - (char *)v5) >> 4);
            if (v15 <= 1)
              v15 = 1;
            if (0xAAAAAAAAAAAAAAABLL * (((char *)v49 - (char *)v5) >> 4) >= 0x2AAAAAAAAAAAAAALL)
              v16 = 0x555555555555555;
            else
              v16 = v15;
            v17 = (double *)sub_10013BE6C((uint64_t)&v49, v16);
            *v17 = v9;
            v17[1] = v10;
            v17[2] = v11;
            v17[3] = v12;
            *((_DWORD *)v17 + 8) = v6;
            v17[5] = v14;
            v20 = (char *)__p;
            v19 = v48;
            v21 = v17;
            if (v48 != __p)
            {
              do
              {
                v22 = *((_OWORD *)v19 - 3);
                v23 = *((_OWORD *)v19 - 1);
                *((_OWORD *)v21 - 2) = *((_OWORD *)v19 - 2);
                *((_OWORD *)v21 - 1) = v23;
                *((_OWORD *)v21 - 3) = v22;
                v21 -= 6;
                v19 -= 6;
              }
              while (v19 != (double *)v20);
              v19 = (double *)v20;
            }
            v5 = v17 + 6;
            __p = v21;
            v48 = v17 + 6;
            v49 = &v17[6 * v18];
            if (v19)
              operator delete(v19);
          }
          else
          {
            *v5 = v9;
            v5[1] = v10;
            v5[2] = v11;
            v5[3] = v12;
            *((_DWORD *)v5 + 8) = v6;
            v5[5] = v13;
            v5 += 6;
          }
          v48 = v5;
          *(double *)(a1[1] + 8 * v6) = v14;
          v3[v6] = 1;
          if (v6 <= 0x18E)
          {
            v24 = v4;
            v25 = v7;
            do
            {
              if (!v3[v25])
              {
                v26 = (_QWORD *)(*a1 + v24);
                v27 = (unsigned int (*)(_QWORD, _QWORD))v26[4];
                v28 = (unsigned int (*)(_QWORD, _QWORD))v26[5];
                v29 = (unsigned int (*)(_QWORD, _QWORD))v26[6];
                v30 = (unsigned int (*)(_QWORD, _QWORD))v26[7];
                v31 = sub_10013A02C(0, v9, v10, v11, v12, *(double *)&v27, *(double *)&v28, *(double *)&v29, *(double *)&v30, 0.0799999982);
                if (v31)
                {
                  v32 = sub_10013B1BC(v31, v25 - 20 * ((unsigned __int16)v25 / 0x14u), (unsigned __int16)v25 / 0x14u);
                  v44[0] = v27;
                  v44[1] = v28;
                  v44[2] = v29;
                  v44[3] = v30;
                  v45 = v25;
                  v46 = v32;
                  sub_10013AFF8(v33, (double *)v44, &__p);
                  v3[v25] = 1;
                }
              }
              ++v25;
              v24 += 32;
            }
            while (v25 != 400);
            v5 = v48;
          }
          result = (uint64_t)__p;
          if (v5 != __p)
          {
            v44[0] = (unsigned int (*)(_QWORD, _QWORD))sub_10013B28C;
            sub_10013BED8((__int128 *)__p, (__int128 *)v5, v44, 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)__p) >> 4)), 1);
            v5 = (double *)__p;
            v34 = *((unsigned int *)__p + 8);
            v35 = *((double *)__p + 5);
            v36 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (_BYTE *)__p) >> 4);
            if (v36 >= 2)
            {
              v37 = (double *)((char *)__p + 88);
              v38 = v36 - 1;
              do
              {
                v39 = *((unsigned int *)v37 - 2);
                v40 = *v37;
                if (!v3[v39])
                  v3[v39] = 1;
                v35 = v35 + v40;
                v37 += 6;
                v41 = (_OWORD *)(*a1 + 32 * v34);
                v42 = v41[1];
                v43 = (_OWORD *)(*a1 + 32 * v39);
                *v43 = *v41;
                v43[1] = v42;
                --v38;
              }
              while (v38);
            }
            *(double *)(a1[1] + 8 * v34) = v35;
          }
        }
        ++v6;
        ++v7;
        v4 += 32;
      }
      while (v6 != 400);
      free(v3);
      if (__p)
      {
        v48 = (double *)__p;
        operator delete(__p);
      }
      return 1;
    }
  }
  return result;
}

void sub_10013A800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10013A824(uint64_t a1)
{
  double v2;
  void **v3;
  __int128 v4;
  __int128 v5;
  double v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t i;
  double *v11;
  double v12;
  double v13;
  double v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  __int128 v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  __int128 v31;
  __int128 v32;

  v2 = *(double *)(a1 + 376);
  v3 = sub_10013B2A0(a1);
  v4 = *((_OWORD *)*v3 + 1);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)*v3;
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v31 = *(_OWORD *)(a1 + 32);
  v32 = v5;
  if (sub_10007FCA4(&v31, 0.180000007) < 1.29999995)
  {
    v6 = sub_10007FCA4((__int128 *)(a1 + 32), 0.180000007);
    v7 = (unint64_t)((_BYTE *)v3[1] - (_BYTE *)*v3) >> 5;
    if ((int)v7 >= 2)
    {
      v8 = v6;
      if ((_DWORD)v7 == 2)
        v9 = 2;
      else
        v9 = 3;
      for (i = 1; i != v9; ++i)
      {
        v11 = *(double **)(a1 + 344);
        v12 = v11[i];
        if (v12 <= 0.0)
          break;
        v13 = *v11 / v12;
        if (v13 <= 0.9 || v13 >= 1.112)
          break;
        v14 = sub_10007FCA4((__int128 *)*v3 + 2 * i, 0.180000007);
        if (v14 > v8)
        {
          v15 = (char *)*v3 + 32 * i;
          v16 = v15[1];
          *(_OWORD *)(a1 + 32) = *v15;
          *(_OWORD *)(a1 + 48) = v16;
          v8 = v14;
        }
      }
    }
  }
  v17 = *(_OWORD *)(a1 + 48);
  v31 = *(_OWORD *)(a1 + 32);
  v32 = v17;
  if (sub_10007FCA4(&v31, 0.180000007) < 1.29999995)
  {
    v18 = sub_10007F9CC((double *)(a1 + 32));
    v20 = v19;
    v22 = v21;
    v28 = v18;
    v29 = v19;
    v30 = v21;
    if (v2 < 0.180000007
      || (v23 = *(_OWORD *)(a1 + 48), v31 = *(_OWORD *)(a1 + 32), v32 = v23, sub_10007FB30(&v31), v24 < 0.180000007))
    {
      v29 = v20 * 1.10000002;
      v30 = v22 * 0.800000012;
    }
    *(double *)(a1 + 32) = sub_10007F830(&v28);
    *(_QWORD *)(a1 + 40) = v25;
    *(_QWORD *)(a1 + 48) = v26;
    *(_QWORD *)(a1 + 56) = v27;
  }
}

void sub_10013A9D8(uint64_t a1)
{
  void **v2;
  unint64_t v3;
  unint64_t v4;
  void **v5;
  double v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  double v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  double v58;
  double v59;
  __int128 v60;
  double v61;
  double v62;
  __int128 v63;
  double v64;
  __int128 v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  double v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  unsigned int v81;
  unsigned int v82;
  _QWORD v83[4];
  __int128 v84;
  __int128 v85;

  v2 = sub_10013B2A0(a1);
  v3 = (_BYTE *)v2[1] - (_BYTE *)*v2;
  v4 = v3 >> 5;
  if ((v3 >> 5) < 2)
  {
    v38 = 0;
    v39 = 0;
    goto LABEL_28;
  }
  v5 = v2;
  v6 = sub_10007FC4C((__int128 *)*v2 + 2, (__int128 *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = (v3 >> 5);
  v10 = 1;
  v81 = v4;
  v11 = v4;
  v12 = 1;
  v82 = 1;
  v13 = v6;
  do
  {
    v14 = (__int128 *)((char *)*v5 + v7);
    v15 = v14[1];
    v84 = *v14;
    v85 = v15;
    if ((v8 & 1) == 0
      && sub_10013B5DC(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_10013B698(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(_QWORD *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v17;
      *(_QWORD *)(a1 + 80) = v18;
      *(_QWORD *)(a1 + 88) = v19;
      v8 = 1;
      v11 = v10;
    }
    v20 = sub_10007FC4C(&v84, (__int128 *)(a1 + 32));
    if (v20 > v13)
    {
      if (v20 <= v6)
      {
        v13 = v20;
        v82 = v10 - 1;
      }
      else
      {
        v13 = v6;
        v6 = v20;
        v82 = v12;
        v12 = v10 - 1;
      }
    }
    ++v10;
    v7 += 32;
  }
  while (32 * v9 != v7);
  if (v11 >= v81)
  {
LABEL_15:
    sub_10007F5BC(&v84);
    v29 = 0;
    if ((v8 & 1) != 0)
    {
      LODWORD(v4) = v81;
      goto LABEL_24;
    }
    LOBYTE(v21) = 1;
    goto LABEL_17;
  }
  v21 = 0;
  v22 = 32 * v11;
  v23 = v11;
  while (1)
  {
    v24 = (double *)((char *)*v5 + v22);
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    if (sub_10013B754(*v24, v26, v27, v28, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      break;
    }
    v21 = ++v23 >= v9;
    v22 += 32;
    if (v9 == v23)
      goto LABEL_15;
  }
  sub_10013B698(v25, v26, v27, v28, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
  *(_QWORD *)(a1 + 96) = v40;
  *(_QWORD *)(a1 + 104) = v41;
  *(_QWORD *)(a1 + 112) = v42;
  *(_QWORD *)(a1 + 120) = v43;
  if ((v8 & ~v21 & 1) != 0)
  {
    v39 = 1;
    v29 = 1;
    LODWORD(v4) = v81;
    goto LABEL_27;
  }
  sub_10007F5BC(&v84);
  v29 = 1;
  if ((v8 & 1) == 0)
  {
LABEL_17:
    sub_10013B698(*((double *)*v5 + 4 * v12), *((double *)*v5 + 4 * v12 + 1), *((double *)*v5 + 4 * v12 + 2), *((double *)*v5 + 4 * v12 + 3), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.200000003);
    *(double *)&v84 = v30;
    *((double *)&v84 + 1) = v31;
    *(double *)&v85 = v32;
    *((double *)&v85 + 1) = v33;
    if (sub_10013B754(v30, v31, v32, v33, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_10013B698(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(_QWORD *)(a1 + 64) = v34;
      *(_QWORD *)(a1 + 72) = v35;
      *(_QWORD *)(a1 + 80) = v36;
      *(_QWORD *)(a1 + 88) = v37;
      LOBYTE(v8) = 1;
    }
  }
  LODWORD(v4) = v81;
  if ((v21 & 1) != 0)
  {
LABEL_24:
    sub_10013B698(*((double *)*v5 + 4 * v82), *((double *)*v5 + 4 * v82 + 1), *((double *)*v5 + 4 * v82 + 2), *((double *)*v5 + 4 * v82 + 3), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.200000003);
    *(double *)&v84 = v44;
    *((double *)&v84 + 1) = v45;
    *(double *)&v85 = v46;
    *((double *)&v85 + 1) = v47;
    if (sub_10013B754(v44, v45, v46, v47, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_10013B698(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(_QWORD *)(a1 + 96) = v48;
      *(_QWORD *)(a1 + 104) = v49;
      *(_QWORD *)(a1 + 112) = v50;
      *(_QWORD *)(a1 + 120) = v51;
      v29 = 1;
    }
  }
  v39 = v8;
LABEL_27:
  v38 = v29 != 0;
LABEL_28:
  v52 = *(_OWORD *)(a1 + 48);
  v84 = *(_OWORD *)(a1 + 32);
  v85 = v52;
  sub_10007FB30(&v84);
  v53 = (__int128 *)(a1 + 64);
  v55 = *(_QWORD *)(a1 + 72);
  v54 = *(_QWORD *)(a1 + 80);
  v56 = *(_QWORD *)(a1 + 88);
  v57 = (__int128 *)(a1 + 96);
  if (v58 >= 0.180000007)
  {
    *(_QWORD *)&v84 = *(_QWORD *)(a1 + 64);
    *((_QWORD *)&v84 + 1) = v55;
    *(_QWORD *)&v85 = v54;
    *((_QWORD *)&v85 + 1) = v56;
    sub_10007FB30(&v84);
    if (v59 >= 0.180000007)
      v39 = 0;
    v60 = *(_OWORD *)(a1 + 112);
    v84 = *(_OWORD *)(a1 + 96);
    v85 = v60;
    sub_10007FB30(&v84);
    if (v61 >= 0.180000007)
      v38 = 0;
    if ((v39 & 1) != 0)
      goto LABEL_49;
LABEL_40:
    v65 = *(_OWORD *)(a1 + 48);
    v84 = *(_OWORD *)(a1 + 32);
    v85 = v65;
    sub_10007FB30(&v84);
    if (v66 < 0.180000007)
    {
      if (!(_DWORD)v4)
      {
        sub_10007F810((uint64_t)&v84, 1.0, 1.0, 1.0);
        goto LABEL_48;
      }
      sub_10007F810((uint64_t)v83, 1.0, 1.0, 1.0);
    }
    else
    {
      if (!(_DWORD)v4)
      {
        sub_10007F5BC(&v84);
        goto LABEL_48;
      }
      sub_10007F5BC(v83);
    }
    *(_QWORD *)&v84 = sub_10007FCE4((uint64_t)v83, 0.0500000007, *(double *)(a1 + 32));
    *((_QWORD *)&v84 + 1) = v67;
    *(_QWORD *)&v85 = v68;
    *((_QWORD *)&v85 + 1) = v69;
LABEL_48:
    v70 = v85;
    *v53 = v84;
    *(_OWORD *)(a1 + 80) = v70;
    goto LABEL_49;
  }
  *(_QWORD *)&v84 = *(_QWORD *)(a1 + 64);
  *((_QWORD *)&v84 + 1) = v55;
  *(_QWORD *)&v85 = v54;
  *((_QWORD *)&v85 + 1) = v56;
  sub_10007FB30(&v84);
  if (v62 < 0.180000007)
    v39 = 0;
  v63 = *(_OWORD *)(a1 + 112);
  v84 = *(_OWORD *)(a1 + 96);
  v85 = v63;
  sub_10007FB30(&v84);
  if (v64 < 0.180000007)
    v38 = 0;
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_49:
  if (v38)
    goto LABEL_59;
  v71 = *(_OWORD *)(a1 + 48);
  v84 = *(_OWORD *)(a1 + 32);
  v85 = v71;
  sub_10007FB30(&v84);
  if (v72 < 0.180000007)
  {
    if (!(_DWORD)v4)
    {
      sub_10007F810((uint64_t)&v84, 1.0, 1.0, 1.0);
      goto LABEL_58;
    }
    sub_10007F810((uint64_t)v83, 1.0, 1.0, 1.0);
  }
  else
  {
    if (!(_DWORD)v4)
    {
      sub_10007F5BC(&v84);
      goto LABEL_58;
    }
    sub_10007F5BC(v83);
  }
  *(_QWORD *)&v84 = sub_10007FCE4((uint64_t)v83, 0.100000001, *(double *)(a1 + 32));
  *((_QWORD *)&v84 + 1) = v73;
  *(_QWORD *)&v85 = v74;
  *((_QWORD *)&v85 + 1) = v75;
LABEL_58:
  v76 = v85;
  *v57 = v84;
  *(_OWORD *)(a1 + 112) = v76;
LABEL_59:
  v77 = sub_10007FC4C((__int128 *)(a1 + 64), (__int128 *)(a1 + 32));
  if (sub_10007FC4C((__int128 *)(a1 + 96), (__int128 *)(a1 + 32)) > v77)
  {
    v79 = *v53;
    v78 = *(_OWORD *)(a1 + 80);
    v80 = *(_OWORD *)(a1 + 112);
    *v53 = *v57;
    *(_OWORD *)(a1 + 80) = v80;
    *v57 = v79;
    *(_OWORD *)(a1 + 112) = v78;
  }
}

void sub_10013AF18(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  double *v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = a1;
  v2 = (__int128 *)(a1 + 64);
  v3 = (double *)(a1 + 32);
  *(double *)(a1 + 128) = sub_10007FCE4(a1 + 64, 0.200000003, *(double *)(a1 + 32));
  v4 = (__int128 *)(v1 + 128);
  *(_QWORD *)(v1 + 136) = v5;
  *(_QWORD *)(v1 + 144) = v6;
  *(_QWORD *)(v1 + 152) = v7;
  v8 = (__int128 *)(v1 + 96);
  *(double *)(v1 + 160) = sub_10007FCE4(v1 + 96, 0.200000003, *v3);
  *(_QWORD *)(v1 + 168) = v9;
  v1 += 160;
  *(_QWORD *)(v1 + 16) = v10;
  *(_QWORD *)(v1 + 24) = v11;
  sub_10013B810(v12, v2, (__int128 *)v3);
  *(_QWORD *)(v1 + 32) = v13;
  *(_QWORD *)(v1 + 40) = v14;
  *(_QWORD *)(v1 + 48) = v15;
  *(_QWORD *)(v1 + 56) = v16;
  sub_10013B810(v17, v8, (__int128 *)v3);
  *(_QWORD *)(v1 + 96) = v18;
  *(_QWORD *)(v1 + 104) = v19;
  *(_QWORD *)(v1 + 112) = v20;
  *(_QWORD *)(v1 + 120) = v21;
  sub_10013B810(v22, v4, (__int128 *)v3);
  *(_QWORD *)(v1 + 64) = v23;
  *(_QWORD *)(v1 + 72) = v24;
  *(_QWORD *)(v1 + 80) = v25;
  *(_QWORD *)(v1 + 88) = v26;
  sub_10013B810(v27, (__int128 *)v1, (__int128 *)v3);
  *(_QWORD *)(v1 + 128) = v28;
  *(_QWORD *)(v1 + 136) = v29;
  *(_QWORD *)(v1 + 144) = v30;
  *(_QWORD *)(v1 + 152) = v31;
}

void sub_10013AFF8(uint64_t a1, double *a2, void **a3)
{
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  v5 = a3[1];
  if (v5 == *a3)
  {
    v8 = a3[1];
LABEL_7:
    v9 = (unint64_t)a3[2];
    if ((unint64_t)v8 >= v9)
    {
      v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - v5) >> 4);
      v14 = v13 + 1;
      if (v13 + 1 > 0x555555555555555)
        sub_10013BDE4();
      v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (_QWORD)v5) >> 4);
      if (2 * v15 > v14)
        v14 = 2 * v15;
      if (v15 >= 0x2AAAAAAAAAAAAAALL)
        v16 = 0x555555555555555;
      else
        v16 = v14;
      if (v16)
        v17 = (char *)sub_10013BE6C((uint64_t)(a3 + 2), v16);
      else
        v17 = 0;
      v18 = &v17[48 * v13];
      v19 = &v17[48 * v16];
      v20 = *(_OWORD *)a2;
      v21 = *((_OWORD *)a2 + 2);
      *((_OWORD *)v18 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)v18 + 2) = v21;
      *(_OWORD *)v18 = v20;
      v12 = v18 + 48;
      v23 = (char *)*a3;
      v22 = (char *)a3[1];
      if (v22 != *a3)
      {
        do
        {
          v24 = *((_OWORD *)v22 - 3);
          v25 = *((_OWORD *)v22 - 1);
          *((_OWORD *)v18 - 2) = *((_OWORD *)v22 - 2);
          *((_OWORD *)v18 - 1) = v25;
          *((_OWORD *)v18 - 3) = v24;
          v18 -= 48;
          v22 -= 48;
        }
        while (v22 != v23);
        v22 = (char *)*a3;
      }
      *a3 = v18;
      a3[1] = v12;
      a3[2] = v19;
      if (v22)
        operator delete(v22);
    }
    else
    {
      v10 = *(_OWORD *)a2;
      v11 = *((_OWORD *)a2 + 2);
      v8[1] = *((_OWORD *)a2 + 1);
      v8[2] = v11;
      *v8 = v10;
      v12 = v8 + 3;
    }
    a3[1] = v12;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v5 = *a3;
    while (!sub_10013A02C(0, *a2, a2[1], a2[2], a2[3], *(double *)&v5[v6], *(double *)&v5[v6 + 8], *(double *)&v5[v6 + 16], *(double *)&v5[v6 + 24], 0.0799999982))
    {
      ++v7;
      v5 = *a3;
      v8 = a3[1];
      v6 += 48;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (_BYTE *)*a3) >> 4) <= v7)
        goto LABEL_7;
    }
    *(double *)((char *)*a3 + v6 + 40) = a2[5] + *(double *)((char *)*a3 + v6 + 40);
  }
}

double sub_10013B1BC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;

  v3 = (double)a2;
  if (a2 <= 4 && a3 <= 4)
  {
    v4 = (double)a3;
    v5 = 4.00000006 - v3;
    goto LABEL_4;
  }
  if (a2 > 4)
  {
    if (a2 >= 0x10 && a3 <= 4)
    {
      v4 = (double)a3;
      v5 = 15.9999999 - v3;
LABEL_4:
      v6 = 4.00000006 - v4;
      if (v5 >= 1.0)
        v7 = v5 * 0.75;
      else
        v7 = 0.75;
      if (v6 >= 1.0)
        v8 = v6 * 0.75;
      else
        v8 = 0.75;
      if (v8 <= v7)
        v8 = v7;
      goto LABEL_22;
    }
    v8 = 1.0;
    if (a2 < 0x10)
      goto LABEL_22;
    v9 = 15.9999999;
  }
  else
  {
    v9 = 4.00000006;
  }
  v10 = v9 - v3;
  v8 = 0.75;
  if (v10 >= 1.0)
    v8 = v10 * 0.75;
LABEL_22:
  result = 1.0;
  if (v8 >= 1.0)
    return v8;
  return result;
}

BOOL sub_10013B28C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) > *(double *)(a2 + 40);
}

void **sub_10013B2A0(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  void **v10;
  unint64_t v11;
  __int128 *v12;
  char *v13;
  unint64_t v14;
  __int128 v15;
  _OWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  __int128 *v22;
  __int128 v23;
  char *v24;
  char *v25;
  __int128 *v26;
  __int128 v27;
  __int128 *v28;
  unint64_t v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  double v41[2];
  _QWORD v42[6];
  __int128 *v43;
  __int128 *v44;
  uint64_t v45;
  BOOL (*v46)(double *, double *);

  v1 = (void **)(a1 + 320);
  if (*(_QWORD *)(a1 + 328) == *(_QWORD *)(a1 + 320))
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
    sub_10007F5BC(v42);
    v3 = 0;
    for (i = 0; i != 3200; i += 8)
    {
      if (*(double *)(*(_QWORD *)(a1 + 8) + i) >= 1.0)
      {
        v41[0] = *(double *)(*(_QWORD *)(a1 + 8) + i);
        v42[0] = sub_10007F990(*(double *)(*(_QWORD *)a1 + v3), *(double *)(*(_QWORD *)a1 + v3 + 8), *(double *)(*(_QWORD *)a1 + v3 + 16));
        v42[1] = v5;
        v42[2] = v6;
        v42[3] = v7;
        v42[4] = *(_QWORD *)(*(_QWORD *)a1 + v3 + 24);
        sub_10013B8DC(v8, v41, (void **)&v43);
      }
      v3 += 32;
    }
    v9 = v44;
    if (v44 != v43)
    {
      v46 = sub_10013B8C8;
      sub_10013D5A4(v43, v44, (unsigned int (**)(_QWORD, _QWORD))&v46, 126 - 2 * __clz(((char *)v44 - (char *)v43) >> 6), 1);
      sub_10013BAF4(v1, ((char *)v44 - (char *)v43) >> 6);
      v10 = (void **)(a1 + 344);
      sub_10013BB90((void **)(a1 + 344), ((char *)v44 - (char *)v43) >> 6);
      v9 = v44;
      if (v44 != v43)
      {
        v11 = 0;
        v9 = v43;
        do
        {
          v12 = &v9[4 * v11 + 1];
          v13 = *(char **)(a1 + 328);
          v14 = *(_QWORD *)(a1 + 336);
          if ((unint64_t)v13 >= v14)
          {
            v17 = (v13 - (_BYTE *)*v1) >> 5;
            v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 59)
              sub_10013BDE4();
            v19 = v14 - (_QWORD)*v1;
            if (v19 >> 4 > v18)
              v18 = v19 >> 4;
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFE0)
              v20 = 0x7FFFFFFFFFFFFFFLL;
            else
              v20 = v18;
            if (v20)
              v21 = (char *)sub_10013EBCC(a1 + 336, v20);
            else
              v21 = 0;
            v22 = (__int128 *)&v21[32 * v17];
            v23 = v12[1];
            *v22 = *v12;
            v22[1] = v23;
            v25 = *(char **)(a1 + 320);
            v24 = *(char **)(a1 + 328);
            v26 = v22;
            if (v24 != v25)
            {
              do
              {
                v27 = *((_OWORD *)v24 - 1);
                *(v26 - 2) = *((_OWORD *)v24 - 2);
                *(v26 - 1) = v27;
                v26 -= 2;
                v24 -= 32;
              }
              while (v24 != v25);
              v24 = (char *)*v1;
            }
            v16 = v22 + 2;
            *(_QWORD *)(a1 + 320) = v26;
            *(_QWORD *)(a1 + 328) = v22 + 2;
            *(_QWORD *)(a1 + 336) = &v21[32 * v20];
            if (v24)
              operator delete(v24);
          }
          else
          {
            v15 = v9[4 * v11 + 2];
            *(_OWORD *)v13 = *v12;
            *((_OWORD *)v13 + 1) = v15;
            v16 = v13 + 32;
          }
          *(_QWORD *)(a1 + 328) = v16;
          v28 = &v43[4 * v11];
          v30 = *(char **)(a1 + 352);
          v29 = *(_QWORD *)(a1 + 360);
          if ((unint64_t)v30 >= v29)
          {
            v32 = (char *)*v10;
            v33 = (v30 - (_BYTE *)*v10) >> 3;
            v34 = v33 + 1;
            if ((unint64_t)(v33 + 1) >> 61)
              sub_10013BDE4();
            v35 = v29 - (_QWORD)v32;
            if (v35 >> 2 > v34)
              v34 = v35 >> 2;
            if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8)
              v36 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v36 = v34;
            if (v36)
            {
              v37 = (char *)sub_10013EC00(a1 + 360, v36);
              v32 = *(char **)(a1 + 344);
              v30 = *(char **)(a1 + 352);
            }
            else
            {
              v37 = 0;
            }
            v38 = &v37[8 * v33];
            *(_QWORD *)v38 = *(_QWORD *)v28;
            v31 = v38 + 8;
            while (v30 != v32)
            {
              v39 = *((_QWORD *)v30 - 1);
              v30 -= 8;
              *((_QWORD *)v38 - 1) = v39;
              v38 -= 8;
            }
            *(_QWORD *)(a1 + 344) = v38;
            *(_QWORD *)(a1 + 352) = v31;
            *(_QWORD *)(a1 + 360) = &v37[8 * v36];
            if (v32)
              operator delete(v32);
          }
          else
          {
            *(_QWORD *)v30 = *(_QWORD *)v28;
            v31 = v30 + 8;
          }
          *(_QWORD *)(a1 + 352) = v31;
          ++v11;
          v9 = v43;
        }
        while (v11 < ((char *)v44 - (char *)v43) >> 6);
      }
    }
    if (v9)
    {
      v44 = v9;
      operator delete(v9);
    }
  }
  return v1;
}

void sub_10013B5B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_10013B5DC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12;
  _BOOL4 v13;
  double v14;
  __int128 v16;
  double v17;
  double v18;
  __int128 v19;
  double v20;
  double v21;
  __int128 v22;
  double v23;
  double v24;

  *(double *)&v19 = a1;
  *((double *)&v19 + 1) = a2;
  v20 = a3;
  v21 = a4;
  *(double *)&v16 = a5;
  *((double *)&v16 + 1) = a6;
  v17 = a7;
  v18 = a8;
  *(double *)&v22 = a1;
  *((double *)&v22 + 1) = a2;
  v23 = a3;
  v24 = a4;
  sub_10007FB30(&v22);
  v13 = v12 >= 0.180000007;
  *(double *)&v22 = a5;
  *((double *)&v22 + 1) = a6;
  v23 = a7;
  v24 = a8;
  sub_10007FB30(&v22);
  return v13 != v14 >= 0.180000007 && sub_10007FC4C(&v19, &v16) >= 4.5999999;
}

void sub_10013B698(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __int128 v28;
  double v29;
  double v30;

  *(double *)&v28 = a1;
  *((double *)&v28 + 1) = a2;
  v29 = a3;
  v30 = a4;
  v20 = sub_10007F9CC((double *)&v28);
  v22 = v21;
  v24 = v23;
  sub_10007FB30(&v28);
  *(double *)&v28 = a5;
  *((double *)&v28 + 1) = a6;
  v29 = a7;
  v30 = a8;
  sub_10007FB30(&v28);
  v25 = 1.0 - (1.0 - v24) * a9;
  if (v26 >= 0.180000007)
    v25 = v24 * a9;
  sub_10007F990(v20, v22, v25);
}

BOOL sub_10013B754(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12;
  _BOOL4 v13;
  double v14;
  __int128 v16;
  double v17;
  double v18;
  __int128 v19;
  double v20;
  double v21;
  __int128 v22;
  double v23;
  double v24;

  *(double *)&v19 = a1;
  *((double *)&v19 + 1) = a2;
  v20 = a3;
  v21 = a4;
  *(double *)&v16 = a5;
  *((double *)&v16 + 1) = a6;
  v17 = a7;
  v18 = a8;
  *(double *)&v22 = a1;
  *((double *)&v22 + 1) = a2;
  v23 = a3;
  v24 = a4;
  sub_10007FB30(&v22);
  v13 = v12 >= 0.180000007;
  *(double *)&v22 = a5;
  *((double *)&v22 + 1) = a6;
  v23 = a7;
  v24 = a8;
  sub_10007FB30(&v22);
  return v13 != v14 >= 0.180000007 && sub_10007FC4C(&v19, &v16) >= 3.0999999;
}

void sub_10013B810(uint64_t a1, __int128 *a2, __int128 *a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _OWORD v12[2];
  __int128 v13[2];

  sub_10007F5BC(v13);
  sub_10007FB30(a2);
  v6 = v5;
  sub_10007FB30(a3);
  if (v6 >= v7)
    sub_10007F5BC(v12);
  else
    sub_10007F810((uint64_t)v12, 1.0, 1.0, 1.0);
  v13[0] = v12[0];
  v13[1] = v12[1];
  sub_10007FB30(v13);
  v9 = v8;
  sub_10007FB30(a3);
  v11 = vabdd_f64(v9, v10);
  sub_10007FCE4((uint64_t)v13, 1.0 - ((v11 + v11) * -0.599999994 + 1.0), *(double *)a3);
}

BOOL sub_10013B8C8(double *a1, double *a2)
{
  return *a1 > *a2;
}

void sub_10013B8DC(uint64_t a1, double *a2, void **a3)
{
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  _OWORD *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v5 = a3[1];
  if (v5 == *a3)
  {
    v25 = a3[1];
LABEL_7:
    v26 = (unint64_t)a3[2];
    if ((unint64_t)v25 >= v26)
    {
      v31 = ((char *)v25 - v5) >> 6;
      v32 = v31 + 1;
      if ((unint64_t)(v31 + 1) >> 58)
        sub_10013BDE4();
      v33 = v26 - (_QWORD)v5;
      if (v33 >> 5 > v32)
        v32 = v33 >> 5;
      if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFC0)
        v34 = 0x3FFFFFFFFFFFFFFLL;
      else
        v34 = v32;
      if (v34)
        v35 = (char *)sub_10013D570((uint64_t)(a3 + 2), v34);
      else
        v35 = 0;
      v36 = &v35[64 * v31];
      v37 = &v35[64 * v34];
      v38 = *(_OWORD *)a2;
      v39 = *((_OWORD *)a2 + 1);
      v40 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)v36 + 3) = v40;
      *(_OWORD *)v36 = v38;
      *((_OWORD *)v36 + 1) = v39;
      v30 = v36 + 64;
      v42 = (char *)*a3;
      v41 = (char *)a3[1];
      if (v41 != *a3)
      {
        do
        {
          v43 = *((_OWORD *)v41 - 4);
          v44 = *((_OWORD *)v41 - 3);
          v45 = *((_OWORD *)v41 - 1);
          *((_OWORD *)v36 - 2) = *((_OWORD *)v41 - 2);
          *((_OWORD *)v36 - 1) = v45;
          *((_OWORD *)v36 - 4) = v43;
          *((_OWORD *)v36 - 3) = v44;
          v36 -= 64;
          v41 -= 64;
        }
        while (v41 != v42);
        v41 = (char *)*a3;
      }
      *a3 = v36;
      a3[1] = v30;
      a3[2] = v37;
      if (v41)
        operator delete(v41);
    }
    else
    {
      v27 = *(_OWORD *)a2;
      v28 = *((_OWORD *)a2 + 1);
      v29 = *((_OWORD *)a2 + 3);
      v25[2] = *((_OWORD *)a2 + 2);
      v25[3] = v29;
      *v25 = v27;
      v25[1] = v28;
      v30 = v25 + 4;
    }
    a3[1] = v30;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v5 = *a3;
    while (1)
    {
      v8 = &v5[v6];
      v9 = *((_QWORD *)v8 + 4);
      v10 = *((_QWORD *)v8 + 5);
      v11 = *((_OWORD *)a2 + 2);
      v46 = *((_OWORD *)v8 + 1);
      v47 = *((_OWORD *)a2 + 1);
      v48 = v11;
      v12 = sub_10007F9CC((double *)&v47);
      v14 = v13;
      v16 = v15;
      sub_10007FB30(&v47);
      v18 = v17;
      v47 = v46;
      *(_QWORD *)&v48 = v9;
      *((_QWORD *)&v48 + 1) = v10;
      v19 = sub_10007F9CC((double *)&v47);
      v21 = v20;
      v23 = v22;
      sub_10007FB30(&v47);
      if (sub_10013A02C(1, v12, v14, v16, v18, v19, v21, v23, v24, 0.0700000003))
        break;
      ++v7;
      v5 = *a3;
      v25 = a3[1];
      v6 += 64;
      if (v7 >= ((char *)v25 - (_BYTE *)*a3) >> 6)
        goto LABEL_7;
    }
    *(double *)((char *)*a3 + v6) = *a2 + *(double *)((char *)*a3 + v6);
  }
}

void sub_10013BAF4(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 5)
  {
    if (a2 >> 59)
      sub_10013BDE4();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_10013EBCC(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFE0];
    v9 = &v6[32 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v13;
        v12 -= 32;
        v10 -= 32;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_10013BB90(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      sub_10013BDE4();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_10013EC00(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_QWORD *)v11 - 1);
        v11 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

BOOL sub_10013BC24(_BOOL8 result, uint64_t a2)
{
  CGContext *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  __int128 v13;
  double v14;
  __int128 v15;
  double v16;
  double v17;
  double v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  double v39;
  __int128 v40;
  __int128 v41;

  if (result)
  {
    v3 = (CGContext *)result;
    sub_10013A150((uint64_t)v18);
    if ((sub_10013A228(v18, v3) & 1) != 0)
    {
      v4 = v19;
      v5 = v20;
      v6 = v21;
      *(_QWORD *)a2 = v19;
      *(_QWORD *)(a2 + 8) = v5;
      *(_QWORD *)(a2 + 16) = v6;
      v7 = v22;
      *(_OWORD *)(a2 + 24) = v22;
      *(_OWORD *)(a2 + 40) = v23;
      *(_OWORD *)(a2 + 56) = v24;
      *(_OWORD *)(a2 + 72) = v25;
      *(_OWORD *)(a2 + 88) = v26;
      *(_OWORD *)(a2 + 104) = v27;
      *(_OWORD *)(a2 + 120) = v28;
      *(_OWORD *)(a2 + 136) = v29;
      v8 = v32;
      *(_OWORD *)(a2 + 152) = v30;
      *(_OWORD *)(a2 + 168) = v31;
      *(_QWORD *)(a2 + 184) = v8;
      v9 = v34;
      *(_OWORD *)(a2 + 224) = v33;
      *(_OWORD *)(a2 + 240) = v9;
      v10 = v36;
      *(_OWORD *)(a2 + 192) = v35;
      *(_OWORD *)(a2 + 208) = v10;
      v11 = v38;
      *(_OWORD *)(a2 + 256) = v37;
      *(_OWORD *)(a2 + 272) = v11;
      *(_BYTE *)(a2 + 296) = 1;
      *(_QWORD *)&v40 = v4;
      *((_QWORD *)&v40 + 1) = v5;
      *(_QWORD *)&v41 = v6;
      *((_QWORD *)&v41 + 1) = v7;
      sub_10007FB30(&v40);
      *(_BYTE *)(a2 + 297) = v12 >= 0.180000007;
      v13 = *(_OWORD *)(a2 + 48);
      v40 = *(_OWORD *)(a2 + 32);
      v41 = v13;
      sub_10007FB30(&v40);
      *(_BYTE *)(a2 + 298) = v14 >= 0.180000007;
      v15 = *(_OWORD *)(a2 + 80);
      v40 = *(_OWORD *)(a2 + 64);
      v41 = v15;
      sub_10007FB30(&v40);
      *(_BYTE *)(a2 + 299) = v16 >= 0.180000007;
      v17 = v39;
      *(_BYTE *)(a2 + 300) = v39 > 0.0;
      *(double *)(a2 + 288) = v17;
      sub_10013A1C8((uint64_t)v18);
      return *(_BYTE *)(a2 + 296) != 0;
    }
    else
    {
      sub_10013A1C8((uint64_t)v18);
      return 0;
    }
  }
  return result;
}

void sub_10013BD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10013A1C8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_10013BDAC(double a1, double a2, double a3, double a4)
{
  double v4;
  __int128 v6;
  double v7;
  double v8;

  *(double *)&v6 = a1;
  *((double *)&v6 + 1) = a2;
  v7 = a3;
  v8 = a4;
  sub_10007FB30(&v6);
  return v4 < 0.180000007;
}

void sub_10013BDE4()
{
  sub_10013BDF8("vector");
}

void sub_10013BDF8(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10013BE48(exception, a1);
}

void sub_10013BE34(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10013BE48(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_10013BE6C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556)
    sub_10013BEB0();
  return operator new(48 * a2);
}

void sub_10013BEB0()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_10013BED8(__int128 *a1, __int128 *a2, unsigned int (**a3)(_QWORD, _QWORD), uint64_t a4, char a5)
{
  __int128 *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 *v18;
  _OWORD *v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unsigned int (*v27)(_QWORD, _QWORD);
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 *v32;
  char v33;
  BOOL v34;
  unsigned int (*v35)(_QWORD, _QWORD);
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[3];
  _OWORD v46[3];
  _OWORD v47[3];
  _OWORD v48[3];
  __int128 v49;
  __int128 v50;
  __int128 v51;

LABEL_1:
  v9 = a2 - 3;
  v10 = a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = v10;
    v12 = v11;
    v13 = (char *)a2 - (char *)v10;
    v14 = 0xAAAAAAAAAAAAAAABLL * (a2 - v10);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v35 = *a3;
        v37 = *(a2 - 2);
        v36 = *(a2 - 1);
        v48[0] = *(a2 - 3);
        v48[1] = v37;
        v48[2] = v36;
        v38 = *v10;
        v39 = v10[2];
        v47[1] = v10[1];
        v47[2] = v39;
        v47[0] = v38;
        if (v35(v48, v47))
        {
          v40 = *v10;
          v41 = v10[2];
          v50 = v10[1];
          v51 = v41;
          v49 = v40;
          v42 = *v9;
          v43 = *(a2 - 1);
          v10[1] = *(a2 - 2);
          v10[2] = v43;
          *v10 = v42;
          v44 = v50;
          *v9 = v49;
          *(a2 - 2) = v44;
          *(a2 - 1) = v51;
        }
        return;
      case 3uLL:
        sub_10013C460(v10, v10 + 3, a2 - 3, a3);
        return;
      case 4uLL:
        sub_10013CCD8((__n128 *)v10, (__n128 *)v10 + 3, (__n128 *)v10 + 6, (__n128 *)a2 - 3, a3);
        return;
      case 5uLL:
        sub_10013CE18((__n128 *)v10, (__n128 *)v10 + 3, (__n128 *)v10 + 6, (__n128 *)v10 + 9, (__n128 *)a2 - 3, a3);
        return;
      default:
        if (v13 <= 1151)
        {
          if ((a5 & 1) != 0)
            sub_10013C22C((uint64_t)v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          else
            sub_10013C35C((uint64_t)v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          return;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = &v10[3 * (v14 >> 1)];
          if ((unint64_t)v13 < 0x1801)
          {
            sub_10013C460(v16, v10, a2 - 3, a3);
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          else
          {
            sub_10013C460(v10, v16, a2 - 3, a3);
            v17 = 3 * v15;
            v18 = &v10[3 * v15 - 3];
            sub_10013C460(v10 + 3, v18, a2 - 6, a3);
            v19 = v10 + 6;
            v20 = &v10[v17 + 3];
            sub_10013C460(v19, v20, a2 - 9, a3);
            sub_10013C460(v18, v16, v20, a3);
            v21 = *a1;
            v22 = a1[2];
            v50 = a1[1];
            v51 = v22;
            v49 = v21;
            v23 = *v16;
            v24 = v16[2];
            a1[1] = v16[1];
            a1[2] = v24;
            *a1 = v23;
            v25 = v49;
            v26 = v51;
            v16[1] = v50;
            v16[2] = v26;
            *v16 = v25;
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          v27 = *a3;
          v29 = *(a1 - 2);
          v28 = *(a1 - 1);
          v46[0] = *(a1 - 3);
          v46[1] = v29;
          v46[2] = v28;
          v30 = *a1;
          v31 = a1[2];
          v45[1] = a1[1];
          v45[2] = v31;
          v45[0] = v30;
          if ((((uint64_t (*)(_OWORD *, _OWORD *))v27)(v46, v45) & 1) == 0)
          {
            v10 = sub_10013C650(a1, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
            goto LABEL_16;
          }
LABEL_11:
          v32 = (__n128 *)sub_10013C87C(a1, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          if ((v33 & 1) == 0)
            goto LABEL_14;
          v34 = sub_10013CA8C((__n128 *)a1, v32, a3);
          v10 = (__int128 *)&v32[3];
          if (!sub_10013CA8C(v32 + 3, (__n128 *)a2, a3))
          {
            v11 = v12 + 1;
            if (v34)
              continue;
LABEL_14:
            sub_10013BED8(a1, v32, a3, -v12, a5 & 1);
            v10 = (__int128 *)&v32[3];
LABEL_16:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = (__int128 *)v32;
          if (v34)
            return;
          goto LABEL_1;
        }
        if (v10 != a2)
          sub_10013CFB4((uint64_t)v10, a2, a2, a3);
        return;
    }
  }
}

  v9 = a2 - 4;
  v10 = a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = v10;
    v12 = v11;
    v13 = (char *)a2 - (char *)v10;
    v14 = ((char *)a2 - (char *)v10) >> 6;
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v36 = *a3;
        v37 = *(a2 - 1);
        v39 = *(a2 - 4);
        v38 = *(a2 - 3);
        v54[2] = *(a2 - 2);
        v54[3] = v37;
        v54[0] = v39;
        v54[1] = v38;
        v40 = v10[3];
        v42 = *v10;
        v41 = v10[1];
        v53[2] = v10[2];
        v53[3] = v40;
        v53[0] = v42;
        v53[1] = v41;
        if (v36(v54, v53))
        {
          v43 = *v10;
          v44 = v10[1];
          v45 = v10[3];
          v57 = v10[2];
          v58 = v45;
          v55 = v43;
          v56 = v44;
          v46 = *v9;
          v47 = *(a2 - 3);
          v48 = *(a2 - 1);
          v10[2] = *(a2 - 2);
          v10[3] = v48;
          *v10 = v46;
          v10[1] = v47;
          v49 = v56;
          *v9 = v55;
          *(a2 - 3) = v49;
          v50 = v58;
          *(a2 - 2) = v57;
          *(a2 - 1) = v50;
        }
        return;
      case 3uLL:
        sub_10013DB0C(v10, v10 + 4, a2 - 4, a3);
        return;
      case 4uLL:
        sub_10013E378((__n128 *)v10, (__n128 *)v10 + 4, (__n128 *)v10 + 8, (__n128 *)a2 - 4, a3);
        return;
      case 5uLL:
        sub_10013E4C0((uint64_t)v10, (__n128 *)v10 + 4, (__n128 *)v10 + 8, (__n128 *)v10 + 12, (__n128 *)a2 - 4, a3);
        return;
      default:
        if (v13 <= 1535)
        {
          if ((a5 & 1) != 0)
            sub_10013D8D4((uint64_t)v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          else
            sub_10013DA04((uint64_t)v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          return;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = &v10[4 * (v14 >> 1)];
          if ((unint64_t)v13 <= 0x2000)
          {
            sub_10013DB0C(&v10[4 * (v14 >> 1)], v10, a2 - 4, a3);
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          else
          {
            sub_10013DB0C(v10, &v10[4 * (v14 >> 1)], a2 - 4, a3);
            sub_10013DB0C(v10 + 4, v16 - 4, a2 - 8, a3);
            sub_10013DB0C(v10 + 8, &v10[4 * v15 + 4], a2 - 12, a3);
            sub_10013DB0C(v16 - 4, v16, &v10[4 * v15 + 4], a3);
            v17 = *v10;
            v18 = v10[1];
            v19 = v10[3];
            v57 = v10[2];
            v58 = v19;
            v55 = v17;
            v56 = v18;
            v20 = *v16;
            v21 = v16[1];
            v22 = v16[3];
            v10[2] = v16[2];
            v10[3] = v22;
            *v10 = v20;
            v10[1] = v21;
            v23 = v55;
            v24 = v56;
            v25 = v58;
            v16[2] = v57;
            v16[3] = v25;
            *v16 = v23;
            v16[1] = v24;
            if ((a5 & 1) != 0)
              goto LABEL_11;
          }
          v26 = *a3;
          v27 = *(v10 - 1);
          v29 = *(v10 - 4);
          v28 = *(v10 - 3);
          v52[2] = *(v10 - 2);
          v52[3] = v27;
          v52[0] = v29;
          v52[1] = v28;
          v30 = v10[3];
          v32 = *v10;
          v31 = v10[1];
          v51[2] = v10[2];
          v51[3] = v30;
          v51[0] = v32;
          v51[1] = v31;
          if ((((uint64_t (*)(_OWORD *, _OWORD *))v26)(v52, v51) & 1) == 0)
          {
            v10 = sub_10013DD04(v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
            goto LABEL_16;
          }
LABEL_11:
          v33 = sub_10013DF28(v10, a2, (uint64_t (**)(_QWORD, _QWORD))a3);
          if ((v34 & 1) == 0)
            goto LABEL_14;
          v35 = sub_10013E134((uint64_t)v10, (__n128 *)v33, a3);
          v10 = v33 + 4;
          if (!sub_10013E134((uint64_t)(v33 + 4), (__n128 *)a2, a3))
          {
            v11 = v12 + 1;
            if (v35)
              continue;
LABEL_14:
            sub_10013D5A4(a1, v33, a3, -v12, a5 & 1);
            v10 = v33 + 4;
LABEL_16:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = v33;
          if (v35)
            return;
          goto LABEL_1;
        }
        if (v10 != a2)
          sub_10013E668((uint64_t)v10, a2, a2, a3);
        return;
    }
  }
}

uint64_t sub_10013C22C(uint64_t result, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  _OWORD *v6;
  __int128 *v7;
  uint64_t v9;
  __int128 *v10;
  __int128 *v11;
  uint64_t (*v12)(_QWORD, _QWORD);
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t (*v20)(_QWORD, _QWORD);
  __int128 v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD v24[3];
  _OWORD v25[3];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[3];
  _OWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  if ((__int128 *)result != a2)
  {
    v31 = v3;
    v32 = v4;
    v6 = (_OWORD *)result;
    v7 = (__int128 *)(result + 48);
    if ((__int128 *)(result + 48) != a2)
    {
      v9 = 0;
      v10 = (__int128 *)result;
      do
      {
        v11 = v10;
        v10 = v7;
        v12 = *a3;
        v13 = v10[1];
        v30[0] = *v10;
        v30[1] = v13;
        v30[2] = v10[2];
        v14 = *v11;
        v15 = v11[2];
        v29[1] = v11[1];
        v29[2] = v15;
        v29[0] = v14;
        result = v12(v30, v29);
        if ((_DWORD)result)
        {
          v16 = v10[1];
          v26 = *v10;
          v27 = v16;
          v28 = v10[2];
          v17 = v9;
          while (1)
          {
            v18 = (_OWORD *)((char *)v6 + v17);
            v19 = *(_OWORD *)((char *)v6 + v17 + 16);
            v18[3] = *(_OWORD *)((char *)v6 + v17);
            v18[4] = v19;
            v18[5] = *(_OWORD *)((char *)v6 + v17 + 32);
            if (!v17)
              break;
            v20 = *a3;
            v25[0] = v26;
            v25[1] = v27;
            v25[2] = v28;
            v21 = *(v18 - 2);
            v24[0] = *(v18 - 3);
            v24[1] = v21;
            v24[2] = *(v18 - 1);
            result = v20(v25, v24);
            v17 -= 48;
            if ((result & 1) == 0)
            {
              v22 = (_OWORD *)((char *)v6 + v17 + 48);
              goto LABEL_10;
            }
          }
          v22 = v6;
LABEL_10:
          v23 = v27;
          *v22 = v26;
          v22[1] = v23;
          v22[2] = v28;
        }
        v7 = v10 + 3;
        v9 += 48;
      }
      while (v10 + 3 != a2);
    }
  }
  return result;
}

uint64_t sub_10013C35C(uint64_t result, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v6;
  __int128 *i;
  __int128 *v9;
  uint64_t (*v10)(_QWORD, _QWORD);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t (*v20)(_QWORD, _QWORD);
  __int128 v21;
  __int128 v22;
  _OWORD v23[3];
  _OWORD v24[3];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  _OWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((__int128 *)result != a2)
  {
    v30 = v3;
    v31 = v4;
    v6 = (__int128 *)result;
    for (i = (__int128 *)(result + 48); v6 + 3 != a2; i = v6 + 3)
    {
      v9 = v6;
      v6 = i;
      v10 = *a3;
      v11 = v6[1];
      v29[0] = *v6;
      v29[1] = v11;
      v29[2] = v6[2];
      v12 = *v9;
      v13 = v9[2];
      v28[1] = v9[1];
      v28[2] = v13;
      v28[0] = v12;
      result = v10(v29, v28);
      if ((_DWORD)result)
      {
        v14 = v6[1];
        v25 = *v6;
        v26 = v14;
        v27 = v6[2];
        v15 = v6;
        do
        {
          v16 = v15 - 3;
          v17 = *(v15 - 2);
          v18 = *(v15 - 1);
          v19 = *(v15 - 4);
          *v15 = *(v15 - 3);
          v15[1] = v17;
          v15[2] = v18;
          v20 = *a3;
          v24[0] = v25;
          v24[1] = v26;
          v24[2] = v27;
          v21 = *(v15 - 6);
          v23[1] = *(v15 - 5);
          v23[2] = v19;
          v23[0] = v21;
          result = v20(v24, v23);
          v15 = v16;
        }
        while ((result & 1) != 0);
        v22 = v26;
        *v16 = v25;
        v16[1] = v22;
        v16[2] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_10013C460(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(_QWORD, _QWORD))
{
  unsigned int (*v8)(_QWORD, _QWORD);
  __int128 v9;
  __int128 v10;
  char v11;
  unsigned int (*v12)(_QWORD, _QWORD);
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned int (*v28)(_QWORD, _QWORD);
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned int (*v43)(_QWORD, _QWORD);
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[3];
  _OWORD v52[3];
  _OWORD v53[3];
  _OWORD v54[3];
  _OWORD v55[3];
  _OWORD v56[3];
  _OWORD v57[3];
  _OWORD v58[3];
  _OWORD v59[3];
  _OWORD v60[18];

  v8 = *a4;
  v9 = a2[1];
  v60[0] = *a2;
  v60[1] = v9;
  v60[2] = a2[2];
  v10 = a1[1];
  v59[0] = *a1;
  v59[1] = v10;
  v59[2] = a1[2];
  v11 = v8(v60, v59);
  v12 = *a4;
  if ((v11 & 1) != 0)
  {
    v13 = a3[1];
    v54[0] = *a3;
    v54[1] = v13;
    v54[2] = a3[2];
    v14 = a2[1];
    v53[0] = *a2;
    v53[1] = v14;
    v53[2] = a2[2];
    if (v12(v54, v53))
    {
      v15 = *a1;
      v16 = a1[1];
      v17 = a1[2];
      v19 = a3[1];
      v18 = a3[2];
      *a1 = *a3;
      a1[1] = v19;
      a1[2] = v18;
      a3[2] = v17;
      result = 1;
LABEL_9:
      *a3 = v15;
      a3[1] = v16;
      return result;
    }
    v38 = *a1;
    v39 = a1[1];
    v40 = a1[2];
    v42 = a2[1];
    v41 = a2[2];
    *a1 = *a2;
    a1[1] = v42;
    a1[2] = v41;
    a2[1] = v39;
    a2[2] = v40;
    *a2 = v38;
    v43 = *a4;
    v44 = *a3;
    v45 = a3[2];
    v52[1] = a3[1];
    v52[2] = v45;
    v46 = *a2;
    v47 = a2[1];
    v51[2] = a2[2];
    v52[0] = v44;
    v51[0] = v46;
    v51[1] = v47;
    if (v43(v52, v51))
    {
      v15 = *a2;
      v16 = a2[1];
      v48 = a2[2];
      v50 = a3[1];
      v49 = a3[2];
      *a2 = *a3;
      a2[1] = v50;
      a2[2] = v49;
      a3[2] = v48;
      result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    v21 = a3[1];
    v58[0] = *a3;
    v58[1] = v21;
    v58[2] = a3[2];
    v22 = a2[1];
    v57[0] = *a2;
    v57[1] = v22;
    v57[2] = a2[2];
    result = ((uint64_t (*)(_OWORD *, _OWORD *))v12)(v58, v57);
    if (!(_DWORD)result)
      return result;
    v23 = *a2;
    v24 = a2[1];
    v25 = a2[2];
    v27 = a3[1];
    v26 = a3[2];
    *a2 = *a3;
    a2[1] = v27;
    a2[2] = v26;
    a3[1] = v24;
    a3[2] = v25;
    *a3 = v23;
    v28 = *a4;
    v29 = *a2;
    v30 = a2[2];
    v56[1] = a2[1];
    v56[2] = v30;
    v31 = *a1;
    v32 = a1[1];
    v55[2] = a1[2];
    v56[0] = v29;
    v55[0] = v31;
    v55[1] = v32;
    if (v28(v56, v55))
    {
      v33 = *a1;
      v34 = a1[1];
      v35 = a1[2];
      v37 = a2[1];
      v36 = a2[2];
      *a1 = *a2;
      a1[1] = v37;
      a1[2] = v36;
      a2[1] = v34;
      a2[2] = v35;
      result = 2;
      *a2 = v33;
      return result;
    }
  }
  return 1;
}

__int128 *sub_10013C650(__int128 *a1, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  __int128 *v4;
  __int128 v6;
  uint64_t (*v7)(_QWORD, _QWORD);
  __int128 v8;
  __int128 *v9;
  __int128 *v10;
  uint64_t (*v11)(_QWORD, _QWORD);
  __int128 v12;
  char v13;
  __int128 *v14;
  uint64_t (*v15)(_QWORD, _QWORD);
  __int128 v16;
  int v17;
  __int128 *v18;
  uint64_t (*v19)(_QWORD, _QWORD);
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  unsigned int (*v30)(_QWORD, _QWORD);
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t (*v34)(_QWORD, _QWORD);
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v41[3];
  _OWORD v42[3];
  _OWORD v43[3];
  _OWORD v44[3];
  _OWORD v45[3];
  _OWORD v46[3];
  _OWORD v47[3];
  _OWORD v48[3];
  _OWORD v49[3];
  _OWORD v50[3];
  _OWORD v51[3];
  _OWORD v52[3];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v4 = a2;
  v6 = a1[1];
  v53 = *a1;
  v54 = v6;
  v55 = a1[2];
  v7 = *a3;
  v52[0] = v53;
  v52[1] = v6;
  v52[2] = v55;
  v8 = *(a2 - 2);
  v51[0] = *(a2 - 3);
  v51[1] = v8;
  v51[2] = *(a2 - 1);
  if ((v7(v52, v51) & 1) != 0)
  {
    v9 = a1;
    do
    {
      v10 = v9 + 3;
      v11 = *a3;
      v50[0] = v53;
      v50[1] = v54;
      v50[2] = v55;
      v12 = v9[4];
      v49[0] = v9[3];
      v49[1] = v12;
      v49[2] = v9[5];
      v13 = v11(v50, v49);
      v9 = v10;
    }
    while ((v13 & 1) == 0);
  }
  else
  {
    v14 = a1 + 3;
    do
    {
      v10 = v14;
      if (v14 >= v4)
        break;
      v15 = *a3;
      v48[0] = v53;
      v48[1] = v54;
      v48[2] = v55;
      v16 = v10[1];
      v47[0] = *v10;
      v47[1] = v16;
      v47[2] = v10[2];
      v17 = v15(v48, v47);
      v14 = v10 + 3;
    }
    while (!v17);
  }
  if (v10 >= v4)
  {
    v18 = v4;
  }
  else
  {
    do
    {
      v18 = v4 - 3;
      v19 = *a3;
      v46[0] = v53;
      v46[1] = v54;
      v46[2] = v55;
      v20 = *(v4 - 2);
      v45[0] = *(v4 - 3);
      v45[1] = v20;
      v45[2] = *(v4 - 1);
      v4 -= 3;
    }
    while ((v19(v46, v45) & 1) != 0);
  }
  while (v10 < v18)
  {
    v21 = *v10;
    v22 = v10[2];
    v57 = v10[1];
    v58 = v22;
    v56 = v21;
    v23 = *v18;
    v24 = v18[2];
    v10[1] = v18[1];
    v10[2] = v24;
    *v10 = v23;
    v25 = v56;
    v26 = v58;
    v18[1] = v57;
    v18[2] = v26;
    *v18 = v25;
    do
    {
      v44[0] = v53;
      v44[1] = v54;
      v44[2] = v55;
      v28 = v10[3];
      v27 = v10[4];
      v29 = v10[5];
      v10 += 3;
      v30 = (unsigned int (*)(_QWORD, _QWORD))*a3;
      v43[1] = v27;
      v43[2] = v29;
      v43[0] = v28;
    }
    while (!v30(v44, v43));
    do
    {
      v42[0] = v53;
      v42[1] = v54;
      v42[2] = v55;
      v32 = *(v18 - 3);
      v31 = *(v18 - 2);
      v33 = *(v18 - 1);
      v18 -= 3;
      v34 = *a3;
      v41[1] = v31;
      v41[2] = v33;
      v41[0] = v32;
    }
    while ((v34(v42, v41) & 1) != 0);
  }
  v35 = v10 - 3;
  if (v10 - 3 != a1)
  {
    v36 = *v35;
    v37 = *(v10 - 1);
    a1[1] = *(v10 - 2);
    a1[2] = v37;
    *a1 = v36;
  }
  v38 = v53;
  v39 = v55;
  *(v10 - 2) = v54;
  *(v10 - 1) = v39;
  *v35 = v38;
  return v10;
}

__int128 *sub_10013C87C(__int128 *a1, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  __int128 v7;
  uint64_t (*v8)(_QWORD, _QWORD);
  __int128 v9;
  __int128 *v10;
  __int128 *v11;
  __int128 *v12;
  unsigned int (*v13)(_QWORD, _QWORD);
  __int128 v14;
  uint64_t (*v15)(_QWORD, _QWORD);
  __int128 v16;
  __int128 *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t (*v27)(_QWORD, _QWORD);
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unsigned int (*v31)(_QWORD, _QWORD);
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v37[3];
  _OWORD v38[3];
  _OWORD v39[3];
  _OWORD v40[3];
  _OWORD v41[3];
  _OWORD v42[3];
  _OWORD v43[3];
  _OWORD v44[3];
  _OWORD v45[3];
  _OWORD v46[3];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v6 = 0;
  v7 = a1[1];
  v47 = *a1;
  v48 = v7;
  v49 = a1[2];
  do
  {
    v8 = *a3;
    v9 = a1[v6 + 4];
    v46[0] = a1[v6 + 3];
    v46[1] = v9;
    v46[2] = a1[v6 + 5];
    v45[0] = v47;
    v45[1] = v48;
    v45[2] = v49;
    v6 += 3;
  }
  while ((v8(v46, v45) & 1) != 0);
  v10 = &a1[v6];
  v11 = &a1[v6 - 3];
  if (v6 == 3)
  {
    while (v10 < a2)
    {
      v15 = *a3;
      v12 = a2 - 3;
      v16 = *(a2 - 2);
      v44[0] = *(a2 - 3);
      v44[1] = v16;
      v44[2] = *(a2 - 1);
      v43[0] = v47;
      v43[1] = v48;
      v43[2] = v49;
      a2 -= 3;
      if ((v15(v44, v43) & 1) != 0)
        goto LABEL_9;
    }
    v12 = a2;
  }
  else
  {
    do
    {
      v12 = a2 - 3;
      v13 = (unsigned int (*)(_QWORD, _QWORD))*a3;
      v14 = *(a2 - 2);
      v42[0] = *(a2 - 3);
      v42[1] = v14;
      v42[2] = *(a2 - 1);
      v41[0] = v47;
      v41[1] = v48;
      v41[2] = v49;
      a2 -= 3;
    }
    while (!v13(v42, v41));
  }
LABEL_9:
  if (v10 < v12)
  {
    v17 = v10;
    v18 = v12;
    do
    {
      v20 = v17[1];
      v50 = *v17;
      v19 = v50;
      v51 = v20;
      v52 = v17[2];
      v21 = v52;
      v22 = *v18;
      v23 = v18[2];
      v17[1] = v18[1];
      v17[2] = v23;
      *v17 = v22;
      v18[1] = v20;
      v18[2] = v21;
      *v18 = v19;
      do
      {
        v25 = v17[4];
        v24 = v17[5];
        v26 = v17[3];
        v17 += 3;
        v27 = *a3;
        v40[0] = v26;
        v40[1] = v25;
        v40[2] = v24;
        v39[1] = v48;
        v39[2] = v49;
        v39[0] = v47;
      }
      while ((v27(v40, v39) & 1) != 0);
      do
      {
        v29 = *(v18 - 2);
        v28 = *(v18 - 1);
        v30 = *(v18 - 3);
        v18 -= 3;
        v31 = (unsigned int (*)(_QWORD, _QWORD))*a3;
        v38[0] = v30;
        v38[1] = v29;
        v38[2] = v28;
        v37[1] = v48;
        v37[2] = v49;
        v37[0] = v47;
      }
      while (!v31(v38, v37));
    }
    while (v17 < v18);
    v11 = v17 - 3;
  }
  if (v11 != a1)
  {
    v32 = *v11;
    v33 = v11[2];
    a1[1] = v11[1];
    a1[2] = v33;
    *a1 = v32;
  }
  v34 = v47;
  v35 = v49;
  v11[1] = v48;
  v11[2] = v35;
  *v11 = v34;
  return v11;
}

BOOL sub_10013CA8C(__n128 *a1, __n128 *a2, unsigned int (**a3)(_QWORD, _QWORD))
{
  unint64_t v6;
  _BOOL8 result;
  unsigned int (*v8)(_QWORD, _QWORD);
  __n128 v9;
  __n128 v10;
  __n128 *v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 *v17;
  __n128 *v18;
  uint64_t v19;
  int v20;
  unsigned int (*v21)(_QWORD, _QWORD);
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  unsigned int (*v29)(_QWORD, _QWORD);
  __int128 v30;
  __n128 *v31;
  __n128 v32;
  _OWORD v33[3];
  _OWORD v34[3];
  __n128 v35;
  __n128 v36;
  __n128 v37;
  _OWORD v38[3];
  _OWORD v39[3];
  _OWORD v40[3];
  _OWORD v41[6];

  v6 = 0xAAAAAAAAAAAAAAABLL * (a2 - a1);
  result = 1;
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v8 = *a3;
      v9 = a2[-2];
      v41[0] = a2[-3];
      v41[1] = v9;
      v41[2] = a2[-1];
      v10 = a1[1];
      v40[0] = *a1;
      v40[1] = v10;
      v40[2] = a1[2];
      if (v8(v41, v40))
      {
        v11 = a2 - 3;
        v12 = *a1;
        v13 = a1[1];
        v14 = a1[2];
        v16 = a2[-2];
        v15 = a2[-1];
        *a1 = a2[-3];
        a1[1] = v16;
        a1[2] = v15;
        v11[1] = v13;
        v11[2] = v14;
        *v11 = v12;
      }
      return 1;
    case 3uLL:
      sub_10013C460(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a2[-3].n128_u64, a3);
      return 1;
    case 4uLL:
      sub_10013CCD8(a1, a1 + 3, a1 + 6, a2 - 3, a3);
      return 1;
    case 5uLL:
      sub_10013CE18(a1, a1 + 3, a1 + 6, a1 + 9, a2 - 3, a3);
      return 1;
    default:
      v17 = a1 + 6;
      sub_10013C460(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a1[6].n128_u64, a3);
      v18 = a1 + 9;
      if (&a1[9] == a2)
        return 1;
      v19 = 0;
      v20 = 0;
      break;
  }
  while (1)
  {
    v21 = *a3;
    v22 = v18[1];
    v39[0] = *v18;
    v39[1] = v22;
    v39[2] = v18[2];
    v23 = *v17;
    v24 = v17[2];
    v38[1] = v17[1];
    v38[2] = v24;
    v38[0] = v23;
    if (v21(v39, v38))
    {
      v25 = v18[1];
      v35 = *v18;
      v36 = v25;
      v37 = v18[2];
      v26 = v19;
      while (1)
      {
        v27 = (_OWORD *)((char *)a1->n128_u64 + v26);
        v28 = *(__int128 *)((char *)&a1[7] + v26);
        v27[9] = *(__n128 *)((char *)&a1[6] + v26);
        v27[10] = v28;
        v27[11] = *(__n128 *)((char *)&a1[8] + v26);
        if (v26 == -96)
          break;
        v29 = *a3;
        v34[0] = v35;
        v34[1] = v36;
        v34[2] = v37;
        v30 = v27[4];
        v33[0] = v27[3];
        v33[1] = v30;
        v33[2] = v27[5];
        v26 -= 48;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v29)(v34, v33) & 1) == 0)
        {
          v31 = (__n128 *)((char *)a1 + v26 + 144);
          goto LABEL_12;
        }
      }
      v31 = a1;
LABEL_12:
      v32 = v36;
      *v31 = v35;
      v31[1] = v32;
      v31[2] = v37;
      if (++v20 == 8)
        return &v18[3] == a2;
    }
    v17 = v18;
    v19 += 48;
    v18 += 3;
    if (v18 == a2)
      return 1;
  }
}

__n128 sub_10013CCD8(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(_QWORD, _QWORD))
{
  unsigned int (*v10)(_QWORD, _QWORD);
  __n128 v11;
  __n128 v12;
  __n128 result;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  unsigned int (*v19)(_QWORD, _QWORD);
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  unsigned int (*v29)(_QWORD, _QWORD);
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  _OWORD v38[3];
  _OWORD v39[3];
  _OWORD v40[3];
  _OWORD v41[3];
  _OWORD v42[3];
  _OWORD v43[12];

  sub_10013C460(a1, a2, a3, a5);
  v10 = *a5;
  v11 = a4[1];
  v43[0] = *a4;
  v43[1] = v11;
  v43[2] = a4[2];
  v12 = a3[1];
  v42[0] = *a3;
  v42[1] = v12;
  v42[2] = a3[2];
  if (v10(v43, v42))
  {
    v14 = *a3;
    v15 = a3[1];
    v16 = a3[2];
    v18 = a4[1];
    v17 = a4[2];
    *a3 = *a4;
    a3[1] = v18;
    a3[2] = v17;
    a4[1] = v15;
    a4[2] = v16;
    *a4 = v14;
    v19 = *a5;
    v20 = *a3;
    v21 = a3[2];
    v41[1] = a3[1];
    v41[2] = v21;
    v22 = *a2;
    v23 = a2[1];
    v40[2] = a2[2];
    v41[0] = v20;
    v40[0] = v22;
    v40[1] = v23;
    if (v19(v41, v40))
    {
      v24 = *a2;
      v25 = a2[1];
      v26 = a2[2];
      v28 = a3[1];
      v27 = a3[2];
      *a2 = *a3;
      a2[1] = v28;
      a2[2] = v27;
      a3[1] = v25;
      a3[2] = v26;
      *a3 = v24;
      v29 = *a5;
      v30 = *a2;
      v31 = a2[2];
      v39[1] = a2[1];
      v39[2] = v31;
      v32 = *a1;
      v33 = a1[1];
      v38[2] = a1[2];
      v39[0] = v30;
      v38[0] = v32;
      v38[1] = v33;
      if (v29(v39, v38))
      {
        result = *a1;
        v34 = a1[1];
        v35 = a1[2];
        v37 = a2[1];
        v36 = a2[2];
        *a1 = *a2;
        a1[1] = v37;
        a1[2] = v36;
        a2[1] = v34;
        a2[2] = v35;
        *a2 = result;
      }
    }
  }
  return result;
}

__n128 sub_10013CE18(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(_QWORD, _QWORD))
{
  unsigned int (*v12)(_QWORD, _QWORD);
  __n128 v13;
  __n128 v14;
  __n128 result;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  unsigned int (*v21)(_QWORD, _QWORD);
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  unsigned int (*v31)(_QWORD, _QWORD);
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  unsigned int (*v41)(_QWORD, _QWORD);
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  _OWORD v50[3];
  _OWORD v51[3];
  _OWORD v52[3];
  _OWORD v53[3];
  _OWORD v54[3];
  _OWORD v55[3];
  _OWORD v56[3];
  _OWORD v57[15];

  sub_10013CCD8((__n128 *)a1, a2, a3, a4, a6);
  v12 = *a6;
  v13 = a5[1];
  v57[0] = *a5;
  v57[1] = v13;
  v57[2] = a5[2];
  v14 = a4[1];
  v56[0] = *a4;
  v56[1] = v14;
  v56[2] = a4[2];
  if (v12(v57, v56))
  {
    v16 = *a4;
    v17 = a4[1];
    v18 = a4[2];
    v20 = a5[1];
    v19 = a5[2];
    *a4 = *a5;
    a4[1] = v20;
    a4[2] = v19;
    a5[1] = v17;
    a5[2] = v18;
    *a5 = v16;
    v21 = *a6;
    v22 = *a4;
    v23 = a4[2];
    v55[1] = a4[1];
    v55[2] = v23;
    v24 = *a3;
    v25 = a3[1];
    v54[2] = a3[2];
    v55[0] = v22;
    v54[0] = v24;
    v54[1] = v25;
    if (v21(v55, v54))
    {
      v26 = *a3;
      v27 = a3[1];
      v28 = a3[2];
      v30 = a4[1];
      v29 = a4[2];
      *a3 = *a4;
      a3[1] = v30;
      a3[2] = v29;
      a4[1] = v27;
      a4[2] = v28;
      *a4 = v26;
      v31 = *a6;
      v32 = *a3;
      v33 = a3[2];
      v53[1] = a3[1];
      v53[2] = v33;
      v34 = *a2;
      v35 = a2[1];
      v52[2] = a2[2];
      v53[0] = v32;
      v52[0] = v34;
      v52[1] = v35;
      if (v31(v53, v52))
      {
        v36 = *a2;
        v37 = a2[1];
        v38 = a2[2];
        v40 = a3[1];
        v39 = a3[2];
        *a2 = *a3;
        a2[1] = v40;
        a2[2] = v39;
        a3[1] = v37;
        a3[2] = v38;
        *a3 = v36;
        v41 = *a6;
        v42 = *a2;
        v43 = a2[2];
        v51[1] = a2[1];
        v51[2] = v43;
        v44 = *(__n128 *)a1;
        v45 = *(_OWORD *)(a1 + 16);
        v50[2] = *(_OWORD *)(a1 + 32);
        v51[0] = v42;
        v50[0] = v44;
        v50[1] = v45;
        if (v41(v51, v50))
        {
          result = *(__n128 *)a1;
          v46 = *(__n128 *)(a1 + 16);
          v47 = *(__n128 *)(a1 + 32);
          v49 = a2[1];
          v48 = a2[2];
          *(__n128 *)a1 = *a2;
          *(__n128 *)(a1 + 16) = v49;
          *(__n128 *)(a1 + 32) = v48;
          a2[1] = v46;
          a2[2] = v47;
          *a2 = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_10013CFB4(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  _OWORD *v13;
  _OWORD *v14;
  unsigned int (*v15)(_OWORD *, _OWORD *);
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int64_t v23;
  __n128 *v24;
  __n128 v25;
  __n128 *v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  _OWORD v33[3];
  _OWORD v34[6];
  __n128 v35;
  __n128 v36;
  __n128 v37;

  if ((_OWORD *)a1 != a2)
  {
    v8 = (uint64_t)a2 - a1;
    v9 = ((uint64_t)a2 - a1) / 48;
    if ((uint64_t)a2 - a1 >= 49)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = (__n128 *)(a1 + 48 * v10);
      do
      {
        sub_10013D19C(a1, a4, v9, v12);
        v12 -= 3;
        --v11;
      }
      while (v11);
    }
    v13 = a2;
    if (a2 != a3)
    {
      v14 = a2;
      do
      {
        v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        v16 = v14[1];
        v34[0] = *v14;
        v34[1] = v16;
        v34[2] = v14[2];
        v17 = *(_OWORD *)(a1 + 16);
        v33[0] = *(_OWORD *)a1;
        v33[1] = v17;
        v33[2] = *(_OWORD *)(a1 + 32);
        if (v15(v34, v33))
        {
          v18 = *v14;
          v19 = v14[1];
          v20 = v14[2];
          v22 = *(_OWORD *)(a1 + 16);
          v21 = *(_OWORD *)(a1 + 32);
          *v14 = *(_OWORD *)a1;
          v14[1] = v22;
          v14[2] = v21;
          *(_OWORD *)(a1 + 16) = v19;
          *(_OWORD *)(a1 + 32) = v20;
          *(_OWORD *)a1 = v18;
          sub_10013D19C(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 3;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 49)
    {
      v23 = v8 / 0x30uLL;
      v24 = (__n128 *)(a2 - 3);
      do
      {
        v25 = *(__n128 *)(a1 + 16);
        v35 = *(__n128 *)a1;
        v36 = v25;
        v37 = *(__n128 *)(a1 + 32);
        v26 = (__n128 *)sub_10013D378((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v23);
        if (v24 == v26)
        {
          v30 = v36;
          *v26 = v35;
          v26[1] = v30;
          v26[2] = v37;
        }
        else
        {
          v27 = *v24;
          v28 = v24[2];
          v26[1] = v24[1];
          v26[2] = v28;
          *v26 = v27;
          v29 = v36;
          *v24 = v35;
          v24[1] = v29;
          v24[2] = v37;
          sub_10013D460(a1, (uint64_t)&v26[3], a4, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)&v26[3] - a1) >> 4));
        }
        v24 -= 3;
      }
      while (v23-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_10013D19C(uint64_t a1, unsigned int (**a2)(_QWORD, _QWORD), uint64_t a3, __n128 *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 *v7;
  uint64_t v9;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD, _QWORD);
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  unsigned int (*v20)(_QWORD, _QWORD);
  __n128 v21;
  __n128 v22;
  __n128 result;
  __n128 v24;
  __n128 *v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD, _QWORD);
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  unsigned int (*v34)(_QWORD, _QWORD);
  __n128 v35;
  __n128 v36;
  _OWORD v37[3];
  _OWORD v38[3];
  _OWORD v39[3];
  _OWORD v40[3];
  __n128 v41;
  __n128 v42;
  __n128 v43;
  _OWORD v44[3];
  _OWORD v45[3];
  _OWORD v46[3];
  _OWORD v47[4];
  uint64_t v48;
  uint64_t v49;

  v6 = a3 - 2;
  if (a3 >= 2)
  {
    v48 = v4;
    v49 = v5;
    v7 = a4;
    v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 4)))
    {
      v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 4)) | 1;
      v13 = (__n128 *)(a1 + 48 * v12);
      v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 4) + 2;
      if (v14 < a3)
      {
        v15 = *a2;
        v16 = v13[1];
        v47[0] = *v13;
        v47[1] = v16;
        v17 = v13[3];
        v47[2] = v13[2];
        v18 = v13[4];
        v19 = v13[5];
        v46[0] = v17;
        v46[1] = v18;
        v46[2] = v19;
        if (v15(v47, v46))
        {
          v13 += 3;
          v12 = v14;
        }
      }
      v20 = *a2;
      v21 = v13[1];
      v45[0] = *v13;
      v45[1] = v21;
      v45[2] = v13[2];
      v22 = v7[1];
      v44[0] = *v7;
      v44[1] = v22;
      v44[2] = v7[2];
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v20)(v45, v44) & 1) == 0)
      {
        v24 = v7[1];
        v41 = *v7;
        v42 = v24;
        v43 = v7[2];
        do
        {
          v25 = v13;
          v26 = *v13;
          v27 = v13[2];
          v7[1] = v13[1];
          v7[2] = v27;
          *v7 = v26;
          if (v9 < v12)
            break;
          v28 = (2 * v12) | 1;
          v13 = (__n128 *)(a1 + 48 * v28);
          if (2 * v12 + 2 < a3)
          {
            v29 = *a2;
            v30 = v13[1];
            v40[0] = *v13;
            v40[1] = v30;
            v31 = v13[3];
            v40[2] = v13[2];
            v32 = v13[4];
            v33 = v13[5];
            v39[0] = v31;
            v39[1] = v32;
            v39[2] = v33;
            if (v29(v40, v39))
            {
              v13 += 3;
              v28 = 2 * v12 + 2;
            }
          }
          v34 = *a2;
          v35 = v13[1];
          v38[0] = *v13;
          v38[1] = v35;
          v38[2] = v13[2];
          v37[0] = v41;
          v37[1] = v42;
          v37[2] = v43;
          v7 = v25;
          v12 = v28;
        }
        while (!v34(v38, v37));
        result = v41;
        v36 = v43;
        v25[1] = v42;
        v25[2] = v36;
        *v25 = result;
      }
    }
  }
  return result;
}

_OWORD *sub_10013D378(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, _OWORD *);
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[3];
  _OWORD v21[3];

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[3 * v6 + 3];
    v10 = (2 * v6) | 1;
    v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      v12 = *a2;
      v14 = v9[1];
      v13 = v9[2];
      v21[0] = *v9;
      v21[1] = v14;
      v21[2] = v13;
      v15 = v9[3];
      v16 = v9[5];
      v20[1] = v9[4];
      v20[2] = v16;
      v20[0] = v15;
      if (v12(v21, v20))
      {
        v9 += 3;
        v10 = v11;
      }
    }
    v17 = *v9;
    v18 = v9[2];
    a1[1] = v9[1];
    a1[2] = v18;
    *a1 = v17;
    a1 = v9;
    v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_10013D460(uint64_t a1, uint64_t a2, unsigned int (**a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  unsigned int (*v10)(_QWORD, _QWORD);
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  double result;
  _OWORD *v15;
  __int128 v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  unsigned int (*v20)(_QWORD, _QWORD);
  __int128 v21;
  char v22;
  __int128 v23;
  _OWORD v24[3];
  _OWORD v25[3];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[3];
  _OWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  if (a4 >= 2)
  {
    v31 = v4;
    v32 = v5;
    v9 = (unint64_t)(a4 - 2) >> 1;
    v10 = *a3;
    v11 = (_OWORD *)(a1 + 48 * v9);
    v12 = v11[1];
    v30[0] = *v11;
    v30[1] = v12;
    v30[2] = v11[2];
    v13 = *(_OWORD *)(a2 - 32);
    v29[0] = *(_OWORD *)(a2 - 48);
    v29[1] = v13;
    v29[2] = *(_OWORD *)(a2 - 16);
    if (v10(v30, v29))
    {
      v15 = (_OWORD *)(a2 - 48);
      v16 = *(_OWORD *)(a2 - 32);
      v26 = *(_OWORD *)(a2 - 48);
      v27 = v16;
      v28 = *(_OWORD *)(a2 - 16);
      do
      {
        v17 = v11;
        v18 = *v11;
        v19 = v11[2];
        v15[1] = v11[1];
        v15[2] = v19;
        *v15 = v18;
        if (!v9)
          break;
        v9 = (v9 - 1) >> 1;
        v20 = *a3;
        v11 = (_OWORD *)(a1 + 48 * v9);
        v21 = v11[1];
        v25[0] = *v11;
        v25[1] = v21;
        v25[2] = v11[2];
        v24[0] = v26;
        v24[1] = v27;
        v24[2] = v28;
        v22 = v20(v25, v24);
        v15 = v17;
      }
      while ((v22 & 1) != 0);
      v23 = v27;
      *v17 = v26;
      v17[1] = v23;
      result = *(double *)&v28;
      v17[2] = v28;
    }
  }
  return result;
}

void *sub_10013D570(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58)
    sub_10013BEB0();
  return operator new(a2 << 6);
}

void sub_10013D5A4(__int128 *a1, __int128 *a2, unsigned int (**a3)(_QWORD, _QWORD), uint64_t a4, char a5)
{
  __int128 *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned int (*v26)(_QWORD, _QWORD);
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 *v33;
  char v34;
  BOOL v35;
  unsigned int (*v36)(_QWORD, _QWORD);
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[4];
  _OWORD v52[4];
  _OWORD v53[4];
  _OWORD v54[4];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

uint64_t sub_10013D8D4(uint64_t result, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  _OWORD *v6;
  __int128 *v7;
  uint64_t v9;
  __int128 *v10;
  __int128 *v11;
  uint64_t (*v12)(_QWORD, _QWORD);
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t (*v24)(_QWORD, _QWORD);
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[4];
  _OWORD v31[4];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[4];
  _OWORD v37[4];
  uint64_t v38;
  uint64_t v39;

  if ((__int128 *)result != a2)
  {
    v38 = v3;
    v39 = v4;
    v6 = (_OWORD *)result;
    v7 = (__int128 *)(result + 64);
    if ((__int128 *)(result + 64) != a2)
    {
      v9 = 0;
      v10 = (__int128 *)result;
      do
      {
        v11 = v10;
        v10 = v7;
        v12 = *a3;
        v13 = v10[1];
        v37[0] = *v10;
        v37[1] = v13;
        v14 = v10[3];
        v37[2] = v10[2];
        v37[3] = v14;
        v15 = v11[3];
        v17 = *v11;
        v16 = v11[1];
        v36[2] = v11[2];
        v36[3] = v15;
        v36[0] = v17;
        v36[1] = v16;
        result = v12(v37, v36);
        if ((_DWORD)result)
        {
          v18 = v10[1];
          v32 = *v10;
          v33 = v18;
          v19 = v10[3];
          v34 = v10[2];
          v35 = v19;
          v20 = v9;
          while (1)
          {
            v21 = (_OWORD *)((char *)v6 + v20);
            v22 = *(_OWORD *)((char *)v6 + v20 + 16);
            v21[4] = *(_OWORD *)((char *)v6 + v20);
            v21[5] = v22;
            v23 = *(_OWORD *)((char *)v6 + v20 + 48);
            v21[6] = *(_OWORD *)((char *)v6 + v20 + 32);
            v21[7] = v23;
            if (!v20)
              break;
            v24 = *a3;
            v31[0] = v32;
            v31[1] = v33;
            v31[2] = v34;
            v31[3] = v35;
            v25 = *(v21 - 3);
            v30[0] = *(v21 - 4);
            v30[1] = v25;
            v26 = *(v21 - 1);
            v30[2] = *(v21 - 2);
            v30[3] = v26;
            result = v24(v31, v30);
            v20 -= 64;
            if ((result & 1) == 0)
            {
              v27 = (_OWORD *)((char *)v6 + v20 + 64);
              goto LABEL_10;
            }
          }
          v27 = v6;
LABEL_10:
          v28 = v33;
          *v27 = v32;
          v27[1] = v28;
          v29 = v35;
          v27[2] = v34;
          v27[3] = v29;
        }
        v7 = v10 + 4;
        v9 += 64;
      }
      while (v10 + 4 != a2);
    }
  }
  return result;
}

uint64_t sub_10013DA04(uint64_t result, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v6;
  __int128 *i;
  __int128 *v9;
  uint64_t (*v10)(_QWORD, _QWORD);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t (*v22)(_QWORD, _QWORD);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[4];
  _OWORD v29[4];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[4];
  _OWORD v35[4];
  uint64_t v36;
  uint64_t v37;

  if ((__int128 *)result != a2)
  {
    v36 = v3;
    v37 = v4;
    v6 = (__int128 *)result;
    for (i = (__int128 *)(result + 64); v6 + 4 != a2; i = v6 + 4)
    {
      v9 = v6;
      v6 = i;
      v10 = *a3;
      v11 = v6[1];
      v35[0] = *v6;
      v35[1] = v11;
      v12 = v6[3];
      v35[2] = v6[2];
      v35[3] = v12;
      v13 = v9[3];
      v15 = *v9;
      v14 = v9[1];
      v34[2] = v9[2];
      v34[3] = v13;
      v34[0] = v15;
      v34[1] = v14;
      result = v10(v35, v34);
      if ((_DWORD)result)
      {
        v16 = v6[1];
        v30 = *v6;
        v31 = v16;
        v17 = v6[3];
        v32 = v6[2];
        v33 = v17;
        v18 = v6;
        do
        {
          v19 = v18 - 4;
          v20 = *(v18 - 3);
          *v18 = *(v18 - 4);
          v18[1] = v20;
          v21 = *(v18 - 1);
          v18[2] = *(v18 - 2);
          v18[3] = v21;
          v22 = *a3;
          v29[0] = v30;
          v29[1] = v31;
          v29[2] = v32;
          v29[3] = v33;
          v23 = *(v18 - 8);
          v24 = *(v18 - 7);
          v25 = *(v18 - 5);
          v28[2] = *(v18 - 6);
          v28[3] = v25;
          v28[0] = v23;
          v28[1] = v24;
          result = v22(v29, v28);
          v18 = v19;
        }
        while ((result & 1) != 0);
        v26 = v31;
        *v19 = v30;
        v19[1] = v26;
        v27 = v33;
        v19[2] = v32;
        v19[3] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_10013DB0C(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(_QWORD, _QWORD))
{
  unsigned int (*v8)(_QWORD, _QWORD);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  unsigned int (*v14)(_QWORD, _QWORD);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int (*v38)(_QWORD, _QWORD);
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  unsigned int (*v59)(_QWORD, _QWORD);
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _OWORD v71[4];
  _OWORD v72[4];
  _OWORD v73[4];
  _OWORD v74[4];
  _OWORD v75[4];
  _OWORD v76[4];
  _OWORD v77[4];
  _OWORD v78[4];
  _OWORD v79[4];
  _OWORD v80[24];

  v8 = *a4;
  v9 = a2[1];
  v80[0] = *a2;
  v80[1] = v9;
  v10 = a2[3];
  v80[2] = a2[2];
  v80[3] = v10;
  v11 = a1[1];
  v79[0] = *a1;
  v79[1] = v11;
  v12 = a1[3];
  v79[2] = a1[2];
  v79[3] = v12;
  v13 = v8(v80, v79);
  v14 = *a4;
  if ((v13 & 1) != 0)
  {
    v15 = a3[1];
    v74[0] = *a3;
    v74[1] = v15;
    v16 = a3[3];
    v74[2] = a3[2];
    v74[3] = v16;
    v17 = a2[1];
    v73[0] = *a2;
    v73[1] = v17;
    v18 = a2[3];
    v73[2] = a2[2];
    v73[3] = v18;
    if (v14(v74, v73))
    {
      v20 = a1[2];
      v19 = a1[3];
      v22 = *a1;
      v21 = a1[1];
      v23 = a3[3];
      v25 = *a3;
      v24 = a3[1];
      a1[2] = a3[2];
      a1[3] = v23;
      *a1 = v25;
      a1[1] = v24;
      *a3 = v22;
      a3[1] = v21;
      result = 1;
LABEL_9:
      a3[2] = v20;
      a3[3] = v19;
      return result;
    }
    v53 = a1[2];
    v52 = a1[3];
    v55 = *a1;
    v54 = a1[1];
    v56 = a2[3];
    v58 = *a2;
    v57 = a2[1];
    a1[2] = a2[2];
    a1[3] = v56;
    *a1 = v58;
    a1[1] = v57;
    *a2 = v55;
    a2[1] = v54;
    a2[2] = v53;
    a2[3] = v52;
    v59 = *a4;
    v60 = *a3;
    v61 = a3[1];
    v62 = a3[3];
    v72[2] = a3[2];
    v72[3] = v62;
    v72[0] = v60;
    v72[1] = v61;
    v63 = *a2;
    v64 = a2[1];
    v65 = a2[3];
    v71[2] = a2[2];
    v71[3] = v65;
    v71[0] = v63;
    v71[1] = v64;
    if (v59(v72, v71))
    {
      v20 = a2[2];
      v19 = a2[3];
      v67 = *a2;
      v66 = a2[1];
      v68 = a3[3];
      v70 = *a3;
      v69 = a3[1];
      a2[2] = a3[2];
      a2[3] = v68;
      *a2 = v70;
      a2[1] = v69;
      *a3 = v67;
      a3[1] = v66;
      result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    v27 = a3[1];
    v78[0] = *a3;
    v78[1] = v27;
    v28 = a3[3];
    v78[2] = a3[2];
    v78[3] = v28;
    v29 = a2[1];
    v77[0] = *a2;
    v77[1] = v29;
    v30 = a2[3];
    v77[2] = a2[2];
    v77[3] = v30;
    result = ((uint64_t (*)(_OWORD *, _OWORD *))v14)(v78, v77);
    if (!(_DWORD)result)
      return result;
    v32 = a2[2];
    v31 = a2[3];
    v34 = *a2;
    v33 = a2[1];
    v35 = a3[3];
    v37 = *a3;
    v36 = a3[1];
    a2[2] = a3[2];
    a2[3] = v35;
    *a2 = v37;
    a2[1] = v36;
    *a3 = v34;
    a3[1] = v33;
    a3[2] = v32;
    a3[3] = v31;
    v38 = *a4;
    v39 = *a2;
    v40 = a2[1];
    v41 = a2[3];
    v76[2] = a2[2];
    v76[3] = v41;
    v76[0] = v39;
    v76[1] = v40;
    v42 = *a1;
    v43 = a1[1];
    v44 = a1[3];
    v75[2] = a1[2];
    v75[3] = v44;
    v75[0] = v42;
    v75[1] = v43;
    if (v38(v76, v75))
    {
      v46 = a1[2];
      v45 = a1[3];
      v48 = *a1;
      v47 = a1[1];
      v49 = a2[3];
      v51 = *a2;
      v50 = a2[1];
      a1[2] = a2[2];
      a1[3] = v49;
      *a1 = v51;
      a1[1] = v50;
      *a2 = v48;
      a2[1] = v47;
      result = 2;
      a2[2] = v46;
      a2[3] = v45;
      return result;
    }
  }
  return 1;
}

__int128 *sub_10013DD04(__int128 *a1, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  __int128 *v4;
  __int128 v6;
  __int128 v7;
  uint64_t (*v8)(_QWORD, _QWORD);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 *v12;
  __int128 *v13;
  uint64_t (*v14)(_QWORD, _QWORD);
  __int128 v15;
  __int128 v16;
  char v17;
  __int128 *v18;
  uint64_t (*v19)(_QWORD, _QWORD);
  __int128 v20;
  __int128 v21;
  int v22;
  __int128 *v23;
  uint64_t (*v24)(_QWORD, _QWORD);
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int (*v40)(_QWORD, _QWORD);
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t (*v45)(_QWORD, _QWORD);
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v54[4];
  _OWORD v55[4];
  _OWORD v56[4];
  _OWORD v57[4];
  _OWORD v58[4];
  _OWORD v59[4];
  _OWORD v60[4];
  _OWORD v61[4];
  _OWORD v62[4];
  _OWORD v63[4];
  _OWORD v64[4];
  _OWORD v65[4];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;

  v4 = a2;
  v6 = a1[1];
  v66 = *a1;
  v67 = v6;
  v7 = a1[3];
  v68 = a1[2];
  v69 = v7;
  v8 = *a3;
  v65[0] = v66;
  v65[1] = v6;
  v65[2] = v68;
  v65[3] = v7;
  v9 = *(a2 - 4);
  v10 = *(a2 - 3);
  v11 = *(a2 - 1);
  v64[2] = *(a2 - 2);
  v64[3] = v11;
  v64[0] = v9;
  v64[1] = v10;
  if ((v8(v65, v64) & 1) != 0)
  {
    v12 = a1;
    do
    {
      v13 = v12 + 4;
      v14 = *a3;
      v63[0] = v66;
      v63[1] = v67;
      v63[2] = v68;
      v63[3] = v69;
      v15 = v12[5];
      v62[0] = v12[4];
      v62[1] = v15;
      v16 = v12[7];
      v62[2] = v12[6];
      v62[3] = v16;
      v17 = v14(v63, v62);
      v12 = v13;
    }
    while ((v17 & 1) == 0);
  }
  else
  {
    v18 = a1 + 4;
    do
    {
      v13 = v18;
      if (v18 >= v4)
        break;
      v19 = *a3;
      v61[0] = v66;
      v61[1] = v67;
      v61[2] = v68;
      v61[3] = v69;
      v20 = v13[1];
      v60[0] = *v13;
      v60[1] = v20;
      v21 = v13[3];
      v60[2] = v13[2];
      v60[3] = v21;
      v22 = v19(v61, v60);
      v18 = v13 + 4;
    }
    while (!v22);
  }
  if (v13 >= v4)
  {
    v23 = v4;
  }
  else
  {
    do
    {
      v23 = v4 - 4;
      v24 = *a3;
      v59[0] = v66;
      v59[1] = v67;
      v59[2] = v68;
      v59[3] = v69;
      v25 = *(v4 - 3);
      v58[0] = *(v4 - 4);
      v58[1] = v25;
      v26 = *(v4 - 1);
      v58[2] = *(v4 - 2);
      v58[3] = v26;
      v4 -= 4;
    }
    while ((v24(v59, v58) & 1) != 0);
  }
  while (v13 < v23)
  {
    v27 = *v13;
    v28 = v13[1];
    v29 = v13[3];
    v72 = v13[2];
    v73 = v29;
    v70 = v27;
    v71 = v28;
    v30 = *v23;
    v31 = v23[1];
    v32 = v23[3];
    v13[2] = v23[2];
    v13[3] = v32;
    *v13 = v30;
    v13[1] = v31;
    v33 = v70;
    v34 = v71;
    v35 = v73;
    v23[2] = v72;
    v23[3] = v35;
    *v23 = v33;
    v23[1] = v34;
    do
    {
      v57[0] = v66;
      v57[1] = v67;
      v57[2] = v68;
      v57[3] = v69;
      v36 = v13[6];
      v37 = v13[7];
      v39 = v13[4];
      v38 = v13[5];
      v13 += 4;
      v40 = (unsigned int (*)(_QWORD, _QWORD))*a3;
      v56[2] = v36;
      v56[3] = v37;
      v56[0] = v39;
      v56[1] = v38;
    }
    while (!v40(v57, v56));
    do
    {
      v55[0] = v66;
      v55[1] = v67;
      v55[2] = v68;
      v55[3] = v69;
      v41 = *(v23 - 2);
      v42 = *(v23 - 1);
      v44 = *(v23 - 4);
      v43 = *(v23 - 3);
      v23 -= 4;
      v45 = *a3;
      v54[2] = v41;
      v54[3] = v42;
      v54[0] = v44;
      v54[1] = v43;
    }
    while ((v45(v55, v54) & 1) != 0);
  }
  v46 = v13 - 4;
  if (v13 - 4 != a1)
  {
    v47 = *v46;
    v48 = *(v13 - 3);
    v49 = *(v13 - 1);
    a1[2] = *(v13 - 2);
    a1[3] = v49;
    *a1 = v47;
    a1[1] = v48;
  }
  v50 = v66;
  v51 = v67;
  v52 = v69;
  *(v13 - 2) = v68;
  *(v13 - 1) = v52;
  *v46 = v50;
  *(v13 - 3) = v51;
  return v13;
}

__int128 *sub_10013DF28(__int128 *a1, __int128 *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t (*v9)(_QWORD, _QWORD);
  __int128 v10;
  __int128 v11;
  __int128 *v12;
  __int128 *v13;
  __int128 *v14;
  unsigned int (*v15)(_QWORD, _QWORD);
  __int128 v16;
  __int128 v17;
  uint64_t (*v18)(_QWORD, _QWORD);
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t (*v34)(_QWORD, _QWORD);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int (*v39)(_QWORD, _QWORD);
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v47[4];
  _OWORD v48[4];
  _OWORD v49[4];
  _OWORD v50[4];
  _OWORD v51[4];
  _OWORD v52[4];
  _OWORD v53[4];
  _OWORD v54[4];
  _OWORD v55[4];
  _OWORD v56[4];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v6 = 0;
  v7 = a1[1];
  v57 = *a1;
  v58 = v7;
  v8 = a1[3];
  v59 = a1[2];
  v60 = v8;
  do
  {
    v9 = *a3;
    v10 = a1[v6 + 5];
    v56[0] = a1[v6 + 4];
    v56[1] = v10;
    v11 = a1[v6 + 7];
    v56[2] = a1[v6 + 6];
    v56[3] = v11;
    v55[0] = v57;
    v55[1] = v58;
    v55[2] = v59;
    v55[3] = v60;
    v6 += 4;
  }
  while ((v9(v56, v55) & 1) != 0);
  v12 = &a1[v6];
  v13 = &a1[v6 - 4];
  if (v6 == 4)
  {
    while (v12 < a2)
    {
      v18 = *a3;
      v14 = a2 - 4;
      v19 = *(a2 - 3);
      v54[0] = *(a2 - 4);
      v54[1] = v19;
      v20 = *(a2 - 1);
      v54[2] = *(a2 - 2);
      v54[3] = v20;
      v53[0] = v57;
      v53[1] = v58;
      v53[2] = v59;
      v53[3] = v60;
      a2 -= 4;
      if ((v18(v54, v53) & 1) != 0)
        goto LABEL_9;
    }
    v14 = a2;
  }
  else
  {
    do
    {
      v14 = a2 - 4;
      v15 = (unsigned int (*)(_QWORD, _QWORD))*a3;
      v16 = *(a2 - 3);
      v52[0] = *(a2 - 4);
      v52[1] = v16;
      v17 = *(a2 - 1);
      v52[2] = *(a2 - 2);
      v52[3] = v17;
      v51[0] = v57;
      v51[1] = v58;
      v51[2] = v59;
      v51[3] = v60;
      a2 -= 4;
    }
    while (!v15(v52, v51));
  }
LABEL_9:
  if (v12 < v14)
  {
    v21 = v12;
    v22 = v14;
    do
    {
      v24 = v21[1];
      v61 = *v21;
      v23 = v61;
      v62 = v24;
      v26 = v21[3];
      v63 = v21[2];
      v25 = v63;
      v64 = v26;
      v28 = v22[2];
      v27 = v22[3];
      v29 = v22[1];
      *v21 = *v22;
      v21[1] = v29;
      v21[2] = v28;
      v21[3] = v27;
      v22[2] = v25;
      v22[3] = v26;
      *v22 = v23;
      v22[1] = v24;
      do
      {
        v30 = v21[6];
        v31 = v21[7];
        v33 = v21[4];
        v32 = v21[5];
        v21 += 4;
        v34 = *a3;
        v50[2] = v30;
        v50[3] = v31;
        v50[0] = v33;
        v50[1] = v32;
        v49[0] = v57;
        v49[1] = v58;
        v49[2] = v59;
        v49[3] = v60;
      }
      while ((v34(v50, v49) & 1) != 0);
      do
      {
        v35 = *(v22 - 2);
        v36 = *(v22 - 1);
        v38 = *(v22 - 4);
        v37 = *(v22 - 3);
        v22 -= 4;
        v39 = (unsigned int (*)(_QWORD, _QWORD))*a3;
        v48[2] = v35;
        v48[3] = v36;
        v48[0] = v38;
        v48[1] = v37;
        v47[0] = v57;
        v47[1] = v58;
        v47[2] = v59;
        v47[3] = v60;
      }
      while (!v39(v48, v47));
    }
    while (v21 < v22);
    v13 = v21 - 4;
  }
  if (v13 != a1)
  {
    v40 = *v13;
    v41 = v13[1];
    v42 = v13[3];
    a1[2] = v13[2];
    a1[3] = v42;
    *a1 = v40;
    a1[1] = v41;
  }
  v43 = v57;
  v44 = v58;
  v45 = v60;
  v13[2] = v59;
  v13[3] = v45;
  *v13 = v43;
  v13[1] = v44;
  return v13;
}

BOOL sub_10013E134(uint64_t a1, __n128 *a2, unsigned int (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int (*v8)(_QWORD, _QWORD);
  __n128 v9;
  __n128 v10;
  __int128 v11;
  __int128 v12;
  __n128 *v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 *v21;
  __n128 *v22;
  uint64_t v23;
  int v24;
  unsigned int (*v25)(_QWORD, _QWORD);
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  unsigned int (*v37)(_QWORD, _QWORD);
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  __n128 v41;
  __n128 v42;
  _OWORD v43[4];
  _OWORD v44[4];
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  _OWORD v49[4];
  _OWORD v50[4];
  _OWORD v51[4];
  _OWORD v52[8];

  v6 = ((uint64_t)a2 - a1) >> 6;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = *a3;
      v9 = a2[-3];
      v52[0] = a2[-4];
      v52[1] = v9;
      v10 = a2[-1];
      v52[2] = a2[-2];
      v52[3] = v10;
      v11 = *(_OWORD *)(a1 + 16);
      v51[0] = *(_OWORD *)a1;
      v51[1] = v11;
      v12 = *(_OWORD *)(a1 + 48);
      v51[2] = *(_OWORD *)(a1 + 32);
      v51[3] = v12;
      if (!v8(v52, v51))
        return 1;
      v13 = a2 - 4;
      v15 = *(__n128 *)(a1 + 32);
      v14 = *(__n128 *)(a1 + 48);
      v17 = *(__n128 *)a1;
      v16 = *(__n128 *)(a1 + 16);
      v18 = a2[-1];
      v20 = a2[-4];
      v19 = a2[-3];
      *(__n128 *)(a1 + 32) = a2[-2];
      *(__n128 *)(a1 + 48) = v18;
      *(__n128 *)a1 = v20;
      *(__n128 *)(a1 + 16) = v19;
      *v13 = v17;
      v13[1] = v16;
      result = 1;
      v13[2] = v15;
      v13[3] = v14;
      return result;
    case 3:
      sub_10013DB0C((_OWORD *)a1, (_OWORD *)(a1 + 64), (__n128 *)a2[-4].n128_u64, a3);
      return 1;
    case 4:
      sub_10013E378((__n128 *)a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), a2 - 4, a3);
      return 1;
    case 5:
      sub_10013E4C0(a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), (__n128 *)(a1 + 192), a2 - 4, a3);
      return 1;
    default:
      v21 = (__n128 *)(a1 + 128);
      sub_10013DB0C((_OWORD *)a1, (_OWORD *)(a1 + 64), (_OWORD *)(a1 + 128), a3);
      v22 = (__n128 *)(a1 + 192);
      if ((__n128 *)(a1 + 192) == a2)
        return 1;
      v23 = 0;
      v24 = 0;
      break;
  }
  while (1)
  {
    v25 = *a3;
    v26 = v22[1];
    v50[0] = *v22;
    v50[1] = v26;
    v27 = v22[3];
    v50[2] = v22[2];
    v50[3] = v27;
    v28 = v21[3];
    v30 = *v21;
    v29 = v21[1];
    v49[2] = v21[2];
    v49[3] = v28;
    v49[0] = v30;
    v49[1] = v29;
    if (v25(v50, v49))
    {
      v31 = v22[1];
      v45 = *v22;
      v46 = v31;
      v32 = v22[3];
      v47 = v22[2];
      v48 = v32;
      v33 = v23;
      while (1)
      {
        v34 = (_OWORD *)(a1 + v33);
        v35 = *(_OWORD *)(a1 + v33 + 144);
        v34[12] = *(_OWORD *)(a1 + v33 + 128);
        v34[13] = v35;
        v36 = *(_OWORD *)(a1 + v33 + 176);
        v34[14] = *(_OWORD *)(a1 + v33 + 160);
        v34[15] = v36;
        if (v33 == -128)
          break;
        v37 = *a3;
        v44[0] = v45;
        v44[1] = v46;
        v44[2] = v47;
        v44[3] = v48;
        v38 = v34[5];
        v43[0] = v34[4];
        v43[1] = v38;
        v39 = v34[7];
        v43[2] = v34[6];
        v43[3] = v39;
        v33 -= 64;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v37)(v44, v43) & 1) == 0)
        {
          v40 = (_OWORD *)(a1 + v33 + 192);
          goto LABEL_12;
        }
      }
      v40 = (_OWORD *)a1;
LABEL_12:
      v41 = v46;
      *v40 = v45;
      v40[1] = v41;
      v42 = v48;
      v40[2] = v47;
      v40[3] = v42;
      if (++v24 == 8)
        return &v22[4] == a2;
    }
    v21 = v22;
    v23 += 64;
    v22 += 4;
    if (v22 == a2)
      return 1;
  }
}

__n128 sub_10013E378(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(_QWORD, _QWORD))
{
  unsigned int (*v10)(_QWORD, _QWORD);
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 result;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  unsigned int (*v23)(_QWORD, _QWORD);
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  unsigned int (*v37)(_QWORD, _QWORD);
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  _OWORD v50[4];
  _OWORD v51[4];
  _OWORD v52[4];
  _OWORD v53[4];
  _OWORD v54[4];
  _OWORD v55[16];

  sub_10013DB0C(a1, a2, a3, a5);
  v10 = *a5;
  v11 = a4[1];
  v55[0] = *a4;
  v55[1] = v11;
  v12 = a4[3];
  v55[2] = a4[2];
  v55[3] = v12;
  v13 = a3[1];
  v54[0] = *a3;
  v54[1] = v13;
  v14 = a3[3];
  v54[2] = a3[2];
  v54[3] = v14;
  if (v10(v55, v54))
  {
    v17 = a3[2];
    v16 = a3[3];
    v19 = *a3;
    v18 = a3[1];
    v20 = a4[3];
    v22 = *a4;
    v21 = a4[1];
    a3[2] = a4[2];
    a3[3] = v20;
    *a3 = v22;
    a3[1] = v21;
    *a4 = v19;
    a4[1] = v18;
    a4[2] = v17;
    a4[3] = v16;
    v23 = *a5;
    v24 = *a3;
    v25 = a3[1];
    v26 = a3[3];
    v53[2] = a3[2];
    v53[3] = v26;
    v53[0] = v24;
    v53[1] = v25;
    v27 = *a2;
    v28 = a2[1];
    v29 = a2[3];
    v52[2] = a2[2];
    v52[3] = v29;
    v52[0] = v27;
    v52[1] = v28;
    if (v23(v53, v52))
    {
      v31 = a2[2];
      v30 = a2[3];
      v33 = *a2;
      v32 = a2[1];
      v34 = a3[3];
      v36 = *a3;
      v35 = a3[1];
      a2[2] = a3[2];
      a2[3] = v34;
      *a2 = v36;
      a2[1] = v35;
      *a3 = v33;
      a3[1] = v32;
      a3[2] = v31;
      a3[3] = v30;
      v37 = *a5;
      v38 = *a2;
      v39 = a2[1];
      v40 = a2[3];
      v51[2] = a2[2];
      v51[3] = v40;
      v51[0] = v38;
      v51[1] = v39;
      v41 = *a1;
      v42 = a1[1];
      v43 = a1[3];
      v50[2] = a1[2];
      v50[3] = v43;
      v50[0] = v41;
      v50[1] = v42;
      if (v37(v51, v50))
      {
        v44 = a1[2];
        result = a1[3];
        v46 = *a1;
        v45 = a1[1];
        v47 = a2[3];
        v49 = *a2;
        v48 = a2[1];
        a1[2] = a2[2];
        a1[3] = v47;
        *a1 = v49;
        a1[1] = v48;
        *a2 = v46;
        a2[1] = v45;
        a2[2] = v44;
        a2[3] = result;
      }
    }
  }
  return result;
}

__n128 sub_10013E4C0(uint64_t a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(_QWORD, _QWORD))
{
  unsigned int (*v12)(_QWORD, _QWORD);
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 result;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  unsigned int (*v25)(_QWORD, _QWORD);
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  unsigned int (*v39)(_QWORD, _QWORD);
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  unsigned int (*v53)(_QWORD, _QWORD);
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __int128 v58;
  __int128 v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  _OWORD v66[4];
  _OWORD v67[4];
  _OWORD v68[4];
  _OWORD v69[4];
  _OWORD v70[4];
  _OWORD v71[4];
  _OWORD v72[4];
  _OWORD v73[20];

  sub_10013E378((__n128 *)a1, a2, a3, a4, a6);
  v12 = *a6;
  v13 = a5[1];
  v73[0] = *a5;
  v73[1] = v13;
  v14 = a5[3];
  v73[2] = a5[2];
  v73[3] = v14;
  v15 = a4[1];
  v72[0] = *a4;
  v72[1] = v15;
  v16 = a4[3];
  v72[2] = a4[2];
  v72[3] = v16;
  if (v12(v73, v72))
  {
    v19 = a4[2];
    v18 = a4[3];
    v21 = *a4;
    v20 = a4[1];
    v22 = a5[3];
    v24 = *a5;
    v23 = a5[1];
    a4[2] = a5[2];
    a4[3] = v22;
    *a4 = v24;
    a4[1] = v23;
    *a5 = v21;
    a5[1] = v20;
    a5[2] = v19;
    a5[3] = v18;
    v25 = *a6;
    v26 = *a4;
    v27 = a4[1];
    v28 = a4[3];
    v71[2] = a4[2];
    v71[3] = v28;
    v71[0] = v26;
    v71[1] = v27;
    v29 = *a3;
    v30 = a3[1];
    v31 = a3[3];
    v70[2] = a3[2];
    v70[3] = v31;
    v70[0] = v29;
    v70[1] = v30;
    if (v25(v71, v70))
    {
      v33 = a3[2];
      v32 = a3[3];
      v35 = *a3;
      v34 = a3[1];
      v36 = a4[3];
      v38 = *a4;
      v37 = a4[1];
      a3[2] = a4[2];
      a3[3] = v36;
      *a3 = v38;
      a3[1] = v37;
      *a4 = v35;
      a4[1] = v34;
      a4[2] = v33;
      a4[3] = v32;
      v39 = *a6;
      v40 = *a3;
      v41 = a3[1];
      v42 = a3[3];
      v69[2] = a3[2];
      v69[3] = v42;
      v69[0] = v40;
      v69[1] = v41;
      v43 = *a2;
      v44 = a2[1];
      v45 = a2[3];
      v68[2] = a2[2];
      v68[3] = v45;
      v68[0] = v43;
      v68[1] = v44;
      if (v39(v69, v68))
      {
        v47 = a2[2];
        v46 = a2[3];
        v49 = *a2;
        v48 = a2[1];
        v50 = a3[3];
        v52 = *a3;
        v51 = a3[1];
        a2[2] = a3[2];
        a2[3] = v50;
        *a2 = v52;
        a2[1] = v51;
        *a3 = v49;
        a3[1] = v48;
        a3[2] = v47;
        a3[3] = v46;
        v53 = *a6;
        v54 = *a2;
        v55 = a2[1];
        v56 = a2[3];
        v67[2] = a2[2];
        v67[3] = v56;
        v67[0] = v54;
        v67[1] = v55;
        v57 = *(__n128 *)a1;
        v58 = *(_OWORD *)(a1 + 16);
        v59 = *(_OWORD *)(a1 + 48);
        v66[2] = *(_OWORD *)(a1 + 32);
        v66[3] = v59;
        v66[0] = v57;
        v66[1] = v58;
        if (v53(v67, v66))
        {
          v60 = *(__n128 *)(a1 + 32);
          result = *(__n128 *)(a1 + 48);
          v62 = *(__n128 *)a1;
          v61 = *(__n128 *)(a1 + 16);
          v63 = a2[3];
          v65 = *a2;
          v64 = a2[1];
          *(__n128 *)(a1 + 32) = a2[2];
          *(__n128 *)(a1 + 48) = v63;
          *(__n128 *)a1 = v65;
          *(__n128 *)(a1 + 16) = v64;
          *a2 = v62;
          a2[1] = v61;
          a2[2] = v60;
          a2[3] = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_10013E668(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  _OWORD *v13;
  _OWORD *v14;
  unsigned int (*v15)(_OWORD *, _OWORD *);
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __n128 *v28;
  __n128 v29;
  __n128 v30;
  __n128 *v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  _OWORD v41[4];
  _OWORD v42[8];
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;

  if ((_OWORD *)a1 != a2)
  {
    v8 = (uint64_t)a2 - a1;
    v9 = ((uint64_t)a2 - a1) >> 6;
    if ((uint64_t)a2 - a1 >= 65)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = (__n128 *)(a1 + (v10 << 6));
      do
      {
        sub_10013E828(a1, a4, v9, v12);
        v12 -= 4;
        --v11;
      }
      while (v11);
    }
    v13 = a2;
    if (a2 != a3)
    {
      v14 = a2;
      do
      {
        v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        v16 = v14[1];
        v42[0] = *v14;
        v42[1] = v16;
        v17 = v14[3];
        v42[2] = v14[2];
        v42[3] = v17;
        v18 = *(_OWORD *)(a1 + 16);
        v41[0] = *(_OWORD *)a1;
        v41[1] = v18;
        v19 = *(_OWORD *)(a1 + 48);
        v41[2] = *(_OWORD *)(a1 + 32);
        v41[3] = v19;
        if (v15(v42, v41))
        {
          v21 = v14[2];
          v20 = v14[3];
          v23 = *v14;
          v22 = v14[1];
          v24 = *(_OWORD *)(a1 + 48);
          v26 = *(_OWORD *)a1;
          v25 = *(_OWORD *)(a1 + 16);
          v14[2] = *(_OWORD *)(a1 + 32);
          v14[3] = v24;
          *v14 = v26;
          v14[1] = v25;
          *(_OWORD *)a1 = v23;
          *(_OWORD *)(a1 + 16) = v22;
          *(_OWORD *)(a1 + 32) = v21;
          *(_OWORD *)(a1 + 48) = v20;
          sub_10013E828(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 4;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 65)
    {
      v27 = (unint64_t)v8 >> 6;
      v28 = (__n128 *)(a2 - 4);
      do
      {
        v29 = *(__n128 *)(a1 + 16);
        v43 = *(__n128 *)a1;
        v44 = v29;
        v30 = *(__n128 *)(a1 + 48);
        v45 = *(__n128 *)(a1 + 32);
        v46 = v30;
        v31 = (__n128 *)sub_10013E9F0((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v27);
        if (v28 == v31)
        {
          v37 = v44;
          *v31 = v43;
          v31[1] = v37;
          v38 = v46;
          v31[2] = v45;
          v31[3] = v38;
        }
        else
        {
          v32 = *v28;
          v33 = v28[1];
          v34 = v28[3];
          v31[2] = v28[2];
          v31[3] = v34;
          *v31 = v32;
          v31[1] = v33;
          v35 = v44;
          *v28 = v43;
          v28[1] = v35;
          v36 = v46;
          v28[2] = v45;
          v28[3] = v36;
          sub_10013EACC(a1, (uint64_t)&v31[4], a4, ((uint64_t)&v31[4] - a1) >> 6);
        }
        v28 -= 4;
      }
      while (v27-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_10013E828(uint64_t a1, unsigned int (**a2)(_QWORD, _QWORD), uint64_t a3, __n128 *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 *v7;
  int64_t v9;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD);
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  unsigned int (*v21)(_QWORD, _QWORD);
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 result;
  __n128 v27;
  __n128 v28;
  __n128 *v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD, _QWORD);
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  unsigned int (*v39)(_QWORD, _QWORD);
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  _OWORD v44[4];
  _OWORD v45[4];
  _OWORD v46[4];
  _OWORD v47[4];
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  _OWORD v52[4];
  _OWORD v53[4];
  _OWORD v54[4];
  _OWORD v55[4];
  uint64_t v56;
  uint64_t v57;

  v6 = a3 - 2;
  if (a3 >= 2)
  {
    v56 = v4;
    v57 = v5;
    v7 = a4;
    v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - a1) >> 6)
    {
      v12 = ((uint64_t)a4 - a1) >> 5;
      v13 = v12 + 1;
      v14 = (__n128 *)(a1 + ((v12 + 1) << 6));
      v15 = v12 + 2;
      if (v12 + 2 < a3)
      {
        v16 = *a2;
        v17 = v14[1];
        v55[0] = *v14;
        v55[1] = v17;
        v18 = v14[3];
        v55[2] = v14[2];
        v55[3] = v18;
        v19 = v14[5];
        v54[0] = v14[4];
        v54[1] = v19;
        v20 = v14[7];
        v54[2] = v14[6];
        v54[3] = v20;
        if (v16(v55, v54))
        {
          v14 += 4;
          v13 = v15;
        }
      }
      v21 = *a2;
      v22 = v14[1];
      v53[0] = *v14;
      v53[1] = v22;
      v23 = v14[3];
      v53[2] = v14[2];
      v53[3] = v23;
      v24 = v7[1];
      v52[0] = *v7;
      v52[1] = v24;
      v25 = v7[3];
      v52[2] = v7[2];
      v52[3] = v25;
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v21)(v53, v52) & 1) == 0)
      {
        v27 = v7[1];
        v48 = *v7;
        v49 = v27;
        v28 = v7[3];
        v50 = v7[2];
        v51 = v28;
        do
        {
          v29 = v14;
          v30 = *v14;
          v31 = v14[1];
          v32 = v14[3];
          v7[2] = v14[2];
          v7[3] = v32;
          *v7 = v30;
          v7[1] = v31;
          if (v9 < v13)
            break;
          v33 = (2 * v13) | 1;
          v14 = (__n128 *)(a1 + (v33 << 6));
          if (2 * v13 + 2 < a3)
          {
            v34 = *a2;
            v35 = v14[1];
            v47[0] = *v14;
            v47[1] = v35;
            v36 = v14[3];
            v47[2] = v14[2];
            v47[3] = v36;
            v37 = v14[5];
            v46[0] = v14[4];
            v46[1] = v37;
            v38 = v14[7];
            v46[2] = v14[6];
            v46[3] = v38;
            if (v34(v47, v46))
            {
              v14 += 4;
              v33 = 2 * v13 + 2;
            }
          }
          v39 = *a2;
          v40 = v14[1];
          v45[0] = *v14;
          v45[1] = v40;
          v41 = v14[3];
          v45[2] = v14[2];
          v45[3] = v41;
          v44[0] = v48;
          v44[1] = v49;
          v44[2] = v50;
          v44[3] = v51;
          v7 = v29;
          v13 = v33;
        }
        while (!v39(v45, v44));
        result = v48;
        v42 = v49;
        v43 = v51;
        v29[2] = v50;
        v29[3] = v43;
        *v29 = result;
        v29[1] = v42;
      }
    }
  }
  return result;
}

_OWORD *sub_10013E9F0(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_OWORD *, _OWORD *);
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[4];
  _OWORD v24[4];

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[4 * v6 + 4];
    v10 = (2 * v6) | 1;
    v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      v12 = *a2;
      v13 = v9[3];
      v15 = *v9;
      v14 = v9[1];
      v24[2] = v9[2];
      v24[3] = v13;
      v24[0] = v15;
      v24[1] = v14;
      v16 = v9[7];
      v18 = v9[4];
      v17 = v9[5];
      v23[2] = v9[6];
      v23[3] = v16;
      v23[0] = v18;
      v23[1] = v17;
      if (v12(v24, v23))
      {
        v9 += 4;
        v10 = v11;
      }
    }
    v19 = *v9;
    v20 = v9[1];
    v21 = v9[3];
    a1[2] = v9[2];
    a1[3] = v21;
    *a1 = v19;
    a1[1] = v20;
    a1 = v9;
    v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_10013EACC(uint64_t a1, uint64_t a2, unsigned int (**a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int (*v10)(_QWORD, _QWORD);
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double result;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unsigned int (*v25)(_QWORD, _QWORD);
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[4];
  _OWORD v32[4];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[4];
  _OWORD v38[4];
  uint64_t v39;
  uint64_t v40;

  v6 = a4 - 2;
  if (a4 >= 2)
  {
    v39 = v4;
    v40 = v5;
    v10 = *a3;
    v11 = v6 >> 1;
    v12 = (_OWORD *)(a1 + (v6 >> 1 << 6));
    v13 = v12[1];
    v38[0] = *v12;
    v38[1] = v13;
    v14 = v12[3];
    v38[2] = v12[2];
    v38[3] = v14;
    v15 = *(_OWORD *)(a2 - 48);
    v37[0] = *(_OWORD *)(a2 - 64);
    v37[1] = v15;
    v16 = *(_OWORD *)(a2 - 16);
    v37[2] = *(_OWORD *)(a2 - 32);
    v37[3] = v16;
    if (v10(v38, v37))
    {
      v18 = (_OWORD *)(a2 - 64);
      v19 = *(_OWORD *)(a2 - 48);
      v33 = *(_OWORD *)(a2 - 64);
      v34 = v19;
      v20 = *(_OWORD *)(a2 - 16);
      v35 = *(_OWORD *)(a2 - 32);
      v36 = v20;
      do
      {
        v21 = v12;
        v22 = *v12;
        v23 = v12[1];
        v24 = v12[3];
        v18[2] = v12[2];
        v18[3] = v24;
        *v18 = v22;
        v18[1] = v23;
        if (!v11)
          break;
        v25 = *a3;
        v11 = (v11 - 1) >> 1;
        v12 = (_OWORD *)(a1 + (v11 << 6));
        v26 = v12[1];
        v32[0] = *v12;
        v32[1] = v26;
        v27 = v12[3];
        v32[2] = v12[2];
        v32[3] = v27;
        v31[0] = v33;
        v31[1] = v34;
        v31[2] = v35;
        v31[3] = v36;
        v28 = v25(v32, v31);
        v18 = v21;
      }
      while ((v28 & 1) != 0);
      v29 = v34;
      *v21 = v33;
      v21[1] = v29;
      result = *(double *)&v35;
      v30 = v36;
      v21[2] = v35;
      v21[3] = v30;
    }
  }
  return result;
}

void *sub_10013EBCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59)
    sub_10013BEB0();
  return operator new(32 * a2);
}

void *sub_10013EC00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_10013BEB0();
  return operator new(8 * a2);
}

void sub_10013EC74(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v2 = (void *)qword_1009F50C0;
  qword_1009F50C0 = v1;

}

void sub_100140588(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  const __CFString *v4;
  void *v5;
  const __CFString *v6;
  void *v7;
  dispatch_queue_global_t global_queue;
  NSObject *v9;
  id v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  const __CFString *v18;
  const __CFString *v19;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(const __CFString **)(a1 + 48);
  if (!v4)
    v4 = &stru_10091C438;
  v18 = CFSTR("buyParams");
  v19 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1));
  objc_msgSend(v2, "_recordMetricsForBuyButtonWithAssetID:actionDetails:offerType:", v3, v5, *(_QWORD *)(a1 + 56));

  if (*(_QWORD *)(a1 + 48))
    v6 = *(const __CFString **)(a1 + 48);
  else
    v6 = &stru_10091C438;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithString:](NSMutableString, "stringWithString:", v6));
  global_queue = dispatch_get_global_queue(2, 0);
  v9 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014072C;
  block[3] = &unk_1008E9138;
  v12 = *(id *)(a1 + 40);
  v13 = v7;
  v14 = *(id *)(a1 + 64);
  v15 = *(id *)(a1 + 72);
  v16 = *(id *)(a1 + 80);
  v17 = *(id *)(a1 + 88);
  v10 = v7;
  dispatch_async(v9, block);

}

void sub_10014072C(id *a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSAApplication purchaseEventFieldsWithPageId:pageType:pageContext:topic:](JSAApplication, "purchaseEventFieldsWithPageId:pageType:pageContext:topic:", a1[4], CFSTR("AudiobookPreview"), 0, 0));
  if (objc_msgSend(a1[5], "length") && objc_msgSend(v2, "length"))
  {
    if ((objc_msgSend(a1[5], "hasSuffix:", CFSTR("&")) & 1) == 0)
      objc_msgSend(a1[5], "appendString:", CFSTR("&"));
    objc_msgSend(a1[5], "appendString:", v2);
  }
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100140878;
  v3[3] = &unk_1008E9138;
  v4 = a1[5];
  v5 = a1[4];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

}

void sub_100140878(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 40), "longLongValue")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v2, v3));

  objc_msgSend(v4, "setAudiobook:", 1);
  objc_msgSend(v4, "setSuppressNetworkEvaluatorDialogs:", 1);
  objc_msgSend(v4, "setAnalyticsInfo:", *(_QWORD *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowManager"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001409D0;
  v8[3] = &unk_1008E9ED0;
  v9 = *(id *)(a1 + 56);
  v10 = *(id *)(a1 + 64);
  v11 = *(id *)(a1 + 72);
  objc_msgSend(v7, "purchaseWithRequest:uiManager:completion:", v4, v6, v8);

}

void sub_1001409D0(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100140A8C;
  v6[3] = &unk_1008E8EE0;
  v7 = a4;
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v5 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

void sub_100140A8C(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = objc_retainBlock(*(id *)(a1 + 56));
    if (v2)
    {
      v5 = v2;
      (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, 0, *(_QWORD *)(a1 + 32));
      v2 = v5;
    }

  }
  else
  {
    v3 = *(void **)(a1 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_lockupProfile"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100140B5C;
    v6[3] = &unk_1008E7818;
    v7 = *(id *)(a1 + 56);
    objc_msgSend(v3, "didPurchaseWithProductProfile:completion:", v4, v6);

  }
}

void sub_100140B5C(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, uint64_t, _QWORD))v1 + 2))(v1, 1, 0);
    v1 = v2;
  }

}

void sub_100140E94(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  char **v10;
  void *i;
  void *v12;
  char *v13;
  char *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  Class v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *j;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imaxValueForKey:", CFSTR("m_systemButtons")));
  v30 = a1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imaxValueForKey:", CFSTR("m_extraButtons")));
  v4 = objc_opt_class(NSMutableArray);
  if ((objc_opt_isKindOfClass(v2, v4) & 1) == 0)
    goto LABEL_30;
  v5 = objc_opt_class(NSMutableArray);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) == 0)
    goto LABEL_30;
  v27 = v3;
  v28 = v2;
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v6 = v2;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
  if (!v7)
    goto LABEL_22;
  v8 = v7;
  v9 = *(_QWORD *)v36;
  v10 = &selRef__mediaLibraryDidChange_;
  do
  {
    for (i = 0; i != v8; i = (char *)i + 1)
    {
      if (*(_QWORD *)v36 != v9)
        objc_enumerationMutation(v6);
      v12 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)i);
      if ((objc_opt_respondsToSelector(v12, "action") & 1) != 0)
      {
        v13 = (char *)objc_msgSend(v12, "action");
        if (v13 == "_accessibilitySpeak:" || v13 == v10[82])
        {
          v15 = v13;
          objc_msgSend(v12, "setHidden:", 1);
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v30 + 32), "imaxValueForKey:", CFSTR("_accessibilitySystemShouldShowPauseBubble")));
          if (objc_msgSend(v16, "BOOLValue") && v15 == v10[82])
          {

LABEL_19:
            v19 = NSClassFromString(CFSTR("UICalloutBarButton"));
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "titleForState:", 0));
            v21 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class buttonWithTitle:action:type:inView:](v19, "buttonWithTitle:action:type:inView:", v20, v15, 5, *(_QWORD *)(v30 + 32)));

            objc_msgSend(v29, "addObject:", v21);
            v10 = &selRef__mediaLibraryDidChange_;
            continue;
          }
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v30 + 32), "imaxValueForKey:", CFSTR("_accessibilitySystemShouldShowSpeakBubble")));
          v18 = objc_msgSend(v17, "BOOLValue");

          v10 = &selRef__mediaLibraryDidChange_;
          if (v15 == "_accessibilitySpeak:" && v18)
            goto LABEL_19;
        }
      }
    }
    v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
  }
  while (v8);
LABEL_22:

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v22 = v29;
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
  v3 = v27;
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v32;
    do
    {
      for (j = 0; j != v24; j = (char *)j + 1)
      {
        if (*(_QWORD *)v32 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(v27, "addObject:", *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)j));
      }
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
    }
    while (v24);
  }

  v2 = v28;
LABEL_30:

}

void sub_1001412AC(uint64_t a1)
{
  UIAccessibilityNotifications v1;
  id v2;

  v1 = IMAccessibilityMoveToElementNotification;
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastObject"));
  UIAccessibilityPostNotification(v1, v2);

}

void sub_100141964(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_1009F50D8;
  qword_1009F50D8 = v1;

}

void sub_100143464(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "q_pollStorageForMissingFilesWithGeneration:", objc_msgSend(*(id *)(a1 + 32), "fetchGeneration"));

}

uint64_t sub_100143554(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  unsigned int v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fileManager"));
  v5 = objc_msgSend(v4, "fileExistsAtPath:", v3);

  return v5 ^ 1;
}

void sub_1001436E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001436F4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "q_pollStorageForMissingFilesWithGeneration:", *(_QWORD *)(a1 + 40));

}

void sub_100143EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100143F10(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v4;

  v4 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v4)
    objc_msgSend(WeakRetained, "setTabIdentifierToShow:", v4);
  objc_msgSend(WeakRetained, "_presentTheNextViewController");

}

void sub_10014493C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_100144A30(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  void *i;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];

  v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v29 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", BKLibraryOwnershipAssetsKey));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v28 = *(_QWORD *)v31;
    v27 = BKLibraryOwnershipNewDatasourceKey;
    v7 = BKLibraryOwnershipOldDatasourceKey;
    v25 = BKLibraryOwnershipAssetIDKey;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v31 != v28)
          objc_enumerationMutation(v3);
        v9 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)i);
        v10 = objc_opt_class(NSString);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v27));
        v12 = BUDynamicCast(v10, v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

        v14 = objc_opt_class(NSString);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v7));
        v16 = BUDynamicCast(v14, v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v29 + 40), "identifier"));
        v19 = objc_msgSend(v13, "isEqual:", v18);

        if ((v19 & 1) == 0)
        {
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v25));
          objc_msgSend(v26, "addObject:", v20);

        }
        v6 |= v17 == 0;

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v5);
  }
  else
  {
    v6 = 0;
  }

  if (objc_msgSend(v26, "count"))
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesManager sharedManager](BKSeriesManager, "sharedManager"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "allSeriesItemsForAdamIDs:", v26));

    if (objc_msgSend(v22, "count"))
    {
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v29 + 40), "_arrayOfSeriesAssetsFromAdamIDs:insertNullsForMissingAssets:", v22, 0));
      if (objc_msgSend(v23, "count"))
      {
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v29 + 40), "libraryManager"));
        objc_msgSend(v24, "libraryDataSource:updatedAssets:", *(_QWORD *)(v29 + 40), v23);

      }
    }

  }
  if ((v6 & 1) != 0)
    objc_msgSend(*(id *)(v29 + 40), "_updateSeriesManager");

}

void sub_100144DC8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint8_t buf[4];
  uint64_t v8;

  v2 = BKLibraryDataSourceSeriesLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged Notification:%@", buf, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100144EBC;
  v6[3] = &unk_1008E7DA0;
  v6[4] = *(_QWORD *)(a1 + 40);
  objc_msgSend(v5, "performBackgroundReadOnlyBlock:", v6);

}

void sub_100144EBC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[5];
  uint8_t buf[4];
  void *v14;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "cloudSyncVersionsForDataType:inContext:", CFSTR("BCStoreItem"), v4));

  v7 = BKLibraryDataSourceSeriesLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged storeAssetManager:getStoreItemChangesSince:%@", buf, 0xCu);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudAssetManager sharedManager](BCCloudAssetManager, "sharedManager"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "storeAssetManager"));
  v11 = objc_msgSend(v6, "mutableCopy");
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100145028;
  v12[3] = &unk_1008EC008;
  v12[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v10, "getStoreItemChangesSince:completion:", v11, v12);

}

void sub_100145028(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  int v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;
  __int16 v25;
  int v26;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = BKLibraryDataSourceSeriesLog();
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v17 = 138413314;
    v18 = v11;
    v19 = 2112;
    v20 = v12;
    v21 = 2112;
    v22 = v13;
    v23 = 2112;
    v24 = v14;
    v25 = 1024;
    v26 = a6;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged updated:(%@) remove:(%@) currentSyncVersions:(%@) error:(%@), fetchAgain:%{BOOL}d", (uint8_t *)&v17, 0x30u);
  }

  objc_msgSend(*(id *)(a1 + 32), "storeItemsUpdatedWithCurrentCloudSyncVersions:updated:removed:", v13, v11, v12);
}

void sub_100145298(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatchQueue"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100145380;
  v15[3] = &unk_1008E7B70;
  v16 = v7;
  v17 = v8;
  v11 = *(_QWORD *)(a1 + 32);
  v18 = v9;
  v19 = v11;
  v12 = v9;
  v13 = v8;
  v14 = v7;
  dispatch_async(v10, v15);

}

void sub_100145380(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  _BYTE *v22;
  uint8_t v23;
  _BYTE v24[15];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  uint8_t v31[128];
  _BYTE buf[24];
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;

  v2 = BKLibraryDataSourceSeriesLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 48);
    *(_DWORD *)buf = 138412802;
    *(_QWORD *)&buf[4] = v4;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v5;
    *(_WORD *)&buf[22] = 2112;
    v33 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#storeItemsUpdatedWithCurrentCloudSyncVersions storeItems:%@ currentCloudSyncVersions:(%@) error:(%@)", buf, 0x20u);
  }

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v33 = sub_10004E448;
  v34 = sub_10004E298;
  v35 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v9)
          objc_enumerationMutation(v7);
        v11 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "storeID"));

        if (v12)
        {
          v13 = *(void **)(*(_QWORD *)&buf[8] + 40);
          v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "storeID"));
          objc_msgSend(v13, "addObject:", v14);
        }
        else
        {
          v15 = BKLibraryDataSourceSeriesLog();
          v14 = objc_claimAutoreleasedReturnValue(v15);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            sub_1006A211C(&v23, v24, v14);
        }

      }
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v8);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesManager sharedManager](BKSeriesManager, "sharedManager"));
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1001456B8;
  v20[3] = &unk_1008E99E8;
  v20[4] = *(_QWORD *)(a1 + 56);
  v22 = buf;
  v21 = *(id *)(a1 + 40);
  v17 = objc_retainBlock(v20);
  v29 = BKSeriesManagerAssetTypeUnknown;
  v18 = objc_msgSend(*(id *)(*(_QWORD *)&buf[8] + 40), "copy");
  v30 = v18;
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v30, &v29, 1));

  objc_msgSend(v16, "updateAssetsFromCloudSyncForAssetAdamIDsWithTypes:completion:", v19, v17);
  _Block_object_dispose(buf, 8);

}

void sub_100145684(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1001456B8(uint64_t a1)
{
  NSObject *v2;
  id v3;
  __int128 v4;
  _QWORD block[5];
  __int128 v6;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatchQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100145750;
  block[3] = &unk_1008E99E8;
  block[4] = *(_QWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 40);
  v3 = (id)v4;
  v6 = v4;
  dispatch_async(v2, block);

}

void sub_100145750(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD v7[5];
  id v8;
  void **v9;
  uint64_t v10;
  void (*v11)(uint64_t, void *);
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = *(_QWORD *)(a1 + 32);
  v9 = _NSConcreteStackBlock;
  v10 = 3221225472;
  v11 = sub_100145834;
  v12 = &unk_1008EC030;
  v4 = *(_QWORD *)(a1 + 48);
  v13 = v3;
  v14 = v4;
  objc_msgSend(v2, "libraryDataSource:updateWithName:block:");

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100145940;
  v7[3] = &unk_1008E8398;
  v6 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v6;
  objc_msgSend(v5, "performBlockOnWorkerQueue:", v7);

}

void sub_100145834(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;

  v3 = a2;
  v4 = BKLibraryDataSourceSeriesLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v10 = 138412290;
    v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#storeItemsUpdatedWithCurrentCloudSyncVersions seriesStoreBookUpdate:%@", (uint8_t *)&v10, 0xCu);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v7, "libraryDataSource:reloadInGroup:", *(_QWORD *)(a1 + 32), v3);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "priceManager"));
  objc_msgSend(v9, "invalidate:", 0);

}

void sub_100145940(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryManager"));
  objc_msgSend(v5, "updateCloudVersionFromCloudSyncVersions:inContext:", *(_QWORD *)(a1 + 40), v4);

}

id sub_10014599C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "wantsSeriesUpdated");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "_updateSeriesManager");
  return result;
}

void sub_100146AB8(id *a1)
{
  _QWORD block[4];
  id v3;
  id v4;
  id v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100146B54;
  block[3] = &unk_1008E8B48;
  v3 = a1[4];
  v5 = a1[6];
  v4 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100146B54(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "setFrame:", 0.0, 0.0, 200.0, 200.0);
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_100147378(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAsset"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "permanentOrTemporaryAssetID"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 40));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryAssetStatusController sharedController](BKLibraryAssetStatusController, "sharedController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "statusForAssetID:", *(_QWORD *)(a1 + 40)));
    objc_msgSend(*(id *)(a1 + 32), "setLibraryDownloadStatus:", v6);

    objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 0);
  }
}

uint64_t sub_100147420(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100147AC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 1);
}

uint64_t sub_100147AD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100147B60(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v3 = a2;
  if (a1)
  {
    v13 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "dataSource"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "collection"));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "libraryAsset"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "delegate"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "trackerForLibraryBookshelfInfoCell:", a1));

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "delegate"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "libraryBookshelfInfoCell:analyticsAssetPropertyProviderForLibraryAsset:fromSourceView:inCollection:", a1, v6, v13, v5));

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "delegate"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "libraryBookshelfInfoCell:menuWithLibraryAsset:sourceView:collection:", a1, v6, v13, v5));

    if (v6 && v8 && v10 && v12)
    {
      objc_msgSend(v13, "setupAppAnalyticsReportingUsingTracker:withPropertyProvider:", v8, v10);
      objc_msgSend(v13, "setShowsMenuAsPrimaryAction:", 1);
      objc_msgSend(v13, "setMenu:", v12);
    }

    v3 = v13;
  }

}

id sub_100147E68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 1);
}

uint64_t sub_100147E74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100148D40(uint64_t a1)
{
  unsigned __int8 v2;
  void *v3;
  unsigned __int8 v4;
  unsigned int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  int v12;
  uint64_t v13;
  void *v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  unsigned int v28;
  void *v29;
  int v30;
  uint64_t v31;
  void *v32;
  void *v33;
  char v34;
  void *v35;
  unsigned int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  unsigned int v48;
  void *v49;
  void *v50;
  const __CFString *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  float v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  _QWORD v81[4];
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[5];
  _QWORD v87[5];
  _QWORD v88[5];
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  _QWORD v92[4];
  id v93;
  uint64_t v94;
  _QWORD v95[4];
  id v96;
  _QWORD v97[6];
  _QWORD v98[5];

  objc_msgSend(*(id *)(a1 + 32), "updateInfoKind");
  v2 = +[BKReachability isOffline](BKReachability, "isOffline");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance"));
  v4 = objc_msgSend(v3, "isBookStoreAllowed");

  v5 = objc_msgSend(*(id *)(a1 + 32), "infoKind");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moreButton"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "superview"));
  v8 = v7;
  if (v5 != 8 || (v2 & 1) == 0)
  {
    if (v7)
    {
      v10 = *(unsigned __int8 *)(a1 + 40);

      if (!v10)
        goto LABEL_11;
    }
    else
    {

    }
    objc_msgSend(*(id *)(a1 + 32), "createOrUpdateMoreButton");
    goto LABEL_10;
  }

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moreButton"));
    objc_msgSend(v9, "removeFromSuperview");

LABEL_10:
    objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  }
LABEL_11:
  objc_msgSend(*(id *)(a1 + 32), "createOrUpdateAudiobookBadge");
  objc_msgSend(*(id *)(a1 + 32), "createOrUpdateCloudButton");
  objc_msgSend(*(id *)(a1 + 32), "createOrUpdateDownloadProgressButton");
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badge"));
  if (!v11 || (v12 = *(unsigned __int8 *)(a1 + 40), v11, v12))
  {
    switch(objc_msgSend(*(id *)(a1 + 32), "infoKind"))
    {
      case 2u:
      case 0xAu:
        v13 = *(_QWORD *)(a1 + 32);
        v14 = *(void **)(v13 + 48);
        if (v14)
        {
          objc_msgSend(v14, "assetAudiobookStatusTrackTimeRemaining");
          v16 = -v15;
          v17 = *(void **)(a1 + 32);
          v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "cellMetrics"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeRemainingFontAttributes"));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "foregroundColor"));
          v97[0] = _NSConcreteStackBlock;
          v97[1] = 3221225472;
          v97[2] = sub_1001498F4;
          v97[3] = &unk_1008EC0E0;
          *(double *)&v97[5] = v16;
          v97[4] = *(_QWORD *)(a1 + 32);
          objc_msgSend(v17, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", 0, v20, v97);

        }
        else
        {
          if (!objc_msgSend(*(id *)(v13 + 16), "isFinished"))
          {
            v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "readingProgress"));
            v22 = v65;
            if (v65)
            {
              objc_msgSend(v65, "floatValue");
              if (v66 > 0.0)
              {
                v67 = *(void **)(a1 + 32);
                v68 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksGray](UIColor, "bc_booksGray"));
                v92[0] = _NSConcreteStackBlock;
                v92[1] = 3221225472;
                v92[2] = sub_100149AA0;
                v92[3] = &unk_1008EC108;
                v69 = v22;
                v70 = *(_QWORD *)(a1 + 32);
                v93 = v69;
                v94 = v70;
                objc_msgSend(v67, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", 0, v68, v92);

                goto LABEL_25;
              }
            }
            v76 = *(void **)(a1 + 32);
            v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "cellMetrics"));
            v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "unreadBadgeColor"));
            v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
            v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "infoBadgeFontAttributes"));
            v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v79, "foregroundColor"));
            v91[0] = _NSConcreteStackBlock;
            v91[1] = 3221225472;
            v91[2] = sub_100149B20;
            v91[3] = &unk_1008EC0B8;
            v91[4] = *(_QWORD *)(a1 + 32);
            objc_msgSend(v76, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", v77, v80, v91);

            goto LABEL_58;
          }
          v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
          v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "localizedStringForKey:value:table:", CFSTR("Finished_Infobar"), CFSTR("Finished"), &stru_10091C438));

          v62 = *(void **)(a1 + 32);
          v63 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksGray](UIColor, "bc_booksGray"));
          v95[0] = _NSConcreteStackBlock;
          v95[1] = 3221225472;
          v95[2] = sub_1001499AC;
          v95[3] = &unk_1008EC0B8;
          v96 = v61;
          v18 = v61;
          objc_msgSend(v62, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", 0, v63, v95);

        }
        goto LABEL_26;
      case 3u:
        if ((v4 & 1) != 0
          || (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "isStoreOrSeriesItem") & 1) == 0)
        {
          v21 = *(void **)(a1 + 32);
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "nextBadgeColor"));
          v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
          v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
          v90[0] = _NSConcreteStackBlock;
          v90[1] = 3221225472;
          v90[2] = sub_100149BD4;
          v90[3] = &unk_1008EC0B8;
          v90[4] = *(_QWORD *)(a1 + 32);
          v27 = v90;
          goto LABEL_24;
        }
        goto LABEL_26;
      case 4u:
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "proofBadgeColor"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
        v89[0] = _NSConcreteStackBlock;
        v89[1] = 3221225472;
        v89[2] = sub_100149C88;
        v89[3] = &unk_1008EC0B8;
        v89[4] = *(_QWORD *)(a1 + 32);
        v27 = v89;
        goto LABEL_24;
      case 5u:
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "preOrderableBadgeColor"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
        v88[0] = _NSConcreteStackBlock;
        v88[1] = 3221225472;
        v88[2] = sub_100149D3C;
        v88[3] = &unk_1008EC0B8;
        v88[4] = *(_QWORD *)(a1 + 32);
        v27 = v88;
        goto LABEL_24;
      case 6u:
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "preOrderedBadgeColor"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
        v87[0] = _NSConcreteStackBlock;
        v87[1] = 3221225472;
        v87[2] = sub_100149DF0;
        v87[3] = &unk_1008EC0B8;
        v87[4] = *(_QWORD *)(a1 + 32);
        v27 = v87;
        goto LABEL_24;
      case 7u:
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "sampleBadgeColor"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
        v86[0] = _NSConcreteStackBlock;
        v86[1] = 3221225472;
        v86[2] = sub_100149EA4;
        v86[3] = &unk_1008EC0B8;
        v86[4] = *(_QWORD *)(a1 + 32);
        v27 = v86;
        goto LABEL_24;
      case 8u:
        v37 = objc_msgSend(*(id *)(a1 + 32), "_shouldRemovePriceBadge");
        v38 = *(void **)(a1 + 32);
        if (v37)
        {
          v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "badge"));
          objc_msgSend(v39, "removeFromSuperview");

          objc_msgSend(*(id *)(a1 + 32), "setBadge:", 0);
          objc_msgSend(*(id *)(a1 + 32), "createOrUpdateFinishedLabelIfNeeded");
        }
        else
        {
          objc_msgSend(v38, "createOrUpdatePriceBadge");
        }
        goto LABEL_26;
      case 9u:
        v22 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
        v84 = 0;
        v85 = 0;
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "seriesID"));
        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "uiChildContext"));
        objc_msgSend(v22, "countOfSeriesLibraryAssetsWithSeriesID:total:markedFinished:context:", v40, &v85, &v84, v41);

        v42 = objc_opt_class(BKLibraryAsset);
        v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "seriesBooks"));
        v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "allObjects"));
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "firstObject"));
        v46 = BUDynamicCast(v42, v45);
        v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
        v48 = objc_msgSend(v47, "isAudiobook");

        v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v50 = v49;
        if (v48)
          v51 = CFSTR("%lu audiobooks");
        else
          v51 = CFSTR("%lu books");
        v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v49, "localizedStringForKey:value:table:", v51, &stru_10091C438, 0));

        v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v52, v85));
        v54 = v53;
        v55 = v84;
        if (!v84)
        {
          v59 = v53;
          goto LABEL_51;
        }
        v56 = v85;
        v57 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v58 = v57;
        if (v55 == v56)
        {
          v59 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "localizedStringForKey:value:table:", CFSTR("Finished_Infobar"), CFSTR("Finished"), &stru_10091C438));

LABEL_51:
          v64 = 0;
          goto LABEL_56;
        }
        v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "localizedStringForKey:value:table:", CFSTR("Finished %lu of %lu"), &stru_10091C438, 0));

        v59 = (id)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v71, v84, v85));
        v64 = v54;

LABEL_56:
        v72 = *(void **)(a1 + 32);
        v73 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksGray](UIColor, "bc_booksGray"));
        v81[0] = _NSConcreteStackBlock;
        v81[1] = 3221225472;
        v81[2] = sub_100149F58;
        v81[3] = &unk_1008EC108;
        v82 = v59;
        v83 = v64;
        v74 = v64;
        v75 = v59;
        objc_msgSend(v72, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", 0, v73, v81);

LABEL_58:
LABEL_25:

LABEL_26:
        objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
        break;
      default:
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cellMetrics"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "unreadBadgeColor"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "infoBadgeFontAttributes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "foregroundColor"));
        v98[0] = _NSConcreteStackBlock;
        v98[1] = 3221225472;
        v98[2] = sub_100149840;
        v98[3] = &unk_1008EC0B8;
        v98[4] = *(_QWORD *)(a1 + 32);
        v27 = v98;
LABEL_24:
        objc_msgSend(v21, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", v23, v26, v27);

        goto LABEL_25;
    }
  }
  v28 = objc_msgSend(*(id *)(a1 + 32), "showsDateBadge");
  if (objc_msgSend(*(id *)(a1 + 32), "infoKind") != 5
    && objc_msgSend(*(id *)(a1 + 32), "infoKind") != 6)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "removeFromSuperview");
    v31 = *(_QWORD *)(a1 + 32);
    v32 = *(void **)(v31 + 88);
    *(_QWORD *)(v31 + 88) = 0;

    if (!v28)
      return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
    goto LABEL_35;
  }
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dateBadge"));
  if (!v29 || (v30 = *(unsigned __int8 *)(a1 + 40), v29, v30))
    objc_msgSend(*(id *)(a1 + 32), "createOrUpdateDateBadge");
  if ((v28 & 1) == 0)
  {
LABEL_35:
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v34 = objc_opt_respondsToSelector(v33, "libraryBookshelfInfoCellDidChangeContentHeight:");

    if ((v34 & 1) != 0)
    {
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
      objc_msgSend(v35, "libraryBookshelfInfoCellDidChangeContentHeight:", *(_QWORD *)(a1 + 32));

    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_100149840(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarNew"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_1001498F4(uint64_t a1, void *a2)
{
  double v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(double *)(a1 + 40);
  v4 = a2;
  v8 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithDuration:](NSString, "stringWithDuration:", v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "timeRemainingFontAttributes"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v8, v6));
  objc_msgSend(v4, "setAttributedBadgeText:", v7);

}

void sub_1001499AC(uint64_t a1, void *a2)
{
  sub_1001499C0(a2, *(void **)(a1 + 32), 0);
}

void sub_1001499C0(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont _preferredFontForTextStyle:maximumContentSizeCategory:](UIFont, "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleFootnote, UIContentSizeCategoryExtraLarge));
  objc_msgSend(v7, "setFont:", v8);

  objc_msgSend(v7, "setBadgeText:", v6);
  objc_msgSend(v7, "setFallbackBadgeText:", v5);

  v9 = (id)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksGray](UIColor, "bc_booksGray"));
  objc_msgSend(v7, "setTextColor:", v9);

}

void sub_100149AA0(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
  v4 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSString bc_formattedReadingProgress:isFinished:](NSString, "bc_formattedReadingProgress:isFinished:", v2, objc_msgSend(v3, "isFinished")));
  sub_1001499C0(v4, v5, 0);

}

void sub_100149B20(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarNew"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149BD4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarNext"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149C88(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarProof"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149D3C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarPreOrderable"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149DF0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarPreOrdered"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149EA4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "infoBarSample"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBadgeFontAttributes"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v9, v7));
  objc_msgSend(v4, "setAttributedBadgeText:", v8);

}

void sub_100149F58(uint64_t a1, void *a2)
{
  sub_1001499C0(a2, *(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_10014A154(uint64_t a1, void *a2)
{
  sub_1001499C0(a2, *(void **)(a1 + 32), 0);
}

void sub_10014ADC8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10014ADE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014AE98;
  block[3] = &unk_1008E7518;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v7 = *(id *)(a1 + 32);
  v8 = v4;
  v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_10014AE98(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  void *v17;
  id v18;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend(WeakRetained, "infoKind") != 5 && objc_msgSend(v3, "infoKind") != 6)
    {
      v4 = *(void **)(a1 + 32);
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryAsset"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeID"));
      LODWORD(v4) = objc_msgSend(v4, "isEqualToString:", v6);

      if ((_DWORD)v4)
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cellMetrics"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "infoBadgeFontAttributes"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cellMetrics"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "priceColor"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "attributesWithForegroundColor:", v10));

        v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "foregroundColor"));
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_10014B038;
        v15[3] = &unk_1008EC130;
        v16 = *(id *)(a1 + 40);
        v17 = v3;
        v18 = v11;
        v14 = v11;
        objc_msgSend(v3, "createOrUpdateBadgeWithBadgeBackgroundColor:badgeFrameColor:textConfigurationBlock:", v12, v13, v15);

      }
    }
  }

}

void sub_10014B038(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  if (objc_msgSend(v3, "length"))
  {
    v5 = *(id *)(a1 + 32);
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataSource"));
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "infoBarBuy"));

    v5 = v8;
  }
  v9 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v5, *(_QWORD *)(a1 + 48)));
  objc_msgSend(v4, "setAttributedText:", v7);

}

id sub_10014B618(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badge"));
  objc_msgSend(v2, "removeFromSuperview");

  objc_msgSend(*(id *)(a1 + 32), "setBadge:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 0);
}

id sub_10014B660(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 0);
}

id sub_10014B66C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 1);
}

id sub_10014B678(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 0);
}

id sub_10014B684(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 0);
}

id sub_10014B690(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 1);
}

id sub_10014B6F4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateConfiguration:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

void sub_10014C5AC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  id v7;
  void *v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "processSeriesBooksQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10014C6B4;
    block[3] = &unk_1008EB378;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    v10 = *(id *)(a1 + 32);
    v11 = v3;
    dispatch_async(v6, block);

    objc_destroyWeak(&v12);
  }
  else
  {
    v7 = objc_retainBlock(v3);
    v8 = v7;
    if (v7)
      (*((void (**)(id))v7 + 2))(v7);

  }
}

void sub_10014C6B4(id *a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "seriesIDsToResetNext"));
    v5 = objc_msgSend(v4, "copy");

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "seriesIDsToResetNext"));
    objc_msgSend(v6, "removeAllObjects");

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "libraryManager"));
    v8 = objc_msgSend(v7, "newPrivateQueueManagedObjectContext");

    objc_msgSend(v8, "setSessionContextType:", 4);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_10014C818;
    v13[3] = &unk_1008EC180;
    v14 = v5;
    v15 = v3;
    v16 = v8;
    v17 = a1[4];
    v18 = a1[5];
    v9 = v8;
    v10 = v5;
    objc_msgSend(v9, "performBlock:", v13);

  }
  else
  {
    v11 = objc_retainBlock(a1[5]);
    v12 = v11;
    if (v11)
      (*((void (**)(id))v11 + 2))(v11);

  }
}

void sub_10014C818(id *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(a1[5], "_resetNextForSeriesID:inMOC:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6), a1[6], (_QWORD)v10);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  if (objc_msgSend(a1[6], "hasChanges"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "libraryManager"));
    objc_msgSend(v7, "saveManagedObjectContext:", a1[6]);

  }
  v8 = objc_retainBlock(a1[8]);
  v9 = v8;
  if (v8)
    (*((void (**)(id))v8 + 2))(v8);

}

void sub_10014C950(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void (**v4)(_QWORD);
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_migrateAudiobookProgressIfNeeded");
  v4 = (void (**)(_QWORD))objc_retainBlock(v3);

  if (v4)
    v4[2](v4);

}

void sub_10014CA78(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "markedAssets"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10014CAC8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "markedAssets"));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));

}

void sub_10014CB08(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "seriesIDsToResetNext"));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescedResetNextInSeries"));
  objc_msgSend(v3, "signalWithCompletion:", &stru_1008EC1C8);

}

void sub_10014CE90(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = sub_100063710();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_mediaLibraryDidChange: migration done", v3, 2u);
  }

}

void sub_10014CF98(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  id v31;
  id v32;
  _BYTE v33[128];
  _QWORD v34[2];

  v3 = a2;
  v4 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v5 = objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:", *(_QWORD *)(a1 + 32)));
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K != NULL AND %K != 0"), CFSTR("seriesID"), CFSTR("seriesID")));
  v24 = (void *)v5;
  v34[0] = v5;
  v34[1] = v23;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v34, 2));
  v7 = objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v6));

  v22 = (void *)v7;
  objc_msgSend(v4, "setPredicate:", v7);
  v32 = 0;
  v25 = v4;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, &v32));
  v9 = v32;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "valueForKey:", CFSTR("seriesID")));
  v11 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:", v10));
  objc_msgSend(v11, "setPredicate:", v12);

  v31 = v9;
  v26 = v3;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v11, &v31));
  v21 = v31;

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v14 = v13;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v28;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v28 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)v18);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
        objc_msgSend(v20, "updateAuthorForSeriesContainer:", v19);

        v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
    }
    while (v16);
  }

}

void sub_10014D2EC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  dispatch_queue_attr_t v14;
  NSObject *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  unsigned __int8 v20;
  id v21;
  _QWORD *v22;
  unsigned int v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  BOOL v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  dispatch_queue_t v57;
  NSObject *group;
  NSMutableDictionary *v59;
  id obj;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _QWORD v75[4];
  id v76;
  _QWORD v77[4];
  NSObject *v78;
  _QWORD *v79;
  _QWORD v80[4];
  NSObject *v81;
  NSMutableDictionary *v82;
  id v83;
  unsigned __int8 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _QWORD v89[4];
  id v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t);
  void (*v97)(uint64_t);
  id v98;
  _QWORD v99[5];
  id v100;
  id v101;
  _QWORD v102[3];
  _BYTE v103[128];
  void *v104;
  _BYTE v105[128];
  _QWORD v106[2];
  _QWORD v107[2];

  kdebug_trace(725353716, 12, 0, 0, 0);
  v67 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v56 = objc_msgSend(v2, "newManagedObjectContext");

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("NewMOC 4 %s %@"), "-[BKLibraryAssetIsNewManager resetIsNewForAssetIDs:]_block_invoke", *(_QWORD *)(v67 + 40)));
  objc_msgSend(v56, "setName:", v3);

  objc_msgSend(v56, "setSessionContextType:", 4);
  if (*(_QWORD *)(v67 + 40))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:"));
    v107[0] = v4;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForTemporaryAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForTemporaryAssetIDsTaggedLibraryAssets:", *(_QWORD *)(v67 + 40)));
    v107[1] = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v107, 2));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate orPredicateWithSubpredicates:](NSCompoundPredicate, "orPredicateWithSubpredicates:", v6));

    v106[0] = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForLibraryAssetsNotMarkedAsOld](BKLibraryManager, "predicateForLibraryAssetsNotMarkedAsOld"));
    v106[1] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v106, 2));
    v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v9));

  }
  else
  {
    v54 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForLibraryAssetsNotMarkedAsOld](BKLibraryManager, "predicateForLibraryAssetsNotMarkedAsOld"));
  }
  v68 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  objc_msgSend(v68, "setPredicate:", v54);
  objc_msgSend(v68, "setReturnsObjectsAsFaults:", 0);
  v101 = 0;
  v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "executeFetchRequest:error:", v68, &v101));
  v53 = v101;
  if (v55)
  {
    if (objc_msgSend(v55, "count"))
    {
      v10 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", objc_msgSend(v55, "count")));
      if (*(_QWORD *)(v67 + 40))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "valueForKey:", CFSTR("assetID")));
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForAnnotationsWithAssetIDInList:includingDeleted:](AEAnnotation, "predicateForAnnotationsWithAssetIDInList:includingDeleted:", v11, 0));

      }
      else
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForAllAnnotationsIncludingDeleted:](AEAnnotation, "predicateForAllAnnotationsIncludingDeleted:", 0));
      }
      v99[0] = 0;
      v99[1] = v99;
      v99[2] = 0x3032000000;
      v99[3] = sub_10004E458;
      v99[4] = sub_10004E2A0;
      v100 = 0;
      v93 = 0;
      v94 = &v93;
      v95 = 0x3032000000;
      v96 = sub_10004E458;
      v97 = sub_10004E2A0;
      v98 = 0;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v67 + 32), "annotationProvider"));
      v89[0] = _NSConcreteStackBlock;
      v89[1] = 3221225472;
      v89[2] = sub_10014DD08;
      v89[3] = &unk_1008EC210;
      v91 = v99;
      v52 = v12;
      v90 = v52;
      v92 = &v93;
      objc_msgSend(v13, "performBlockOnUserSideQueueAndWait:", v89);

      v63 = (void *)v10;
      v14 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      v15 = objc_claimAutoreleasedReturnValue(v14);
      v57 = dispatch_queue_create("BKLibraryAssetIsNewManager.resetIsNewForAssetIDs.isNewSync", v15);

      group = dispatch_group_create();
      v59 = objc_opt_new(NSMutableDictionary);
      v87 = 0u;
      v88 = 0u;
      v85 = 0u;
      v86 = 0u;
      v16 = v55;
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v85, v105, 16);
      if (v17)
      {
        v65 = *(_QWORD *)v86;
        do
        {
          v18 = 0;
          v61 = v17;
          do
          {
            if (*(_QWORD *)v86 != v65)
              objc_enumerationMutation(v16);
            v19 = *(id *)(*((_QWORD *)&v85 + 1) + 8 * (_QWORD)v18);
            if (objc_msgSend(v19, "isValid"))
            {
              v20 = objc_msgSend(v19, "isNew");
              v80[0] = _NSConcreteStackBlock;
              v80[1] = 3221225472;
              v80[2] = sub_10014DE2C;
              v80[3] = &unk_1008E9C70;
              v84 = v20;
              v81 = v57;
              v82 = v59;
              v21 = v19;
              v83 = v21;
              v22 = objc_retainBlock(v80);
              if (objc_msgSend(v21, "contentType") == 6)
              {
                dispatch_group_enter(group);
                v23 = objc_msgSend(v21, "isCloud");
                v24 = (void *)objc_claimAutoreleasedReturnValue(+[BKMediaLibraryCache sharedCache](BKMediaLibraryCache, "sharedCache"));
                v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "assetID"));
                v104 = v25;
                v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v104, 1));
                v77[0] = _NSConcreteStackBlock;
                v77[1] = 3221225472;
                v77[2] = sub_10014DF40;
                v77[3] = &unk_1008EC238;
                v79 = v22;
                v78 = group;
                v17 = v61;
                objc_msgSend(v24, "fetchAssetsWithIDs:type:completion:", v26, v23, v77);

              }
              else
              {
                v27 = (void *)v94[5];
                v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "assetID"));
                LODWORD(v27) = objc_msgSend(v27, "containsObject:", v28);

                ((void (*)(_QWORD *, _QWORD))v22[2])(v22, v27 ^ 1);
              }
              v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "seriesID"));

              if (v29)
              {
                v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "seriesID"));
                objc_msgSend(v63, "addObject:", v30);

              }
            }

            v18 = (char *)v18 + 1;
          }
          while (v17 != v18);
          v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v85, v105, 16);
        }
        while (v17);
      }

      dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);
      v75[0] = _NSConcreteStackBlock;
      v75[1] = 3221225472;
      v75[2] = sub_10014DF98;
      v75[3] = &unk_1008EC260;
      v66 = v56;
      v76 = v66;
      -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](v59, "enumerateKeysAndObjectsUsingBlock:", v75);
      v73 = 0u;
      v74 = 0u;
      v71 = 0u;
      v72 = 0u;
      obj = v63;
      v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v103, 16);
      v32 = v53;
      if (v31)
      {
        v62 = *(_QWORD *)v72;
        do
        {
          v64 = v31;
          v33 = 0;
          v34 = v32;
          do
          {
            if (*(_QWORD *)v72 != v62)
              objc_enumerationMutation(obj);
            v35 = *(_QWORD *)(*((_QWORD *)&v71 + 1) + 8 * (_QWORD)v33);
            v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v67 + 32), "libraryManager"));
            v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "predicateForContainerWithSeriesIDLibraryAsset:", v35));
            objc_msgSend(v68, "setPredicate:", v37);

            objc_msgSend(v68, "setReturnsObjectsAsFaults:", 0);
            v70 = v34;
            v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v66, "executeFetchRequest:error:", v68, &v70));
            v32 = v70;

            v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "lastObject"));
            v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v67 + 32), "libraryManager"));
            v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "predicateForLibraryAssetsWithSeriesID:", v35));
            v102[0] = v41;
            v42 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForLibraryAssetsMarkedAsNew](BKLibraryManager, "predicateForLibraryAssetsMarkedAsNew"));
            v102[1] = v42;
            v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v67 + 32), "libraryManager"));
            v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "predicateForLocalLibraryAssets"));
            v102[2] = v44;
            v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v102, 3));
            v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v45));
            objc_msgSend(v68, "setPredicate:", v46);

            v69 = 0;
            v47 = objc_msgSend(v66, "countForFetchRequest:error:", v68, &v69);
            v48 = v69;
            if (v47)
              v49 = v47 == (id)0x7FFFFFFFFFFFFFFFLL;
            else
              v49 = 1;
            v50 = !v49;
            if ((_DWORD)v50 != objc_msgSend(v39, "isNew"))
              objc_msgSend(v39, "setIsNew:", v50);

            v33 = (char *)v33 + 1;
            v34 = v32;
          }
          while (v64 != v33);
          v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v103, 16);
        }
        while (v31);
      }
      v53 = v32;

      _Block_object_dispose(&v93, 8);
      _Block_object_dispose(v99, 8);

    }
    if (objc_msgSend(v56, "hasChanges"))
    {
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v67 + 32), "libraryManager"));
      objc_msgSend(v51, "saveManagedObjectContext:", v56);

    }
  }
  kdebug_trace(725353716, 13, 0, 0, 0);

}

void sub_10014DCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a70;

  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x218], 8);
  _Unwind_Resume(a1);
}

void sub_10014DD08(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const __CFString *v12;

  v12 = CFSTR("annotationAssetID");
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
  v5 = objc_msgSend(v3, "copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:", v4, CFSTR("AEAnnotation"), a1[4], 0, 0, 1, v12);

  v6 = *(_QWORD *)(a1[5] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "valueForKey:", CFSTR("annotationAssetID")));
  v9 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v8));
  v10 = *(_QWORD *)(a1[6] + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

}

void sub_10014DE2C(uint64_t a1, int a2)
{
  char v2;
  NSObject *v4;
  _QWORD block[4];
  id v6;
  id v7;
  char v8;

  if (*(unsigned __int8 *)(a1 + 56) != a2)
  {
    v2 = a2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10014DEDC;
    block[3] = &unk_1008E7D78;
    v4 = *(NSObject **)(a1 + 32);
    v6 = *(id *)(a1 + 40);
    v7 = *(id *)(a1 + 48);
    v8 = v2;
    dispatch_sync(v4, block);

  }
}

void sub_10014DEDC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectID"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, v3);

}

void sub_10014DF40(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  (*(void (**)(_QWORD, id))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), objc_msgSend(v3, "hasBeenPlayed"));
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_10014DF98(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  unsigned int v6;
  id v7;

  v7 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingObjectWithID:error:", a2, 0));
  if (objc_msgSend(v5, "isValid"))
  {
    v6 = objc_msgSend(v5, "isNew");
    if (v6 != objc_msgSend(v7, "BOOLValue"))
      objc_msgSend(v5, "setIsNew:", objc_msgSend(v7, "BOOLValue"));
  }

}

void sub_10014E0C4(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *i;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  unsigned int v29;
  void *v30;
  void *v31;
  void *v32;
  unsigned int v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id obj;
  void *v53;
  _QWORD block[5];
  id v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD v60[4];
  id v61;
  id v62;
  _BYTE v63[128];
  _QWORD v64[2];

  kdebug_trace(725353716, 14, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = objc_msgSend(v2, "newManagedObjectContext");

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("NewMOC 5 %s %@"), "-[BKLibraryAssetIsNewManager resetProgressHighWaterMarkForAssetIDs:]_block_invoke", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setName:", v4);

  objc_msgSend(v3, "setSessionContextType:", 4);
  v5 = objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForHighWaterMarkCapableLibraryAssets](BKLibraryManager, "predicateForHighWaterMarkCapableLibraryAssets"));
  v6 = (void *)v5;
  if (*(_QWORD *)(a1 + 40))
  {
    v64[0] = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:"));
    v64[1] = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v64, 2));
    v9 = objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v8));

    v6 = (void *)v9;
  }
  v10 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  objc_msgSend(v10, "setPredicate:", v6);
  objc_msgSend(v10, "setReturnsObjectsAsFaults:", 0);
  objc_msgSend(v10, "setFetchBatchSize:", 20);
  v62 = 0;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v10, &v62));
  v12 = v62;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKeyPath:", CFSTR("assetID")));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "bu_arrayByRemovingNSNulls"));
  v16 = objc_msgSend(v15, "mutableCopy");

  if (objc_msgSend(v11, "count"))
  {
    v53 = v13;
    v45 = v12;
    v47 = v10;
    v48 = v6;
    v50 = v3;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", objc_msgSend(v11, "count")));
    v49 = a1;
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationProvider"));
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 3221225472;
    v60[2] = sub_10014E6E4;
    v60[3] = &unk_1008EC288;
    v19 = v17;
    v61 = v19;
    v51 = v16;
    objc_msgSend(v18, "onGlobalAnnotationsForAssetIDs:performBlockAndWait:", v16, v60);

    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    v46 = v11;
    obj = v11;
    v20 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v56, v63, 16);
    if (v20)
    {
      v21 = v20;
      v22 = *(_QWORD *)v57;
      do
      {
        for (i = 0; i != v21; i = (char *)i + 1)
        {
          if (*(_QWORD *)v57 != v22)
            objc_enumerationMutation(obj);
          v24 = *(id *)(*((_QWORD *)&v56 + 1) + 8 * (_QWORD)i);
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "assetID"));
          v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", v25));

          if (v26)
          {
            objc_msgSend(v26, "highWaterMark");
            v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bc_clampedToUnitIntervalOrNegativeOne"));
            v29 = objc_msgSend(v24, "setDifferentNumber:forKey:", v28, CFSTR("bookHighWaterMarkProgress"));

            if (v29)
            {
              v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "assetID"));
              objc_msgSend(v51, "removeObject:", v30);

            }
            objc_msgSend(v26, "readingProgress");
            v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
            v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "bc_assertClampedToUnitInterval"));
            v33 = objc_msgSend(v24, "setDifferentNumber:forKey:", v32, CFSTR("readingProgress"));

            if ((v33 | v29) == 1)
            {
              v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "localOnlySeriesItemsParent"));
              v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "assetID"));
              v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "localOnlySeriesItemsParent"));
              objc_msgSend(v36, "setAssetID:", v35);

              v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "purchasedAndLocalParent"));
              v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "assetID"));
              v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "purchasedAndLocalParent"));
              objc_msgSend(v39, "setAssetID:", v38);

            }
          }
          v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "seriesID"));

          if (v40)
          {
            v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "seriesID"));
            objc_msgSend(v53, "addObject:", v41);

          }
        }
        v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v56, v63, 16);
      }
      while (v21);
    }

    v13 = v53;
    if (objc_msgSend(v53, "count"))
    {
      v42 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v49 + 32), "processSeriesBooksQueue"));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10014E844;
      block[3] = &unk_1008E7338;
      block[4] = *(_QWORD *)(v49 + 32);
      v55 = v53;
      dispatch_async(v42, block);

    }
    v3 = v50;
    v6 = v48;
    v16 = v51;
    if (objc_msgSend(v50, "hasChanges"))
    {
      v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v49 + 32), "libraryManager"));
      objc_msgSend(v43, "saveManagedObjectContext:", v50);

    }
    v11 = v46;
    v10 = v47;
    if (objc_msgSend(v51, "count"))
    {
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v49 + 32), "delegate"));
      objc_msgSend(v44, "processedButNoHighWaterUpdateForAssetsWithIDs:", v51);

    }
    v12 = v45;
  }
  kdebug_trace(725353716, 15, 0, 0, 0);

}

void sub_10014E6E4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  BKLibraryAssetIsNewManagerProgressInfo *v9;
  float v10;
  double v11;
  float v12;
  BKLibraryAssetIsNewManagerProgressInfo *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v17;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v17 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v7);
        v9 = [BKLibraryAssetIsNewManagerProgressInfo alloc];
        objc_msgSend(v8, "readingProgress");
        v11 = v10;
        objc_msgSend(v8, "readingProgressHighWaterMark");
        v13 = -[BKLibraryAssetIsNewManagerProgressInfo initWithReadingProgress:highWaterMark:](v9, "initWithReadingProgress:highWaterMark:", v11, v12);
        v14 = *(void **)(a1 + 32);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "annotationAssetID"));
        objc_msgSend(v14, "setObject:forKeyedSubscript:", v13, v15);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v5);
  }

}

void sub_10014E844(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "seriesIDsToResetNext"));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescedResetNextInSeries"));
  objc_msgSend(v3, "signalWithCompletion:", &stru_1008EC2A8);

}

void sub_10014EC38(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = objc_msgSend(v2, "newManagedObjectContext");

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("NewMOC 3 %s %@"), "-[BKLibraryAssetIsNewManager p_processEpubIDForAssetIDs:]_block_invoke", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setName:", v4);

  objc_msgSend(v3, "setSessionContextType:", 4);
  v5 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForLocalAssetsNeedingEpubIDUpdatesFromAssetIDs:](BKLibraryManager, "predicateForLocalAssetsNeedingEpubIDUpdatesFromAssetIDs:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v5, "setPredicate:", v6);

  objc_msgSend(v5, "setReturnsObjectsAsFaults:", 0);
  v10 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v5, &v10));
  v8 = v10;
  if (objc_msgSend(v7, "count"))
    objc_msgSend(*(id *)(a1 + 32), "p_processEpubIDForLibraryAssets:handlingEpubID:foundAssetHandler:", v7, 0, 0);
  if (objc_msgSend(v3, "hasChanges"))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    objc_msgSend(v9, "saveManagedObjectContext:", v3);

  }
}

id sub_10014EE0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateLibraryAssetEpubIDsHandling:foundAssetHandler:", 0, 0);
}

void sub_10014EED8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  kdebug_trace(725353716, 16, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = objc_msgSend(v2, "newManagedObjectContext");

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("NewMOC 6 %s %@"), "-[BKLibraryAssetIsNewManager updateLibraryAssetEpubIDsHandling:foundAssetHandler:]_block_invoke", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setName:", v4);

  objc_msgSend(v3, "setSessionContextType:", 4);
  v5 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForLocalAssetsNeedingEpubIDUpdates](BKLibraryManager, "predicateForLocalAssetsNeedingEpubIDUpdates"));
  objc_msgSend(v5, "setPredicate:", v6);

  objc_msgSend(v5, "setReturnsObjectsAsFaults:", 0);
  v9 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v5, &v9));
  v8 = v9;
  if (v7 && objc_msgSend(v7, "count"))
    objc_msgSend(*(id *)(a1 + 32), "p_processEpubIDForLibraryAssets:handlingEpubID:foundAssetHandler:", v7, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  objc_msgSend(v3, "saveLibrary");
  kdebug_trace(725353716, 17, 0, 0, 0);

}

void sub_10014F888(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10014F8AC(uint64_t a1, void *a2, void *a3)
{
  id v4;
  NSMutableDictionary *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  double v18;
  _BOOL4 v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  NSMutableDictionary *v24;
  id v25;
  _QWORD v27[4];
  NSMutableDictionary *v28;
  id v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[3];
  _BYTE v36[128];

  v4 = a2;
  v25 = a3;
  v5 = objc_opt_new(NSMutableDictionary);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v32;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v32 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localReadPercent"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "collection"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bk_localBookmarkTimestamp"));
        v14 = v13;
        if (v13)
          v15 = v13;
        else
          v15 = (id)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](NSDate, "distantPast"));
        v16 = v15;

        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
        if (v17)
        {
          objc_msgSend(v11, "doubleValue");
          v19 = v18 > 0.0;

          if (v19)
          {
            v35[0] = v11;
            v35[1] = v11;
            v35[2] = v16;
            v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v35, 3));
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
            -[NSMutableDictionary setObject:forKeyedSubscript:](v5, "setObject:forKeyedSubscript:", v20, v21);

          }
        }

      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
    }
    while (v7);
  }

  v22 = *(void **)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 40);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_10014FB54;
  v27[3] = &unk_1008EC2D0;
  objc_copyWeak(&v30, (id *)(a1 + 56));
  v24 = v5;
  v28 = v24;
  v29 = *(id *)(a1 + 48);
  objc_msgSend(v22, "fetchAssetsWithIDs:type:completion:", v23, 1, v27);

  objc_destroyWeak(&v30);
}

void sub_10014FB38(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10014FB54(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[3];
  _BYTE v36[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v29 = WeakRetained;
    v30 = v3;
    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    v6 = v3;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v32;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v32 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "cloudReadPercent", v29, v30, (_QWORD)v31));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "collection"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bk_cloudBookmarkTimestamp"));
          v15 = v14;
          if (v14)
            v16 = v14;
          else
            v16 = (id)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](NSDate, "distantPast"));
          v17 = v16;

          v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetID"));
          if (v18)
          {
            v19 = (void *)v18;
            objc_msgSend(v12, "doubleValue");
            v21 = v20;

            if (v21 > 0.0)
            {
              v35[0] = v12;
              v35[1] = v12;
              v35[2] = v17;
              v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v35, 3));
              v23 = *(void **)(a1 + 32);
              v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetID"));
              objc_msgSend(v23, "setObject:forKeyedSubscript:", v22, v24);

            }
          }

        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
      }
      while (v8);
    }

    v25 = objc_retainBlock(*(id *)(a1 + 40));
    v26 = v25;
    if (v25)
      (*((void (**)(id, _QWORD))v25 + 2))(v25, *(_QWORD *)(a1 + 32));

    v5 = v29;
    v3 = v30;
  }
  else
  {
    v27 = objc_retainBlock(*(id *)(a1 + 40));
    v28 = v27;
    if (v27)
      (*((void (**)(id, _QWORD))v27 + 2))(v27, 0);

  }
}

void sub_10014FE38(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = sub_100063710();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "migrateAudiobookProgressIfNeeded: migration done", v3, 2u);
  }

}

void sub_10014FF9C(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *i;
  void *v18;
  void *v19;
  id v20;
  unsigned int v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  id v30;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD v36[5];
  id v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  id v43;
  uint8_t v44[128];
  uint8_t buf[4];
  id v46;
  _QWORD v47[2];

  v2 = a2;
  v3 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v4 = objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForAllOwnedAudiobooks](BKLibraryManager, "predicateForAllOwnedAudiobooks"));
  v32 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateToExcludeSeriesLibraryAssets](BKLibraryManager, "predicateToExcludeSeriesLibraryAssets"));
  v33 = (void *)v4;
  v47[0] = v4;
  v47[1] = v32;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v47, 2));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v5));

  objc_msgSend(v3, "setPredicate:", v6);
  v43 = 0;
  v34 = v3;
  v35 = v2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v43));
  v30 = v43;
  v8 = sub_100063710();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = objc_msgSend(v7, "count");
    *(_DWORD *)buf = 134217984;
    v46 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "fetching owned audiobook libraryAssets libraryAssets.count=%ld", buf, 0xCu);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v13 = v7;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(_QWORD *)v40 != v16)
          objc_enumerationMutation(v13);
        v18 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)i);
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "assetID"));
        v20 = objc_msgSend(v19, "length");

        if (v20)
        {
          v21 = objc_msgSend(v18, "isCloud");
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "assetID"));
          if (v21)
            v23 = v12;
          else
            v23 = v11;
          objc_msgSend(v23, "addObject:", v22);

        }
      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
    }
    while (v15);
  }

  v24 = objc_msgSend(v12, "count");
  v25 = (uint64_t)v24 + (_QWORD)objc_msgSend(v11, "count");
  if (v25 < 1)
  {
    v27 = sub_100063710();
    v28 = objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "No audiobooks found.  Setting audiobook migration complete, there is nothing to migrate.", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "setAudiobookProgressMigrationComplete:", 1);
    objc_msgSend(*(id *)(a1 + 32), "setCoalescedMigrateAudiobookProgress:", 0);
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v29, "removeObserver:name:object:", *(_QWORD *)(a1 + 32), MPMediaLibraryDidChangeNotification, 0);

  }
  else
  {
    v26 = *(void **)(a1 + 32);
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_100150364;
    v36[3] = &unk_1008EC368;
    v36[4] = v26;
    v37 = v6;
    v38 = v25;
    objc_msgSend(v26, "_alternateProgressInfoForLocalAssetIDs:cloudAssetIDs:completion:", v11, v12, v36);

  }
}

void sub_100150364(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100150418;
  v7[3] = &unk_1008EC340;
  v8 = *(id *)(a1 + 40);
  v9 = v3;
  v5 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = v5;
  v6 = v3;
  objc_msgSend(v4, "performBlockOnWorkerQueue:", v7);

}

void sub_100150418(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  float v25;
  float v26;
  void *v27;
  void *v28;
  float v29;
  float v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  NSObject *v35;
  double v36;
  double v37;
  id v38;
  NSObject *v39;
  _BOOL4 v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id obj;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id v54;
  uint8_t buf[4];
  id v56;
  __int16 v57;
  uint64_t v58;
  _BYTE v59[128];

  v3 = a2;
  v4 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  objc_msgSend(v4, "setPredicate:", *(_QWORD *)(a1 + 32));
  v54 = 0;
  v46 = v4;
  v47 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, &v54));
  v45 = v54;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  obj = v5;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v59, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v51;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v51 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)i);
        v11 = *(void **)(a1 + 40);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v12));

        if (objc_msgSend(v13, "count") == (id)3)
        {
          v14 = objc_opt_class(NSDate);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectAtIndexedSubscript:", 2));
          v16 = BUDynamicCast(v14, v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

          v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastOpenDate"));
          if (!v18
            || (v19 = (void *)v18,
                v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastOpenDate")),
                v21 = objc_msgSend(v17, "compare:", v20),
                v20,
                v19,
                v21 == (id)1))
          {
            v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectAtIndexedSubscript:", 0));
            v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "bc_assertClampedToUnitInterval"));
            objc_msgSend(v10, "setReadingProgress:", v23);

            v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "bookHighWaterMarkProgress"));
            objc_msgSend(v24, "floatValue");
            v26 = v25;

            v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectAtIndexedSubscript:", 1));
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bc_clampedToUnitIntervalOrNegativeOne"));
            objc_msgSend(v28, "floatValue");
            v30 = v29;

            if (v26 >= v30)
              *(float *)&v31 = v26;
            else
              *(float *)&v31 = v30;
            v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v31));
            objc_msgSend(v10, "setBookHighWaterMarkProgress:", v32);

          }
        }

      }
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v59, 16);
    }
    while (v7);
  }

  if (objc_msgSend(v47, "hasChanges"))
  {
    v49 = 0;
    objc_msgSend(v47, "save:", &v49);
    v33 = v49;
    if (v33)
    {
      v34 = sub_100063710();
      v35 = objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
        sub_1006A2590((uint64_t)v33, v35);

    }
  }
  v36 = (double)(unint64_t)objc_msgSend(*(id *)(a1 + 40), "count");
  v37 = (double)*(uint64_t *)(a1 + 56) * 0.5;
  v38 = sub_100063710();
  v39 = objc_claimAutoreleasedReturnValue(v38);
  v40 = os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT);
  if (v37 >= v36)
  {
    if (v40)
    {
      v43 = objc_msgSend(*(id *)(a1 + 40), "count");
      v44 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      v56 = v43;
      v57 = 2048;
      v58 = v44;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Audiobook progress migration incomplete.  Updated %lu audiobooks of %lu.", buf, 0x16u);
    }
  }
  else
  {
    if (v40)
    {
      v41 = objc_msgSend(*(id *)(a1 + 40), "count");
      v42 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      v56 = v41;
      v57 = 2048;
      v58 = v42;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Audiobook progress migration complete.  Updated %lu audiobooks of %lu.", buf, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 48), "setAudiobookProgressMigrationComplete:", 1);
    objc_msgSend(*(id *)(a1 + 48), "setCoalescedMigrateAudiobookProgress:", 0);
    v39 = objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    -[NSObject removeObserver:name:object:](v39, "removeObserver:name:object:", *(_QWORD *)(a1 + 48), MPMediaLibraryDidChangeNotification, 0);
  }

}

void sub_100150A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100150A88(uint64_t a1, void *a2, void *a3, double a4)
{
  id v7;
  id v8;
  double v9;
  BOOL v11;
  _BOOL4 v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  BOOL v18;
  BOOL v19;

  v7 = a2;
  v8 = a3;
  v9 = *(double *)(a1 + 56);
  if (v9 <= a4)
    v9 = a4;
  v11 = a4 != 0.0 && *(_BYTE *)(a1 + 72) != 0;
  v13 = v9 > *(double *)(a1 + 64) + -120.0 && *(_BYTE *)(a1 + 73) == 0;
  if (v11 || v13)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100150BC4;
    v15[3] = &unk_1008EC3B8;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    v16 = *(id *)(a1 + 40);
    v18 = v11;
    v19 = v13;
    objc_msgSend(v14, "performBlockOnWorkerQueue:", v15);

    objc_destroyWeak(&v17);
  }

}

void sub_100150BB0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100150BC4(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD block[4];
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "libraryMutableAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 32), v4));

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(v7, "setIsNew:", 0);
  if (*(_BYTE *)(a1 + 49))
  {
    v31[0] = BKLibraryAssetMarkedLocation;
    v31[1] = BKLibraryAssetIDKey;
    v8 = *(_QWORD *)(a1 + 32);
    v32[0] = BALocationTypePostReading;
    v32[1] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v32, v31, 2));
    objc_msgSend(v7, "setFinishedStateUserSetsFinished:userInfo:", 1, v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v11 = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "dateFinished"));
    objc_msgSend(v10, "willMarkAsset:finished:finishedDate:", v11, 1, v12);

    if (objc_msgSend(v7, "isOwned"))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "storeID"));
      if (objc_msgSend(v13, "length"))
        v14 = 1;
      else
        v14 = 2;

    }
    else
    {
      v14 = 0;
    }
    v15 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)objc_msgSend(v7, "contentType"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "supplementalContentAssets"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v16, "count")));

    v18 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v19 = objc_msgSend(v18, "seriesTypeForContentID:", *(_QWORD *)(a1 + 32));

    if (objc_msgSend(v7, "isAudiobook"))
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "hasRACSupport"));
      if (objc_msgSend(v20, "BOOLValue"))
        v21 = 1;
      else
        v21 = 2;

    }
    else
    {
      v21 = 0;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100150E8C;
    block[3] = &unk_1008EC390;
    v22 = *(id *)(a1 + 32);
    v27 = v14;
    v28 = v15;
    v25 = v22;
    v26 = v17;
    v29 = v19;
    v30 = v21;
    v23 = v17;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_100150E8C(_QWORD *a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v2, "emitMarkAsFinishedEventWithTracker:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", 0, a1[4], a1[6], a1[7], a1[5], a1[8], a1[9]);

}

void sub_100153A08(id *a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100153AEC;
  v4[3] = &unk_1008EC450;
  v5 = a2;
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[8];
  v9 = a1[7];
  v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

}

void sub_100153AEC(uint64_t a1)
{
  void *v2;
  BKAudiobookPreviewHelper *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  BKAudiobookPreviewPresentingViewController *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[4];
  id v27;
  id v28;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = -[BKAudiobookPreviewHelper initWithMAsset:lockupProfile:]([BKAudiobookPreviewHelper alloc], "initWithMAsset:lockupProfile:", *(_QWORD *)(a1 + 48), v2);
  if ((objc_opt_respondsToSelector(v3, "helperMinifiedController") & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(-[BKAudiobookPreviewHelper helperMinifiedController](v3, "helperMinifiedController"));
    objc_msgSend(*(id *)(a1 + 56), "setMinifiedController:", v4);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 56), "setMinifiedController:", 0);
  }
  v5 = *(void **)(a1 + 56);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "minifiedController"));
  objc_msgSend(v6, "setMinifiedControllerDelegate:", v5);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "minifiedController"));
  v8 = BUProtocolCast(&OBJC_PROTOCOL___BKAudiobookNowPlayingTouchViewControllerDelegate, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "touchVC"));
  objc_msgSend(v10, "setDelegate:", v9);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "touchVC"));
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100153DF8;
  v26[3] = &unk_1008E7950;
  v28 = *(id *)(a1 + 72);
  v27 = *(id *)(a1 + 56);
  objc_msgSend(v11, "setHelper:completion:", v3, v26);

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookNowPlayingModuleFactory instantiate](BKAudiobookNowPlayingModuleFactory, "instantiate"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "id"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetID identifierWithAssetID:](BKAssetID, "identifierWithAssetID:", v13));

  v15 = -[BKBasePresentingViewController initWithAssetIdentifier:assetViewController:helper:libraryAssetProvider:]([BKAudiobookPreviewPresentingViewController alloc], "initWithAssetIdentifier:assetViewController:helper:libraryAssetProvider:", v14, v12, v3, 0);
  -[BKBasePresentingViewController setOpenOptions:](v15, "setOpenOptions:", *(_QWORD *)(a1 + 64));
  objc_msgSend(v12, "setHelper:completion:", v3, &stru_1008EC428);
  v16 = objc_opt_class(UIViewController);
  v17 = BUClassAndProtocolCast(v15, v16, 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager", &OBJC_PROTOCOL___BKPalettePresentationTransitioning));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "primarySceneController"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "rootBarCoordinator"));

  objc_msgSend(v21, "registerFullPlayer:", v18);
  v22 = objc_opt_class(NSNumber);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "objectForKeyedSubscript:", CFSTR("fullScreen")));
  v24 = BUDynamicCast(v22, v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  LODWORD(v20) = objc_msgSend(v25, "BOOLValue");

  if ((_DWORD)v20)
    objc_msgSend(v21, "presentFullPlayer:completion:", v18, 0);

}

void sub_100153DF8(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

id sub_100153FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "set:error:", a2, a3);
}

void sub_100154068(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100154084(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewControllerFuture"));

  if (!v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "minifiedAssetPresenterAssetID"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "options"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_futureViewControllerWithAssetID:options:", v6, v7));
    objc_msgSend(WeakRetained, "setAssetViewControllerFuture:", v8);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewControllerFuture"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100154198;
  v11[3] = &unk_1008EC508;
  v12 = v3;
  v10 = v3;
  objc_msgSend(v9, "get:", v11);

}

uint64_t sub_100154198(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100158D94(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "name"));
  objc_msgSend(v1, "startedSubTest:forTest:withMetrics:", CFSTR("page-turn"), v2, &off_10092F670);

}

void sub_10015924C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100159274(uint64_t a1)
{
  void (**v1)(void);
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setResult:", 0);
  v1 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onTestFinished"));
  v1[2]();

}

id sub_100159CB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishPPTTestWithResult:", 0);
}

void sub_100159EA8(uint64_t a1)
{
  void (**v2)(void);

  objc_msgSend(*(id *)(a1 + 32), "setResult:", *(_BYTE *)(a1 + 40) == 0);
  v2 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestFinished"));
  v2[2]();

}

void sub_10015A1A0(uint64_t a1)
{
  void (**v2)(void);

  objc_msgSend(*(id *)(a1 + 32), "setResult:", 0);
  v2 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestFinished"));
  v2[2]();

}

void sub_10015BC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10015BCA0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v3 = BUProtocolCast(&OBJC_PROTOCOL___BKLibraryBookshelfBooksDataSourceProtocol, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "items"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 0));

  v7 = objc_opt_class(BKLibraryAsset);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "dragItem"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localObject"));
  v10 = BUDynamicCast(v7, v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "indexPathForRepresentedObject:", v11));
  v13 = (char *)objc_msgSend(*(id *)(a1 + 32), "numberOfItemsInSection:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "section"))- 1;
  if ((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "item") >= (uint64_t)v13)
  {
    v14 = objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForItem:inSection:](NSIndexPath, "indexPathForItem:inSection:", v13, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "section")));
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  objc_msgSend(v17, "collectionView:moveItemAtIndexPath:toIndexPath:", *(_QWORD *)(a1 + 32), v12, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

  v18 = *(void **)(a1 + 32);
  v23 = v12;
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
  objc_msgSend(v18, "deleteItemsAtIndexPaths:", v19);

  v20 = *(void **)(a1 + 32);
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v22, 1));
  objc_msgSend(v20, "insertItemsAtIndexPaths:", v21);

}

id sub_10015CCE4()
{
  if (qword_1009F5120 != -1)
    dispatch_once(&qword_1009F5120, &stru_1008EC588);
  return (id)qword_1009F5118;
}

void sub_10015CD24(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMinifiedAssetPresenter");
  v2 = (void *)qword_1009F5118;
  qword_1009F5118 = (uint64_t)v1;

}

void sub_10015CE9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10015CEBC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id *v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v6 = (id *)(a1 + 40);
  v7 = a4;
  v12 = a2;
  WeakRetained = objc_loadWeakRetained(v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "minifiedController"));
  objc_msgSend(v9, "setMinifiedControllerLoadedAssetViewController:", v12);

  v10 = objc_loadWeakRetained(v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "minifiedController"));
  objc_msgSend(v11, "minifiedControllerDidLoadAsset");

  objc_msgSend(*(id *)(a1 + 32), "set:error:", v12, v7);
}

void sub_10015CF6C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  unsigned int v5;
  id v6;

  v6 = a3;
  if (objc_msgSend(v6, "code") == (id)1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "domain"));
    v5 = objc_msgSend(v4, "isEqualToString:", BCFutureErrorDomain);

    if (v5)
      objc_msgSend(*(id *)(a1 + 32), "cancel");
  }

}

void sub_10015D6A0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD block[4];
  _QWORD *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;
  __int16 v26;
  uint8_t buf[4];
  uint64_t v28;

  v3 = a2;
  v4 = sub_10015CCE4();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    v28 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset logID:%{public}@ got BKAsset", buf, 0xCu);
  }

  if (*(_BYTE *)(a1 + 88))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[MPMediaItem bk_audioBookAssetURLWithAlbumTitle:isCloudItem:](MPMediaItem, "bk_audioBookAssetURLWithAlbumTitle:isCloudItem:", v7, 1));

  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "url"));
  }
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10015D914;
  v15[3] = &unk_1008EC5D8;
  v16 = *(id *)(a1 + 40);
  v9 = v3;
  v17 = v9;
  v18 = *(id *)(a1 + 48);
  v19 = *(id *)(a1 + 32);
  v10 = v8;
  v11 = *(_QWORD *)(a1 + 80);
  v20 = v10;
  v24 = v11;
  v21 = *(id *)(a1 + 56);
  v22 = *(id *)(a1 + 64);
  v25 = *(_BYTE *)(a1 + 89);
  v26 = *(_WORD *)(a1 + 90);
  v23 = *(id *)(a1 + 72);
  v12 = objc_retainBlock(v15);
  if (v12)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v12[2])(v12);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10015DC20;
      block[3] = &unk_1008E7818;
      v14 = v12;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    }
  }

}

void sub_10015D914(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  void *v22;
  int v23;
  id v24;
  __int16 v25;
  uint64_t v26;

  v2 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "storeID"));
  v4 = (uint64_t)objc_msgSend(v3, "longLongValue");

  if (v4 >= 1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "storeID"));
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("storeID"));

  }
  if (objc_msgSend(*(id *)(a1 + 48), "length"))
    objc_msgSend(v2, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 48), CFSTR("assetID"));
  if (objc_msgSend(*(id *)(a1 + 56), "length"))
    objc_msgSend(v2, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 56), AEAssetLogID);
  v6 = sub_10015CCE4();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(void **)(a1 + 56);
    v23 = 138543362;
    v24 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset Creating Helper for logID:%{public}@", (uint8_t *)&v23, 0xCu);
  }

  if (*(_QWORD *)(a1 + 64))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "pluginForURL:", *(_QWORD *)(a1 + 64)));

  }
  else
  {
    v10 = 0;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "helperForURL:withOptions:", *(_QWORD *)(a1 + 64), v2));
  v12 = BUProtocolCast(&OBJC_PROTOCOL___AEHelper, v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  if ((objc_opt_respondsToSelector(v13, "helperMinifiedController") & 1) != 0)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "helperMinifiedController"));
    if (v14)
    {
      v15 = objc_alloc(*(Class *)(a1 + 96));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "assetID"));
      v17 = objc_msgSend(v15, "initWithAssetID:helper:minifiedController:options:presenter:", v16, v13, v14, v2, *(_QWORD *)(a1 + 80));

    }
    else
    {
      v17 = 0;
    }
  }
  else
  {
    v17 = 0;
    v14 = 0;
  }
  v18 = sub_10015CCE4();
  v19 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    v20 = *(_QWORD *)(a1 + 56);
    v23 = 138412546;
    v24 = v17;
    v25 = 2114;
    v26 = v20;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset Got minified asset presenter %@, logID:%{public}@", (uint8_t *)&v23, 0x16u);
  }

  objc_msgSend(v17, "setMinifiedAssetPresenterIsAudiobook:", *(unsigned __int8 *)(a1 + 104));
  objc_msgSend(v17, "setMinifiedAssetPresenterCanStayOpenInBackground:", *(unsigned __int8 *)(a1 + 104));
  objc_msgSend(v17, "setMinifiedAssetPresenterIsSupplementalContent:", *(unsigned __int8 *)(a1 + 105));
  objc_msgSend(v17, "setMinifiedAssetPresenterWorkaround36067646:", *(unsigned __int8 *)(a1 + 106));
  v21 = objc_retainBlock(*(id *)(a1 + 88));
  v22 = v21;
  if (v21)
    (*((void (**)(id, id))v21 + 2))(v21, v17);

}

uint64_t sub_10015DC20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10015DD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "set:error:", a2, a3);
}

void sub_10015DED0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10015DEEC(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;

  v3 = a2;
  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "minifiedAssetPresenterWorkaround36067646"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewControllerFuture"));
    objc_msgSend(v6, "cancel");

    objc_msgSend(WeakRetained, "setAssetViewControllerFuture:", 0);
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewControllerFuture"));

  if (!v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "minifiedAssetPresenterAssetID"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "options"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_futureViewControllerWithAssetID:options:", v8, v9));
    objc_msgSend(WeakRetained, "setAssetViewControllerFuture:", v10);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewControllerFuture"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10015E064;
  v13[3] = &unk_1008EC628;
  v12 = v3;
  v14 = v12;
  objc_copyWeak(&v15, v4);
  objc_msgSend(v11, "get:", v13);

  objc_destroyWeak(&v15);
}

void sub_10015E050(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10015E064(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  id *v5;
  id v6;
  id v7;
  void *v8;
  id WeakRetained;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = (id *)(a1 + 40);
  v6 = a3;
  v7 = a2;
  WeakRetained = objc_loadWeakRetained(v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "helper"));
  (*(void (**)(uint64_t, id, void *, id))(v4 + 16))(v4, v7, v8, v6);

}

void sub_10015E8D8(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithPermanentOrTemporaryAssetID:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)));

    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dataSourceIdentifier"));
    if (objc_msgSend(v3, "isEqualToString:", CFSTR("com.apple.ibooks.plist.untethered")))
    {
      v4 = objc_msgSend(v8, "state");

      if (v4 != 1)
      {
LABEL_8:

        return;
      }
      v5 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 16));
      v6 = v5;
      if (v5)
        (*((void (**)(id, id))v5 + 2))(v5, v8);

      v7 = *(_QWORD *)(a1 + 32);
      v3 = *(void **)(v7 + 16);
      *(_QWORD *)(v7 + 16) = 0;
    }

    goto LABEL_8;
  }
}

id sub_10015EAE4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "canModifyBackupFiles");
  if ((_DWORD)result)
    return _objc_msgSend(*(id *)(a1 + 32), "rewriteSyncSidecarWithCompletionBlock:", 0);
  return result;
}

void sub_10015FC50(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  float v5;
  double v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressValue"));
  if (v2)
    v3 = 1.0;
  else
    v3 = 0.0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressTrack"));
  objc_msgSend(v4, "setAlpha:", v3);

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressValue"));
  objc_msgSend(v8, "floatValue");
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressTrack"));
  objc_msgSend(v7, "setReadingProgress:", v6);

}

void sub_10015FE98(uint64_t a1)
{
  _BYTE *v1;
  double v2;
  id v3;

  v1 = *(_BYTE **)(a1 + 32);
  if (v1[8])
    v2 = 1.0;
  else
    v2 = 0.0;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "navBarForBackButton"));
  objc_msgSend(v3, "setAlpha:", v2);

}

void sub_100160B98(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  dispatch_time_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  _QWORD v15[4];
  id v16;
  _QWORD v17[5];
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  _QWORD block[5];
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  _QWORD v28[3];
  char v29;
  _QWORD v30[6];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), a2));
  if (v3)
  {
    v30[0] = CFSTR("path");
    v30[1] = CFSTR("assetID");
    v30[2] = CFSTR("permlink");
    v30[3] = CFSTR("temporaryAssetID");
    v30[4] = CFSTR("title");
    v30[5] = CFSTR("storeID");
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v30, 6));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "propertiesForKeys:", v4));

    v28[0] = 0;
    v28[1] = v28;
    v28[2] = 0x2020000000;
    v29 = 1;
    v6 = dispatch_time(0, 30000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100160E68;
    block[3] = &unk_1008EC650;
    v7 = *(void **)(a1 + 56);
    block[4] = *(_QWORD *)(a1 + 48);
    v27 = v28;
    v24 = v7;
    v8 = v5;
    v25 = v8;
    v26 = *(id *)(a1 + 80);
    dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, block);
    v9 = *(_QWORD *)(a1 + 48);
    v10 = *(NSObject **)(v9 + 16);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100160FB8;
    v17[3] = &unk_1008EC6A0;
    v17[4] = v9;
    v18 = *(id *)(a1 + 64);
    v19 = v8;
    v22 = v28;
    v20 = *(id *)(a1 + 72);
    v21 = *(id *)(a1 + 80);
    v11 = v8;
    dispatch_async(v10, v17);

    _Block_object_dispose(v28, 8);
  }
  else
  {
    v12 = BCImageCacheLog(0);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1006A2698(a1, v13);

    v14 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 24);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10016121C;
    v15[3] = &unk_1008E7818;
    v16 = *(id *)(a1 + 80);
    dispatch_async(v14, v15);

  }
}

void sub_100160E68(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  void *v9;
  _QWORD v10[2];
  uint64_t (*v11)(uint64_t);
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;

  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v11 = sub_100160FA0;
  v12 = &unk_1008E94B8;
  v3 = *(_QWORD *)(a1 + 64);
  v13 = &v15;
  v14 = v3;
  v4 = v10;
  os_unfair_lock_lock_with_options(v2, 0x10000);
  v11((uint64_t)v4);
  os_unfair_lock_unlock(v2);

  if (*((_BYTE *)v16 + 24))
  {
    v6 = BCImageCacheLog(v5);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006A270C();

    v8 = objc_retainBlock(*(id *)(a1 + 56));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);

  }
  _Block_object_dispose(&v15, 8);
}

void sub_100160F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100160FA0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8)
                                                                            + 24);
  return result;
}

void sub_100160FB8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  id v6;
  id v7;
  uint64_t v8;

  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(*(_QWORD *)(a1 + 32) + 32), 0xFFFFFFFFFFFFFFFFLL);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100161074;
  v5[3] = &unk_1008EC678;
  v2 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 72);
  v5[4] = *(_QWORD *)(a1 + 32);
  v8 = v3;
  v4 = *(_QWORD *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  objc_msgSend(v2, "bookCoverForLibraryAssetProperties:size:completion:", v4, v5, CGSizeZero.width, CGSizeZero.height);

}

void sub_100161074(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD v16[4];
  id v17;
  uint64_t v18;
  id v19;
  _QWORD v20[5];

  v6 = a2;
  v7 = a4;
  v8 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1001611B8;
  v20[3] = &unk_1008E7BE8;
  v20[4] = *(_QWORD *)(a1 + 56);
  os_unfair_lock_lock_with_options(v8, 0x10000);
  sub_1001611B8((uint64_t)v20);
  os_unfair_lock_unlock(v8);
  if (v7)
  {
    v10 = BCImageCacheLog(v9);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006A2778();

  }
  v12 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 24);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1001611C8;
  v16[3] = &unk_1008EB280;
  v13 = *(id *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 32);
  v17 = v6;
  v18 = v14;
  v19 = v13;
  v15 = v6;
  dispatch_async(v12, v16);

}

uint64_t sub_1001611B8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 0;
  return result;
}

intptr_t sub_1001611C8(uint64_t a1)
{
  void (**v2)(id, id);

  v2 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
    v2[2](v2, objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGImage"));

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(_QWORD *)(a1 + 40) + 32));
}

void sub_10016121C(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_100161D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100161D7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "imaxTargetClass"), "defaultManager"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100161E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100161EAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetOnMainQueueWithAssetID:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100161FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_100161FFC(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = (void *)a1[4];
  v2 = a1[5];
  v3 = *(_QWORD *)(a1[6] + 8) + 24;
  v4 = *(_QWORD *)(a1[7] + 8) + 24;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "_bkaxUiChildContext"));
  objc_msgSend(v1, "countOfSeriesLibraryAssetsWithSeriesID:total:purchased:context:", v2, v3, v4, v5);

}

void sub_100162120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100162138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imaxValueForKey:", CFSTR("uiChildContext")));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100162520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100162548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 48);
  *(_QWORD *)(v3 + 48) = v2;

  v5 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 56);
  *(_QWORD *)(v6 + 56) = v5;

}

void sub_10016259C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100162640;
  v5[3] = &unk_1008E7F50;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100162640(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v20 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "frc"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fetchedObjects"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueForKey:", CFSTR("assetID")));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "frc"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "fetchRequest"));
    v8 = objc_msgSend(v7, "copy");

    objc_msgSend(v8, "setPropertiesToFetch:", &off_10092F688);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "frc"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "managedObjectContext"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "executeFetchRequest:error:", v8, 0));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKey:", CFSTR("assetID")));

    v13 = objc_msgSend(v12, "count");
    if (v13 != objc_msgSend(v5, "count") || (objc_msgSend(v12, "isEqualToArray:", v5) & 1) == 0)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "frc"));
      objc_msgSend(v14, "performFetch:", 0);

      if (objc_msgSend(v20, "isSeries"))
        objc_msgSend(v20, "_updateHasSeriesSequenceLabel");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "delegate"));
      LOBYTE(v19) = 1;
      objc_msgSend(v15, "booksDataSource:insertedSections:deletedSections:insertedItems:deletedItems:updatedItems:mayHaveZeroObjects:", v20, 0, 0, 0, 0, 0, v19);

    }
    v16 = objc_retainBlock(*(id *)(a1 + 32));
    v17 = v16;
    if (v16)
      (*((void (**)(id))v16 + 2))(v16);

  }
  else
  {
    v18 = objc_retainBlock(*(id *)(a1 + 32));
    v5 = v18;
    if (v18)
      (*((void (**)(id))v18 + 2))(v18);
  }

}

void sub_100162DC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100162DD8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEUserPublishing sharedInstance](AEUserPublishing, "sharedInstance"));
  v3 = *(_QWORD *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100162EA0;
  v4[3] = &unk_1008EC788;
  objc_copyWeak(&v6, (id *)(a1 + 48));
  v5 = *(id *)(a1 + 40);
  objc_msgSend(v2, "productProfilesForStoreIDs:completion:", v3, v4);

  objc_destroyWeak(&v6);
}

void sub_100162E8C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100162EA0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  void *v14;
  NSObject *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];

  v6 = a2;
  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allValues"));
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(_QWORD *)v22 != v12)
            objc_enumerationMutation(v9);
          v14 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
          objc_msgSend(v14, "calculateTrimmedStandardDescription");
          objc_msgSend(v14, "calculateTrimmedStandardNotes");
        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      }
      while (v11);
    }

    v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "extendedDataAccessQueue"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10016306C;
    v16[3] = &unk_1008EC760;
    v17 = WeakRetained;
    v18 = v6;
    v20 = *(id *)(a1 + 32);
    v19 = v7;
    dispatch_async(v15, v16);

  }
}

void sub_10016306C(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "productInfoData"));
  objc_msgSend(v2, "addEntriesFromDictionary:", a1[5]);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "checkedProductProfileIDs"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "allKeys"));
  objc_msgSend(v3, "addObjectsFromArray:", v4);

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100163160;
  block[3] = &unk_1008EB280;
  v8 = a1[7];
  v6 = a1[5];
  v7 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100163160(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

void sub_1001633C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001633E4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  _QWORD v10[5];
  id v11;
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "extendedDataAccessQueue"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001634CC;
    v10[3] = &unk_1008EC760;
    v10[4] = v8;
    v11 = v5;
    v13 = *(id *)(a1 + 32);
    v12 = v6;
    dispatch_async(v9, v10);

  }
}

void sub_1001634CC(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "resourceCache"));
  objc_msgSend(v2, "addEntriesFromDictionary:", a1[5]);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "checkedResourceIDs"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "allKeys"));
  objc_msgSend(v3, "addObjectsFromArray:", v4);

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001635C0;
  block[3] = &unk_1008EB280;
  v8 = a1[7];
  v6 = a1[5];
  v7 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001635C0(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

void sub_1001638A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001638C8(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "allKeys"));
    objc_msgSend(v5, "booksDataSourceReloadAssetInfo:forAssetIDs:", v4, v6);

  }
}

void sub_100163BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100163BD0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "extendedDataAccessQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100163CB4;
    block[3] = &unk_1008E7518;
    objc_copyWeak(&v10, (id *)(a1 + 40));
    v8 = *(id *)(a1 + 32);
    v9 = v3;
    dispatch_async(v6, block);

    objc_destroyWeak(&v10);
  }

}

void sub_100163CB4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD block[4];
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "checkedAssetIDs"));
    objc_msgSend(v4, "removeAllObjects");

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetReviewData"));
    objc_msgSend(v5, "removeAllObjects");

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "checkedAssetIDs"));
    objc_msgSend(v6, "addObjectsFromArray:", *(_QWORD *)(a1 + 32));

    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v7 = *(id *)(a1 + 40);
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v19;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(_QWORD *)v19 != v10)
            objc_enumerationMutation(v7);
          v12 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "assetReviewID"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetIDFromAssetReviewID:](BCAssetReview, "assetIDFromAssetReviewID:", v13));

          if (v14)
          {
            v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetReviewData"));
            objc_msgSend(v15, "setObject:forKey:", v12, v14);

          }
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v9);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100163EB0;
    block[3] = &unk_1008E72C0;
    v17 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_100163EB0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "booksDataSourceReloadAssetReviewData:", *(_QWORD *)(a1 + 32));

}

void sub_100164160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100164178(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(AEUserPublishingProductProfile);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "productInfoData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1001642F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100164308(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resourceCache"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = BUProtocolCast(&OBJC_PROTOCOL___BFMAsset, v2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

void sub_100164670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_1001646C4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resourceCache"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = BUProtocolCast(&OBJC_PROTOCOL___BFMAsset, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkedResourceIDs"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v8, "containsObject:", *(_QWORD *)(a1 + 40));

}

void sub_10016476C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  void (**v7)(id, _QWORD, void *, id);
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v7 = (void (**)(id, _QWORD, void *, id))objc_retainBlock(*(id *)(a1 + 40));
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "allValues"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "lastObject"));
      v7[2](v7, v8, v10, v5);

    }
  }

}

void sub_10016496C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100164984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetReviewData"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100164C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  objc_destroyWeak(&location);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100164C8C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetReviewData"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkedAssetIDs"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v6, "containsObject:", *(_QWORD *)(a1 + 40));

}

void sub_100164D0C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v2 = (id *)(a1 + 56);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetReviewIDWithUserID:assetID:](BCAssetReview, "assetReviewIDWithUserID:assetID:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "checkedAssetIDs"));
    objc_msgSend(v5, "addObject:", *(_QWORD *)(a1 + 40));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetReviewManager"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100164E24;
    v7[3] = &unk_1008EC878;
    objc_copyWeak(&v9, v2);
    v8 = *(id *)(a1 + 48);
    objc_msgSend(v6, "assetReviewForAssetReviewID:completion:", v4, v7);

    objc_destroyWeak(&v9);
  }

}

void sub_100164E10(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100164E24(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "extendedDataAccessQueue"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100164F18;
    v10[3] = &unk_1008EC760;
    v11 = v5;
    v12 = v8;
    v14 = *(id *)(a1 + 32);
    v13 = v6;
    dispatch_async(v9, v10);

  }
}

void sub_100164F18(id *a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v2 = a1[4];
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "assetReviewID"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetIDFromAssetReviewID:](BCAssetReview, "assetIDFromAssetReviewID:", v3));

    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetReviewData"));
      objc_msgSend(v5, "setObject:forKey:", a1[4], v4);

    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100165018;
  block[3] = &unk_1008EB280;
  v9 = a1[7];
  v7 = a1[4];
  v8 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100165018(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

void sub_1001664C0(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F5128;
  qword_1009F5128 = (uint64_t)v1;

}

void sub_100166A68(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5 && !v6)
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "UIImage"));
    v9 = BCUbiquityMetadataHelperLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v13 = 141558786;
      v14 = 1752392040;
      v15 = 2112;
      v16 = v11;
      v17 = 2160;
      v18 = 1752392040;
      v19 = 2112;
      v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[iCloudSync] url: %{mask.hash}@ generateThumbnail thumbnail: %{mask.hash}@", (uint8_t *)&v13, 0x2Au);
    }

    objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v8, *(_QWORD *)(a1 + 48));
LABEL_9:

    goto LABEL_10;
  }
  if (v6)
  {
    v12 = BCUbiquityMetadataHelperLog();
    v8 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1006A28B0((uint64_t)v7, v8);
    goto LABEL_9;
  }
LABEL_10:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));

}

void sub_100166E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100166E84(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void ***v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void **v34;
  uint64_t v35;
  void (*v36)(uint64_t, void *, void *);
  void *v37;
  id v38;
  uint64_t v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  id v43;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  v34 = _NSConcreteStackBlock;
  v35 = 3221225472;
  v36 = sub_1001671D4;
  v37 = &unk_1008ECA28;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 56);
  v38 = v4;
  v39 = v5;
  v6 = objc_retainBlock(&v34);
  v14 = BCUbiquityMetadataHelperLog(v6, v7, v8, v9, v10, v11, v12, v13);
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 141558274;
    v41 = 1752392040;
    v42 = 2112;
    v43 = v4;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[iCloudSync] Adding ubiquitous metadata to URL: %{mask.hash}@", buf, 0x16u);
  }

  ((void (*)(void ***, _QWORD, _QWORD))v6[2])(v6, BCMetadataXattrAssetID, *(_QWORD *)(a1 + 32));
  ((void (*)(void ***, _QWORD, _QWORD))v6[2])(v6, BCMetadataXattrTitle, *(_QWORD *)(a1 + 40));
  v16 = BCMetadataXattrAuthor;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "author", v34, v35, v36, v37));
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryAsset actualAuthorFromMetedata:](BKLibraryAsset, "actualAuthorFromMetedata:", v17));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v16, v18);

  v19 = BCMetadataXattrGenre;
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "genre"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v19, v20);

  v21 = BCMetadataXattrExplicit;
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "isExplicit"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "stringValue"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v21, v23);

  v24 = BCMetadataXattrGeneration;
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 48), "generation")));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "stringValue"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v24, v26);

  v27 = BCMetadataXattrIsSupplementalContent;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 48), "isSupplementalContent")));
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "stringValue"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v27, v29);

  v30 = BCMetadataXattrStoreID;
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "storeID"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v30, v31);

  v32 = BCMetadataXattrStorePlaylistID;
  v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "storePlaylistID"));
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v32, v33);

}

void sub_1001671D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (objc_msgSend(v5, "length")
    && (+[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", v6, v5, *(_QWORD *)(a1 + 32)) & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }

}

void sub_1001673E8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  id v16;

  v3 = a2;
  v11 = BCUbiquityMetadataHelperLog(v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = 141558274;
    v14 = 1752392040;
    v15 = 2112;
    v16 = v3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[iCloudSync] Adding ubiquitous metadata to URL: %{mask.hash}@", (uint8_t *)&v13, 0x16u);
  }

  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", BCMetadataXattrTitle, *(_QWORD *)(a1 + 32), v3);
}

void sub_100167698(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  id v19;

  v3 = a2;
  v11 = BCUbiquityMetadataHelperLog(v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v16 = 141558274;
    v17 = 1752392040;
    v18 = 2112;
    v19 = v3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[iCloudSync] Adding supplemental ubiquitous metadata to URL: %{mask.hash}@", (uint8_t *)&v16, 0x16u);
  }

  v13 = BCMetadataXattrIsSupplementalContent;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "stringValue"));
  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", v13, v15, v3);

  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", BCMetadataXattrStorePlaylistID, *(_QWORD *)(a1 + 32), v3);
  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", BCMetadataXattrStoreID, *(_QWORD *)(a1 + 40), v3);

}

uint64_t sub_100167BB8(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "count") == 0);
}

void sub_100167D08(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  unsigned int v14;
  void *v15;

  v5 = a3;
  v8 = v5;
  if (v5)
  {
    v9 = BKLibraryLog(v5, v6, v7);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A2A7C(a1, (uint64_t)v8, v10);

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
    if (objc_msgSend(v11, "isValid"))
    {
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetID"));
      if (v12)
      {
        v13 = (void *)v12;
        v14 = objc_msgSend(v11, "state");

        if (v14 == 2)
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAssetProvider"));
          objc_msgSend(v15, "cancelDownloadingAsset:", v11);

        }
      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

  }
}

uint64_t sub_100167E90(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "count") == 0);
}

void sub_100167FAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, BOOL, id))v5 + 2))(v5, a2 != 0, v7);

}

void sub_10016813C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  __int128 v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _QWORD block[4];
  __int128 v15;
  __int128 v16;

  v13 = a2;
  v5 = a3;
  if (v13)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100168264;
    block[3] = &unk_1008E7B70;
    v6 = *(_OWORD *)(a1 + 48);
    v15 = *(_OWORD *)(a1 + 32);
    v16 = v6;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
    v7 = objc_alloc((Class)BSUIAssetActionModifyResponse);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "collectionTitle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "assetID"));
    v10 = objc_msgSend(v7, "initWithCollectionTitle:assetID:assetContentType:", v8, v9, objc_msgSend(v13, "assetContentType"));

  }
  else
  {
    v10 = 0;
  }
  v11 = objc_retainBlock(*(id *)(a1 + 64));
  v12 = v11;
  if (v11)
    (*((void (**)(id, id, id))v11 + 2))(v11, v10, v5);

}

void sub_100168264(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v2, "emitAddToCollectionEventWithTracker:collectionID:contentData:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);

  if (objc_msgSend(*(id *)(a1 + 56), "isEqualToString:", kBKCollectionDefaultIDWantToRead))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v3, "emitWantListAddEventWithTracker:contentData:", *(_QWORD *)(a1 + 48), v4);
LABEL_5:

    goto LABEL_6;
  }
  if (objc_msgSend(*(id *)(a1 + 56), "isEqualToString:", kBKCollectionDefaultIDFinished))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v3, "emitMarkAsFinishedEventWithTracker:contentData:markedData:", *(_QWORD *)(a1 + 48), v4, 0);
    goto LABEL_5;
  }
LABEL_6:

}

void sub_100168428(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, BOOL, id))v5 + 2))(v5, a2 != 0, v7);

}

void sub_1001685B4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  __int128 v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _QWORD block[4];
  __int128 v15;
  __int128 v16;

  v13 = a2;
  v5 = a3;
  if (v13)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001686DC;
    block[3] = &unk_1008E7B70;
    v6 = *(_OWORD *)(a1 + 48);
    v15 = *(_OWORD *)(a1 + 32);
    v16 = v6;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
    v7 = objc_alloc((Class)BSUIAssetActionModifyResponse);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "collectionTitle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "assetID"));
    v10 = objc_msgSend(v7, "initWithCollectionTitle:assetID:assetContentType:", v8, v9, objc_msgSend(v13, "assetContentType"));

  }
  else
  {
    v10 = 0;
  }
  v11 = objc_retainBlock(*(id *)(a1 + 64));
  v12 = v11;
  if (v11)
    (*((void (**)(id, id, id))v11 + 2))(v11, v10, v5);

}

void sub_1001686DC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v2, "emitRemoveFromCollectionEventWithTracker:collectionID:contentData:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);

  if (objc_msgSend(*(id *)(a1 + 56), "isEqualToString:", kBKCollectionDefaultIDWantToRead))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v3, "emitRemoveFromWantListEventWithTracker:contentData:", *(_QWORD *)(a1 + 48), v4);

  }
}

void sub_100168858(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  const __CFString **v9;
  NSErrorUserInfoKey *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  int8x16_t v15;
  _QWORD v16[4];
  int8x16_t v17;
  id v18;
  NSErrorUserInfoKey v19;
  const __CFString *v20;
  NSErrorUserInfoKey v21;
  const __CFString *v22;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryMutableAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), a2));
  v4 = v3;
  if (v3)
  {
    if (objc_msgSend(v3, "isFinished"))
    {
      v5 = objc_retainBlock(*(id *)(a1 + 56));
      v6 = v5;
      if (v5)
        (*((void (**)(id, void *, _QWORD))v5 + 2))(v5, v4, 0);

      goto LABEL_13;
    }
    v21 = NSLocalizedDescriptionKey;
    v22 = CFSTR("Cannot update non-finished asset");
    v9 = &v22;
    v10 = &v21;
  }
  else
  {
    if (*(_BYTE *)(a1 + 64))
    {
      v7 = *(void **)(a1 + 32);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_100168A58;
      v16[3] = &unk_1008E8898;
      v15 = *(int8x16_t *)(a1 + 40);
      v8 = (id)v15.i64[0];
      v17 = vextq_s8(v15, v15, 8uLL);
      v18 = *(id *)(a1 + 56);
      objc_msgSend(v7, "waitForAssetID:completion:", v8, v16);

      goto LABEL_13;
    }
    v19 = NSLocalizedDescriptionKey;
    v20 = CFSTR("Asset not found. Cannot update finished asset.");
    v9 = &v20;
    v10 = &v19;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v10, 1));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKJSALibraryManager"), -1, v11));

  v13 = objc_retainBlock(*(id *)(a1 + 56));
  v14 = v13;
  if (v13)
    (*((void (**)(id, _QWORD, void *))v13 + 2))(v13, 0, v12);

LABEL_13:
}

id sub_100168A58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_fetchFinishedLibraryAssetWithAssetID:waitForNewAssetIfNeeded:callback:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 48));
}

void sub_100168B68(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void (**v7)(void);
  void (**v8)(void);
  void (*v9)(void);
  void (**v10)(void);
  void *v11;
  _QWORD block[5];
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(v5, "userUpdateDateFinished:ofKind:", *(_QWORD *)(a1 + 32), 1);
    v7 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v8 = v7;
    if (!v7)
      goto LABEL_7;
    v9 = v7[2];
  }
  else
  {
    v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v8 = v10;
    if (!v10)
      goto LABEL_7;
    v9 = v10[2];
  }
  v9();
LABEL_7:

  if (*(_QWORD *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100168C80;
    block[3] = &unk_1008E7928;
    v11 = *(void **)(a1 + 56);
    block[4] = *(_QWORD *)(a1 + 48);
    v13 = v11;
    v14 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_100168C80(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = objc_msgSend(objc_alloc((Class)BAMarkedData), "initWithIsFinishedDateSet:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v3, "emitMarkAsFinishedEventWithTracker:contentData:markedData:", *(_QWORD *)(a1 + 48), v4, v2);

}

void sub_100168ED0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void (**v7)(void);
  void (**v8)(void);
  void (*v9)(void);
  void (**v10)(void);
  void *v11;
  _QWORD block[5];
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    objc_msgSend(v5, "userUpdateDateFinished:ofKind:", *(_QWORD *)(a1 + 32), 2);
    v7 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v8 = v7;
    if (!v7)
      goto LABEL_7;
    v9 = v7[2];
  }
  else
  {
    v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v8 = v10;
    if (!v10)
      goto LABEL_7;
    v9 = v10[2];
  }
  v9();
LABEL_7:

  if (*(_QWORD *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100168FE8;
    block[3] = &unk_1008E7928;
    v11 = *(void **)(a1 + 56);
    block[4] = *(_QWORD *)(a1 + 48);
    v13 = v11;
    v14 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_100168FE8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = objc_msgSend(objc_alloc((Class)BAMarkedData), "initWithIsFinishedDateSet:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v3, "emitMarkAsFinishedEventWithTracker:contentData:markedData:", *(_QWORD *)(a1 + 48), v4, v2);

}

void sub_1001690FC(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(void);
  void (**v6)(void);
  void (*v7)(void);
  void (**v8)(void);
  id v9;

  v9 = a3;
  if (a2)
  {
    objc_msgSend(a2, "unsetFinishedDate");
    v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v6 = v5;
    if (v5)
    {
      v7 = v5[2];
LABEL_6:
      v7();
    }
  }
  else
  {
    v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v6 = v8;
    if (v8)
    {
      v7 = v8[2];
      goto LABEL_6;
    }
  }

}

void sub_100169580(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  int v17;
  const char *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  id v22;
  uint64_t v23;
  _QWORD v24[2];

  v5 = a3;
  v6 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v7 = (void *)v6;
  if (v5)
  {
    v24[0] = v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
    v24[1] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v24, 2));

  }
  else
  {
    v23 = v6;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
  }

  v13 = JSALog(v10, v11, v12);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = *(_QWORD *)(a1 + 32);
    v17 = 136446722;
    v18 = "-[BKJSALibraryManager openBook::::]_block_invoke";
    v19 = 2112;
    v20 = v15;
    v21 = 2112;
    v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when opening book %@: %@", (uint8_t *)&v17, 0x20u);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v16, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 40), v9, CFSTR("BKJSALibraryManager.m"), 328);

}

void sub_10016985C(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  const __CFString *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD v13[2];
  _QWORD v14[2];

  v4 = a2;
  v13[0] = CFSTR("status");
  if (objc_msgSend(v4, "count"))
    v5 = CFSTR("error");
  else
    v5 = CFSTR("ok");
  v13[1] = CFSTR("description");
  v14[0] = v5;
  v6 = objc_msgSend(v4, "count");
  if (v6)
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", ")));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Failed to download assets: %@"), v2));
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  }
  v14[1] = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v14, v13, 2));
  if (v6)
  {

    v7 = (void *)v2;
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v10 = *(_QWORD *)(a1 + 32);
  v12 = v8;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
  objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v10, v11, CFSTR("BKJSALibraryManager.m"), 340);

}

void sub_100169BA0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v8 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v7, CFSTR("BKJSALibraryManager.m"), 349);

}

void sub_100169DAC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  const __CFString *v16;
  const __CFString *v17;
  void *v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[2];

  if (a3)
  {
    v21[0] = CFSTR("error");
    v20[0] = CFSTR("status");
    v20[1] = CFSTR("description");
    v4 = *(_QWORD *)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "localizedDescription"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Failed to cancel download for assetID %@: %@"), v4, v5));
    v21[1] = v6;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v21, v20, 2));

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v9 = *(_QWORD *)(a1 + 40);
    v19 = v7;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
    v11 = v8;
    v12 = v9;
    v13 = v10;
    v14 = 362;
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v15 = *(_QWORD *)(a1 + 40);
    v16 = CFSTR("status");
    v17 = CFSTR("ok");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1));
    v18 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
    v11 = v7;
    v12 = v15;
    v13 = v10;
    v14 = 364;
  }
  objc_msgSend(v11, "enqueueValueCall:arguments:file:line:", v12, v13, CFSTR("BKJSALibraryManager.m"), v14);

}

void sub_10016A0C0(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  const __CFString *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD v13[2];
  _QWORD v14[2];

  v4 = a2;
  v13[0] = CFSTR("status");
  if (objc_msgSend(v4, "count"))
    v5 = CFSTR("error");
  else
    v5 = CFSTR("ok");
  v13[1] = CFSTR("description");
  v14[0] = v5;
  v6 = objc_msgSend(v4, "count");
  if (v6)
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", ")));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Failed to download assets: %@"), v2));
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  }
  v14[1] = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v14, v13, 2));
  if (v6)
  {

    v7 = (void *)v2;
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v10 = *(_QWORD *)(a1 + 32);
  v12 = v8;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
  objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v10, v11, CFSTR("BKJSALibraryManager.m"), 378);

}

void sub_10016A3AC(uint64_t a1, char a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const __CFString *v14;
  void *v15;

  v5 = a3;
  v6 = v5;
  if (*(_QWORD *)(a1 + 32))
  {
    if ((a2 & 1) != 0)
    {
      v7 = 0;
    }
    else
    {
      v14 = CFSTR("error");
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
      v15 = v8;
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1));

    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v10 = v9;
    v11 = *(_QWORD *)(a1 + 32);
    if (v7)
    {
      v13 = v7;
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v13, 1));
      objc_msgSend(v10, "enqueueValueCall:arguments:file:line:", v11, v12, CFSTR("BKJSALibraryManager.m"), 388);

    }
    else
    {
      objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v11, 0, CFSTR("BKJSALibraryManager.m"), 388);
    }

  }
}

void sub_10016A64C(uint64_t a1, char a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v5 = a3;
  v6 = v5;
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = 0;
    if (v5 && (a2 & 1) == 0)
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v9 = v8;
    v10 = *(_QWORD *)(a1 + 32);
    if (v7)
    {
      v12 = v7;
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
      objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v10, v11, CFSTR("BKJSALibraryManager.m"), 400);

    }
    else
    {
      objc_msgSend(v8, "enqueueValueCall:arguments:file:line:", v10, 0, CFSTR("BKJSALibraryManager.m"), 400);
    }

  }
}

void sub_10016A8A0(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10016A940;
  v4[3] = &unk_1008ECBD8;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  v6 = *(id *)(a1 + 48);
  objc_msgSend(v2, "requestPrimaryScene:", v4);

}

void sub_10016A940(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = objc_msgSend(a2, "newShowAssetTransaction");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentersProvider"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryCollectionPresenter"));
  objc_msgSend(v4, "showLibraryCollectionInPlaceWithTransaction:collectionID:", v6, *(_QWORD *)(a1 + 40));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v5, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 48), 0, CFSTR("BKJSALibraryManager.m"), 412);

}

void sub_10016AB94(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  int v17;
  const char *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  int v22;
  __int16 v23;
  id v24;
  uint64_t v25;
  _QWORD v26[2];

  v5 = a3;
  v6 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v7 = (void *)v6;
  if (v5)
  {
    v26[0] = v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
    v26[1] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v26, 2));

  }
  else
  {
    v25 = v6;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v25, 1));
  }

  v13 = JSALog(v10, v11, v12);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = *(_QWORD *)(a1 + 32);
    v17 = 136446978;
    v18 = "-[BKJSALibraryManager openSampleBook:downloadSampleURL:options:callback:tracker:]_block_invoke";
    v19 = 2112;
    v20 = v15;
    v21 = 1024;
    v22 = a2;
    v23 = 2112;
    v24 = v5;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s Finished opening sample for assetID: %@, success: %{BOOL}d, error: %@", (uint8_t *)&v17, 0x26u);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v16, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 40), v9, CFSTR("BKJSALibraryManager.m"), 424);

}

void sub_10016AF88(uint64_t a1, int a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  id v20;
  _QWORD block[5];
  id v22;
  id v23;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  void *v29;

  v5 = a3;
  v8 = v5;
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10016B158;
    block[3] = &unk_1008E7928;
    v9 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v22 = v9;
    v23 = *(id *)(a1 + 48);
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);

  }
  else
  {
    v10 = JSALog(v5, v6, v7);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 136446722;
      v25 = "-[BKJSALibraryManager previewAudiobook::::]_block_invoke";
      v26 = 2112;
      v27 = v12;
      v28 = 2112;
      v29 = v8;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred adding preview to My Samples %@: %@", buf, 0x20u);
    }

  }
  v13 = *(void **)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(unsigned __int8 *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10016B1C4;
  v18[3] = &unk_1008E73F0;
  v19 = *(id *)(a1 + 64);
  v20 = *(id *)(a1 + 40);
  objc_msgSend(v13, "_previewAssetID:asset:fullScreen:tracker:callback:", v14, v16, v15, v17, v18);

}

void sub_10016B158(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v2, "emitAddToCollectionEventWithTracker:collectionID:contentData:", *(_QWORD *)(a1 + 48), kBKCollectionDefaultIDSamples, v3);

}

void sub_10016B1C4(uint64_t a1, int a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  int v17;
  const char *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  void *v22;
  const __CFString *v23;
  void *v24;
  void *v25;

  v5 = a3;
  v6 = v5;
  if (a2)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v7, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &__NSArray0__struct, CFSTR("BKJSALibraryManager.m"), 453);
  }
  else
  {
    v23 = CFSTR("error");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
    v24 = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1));
    v25 = v9;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v25, 1));

    v13 = JSALog(v10, v11, v12);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = *(_QWORD *)(a1 + 40);
      v17 = 136446722;
      v18 = "-[BKJSALibraryManager previewAudiobook::::]_block_invoke";
      v19 = 2112;
      v20 = v15;
      v21 = 2112;
      v22 = v6;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when previewing audiobook %@: %@", (uint8_t *)&v17, 0x20u);
    }

    v16 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v16, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), v7, CFSTR("BKJSALibraryManager.m"), 457);

  }
}

void sub_10016B4F4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD block[5];
  id v12;
  id v13;
  id v14;
  char v15;
  void *v16;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016B68C;
  block[3] = &unk_1008E89C0;
  v4 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v12 = v4;
  v13 = *(id *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 64);
  v5 = v3;
  v14 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = *(_QWORD *)(a1 + 56);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedDescription"));
    v16 = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1));
    objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v7, v10, CFSTR("BKJSALibraryManager.m"), 483);

  }
  else
  {
    objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v7, 0, CFSTR("BKJSALibraryManager.m"), 483);
  }

}

void sub_10016B68C(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForContentID:tracker:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = *(unsigned __int8 *)(a1 + 64);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 48);
  if (v2)
    objc_msgSend(v3, "emitAddToCollectionEventWithTracker:collectionID:contentData:", v5, kBKCollectionDefaultIDFinished, v7);
  else
    objc_msgSend(v3, "emitRemoveFromCollectionEventWithTracker:collectionID:contentData:", v5, kBKCollectionDefaultIDFinished, v7);

  if (!*(_QWORD *)(a1 + 56) && *(_BYTE *)(a1 + 64))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v6, "emitMarkAsFinishedEventWithTracker:contentData:markedData:", *(_QWORD *)(a1 + 48), v7, 0);

  }
}

void sub_10016BA20(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v17[4];
  unsigned __int8 v18;
  _QWORD v19[5];
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char v25;
  unsigned __int8 v26;
  _QWORD block[4];
  id v28;
  id v29;
  unsigned __int8 v30;
  id location;

  v5 = a2;
  v6 = a3;
  if (v5 && !objc_msgSend(v5, "isValid"))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  }
  else
  {
    if ((objc_msgSend(v5, "isLocal") & 1) != 0
      || (objc_msgSend(v5, "streamable") & 1) != 0
      || !+[BKReachability isOffline](BKReachability, "isOffline"))
    {
      v8 = sub_1000EE83C(*(void **)(a1 + 40));
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      v10 = objc_msgSend(v9, "mutableCopy");
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetLogID"));
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, AEAssetLogID);

      objc_msgSend(v10, "removeObjectForKey:", BCTransactionOptionsTransactionKey);
      if ((objc_msgSend(v5, "isOwned") & 1) != 0 || objc_msgSend(v5, "isLocal"))
      {
        v12 = objc_msgSend(v5, "isAudiobook");
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentersProvider"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bookPresenter"));

        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_10016BDEC;
        v19[3] = &unk_1008ECCA0;
        v25 = *(_BYTE *)(a1 + 80);
        v26 = v12;
        v15 = *(void **)(a1 + 40);
        v19[4] = *(_QWORD *)(a1 + 32);
        v20 = v15;
        v21 = v14;
        v22 = *(id *)(a1 + 48);
        v23 = v10;
        v24 = *(id *)(a1 + 72);
        v16 = v14;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v19);

      }
      else
      {
        v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentDataForLibraryAsset:contentID:tracker:", v5, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
        kdebug_trace(725354656, 0, 0, 0, 0);
        objc_msgSend(*(id *)(a1 + 32), "_openSample:options:sampleURL:contentData:tracker:callback:", *(_QWORD *)(a1 + 48), v10, *(_QWORD *)(a1 + 64), v16, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 72));
        kdebug_trace(725354660, 0, 0, 0, 0);
      }

    }
    else
    {
      v7 = objc_msgSend(v5, "isStore");
      objc_initWeak(&location, *(id *)(a1 + 32));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10016BD74;
      block[3] = &unk_1008ECC50;
      objc_copyWeak(&v29, &location);
      v30 = v7;
      v28 = *(id *)(a1 + 72);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      objc_destroyWeak(&v29);
      objc_destroyWeak(&location);
    }
    if (*(_BYTE *)(a1 + 80))
    {
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_10016C018;
      v17[3] = &unk_1008ECCC0;
      v18 = objc_msgSend(v5, "isAudiobook");
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v17);
    }
  }

}

void sub_10016BD74(uint64_t a1)
{
  id v2;
  id to;

  objc_copyWeak(&to, (id *)(a1 + 40));
  v2 = objc_loadWeakRetained(&to);
  objc_msgSend(v2, "_displayStoreConnectionErrorAlert:", *(unsigned __int8 *)(a1 + 48));

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  objc_destroyWeak(&to);
}

void sub_10016BDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016BDEC(uint64_t a1)
{
  void *v2;
  void *v3;
  id *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  if (*(_BYTE *)(a1 + 80) || *(_BYTE *)(a1 + 81))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_transactionFromOptionsForShowAsset:", *(_QWORD *)(a1 + 40)));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10016BF74;
    v11[3] = &unk_1008EC180;
    v4 = &v12;
    v12 = *(id *)(a1 + 48);
    v13 = v2;
    v14 = *(id *)(a1 + 56);
    v15 = *(id *)(a1 + 64);
    v16 = *(id *)(a1 + 72);
    v5 = v2;
    objc_msgSend(v3, "forceTransaction:ontoPrimarySceneWithContinuation:", v5, v11);

  }
  else
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_transactionFromOptionsForShowAsset:", *(_QWORD *)(a1 + 40)));
    v6 = *(void **)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 56);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10016C00C;
    v9[3] = &unk_1008ECC78;
    v4 = &v10;
    v8 = *(_QWORD *)(a1 + 64);
    v10 = *(id *)(a1 + 72);
    objc_msgSend(v6, "showAssetWithTransaction:assetID:location:options:completion:", v5, v7, 0, v8, v9);
  }

}

void sub_10016BF74(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10016C000;
  v5[3] = &unk_1008ECC78;
  v6 = *(id *)(a1 + 64);
  objc_msgSend(v1, "showAssetWithTransaction:assetID:location:options:completion:", v2, v3, 0, v4, v5);

}

uint64_t sub_10016C000(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10016C00C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10016C018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = objc_opt_class(BKAppDelegate);
  v3 = BCGetUnsafeAppDelegateReference();
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v5 = BUDynamicCast(v2, v4);
  v9 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "engagementManager"));
  LODWORD(v4) = *(unsigned __int8 *)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "sessionDonor"));
  v8 = v7;
  if ((_DWORD)v4)
    objc_msgSend(v7, "reportPreviewButtonUsed");
  else
    objc_msgSend(v7, "reportSampleButtonUsed");

}

void sub_10016C27C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id location;

  v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKBookSampleHelper defaultHelper](BKBookSampleHelper, "defaultHelper"));
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10016C3D4;
  v14[3] = &unk_1008EA1D0;
  v15 = *(id *)(a1 + 72);
  objc_msgSend(v4, "downloadSampleWithURL:contentData:tracker:completion:", v3, v5, v6, v14);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10016C444;
  v9[3] = &unk_1008E8268;
  v10 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 32);
  v11 = v7;
  v12 = v8;
  objc_copyWeak(&v13, &location);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
  objc_destroyWeak(&v13);

  objc_destroyWeak(&location);
}

void sub_10016C3C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_10016C3D4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;

  v9 = a3;
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v6 = v9;
  v7 = (void *)v5;
  if (v9 || !v5)
  {
    v8 = 0;
  }
  else
  {
    v8 = 1;
    v6 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, id))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), v8, v6);

}

void sub_10016C444(id *a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*__ptr32 *v9)();
  void *v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  __CFString *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  dispatch_time_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  _QWORD v38[4];
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD v43[4];
  id v44;
  id v45;
  id v46;
  id v47;
  _QWORD v48[5];
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t);
  dispatch_semaphore_t v54;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:", CFSTR("storeAsset")));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BCMAssetWrapper assetWithData:](BCMAssetWrapper, "assetWithData:", v2));
    v4 = objc_msgSend(objc_alloc((Class)BSUIItemDescription), "initWithAsset:", v3);
    v5 = objc_opt_class(BSUIFeedViewController);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:", CFSTR("feedViewController")));
    v7 = BUDynamicCast(v5, v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

    v9 = &off_10070C000;
    if (v8)
    {
      v36 = v4;
      v37 = v3;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:", CFSTR("BKBookPresentingAnimateFromUid")));
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:", CFSTR("BKBookPresentingAnimateFromRefId")));
      v12 = (void *)v11;
      v13 = CFSTR("cover");
      if (v11)
        v13 = (__CFString *)v11;
      v14 = v13;

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:", CFSTR("BKBookPresentingAnimateFromRefInstance")));
      v16 = v15;
      if (!v15)
        v16 = a1[5];
      v17 = v16;

      v18 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRenderReferenceQuery queryWithUUID:uid:refId:refInstance:](TUIRenderReferenceQuery, "queryWithUUID:uid:refId:refInstance:", 0, v10, v14, v17));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "imageResourcesMatchingQuery:", v18));

      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "allKeys"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "firstObject"));

      if (v21)
      {
        v35 = v10;
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", v21));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "anyObject"));

        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "unprocessedImageResource"));
        v49 = 0;
        v50 = &v49;
        v51 = 0x3032000000;
        v52 = sub_10004E498;
        v53 = sub_10004E2C0;
        v54 = dispatch_semaphore_create(0);
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
        v26 = a1[5];
        v48[0] = _NSConcreteStackBlock;
        v48[1] = 3221225472;
        v48[2] = sub_10016C8F4;
        v48[3] = &unk_1008E7BE8;
        v48[4] = &v49;
        objc_msgSend(v25, "addImageResource:withIdentifier:completion:", v24, v26, v48);

        v27 = v50[5];
        v28 = dispatch_time(0, 2000000000);
        dispatch_semaphore_wait(v27, v28);
        _Block_object_dispose(&v49, 8);

        v10 = v35;
      }

      v4 = v36;
      v3 = v37;
      v9 = &off_10070C000;
    }
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_transactionFromOptionsForShowAsset:", a1[4]));
    v30 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v43[0] = _NSConcreteStackBlock;
    v43[1] = *((_QWORD *)v9 + 187);
    v43[2] = sub_10016C904;
    v43[3] = &unk_1008E7B48;
    objc_copyWeak(&v47, a1 + 7);
    v31 = v4;
    v44 = v31;
    v32 = v29;
    v45 = v32;
    v46 = a1[4];
    objc_msgSend(v30, "forceTransaction:ontoPrimarySceneWithContinuation:", v32, v43);

    objc_destroyWeak(&v47);
  }
  else
  {
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "_transactionFromOptionsForShowAsset:", a1[4]));
    v34 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_10016C974;
    v38[3] = &unk_1008E7B48;
    objc_copyWeak(&v42, a1 + 7);
    v31 = v33;
    v39 = v31;
    v40 = a1[5];
    v41 = a1[4];
    objc_msgSend(v34, "forceTransaction:ontoPrimarySceneWithContinuation:", v31, v38);

    objc_destroyWeak(&v42);
  }

}

void sub_10016C8C8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

intptr_t sub_10016C8F4(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
}

void sub_10016C904(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentersProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "itemPresenter"));
  objc_msgSend(v3, "presentItem:transaction:host:source:options:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0, 0, *(_QWORD *)(a1 + 48));

}

void sub_10016C974(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentersProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bookPresenter"));
  objc_msgSend(v3, "showAssetWithTransaction:storeID:options:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

uint64_t sub_10016C9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2 || a3)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  else
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10016CBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016CC0C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  uint64_t v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;
  id v10;
  char v11;
  _QWORD v12[4];
  id v13;
  id v14;

  if (objc_msgSend(a2, "canOpen"))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    v4 = *(void **)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10016CD6C;
    v12[3] = &unk_1008ECD60;
    v13 = v4;
    v14 = *(id *)(a1 + 56);
    objc_msgSend(WeakRetained, "_openAssetID:options:sampleURL:isSample:tracker:callback:", v13, 0, 0, 0, v5, v12);

  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10016CE58;
    block[3] = &unk_1008ECDB0;
    objc_copyWeak(&v10, (id *)(a1 + 64));
    v7 = *(id *)(a1 + 48);
    v11 = *(_BYTE *)(a1 + 72);
    v8 = *(id *)(a1 + 40);
    v9 = *(id *)(a1 + 56);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v10);
  }
}

void sub_10016CD6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  const char *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  id v13;

  v4 = a3;
  v5 = JSALog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 136446722;
    v9 = "-[BKJSALibraryManager _previewAssetID:asset:fullScreen:tracker:callback:]_block_invoke_2";
    v10 = 2112;
    v11 = v7;
    v12 = 2112;
    v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when opening audiobook (asked to preview) %@: %@", (uint8_t *)&v8, 0x20u);
  }

  (*(void (**)(_QWORD, BOOL, id))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v4 == 0, v4);
}

void sub_10016CE58(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char v19;
  NSErrorUserInfoKey v20;
  const __CFString *v21;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "previewURL"));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v11 = _NSConcreteStackBlock;
    v12 = 3221225472;
    v13 = sub_10016D028;
    v14 = &unk_1008ECD88;
    v19 = *(_BYTE *)(a1 + 64);
    v15 = *(id *)(a1 + 40);
    v16 = WeakRetained;
    v17 = *(id *)(a1 + 32);
    v18 = *(id *)(a1 + 48);
    objc_msgSend(v4, "requestPrimaryScene:", &v11);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate", v11, v12, v13, v14));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "engagementManager"));

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "sessionDonor"));
    objc_msgSend(v7, "reportPreviewButtonUsed");

    v8 = v15;
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 48);
    v20 = NSLocalizedDescriptionKey;
    v21 = CFSTR("Attempting to preview audiobook without URL");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKJSALibraryManager"), -1, v8));
    (*(void (**)(uint64_t, _QWORD, void *))(v9 + 16))(v9, 0, v10);

  }
}

void sub_10016D028(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  const __CFString **v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  const __CFString *v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = objc_msgSend(a2, "newShowAssetTransaction");
  v4 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
  v5 = (void *)v4;
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    v15[0] = CFSTR("tracker");
    v15[1] = CFSTR("fullScreen");
    v16[0] = v6;
    v16[1] = v4;
    v7 = v16;
    v8 = (const __CFString **)v15;
    v9 = 2;
  }
  else
  {
    v13 = CFSTR("fullScreen");
    v14 = v4;
    v7 = &v14;
    v8 = &v13;
    v9 = 1;
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v8, v9));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presentersProvider"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "bookPresenter"));
  objc_msgSend(v12, "showStoreAsset:asset:options:", v3, *(_QWORD *)(a1 + 48), v10);

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void sub_10016D2BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "serviceCenter"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "readingActivityService"));

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10016D3C0;
  v8[3] = &unk_1008ECE00;
  v9 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v5 = *(id *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 48);
  v10 = v5;
  v11 = v4;
  v12 = *(id *)(a1 + 40);
  v6 = v4;
  v7 = v9;
  objc_msgSend(v7, "performBlockOnWorkerQueue:", v8);

}

void sub_10016D3C0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSErrorUserInfoKey v12;
  const __CFString *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryMutableAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), a2));
  v4 = v3;
  if (v3)
  {
    if (*(_BYTE *)(a1 + 64))
    {
      v14 = BKLibraryAssetMarkedLocation;
      v15 = BALocationTypeFromReadingNowFinish;
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1));
      objc_msgSend(v4, "setFinishedStateUserSetsFinished:userInfo:", 0, v5);

    }
    else
    {
      objc_msgSend(v3, "setFinishedStateUserSetsUnfinished");
    }
    v9 = *(_QWORD *)(a1 + 40);
    v8 = *(void **)(a1 + 48);
    v10 = *(unsigned __int8 *)(a1 + 64);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dateFinished"));
    objc_msgSend(v8, "willMarkAsset:finished:finishedDate:", v9, v10, v6);
    v7 = 0;
  }
  else
  {
    v12 = NSLocalizedDescriptionKey;
    v13 = CFSTR("Asset not found. Cannot mark as finished");
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKJSALibraryManager"), -1, v6));
  }

  v11 = *(_QWORD *)(a1 + 56);
  if (v11)
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v7);

}

void sub_10016D6C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10016D6DC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  const __CFString *v20;
  void *v21;
  _QWORD v22[2];
  _QWORD v23[2];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 40), "longLongValue")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v2, v3));

  v5 = objc_msgSend(v4, "setAudiobook:", *(unsigned __int8 *)(a1 + 72));
  if (*(_QWORD *)(a1 + 48))
  {
    v23[0] = *(_QWORD *)(a1 + 48);
    v22[0] = CFSTR("BATracker");
    v22[1] = CFSTR("hasRacSupport");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 73)));
    v23[1] = v8;
    v9 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v23, v22, 2));
  }
  else
  {
    v10 = JSALog(v5, v6, v7);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006A2AF8(v11);

    v20 = CFSTR("hasRacSupport");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 73)));
    v21 = v8;
    v9 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1));
  }
  v12 = (void *)v9;
  objc_msgSend(v4, "setAnalyticsInfo:", v9);

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "windowManager"));

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10016D94C;
  v16[3] = &unk_1008ECE28;
  objc_copyWeak(&v19, (id *)(a1 + 64));
  v17 = *(id *)(a1 + 40);
  v18 = *(id *)(a1 + 56);
  objc_msgSend(v15, "purchaseWithRequest:uiManager:completion:", v4, v14, v16);

  objc_destroyWeak(&v19);
}

void sub_10016D930(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10016D94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (a4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryItemStateProvider"));
    objc_msgSend(v6, "updateStateToPurchaseFailedForIdentifier:", *(_QWORD *)(a1 + 32));

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

BOOL sub_10016DA5C(uint64_t a1, void *a2)
{
  id v3;
  dispatch_semaphore_t v4;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  _BOOL8 v13;
  _QWORD v15[5];
  id v16;
  NSObject *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;

  v3 = a2;
  v4 = dispatch_semaphore_create(0);
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 1;
  if (objc_msgSend(v3, "isValid")
    && (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"))) != 0
    && (v6 = objc_msgSend(v3, "state"), v5, v6 == 3))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
    objc_msgSend(v8, "updateStateToPurchasingForIdentifier:", v7);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10016DC10;
    v15[3] = &unk_1008ECE78;
    v10 = *(_QWORD *)(a1 + 32);
    v18 = &v19;
    v15[4] = v10;
    v11 = v7;
    v16 = v11;
    v12 = v4;
    v17 = v12;
    objc_msgSend(v9, "resolveLibraryAsset:completion:", v3, v15);

    dispatch_semaphore_wait(v12, 0xFFFFFFFFFFFFFFFFLL);
    v13 = *((_BYTE *)v20 + 24) != 0;
  }
  else
  {
    v13 = 0;
    *((_BYTE *)v20 + 24) = 0;
  }
  _Block_object_dispose(&v19, 8);

  return v13;
}

void sub_10016DBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10016DC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;

  if (a4)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
    objc_msgSend(v5, "updateStateToPurchaseFailedForIdentifier:", *(_QWORD *)(a1 + 40));

  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

uint64_t sub_10016DD04(uint64_t a1, void *a2)
{
  id v3;
  dispatch_semaphore_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v3 = a2;
  v4 = dispatch_semaphore_create(0);
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 1;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10016DE2C;
  v11[3] = &unk_1008ECEF0;
  v5 = v3;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v8 = v4;
  v15 = v8;
  v16 = &v17;
  +[BKUpdatesParameterProvider fetchUpdateParametersForLibraryAsset:completion:](BKUpdatesParameterProvider, "fetchUpdateParametersForLibraryAsset:completion:", v5, v11);
  dispatch_semaphore_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
  v9 = *((unsigned __int8 *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return v9;
}

void sub_10016DE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016DE2C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _BOOL8 v11;
  id v12;
  uint64_t updated;
  NSObject *v14;
  int8x16_t v15;
  _QWORD v16[4];
  int8x16_t v17;
  id v18;

  v5 = a2;
  v6 = a3;
  v8 = v6;
  if (v5)
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAssetProvider"));
    v11 = (unint64_t)objc_msgSend(*(id *)(a1 + 48), "count") > 1;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10016DF8C;
    v16[3] = &unk_1008ECEC8;
    v15 = *(int8x16_t *)(a1 + 32);
    v12 = (id)v15.i64[0];
    v17 = vextq_s8(v15, v15, 8uLL);
    v18 = *(id *)(a1 + 56);
    +[BKBookPurchaseAction tryToPurchaseBook:libraryAssetProvider:buyParameters:allowPurchaseFromNonSampleBuyButton:suppressNetworkEvaluatorDialogs:analyticsInfo:completion:](BKBookPurchaseAction, "tryToPurchaseBook:libraryAssetProvider:buyParameters:allowPurchaseFromNonSampleBuyButton:suppressNetworkEvaluatorDialogs:analyticsInfo:completion:", v9, v10, v5, 1, v11, 0, v16);

  }
  else
  {
    updated = BKStoreBookUpdateLog(v6, v7);
    v14 = objc_claimAutoreleasedReturnValue(updated);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1006A2B38(a1, (uint64_t)v8, v14);

    if (v8)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 0;
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
  }

}

intptr_t sub_10016DF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;

  if (!a3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "storeID"));
    objc_msgSend(v4, "clearAvailableUpdatesForStoreIDAndRefreshUpdateCount:", v5);

  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10016E0D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  _QWORD block[4];
  id v20;
  id v21;
  id v22;

  v5 = a2;
  v6 = a3;
  v9 = v6;
  if (v6)
  {
    v10 = BKLibraryLog(v6, v7, v8);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006A2BE0((uint64_t)v9, v11, v12, v13, v14, v15, v16, v17);

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v18 = *(NSObject **)(*(_QWORD *)(a1 + 40) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10016E1D8;
    block[3] = &unk_1008ECF40;
    v20 = v5;
    v21 = *(id *)(a1 + 56);
    v22 = *(id *)(a1 + 48);
    dispatch_async(v18, block);

  }
}

void sub_10016E1D8(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSMutableArray *v7;

  v7 = objc_opt_new(NSMutableArray);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v2 = 0;
    do
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", v2));
      if (((*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))() & 1) == 0)
      {
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
        -[NSMutableArray addObject:](v7, "addObject:", v4);

      }
      ++v2;
    }
    while (v2 < (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count"));
  }
  v5 = *(_QWORD *)(a1 + 48);
  v6 = -[NSMutableArray copy](v7, "copy");
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);

}

void sub_10016E4DC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "allObjects"));
  v4 = (void *)v3;
  v5 = &__NSArray0__struct;
  if (v3)
    v5 = (void *)v3;
  v6 = v5;

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v8 = *(_QWORD *)(a1 + 32);
  v10 = v6;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
  objc_msgSend(v7, "enqueueValueCall:arguments:file:line:", v8, v9, CFSTR("BKJSALibraryManager.m"), 976);

}

void sub_10016E6C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;

  v5 = a3;
  v8 = v5;
  if (v5)
  {
    v9 = BKLibraryLog(v5, v6, v7);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A2C44((uint64_t)v8, v10, v11, v12, v13, v14, v15, v16);
  }
  else
  {
    v10 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", a2));
    objc_msgSend(*(id *)(a1 + 32), "minusSet:", v10);
  }

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v18 = *(_QWORD *)(a1 + 40);
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
  v21 = v19;
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v21, 1));
  objc_msgSend(v17, "enqueueValueCall:arguments:file:line:", v18, v20, CFSTR("BKJSALibraryManager.m"), 997);

}

void sub_10016E930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016E948(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
  v2 = objc_msgSend(v5, "newShowAssetTransaction");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10016F6EC(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  const __CFString *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  id v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint8_t v17[128];
  uint8_t buf[4];
  const __CFString *v19;

  v4 = a2 == 4 || (a2 & 0xFFFFFFFFFFFFFFFELL) == 2;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    v5 = CFSTR("denied");
    if (v4)
      v5 = CFSTR("granted");
    *(_DWORD *)buf = 138412290;
    v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Authorization %@", buf, 0xCu);
  }
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v6 = *(id *)(a1 + 32);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v6);
        v11 = objc_retainBlock(*(id *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i));
        v12 = v11;
        if (v11)
          (*((void (**)(id, _BOOL8))v11 + 2))(v11, v4);

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

}

void sub_10016F900(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = objc_msgSend(v3, "authorizationStatus");

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v6));
  v9 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v8, CFSTR("BKNotificationManager.m"), 84);

}

void sub_10016FA70(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v8 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v7, CFSTR("BKNotificationManager.m"), 91);

}

void sub_10016FBDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a3;
  v6 = objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t))v6 + 2))(v6, a2);

  if ((a2 & 1) == 0 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    sub_1006A2CA8((uint64_t)v5, v8, v9, v10, v11, v12, v13, v14);

}

void sub_10016FCD0(uint64_t a1, uint64_t a2)
{
  void (**v3)(void);
  void (**v4)(void);
  void (*v5)(void);
  void *v7;
  void (**v8)(void);
  int v9;
  void *v10;

  if ((unint64_t)(a2 - 2) < 3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Already authorized", (uint8_t *)&v9, 2u);
    }
    v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    v4 = v3;
    if (!v3)
      goto LABEL_19;
    v5 = v3[2];
LABEL_18:
    v5();
LABEL_19:

    return;
  }
  if (a2)
  {
    if (a2 != 1)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
        v9 = 138412290;
        v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Unknown (%@); assuming not authorized",
          (uint8_t *)&v9,
          0xCu);

      }
      v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
      v4 = v8;
      if (!v8)
        goto LABEL_19;
      v5 = v8[2];
      goto LABEL_18;
    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Denied; requesting REauthorization",
        (uint8_t *)&v9,
        2u);
    }
    sub_10016FEA8(*(_QWORD *)(a1 + 32), *(void **)(a1 + 40));
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Not determined; requesting authorization",
        (uint8_t *)&v9,
        2u);
    }
    objc_msgSend(*(id *)(a1 + 32), "requestAuthorizationWithCompletion:", *(_QWORD *)(a1 + 40));
  }
}

void sub_10016FEA8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD *v5;
  _QWORD block[4];
  _QWORD *v7;
  _QWORD v8[5];
  id v9;

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10016FF98;
    v8[3] = &unk_1008E7950;
    v8[4] = a1;
    v9 = v3;
    v5 = objc_retainBlock(v8);
    if (v5)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v5[2])(v5);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001700B0;
        block[3] = &unk_1008E7818;
        v7 = v5;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

  }
}

void sub_10016FF98(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint8_t v9[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", UIApplicationOpenNotificationSettingsURLString));
  v3 = *(void **)(a1 + 40);
  if (v2)
  {
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reauthorizationCompletions"));
      v5 = objc_msgSend(*(id *)(a1 + 40), "copy");
      v6 = objc_retainBlock(v5);
      objc_msgSend(v4, "addObject:", v6);

    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Bouncing out to Settings app", v9, 2u);
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v7, "openURL:", v2);
  }
  else
  {
    v8 = objc_retainBlock(v3);
    v7 = v8;
    if (v8)
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);
  }

}

uint64_t sub_1001700B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10017037C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bk_window"));
  objc_msgSend(v4, "makeKeyAndVisible");

  v5 = objc_alloc((Class)NSMutableDictionary);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
  v11 = objc_msgSend(v5, "initWithDictionary:", v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKSceneControllerUtilities sceneTypekeyForSceneController:](BKSceneControllerUtilities, "sceneTypekeyForSceneController:", v3));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKSceneControllerUtilities sceneTypeKey](BKSceneControllerUtilities, "sceneTypeKey"));
  objc_msgSend(v11, "setObject:forKeyedSubscript:", v7, v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "requestAssetID"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[BKSceneControllerUtilities assetIDKey](BKSceneControllerUtilities, "assetIDKey"));
  objc_msgSend(v11, "setObject:forKeyedSubscript:", v9, v10);

  +[JSAApplication openAchievementSheet:](JSAApplication, "openAchievementSheet:", v11);
}

void sub_100171408(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;

  v2 = *(void **)(a1 + 32);
  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "parentViewController"));
  objc_msgSend(v2, "preferredFrameInViewController:newSize:isPresented:", v12, objc_msgSend(*(id *)(a1 + 32), "isPresented"), *(double *)(a1 + 40), *(double *)(a1 + 48));
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v11, "setFrame:", v4, v6, v8, v10);

}

void sub_100171618(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v5, "setFrame:", v1, v2, v3, v4);

}

void sub_1001718A8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = BCAugmentedExperienceLog(v3);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006A2DE4(a1, (uint64_t)v4, v6);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

id sub_100171D98(uint64_t a1)
{
  __int128 v1;
  _OWORD v3[3];

  v1 = *(_OWORD *)(a1 + 56);
  v3[0] = *(_OWORD *)(a1 + 40);
  v3[1] = v1;
  v3[2] = *(_OWORD *)(a1 + 72);
  return objc_msgSend(*(id *)(a1 + 32), "setTransform:", v3);
}

void sub_10017238C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_1001723B8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentationCompletionBlocks", 0));
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v12;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v12 != v6)
            objc_enumerationMutation(v3);
          v8 = objc_retainBlock(*(id *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v7));
          v9 = v8;
          if (v8)
            (*((void (**)(id))v8 + 2))(v8);

          v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      }
      while (v5);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "presentationCompletionBlocks"));
    objc_msgSend(v10, "removeAllObjects");

  }
}

void sub_1001724F0(id *a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id v8;

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitionAnimationController"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001725D8;
  v5[3] = &unk_1008EB378;
  objc_copyWeak(&v8, v2);
  v6 = a1[4];
  v7 = a1[5];
  objc_msgSend(v4, "prepareForPresentation:", v5);

  objc_destroyWeak(&v8);
}

void sub_1001725C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001725D8(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  _QWORD v4[5];
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10017266C;
  v4[3] = &unk_1008E7680;
  v4[4] = WeakRetained;
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  objc_msgSend(WeakRetained, "presentViewController:animated:completion:", v3, 1, v4);

}

uint64_t sub_10017266C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "bc_analyticsVisibilityUpdateSubtree");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

id sub_100172698(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_forceOrientationBackToPortraitOrientation:", *(_QWORD *)(a1 + 40));
}

void sub_10017288C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001728B8(uint64_t a1)
{
  id WeakRetained;
  int v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = *(unsigned __int8 *)(a1 + 40);
    v6 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitionAnimationController"));
    v5 = v4;
    if (v3)
      objc_msgSend(v4, "setupAnimationsForPresentation");
    else
      objc_msgSend(v4, "setupAnimationsForDismissal");

    WeakRetained = v6;
  }

}

void sub_100172914(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  int v5;
  void *v6;
  void *v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = *(unsigned __int8 *)(a1 + 40);
    v8 = WeakRetained;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitionAnimationController"));
    v7 = v6;
    if (v5)
      objc_msgSend(v6, "finalizeAnimationsForPresentation:", a2);
    else
      objc_msgSend(v6, "finalizeAnimationsForDismissal:", a2);

    objc_msgSend(v8, "setTransitionAnimationController:", 0);
    WeakRetained = v8;
  }

}

void sub_100172CC0(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  BKEndOfBookCardTransitionAnimationController *v8;
  void *v9;
  id v10;

  v10 = a2;
  if ((objc_msgSend(v10, "isInteractive") & 1) == 0
    && (objc_msgSend(v10, "isCancelled") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "_willDismissCardWithReason:", 2);
    if (*(_BYTE *)(a1 + 40))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitionAnimationController"));

      if (!v3)
      {
        v4 = objc_opt_class(BKEndOfBookCardViewController);
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardViewController"));
        v6 = BUDynamicCast(v4, v5);
        v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

        v8 = -[BKEndOfBookCardTransitionAnimationController initWithCompactViewController:cardViewController:]([BKEndOfBookCardTransitionAnimationController alloc], "initWithCompactViewController:cardViewController:", *(_QWORD *)(a1 + 32), v7);
        objc_msgSend(*(id *)(a1 + 32), "setTransitionAnimationController:", v8);

      }
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitionAnimationController"));
      objc_msgSend(v9, "prepareForDismissal");

    }
  }

}

id sub_100173080(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 0, *(_QWORD *)(a1 + 40));
}

void sub_100173090(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentationController"));
  objc_msgSend(v2, "dismissalTransitionWillBegin");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void sub_100173178(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "dismiss");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1001732C8(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "endOfBookCompactViewControllerWantsToCloseAsset:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 0;
}

BOOL sub_100174C08(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "sortMode") == *(id *)(a1 + 32);
}

void sub_100174E8C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[BUAccountsProvider sharedProvider](BUAccountsProvider, "sharedProvider"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "activeStoreAccount"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "ams_DSID"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentStoreAccountID"));
  LOBYTE(v2) = objc_msgSend(v4, "isEqual:", v3);

  if ((v2 & 1) == 0)
    objc_msgSend(WeakRetained, "setCurrentStoreAccountID:", v3);
  objc_msgSend(WeakRetained, "_updateStoreStatus");

}

void sub_1001757F8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_10017581C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v8 = WeakRetained;
  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));
    v10 = v9;
    if (v9)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "storeDownloadParameters"));
      objc_msgSend(v8, "_executePurchaseOfBookWithParameters:storeID:isAudiobook:suppressNetworkEvaluatorDialogs:shouldSuppressError:analyticsInfo:completion:", v11, *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "isAudiobook"), *(unsigned __int8 *)(a1 + 72), 1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

    }
    else
    {
      v15 = BKLibraryDataSourceJaliscoLog(0);
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        sub_1006A2F44(a1, v16, v17, v18, v19, v20, v21, v22);

      v23 = objc_retainBlock(*(id *)(a1 + 56));
      v24 = v23;
      if (v23)
        (*((void (**)(id, _QWORD, _QWORD))v23 + 2))(v23, 0, 0);

    }
  }
  else
  {
    v12 = BKLibraryDataSourceJaliscoLog(WeakRetained);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1006A2ED0(a1, (uint64_t)v6, v13);

    v14 = objc_retainBlock(*(id *)(a1 + 56));
    v10 = v14;
    if (v14)
      (*((void (**)(id, _QWORD, id))v14 + 2))(v14, 0, v6);
  }

}

void sub_100175990(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  if (v8)
  {
    objc_msgSend(*(id *)(a1 + 64), "_executePurchaseOfBookWithParameters:storeID:isAudiobook:suppressNetworkEvaluatorDialogs:shouldSuppressError:analyticsInfo:completion:", v8, *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "isAudiobook"), *(unsigned __int8 *)(a1 + 72), 1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  }
  else
  {
    v6 = objc_retainBlock(*(id *)(a1 + 56));
    v7 = v6;
    if (v6)
      (*((void (**)(id, _QWORD, id))v6 + 2))(v6, 0, v5);

  }
}

void sub_100175B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100175B8C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *WeakRetained;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t updated;
  _QWORD v14[4];
  id v15;

  v5 = a2;
  v6 = a3;
  v8 = v6;
  if (v5)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    v10 = *(unsigned __int8 *)(a1 + 56);
    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100175C8C;
    v14[3] = &unk_1008E7418;
    v15 = v11;
    -[NSObject _executePurchaseOfBookWithParameters:storeID:isAudiobook:suppressNetworkEvaluatorDialogs:shouldSuppressError:analyticsInfo:completion:](WeakRetained, "_executePurchaseOfBookWithParameters:storeID:isAudiobook:suppressNetworkEvaluatorDialogs:shouldSuppressError:analyticsInfo:completion:", v5, v15, v10, 0, 0, v12, v14);

  }
  else
  {
    updated = BKStoreBookUpdateLog(v6, v7);
    WeakRetained = objc_claimAutoreleasedReturnValue(updated);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
      sub_1006A2FAC(a1, (uint64_t)v8, WeakRetained);
  }

}

void sub_100175C8C(uint64_t a1, int a2)
{
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "storeController"));

    objc_msgSend(v4, "clearAvailableUpdatesForStoreIDAndRefreshUpdateCount:", *(_QWORD *)(a1 + 32));
  }
}

void sub_100175E74(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  void *v11;
  _QWORD block[4];
  id v13;

  v6 = a3;
  v7 = a4;
  v8 = BKLibraryDataSourceJaliscoLog(v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    sub_1006A3020((uint64_t)v6, (uint64_t)v7, v9);

  if (v7 && !*(_BYTE *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100175F70;
    block[3] = &unk_1008E72C0;
    v13 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
  v10 = objc_retainBlock(*(id *)(a1 + 32));
  v11 = v10;
  if (v10)
    (*((void (**)(id, BOOL, id))v10 + 2))(v10, v7 == 0, v7);

}

void sub_100175F70(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "localizedDescription"));
  v6 = (id)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v1, 0, 1));

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v3, 0, 0));
  objc_msgSend(v6, "addAction:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
  objc_msgSend(v5, "presentViewController:animated:completion:", v6, 1, 0);

}

id sub_1001765DC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "doneSleepingBeforeNextBook");
}

id sub_1001766C4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "doneSleepingBeforeSnapshot");
}

id sub_1001767A0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "doneSleepingBeforePagination");
}

_QWORD *sub_100176860(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;
  unsigned int v3;
  id *v4;

  v1 = result[4];
  if (!*(_DWORD *)(v1 + 8))
  {
    v2 = result;
    v3 = objc_msgSend(*(id *)(v1 + 16), "isInLibrary");
    v4 = (id *)v2[4];
    if (v3)
    {
      return _objc_msgSend(v4, "decideAboutOpeningTheNextBook");
    }
    else
    {
      result = objc_msgSend(v4[2], "goToLibrary");
      *(_DWORD *)(v2[4] + 8) = 8;
    }
  }
  return result;
}

_QWORD *sub_10017692C(_QWORD *result)
{
  uint64_t v1;
  int v2;
  int v3;
  _QWORD *v4;

  v1 = result[4];
  v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 5)
  {
    v4 = result;
    result = objc_msgSend(*(id *)(v1 + 16), "goToFirstPage");
    v1 = v4[4];
    v3 = 9;
  }
  else
  {
    if (v2 != 6)
      return result;
    v3 = 4;
  }
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

_DWORD *sub_1001769EC(uint64_t a1)
{
  _DWORD *result;

  result = *(_DWORD **)(a1 + 32);
  if (result[2] == 8)
    return _objc_msgSend(result, "decideAboutOpeningTheNextBook");
  return result;
}

_QWORD *sub_100176A74(_QWORD *result)
{
  uint64_t v1;
  int v2;
  int v3;
  _QWORD *v4;

  v1 = result[4];
  v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 4)
  {
    v4 = result;
    result = objc_msgSend(*(id *)(v1 + 16), "goToFirstPage");
    v1 = v4[4];
    v3 = 9;
  }
  else
  {
    if (v2 != 6)
      return result;
    v3 = 5;
  }
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

_DWORD *sub_100176B34(uint64_t a1)
{
  _DWORD *result;

  result = *(_DWORD **)(a1 + 32);
  if (result[2] == 7)
  {
    result = objc_msgSend(result, "sleepBeforeSnapshot");
    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 2;
  }
  return result;
}

_QWORD *sub_100176BE0(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;
  unsigned int v3;
  void *v4;
  int v5;

  v1 = result[4];
  if (*(_DWORD *)(v1 + 8) == 7)
  {
    v2 = result;
    v3 = objc_msgSend(*(id *)(v1 + 16), "isLooping");
    v4 = *(void **)(v2[4] + 16);
    if (v3)
    {
      result = objc_msgSend(v4, "goToFirstPage");
      v5 = 10;
    }
    else
    {
      objc_msgSend(v4, "terminateBookTest");
      result = objc_msgSend(*(id *)(v2[4] + 16), "goToLibrary");
      v5 = 8;
    }
    *(_DWORD *)(v2[4] + 8) = v5;
  }
  return result;
}

_DWORD *sub_100176CBC(uint64_t a1)
{
  _DWORD *result;
  int v3;
  int v4;

  result = *(_DWORD **)(a1 + 32);
  v3 = result[2];
  if (v3 == 10)
  {
    result = objc_msgSend(result, "sleepBeforeSnapshot");
    v4 = 2;
  }
  else
  {
    if (v3 != 9)
      return result;
    result = objc_msgSend(result, "sleepBeforePagination");
    v4 = 3;
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = v4;
  return result;
}

void sub_100177320(uint64_t a1)
{
  void (**v1)(void);

  v1 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onReceiveHandler"));
  v1[2]();

}

void sub_100177540(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "rootBarCoordinator"));
  objc_msgSend(*(id *)(a1 + 32), "_startTestWithRootBarCoordinating:", v3);

}

BOOL sub_100177AB4(id a1, TUIFeedEntry *a2, unint64_t a3, BOOL *a4)
{
  void *v5;
  void *v6;
  unsigned int v7;

  v5 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedEntry templateURL](a2, "templateURL", a3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastPathComponent"));
  v7 = objc_msgSend(v6, "isEqualToString:", CFSTR("swoosh-root.xml"));

  if (v7)
    *a4 = 1;
  return v7;
}

void sub_100177B1C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  dispatch_time_t v7;
  void *v8;
  _QWORD block[5];
  id v10;
  id v11;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hostingViewController"));
  v3 = objc_msgSend(v2, "bc_firstVisibleChildViewControllerOfClass:includePresented:", objc_opt_class(BCCardStackViewController), 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  objc_msgSend(v4, "popAllCardsAnimated:completion:", 0, &stru_1008ED1A0);
  v5 = sub_1001DA41C();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "waiting 2s for product page to open", buf, 2u);
  }

  v7 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100177C60;
  block[3] = &unk_1008E7928;
  v8 = *(void **)(a1 + 48);
  block[4] = *(_QWORD *)(a1 + 40);
  v10 = v8;
  v11 = *(id *)(a1 + 56);
  dispatch_after(v7, (dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100177C60(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "setStartPPTTestCalled:", 1);
  objc_msgSend(*(id *)(a1 + 32), "startPPTTest");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
  objc_msgSend(v2, "feedEntry:handleBehavior:name:arguments:", *(_QWORD *)(a1 + 40), 0, CFSTR("GOTO_BOOK"), *(_QWORD *)(a1 + 48));

}

id sub_100177F50(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updateWithNewOffer");
  return objc_msgSend(*(id *)(a1 + 32), "setUpgradeFlowManagerFuture:", 0);
}

void sub_1001782D8(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
    objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 40));

  }
}

void sub_1001783B8(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers", 0));
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "cloudStorageUpgradeSheetWasDismissed");
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_1001787DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100178804(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001788A8;
  v5[3] = &unk_1008E7F50;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1001788A8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void (**v4)(void);
  void (**v5)(void);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  objc_msgSend(v3, "reloadData");

  v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    v5 = v4;
    v4[2]();
    v4 = v5;
  }

}

void sub_100179004(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

id sub_100179834(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadData");
}

void sub_10017983C(uint64_t a1)
{
  double v2;
  void *v3;
  _QWORD v4[4];
  id v5;
  double v6;

  if (*(_BYTE *)(a1 + 40))
    v2 = 0.0;
  else
    v2 = 1.0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "indexPathsForVisibleRows"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001798DC;
  v4[3] = &unk_1008ED208;
  v5 = *(id *)(a1 + 32);
  v6 = v2;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v4);

}

void sub_1001798DC(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellForRowAtIndexPath:", a2));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "detailTextLabel"));

  objc_msgSend(v4, "setAlpha:", *(double *)(a1 + 40));
}

void sub_100179934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) & 1) == 0)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, 0));
    objc_msgSend(v5, "addObject:", v6);

  }
}

void sub_1001799AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) & 1) == 0)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, 0));
    objc_msgSend(v5, "addObject:", v6);

  }
}

void sub_100179A24(uint64_t a1)
{
  UIAccessibilityNotifications v2;
  void *v3;
  id v4;

  v2 = UIAccessibilityLayoutChangedNotification;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cellForRowAtIndexPath:", *(_QWORD *)(a1 + 40)));
  UIAccessibilityPostNotification(v2, v3);

}

id sub_100179A88(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    objc_msgSend(*(id *)(a1 + 40), "deleteRowsAtIndexPaths:withRowAnimation:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  result = objc_msgSend(*(id *)(a1 + 48), "count");
  if (result)
    return objc_msgSend(*(id *)(a1 + 40), "insertRowsAtIndexPaths:withRowAnimation:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return result;
}

void sub_100179ADC(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_100179D28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  if ((objc_msgSend(*(id *)(a1 + 32), "isTextEditing") & 1) == 0)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_addCollectionIndexPath"));
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 73) = 1;
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 81) = 0;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v7 = v2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
    objc_msgSend(v3, "reloadRowsAtIndexPaths:withRowAnimation:", v4, 5);

    objc_msgSend(*(id *)(a1 + 40), "scrollToRowAtIndexPath:atScrollPosition:animated:", v2, 3, 0);
    objc_msgSend(*(id *)(a1 + 40), "layoutIfNeeded");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textEntryCell"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "textEntryField"));
    objc_msgSend(v6, "becomeFirstResponder");

  }
}

void sub_100179FD8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 40);
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
    if (*(_BYTE *)(a1 + 49))
      v4 = 0;
    else
      v4 = 5;
    objc_msgSend(v2, "insertRowsAtIndexPaths:withRowAnimation:", v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 40);
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
    if (*(_BYTE *)(a1 + 49))
      v5 = 0;
    else
      v5 = 5;
    objc_msgSend(v2, "deleteRowsAtIndexPaths:withRowAnimation:", v3, v5);
  }

}

void sub_10017A3D4(uint64_t a1, void *a2)
{
  void *v3;
  unsigned __int8 v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "hidden"));
  v4 = objc_msgSend(v3, "BOOLValue");

  if ((v4 & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);

}

void sub_10017A534(uint64_t a1)
{
  id WeakRetained;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  _QWORD v29[4];
  id v30;
  id v31;
  _QWORD v32[5];
  id v33;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v18 = WeakRetained;
    if (objc_msgSend(WeakRetained, "includeHiddenInPrefixCollections"))
    {
      v3 = objc_alloc_init((Class)NSMutableArray);
      v4 = *(void **)(a1 + 32);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_10017A82C;
      v32[3] = &unk_1008ED2A8;
      v32[4] = v18;
      v5 = v3;
      v33 = v5;
      objc_msgSend(v4, "enumerateObjectsUsingBlock:", v32);
      objc_msgSend(v18, "invalidatePrefixCollections");
      if (objc_msgSend(v5, "count"))
      {
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_10017A87C;
        v29[3] = &unk_1008E7338;
        v30 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "tableView"));
        v31 = v5;
        v6 = v30;
        objc_msgSend(v6, "performBatchUpdates:completion:", v29, 0);

      }
    }
    else
    {
      v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "prefixCollections"));
      objc_msgSend(v18, "invalidatePrefixCollections");
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "prefixCollections"));
      v8 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", v5);
      v9 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", v7);
      v10 = objc_alloc_init((Class)NSMutableArray);
      v11 = objc_alloc_init((Class)NSMutableArray);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_10017A88C;
      v26[3] = &unk_1008ED230;
      v12 = v9;
      v27 = v12;
      v13 = v10;
      v28 = v13;
      objc_msgSend(v5, "enumerateObjectsUsingBlock:", v26);
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_10017A904;
      v23[3] = &unk_1008ED230;
      v14 = v8;
      v24 = v14;
      v15 = v11;
      v25 = v15;
      objc_msgSend(v7, "enumerateObjectsUsingBlock:", v23);
      if (objc_msgSend(v13, "count") || objc_msgSend(v15, "count"))
      {
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "tableView"));
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_10017A97C;
        v19[3] = &unk_1008E7928;
        v20 = v13;
        v21 = v16;
        v22 = v15;
        v17 = v16;
        objc_msgSend(v17, "performBatchUpdates:completion:", v19, 0);

      }
    }

    WeakRetained = v18;
  }

}

void sub_10017A82C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_indexPathForCollectionID:", a2));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
    v3 = v4;
  }

}

id sub_10017A87C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadRowsAtIndexPaths:withRowAnimation:", *(_QWORD *)(a1 + 40), 0);
}

void sub_10017A88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) & 1) == 0)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, 0));
    objc_msgSend(v5, "addObject:", v6);

  }
}

void sub_10017A904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) & 1) == 0)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, 0));
    objc_msgSend(v5, "addObject:", v6);

  }
}

id sub_10017A97C(id *a1)
{
  id result;

  if (objc_msgSend(a1[4], "count"))
    objc_msgSend(a1[5], "deleteRowsAtIndexPaths:withRowAnimation:", a1[4], 0);
  result = objc_msgSend(a1[6], "count");
  if (result)
    return objc_msgSend(a1[5], "insertRowsAtIndexPaths:withRowAnimation:", a1[6], 0);
  return result;
}

void sub_10017AC98(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "filteredSetUsingPredicate:", *(_QWORD *)(a1 + 32)));
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v15;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v7);
        v9 = objc_opt_class(BKCollectionMember);
        v10 = BUDynamicCast(v9, v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "collectionID"));
        if (v12
          || (v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "collection")),
              v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "collectionID")),
              v13,
              v12))
        {
          objc_msgSend(*(id *)(a1 + 40), "addObject:", v12);

        }
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v5);
  }

}

void sub_10017ADFC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = WeakRetained;
    if (WeakRetained)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "collectionAssetCounts"));
      if (v4)
      {
        v13 = 0u;
        v14 = 0u;
        v11 = 0u;
        v12 = 0u;
        v5 = *(id *)(a1 + 32);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v12;
          do
          {
            v9 = 0;
            do
            {
              if (*(_QWORD *)v12 != v8)
                objc_enumerationMutation(v5);
              objc_msgSend(v4, "setObject:forKeyedSubscript:", 0, *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v9), (_QWORD)v11);
              v9 = (char *)v9 + 1;
            }
            while (v7 != v9);
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
          }
          while (v7);
        }

        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "coalescedTableViewReloadData"));
        objc_msgSend(v10, "signalWithCompletion:", &stru_1008ED2F0);

      }
    }

  }
}

void sub_10017B60C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v2, "scrollToRowAtIndexPath:atScrollPosition:animated:", *(_QWORD *)(a1 + 40), 2, 0);

}

id sub_10017B868(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTitle:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "setStyle:", *(_QWORD *)(a1 + 48));
}

void sub_10017BC5C(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableCollectionWithCollectionID:inManagedObjectContext:error:", *(_QWORD *)(a1 + 40), a2, 0));
  objc_msgSend(v4, "setTitle:", *(_QWORD *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v4, "setLastModification:", v3);

}

id sub_10017BCCC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setTitle:", *(_QWORD *)(a1 + 32));
}

void sub_10017C084(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10017C09C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v6 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateFor_All_Finished_LibraryAssets](BKLibraryManager, "predicateFor_All_Finished_LibraryAssets"));
  objc_msgSend(v6, "setPredicate:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v6, 0));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v5, "count");

}

void sub_10017C14C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v6 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKCollectionMember"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForCollectionMembersInCollectionID:hideUnownedItems:](BKLibraryManager, "predicateForCollectionMembersInCollectionID:hideUnownedItems:", *(_QWORD *)(a1 + 32), 0));
  objc_msgSend(v6, "setPredicate:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v6, 0));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v5, "count");

}

void sub_10017C45C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(void **)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "collectionID"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mutableCollectionWithCollectionID:inManagedObjectContext:error:", v6, v5, 0));

  if (*(_BYTE *)(a1 + 48))
    v7 = &__kCFBooleanTrue;
  else
    v7 = &__kCFBooleanFalse;
  objc_msgSend(v8, "setHidden:", v7);

}

void sub_10017C96C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    sub_1006A30A0(a1, (uint64_t)v4);

}

void sub_10017CF1C(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id obj;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];

  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "items"));
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
  if (v2)
  {
    v3 = v2;
    v30 = *(_QWORD *)v32;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v32 != v30)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)v4);
        v6 = objc_opt_class(BKLibraryAsset);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dragItem"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localObject"));
        v9 = BUDynamicCast(v6, v8);
        v10 = objc_claimAutoreleasedReturnValue(v9);

        v11 = objc_opt_class(BSUIItemDescription);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dragItem"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localObject"));
        v14 = BUDynamicCast(v11, v13);
        v15 = objc_claimAutoreleasedReturnValue(v14);

        v16 = objc_opt_class(BCAssetDragInfo);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dragItem"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "localObject"));
        v19 = BUDynamicCast(v16, v18);
        v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "assetID"));
        v22 = objc_msgSend(v21, "length");

        if (v22)
        {
          v23 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
          v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "assetID"));
          v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "libraryAssetOnMainQueueWithAssetID:", v24));

          v10 = v25;
        }
        if (v10 | v15)
        {
          v26 = *(void **)(a1 + 32);
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dragItem"));
          v28 = objc_msgSend(v26, "dropItem:intoRowAtIndexPath:rect:", v27, *(_QWORD *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));

        }
        v4 = (char *)v4 + 1;
      }
      while (v3 != v4);
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
    }
    while (v3);
  }

}

void sub_10017D1B0(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unsigned int v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *j;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];

  if (!*(_BYTE *)(a1 + 64))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionID"));
    v3 = objc_msgSend(v2, "isEqualToString:", kBKCollectionDefaultIDFinished);

    if (v3)
    {
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v4 = *(id *)(a1 + 40);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v35;
        do
        {
          for (i = 0; i != v6; i = (char *)i + 1)
          {
            if (*(_QWORD *)v35 != v7)
              objc_enumerationMutation(v4);
            v9 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
            v10 = objc_opt_class(BKLibraryAsset);
            v11 = BUDynamicCast(v10, v9);
            v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
            if ((objc_msgSend(v12, "isContainer") & 1) == 0)
              objc_msgSend(v12, "setFinishedStateAddToFinishedCollection");

          }
          v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
        }
        while (v6);
      }

      v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "uiChildContext"));

      objc_msgSend(v14, "setSaveContext:", 2);
      if (objc_msgSend(v14, "hasChanges"))
        objc_msgSend(v14, "saveLibrary");

    }
    else
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionID"));
      v16 = objc_msgSend(v15, "isEqualToString:", kBKCollectionDefaultIDWantToRead);

      if (v16)
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
        v30 = 0u;
        v31 = 0u;
        v32 = 0u;
        v33 = 0u;
        v18 = *(id *)(a1 + 40);
        v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
        if (v19)
        {
          v20 = v19;
          v21 = *(_QWORD *)v31;
          do
          {
            for (j = 0; j != v20; j = (char *)j + 1)
            {
              if (*(_QWORD *)v31 != v21)
                objc_enumerationMutation(v18);
              v23 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)j);
              if ((objc_msgSend(v23, "isContainer") & 1) == 0)
                objc_msgSend(v17, "addObject:", v23);
            }
            v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
          }
          while (v20);
        }

        objc_msgSend(*(id *)(a1 + 32), "addLibraryAssets:", v17);
        v24 = *(void **)(a1 + 48);
        v25 = *(_QWORD *)(a1 + 56);
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionID"));
        objc_msgSend(v24, "_addStoreItems:toCollection:", v25, v26);

      }
      else
      {
        objc_msgSend(*(id *)(a1 + 32), "addLibraryAssets:", *(_QWORD *)(a1 + 40));
        v27 = *(void **)(a1 + 48);
        v28 = *(_QWORD *)(a1 + 56);
        v29 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionID"));
        objc_msgSend(v27, "_addStoreItems:toCollection:", v28);

      }
    }
  }
}

void sub_10017DDFC(id a1, BKLibraryCollectionsListViewController *a2, NSIndexPath *a3, id a4)
{
  NSIndexPath *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  NSIndexPath *v26;
  id v27;
  uint64_t *v28;
  _QWORD v29[4];
  id v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id location;

  objc_initWeak(&location, a2);
  v6 = a3;
  v7 = a4;
  v8 = objc_loadWeakRetained(&location);
  v9 = v8;
  if (v8 && (v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "_collectionForIndexPath:", v6))) != 0)
  {
    v33 = 0;
    v34 = &v33;
    v35 = 0x2020000000;
    v36 = 0;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_10017E0E4;
    v29[3] = &unk_1008E8BC0;
    v32 = &v33;
    v12 = v9;
    v30 = v12;
    v13 = v10;
    v31 = v13;
    objc_msgSend(v11, "performBlockInUIContext:", v29);

    if (v34[3])
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "delegate"));
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_10017E118;
      v23[3] = &unk_1008ED3F8;
      v15 = v12;
      v24 = v15;
      v25 = v13;
      v28 = &v33;
      v26 = v6;
      v27 = v7;
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "collectionListView:alertControllerForDeletingCollection:completionHandler:", v15, v25, v23));

      objc_msgSend(v15, "presentViewController:animated:completion:", v16, 1, 0);
      v17 = v24;
    }
    else
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "ba_effectiveAnalyticsTracker"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "collectionID"));
      objc_msgSend(v19, "emitCollectionRemoveEventWithTracker:collectionID:collectionItemCount:", v20, v21, v34[3]);

      objc_msgSend(v12, "_concludeDeleteAtIndexPath:", v6);
      v22 = objc_retainBlock(v7);
      v17 = v22;
      if (v22)
        (*((void (**)(id, uint64_t))v22 + 2))(v22, 1);
    }

    _Block_object_dispose(&v33, 8);
  }
  else
  {
    v18 = objc_retainBlock(v7);
    v13 = v18;
    if (v18)
      (*((void (**)(id, _QWORD))v18 + 2))(v18, 0);
  }

  objc_destroyWeak(&location);
}

void sub_10017E0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a26, 8);
  objc_destroyWeak((id *)(v26 - 104));
  _Unwind_Resume(a1);
}

id sub_10017E0E4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_assetCountForCollection:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = result;
  return result;
}

void sub_10017E118(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  if ((_DWORD)a2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ba_effectiveAnalyticsTracker"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionID"));
    objc_msgSend(v4, "emitCollectionRemoveEventWithTracker:collectionID:collectionItemCount:", v5, v6, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24));

    objc_msgSend(*(id *)(a1 + 32), "_concludeDeleteAtIndexPath:", *(_QWORD *)(a1 + 48));
  }
  v7 = objc_retainBlock(*(id *)(a1 + 56));
  if (v7)
  {
    v8 = v7;
    (*((void (**)(id, uint64_t))v7 + 2))(v7, a2);
    v7 = v8;
  }

}

void sub_10017E1E8(id a1, BKLibraryCollectionsListViewController *a2, NSIndexPath *a3, id a4)
{
  NSIndexPath *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id location;

  objc_initWeak(&location, a2);
  v6 = a3;
  v7 = a4;
  v8 = objc_loadWeakRetained(&location);
  objc_msgSend(v8, "_concludeHide:atIndexPath:", 1, v6);

  v9 = objc_retainBlock(v7);
  v10 = v9;
  if (v9)
    (*((void (**)(id, uint64_t))v9 + 2))(v9, 1);

  objc_destroyWeak(&location);
}

void sub_10017E280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10017E550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10017E578(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id WeakRetained;
  void (**v7)(id, id, _QWORD, id);

  v5 = a4;
  v7 = (void (**)(id, id, _QWORD, id))objc_claimAutoreleasedReturnValue(+[BKLibraryCollectionsListViewController deleteActionHandler](BKLibraryCollectionsListViewController, "deleteActionHandler"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7[2](v7, WeakRetained, *(_QWORD *)(a1 + 32), v5);

}

void sub_10017E738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10017E760(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id WeakRetained;
  void (**v7)(id, id, _QWORD, id);

  v5 = a4;
  v7 = (void (**)(id, id, _QWORD, id))objc_claimAutoreleasedReturnValue(+[BKLibraryCollectionsListViewController hideActionHandler](BKLibraryCollectionsListViewController, "hideActionHandler"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7[2](v7, WeakRetained, *(_QWORD *)(a1 + 32), v5);

}

void sub_10017EE1C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && *(_QWORD *)(a1 + 32))
  {
    v8 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
    v4 = objc_msgSend(v3, "numberOfSections");
    if ((uint64_t)v4 <= (uint64_t)objc_msgSend(*(id *)(a1 + 32), "section"))
    {
LABEL_6:

      WeakRetained = v8;
      goto LABEL_7;
    }
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "tableView"));
    v6 = objc_msgSend(v5, "numberOfRowsInSection:", objc_msgSend(*(id *)(a1 + 32), "section"));
    v7 = objc_msgSend(*(id *)(a1 + 32), "row");

    WeakRetained = v8;
    if ((uint64_t)v6 > (uint64_t)v7)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "tableView"));
      objc_msgSend(v3, "scrollToRowAtIndexPath:atScrollPosition:animated:", *(_QWORD *)(a1 + 32), 2, *(unsigned __int8 *)(a1 + 48));
      goto LABEL_6;
    }
  }
LABEL_7:

}

id sub_10017F0B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateInsets");
}

id sub_10017F1BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateInsets");
}

id sub_10017FA04(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "collectionID"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

id sub_10017FA44(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "collectionID"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_1001809FC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v3, 1));
  objc_msgSend(v1, "reloadRowsAtIndexPaths:withRowAnimation:", v2, 0);

}

void sub_100180DC4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v15 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellForRowAtIndexPath:"));
  v4 = v3;
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageView"));
    v6 = *(void **)(a1 + 40);
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "textLabel"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "font"));
    objc_msgSend(v9, "pointSize");
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_iconForIndexPath:metrics:pointSize:", v15, v7));
    objc_msgSend(v5, "setImage:", v10);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_iconColorForIndexPath:metrics:", v15, *(_QWORD *)(a1 + 48)));
    objc_msgSend(v5, "setTintColor:", v11);

    v12 = objc_opt_class(BKLibraryCollectionsListCell);
    v13 = BUDynamicCast(v12, v4);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    objc_msgSend(v14, "setMetrics:", *(_QWORD *)(a1 + 48));

  }
}

void sub_100181540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001815F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10018169C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

int64_t sub_100183180(id a1, UIAccessibilityLocationDescriptor *a2, UIAccessibilityLocationDescriptor *a3)
{
  UIAccessibilityLocationDescriptor *v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v4 = a3;
  -[UIAccessibilityLocationDescriptor point](a2, "point");
  v6 = v5;
  -[UIAccessibilityLocationDescriptor point](v4, "point");
  v8 = v7;

  return v6 > v8;
}

void sub_100185D40(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  NSObject *v19;

  v5 = a3;
  v8 = v5;
  if (a2)
  {
    v9 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", a2));
    v10 = v9;
    if (v9)
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100185E24;
      v18[3] = &unk_1008E7338;
      v18[4] = *(_QWORD *)(a1 + 32);
      v10 = v9;
      v19 = v10;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);

    }
  }
  else
  {
    v11 = BKLibraryLog(v5, v6, v7);
    v10 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A319C((uint64_t)v8, v10, v12, v13, v14, v15, v16, v17);
  }

}

id sub_100185E24(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleCoverUpdateRequest:", *(_QWORD *)(a1 + 40));
}

void sub_1001862A8(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  void *v30;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryMutableAssetWithAssetID:inManagedObjectContext:", v4, v5));
  objc_msgSend(v6, "setTitle:", *(_QWORD *)(a1 + 48));
  objc_msgSend(v6, "setSortTitle:", *(_QWORD *)(a1 + 48));
  objc_msgSend(v6, "setAuthor:", *(_QWORD *)(a1 + 56));
  objc_msgSend(v6, "setSortAuthor:", *(_QWORD *)(a1 + 56));
  v20 = 0;
  objc_msgSend(v5, "save:", &v20);

  v7 = v20;
  v10 = v7;
  if (v7)
  {
    v11 = BKLibraryLog(v7, v8, v9);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v15 = *(_QWORD *)(a1 + 40);
      v16 = *(_QWORD *)(a1 + 48);
      v17 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 141559042;
      v22 = 1752392040;
      v23 = 2112;
      v24 = v15;
      v25 = 2112;
      v26 = v16;
      v27 = 2112;
      v28 = v17;
      v29 = 2112;
      v30 = v10;
      _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "[MetadataEditor updateTitle] assetID:%{mask.hash}@ newTitle:%@ author:%@ error:%@", buf, 0x34u);
    }

  }
  v13 = *(void **)(a1 + 32);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "updatedCoverImageData"));
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100186478;
  v18[3] = &unk_1008ED520;
  v19 = *(id *)(a1 + 40);
  objc_msgSend(v13, "updateAsset:coverArt:completion:", v6, v14, v18);

}

void sub_100186478(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;

  v6 = a2;
  v7 = a4;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
  v9 = objc_msgSend(v8, "incrementVersionForIdentifier:", *(_QWORD *)(a1 + 32));
  v12 = BKLibraryLog(v9, v10, v11);
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    v14 = *(_QWORD *)(a1 + 32);
    v15 = 141558786;
    v16 = 1752392040;
    v17 = 2112;
    v18 = v14;
    v19 = 2112;
    v20 = v6;
    v21 = 2112;
    v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[MetadataEditor updateTitle] FINISH assetID:%{mask.hash}@ asset:%@ error:%@", (uint8_t *)&v15, 0x2Au);
  }

}

void sub_100186C50(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  NSData *v11;
  void *v12;
  id v13;

  objc_msgSend(*(id *)(a1 + 32), "size");
  v4 = v2 / v3;
  v5 = v4 * 56.0;
  v6 = 298.0 / v4;
  if (v5 <= 298.0)
    v7 = 56.0;
  else
    v7 = v6;
  if (v5 <= 298.0)
    v8 = v5;
  else
    v8 = 298.0;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "coverHeightConstraint"));
  objc_msgSend(v9, "setConstant:", v7);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "coverWidthConstraint"));
  objc_msgSend(v10, "setConstant:", v8);

  v13 = objc_msgSend(objc_alloc((Class)UIImageView), "initWithImage:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setContentMode:", 1);
  objc_msgSend(*(id *)(a1 + 40), "_updateCoverView:", v13);
  v11 = UIImageJPEGRepresentation(*(UIImage **)(a1 + 32), 0.9);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  objc_msgSend(*(id *)(a1 + 40), "setUpdatedCoverImageData:", v12);

}

void sub_100186D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v6, "setBool:forKey:", a3, CFSTR("BKMetadatEditorSkipReplaceCoverConfirmation"));

  if (!a2)
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100187A80(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedTest:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 56));
}

void sub_100187C54(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "bookController"));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 80);
  *(_QWORD *)(v4 + 80) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 80))
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(+[BKTestDriverDispatcher shared](BKTestDriverDispatcher, "shared"));
    objc_msgSend(v6, "subscribeForBookController:", *(_QWORD *)(a1 + 32));

  }
}

void sub_100187D54(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id *v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  void (**v9)(void);

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v5 = *(void **)(v2 + 80);
  v4 = (id *)(v2 + 80);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    if (objc_msgSend(*(id *)(a1 + 32), "running"))
    {
      v6 = *(_QWORD **)(a1 + 32);
      if (v6[10])
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "onReceiveHandler"));

        if (v7)
        {
          v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKTestDriverDispatcher shared](BKTestDriverDispatcher, "shared"));
          objc_msgSend(v8, "unsubscribe:", *(_QWORD *)(a1 + 32));

          v9 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onReceiveHandler"));
          v9[2]();

        }
      }
    }
  }
}

id sub_1001881B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishPPTTestWithResult:", 0);
}

void sub_1001881FC(id a1)
{
  BKBookCacheController *v1;
  void *v2;

  v1 = objc_alloc_init(BKBookCacheController);
  v2 = (void *)qword_1009F5158;
  qword_1009F5158 = (uint64_t)v1;

}

void sub_1001887A0(uint64_t a1)
{
  dispatch_queue_global_t global_queue;
  NSObject *v3;
  _QWORD block[4];
  id v5;
  id v6;
  _QWORD *v7;
  _QWORD v8[3];
  char v9;

  v8[0] = 0;
  v8[1] = v8;
  v8[2] = 0x2020000000;
  v9 = 0;
  global_queue = dispatch_get_global_queue(0, 0);
  v3 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10018886C;
  block[3] = &unk_1008E9970;
  v5 = *(id *)(a1 + 32);
  v7 = v8;
  v6 = *(id *)(a1 + 40);
  dispatch_async(v3, block);

  _Block_object_dispose(v8, 8);
}

void sub_10018886C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = *(id *)(a1 + 32);
  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id, id, _QWORD))v2 + 2))(v2, v4, 0);

}

id sub_100188DD0(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;

  objc_msgSend(*(id *)(a1 + 32), "setTransition:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setCompletion:", *(_QWORD *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentViewController"));
  objc_msgSend(*(id *)(a1 + 32), "setSourceViewController:", v2);

  objc_msgSend(*(id *)(a1 + 32), "setWallpaperAssertion:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setTransitioning:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "viewIfLoaded"));
  objc_msgSend(v12, "setFrame:", v5, v7, v9, v11);

  objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("contentViewController"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navController"));
  v14 = v13;
  if (*(_QWORD *)(a1 + 48))
  {
    v17 = *(_QWORD *)(a1 + 48);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v17, 1));
    objc_msgSend(v14, "setViewControllers:animated:", v15, 1);

  }
  else
  {
    objc_msgSend(v13, "setViewControllers:animated:", &__NSArray0__struct, 1);
  }

  return objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("contentViewController"));
}

uint64_t sub_1001893D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  return result;
}

void sub_10018973C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F5168;
  qword_1009F5168 = (uint64_t)v1;

}

void sub_100189760(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_notifyObserversOfReload:", v3);

}

void sub_1001897A8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dq_performInitialFetch");

}

void sub_10018989C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
    objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 40));

  }
}

void sub_1001899BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(id, void *, _QWORD);
  void *v7;
  id v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "cachedAssetIDs"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](NSArray, "arrayWithArray:", v2));

  if (*(_BYTE *)(a1 + 56))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookletAssetCache"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allBookletAssetIDs"));

    v6 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 40));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "arrayByAddingObjectsFromArray:", v5));
      v6[2](v6, v7, 0);

    }
  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 40));
    v5 = v8;
    if (v8)
      (*((void (**)(id, void *, _QWORD))v8 + 2))(v8, v3, 0);
  }

}

void sub_100189BA8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 56)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetsFromAssetIDs:", *(_QWORD *)(a1 + 40)));
  v3 = objc_retainBlock(*(id *)(a1 + 48));
  v4 = v3;
  if (v3)
    (*((void (**)(id, void *, _QWORD))v3 + 2))(v3, v2, 0);

}

void sub_100189CDC(uint64_t a1)
{
  void *v2;
  id v3;
  __int128 v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  void (**v16)(id, id, _QWORD);
  id v17;
  __int128 v18;
  uint8_t buf[4];
  void *v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 56)));
  v3 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 40), "count"));
  if (objc_msgSend(*(id *)(a1 + 40), "count"))
  {
    v5 = 0;
    *(_QWORD *)&v4 = 138412290;
    v18 = v4;
    do
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", v5, v18));
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "assetFromAssetID:", v6));
      v8 = (void *)v7;
      if (v7)
      {
        objc_msgSend(v3, "addObject:", v7);
      }
      else if (*(_BYTE *)(a1 + 64))
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookletAssetCache"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "bookletAssetForAssetID:", v6));

        if (v10)
        {
          objc_msgSend(v3, "addObject:", v10);
        }
        else
        {
          v14 = BKLibraryDataSourceMediaLibraryLog(v11);
          v15 = objc_claimAutoreleasedReturnValue(v14);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v18;
            v20 = v6;
            _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Could not find a booklet or mediaLibrary asset with assetID %@", buf, 0xCu);
          }

        }
      }
      else
      {
        v12 = BKLibraryDataSourceMediaLibraryLog(0);
        v13 = objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = v18;
          v20 = v6;
          _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Could not find an asset with assetID %@", buf, 0xCu);
        }

      }
      ++v5;
    }
    while (v5 < (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count"));
  }
  v16 = (void (**)(id, id, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
  if (v16)
  {
    v17 = objc_msgSend(v3, "copy");
    v16[2](v16, v17, 0);

  }
}

void sub_100189FC0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(id, void *, _QWORD);
  void *v7;
  id v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "cachedAssets"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](NSArray, "arrayWithArray:", v2));

  if (*(_BYTE *)(a1 + 56))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookletAssetCache"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allBookletAssets"));

    v6 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 40));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "arrayByAddingObjectsFromArray:", v5));
      v6[2](v6, v7, 0);

    }
  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 40));
    v5 = v8;
    if (v8)
      (*((void (**)(id, void *, _QWORD))v8 + 2))(v8, v3, 0);
  }

}

void sub_10018A180(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 56)));
  objc_msgSend(v2, "fetchBookCoverForAssetProperties:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_10018A2C8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetCacheForType:", *(_QWORD *)(a1 + 56)));
  objc_msgSend(v2, "deleteAssets:exhaustive:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 48));

}

void sub_10018A434(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = *(unsigned __int8 *)(a1 + 72);
  v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookletAssetCache"));
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bookletAssetForAssetID:", *(_QWORD *)(a1 + 40)));

    v5 = objc_retainBlock(*(id *)(a1 + 56));
    v6 = v5;
    if (v5)
      (*((void (**)(id, id, _QWORD))v5 + 2))(v5, v7, 0);

  }
  else
  {
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_assetCacheForType:", *(_QWORD *)(a1 + 64)));
    objc_msgSend(v7, "assetForLibraryAsset:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  }

}

void sub_10018A5D4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6);
        dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 3221225472;
        v8[2] = sub_10018A72C;
        v8[3] = &unk_1008E72C0;
        v9 = *(id *)(a1 + 40);
        objc_msgSend(v7, "mediaLibraryCacheRequestsReload:", v8);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

}

void sub_10018A72C(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10018A734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018AD28(uint64_t a1, void *a2, void *a3)
{
  void *i;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSMutableArray *v13;
  void *j;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *k;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *m;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  void *n;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  void *ii;
  void *v72;
  void *v73;
  unsigned __int8 v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  id v85;
  id obj;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  id v91;
  id v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  NSMutableArray *v101;
  NSMutableArray *v102;
  id v103;
  id v104;
  uint64_t v105;
  void *v106;
  id v107;
  id v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  _BYTE v138[128];
  _BYTE v139[128];
  _BYTE v140[128];
  _BYTE v141[128];
  _BYTE v142[128];
  _BYTE v143[128];
  _BYTE v144[128];

  v91 = a2;
  v85 = a3;
  v134 = 0u;
  v135 = 0u;
  v136 = 0u;
  v137 = 0u;
  v109 = a1;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v92 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v134, v144, 16);
  if (v92)
  {
    v90 = *(_QWORD *)v135;
    v100 = MPMediaItemPropertyBooklets;
    do
    {
      for (i = 0; i != v92; i = (char *)i + 1)
      {
        if (*(_QWORD *)v135 != v90)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v134 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v91, "added"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "allValues"));

        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v91, "removed"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "allValues"));

        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v91, "updated"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "allValues"));

        if ((objc_opt_respondsToSelector(v6, "mediaLibraryCacheAddedCloudAssets:updatedCloudAssets:removedCloudAssets:") & 1) != 0)objc_msgSend(v6, "mediaLibraryCacheAddedCloudAssets:updatedCloudAssets:removedCloudAssets:", v8, v12, v10);
        if ((objc_opt_respondsToSelector(v6, "mediaLibraryCacheAddedBookletAssets:removedBookletAssets:") & 1) != 0)
        {
          v93 = v12;
          v94 = v10;
          v87 = v6;
          v89 = i;
          v13 = objc_opt_new(NSMutableArray);
          v102 = objc_opt_new(NSMutableArray);
          v130 = 0u;
          v131 = 0u;
          v132 = 0u;
          v133 = 0u;
          v88 = v8;
          v103 = v8;
          v101 = v13;
          v107 = objc_msgSend(v103, "countByEnumeratingWithState:objects:count:", &v130, v143, 16);
          if (v107)
          {
            v105 = *(_QWORD *)v131;
            do
            {
              for (j = 0; j != v107; j = (char *)j + 1)
              {
                if (*(_QWORD *)v131 != v105)
                  objc_enumerationMutation(v103);
                v15 = *(void **)(*((_QWORD *)&v130 + 1) + 8 * (_QWORD)j);
                v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "representativeItem"));
                v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "valueForProperty:", v100));

                v128 = 0u;
                v129 = 0u;
                v126 = 0u;
                v127 = 0u;
                v18 = v17;
                v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v126, v142, 16);
                if (v19)
                {
                  v20 = v19;
                  v21 = *(_QWORD *)v127;
                  do
                  {
                    for (k = 0; k != v20; k = (char *)k + 1)
                    {
                      if (*(_QWORD *)v127 != v21)
                        objc_enumerationMutation(v18);
                      v23 = *(_QWORD *)(*((_QWORD *)&v126 + 1) + 8 * (_QWORD)k);
                      v24 = *(void **)(v109 + 32);
                      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cloudAssetCache"));
                      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "dataSourceIdentifier"));
                      objc_msgSend(v24, "dq_processAndCacheBookletItem:parentItem:dataSourceIdentifier:", v23, v15, v26);

                    }
                    v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v126, v142, 16);
                  }
                  while (v20);
                }

                v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v109 + 32), "bookletAssetCache"));
                v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetID"));
                v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bookletAssetsForParentAssetID:", v28));
                v13 = v101;
                -[NSMutableArray addObjectsFromArray:](v101, "addObjectsFromArray:", v29);

              }
              v107 = objc_msgSend(v103, "countByEnumeratingWithState:objects:count:", &v130, v143, 16);
            }
            while (v107);
          }

          v124 = 0u;
          v125 = 0u;
          v122 = 0u;
          v123 = 0u;
          v30 = v94;
          v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v122, v141, 16);
          if (v31)
          {
            v32 = v31;
            v33 = *(_QWORD *)v123;
            do
            {
              for (m = 0; m != v32; m = (char *)m + 1)
              {
                if (*(_QWORD *)v123 != v33)
                  objc_enumerationMutation(v30);
                v35 = *(void **)(*((_QWORD *)&v122 + 1) + 8 * (_QWORD)m);
                v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v109 + 32), "bookletAssetCache"));
                v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "assetID"));
                v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "popBookletAssetsForParentAssetID:", v37));
                -[NSMutableArray addObjectsFromArray:](v102, "addObjectsFromArray:", v38);

              }
              v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v122, v141, 16);
            }
            while (v32);
          }

          v120 = 0u;
          v121 = 0u;
          v118 = 0u;
          v119 = 0u;
          v95 = v93;
          v97 = objc_msgSend(v95, "countByEnumeratingWithState:objects:count:", &v118, v140, 16);
          if (v97)
          {
            v96 = *(_QWORD *)v119;
            do
            {
              v39 = 0;
              do
              {
                if (*(_QWORD *)v119 != v96)
                  objc_enumerationMutation(v95);
                v99 = v39;
                v40 = *(void **)(*((_QWORD *)&v118 + 1) + 8 * v39);
                v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v109 + 32), "bookletAssetCache"));
                v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "assetID"));
                v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "bookletAssetsForParentAssetID:", v42));

                v98 = v43;
                v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "valueForKey:", CFSTR("storeID")));
                v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "bu_arrayByRemovingNSNulls"));
                v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v45));

                v104 = v40;
                v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "representativeItem"));
                v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "valueForProperty:", v100));

                v49 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", objc_msgSend(v48, "count"));
                v114 = 0u;
                v115 = 0u;
                v116 = 0u;
                v117 = 0u;
                v108 = v48;
                v50 = objc_msgSend(v108, "countByEnumeratingWithState:objects:count:", &v114, v139, 16);
                v106 = v49;
                if (v50)
                {
                  v51 = v50;
                  v52 = *(_QWORD *)v115;
                  do
                  {
                    for (n = 0; n != v51; n = (char *)n + 1)
                    {
                      if (*(_QWORD *)v115 != v52)
                        objc_enumerationMutation(v108);
                      v54 = *(void **)(*((_QWORD *)&v114 + 1) + 8 * (_QWORD)n);
                      v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v54, "storeItemID")));
                      v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "stringValue"));
                      if ((objc_msgSend(v46, "containsObject:", v56) & 1) == 0)
                      {
                        v57 = *(void **)(v109 + 32);
                        v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "cloudAssetCache"));
                        v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "dataSourceIdentifier"));
                        objc_msgSend(v57, "dq_processAndCacheBookletItem:parentItem:dataSourceIdentifier:", v54, v104, v59);

                        v49 = v106;
                      }
                      objc_msgSend(v49, "addObject:", v56);

                    }
                    v51 = objc_msgSend(v108, "countByEnumeratingWithState:objects:count:", &v114, v139, 16);
                  }
                  while (v51);
                }

                v60 = objc_msgSend(v46, "mutableCopy");
                objc_msgSend(v60, "minusSet:", v49);
                v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v109 + 32), "bookletAssetCache"));
                v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v104, "assetID"));
                v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v61, "popBookletAssetsWithAssetIDs:forParentAssetID:", v60, v62));
                -[NSMutableArray addObjectsFromArray:](v102, "addObjectsFromArray:", v63);

                v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v109 + 32), "bookletAssetCache"));
                v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v104, "assetID"));
                v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64, "bookletAssetsForParentAssetID:", v65));

                v112 = 0u;
                v113 = 0u;
                v110 = 0u;
                v111 = 0u;
                v67 = v66;
                v68 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v110, v138, 16);
                v13 = v101;
                if (v68)
                {
                  v69 = v68;
                  v70 = *(_QWORD *)v111;
                  do
                  {
                    for (ii = 0; ii != v69; ii = (char *)ii + 1)
                    {
                      if (*(_QWORD *)v111 != v70)
                        objc_enumerationMutation(v67);
                      v72 = *(void **)(*((_QWORD *)&v110 + 1) + 8 * (_QWORD)ii);
                      v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "storeID"));
                      v74 = objc_msgSend(v46, "containsObject:", v73);

                      if ((v74 & 1) == 0)
                        -[NSMutableArray addObject:](v101, "addObject:", v72);
                    }
                    v69 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v110, v138, 16);
                  }
                  while (v69);
                }

                v39 = v99 + 1;
              }
              while ((id)(v99 + 1) != v97);
              v97 = objc_msgSend(v95, "countByEnumeratingWithState:objects:count:", &v118, v140, 16);
            }
            while (v97);
          }

          v6 = v87;
          objc_msgSend(v87, "mediaLibraryCacheAddedBookletAssets:removedBookletAssets:", v13, v102);

          v8 = v88;
          i = v89;
          v12 = v93;
          v10 = v94;
        }
        if ((objc_opt_respondsToSelector(v6, "mediaLibraryCacheAddedLocalAssets:updatedLocalAssets:removedLocalAssets:") & 1) != 0)
        {
          v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "added"));
          v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v75, "allValues"));
          v77 = i;
          v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "updated"));
          v79 = v8;
          v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "allValues"));
          v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "removed"));
          v82 = objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "allValues"));
          v83 = v6;
          v84 = (void *)v82;
          objc_msgSend(v83, "mediaLibraryCacheAddedLocalAssets:updatedLocalAssets:removedLocalAssets:", v76, v80, v82);

          v8 = v79;
          i = v77;

        }
      }
      v92 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v134, v144, 16);
    }
    while (v92);
  }

}

void sub_10018B704(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  void *v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  uint64_t v26;
  NSObject *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint8_t buf[4];
  id v39;

  v3 = a2;
  v4 = objc_autoreleasePoolPush();
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "entity"));
  v6 = objc_opt_class(MPMediaItemCollection);
  v7 = BUDynamicCast(v6, v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v9 = objc_opt_class(MPMediaItem);
  v10 = BUDynamicCast(v9, v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v12 = v11;
  if (v8)
    v13 = 1;
  else
    v13 = v11 == 0;
  if (v13)
  {
    if (!v8)
    {
LABEL_13:
      if (!v12)
        goto LABEL_28;
      goto LABEL_14;
    }
  }
  else
  {
    v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "bk_localStoreBookAlbumForItem"));
    v8 = (void *)v14;
    if (!v14)
    {
LABEL_14:
      if ((objc_msgSend(v12, "mediaType") & 4) != 0)
      {
        v18 = *(void **)(a1 + 32);
        v37 = v12;
        v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v37, 1));
        v20 = objc_msgSend(v18, "_processAudiobookCollection:fromMediaLibraryChangedNotification:", v19, 1);

        v22 = BKLibraryDataSourceMediaLibraryLog(v21);
        v23 = objc_claimAutoreleasedReturnValue(v22);
        v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);
        if (v20)
        {
          if (v24)
          {
            *(_WORD *)buf = 0;
            v25 = "individual item is local";
LABEL_23:
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, v25, buf, 2u);
            goto LABEL_24;
          }
          goto LABEL_24;
        }
        if (v24)
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "individual item is not local", buf, 2u);
        }

      }
      goto LABEL_28;
    }
    v15 = BKLibraryDataSourceMediaLibraryLog(v14);
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "using local album collection", buf, 2u);
    }

  }
  v17 = objc_msgSend(v8, "mediaTypes");
  if ((v17 & 4) == 0)
    goto LABEL_13;
  v26 = BKLibraryDataSourceMediaLibraryLog(v17);
  v27 = objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "items"));
    v29 = objc_msgSend(v28, "count");
    *(_DWORD *)buf = 134217984;
    v39 = v29;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "collection with %lu items", buf, 0xCu);

  }
  v30 = *(void **)(a1 + 32);
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "items"));
  LODWORD(v30) = objc_msgSend(v30, "_processAudiobookCollection:fromMediaLibraryChangedNotification:", v31, 1);

  if ((_DWORD)v30)
  {
    v33 = BKLibraryDataSourceMediaLibraryLog(v32);
    v23 = objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v25 = "all items local";
      goto LABEL_23;
    }
LABEL_24:

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
  }
LABEL_28:
  v34 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "anchor"));
  v35 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v36 = *(void **)(v35 + 40);
  *(_QWORD *)(v35 + 40) = v34;

  objc_autoreleasePoolPop(v4);
}

id sub_10018CB04(uint64_t a1)
{
  void *v2;
  void *v3;
  __int128 v4;
  _OWORD v6[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "window"));
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);

  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", *(double *)(a1 + 56));
  v3 = *(void **)(a1 + 40);
  v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v4;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v3, "setTransform:", v6);
  return objc_msgSend(*(id *)(a1 + 48), "completeTransition:", 1);
}

id sub_10018CB88(uint64_t a1)
{
  double v2;
  CGFloat v3;
  CGFloat v4;
  void *v5;
  CGAffineTransform v7;
  CGAffineTransform v8;

  objc_msgSend(*(id *)(a1 + 40), "zoomFactor");
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 40), "zoomFactor");
  CGAffineTransformMakeScale(&v8, v3, v4);
  v5 = *(void **)(a1 + 32);
  v7 = v8;
  return objc_msgSend(v5, "setTransform:", &v7);
}

id sub_10018CBF4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void sub_10018CEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10018CF0C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", *a3);
}

void sub_10018D340(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F5180;
  qword_1009F5180 = (uint64_t)v1;

}

void sub_10018D9D8(id *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_sceneManager"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018DA90;
  v6[3] = &unk_1008E7B70;
  v3 = a1[4];
  v4 = a1[5];
  v7 = v2;
  v8 = v3;
  v9 = a1[6];
  v10 = a1[5];
  v5 = v2;
  objc_msgSend(v5, "forceTransaction:ontoPrimarySceneWithContinuation:", v4, v6);

}

void sub_10018DA90(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "primaryScenePresenting"));

  objc_msgSend(*(id *)(a1 + 40), "_showStoreWithURL:tabBarIdentifier:transaction:presentingDelegate:", *(_QWORD *)(a1 + 48), 0, *(_QWORD *)(a1 + 56), v3);
}

uint64_t sub_10018DAEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018DBEC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018DC9C;
  v6[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  objc_msgSend(v2, "presenterDismissAllModalControllersAnimated:completion:", 1, v6);

}

void sub_10018DC9C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018DD48;
  v6[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  objc_msgSend(v2, "commit:", v6);

}

void sub_10018DD48(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018DDF4;
  v6[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = *(id *)(a1 + 32);
  objc_msgSend(v2, "presenterFinishModalTransitionsWithCompletion:", v6);

}

void sub_10018DDF4(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10018DEA4;
  v5[3] = &unk_1008E78B8;
  v2 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v6 = v3;
  v7 = v4;
  v8 = *(id *)(a1 + 32);
  v9 = *(id *)(a1 + 56);
  v10 = *(id *)(a1 + 64);
  objc_msgSend(v2, "commit:", v5);

}

void sub_10018DEA4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  if (*(_QWORD *)(a1 + 32))
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "environment"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "underlyingURL"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "referrerURLString"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "referrerApplicationName"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_optionsForTransaction:", *(_QWORD *)(a1 + 48)));
    objc_msgSend(v2, "openURL:referrerURL:referrerApplicationName:options:", v3, v4, v5, v6);

  }
  else
  {
    v7 = *(void **)(a1 + 56);
    if (v7)
      v8 = v7;
    else
      v8 = (id)objc_claimAutoreleasedReturnValue(+[BKRootBarItemsProvider BooksIdentifier](BKRootBarItemsProvider, "BooksIdentifier"));
    v9 = v8;
    objc_msgSend(*(id *)(a1 + 64), "presenterSelectTabWithIdentifier:", v8);
  }

}

void sub_10018DFF4(id a1, BKPrimarySceneControlling *a2)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(-[BKPrimarySceneControlling primaryScenePresenting](a2, "primaryScenePresenting"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKRootBarItemsProvider SearchIdentifier](BKRootBarItemsProvider, "SearchIdentifier"));
  objc_msgSend(v3, "presenterSelectTabWithIdentifier:", v2);

}

void sub_10018E2B0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "primaryScenePresenting"));

  objc_msgSend(*(id *)(a1 + 40), "_showStoreWithURL:tabBarIdentifier:transaction:presentingDelegate:", 0, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v3);
}

void sub_10018E42C(id *a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  _QWORD v5[5];
  id v6;
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = objc_msgSend(v2, "isConnectedToInternet");

  if (v3)
  {
    if (objc_msgSend(a1[4], "bc_hasLegacyBookStoreScheme"))
    {
      objc_msgSend(a1[5], "showStoreWithURL:transaction:", a1[6], a1[7]);
    }
    else
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_10018E540;
      v5[3] = &unk_1008E9070;
      v4 = a1[4];
      v5[4] = a1[5];
      v6 = a1[6];
      v7 = a1[7];
      v8 = a1[4];
      objc_msgSend(v4, "bc_isStoreURLWithCompletion:", v5);

    }
  }
  else
  {
    objc_msgSend(a1[5], "displayInternetReachabilityErrorAlert:transaction:", 1, a1[7]);
  }
}

void sub_10018E540(uint64_t a1, char a2)
{
  void *v3;
  _QWORD *v4;
  _QWORD v5[4];
  _QWORD *v6;
  _QWORD v7[5];
  id v8;
  id v9;
  id v10;
  char v11;

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10018E64C;
  v7[3] = &unk_1008E89C0;
  v11 = a2;
  v3 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v3;
  v9 = *(id *)(a1 + 48);
  v10 = *(id *)(a1 + 56);
  v4 = objc_retainBlock(v7);
  if (v4)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v4[2])(v4);
    }
    else
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_10018E6BC;
      v5[3] = &unk_1008E7818;
      v6 = v4;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

    }
  }

}

void sub_10018E64C(uint64_t a1)
{
  id v2;

  if (*(_BYTE *)(a1 + 64))
  {
    objc_msgSend(*(id *)(a1 + 32), "showStoreWithURL:transaction:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  }
  else
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v2, "openURL:options:completionHandler:", *(_QWORD *)(a1 + 56), &__NSDictionary0__struct, 0);

  }
}

uint64_t sub_10018E6BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10018E9A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_10018E9B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_10018E9B8(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018EAA8;
  v6[3] = &unk_1008ED7A0;
  v15 = a2;
  v3 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v4 = *(id *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v10 = v4;
  v11 = v5;
  v12 = *(id *)(a1 + 32);
  v13 = *(id *)(a1 + 80);
  v14 = *(id *)(a1 + 88);
  objc_msgSend(v3, "commit:", v6);

}

id sub_10018EAA8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 96);
  if ((v2 & 1) != 0)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10018EB9C;
    v8[3] = &unk_1008ED778;
    v15 = v2;
    v3 = *(void **)(a1 + 32);
    v9 = *(id *)(a1 + 40);
    v10 = *(id *)(a1 + 48);
    v4 = *(id *)(a1 + 56);
    v5 = *(_QWORD *)(a1 + 64);
    v6 = *(void **)(a1 + 72);
    v11 = v4;
    v12 = v5;
    v13 = v6;
    v14 = *(id *)(a1 + 80);
    objc_msgSend(v3, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 32, CFSTR("handle StoreURL"), v8);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 64), "_storeCheckConnectionAndShowStoreURL:sourceApplication:annotation:transaction:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 72));
  }
  return objc_msgSend(*(id *)(a1 + 88), "invalidate");
}

void sub_10018EB9C(uint64_t a1, int a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  id *(*v12)(id *, char, uint64_t);
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  if (a2)
  {
    if ((*(_BYTE *)(a1 + 80) & 2) != 0)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_10018ED00;
      v15[3] = &unk_1008ED750;
      v16 = *(id *)(a1 + 32);
      v17 = *(id *)(a1 + 40);
      v7 = *(id *)(a1 + 48);
      v8 = *(_QWORD *)(a1 + 56);
      v9 = *(void **)(a1 + 64);
      v18 = v7;
      v19 = v8;
      v20 = v9;
      objc_msgSend(v6, "enqueueBlock:file:line:", v15, CFSTR("BKJSStoreFlowController.m"), 302);

      v5 = v16;
    }
    else
    {
      v3 = objc_alloc_init((Class)SKStoreProductViewController);
      objc_msgSend(v3, "setDelegate:", *(_QWORD *)(a1 + 56));
      v4 = *(_QWORD *)(a1 + 32);
      v10 = _NSConcreteStackBlock;
      v11 = 3221225472;
      v12 = sub_10018EDE4;
      v13 = &unk_1008E7418;
      v14 = v3;
      v5 = v3;
      objc_msgSend(v5, "loadProductWithURL:completionBlock:", v4, &v10);
      objc_msgSend(*(id *)(a1 + 72), "presenterShowModalController:animated:completion:", v5, 1, 0, v10, v11, v12, v13);

    }
  }
}

void sub_10018ED00(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[BSUIURL URLWithURL:sourceApplication:annotation:](BSUIURL, "URLWithURL:sourceApplication:annotation:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "environment"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "underlyingURL"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "referrerURLString"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "referrerApplicationName"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "_optionsForTransaction:", *(_QWORD *)(a1 + 64)));
  objc_msgSend(v3, "openURL:referrerURL:referrerApplicationName:options:", v4, v5, v6, v7);

}

id *sub_10018EDE4(id *result, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0)
    return (id *)objc_msgSend(result[4], "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

void sub_10018EEF8(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  id v6;
  void *v7;
  void *v8;
  const __CFString *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = v3;
  if (v2)
    v5 = CFSTR("Apple Books couldn’t connect to the Book Store. Check your Internet connection, then try again.");
  else
    v5 = CFSTR("Apple Books couldn’t connect to iCloud. Check your Internet connection, then try again.");
  v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v5, &stru_10091C438, 0));

  v6 = +[BCDevice deviceClass](BCDevice, "deviceClass");
  if (v6 == (id)3)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = v7;
    v9 = CFSTR("Your iPad is Offline");
  }
  else if (v6 == (id)1)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = v7;
    v9 = CFSTR("Your iPhone is Offline");
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = v7;
    v9 = CFSTR("Your device is Offline");
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", v9, &stru_10091C438, 0));

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v10, v15, 1));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v13, 1, 0));
  objc_msgSend(v11, "addAction:", v14);

  objc_msgSend(*(id *)(a1 + 32), "presenterShowAlertController:animated:", v11, 1);
}

uint64_t sub_10018F0A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018F1AC(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v2 = *(unsigned __int16 *)(a1 + 40);
  if ((v2 - 3) >= 2)
  {
    if (v2 == 6)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v4 = v3;
      v5 = CFSTR("This audiobook can’t be downloaded.");
      goto LABEL_7;
    }
    if (v2 != 1)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v4 = v3;
      v5 = CFSTR("This item can’t be downloaded.");
      goto LABEL_7;
    }
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = v3;
  v5 = CFSTR("This book can’t be downloaded.");
LABEL_7:
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v5, &stru_10091C438, 0));

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("Apple Books isn’t connected to the internet."), &stru_10091C438, 0));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v12, 1));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v10, 1, 0));
  objc_msgSend(v8, "addAction:", v11);

  objc_msgSend(*(id *)(a1 + 32), "presenterShowAlertController:animated:", v8, 1);
}

uint64_t sub_10018F34C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018F450(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = v3;
  if (v2)
    v5 = CFSTR("Apple Books couldn’t connect to the Book Store. Check your Internet connection, then try again.");
  else
    v5 = CFSTR("Apple Books couldn’t connect to iCloud. Check your Internet connection, then try again.");
  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v5, &stru_10091C438, 0));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Couldn’t Connect"), &stru_10091C438, 0));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v7, v12, 1));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v10, 1, 0));
  objc_msgSend(v8, "addAction:", v11);

  objc_msgSend(*(id *)(a1 + 32), "presenterShowAlertController:animated:", v8, 1);
}

uint64_t sub_10018F5A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018F844(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("This book is unavailable."), &stru_10091C438, 0));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v7, 0, 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v5, 1, 0));
  objc_msgSend(v3, "addAction:", v6);

  objc_msgSend(*(id *)(a1 + 32), "presenterShowAlertController:animated:", v3, 1);
}

uint64_t sub_10018F954(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10018FA80(uint64_t a1)
{
  void *v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  global_queue = dispatch_get_global_queue(25, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10018FB50;
  block[3] = &unk_1008E7928;
  v7 = v2;
  v8 = *(id *)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v5 = v2;
  dispatch_async(v4, block);

}

void sub_10018FB50(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stateCenter"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "provider"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "itemStateWithIdentifier:", *(_QWORD *)(a1 + 40)));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mapItemState:", v5));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 48);
  if (v6)
  {
    v11 = v6;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
    objc_msgSend(v8, "enqueueValueCall:arguments:file:line:", v9, v10, CFSTR("BKScriptQueryableLibraryItemStateWorker.m"), 28);

  }
  else
  {
    objc_msgSend(v7, "enqueueValueCall:arguments:file:line:", v9, 0, CFSTR("BKScriptQueryableLibraryItemStateWorker.m"), 28);
  }

}

uint64_t sub_10018FC94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100190578(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setHighlighted:", *(unsigned __int8 *)(a1 + 40));
}

void sub_100190584(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, a2);
    v3 = v4;
  }

}

void sub_100190940(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10019095C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  _QWORD v6[4];
  id v7;
  void *v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend(WeakRetained, "shouldHandleTapIfPossible"))
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_100190A08;
      v6[3] = &unk_1008E7338;
      v7 = v3;
      v8 = v5;
      objc_msgSend(v5, "handleTapWithCompletion:", v6);

    }
    else if (v3)
    {
      objc_msgSend(v3, "setUserInteractionEnabled:", 1);
    }
  }

}

id sub_100190A08(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  if (v2)
    objc_msgSend(v2, "setUserInteractionEnabled:", 1);
  return _objc_msgSend(*(id *)(a1 + 40), "setHighlighted:completion:", 0, 0);
}

void sub_100190A40(uint64_t a1, int a2)
{
  void *v3;
  _QWORD v4[4];
  id v5;
  id v6;

  if (a2)
  {
    v3 = *(void **)(a1 + 32);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100190AE8;
    v4[3] = &unk_1008E91D8;
    v6 = *(id *)(a1 + 48);
    v5 = *(id *)(a1 + 40);
    objc_msgSend(v3, "animateCoverPressed:completion:", 0, v4);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "setUserInteractionEnabled:", 1);
  }
}

uint64_t sub_100190AE8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100190CEC(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  v6 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "backgroundConfigurationForState:isInEditMode:", v5, objc_msgSend(v6, "isInEditMode")));

  objc_msgSend(v6, "setBackgroundConfiguration:", v7);
}

void sub_10019117C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void (**v4)(_QWORD);
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_checkTimeoutForOngoingMigrationAttempt");
  v4 = (void (**)(_QWORD))objc_retainBlock(v3);

  if (v4)
    v4[2](v4);

}

void sub_1001912C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint8_t v12[16];

  v5 = a3;
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v5);

  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_resume(v8);

  v10 = BKLibraryBookImportLog(v9);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "makeAllUbiquitousBooksLocalWithCompletion end (completion called and migration queue resumed)", v12, 2u);
  }

}

void sub_100191384(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void (**v10)(id, _QWORD, void *);
  void *v11;
  _QWORD v12[5];
  id v13;
  uint8_t buf[16];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_suspend(v2);

  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "makeAllUbiquitousBooksLocalWithCompletion begin", buf, 2u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v7 = objc_msgSend(v6, "isICloudDriveEnabled");

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOperationsQueue"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001914D0;
    v12[3] = &unk_1008E7680;
    v9 = *(void **)(a1 + 40);
    v12[4] = *(_QWORD *)(a1 + 32);
    v13 = v9;
    objc_msgSend(v8, "addOperationWithBlock:", v12);

  }
  else
  {
    v10 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 40));
    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_generateUbiquityNotEnabledError"));
      v10[2](v10, 0, v11);

    }
  }
}

void sub_1001914D0(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousBooksPlistHost"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100191558;
  v4[3] = &unk_1008E9D38;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "fetchAllUbiquitousBooksWithCompletion:", v4);

}

void sub_100191558(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[5];
  id v8;
  id v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityEligibleBooksProvider"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100191608;
  v7[3] = &unk_1008E80F8;
  v5 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v3;
  v9 = v5;
  v6 = v3;
  objc_msgSend(v4, "makeBooksLocal:completion:", v6, v7);

}

void sub_100191608(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  id v11;

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOperationsQueue"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001916D0;
  v10[3] = &unk_1008E7338;
  v7 = *(void **)(a1 + 40);
  v10[4] = *(_QWORD *)(a1 + 32);
  v11 = v7;
  objc_msgSend(v6, "addOperationWithBlock:", v10);

  v8 = objc_retainBlock(*(id *)(a1 + 48));
  v9 = v8;
  if (v8)
    (*((void (**)(id, uint64_t, id))v8 + 2))(v8, a2, v5);

}

id sub_1001916D0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "boq_removeQuotaCompensationForAssets:", *(_QWORD *)(a1 + 40));
}

void sub_100191780(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001917F0;
  v2[3] = &unk_1008ECD60;
  v1 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = v1;
  objc_msgSend(v3, "_makeAllEligibleLocalBooksUbiquitousWithCompletion:", v2);

}

void sub_1001917F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  objc_msgSend(*(id *)(a1 + 32), "_leaveOngoingMigrateAllAttempt");
  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_100191938(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint8_t v12[16];

  v5 = a3;
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v5);

  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_resume(v8);

  v10 = BKLibraryBookImportLog(v9);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "makeAllEligibleLocalBooksUbiquitousWithCompletion end (completion called and migration queue resumed)", v12, 2u);
  }

}

void sub_1001919F8(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void (**v10)(id, _QWORD, void *);
  void *v11;
  _QWORD v12[5];
  id v13;
  uint8_t buf[16];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_suspend(v2);

  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "makeAllEligibleLocalBooksUbiquitousWithCompletion begin", buf, 2u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  if (objc_msgSend(v6, "isICloudDriveEnabled"))
  {
    v7 = objc_msgSend(*(id *)(a1 + 32), "initialMetadataQueryWasHandled");

    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOperationsQueue"));
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_100191B54;
      v12[3] = &unk_1008E7680;
      v9 = *(void **)(a1 + 40);
      v12[4] = *(_QWORD *)(a1 + 32);
      v13 = v9;
      objc_msgSend(v8, "addOperationWithBlock:", v12);

      return;
    }
  }
  else
  {

  }
  v10 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_generateUbiquityNotEnabledError"));
    v10[2](v10, 0, v11);

  }
}

void sub_100191B54(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityEligibleBooksProvider"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100191BDC;
  v4[3] = &unk_1008E9D38;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "fetchAllLocalBooksEligibleToBeMadeUbiquitousWithCompletion:", v4);

}

void sub_100191BDC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOperationsQueue"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100191CD4;
    v10[3] = &unk_1008E8898;
    v10[4] = *(_QWORD *)(a1 + 32);
    v11 = v5;
    v12 = *(id *)(a1 + 40);
    objc_msgSend(v7, "addOperationWithBlock:", v10);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 40));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD, id))v8 + 2))(v8, 0, v6);

  }
}

void sub_100191CD4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "boq_addPendingUploadQuotaCompensationForAssets:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousBooksPlistHost"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100191D70;
  v4[3] = &unk_1008EA1D0;
  v3 = *(_QWORD *)(a1 + 40);
  v5 = *(id *)(a1 + 48);
  objc_msgSend(v2, "makeBooksUbiquitous:completion:", v3, v4);

}

void sub_100191D70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;

  v6 = a3;
  v4 = objc_retainBlock(*(id *)(a1 + 32));
  v5 = v4;
  if (v4)
    (*((void (**)(id, uint64_t, id))v4 + 2))(v4, 1, v6);

}

void sub_100191E6C(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100191EDC;
  v2[3] = &unk_1008E7680;
  v1 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = v1;
  objc_msgSend(v3, "_migrateBooksToUbiquityIfNeededWithCompletion:", v2);

}

void sub_100191EDC(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_leaveOngoingMigrateAllAttempt");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_100192048(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  id v33;
  uint8_t buf[16];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v6, "count"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", objc_msgSend(v5, "count")));
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v33 = v5;
    v8 = v5;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v40;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(_QWORD *)v40 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)i);
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "url"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "assetID"));
          objc_msgSend(v7, "setObject:forKeyedSubscript:", v14, v15);

        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
      }
      while (v10);
    }

    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v16 = v6;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v36;
      do
      {
        v20 = 0;
        do
        {
          if (*(_QWORD *)v36 != v19)
            objc_enumerationMutation(v16);
          v21 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)v20);
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "assetID"));
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", v22));

          if (v23)
          {
            v24 = *(void **)(a1 + 32);
            v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "url"));
            objc_msgSend(v24, "p_updateCachedURLsFrom:to:", v23, v25);

          }
          else
          {
            BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKUbiquitousDocumentsController.m", 275, "-[BKUbiquitousDocumentsController _migrateBooksToUbiquityIfNeededWithCompletion:]_block_invoke", "oldURL", 0);
          }

          v20 = (char *)v20 + 1;
        }
        while (v18 != v20);
        v26 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
        v18 = v26;
      }
      while (v26);
    }

    v5 = v33;
  }
  v27 = objc_retainBlock(*(id *)(a1 + 40));
  v28 = v27;
  if (v27)
    (*((void (**)(id))v27 + 2))(v27);

  v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_resume(v29);

  v31 = BKLibraryBookImportLog(v30);
  v32 = objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "migrateBooksToUbiquityIfNeededWithCompletion end (completion called and migration queue resumed)", buf, 2u);
  }

}

void sub_10019234C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD v12[5];
  id v13;
  uint8_t buf[16];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "migrationQueue"));
  dispatch_suspend(v2);

  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "migrateBooksToUbiquityIfNeededWithCompletion begin", buf, 2u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  if (objc_msgSend(v6, "isICloudDriveEnabled"))
  {
    v7 = objc_msgSend(*(id *)(a1 + 32), "initialMetadataQueryWasHandled");

    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityEligibleBooksProvider"));
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_100192494;
      v12[3] = &unk_1008E9D38;
      v9 = *(void **)(a1 + 40);
      v12[4] = *(_QWORD *)(a1 + 32);
      v13 = v9;
      objc_msgSend(v8, "fetchAllLocalBooksEligibleToBeMadeUbiquitousWithCompletion:", v12);

      return;
    }
  }
  else
  {

  }
  v10 = objc_retainBlock(*(id *)(a1 + 40));
  v11 = v10;
  if (v10)
    (*((void (**)(id, _QWORD, _QWORD))v10 + 2))(v10, 0, 0);

}

void sub_100192494(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;
  uint8_t buf[4];
  id v15;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100192608;
    v11[3] = &unk_1008E8B20;
    v11[4] = *(_QWORD *)(a1 + 32);
    v12 = v5;
    v13 = *(id *)(a1 + 40);
    objc_msgSend(v7, "performBackgroundReadOnlyBlock:", v11);

  }
  else
  {
    v8 = BKLibraryBookImportLog(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "No assets eligible to be migrated error: (%@)", buf, 0xCu);
    }

    v10 = objc_retainBlock(*(id *)(a1 + 40));
    v7 = v10;
    if (v10)
      (*((void (**)(id, _QWORD, _QWORD))v10 + 2))(v10, 0, 0);
  }

}

void sub_100192608(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_sortedAssetsFromEligibleAssets:moc:", *(_QWORD *)(a1 + 40), a2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOperationsQueue"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001926C8;
  v7[3] = &unk_1008E8898;
  v5 = *(_QWORD *)(a1 + 32);
  v8 = v3;
  v9 = v5;
  v10 = *(id *)(a1 + 48);
  v6 = v3;
  objc_msgSend(v4, "addOperationWithBlock:", v7);

}

void sub_1001926C8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint8_t buf[4];
  void *v11;

  v2 = BKLibraryBookImportLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("assetID")));
    *(_DWORD *)buf = 138412290;
    v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "fetching quota while migrating assetIDs [%@]", buf, 0xCu);

  }
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001927F4;
  v7[3] = &unk_1008EC238;
  v9 = *(id *)(a1 + 48);
  v8 = *(id *)(a1 + 32);
  objc_msgSend(v5, "boq_migrateBooksThatWillFitToUbiquityAfterQuotaFetch:completion:", v6, v7);

}

void sub_1001927F4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, _QWORD, id))v3 + 2))(v3, *(_QWORD *)(a1 + 32), v5);

}

void sub_100192A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100192A34(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "al_addAssetIDsForOngoingMigrationAttempt:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

void sub_100192A4C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  __int128 v4;
  _QWORD v5[5];
  __int128 v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100192AD0;
  v5[3] = &unk_1008ED8B0;
  v5[4] = v1;
  v4 = *(_OWORD *)(a1 + 48);
  v3 = (id)v4;
  v6 = v4;
  objc_msgSend(v1, "_migrateBookToUbiquity:completion:", v2, v5);

}

void sub_100192AD0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "_removeAssetIDsForOngoingMigrationAttempt:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);

}

void sub_100192C6C(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint8_t v16[16];

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = a1[4];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "url"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "url"));
    objc_msgSend(v7, "p_updateCachedURLsFrom:to:", v8, v9);

  }
  v10 = objc_retainBlock(a1[6]);
  v11 = v10;
  if (v10)
    (*((void (**)(id, id, id))v10 + 2))(v10, v5, v6);

  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "migrationQueue"));
  dispatch_resume(v12);

  v14 = BKLibraryBookImportLog(v13);
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: migrateBookToUbiquity complete.  Migration queue resumed.", v16, 2u);
  }

}

void sub_100192D7C(id *a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  void *v15;
  _QWORD v16[5];
  id v17;
  id v18;
  uint8_t buf[4];
  id v20;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "migrationQueue"));
  dispatch_suspend(v2);

  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = a1[5];
    *(_DWORD *)buf = 138412290;
    v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: migrateBookToUbiquity: %@", buf, 0xCu);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ubiquityStatusMonitor"));
  v8 = objc_msgSend(v7, "isICloudDriveEnabled");

  if (v8)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ubiquityEligibleBooksProvider"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetID"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_100192F64;
    v16[3] = &unk_1008E9998;
    v16[4] = a1[4];
    v18 = a1[6];
    v17 = a1[5];
    objc_msgSend(v10, "fetchLocalAssetWithID:completion:", v11, v16);

  }
  else
  {
    v12 = BKLibraryBookImportLog(v9);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: iCloud Drive not enabled, not importing.", buf, 2u);
    }

    v14 = objc_retainBlock(a1[6]);
    v15 = v14;
    if (v14)
      (*((void (**)(id, _QWORD, _QWORD))v14 + 2))(v14, 0, 0);

  }
}

void sub_100192F64(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ubiquityEligibleBooksProvider")),
        v9 = objc_msgSend(v8, "isEligibleLocalBookToBeMadeUbiquitous:", v5),
        v8,
        v9))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "bookOperationsQueue"));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100193174;
    v18[3] = &unk_1008E8898;
    v18[4] = a1[4];
    v19 = v5;
    v20 = a1[6];
    objc_msgSend(v10, "addOperationWithBlock:", v18);

  }
  else
  {
    v11 = BKLibraryBookImportLog(v6);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "url"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetID"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "dataSourceIdentifier"));
      *(_DWORD *)buf = 141559042;
      v22 = 1752392040;
      v23 = 2112;
      v24 = v13;
      v25 = 2160;
      v26 = 1752392040;
      v27 = 2112;
      v28 = v14;
      v29 = 2114;
      v30 = v15;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: Asset not eligible to be migrated. url(%{mask.hash}@), assetID(%{mask.hash}@) dataSourceIdentifier(%{public}@)", buf, 0x34u);

    }
    v16 = objc_retainBlock(a1[6]);
    v17 = v16;
    if (v16)
      (*((void (**)(id, _QWORD, _QWORD))v16 + 2))(v16, 0, 0);

  }
}

void sub_100193174(id *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD v18[4];
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  _BYTE location[12];
  __int16 v29;
  void *v30;

  if (objc_msgSend(a1[4], "hasEverReceivedUbiquityQuota")
    && (v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "booksThatEncounteredUploadError")),
        v3 = objc_msgSend(v2, "count"),
        v2,
        !v3)
    || (v4 = objc_msgSend(a1[4], "pendingQuotaFetch"), (v4 & 1) != 0))
  {
    v5 = objc_msgSend(a1[4], "pendingQuotaFetch");
    if ((_DWORD)v5)
    {
      objc_initWeak((id *)location, a1[4]);
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "pendingQuotaFetchMigrationBlocks"));
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_10019355C;
      v20[3] = &unk_1008EC7B0;
      v21 = a1[5];
      objc_copyWeak(&v23, (id *)location);
      v22 = a1[6];
      v7 = objc_retainBlock(v20);
      objc_msgSend(v6, "addObject:", v7);

      objc_destroyWeak(&v23);
      objc_destroyWeak((id *)location);
    }
    else
    {
      v13 = BKLibraryBookImportLog(v5);
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetID"));
        *(_DWORD *)location = 141558274;
        *(_QWORD *)&location[4] = 1752392040;
        v29 = 2112;
        v30 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "don't need to fetch quota while migrating assetID (%{mask.hash}@)", location, 0x16u);

      }
      v16 = a1[4];
      v26 = a1[5];
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v26, 1));
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100193720;
      v18[3] = &unk_1008EA1D0;
      v19 = a1[6];
      objc_msgSend(v16, "boq_migrateBooksThatWillFitToUbiquity:completion:", v17, v18);

    }
  }
  else
  {
    v8 = BKLibraryBookImportLog(v4);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetID"));
      *(_DWORD *)location = 141558274;
      *(_QWORD *)&location[4] = 1752392040;
      v29 = 2112;
      v30 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "fetching quota while migrating assetID (%{mask.hash}@)", location, 0x16u);

    }
    v11 = a1[4];
    v27 = a1[5];
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v27, 1));
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1001934F0;
    v24[3] = &unk_1008EA1D0;
    v25 = a1[6];
    objc_msgSend(v11, "boq_migrateBooksThatWillFitToUbiquityAfterQuotaFetch:completion:", v12, v24);

  }
}

void sub_1001934C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1001934F0(uint64_t a1, void *a2)
{
  void (**v3)(id, void *, _QWORD);
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
    v3[2](v3, v4, 0);

  }
}

void sub_10019355C(id *a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  id WeakRetained;
  void *v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  void *v13;

  v2 = BKLibraryBookImportLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "assetID"));
    *(_DWORD *)buf = 141558274;
    v11 = 1752392040;
    v12 = 2112;
    v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "pending quota fetch, will migrate assetID (%{mask.hash}@) after received", buf, 0x16u);

  }
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v9 = a1[4];
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001936B4;
  v7[3] = &unk_1008EA1D0;
  v8 = a1[5];
  objc_msgSend(WeakRetained, "boq_migrateBooksThatWillFitToUbiquity:completion:", v6, v7);

}

void sub_1001936B4(uint64_t a1, void *a2)
{
  void (**v3)(id, void *, _QWORD);
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
    v3[2](v3, v4, 0);

  }
}

void sub_100193720(uint64_t a1, void *a2)
{
  void (**v3)(id, void *, _QWORD);
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
    v3[2](v3, v4, 0);

  }
}

void sub_100193884(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1001938A8(id *a1, uint64_t a2, void *a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  void *v12;
  uint8_t v13[8];
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;
  uint64_t v18;

  v5 = a3;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v7 = WeakRetained;
  if (WeakRetained)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bookOperationsQueue"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1001939FC;
    v14[3] = &unk_1008ED928;
    v14[4] = v7;
    v18 = a2;
    v15 = v5;
    v16 = a1[4];
    v17 = a1[5];
    objc_msgSend(v8, "addOperationWithBlock:", v14);

  }
  else
  {
    v9 = BKLibraryBookImportLog(0);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController deallocated mid migration", v13, 2u);
    }

    v11 = objc_retainBlock(a1[5]);
    v12 = v11;
    if (v11)
      (*((void (**)(id, _QWORD, _QWORD))v11 + 2))(v11, 0, 0);

  }
}

void sub_1001939FC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  objc_msgSend(*(id *)(a1 + 32), "boq_handleSpaceAvailableReceivedWithFreeBytes:serverError:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "boq_migrateBooksThatWillFitToUbiquity:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingQuotaFetchMigrationBlocks", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6) + 16))();
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingQuotaFetchMigrationBlocks"));
  objc_msgSend(v7, "removeAllObjects");

}

void sub_1001940B8(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityEligibleBooksProvider"));
  objc_msgSend(v3, "didMakeLocalBooksUbiquitous:", v6);

  v4 = objc_retainBlock(*(id *)(a1 + 40));
  v5 = v4;
  if (v4)
    (*((void (**)(id, id, _QWORD))v4 + 2))(v4, v6, 0);

}

void sub_1001944C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_100194508(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  BKUbiquitousDocumentsOngoingMigrationObserver *v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;

  v3 = a2;
  v4 = BKLibraryBookImportLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 141558274;
    v9 = 1752392040;
    v10 = 2112;
    v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - Adding observers for %{mask.hash}@", (uint8_t *)&v8, 0x16u);
  }

  v6 = -[BKUbiquitousDocumentsOngoingMigrationObserver initWithAssetIDs:notify:]([BKUbiquitousDocumentsOngoingMigrationObserver alloc], "initWithAssetIDs:notify:", v3, *(_QWORD *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptObservers"));
  objc_msgSend(v7, "addObject:", v6);

}

void sub_10019460C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
  v3 = objc_msgSend(v2, "intersectsSet:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
  }
  else if ((uint64_t)objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts") >= 1)
  {
    v4 = *(void **)(a1 + 48);
    if (!v4)
      v4 = *(void **)(a1 + 56);
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), v4);
  }
}

void sub_1001946C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  os_unfair_lock_s *v10;
  void *v11;
  os_unfair_lock_s *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  __int128 v18;
  _QWORD v19[5];
  id v20;
  id v21;
  __int128 v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  uint64_t v26;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityEligibleBooksProvider")),
        v9 = objc_msgSend(v8, "isEligibleLocalBookToBeMadeUbiquitous:", v5),
        v8,
        v9))
  {
    v10 = *(os_unfair_lock_s **)(a1 + 32);
    v11 = *(void **)(a1 + 40);
    v12 = v10 + 2;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1001948A8;
    v19[3] = &unk_1008ED9E8;
    v19[4] = v10;
    v20 = v11;
    v21 = *(id *)(a1 + 48);
    v18 = *(_OWORD *)(a1 + 56);
    v13 = (id)v18;
    v22 = v18;
    os_unfair_lock_lock(v12);
    sub_1001948A8((uint64_t)v19);
    os_unfair_lock_unlock(v12);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptTimer"));
      objc_msgSend(v14, "signalWithCompletion:", &stru_1008EDA08);

    }
  }
  else
  {
    v15 = BKLibraryBookImportLog(v6);
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 141558274;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - No wait needed on 'migrate all' for %{mask.hash}@ because asset is not eligible", buf, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 32), "_notifyOngoingMigrationAttemptCompletion:hasPendingChange:", *(_QWORD *)(a1 + 56), 0);
  }

}

id sub_1001948A8(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
  v3 = objc_msgSend(v2, "intersectsSet:", *(_QWORD *)(a1 + 40));

  if (v3)
    goto LABEL_4;
  v4 = (uint64_t)objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts");
  if (v4 >= 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "al_addAssetIDsForOngoingMigrationAttempt:", *(_QWORD *)(a1 + 40));
LABEL_4:
    result = (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
    return result;
  }
  v6 = BKLibraryBookImportLog(v4);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 40);
    v9 = 141558274;
    v10 = 1752392040;
    v11 = 2112;
    v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - No wait needed on 'migrate all' for %{mask.hash}@ because 'migrate all' has already finished", (uint8_t *)&v9, 0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "_notifyOngoingMigrationAttemptCompletion:hasPendingChange:", *(_QWORD *)(a1 + 56), 0);
}

void sub_100194D98(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100194DCC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
  v12 = objc_msgSend(v2, "copy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
  objc_msgSend(v3, "minusSet:", *(_QWORD *)(a1 + 40));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptObservers"));
  v5 = (char *)objc_msgSend(v4, "count");

  if ((uint64_t)(v5 - 1) >= 0)
  {
    do
    {
      --v5;
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptObservers"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", v5));

      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetIDs"));
      if (objc_msgSend(v8, "intersectsSet:", v12))
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
        v10 = objc_msgSend(v8, "intersectsSet:", v9);

        if ((v10 & 1) == 0)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptObservers"));
          objc_msgSend(v11, "removeObjectAtIndex:", v5);

          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v7);
        }
      }

    }
    while ((uint64_t)v5 > 0);
  }

}

id sub_100194FE4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setOngoingMigrationAttemptOutstandingMigrateAllAttempts:", (char *)objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts") + 1);
}

void sub_100195218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019523C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  if ((uint64_t)objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts") >= 1)
    objc_msgSend(*(id *)(a1 + 32), "setOngoingMigrationAttemptOutstandingMigrateAllAttempts:", (char *)objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts") - 1);
  if (!objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts"))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
    v2 = objc_msgSend(v5, "copy");
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
}

void sub_1001954A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_1001954E0(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  BOOL v6;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptOutstandingMigrateAllAttempts");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ongoingMigrationAttemptAssetIDs"));
  v3 = objc_msgSend(v2, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = *(uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) > 0
    || objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count") != 0;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v6;
  return objc_msgSend(*(id *)(a1 + 32), "setOngoingMigrationAttemptOutstandingMigrateAllAttempts:", 0);
}

void sub_10019563C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_100195768(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setInitialMetadataQueryWasHandled:", 1);
}

void sub_10019580C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;

  v2 = BKLibraryBookImportLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("assetID")));
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "booksWithUploadError: %@", (uint8_t *)&v6, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "booksThatEncounteredUploadError"));
  objc_msgSend(v5, "addObjectsFromArray:", *(_QWORD *)(a1 + 32));

}

id sub_100195984(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = BKLibraryBookImportLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "uploadedBooks: %@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "boq_addUploadedQuotaCompensationForAssetIDs:", *(_QWORD *)(a1 + 32));
}

void sub_1001977F4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  uint8_t buf[4];
  void *v17;

  v3 = a2;
  v4 = objc_msgSend(v3, "count");
  if (v4)
  {
    v5 = v4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100197964;
    v12[3] = &unk_1008EDAA0;
    v6 = *(void **)(a1 + 32);
    v13 = *(id *)(a1 + 40);
    v15 = v5;
    v14 = *(id *)(a1 + 48);
    objc_msgSend(v6, "fetchAssetsWithIDs:completion:", v3, v12);

    v7 = v13;
  }
  else
  {
    v8 = BKLibraryDataSourceMediaLibraryLog(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 40), "time");
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
      *(_DWORD *)buf = 138412290;
      v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "MRP: %@ for 0 media library books", buf, 0xCu);

    }
    v11 = objc_retainBlock(*(id *)(a1 + 48));
    v7 = v11;
    if (v11)
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }

}

void sub_100197964(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  void *v28;
  _BYTE v29[128];

  v5 = a2;
  v6 = a3;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v7)
  {
    v8 = v7;
    v9 = 0;
    v10 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v5);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i), "purchaseDate"));
        v13 = v12;
        if (!v9 || objc_msgSend(v12, "compare:", v9) == (id)1)
        {
          v14 = v13;

          v9 = v14;
        }

      }
      v8 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v8);
  }
  else
  {
    v9 = 0;
  }
  v15 = BKLibraryDataSourceMediaLibraryLog(0);
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(*(id *)(a1 + 32), "time");
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48)));
    *(_DWORD *)buf = 138412546;
    v26 = v17;
    v27 = 2112;
    v28 = v18;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "MRP: %@ for %@ media library books", buf, 0x16u);

  }
  v19 = objc_retainBlock(*(id *)(a1 + 40));
  v20 = v19;
  if (v19)
    (*((void (**)(id, void *))v19 + 2))(v19, v9);

}

void sub_100197CC8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "_addAssetIDsToCacheManager:", v8);
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);

}

void sub_1001982E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  NSObject *v24;
  id v25;
  void *v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  void *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  id v45;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(*(id *)(a1 + 32), "isSupplementalContent"))
  {
    v7 = objc_opt_class(BKLibrarySupplementalAsset);
    v8 = BUDynamicCast(v7, v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "storePlaylistID"));
    v11 = objc_opt_class(BKMediaLibraryAsset);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "parentAsset"));
    v13 = BUDynamicCast(v11, v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

    if (v14)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "storeRedownloadParameters"));
    }
    else
    {
      v19 = BKLibraryDataSourceMediaLibraryLog(v15);
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        sub_1006A3838((uint64_t *)(a1 + 32), (uint64_t)v6, v20);

      v16 = 0;
    }

  }
  else
  {
    v17 = objc_opt_class(BKMediaLibraryAsset);
    v18 = BUDynamicCast(v17, v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v18);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "storeID"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "storeRedownloadParameters"));
  }

  if (v10)
    v22 = v16 == 0;
  else
    v22 = 1;
  if (v22)
  {
    v23 = BKLibraryDataSourceMediaLibraryLog(v21);
    v24 = objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      v29 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      v39 = v29;
      v40 = 2112;
      v41 = v10;
      v42 = 2112;
      v43 = v16;
      v44 = 2112;
      v45 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Could not resolve library asset %@. StoreID: %@. DownloadParams: %@. Error: %@", buf, 0x2Au);
    }

    v25 = objc_retainBlock(*(id *)(a1 + 56));
    v27 = v25;
    if (v25)
      (*((void (**)(id, _QWORD, uint64_t, id))v25 + 2))(v25, 0, 1, v6);
  }
  else
  {
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_1001985FC;
    v30[3] = &unk_1008EDAF0;
    v31 = v16;
    v32 = v10;
    v33 = *(id *)(a1 + 32);
    v34 = *(id *)(a1 + 48);
    v35 = v26;
    v37 = *(id *)(a1 + 56);
    v36 = v5;
    v27 = v26;
    v28 = objc_retainBlock(v30);
    ((void (*)(void))v28[2])();

  }
}

void sub_1001985FC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 40), "longLongValue")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v2, v3));

  if (objc_msgSend(*(id *)(a1 + 48), "isSupplementalContent"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "storeID"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "longLongValue")));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v6));
    objc_msgSend(v4, "setStoreIdentifiersToDownload:", v7);

    objc_msgSend(v4, "setSupplementalContent:", 1);
  }
  objc_msgSend(v4, "setAudiobook:", 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "userInitiated"));

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "userInitiated"));
    objc_msgSend(v4, "setUserInitiated:", objc_msgSend(v9, "BOOLValue"));

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "windowManager"));

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1001987F8;
  v13[3] = &unk_1008EDAC8;
  v14 = *(id *)(a1 + 64);
  v16 = *(id *)(a1 + 80);
  v15 = *(id *)(a1 + 72);
  objc_msgSend(v12, "purchaseWithRequest:uiManager:completion:", v4, v11, v13);

}

void sub_1001987F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  id v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;

  v5 = a4;
  v6 = BKLibraryDataSourceMediaLibraryLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v11 = 138412546;
    v12 = v8;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@ Purchase completed. error:%@", (uint8_t *)&v11, 0x16u);
  }

  v9 = objc_retainBlock(*(id *)(a1 + 48));
  v10 = v9;
  if (v9)
    (*((void (**)(id, _QWORD, uint64_t, id))v9 + 2))(v9, *(_QWORD *)(a1 + 40), 1, v5);

}

void sub_100198B28(id a1, BOOL a2)
{
  _BOOL4 v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint8_t v6[16];

  v2 = a2;
  v3 = BKLibraryDataSourceMediaLibraryLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully updated jalisco media library from purchase success", v6, 2u);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1006A38EC();
  }

}

void sub_100198BF0(id a1, BOOL a2)
{
  _BOOL4 v2;
  uint64_t v3;
  NSObject *v4;
  _BOOL4 v5;

  v2 = a2;
  v3 = BKLibraryDataSourceMediaLibraryLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);
  if (v2)
  {
    if (v5)
      sub_1006A3918();
  }
  else if (v5)
  {
    sub_1006A3944();
  }

}

void sub_100198E74(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v5 = a2;
  v6 = objc_alloc_init((Class)NSMutableSet);
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v17;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v7);
        v12 = BUStoreIdStringFromObject(*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v11));
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        objc_msgSend(v6, "addObject:", v13, (_QWORD)v16);

        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v9);
  }

  v14 = objc_retainBlock(*(id *)(a1 + 32));
  v15 = v14;
  if (v14)
    (*((void (**)(id, id, uint64_t))v14 + 2))(v14, v6, a3);

}

void sub_100199064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  _DWORD v8[2];

  v4 = BKLibraryDataSourceMediaLibraryLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "updatePurchaseItemsWithCompletion - Finished update Jalisco, success = %d", (uint8_t *)v8, 8u);
  }

  v6 = objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t))v6 + 2))(v6, a2);

}

void sub_1001991AC(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  char isKindOfClass;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v1 = a1;
  off_1009F5188();
  v2 = objc_opt_class(_UIPlatterView);
  if ((objc_opt_isKindOfClass(v1, v2) & 1) != 0)
  {
    v3 = v1;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sourceView"));
    v5 = objc_opt_class(BKLibraryBookshelfGridBookCell);
    isKindOfClass = objc_opt_isKindOfClass(v4, v5);

    if ((isKindOfClass & 1) != 0 && byte_1009F5190 == 1)
    {
      v21 = v1;
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "subviews"));
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v23;
        do
        {
          for (i = 0; i != v9; i = (char *)i + 1)
          {
            if (*(_QWORD *)v23 != v10)
              objc_enumerationMutation(v7);
            v12 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "maskView"));
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "layer"));

            if (v14)
            {
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "maskView"));
              v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "layer"));

              objc_msgSend(v12, "setMaskView:", 0);
              v17 = (void *)objc_claimAutoreleasedReturnValue(+[CALayer layer](CALayer, "layer"));
              v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layer"));
              objc_msgSend(v18, "bounds");
              objc_msgSend(v17, "setFrame:");

              v19 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 1.0, 1.0)));
              objc_msgSend(v17, "setBackgroundColor:", objc_msgSend(v19, "CGColor"));

              objc_msgSend(v17, "addSublayer:", v16);
              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layer"));
              objc_msgSend(v20, "setMask:", v17);

            }
          }
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
        }
        while (v9);
      }

      v1 = v21;
    }

  }
}

void sub_100199420(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  char isKindOfClass;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];

  v1 = a1;
  off_1009F5198();
  v2 = objc_opt_class(_UIPlatterView);
  if ((objc_opt_isKindOfClass(v1, v2) & 1) != 0)
  {
    v3 = v1;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sourceView"));
    v5 = objc_opt_class(BKLibraryBookshelfGridBookCell);
    isKindOfClass = objc_opt_isKindOfClass(v4, v5);

    if ((isKindOfClass & 1) != 0 && byte_1009F5190 == 1)
    {
      v20 = v1;
      byte_1009F5190 = 0;
      +[CATransaction begin](CATransaction, "begin");
      v23 = 0u;
      v24 = 0u;
      v21 = 0u;
      v22 = 0u;
      v19 = v3;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "subviews"));
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v22;
        do
        {
          for (i = 0; i != v9; i = (char *)i + 1)
          {
            if (*(_QWORD *)v22 != v10)
              objc_enumerationMutation(v7);
            v12 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layer"));
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "mask"));

            if (v14)
            {
              v15 = (void *)objc_claimAutoreleasedReturnValue(+[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("backgroundColor")));
              v16 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 1.0, 0.0)));
              objc_msgSend(v15, "setToValue:", objc_msgSend(v16, "CGColor"));

              objc_msgSend(v15, "setFillMode:", kCAFillModeBoth);
              objc_msgSend(v15, "setRemovedOnCompletion:", 0);
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layer"));
              v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "mask"));
              objc_msgSend(v18, "addAnimation:forKey:", v15, CFSTR("fade"));

            }
          }
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        }
        while (v9);
      }

      +[CATransaction commit](CATransaction, "commit");
      v3 = v19;
      v1 = v20;
    }

  }
}

void sub_100199700(id a1)
{
  objc_class *v1;
  objc_method *InstanceMethod;
  objc_class *v3;
  objc_method *v4;

  v1 = (objc_class *)objc_opt_class(_UIPlatterView);
  InstanceMethod = class_getInstanceMethod(v1, "setSourceView:");
  off_1009F5188 = (uint64_t (*)(void))method_setImplementation(InstanceMethod, (IMP)sub_1001991AC);
  v3 = (objc_class *)objc_opt_class(_UIPlatterView);
  v4 = class_getInstanceMethod(v3, "didMoveToWindow");
  off_1009F5198 = (uint64_t (*)(void))method_setImplementation(v4, (IMP)sub_100199420);
}

void sub_10019A0E4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  id *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  v3 = a2;
  v4 = (uint64_t *)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "absoluteURL"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "standardizedURL"));
  v8 = *(void **)(a1 + 40);
  v7 = (id *)(a1 + 40);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "URL"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "absoluteURL"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "standardizedURL"));
  v12 = objc_msgSend(v6, "isEqual:", v11);

  if ((v12 & 1) == 0)
  {
    v14 = BCCurrentBookLog(v13);
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1006A3A30(v4, v7, v15);

  }
  v16 = BCCurrentBookLog(v13);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  v18 = v17;
  if (v3)
  {
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1006A39B0(v4, (uint64_t)v3, v18);
  }
  else if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    v19 = *v4;
    v20 = 138412290;
    v21 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "BKAssetPresentingFilePresenter Successful coordinated read [URL: %@]", (uint8_t *)&v20, 0xCu);
  }

}

uint64_t sub_10019A5A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10019A8CC(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 17) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 32) + 16) = 0;
  return result;
}

void sub_10019AC34(uint64_t a1, uint64_t a2)
{
  void *v3;
  _QWORD v4[4];
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "setTargetSceneController:", a2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10019ACB0;
  v4[3] = &unk_1008EDC18;
  v3 = *(void **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  objc_msgSend(v3, "requireTargetSceneController:", v4);

}

uint64_t sub_10019ACB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10019B020(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "saveStateClosing:", *(unsigned __int8 *)(a1 + 32));
}

void sub_10019B174(id a1, BKSceneControlling *a2, BOOL *a3)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BKSceneControlling bk_window](a2, "bk_window", a3));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));
  objc_msgSend(v3, "bc_analyticsSubtreeForceEndSession");

}

void sub_10019B1CC(id a1, BKSceneControlling *a2, BOOL *a3)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BKSceneControlling bk_window](a2, "bk_window", a3));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));
  objc_msgSend(v3, "bc_analyticsVisibilitySubtreeWillDisappear");

}

void sub_10019B224(id a1, BKSceneControlling *a2, BOOL *a3)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BKSceneControlling bk_window](a2, "bk_window", a3));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));
  objc_msgSend(v3, "bc_analyticsVisibilitySubtreeDidDisappear");

}

void sub_10019B924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v12 - 216), 8);
  objc_destroyWeak((id *)(v12 - 168));
  _Unwind_Resume(a1);
}

void sub_10019B974(uint64_t a1)
{
  NSMutableDictionary *v2;
  void *v3;
  id v4;
  id WeakRetained;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  uint8_t buf[4];
  uint64_t v14;

  v2 = objc_opt_new(NSMutableDictionary);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookPlayer sharedInstance](BKAudiobookPlayer, "sharedInstance"));
  objc_msgSend(v3, "setCurrentAudiobook:", 0);

  v4 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "newShowAssetTransaction");
  if (v4)
  {
    -[NSMutableDictionary setObject:forKeyedSubscript:](v2, "setObject:forKeyedSubscript:", v4, BCTransactionOptionsTransactionKey);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v2, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("BKAudiobookOptionsIsRetryKey"));
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v6 = BCSceneLog(WeakRetained);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Attempting automatic reopen of asset %@ following auth", buf, 0xCu);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bookFlowController"));
  v10 = *(void **)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10019BB2C;
  v11[3] = &unk_1008EDD00;
  v12 = v10;
  objc_msgSend(v9, "showAssetWithTransaction:assetID:location:options:completion:", v4, v12, 0, v2, v11);

}

void sub_10019BB2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;

  v4 = a3;
  v5 = BCSceneLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 138412546;
    v9 = v7;
    v10 = 2112;
    v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Finished automatic reopen of asset %@ following auth, error %@", (uint8_t *)&v8, 0x16u);
  }

}

void sub_10019BBF0(id a1)
{
  uint64_t v1;
  NSObject *v2;

  v1 = BCSceneLog(a1);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_1006A3AD8(v2);

}

void sub_10019BC30(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  uint8_t buf[4];
  void *v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accountID"));
  v3 = BCSceneLog(v2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v13 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Attempting to authorize/refetch keys for user %@", buf, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore bu_sharedAccountStore](ACAccountStore, "bu_sharedAccountStore"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_iTunesAccountWithUsername:", v2));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_DSID"));
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", v8));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10019BDB0;
  v10[3] = &unk_1008E9F90;
  v11 = *(id *)(a1 + 40);
  +[ft9cupR7u6OrU4m1pyhB Xj3eVHDeBoTD6fVn6fY8:completion:](ft9cupR7u6OrU4m1pyhB, "Xj3eVHDeBoTD6fVn6fY8:completion:", v9, v10);

}

void sub_10019BDB0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  _QWORD block[4];
  NSObject *v8;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = BCSceneLog(v3);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006A3B18((uint64_t)v4, v6);
  }
  else
  {
    v6 = objc_retainBlock(*(id *)(a1 + 32));
    if (v6)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*))v6[2].isa)(v6);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10019BE94;
        block[3] = &unk_1008E7818;
        v6 = v6;
        v8 = v6;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }
  }

}

uint64_t sub_10019BE94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10019BEA0(uint64_t a1, unsigned __int16 a2)
{
  void (**v3)(_QWORD);
  void *v4;
  void (**v5)(_QWORD);
  _QWORD v6[4];
  void (**v7)(_QWORD);
  _QWORD v8[4];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  _QWORD block[4];
  void (**v16)(_QWORD);

  if (a2 - 9 > 1)
  {
    v11 = 0;
    v12 = &v11;
    v13 = 0x2020000000;
    v14 = 0;
    v4 = *(void **)(a1 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10019C084;
    v8[3] = &unk_1008EDD70;
    v10 = &v11;
    v9 = *(id *)(a1 + 48);
    objc_msgSend(v4, "bu_enumerateErrorUsingBlock:", v8);
    if (!*((_BYTE *)v12 + 24))
    {
      v5 = (void (**)(_QWORD))objc_retainBlock(*(id *)(a1 + 48));
      if (v5)
      {
        if (+[NSThread isMainThread](NSThread, "isMainThread"))
        {
          v5[2](v5);
        }
        else
        {
          v6[0] = _NSConcreteStackBlock;
          v6[1] = 3221225472;
          v6[2] = sub_10019C184;
          v6[3] = &unk_1008E7818;
          v7 = v5;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

        }
      }

    }
    _Block_object_dispose(&v11, 8);
  }
  else
  {
    v3 = (void (**)(_QWORD))objc_retainBlock(*(id *)(a1 + 40));
    if (v3)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        v3[2](v3);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10019C078;
        block[3] = &unk_1008E7818;
        v16 = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

  }
}

void sub_10019C05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10019C078(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10019C084(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  void (**v8)(_QWORD);
  _QWORD block[4];
  void (**v10)(_QWORD);

  if (objc_msgSend(a2, "isEqual:", NSOSStatusErrorDomain)
    && +[THPFDContext isBagRefetchRequiredForStatus:](THPFDContext, "isBagRefetchRequiredForStatus:", a3))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    v8 = (void (**)(_QWORD))objc_retainBlock(*(id *)(a1 + 32));
    if (v8)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10019C178;
        block[3] = &unk_1008E7818;
        v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

    *a5 = 1;
  }
}

uint64_t sub_10019C178(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10019C184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10019C190(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  unsigned int v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  uint8_t buf[16];

  v2 = BCSceneLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "This was not a retry play session and the error appears to have been failed authorization.  Examining if we can refetch keys/reauthorize", buf, 2u);
  }

  v4 = objc_msgSend(*(id *)(a1 + 32), "contentType");
  if (v4 == 6)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else if ((unsigned __int16)(v4 - 9) > 1u)
  {
    if (+[BKAssetUtilities isAudiobookTrackContentType:](BKAssetUtilities, "isAudiobookTrackContentType:", objc_msgSend(*(id *)(a1 + 32), "contentType")))
    {
      v5 = *(void **)(a1 + 40);
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_10019C2AC;
      v6[3] = &unk_1008EDDC0;
      v7 = *(id *)(a1 + 64);
      objc_msgSend(v5, "bu_enumerateErrorUsingBlock:", v6);

    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
}

void sub_10019C2AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  void (**v8)(_QWORD);
  _QWORD block[4];
  void (**v10)(_QWORD);

  if (objc_msgSend(a2, "isEqual:", NSOSStatusErrorDomain)
    && +[THPFDContext isBagRefetchRequiredForStatus:](THPFDContext, "isBagRefetchRequiredForStatus:", a3))
  {
    v8 = (void (**)(_QWORD))objc_retainBlock(*(id *)(a1 + 32));
    if (v8)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10019C394;
        block[3] = &unk_1008E7818;
        v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

    *a5 = 1;
  }
}

uint64_t sub_10019C394(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10019C3A0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint8_t v14[16];

  v2 = BCSceneLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Can't open this asset due to failed authorization", v14, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("Couldn’t Play Audiobook"), &stru_10091C438, 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("This audiobook isn’t authorized to play on this device."), &stru_10091C438, 0));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v5, v7, 1));

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v10, 0, 0));

  objc_msgSend(v8, "addAction:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "bk_window"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIViewController jsa_topMostViewControllerForWindow:](UIViewController, "jsa_topMostViewControllerForWindow:", v12));

  objc_msgSend(v13, "presentViewController:animated:completion:", v8, 1, 0);
}

void sub_10019C574(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id obj;

  obj = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v4 = obj;
  if (!obj)
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "primarySceneController"));
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v4);
  if (!obj)

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "domain"));
  if ((objc_msgSend(v5, "isEqual:", BKAudiobookPlayerErrorDomain) & 1) != 0)
  {
    v6 = objc_msgSend(*(id *)(a1 + 32), "code");

    if (!*(_BYTE *)(a1 + 72) && v6 == (id)2)
    {
      v7 = *(_QWORD *)(a1 + 40);
LABEL_12:
      (*(void (**)(void))(v7 + 16))();
      goto LABEL_13;
    }
    if (v6 == (id)2)
    {
      v7 = *(_QWORD *)(a1 + 48);
      goto LABEL_12;
    }
  }
  else
  {

  }
LABEL_13:

}

void sub_10019C8B0(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  objc_msgSend(*(id *)(a1 + 32), "setWelcomePresenter:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingWelcomePresenterDismissCompletionBlocks"));
  v3 = objc_msgSend(v2, "copy");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingWelcomePresenterDismissCompletionBlocks"));
  objc_msgSend(v4, "removeAllObjects");

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        v10 = objc_retainBlock(*(id *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v9));
        v11 = v10;
        if (v10)
          (*((void (**)(id))v10 + 2))(v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v7);
  }

}

void sub_10019C9F4(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10019CA80;
  v3[3] = &unk_1008E7680;
  v4 = v2;
  v5 = *(id *)(a1 + 40);
  objc_msgSend(v4, "dismissWelcomeViewControllerAnimated:completion:", 0, v3);

}

id sub_10019CA80(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "welcomePresenterFinishOngoingModalTransitionAnimations:", *(_QWORD *)(a1 + 40));
}

id sub_10019CA8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setWelcomePresenterIfNoneExists:shouldPresent:");
}

id sub_10019CB08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_showMainViewControllerOrWelcomeScreenNow");
}

void sub_10019CB10(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "initialUserTransaction"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
  objc_msgSend(v4, "setTargetSceneController:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookPresenter"));
  objc_msgSend(v3, "requestOpenLastKnownBookWithTransaction:", v4);

  objc_msgSend(*(id *)(a1 + 32), "setInitialUserTransaction:", 0);
}

uint64_t sub_10019FA5C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10019FA6C(uint64_t a1)
{

}

void sub_10019FBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10019FBD0(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 32), "indexOfObjectIdenticalTo:", a1[5]);
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
    return objc_msgSend(*(id *)(a1[4] + 32), "removeObjectAtIndex:", result);
  }
  return result;
}

id sub_10019FC3C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_launchBlockTimedout:", *(_QWORD *)(a1 + 40));
}

void sub_10019FF80(uint64_t a1)
{
  void *v2;
  void (**v3)(_QWORD, _QWORD);
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  if (!objc_msgSend(*(id *)(a1 + 32), "downloadQueueGeneration"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
    v10 = 0u;
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
    v3 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "downloads", 0));
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v11;
LABEL_4:
      v7 = 0;
      while (1)
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v7), "downloadPhase")));
        v9 = objc_msgSend(&off_10092F6A0, "containsObject:", v8);

        if (!v9)
          break;
        if (v5 == (id)++v7)
        {
          v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
          if (v5)
            goto LABEL_4;
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:

      objc_msgSend(*(id *)(a1 + 32), "setDownloadQueueGeneration:", (char *)objc_msgSend(*(id *)(a1 + 32), "downloadQueueGeneration") + 1);
      v3 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "generationChangeHandler"));
      if (v3)
        ((void (**)(_QWORD, id))v3)[2](v3, objc_msgSend(*(id *)(a1 + 32), "downloadQueueGeneration"));
    }

  }
}

void sub_1001A16F8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;
  void *v23;
  _BYTE v24[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadingAssets", 0));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allValues"));

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_updateDownloadingAssetAndCreateDownloadStatuses:from:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v8), 0));
        if (objc_msgSend(v9, "count"))
          objc_msgSend(v2, "addObjectsFromArray:", v9);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
    }
    while (v6);
  }

  v22 = BKLibraryDownloadStatusKey;
  v23 = v2;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1));
  v13 = BCBookDownloadLog(v10, v11, v12);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v21 = v10;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "download progress notification %{public}@", buf, 0xCu);
  }

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v15, "postNotificationName:object:userInfo:", BKLibraryDownloadStatusNotification, *(_QWORD *)(a1 + 32), v10);

}

void sub_1001A1A0C(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = *(void **)(a1 + 32);
  v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001A1A7C;
  v3[3] = &unk_1008EDFD8;
  v4 = v1;
  objc_msgSend(v2, "_performBlockOnAllAssetsForAssetID:block:", v4, v3);

}

void sub_1001A1A7C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
  if (objc_msgSend(v4, "length"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
    objc_msgSend(v6, "pauseDownloadWithID:withCompletion:", v4, 0);

    v9 = BCBookDownloadLog(v7, v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
      v19 = 138543362;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "download paused %{public}@", (uint8_t *)&v19, 0xCu);

    }
  }
  else
  {
    v12 = BCBookDownloadLog(0, v5);
    v10 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A3D50(a1, v10, v13, v14, v15, v16, v17, v18);
  }

}

void sub_1001A1CC0(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = *(void **)(a1 + 32);
  v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001A1D30;
  v3[3] = &unk_1008EDFD8;
  v4 = v1;
  objc_msgSend(v2, "_performBlockOnAllAssetsForAssetID:block:", v4, v3);

}

void sub_1001A1D30(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
  if (objc_msgSend(v4, "length"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
    objc_msgSend(v6, "resumeDownloadWithID:withCompletion:", v4, 0);

    v9 = BCBookDownloadLog(v7, v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
      v19 = 138543362;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "download resumed %{public}@", (uint8_t *)&v19, 0xCu);

    }
  }
  else
  {
    v12 = BCBookDownloadLog(0, v5);
    v10 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A3DB8(a1, v10, v13, v14, v15, v16, v17, v18);
  }

}

void sub_1001A1F74(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = *(void **)(a1 + 32);
  v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001A1FE4;
  v3[3] = &unk_1008EDFD8;
  v4 = v1;
  objc_msgSend(v2, "_performBlockOnAllAssetsForAssetID:block:", v4, v3);

}

void sub_1001A1FE4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
  if (objc_msgSend(v4, "length"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
    objc_msgSend(v6, "cancelDownloadWithID:withCompletion:", v4, 0);

    v9 = BCBookDownloadLog(v7, v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
      v19 = 138543362;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "download canceled %{public}@", (uint8_t *)&v19, 0xCu);

    }
  }
  else
  {
    v12 = BCBookDownloadLog(0, v5);
    v10 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A3E20(a1, v10, v13, v14, v15, v16, v17, v18);
  }

}

void sub_1001A22C8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[4];
  NSObject *v29;
  _QWORD v30[4];
  NSObject *v31;
  uint8_t v32[128];
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  id v36;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadingAssets"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  if (v4)
  {
    v5 = objc_msgSend(v3, "downloadState");
    if (v5 == (id)8)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_1001A26B4;
      v28[3] = &unk_1008E8948;
      v29 = v3;
      objc_msgSend(v19, "pauseDownloadWithID:withCompletion:", v20, v28);

      v9 = v29;
    }
    else if (v5 == (id)6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472;
      v30[2] = sub_1001A2600;
      v30[3] = &unk_1008E8948;
      v31 = v3;
      objc_msgSend(v7, "resumeDownloadWithID:withCompletion:", v8, v30);

      v9 = v31;
    }
    else
    {
      v21 = BCBookDownloadLog(v5, v6);
      v9 = objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "downloadID"));
        *(_DWORD *)buf = 138543618;
        v34 = v22;
        v35 = 2048;
        v36 = objc_msgSend(v3, "downloadState");
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "unsupported state for toggling downloadID=%{public}@ state=%ld", buf, 0x16u);

      }
    }
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "restoreControllers"));
    v10 = -[NSObject countByEnumeratingWithState:objects:count:](v9, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
    if (v10)
    {
      v12 = v10;
      v23 = v3;
      v13 = *(_QWORD *)v25;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v25 != v13)
            objc_enumerationMutation(v9);
          v15 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v14);
          v16 = BCBookDownloadLog(v10, v11);
          v17 = objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            v18 = *(void **)(a1 + 40);
            *(_DWORD *)buf = 138543362;
            v34 = v18;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "prioritize asset restore assetID=%{public}@", buf, 0xCu);
          }

          v10 = objc_msgSend(v15, "prioritizeAssetRestoreWithAssetID:", *(_QWORD *)(a1 + 40));
          v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        v10 = -[NSObject countByEnumeratingWithState:objects:count:](v9, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
        v12 = v10;
      }
      while (v10);
      v3 = v23;
    }
  }

}

void sub_1001A2600(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;

  v3 = BCBookDownloadLog(a1, a2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadID"));
    v6 = 138543362;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "download resumed downloadID=%{public}@", (uint8_t *)&v6, 0xCu);

  }
}

void sub_1001A26B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;

  v3 = BCBookDownloadLog(a1, a2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadID"));
    v6 = 138412290;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "download paused downloadID=%@", (uint8_t *)&v6, 0xCu);

  }
}

void sub_1001A287C(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void *v25;
  void *v26;
  __int128 v27;
  NSObject *v28;
  uint8_t v29;
  char v30[15];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  NSObject *v36;
  uint8_t buf[4];
  NSObject *v38;
  __int16 v39;
  NSObject *v40;
  _BYTE v41[128];

  v28 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v32;
    *(_QWORD *)&v4 = 138412290;
    v27 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v32 != v6)
          objc_enumerationMutation(v2);
        v8 = *(NSObject **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
        v9 = objc_claimAutoreleasedReturnValue(-[NSObject bk_assetIdentifier](v8, "bk_assetIdentifier", v27));
        if (-[NSObject length](v9, "length"))
        {
          v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_updateDownloadingAssets:", v8));
          v12 = -[NSObject length](v9, "length");
          v14 = BCBookDownloadLog(v12, v13);
          v15 = objc_claimAutoreleasedReturnValue(v14);
          v16 = v15;
          if (v12)
          {
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 134217984;
              v38 = v8;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] about to create LibraryDownloadStatus from BLDownloadStatus %p", buf, 0xCu);
            }

            v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_updateDownloadingAssetAndCreateDownloadStatuses:from:", v11, v8));
            v18 = BCBookDownloadLog(v16, v17);
            v19 = objc_claimAutoreleasedReturnValue(v18);
            if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412546;
              v38 = v16;
              v39 = 2048;
              v40 = v8;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] finished creating LibraryDownloadStatuses (%@) from BLDownloadStatus %p", buf, 0x16u);
            }

            -[NSObject addObjectsFromArray:](v28, "addObjectsFromArray:", v16);
          }
          else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v27;
            v38 = v9;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "unhandled: %@", buf, 0xCu);
          }

        }
        else
        {
          v20 = BCBookDownloadLog(0, v10);
          v11 = objc_claimAutoreleasedReturnValue(v20);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
            sub_1006A3E88(&v29, v30, v11);
        }

      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
    }
    while (v5);
  }

  v21 = -[NSObject count](v28, "count");
  if (v21)
  {
    v23 = BCBookDownloadLog(v21, v22);
    v24 = objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v38 = v28;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Posting a notification (progress) for assets: %@", buf, 0xCu);
    }

    v35 = BKLibraryDownloadStatusKey;
    v36 = v28;
    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v36, &v35, 1));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v26, "postNotificationName:object:userInfo:", BKLibraryDownloadStatusNotification, *(_QWORD *)(a1 + 40), v25);

  }
}

void sub_1001A2D28(uint64_t a1)
{
  id v1;
  __int128 v2;
  void *i;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  BKBLDownloadAsset *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  _BOOL4 v23;
  void *v24;
  unsigned int v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void (**v54)(_QWORD, _QWORD);
  id v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  _BOOL8 v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  __int128 v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  id obj;
  uint64_t v82;
  _QWORD v84[4];
  id v85;
  _QWORD *v86;
  id v87[2];
  char v88;
  _QWORD v89[4];
  id v90;
  _QWORD *v91;
  id v92[2];
  BOOL v93;
  id location;
  _QWORD v95[4];
  id v96;
  uint64_t v97;
  uint8_t v98;
  char v99[15];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint8_t buf[4];
  id v105;
  __int16 v106;
  void *v107;
  uint64_t v108;
  void *v109;
  _BYTE v110[128];

  v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v80 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v77 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v102 = 0u;
  v103 = 0u;
  v100 = 0u;
  v101 = 0u;
  obj = *(id *)(a1 + 32);
  v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v100, v110, 16);
  if (v1)
  {
    v82 = *(_QWORD *)v101;
    *(_QWORD *)&v2 = 138543618;
    v76 = v2;
    do
    {
      for (i = 0; i != v1; i = (char *)i + 1)
      {
        if (*(_QWORD *)v101 != v82)
          objc_enumerationMutation(obj);
        v4 = *(void **)(*((_QWORD *)&v100 + 1) + 8 * (_QWORD)i);
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bk_assetIdentifier", v76));
        if (objc_msgSend(v5, "length"))
        {
          v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
          v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", v5));

          if (v8)
          {
            -[NSObject setDownloadStatus:](v8, "setDownloadStatus:", v4);
            if (-[NSObject downloadState](v8, "downloadState") == (id)6)
            {
              v12 = BCBookDownloadLog(6, v11);
              v13 = objc_claimAutoreleasedReturnValue(v12);
              if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543362;
                v105 = v5;
                _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] completed asset was paused: %{public}@", buf, 0xCu);
              }

              goto LABEL_36;
            }
            v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject parent](v8, "parent"));
            v21 = BCBookDownloadLog(v19, v20);
            v22 = objc_claimAutoreleasedReturnValue(v21);
            v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
            if (v19)
            {
              if (v23)
              {
                v24 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
                v25 = -[NSObject isAudiobook](v8, "isAudiobook");
                *(_DWORD *)buf = v76;
                v105 = v24;
                v106 = 1024;
                LODWORD(v107) = v25;
                _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed audiobook child identifier=%{public}@ isAudiobook=%d", buf, 0x12u);

              }
              -[NSObject setActive:](v8, "setActive:", 0);
              v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
              v27 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
              objc_msgSend(v26, "removeObjectForKey:", v27);

              v28 = -[NSObject isAudiobook](v8, "isAudiobook");
              if ((v28 & 1) != 0)
              {
                v30 = 0;
                goto LABEL_29;
              }
              v34 = BCBookDownloadLog(v28, v29);
              v35 = objc_claimAutoreleasedReturnValue(v34);
              if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
              {
                v36 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
                *(_DWORD *)buf = 138543362;
                v105 = v36;
                _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] supplemental download completed identifier=%{public}@", buf, 0xCu);

              }
              objc_msgSend(v77, "addObject:", v8);
              v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
              v33 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
              objc_msgSend(v32, "removeObjectForKey:", v33);
            }
            else
            {
              if (v23)
              {
                v31 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
                *(_DWORD *)buf = 138543362;
                v105 = v31;
                _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed identifier=%{public}@", buf, 0xCu);

              }
              v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
              v33 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject identifier](v8, "identifier"));
              objc_msgSend(v32, "removeObjectForKey:", v33);
            }

            objc_msgSend(v78, "addObject:", v8);
            v30 = v8;
LABEL_29:
            v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_updateDownloadingAssetAndCreateDownloadStatuses:from:", v8, v4));
            objc_msgSend(v79, "addObjectsFromArray:", v37);
            if (v19)
            {
              v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "activeChildren"));
              v39 = objc_msgSend(v38, "count") == 0;

              if (v39)
              {
                v42 = BCBookDownloadLog(v40, v41);
                v43 = objc_claimAutoreleasedReturnValue(v42);
                if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                {
                  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "identifier"));
                  *(_DWORD *)buf = 138543362;
                  v105 = v44;
                  _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed audiobook parent identifier=%{public}@", buf, 0xCu);

                }
                v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetsWithDownloadingChildAssets"));
                v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "identifier"));
                objc_msgSend(v45, "removeObjectForKey:", v46);

                v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
                v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "identifier"));
                v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "objectForKey:", v48));

                if (v49)
                {
                  v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "downloadingAssets"));
                  v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "identifier"));
                  objc_msgSend(v50, "removeObjectForKey:", v51);

                  objc_msgSend(v78, "addObject:", v19);
                }
              }
            }

            goto LABEL_36;
          }
          v15 = BCBookDownloadLog(v9, v10);
          v16 = objc_claimAutoreleasedReturnValue(v15);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            v105 = v5;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed untracked identifier=%{public}@", buf, 0xCu);
          }

          v17 = [BKBLDownloadAsset alloc];
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
          v8 = -[BKBLDownloadAsset initWithBLDownloadStatus:dataSourceIdentifier:isParent:](v17, "initWithBLDownloadStatus:dataSourceIdentifier:isParent:", v4, v18, 0);

          objc_msgSend(v80, "addObject:", v8);
        }
        else
        {
          v14 = BCBookDownloadLog(0, v6);
          v8 = objc_claimAutoreleasedReturnValue(v14);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
            sub_1006A3EB8(&v98, v99, v8);
        }
LABEL_36:

      }
      v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v100, v110, 16);
    }
    while (v1);
  }

  if (objc_msgSend(v79, "count"))
  {
    v108 = BKLibraryDownloadStatusKey;
    v109 = v79;
    v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v109, &v108, 1));
    v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v53, "postNotificationName:object:userInfo:", BKLibraryDownloadStatusNotification, *(_QWORD *)(a1 + 40), v52);

  }
  objc_msgSend(*(id *)(a1 + 40), "setDownloadQueueGeneration:", (char *)objc_msgSend(*(id *)(a1 + 40), "downloadQueueGeneration") + 1);
  v54 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "generationChangeHandler"));
  if (v54)
    ((void (**)(_QWORD, id))v54)[2](v54, objc_msgSend(*(id *)(a1 + 40), "downloadQueueGeneration"));

  v95[0] = _NSConcreteStackBlock;
  v95[1] = 3221225472;
  v95[2] = sub_1001A384C;
  v95[3] = &unk_1008EE000;
  v55 = v78;
  v56 = *(_QWORD *)(a1 + 40);
  v96 = v55;
  v97 = v56;
  v57 = objc_retainBlock(v95);
  objc_initWeak(&location, *(id *)(a1 + 40));
  v58 = objc_msgSend(v55, "count");
  if (v58)
  {
    v60 = BCBookDownloadLog(v58, v59);
    v61 = objc_claimAutoreleasedReturnValue(v60);
    if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v105 = v55;
      v106 = 2112;
      v107 = v77;
      _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Notifying finished for (tracked) assets: %@, (supplemental) assets: %@", buf, 0x16u);
    }

    v62 = objc_msgSend(v55, "count");
    v63 = objc_msgSend(v55, "count");
    v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "iTunesSyncedBooksPlistCleaner"));

    if (v64)
    {
      v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "iTunesSyncedBooksPlistCleaner"));
      v89[0] = _NSConcreteStackBlock;
      v89[1] = 3221225472;
      v89[2] = sub_1001A3B78;
      v89[3] = &unk_1008EE028;
      v91 = v57;
      objc_copyWeak(v92, &location);
      v93 = v62 != 0;
      v92[1] = v63;
      v90 = v77;
      objc_msgSend(v65, "removePlistAssets:completion:", v55, v89);

      objc_destroyWeak(v92);
      v66 = v91;
    }
    else
    {
      v67 = v62 != 0;
      v66 = objc_loadWeakRetained(&location);
      ((void (*)(_QWORD *, id, _BOOL8, id, void *, _QWORD))v57[2])(v57, v66, v67, v63, v77, 0);
    }

  }
  v68 = objc_msgSend(v80, "count");
  if (v68)
  {
    v70 = BCBookDownloadLog(v68, v69);
    v71 = objc_claimAutoreleasedReturnValue(v70);
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v105 = v80;
      _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Notifying finished for (untracked) assets for assets: %@", buf, 0xCu);
    }

    v72 = objc_msgSend(v80, "count");
    v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "iTunesSyncedBooksPlistCleaner"));

    if (v73)
    {
      v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "iTunesSyncedBooksPlistCleaner"));
      v84[0] = _NSConcreteStackBlock;
      v84[1] = 3221225472;
      v84[2] = sub_1001A3BE8;
      v84[3] = &unk_1008EE028;
      v86 = v57;
      objc_copyWeak(v87, &location);
      v88 = 0;
      v87[1] = v72;
      v85 = v77;
      objc_msgSend(v74, "removePlistAssets:completion:", v80, v84);

      objc_destroyWeak(v87);
      v75 = v86;
    }
    else
    {
      v75 = objc_loadWeakRetained(&location);
      ((void (*)(_QWORD *, id, _QWORD, id, void *, _QWORD))v57[2])(v57, v75, 0, v72, v77, 0);
    }

  }
  objc_destroyWeak(&location);

}

void sub_1001A3800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  id *v40;

  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A384C(uint64_t a1, void *a2, int a3, uint64_t a4, void *a5, void *a6)
{
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  id v24;
  uint64_t v25;
  _QWORD v26[4];
  id v27;
  uint64_t v28;
  id v29;
  id location;

  objc_initWeak(&location, a2);
  v11 = a5;
  v12 = a6;
  v14 = v12;
  if (v12)
  {
    v15 = BCBookDownloadLog(v12, v13);
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1006A3EE8((uint64_t)v14, a4, v16);

  }
  v17 = objc_loadWeakRetained(&location);
  v18 = v17;
  if (v17)
  {
    v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "reloadCounterpartHandler"));
    v20 = (void *)v19;
    if (v19)
      (*(void (**)(uint64_t))(v19 + 16))(v19);

    if (objc_msgSend(v11, "count"))
    {
      v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "didLoadSupplementalAssetHandler"));
      v22 = (void *)v21;
      if (v21)
        (*(void (**)(uint64_t, id))(v21 + 16))(v21, v11);

    }
    if (a3)
    {
      v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "dispatchQueue"));
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_1001A39FC;
      v26[3] = &unk_1008E7518;
      objc_copyWeak(&v29, &location);
      v24 = *(id *)(a1 + 32);
      v25 = *(_QWORD *)(a1 + 40);
      v27 = v24;
      v28 = v25;
      dispatch_async(v23, v26);

      objc_destroyWeak(&v29);
    }
  }

  objc_destroyWeak(&location);
}

void sub_1001A39DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A39FC(id *a1)
{
  id WeakRetained;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint8_t v17[128];
  uint8_t buf[4];
  id v19;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v4 = BCBookDownloadLog(WeakRetained, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = a1[4];
    *(_DWORD *)buf = 138412290;
    v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] removed assets: %@", buf, 0xCu);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryManager"));
  objc_msgSend(v7, "libraryDataSource:removedAssets:", WeakRetained, a1[4]);

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v8 = a1[4];
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v14;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(a1[5], "_removeReportingItemFromCoverCache:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v12), (_QWORD)v13);
        v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v10);
  }

}

void sub_1001A3B78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id *v5;
  id v6;
  id WeakRetained;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = (id *)(a1 + 48);
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  (*(void (**)(uint64_t, id, _QWORD, _QWORD, _QWORD, id))(v4 + 16))(v4, WeakRetained, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), v6);

}

void sub_1001A3BE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id *v5;
  id v6;
  id WeakRetained;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = (id *)(a1 + 48);
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  (*(void (**)(uint64_t, id, _QWORD, _QWORD, _QWORD, id))(v4 + 16))(v4, WeakRetained, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), v6);

}

void sub_1001A3CF0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void (**v5)(id, id, _QWORD);
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadingAssets"));
  v4 = objc_msgSend(v3, "copy");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001A3DD8;
  v8[3] = &unk_1008EE050;
  v7 = v2;
  v9 = v7;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v8);

  v5 = (void (**)(id, id, _QWORD))objc_retainBlock(*(id *)(a1 + 40));
  if (v5)
  {
    v6 = objc_msgSend(v7, "copy");
    v5[2](v5, v6, 0);

  }
}

void sub_1001A3DD8(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;

  v6 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "parent"));

  if (!v5)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);

}

void sub_1001A3F38(id *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "downloadingAssets", (_QWORD)v12));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v7));

        if (v9)
          objc_msgSend(a1[6], "addObject:", v9);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

  kdebug_trace(725353716, 81, 0, 0, 0);
  v10 = objc_retainBlock(a1[7]);
  v11 = v10;
  if (v10)
    (*((void (**)(id, id, _QWORD))v10 + 2))(v10, a1[6], 0);

}

void sub_1001A41FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadingAssets"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));

  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "resumeDownloadForAssetID:", *(_QWORD *)(a1 + 40));
    v3 = 0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorInvalidAssetError, 0));
  }
  v4 = objc_retainBlock(*(id *)(a1 + 48));
  v5 = v4;
  if (v4)
    (*((void (**)(id, id, uint64_t, void *))v4 + 2))(v4, v6, 1, v3);

}

void sub_1001A4374(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadingAssets"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));

  if (v6)
    v3 = 0;
  else
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorInvalidAssetError, 0));
  v4 = objc_retainBlock(*(id *)(a1 + 48));
  v5 = v4;
  if (v4)
    (*((void (**)(id, id, void *))v4 + 2))(v4, v6, v3);

}

id sub_1001A5DCC()
{
  if (qword_1009F51C0 != -1)
    dispatch_once(&qword_1009F51C0, &stru_1008EE090);
  return (id)qword_1009F51B8;
}

void sub_1001A5E0C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMainFlowController");
  v2 = (void *)qword_1009F51B8;
  qword_1009F51B8 = (uint64_t)v1;

}

void sub_1001A6070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A6094(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  void (**v5)(void);
  void (**v6)(void);

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setAnimator:", 0);

  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v4, "setTransitionPreviousTopViewController:", 0);

  v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v5)
  {
    v6 = v5;
    v5[2]();
    v5 = v6;
  }

}

uint64_t sub_1001A6240(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "isCancelled") ^ 1);
}

id sub_1001A6310(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "popToRootViewControllerAnimated:", *(unsigned __int8 *)(a1 + 32));
}

void sub_1001A6348(id a1, UINavigationController *a2)
{
  id v2;

  v2 = -[UINavigationController popToRootViewControllerAnimated:](a2, "popToRootViewControllerAnimated:", 1);
}

void sub_1001A67CC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v2 = objc_retainBlock(*(id *)(a1 + 56));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  if (_AXSAutomationEnabled(objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerDidChangeAnimated:", *(unsigned __int8 *)(a1 + 64))))
  {
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "childViewControllers", 0));
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v12;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v12 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
          if (v9 != *(void **)(a1 + 48))
          {
            v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "view"));
            objc_msgSend(v10, "setAccessibilityElementsHidden:", 1);

          }
          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      }
      while (v6);
    }

  }
}

void sub_1001A6918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  id v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __objc2_prot *v32;
  _QWORD v33[4];
  id v34;
  _QWORD v35[4];
  id v36;
  id v37;
  id v38;
  char v39;
  uint8_t buf[8];
  id from;
  id location;
  _QWORD v43[4];
  id v44;
  void *v45;

  objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerWillChangeAnimated:", *(unsigned __int8 *)(a1 + 64));
  v2 = *(_QWORD *)(a1 + 40);
  v3 = objc_opt_class(BKAssetPresentingViewController);
  v32 = &OBJC_PROTOCOL___BKPalettePresentationTransitioning;
  v4 = BUClassAndProtocolCast(v2, v3, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v5
    && objc_msgSend(v5, "assetPresenterIsAudiobook", &OBJC_PROTOCOL___BKPalettePresentationTransitioning))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_1001A6DA4;
    v43[3] = &unk_1008E7818;
    v44 = *(id *)(a1 + 56);
    objc_msgSend(v7, "presentFullPlayer:completion:", v6, v43);

    v8 = v44;
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults", v32));
    v10 = objc_msgSend(v9, "BOOLForKey:", CFSTR("BKBookOpenAnimatorRedViewFallbackEnabled"));

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "openOptions"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("BKBookPresentWithoutAnimations")));
    v13 = objc_msgSend(v12, "BOOLValue");

    v14 = *(void **)(a1 + 32);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetPresenterAssetID"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "_bookWithAssetPermanentOrTemporaryAssetID:", v15));

    if ((v13 & 1) == 0
      && _os_feature_enabled_impl("UIKit", "uip_fluid_transitions")
      && objc_msgSend(v8, "isLocal")
      && ((v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_coverViewForPresenter:assetPresenter:includePresented:", *(_QWORD *)(a1 + 48), v6, 1))) != 0? (v17 = 1): (v17 = v10), v16, v17 == 1))
    {
      objc_initWeak(&location, *(id *)(a1 + 32));
      objc_initWeak(&from, v6);
      v18 = sub_1001A5DCC();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#swipeToDismiss - Setting up preferred transition.", buf, 2u);
      }

      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_1001A6DB0;
      v35[3] = &unk_1008EE190;
      objc_copyWeak(&v37, &location);
      v36 = *(id *)(a1 + 48);
      objc_copyWeak(&v38, &from);
      v39 = v10;
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[_UIViewControllerTransition zoomWithSourceViewProvider:](_UIViewControllerTransition, "zoomWithSourceViewProvider:", v35));
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIBlurEffect effectWithStyle:](UIBlurEffect, "effectWithStyle:", 16));
      v45 = v21;
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v45, 1));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "_options"));
      objc_msgSend(v23, "setDimmingVisualEffects:", v22);

      objc_msgSend(*(id *)(a1 + 40), "_setPreferredTransition:", v20);
      objc_destroyWeak(&v38);

      objc_destroyWeak(&v37);
      objc_destroyWeak(&from);
      objc_destroyWeak(&location);
    }
    else
    {
      v24 = objc_opt_class(BKAssetPresentingViewController);
      v25 = BUDynamicCast(v24, *(_QWORD *)(a1 + 40));
      v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
      objc_msgSend(v26, "setUseLegacyAnimation:", 1);
      v27 = sub_1001A5DCC();
      v28 = objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(location) = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "#swipeToDismiss - Using LegacyAnimation", (uint8_t *)&location, 2u);
      }

    }
    v30 = *(_QWORD *)(a1 + 40);
    v29 = *(void **)(a1 + 48);
    v31 = *(unsigned __int8 *)(a1 + 64);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1001A6F94;
    v33[3] = &unk_1008E7818;
    v34 = *(id *)(a1 + 56);
    objc_msgSend(v29, "presentViewController:animated:completion:", v30, v31, v33);

  }
}

void sub_1001A6D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A6DA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1001A6DB0(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  dispatch_time_t v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD block[4];
  id v20;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = objc_loadWeakRetained((id *)(a1 + 48));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_coverViewForPresenter:assetPresenter:includePresented:", v4, v5, 1));

  if (!v6)
  {
    v7 = objc_loadWeakRetained(v2);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = objc_loadWeakRetained((id *)(a1 + 48));
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_coverViewForPresenter:assetPresenter:includePresented:", v8, v9, 0));

    if (!v6)
    {
      if (*(_BYTE *)(a1 + 56))
      {
        v10 = objc_msgSend(objc_alloc((Class)UIView), "initWithFrame:", 0.0, 0.0, 100.0, 100.0);
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor redColor](UIColor, "redColor"));
        objc_msgSend(v10, "setBackgroundColor:", v11);

        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
        objc_msgSend(v12, "addSubview:", v10);

        v13 = v10;
        v14 = dispatch_time(0, 1000000000);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001A6F8C;
        block[3] = &unk_1008E72C0;
        v20 = v13;
        v6 = v13;
        dispatch_after(v14, (dispatch_queue_t)&_dispatch_main_q, block);

      }
      else
      {
        v6 = 0;
      }
    }
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "window"));
  if (v15)
    v16 = v6;
  else
    v16 = 0;
  v17 = v16;

  return v17;
}

id sub_1001A6F8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

uint64_t sub_1001A6F94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001A71C4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v5[5];
  id v6;
  char v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001A7254;
  v5[3] = &unk_1008E80D0;
  v4 = *(id *)(a1 + 48);
  v5[4] = *(_QWORD *)(a1 + 40);
  v6 = v4;
  v7 = *(_BYTE *)(a1 + 56);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", v3, v5);

}

id sub_1001A7254(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  return objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerDidChangeAnimated:", *(unsigned __int8 *)(a1 + 48));
}

id sub_1001A7390(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presenterDismissAllModalControllersAnimated:completion:", *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

void sub_1001A74A4(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_1001A7548(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

id sub_1001A7B4C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "popToRootViewControllerAnimated:", *(unsigned __int8 *)(a1 + 32));
}

id sub_1001A7D08(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "popToRootViewControllerAnimated:", *(unsigned __int8 *)(a1 + 32));
}

id sub_1001A8574(uint64_t a1, uint64_t a2)
{
  void *v4;
  BOOL v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void **v24;
  uint64_t v25;
  double (*v26)(uint64_t);
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char v32;
  _QWORD v33[4];
  id v34;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenterAssetViewController"));
  if (objc_msgSend(*(id *)(a1 + 40), "isValid"))
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
  {
    if (!*(_BYTE *)(a1 + 88))
    {
      v7 = 0;
      goto LABEL_23;
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController defaultAnimatorForOpening:skipReveal:](BKAssetPresentingViewController, "defaultAnimatorForOpening:skipReveal:", 1, 1));
    if (!v7)
      goto LABEL_23;
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "asset"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:](BKAssetPresentingViewController, "animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:", v6, a2, *(unsigned __int8 *)(a1 + 88), objc_msgSend(*(id *)(a1 + 48), "coverAnimationSourceUseLargeCover"), 0));

    if (!v7)
      goto LABEL_23;
  }
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 56), "coverAnimationHostNeedsCrossfadeOnCloseCompletion") & 1) != 0)
    v8 = objc_msgSend(*(id *)(a1 + 56), "coverAnimationHostNeedsCrossfadeOnCloseCompletion");
  else
    v8 = 0;
  objc_msgSend(v7, "setCrossfadeOnCloseCompletion:", v8);
  if (*(_BYTE *)(a1 + 88))
    objc_msgSend(v4, "setContentOpenAnimator:", v7);
  objc_msgSend(*(id *)(a1 + 32), "setAssetPresenterAnimator:", v7);
  objc_msgSend(v7, "setCoverSource:", *(_QWORD *)(a1 + 48));
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1001A8894;
  v33[3] = &unk_1008E77C8;
  v9 = v4;
  v34 = v9;
  objc_msgSend(v7, "setCleanupBlock:", v33);
  v10 = *(void **)(a1 + 64);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenterAssetID"));
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenterCoverImage"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "_coverImageForAssetID:toViewController:forAssetViewController:source:coverImage:", v11, v12, v9, v13, v14));
  objc_msgSend(v7, "setCoverImage:", v15);

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenterCoverShadowImage"));
  objc_msgSend(v7, "setCoverShadowImage:", v16);

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "coverImage"));
  if (v17)
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "coverImage"));
    objc_msgSend(v18, "size");
    v20 = v19;
    v22 = v21;

    if (v20 > 0.0 && v22 > 0.0)
      objc_msgSend(*(id *)(a1 + 32), "setAssetPresenterCoverAspect:", v22 / v20);
  }
  v24 = _NSConcreteStackBlock;
  v25 = 3221225472;
  v26 = sub_1001A88A0;
  v27 = &unk_1008EE1E0;
  v28 = *(_QWORD *)(a1 + 64);
  v29 = *(id *)(a1 + 48);
  v32 = *(_BYTE *)(a1 + 88);
  v30 = *(id *)(a1 + 80);
  v31 = *(id *)(a1 + 72);
  objc_msgSend(v7, "setClosedCoverFrameBlock:", &v24);
  objc_msgSend(v7, "setAssertions:", 0, v24, v25, v26, v27, v28);
  if ((objc_msgSend(*(id *)(a1 + 56), "coverAnimationHostIsFullyVisible:", *(_QWORD *)(a1 + 48)) & 1) == 0)
    objc_msgSend(*(id *)(a1 + 56), "coverAnimationHostScrollToMakeVisible:", *(_QWORD *)(a1 + 48));

LABEL_23:
  return v7;
}

id sub_1001A8894(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentOpenAnimator:", 0);
}

double sub_1001A88A0(uint64_t a1)
{
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  CGRect v19;
  CGRect v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOpenAnimationHelper"));

  if (v2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookOpenAnimationHelper"));
    objc_msgSend(v3, "openAnimationSourceRect");
    v5 = v4;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "coverAnimationSourceInvalidateFrame");
    objc_msgSend(*(id *)(a1 + 40), "coverAnimationSourceFrame");
    v5 = v6;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = 48;
    if (!*(_BYTE *)(a1 + 64))
      v13 = 56;
    v3 = *(id *)(a1 + v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "coverAnimationSourceReferenceView"));
    v20.origin.x = CGRectZero.origin.x;
    v20.origin.y = CGRectZero.origin.y;
    v20.size.width = CGRectZero.size.width;
    v20.size.height = CGRectZero.size.height;
    v19.origin.x = v5;
    v19.origin.y = v8;
    v19.size.width = v10;
    v19.size.height = v12;
    if (!CGRectEqualToRect(v19, v20))
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));

      if (v14 != v15)
      {
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));
        objc_msgSend(v16, "convertRect:fromView:", v14, v5, v8, v10, v12);
        v5 = v17;

      }
    }

  }
  return v5;
}

void sub_1001A9520(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  unsigned int v5;
  _QWORD v6[5];
  id v7;
  char v8;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001A95F4;
  v6[3] = &unk_1008E7D78;
  v2 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v2;
  v8 = *(_BYTE *)(a1 + 48);
  v3 = objc_retainBlock(v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance"));
  if ((objc_msgSend(v4, "isBookStoreAllowed") & 1) != 0)
  {

  }
  else
  {
    v5 = objc_msgSend(*(id *)(a1 + 32), "_currentlySelectedTabIsStore");

    if (v5)
      objc_msgSend(*(id *)(a1 + 32), "presenterSelectLibraryAllCollection");
  }
  ((void (*)(_QWORD *))v3[2])(v3);

}

void sub_1001A95F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  _QWORD v9[4];
  char v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectedNavigationController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "topViewController"));
  v4 = *(void **)(a1 + 40);

  v5 = *(void **)(a1 + 32);
  if (v3 == v4)
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "_doesPreviousViewControllerSupportCurrentOrientation") & 1) == 0)
      objc_msgSend(*(id *)(a1 + 32), "_forceOrientationToPortrait:", 0);
    v6 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1001A970C;
    v9[3] = &unk_1008EE100;
    v10 = *(_BYTE *)(a1 + 48);
    objc_msgSend(v6, "_transition:animator:completion:", v9, 0, 0);
  }
  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1001A9730;
    v7[3] = &unk_1008EE230;
    v8 = *(id *)(a1 + 40);
    objc_msgSend(v5, "_transition:animator:completion:", v7, 0, 0);

  }
}

id sub_1001A970C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "popViewControllerAnimated:", *(unsigned __int8 *)(a1 + 32));
}

void sub_1001A9730(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "viewControllers"));
  v4 = objc_msgSend(v3, "indexOfObjectIdenticalTo:", *(_QWORD *)(a1 + 32));

  if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "viewControllers"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "subarrayWithRange:", 0, v4));
    objc_msgSend(v7, "setViewControllers:animated:", v6, 0);

  }
}

void sub_1001A9918(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  void *v8;

  v3 = a2;
  if (v3)
  {
    v4 = sub_1001A5DCC();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006A402C((uint64_t)v3, v5, v6);

  }
  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(id, BOOL))v7 + 2))(v7, v3 == 0);

}

void sub_1001A9DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  uint64_t v12;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 112));
  _Unwind_Resume(a1);
}

void sub_1001A9DFC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "presenterUpdateReadingNowAssetVisibility:assetPresenter:", 1, *(_QWORD *)(a1 + 32));

}

void sub_1001A9E3C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001A9EB8;
  v6[3] = &unk_1008EE258;
  v7 = v3;
  v5 = v3;
  objc_msgSend(v4, "coverAnimationSourceCurrentBookWidgetPrepareImageWithCompletion:", v6);

}

uint64_t sub_1001A9EB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001AA3CC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  unsigned int v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    v4 = objc_msgSend(WeakRetained, "testSequence");
    v3 = v5;
    if (v4 == *(_DWORD *)(a1 + 48))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      v3 = v5;
    }
  }

}

void sub_1001AA5DC(id a1, PPTTestRunner *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(-[PPTTestRunner testMachine](a2, "testMachine"));
  objc_msgSend(v2, "testFinished");

}

void sub_1001AA60C(id a1, PPTTestRunner *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(-[PPTTestRunner testMachine](a2, "testMachine"));
  objc_msgSend(v2, "handlerReceived");

}

void sub_1001AA63C(id a1, PPTTestRunner *a2)
{
  PPTTestRunner *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint8_t v6[16];

  v2 = a2;
  v3 = sub_1001DA41C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "TestRunner: Finished test", v6, 2u);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(-[PPTTestRunner machine](v2, "machine"));
  objc_msgSend(v5, "testFinished");

}

id sub_1001AA6C8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001AA750;
  v8[3] = &unk_1008EE350;
  v9 = v3;
  v5 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "createSafeBlock:", v8));

  return v6;
}

void sub_1001AA750(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  objc_class *v5;
  NSString *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint8_t buf[4];
  uint64_t v14;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "testDelegate"));
  v5 = (objc_class *)objc_opt_class(v4);
  v6 = NSStringFromClass(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@: %@"), v7, *(_QWORD *)(a1 + 32)));
  objc_msgSend(v3, "setErrorMessage:", v8);

  v9 = sub_1001DA41C();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "TestRunner: Finished test with error: %{public}@", buf, 0xCu);
  }

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "machine"));
  objc_msgSend(v12, "testError");

}

void sub_1001AB988(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1001AB9A4(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  unsigned __int8 v3;
  unsigned int v4;
  void *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    v3 = objc_msgSend(WeakRetained, "contentLoaded");
    v2 = v5;
    if ((v3 & 1) == 0)
    {
      objc_msgSend(v5, "setContentLoaded:", 1);
      v4 = objc_msgSend(v5, "waitingForContentLoaded");
      v2 = v5;
      if (v4)
      {
        objc_msgSend(v5, "setWaitingForContentLoaded:", 0);
        objc_msgSend(v5, "_performCrossFade");
        v2 = v5;
      }
    }
  }

}

id sub_1001ABCB4(uint64_t a1)
{
  _QWORD v2[5];
  _QWORD v3[4];
  uint64_t v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001ABD48;
  v3[3] = &unk_1008E72C0;
  v4 = *(_QWORD *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001ABD94;
  v2[3] = &unk_1008E77C8;
  v2[4] = v4;
  return +[UIView animateWithDuration:delay:options:animations:completion:](UIView, "animateWithDuration:delay:options:animations:completion:", 0x20000, v3, v2, 0.85, 0.0);
}

void sub_1001ABD48(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id sub_1001ABD94(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "completeTransition:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "transitionWasCancelled") ^ 1);
}

id sub_1001AC05C(uint64_t a1)
{
  double v1;

  v1 = 1.0;
  if (!*(_BYTE *)(a1 + 40))
    v1 = 0.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setAlpha:", v1);
}

void sub_1001ACD80(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = a2;
  if (v3)
  {
    v9 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetReviewID"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetIDFromAssetReviewID:](BCAssetReview, "assetIDFromAssetReviewID:", v4));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAsset"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetID"));
    if (v5 == v7)
    {
      v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetReview"));

      if (v8 == v9)
      {
LABEL_7:

        v3 = v9;
        goto LABEL_8;
      }
      objc_msgSend(*(id *)(a1 + 32), "setAssetReview:", v9);
      objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionView"));
      objc_msgSend(v6, "performBatchUpdates:completion:", &stru_1008EE398, &stru_1008EE3B8);
    }
    else
    {

    }
    goto LABEL_7;
  }
LABEL_8:

}

void sub_1001ACE80(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD *v7;
  void (**v8)(_QWORD);
  _QWORD block[4];
  void (**v10)(_QWORD);
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1001ACFCC;
    v11[3] = &unk_1008E7B70;
    v12 = *(id *)(a1 + 32);
    v13 = v5;
    v14 = *(id *)(a1 + 40);
    v15 = v6;
    v7 = objc_retainBlock(v11);
    v8 = objc_retainBlock(v7);
    if (v8)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001AD0A0;
        block[3] = &unk_1008E7818;
        v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

  }
}

void sub_1001ACFCC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = BUProtocolCast(&OBJC_PROTOCOL___BKLibraryBookshelfLibraryAssetProvider, *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = *(void **)(a1 + 40);
  v9 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryAsset"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
  if (v4 == v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "asset"));
    v8 = *(void **)(a1 + 56);

    if (v7 != v8)
    {
      if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 48), "setInitialAsset:") & 1) != 0)
        objc_msgSend(*(id *)(a1 + 48), "setInitialAsset:", *(_QWORD *)(a1 + 56));
      else
        objc_msgSend(*(id *)(a1 + 48), "setAsset:", *(_QWORD *)(a1 + 56));
      objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
    }
  }
  else
  {

  }
}

uint64_t sub_1001AD0A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001ADB68(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    sub_1006A4098(a1, (uint64_t)v4);

}

void sub_1001AE6B4(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  _QWORD v13[4];
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;

  v2 = objc_msgSend(*(id *)(a1 + 32), "count");
  v3 = objc_msgSend(*(id *)(a1 + 40), "count");
  v4 = objc_msgSend(*(id *)(a1 + 48), "count");
  v5 = objc_msgSend(*(id *)(a1 + 56), "count");
  if (*(_BYTE *)(a1 + 72)
    || (v6 = (uint64_t)v2 + (_QWORD)v3 + (unint64_t)v5 + (_QWORD)v4, v6 > 40)
    || (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "collectionView")),
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "window")),
        v8,
        v7,
        !v8))
  {
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "collectionView"));
    objc_msgSend(v12, "reloadData");

  }
  else if (v6)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "collectionView"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1001AE828;
    v13[3] = &unk_1008E78B8;
    v10 = *(id *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 64);
    v14 = v10;
    v15 = v11;
    v16 = *(id *)(a1 + 40);
    v17 = *(id *)(a1 + 48);
    v18 = *(id *)(a1 + 56);
    objc_msgSend(v9, "performBatchUpdates:completion:", v13, &stru_1008EE428);

  }
}

void sub_1001AE828(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  if (objc_msgSend(a1[4], "count"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "collectionView"));
    objc_msgSend(v2, "deleteSections:", a1[4]);

  }
  if (objc_msgSend(a1[6], "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "collectionView"));
    objc_msgSend(v3, "insertSections:", a1[6]);

  }
  if (objc_msgSend(a1[7], "count"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "collectionView"));
    objc_msgSend(v4, "deleteItemsAtIndexPaths:", a1[7]);

  }
  if (objc_msgSend(a1[8], "count"))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "collectionView"));
    objc_msgSend(v5, "insertItemsAtIndexPaths:", a1[8]);

  }
}

void sub_1001AE990(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  objc_msgSend(v1, "reloadData");

}

void sub_1001AEA48(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  __objc2_prot **v8;
  __objc2_prot **v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  BOOL v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "visibleCells"));

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v27;
    v8 = &off_10092D000;
    v9 = &off_10092D000;
    do
    {
      v10 = 0;
      v25 = v6;
      do
      {
        if (*(_QWORD *)v27 != v7)
          objc_enumerationMutation(v4);
        v11 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)v10);
        v12 = BUProtocolCast(v8[404], v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        v14 = BUProtocolCast(v9[405], v11);
        v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        v16 = v15;
        if (v13)
          v17 = v15 == 0;
        else
          v17 = 1;
        if (!v17)
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "libraryAsset"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "assetID"));

          if (objc_msgSend(*(id *)(v1 + 40), "containsObject:", v19))
          {
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "booksDataSource"));
            v21 = v7;
            v22 = v1;
            v23 = v4;
            v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "cachedResourceForAssetID:", v19));

            objc_msgSend(v13, "setAsset:", v24);
            objc_msgSend(v11, "layoutIfNeeded");

            v4 = v23;
            v1 = v22;
            v7 = v21;
            v8 = &off_10092D000;
          }

          v9 = &off_10092D000;
          v6 = v25;
        }

        v10 = (char *)v10 + 1;
      }
      while (v6 != v10);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v6);
  }

}

void sub_1001AECCC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  objc_msgSend(v1, "reloadData");

}

void sub_1001AEDB4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "visibleCells"));

  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "libraryAsset", (_QWORD)v16));
        v11 = *(void **)(a1 + 40);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
        LODWORD(v11) = objc_msgSend(v11, "containsObject:", v12);

        if ((_DWORD)v11)
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "booksDataSource"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "assetReviewForAssetID:", v14));
          objc_msgSend(v9, "setAssetReview:", v15);

          objc_msgSend(v9, "layoutIfNeeded");
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }

}

void sub_1001B07F8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "seriesBooks"));
  v2 = objc_opt_class(BKLibraryAsset);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "anyObject"));
  v4 = BUDynamicCast(v2, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "priceManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "valueForKey:", CFSTR("storeID")));
  objc_msgSend(v6, "collectPricesForSeriesStoreIDs:isAudiobookSeries:", v7, objc_msgSend(v5, "isAudiobook"));

}

void sub_1001B180C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1001B18E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B18FC(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 24) != 0;
  return result;
}

id sub_1001B37B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_1001B390C(uint64_t a1)
{
  void *v1;
  _QWORD v2[5];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001B3978;
  v2[3] = &unk_1008E7680;
  v1 = *(void **)(a1 + 40);
  v2[4] = *(_QWORD *)(a1 + 32);
  v3 = v1;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

}

id sub_1001B3978(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_setupBookshelfAnimationViewsWithCompletion:", *(_QWORD *)(a1 + 40));
}

id sub_1001B3984(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_setupBookshelfAnimationViewsWithCompletion:", *(_QWORD *)(a1 + 40));
}

void sub_1001B3A14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  unsigned int v13;
  void *v14;
  void *v15;
  double v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfViewController"));
  v3 = objc_opt_class(UIViewController);
  v23 = (void *)v2;
  v4 = BUClassAndProtocolCast(v2, v3, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array", &OBJC_PROTOCOL___BKBookshelfOpenTransitioning));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  +[CATransaction synchronize](CATransaction, "synchronize");
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v22 = a1;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfContentViews"));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        if (v5)
          v13 = objc_msgSend(v5, "transitionViewIsSnapshottable:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i));
        else
          v13 = 1;
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "window"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "windowScene"));

        if (v13 && objc_msgSend(v15, "activationState") != (id)2)
        {
          v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "snapshotViewAfterScreenUpdates:", 0));
          if (v17)
          {
            v18 = (void *)v17;
            objc_msgSend(v24, "addObject:", v17);
            objc_msgSend(v12, "center");
            objc_msgSend(v18, "setCenter:");
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "superview"));
            objc_msgSend(v19, "insertSubview:belowSubview:", v18, v12);

            objc_msgSend(v12, "setAlpha:", 0.0);
            goto LABEL_15;
          }
          *(_QWORD *)&v16 = BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKBookOpenAnimator.m", 692, "-[BKBookOpenAnimator _setupBookshelfAnimationViewsWithCompletion:]_block_invoke", "!shouldSnapshot", CFSTR("Snapshot failed.")).n128_u64[0];
        }
        objc_msgSend(v6, "addObject:", v12, v16);
LABEL_15:

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v9);
  }

  if (objc_msgSend(*(id *)(v22 + 32), "opening"))
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v22 + 32), "minifiedBarAnimator"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "minifiedBarAnimatorContainerView"));

    if (v21)
      objc_msgSend(v6, "addObject:", v21);

  }
  objc_msgSend(*(id *)(v22 + 32), "setBookshelfSnapshots:", v24);
  objc_msgSend(*(id *)(v22 + 32), "setBookshelfLiveViews:", v6);
  (*(void (**)(void))(*(_QWORD *)(v22 + 40) + 16))();

}

void sub_1001B3F64(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  __n128 v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  objc_msgSend(v5, "setAlpha:", 1.0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  objc_msgSend(v7, "frame");
  v8.n128_u64[0] = *(_QWORD *)&CGPointZero.x;
  v11 = CGRectMakeWithOriginSize(v8, CGPointZero.y, v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "view"));
  objc_msgSend(v19, "setFrame:", v11, v13, v15, v17);

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfContentViews", 0));
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v35;
    do
    {
      v24 = 0;
      do
      {
        if (*(_QWORD *)v35 != v23)
          objc_enumerationMutation(v20);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)v24), "setAlpha:", 1.0);
        v24 = (char *)v24 + 1;
      }
      while (v22 != v24);
      v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v34, v38, 16);
    }
    while (v22);
  }

  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromViewController"));
  v26 = BUProtocolCast(&OBJC_PROTOCOL___BKBookOpenTransitioning, v25);
  v27 = (void *)objc_claimAutoreleasedReturnValue(v26);

  if ((objc_opt_respondsToSelector(v27, "bookOpenRevealDidEnd") & 1) != 0)
    objc_msgSend(v27, "bookOpenRevealDidEnd");
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "im_ancestorViewControllerConformingToProtocol:", &OBJC_PROTOCOL___BKAssetPresenting));
  v30 = BUProtocolCast(&OBJC_PROTOCOL___BKAssetPresenting, v29);
  v31 = (void *)objc_claimAutoreleasedReturnValue(v30);

  if ((objc_opt_respondsToSelector(v31, "transitionContextWillCompleteTransitionInContainerView:") & 1) != 0)
  {
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    objc_msgSend(v31, "transitionContextWillCompleteTransitionInContainerView:", v32);

  }
  objc_msgSend(*(id *)(a1 + 32), "teardownViews:", *(unsigned __int8 *)(a1 + 40));
  v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverSource"));
  objc_msgSend(v33, "coverAnimationSourceFinalize");

}

void sub_1001B4230(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[5];

  if (!*(_BYTE *)(a1 + 40))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001B4348;
    v8[3] = &unk_1008E72C0;
    v8[4] = *(_QWORD *)(a1 + 32);
    +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v8, 0.5);
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitionContext"));
  objc_msgSend(v2, "completeTransition:", *(unsigned __int8 *)(a1 + 40));

  if (objc_msgSend(*(id *)(a1 + 32), "opening"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromViewController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
    objc_msgSend(v3, "insertSubview:below:", v5, v7);

  }
}

void sub_1001B4348(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

id sub_1001B4520(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_animateTransition");
}

void sub_1001B469C(uint64_t a1)
{
  void *v2;
  char v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  id v9;

  if (objc_msgSend(*(id *)(a1 + 32), "interactive"))
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKBookOpenAnimator.m", 869, "-[BKBookOpenAnimator _animateTransition]_block_invoke", "!self.interactive", CFSTR("Unexpected interactive transition"));
  if (objc_msgSend(*(id *)(a1 + 32), "opening"))
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 10) = 1;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookViewController"));
    v3 = objc_opt_respondsToSelector(v2, "prefersStatusBarHiddenDuringTransition");

    if ((v3 & 1) != 0)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookViewController"));
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 10) = objc_msgSend(v4, "prefersStatusBarHiddenDuringTransition");

    }
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
    objc_msgSend(v5, "setNeedsStatusBarAppearanceUpdate");

  }
  objc_msgSend(*(id *)(a1 + 32), "animateNonInteractive");
  if (objc_msgSend(*(id *)(a1 + 32), "opening"))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "defersBookViewSetupForOpening"))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookViewController"));
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_1001B47FC;
      v8[3] = &unk_1008E7338;
      v8[4] = *(_QWORD *)(a1 + 32);
      v9 = v6;
      v7 = v6;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

    }
  }
}

uint64_t sub_1001B47FC(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "_deferredSetupBookView");
  result = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "bookOpenTransitionDidEnd");
  if ((result & 1) != 0)
    return (uint64_t)_objc_msgSend(*(id *)(a1 + 40), "bookOpenTransitionDidEnd");
  return result;
}

void sub_1001B49E8(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "toViewController"));
  objc_msgSend(v1, "minifiedBarAnimatePrepareTransitionToViewController:", v2);

}

void sub_1001B4A28(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;
  _QWORD v20[4];
  id v21;
  uint64_t v22;
  _QWORD v23[4];
  id v24;
  uint64_t v25;

  v2 = *(double *)(a1 + 48);
  if (v2 > 0.0)
  {
    v3 = *(double *)(a1 + 56);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_1001B4B9C;
    v23[3] = &unk_1008E7338;
    v4 = v2 / v3;
    v5 = *(id *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    v24 = v5;
    v25 = v6;
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v23, 0.0, v4);

  }
  v7 = *(double *)(a1 + 64);
  if (v7 > 0.0)
  {
    v8 = (*(double *)(a1 + 56) - v7 + -0.01) / *(double *)(a1 + 56);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1001B4BDC;
    v20[3] = &unk_1008E7338;
    v9 = *(id *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    v21 = v9;
    v22 = v10;
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v20, v8, 0.01);
    v11 = *(double *)(a1 + 56);
    v12 = *(double *)(a1 + 64);
    v13 = (v11 - v12) / v11;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1001B4C1C;
    v17[3] = &unk_1008E7338;
    v14 = v12 / v11;
    v15 = *(id *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 40);
    v18 = v15;
    v19 = v16;
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v17, v13, v14);

  }
}

void sub_1001B4B9C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fromViewController"));
  objc_msgSend(v1, "minifiedBarAnimatorAnimateHideIfNeededFromViewController:", v2);

}

void sub_1001B4BDC(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "toViewController"));
  objc_msgSend(v1, "minifiedBarAnimatorPrepareShowIfNeededToViewController:", v2);

}

void sub_1001B4C1C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "toViewController"));
  objc_msgSend(v1, "minifiedBarAnimatorAnimateShowIfNeededToViewController:force:", v2, 0);

}

id sub_1001B57BC(uint64_t a1)
{
  BKApplicationShortcutController *v2;
  void *v3;

  v2 = -[BKApplicationShortcutController initWithLibrary:]([BKApplicationShortcutController alloc], "initWithLibrary:", *(_QWORD *)(a1 + 32));
  v3 = (void *)qword_1009F51C8;
  qword_1009F51C8 = (uint64_t)v2;

  objc_msgSend((id)qword_1009F51C8, "setAnnotationProvider:", *(_QWORD *)(a1 + 40));
  return objc_msgSend((id)qword_1009F51C8, "_updateShortcuts");
}

void sub_1001B59C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001B59E8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001B5A8C;
  v5[3] = &unk_1008E7F50;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1001B5A8C(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "appLaunchCoordinator"));

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001B5B68;
  v4[3] = &unk_1008EE0B8;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  v5 = *(id *)(a1 + 32);
  objc_msgSend(v3, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 512, CFSTR("update shortcuts"), v4);

  objc_destroyWeak(&v6);
}

void sub_1001B5B54(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001B5B68(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = *(void **)(a1 + 32);
  v6 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_performUpdateShortCutsWithCompletion:", v3);
  }
  else
  {
    v4 = objc_retainBlock(v3);
    v5 = v4;
    if (v4)
      (*((void (**)(id))v4 + 2))(v4);

  }
}

void sub_1001B5D20(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD v13[5];
  id v14;
  id v15;
  uint64_t *v16;
  _QWORD v17[4];
  id v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;

  v3 = a2;
  v20 = 0;
  v21 = &v20;
  v22 = 0x3032000000;
  v23 = sub_10004E510;
  v24 = sub_10004E2F0;
  v25 = objc_alloc_init((Class)NSMutableArray);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationProvider"));
  v5 = objc_msgSend(v4, "newManagedObjectContext");

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mostRecentlyOpenedBooks:inManagedObjectContext:", 3, v3));

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "valueForKey:", CFSTR("objectID")));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1001B5F3C;
    v17[3] = &unk_1008EE558;
    v18 = v5;
    v19 = &v20;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v17);

  }
  else
  {
    v8 = 0;
  }
  if (objc_msgSend((id)v21[5], "count"))
  {
    v9 = v21[5];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1001B613C;
    v13[3] = &unk_1008EE670;
    v10 = *(_QWORD *)(a1 + 32);
    v16 = &v20;
    v13[4] = v10;
    v14 = v8;
    v15 = *(id *)(a1 + 40);
    +[BCFutureValue futures:notify:](BCFutureValue, "futures:notify:", v9, v13);

  }
  else
  {
    v11 = objc_retainBlock(*(id *)(a1 + 40));
    v12 = v11;
    if (v11)
      (*((void (**)(id))v11 + 2))(v11);

  }
  _Block_object_dispose(&v20, 8);

}

void sub_1001B5F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001B5F3C(uint64_t a1, void *a2)
{
  id v3;
  BCMutableFutureValue *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  BCMutableFutureValue *v13;
  id v14;
  void **v15;
  uint64_t v16;
  id (*v17)(uint64_t, uint64_t);
  void *v18;
  id v19;
  BCMutableFutureValue *v20;

  v3 = a2;
  if (objc_msgSend(v3, "isValid"))
  {
    v4 = objc_opt_new(BCMutableFutureValue);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v6, off_1009CCFB8);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    if ((unint64_t)objc_msgSend(v7, "length") >= 0x81)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("…"), &stru_10091C438, 0));

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "substringToIndex:", 128));
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stringByAppendingString:", v9));

      v7 = (void *)v11;
    }
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, off_1009CCFC0);
    v12 = *(_QWORD *)(a1 + 32);
    v15 = _NSConcreteStackBlock;
    v16 = 3221225472;
    v17 = sub_1001B6104;
    v18 = &unk_1008EE530;
    v19 = v5;
    v20 = v4;
    v13 = v4;
    v14 = v5;
    +[BKBookProgressController progressStringForLibraryAsset:annotationMOC:completion:](BKBookProgressController, "progressStringForLibraryAsset:annotationMOC:completion:", v3, v12, &v15);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v13, v15, v16, v17, v18);

  }
}

id sub_1001B6104(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", a2, off_1009CCFC8);
  return objc_msgSend(*(id *)(a1 + 40), "set:error:", *(_QWORD *)(a1 + 32), 0);
}

void sub_1001B613C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6;
  uint64_t v7;

  v4[0] = _NSConcreteStackBlock;
  v4[2] = sub_1001B61D0;
  v4[3] = &unk_1008EE670;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  v4[4] = v2;
  v4[1] = 3221225472;
  v5 = v3;
  v6 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

}

void sub_1001B61D0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "valueForKey:", CFSTR("value")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bu_arrayByRemovingNSNulls"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentBookShortcuts"));
  v5 = objc_msgSend(v4, "isEqualToArray:", v3);

  if ((v5 & 1) != 0)
  {
    v6 = objc_retainBlock(*(id *)(a1 + 48));
    v7 = v6;
    if (v6)
      (*((void (**)(id))v6 + 2))(v6);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001B6328;
    v12[3] = &unk_1008EE648;
    v13 = *(id *)(a1 + 40);
    v10 = v3;
    v11 = *(_QWORD *)(a1 + 32);
    v14 = v10;
    v15 = v11;
    v16 = v8;
    v17 = *(id *)(a1 + 48);
    v7 = v8;
    objc_msgSend(v9, "performBackgroundReadOnlyBlock:", v12);

  }
}

void sub_1001B6328(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  int8x16_t v10;
  _QWORD v11[4];
  id v12;
  int8x16_t v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  uint64_t v18;
  id v19;

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1001B6460;
  v15[3] = &unk_1008EE620;
  v16 = a2;
  v3 = *(void **)(a1 + 32);
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v7 = v16;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v15);
  v8 = *(void **)(a1 + 56);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1001B6A04;
  v11[3] = &unk_1008E8EE0;
  v12 = v8;
  v10 = *(int8x16_t *)(a1 + 40);
  v9 = (id)v10.i64[0];
  v13 = vextq_s8(v10, v10, 8uLL);
  v14 = *(id *)(a1 + 64);
  +[BCFutureValue futures:notify:](BCFutureValue, "futures:notify:", v12, v11);

}

void sub_1001B6460(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  BCMutableFutureValue *v8;
  double v9;
  double v10;
  double v11;
  BCMutableFutureValue *v12;
  BCMutableFutureValue *v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  id v18;
  BCMutableFutureValue *v19;
  _QWORD v20[5];
  id v21;
  id v22;
  BCMutableFutureValue *v23;
  _QWORD *v24;
  unsigned __int8 v25;
  _QWORD v26[4];
  BCMutableFutureValue *v27;
  _QWORD v28[4];
  id v29;
  _QWORD *v30;
  _QWORD v31[5];
  id v32;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingObjectWithID:error:", v3, 0));
  if (objc_msgSend(v4, "isValid"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetID"));

    if (v5)
    {
      v31[0] = 0;
      v31[1] = v31;
      v31[2] = 0x3032000000;
      v31[3] = sub_10004E510;
      v31[4] = sub_10004E2F0;
      v32 = 0;
      v6 = *(void **)(a1 + 40);
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_1001B6708;
      v28[3] = &unk_1008EE580;
      v7 = v4;
      v29 = v7;
      v30 = v31;
      objc_msgSend(v6, "enumerateObjectsUsingBlock:", v28);
      v8 = objc_opt_new(BCMutableFutureValue);
      v9 = CGSizeScaleToScreen(64.0, 64.0);
      v11 = v10;
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_1001B67C0;
      v26[3] = &unk_1008EE5A8;
      v12 = v8;
      v27 = v12;
      +[BKLibraryManager fetchImageForAsset:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:](BKLibraryManager, "fetchImageForAsset:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:", v7, 0, 0, 0, v26, v9, v11);
      v13 = objc_opt_new(BCMutableFutureValue);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "title"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetID"));
      v16 = objc_msgSend(v7, "isAudiobook");
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_1001B681C;
      v20[3] = &unk_1008EE5F8;
      v20[4] = *(_QWORD *)(a1 + 48);
      v25 = v16;
      v17 = v15;
      v21 = v17;
      v18 = v14;
      v22 = v18;
      v24 = v31;
      v19 = v13;
      v23 = v19;
      -[BCMutableFutureValue get:](v12, "get:", v20);
      objc_msgSend(*(id *)(a1 + 56), "addObject:", v19);

      _Block_object_dispose(v31, 8);
    }
  }

}

void sub_1001B66D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001B6708(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", off_1009CCFB8));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
  v8 = objc_msgSend(v6, "isEqualToString:", v7);

  if (v8)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", off_1009CCFC8));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    if (a4)
      *a4 = 1;
  }

}

void sub_1001B67C0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(a2, "CGImage")));
  objc_msgSend(v2, "set:error:", v3, 0);

}

void sub_1001B681C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  id v6;
  id v7;
  __int128 v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;
  __int128 v13;
  char v14;

  v3 = a2;
  v4 = *(void **)(a1 + 40);
  v5 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 40);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001B68F4;
  block[3] = &unk_1008EE5D0;
  v14 = *(_BYTE *)(a1 + 72);
  block[1] = 3221225472;
  v10 = v3;
  v11 = v4;
  v12 = *(id *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 56);
  v6 = (id)v8;
  v13 = v8;
  v7 = v3;
  dispatch_async(v5, block);

}

void sub_1001B68F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSMutableDictionary *v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    v3 = objc_claimAutoreleasedReturnValue(+[UIApplicationShortcutIcon iconWithCustomImage:isTemplate:](UIApplicationShortcutIcon, "iconWithCustomImage:isTemplate:", v2, 0));
  else
    v3 = objc_claimAutoreleasedReturnValue(+[UIApplicationShortcutIcon iconWithTemplateImageName:](UIApplicationShortcutIcon, "iconWithTemplateImageName:", CFSTR("PlaceholderNormal")));
  v7 = (id)v3;
  v4 = objc_opt_new(NSMutableDictionary);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 72)));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v5, CFSTR("isAudiobook"));

  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("assetID"));
  v6 = objc_msgSend(objc_alloc((Class)UIApplicationShortcutItem), "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", CFSTR("com.apple.iBooks.assetReading"), *(_QWORD *)(a1 + 48), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v7, v4);
  objc_msgSend(*(id *)(a1 + 56), "set:error:", v6, 0);

}

void sub_1001B6A04(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("value")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bu_arrayByRemovingNSNulls"));

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001B6AD4;
  block[3] = &unk_1008E72C0;
  v4 = v3;
  v8 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_msgSend(*(id *)(a1 + 40), "setCurrentBookShortcuts:", *(_QWORD *)(a1 + 48));
  v5 = objc_retainBlock(*(id *)(a1 + 56));
  v6 = v5;
  if (v5)
    (*((void (**)(id))v5 + 2))(v5);

}

void sub_1001B6AD4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v2, "setShortcutItems:", *(_QWORD *)(a1 + 32));

}

id sub_1001B6D9C()
{
  if (qword_1009F51E0 != -1)
    dispatch_once(&qword_1009F51E0, &stru_1008EE690);
  return (id)qword_1009F51D8;
}

void sub_1001B6DDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKAudiobooks.NowPlaying");
  v2 = (void *)qword_1009F51D8;
  qword_1009F51D8 = (uint64_t)v1;

}

uint64_t sub_1001B6F60(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 32);
  if (*(_DWORD *)(v1 + 8) == *(_DWORD *)(result + 48) && *(_DWORD *)(v1 + 24) == *(_DWORD *)(result + 52))
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 40) + 16))();
  return result;
}

void sub_1001B7054(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void (**v7)(void);

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "testDelegate"));
  objc_msgSend(v3, "stopTestWithTimeout");

  v4 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "testDelegate"));
  objc_msgSend(v5, "terminate");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestTimeout"));
  if (v6)
  {
    v7 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestTimeout"));
    v7[2]();

  }
  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 0;
}

void sub_1001B7188(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;
  void *v4;
  unsigned int v5;
  _DWORD *v6;
  id *v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[5];

  v1 = *(_QWORD *)(a1 + 32);
  if (!*(_DWORD *)(v1 + 8))
  {
    WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "testDelegate"));
    v5 = objc_msgSend(v4, "hasHandler");

    v6 = *(_DWORD **)(a1 + 32);
    if (v5)
    {
      objc_msgSend(v6, "startTest");
    }
    else
    {
      v6[2] = 1;
      v7 = *(id **)(a1 + 32);
      v8 = objc_loadWeakRetained(v7 + 2);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "testDelegate"));
      v10 = objc_msgSend(v9, "handlerTimeout");
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1001B7278;
      v11[3] = &unk_1008E72C0;
      v11[4] = *(_QWORD *)(a1 + 32);
      objc_msgSend(v7, "sleep:completion:", v10, v11);

    }
  }
}

void sub_1001B7278(uint64_t a1)
{
  void *v2;
  void (**v3)(void);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onHandlerTimeout"));

  if (v2)
  {
    v3 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onHandlerTimeout"));
    v3[2]();

  }
  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 0;
}

_DWORD *sub_1001B7354(uint64_t a1)
{
  _DWORD *result;

  result = *(_DWORD **)(a1 + 32);
  if (result[2] == 1)
    return objc_msgSend(result, "startTest");
  return result;
}

void sub_1001B73F0(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;
  void *v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v1 + 8) == 2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "testDelegate"));
    objc_msgSend(v4, "terminate");

    v5 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "testDelegate"));
    v7 = objc_msgSend(v6, "didTestFail");

    v8 = *(void **)(a1 + 32);
    if (v7)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "onTestError"));

      if (v9)
      {
        v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestError"));
LABEL_7:
        v12 = (void *)v10;
        (*(void (**)(void))(v10 + 16))();

      }
    }
    else
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "onTestFinished"));

      if (v11)
      {
        v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestFinished"));
        goto LABEL_7;
      }
    }
    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 0;
  }
}

void sub_1001B7704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001B772C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void (**v8)(id, void *);

  v8 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKContextMenuProvider sharedProvider](BKContextMenuProvider, "sharedProvider"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bookshelfCVC"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_dataModelForLibraryAsset:fromSourceView:inCollection:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "menuElementsForViewController:dataModel:", v5, v6));

    v8[2](v8, v7);
  }
  else
  {
    v8[2](v8, &__NSArray0__struct);
  }

}

void sub_1001B7DEC(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryMutableAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), a2));
  v21 = BKLibraryAssetMarkedLocation;
  v22 = BALocationTypeFromLibraryFinish;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v22, &v21, 1));
  objc_msgSend(v3, "setFinishedStateUserSetsFinished:userInfo:", 0, v4);

  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dateFinished"));
  objc_msgSend(v5, "willMarkAsset:finished:finishedDate:", v6, 1, v7);

  if (objc_msgSend(*(id *)(a1 + 56), "isOwned"))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "storeID"));
    if (objc_msgSend(v8, "length"))
      v9 = 1;
    else
      v9 = 2;

  }
  else
  {
    v9 = 0;
  }
  v10 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)objc_msgSend(*(id *)(a1 + 56), "contentType"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v12 = objc_msgSend(v11, "seriesTypeForContentID:", *(_QWORD *)(a1 + 40));

  if (objc_msgSend(v3, "isAudiobook"))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hasRACSupport"));
    if (objc_msgSend(v13, "BOOLValue"))
      v14 = 1;
    else
      v14 = 2;

  }
  else
  {
    v14 = 0;
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v16 = *(_QWORD *)(a1 + 40);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "supplementalContentAssets"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v17, "count")));
  objc_msgSend(v15, "emitMarkAsFinishedEventWithTracker:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", 0, v16, v9, v10, v18, v12, v14);

  v19 = *(void **)(a1 + 32);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1001B805C;
  v20[3] = &unk_1008E7DA0;
  v20[4] = *(_QWORD *)(a1 + 64);
  objc_msgSend(v19, "performBlockOnWorkerQueue:", v20);

}

void sub_1001B805C(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001B80B8;
  block[3] = &unk_1008E72C0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001B80B8(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfCVC"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layout"));
  objc_msgSend(v1, "invalidateLayout");

}

void sub_1001B8234(uint64_t a1, char a2)
{
  void *v3;
  id v4;

  if ((a2 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "_showActionNotAvailableBecauseContentNotAvailableAlert");
  }
  else
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(+[BSUIStoreServices sharedInstance](BSUIStoreServices, "sharedInstance"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
    objc_msgSend(v4, "showWriteAReviewForStoreId:transaction:", v3, 0);

  }
}

uint64_t sub_1001B838C(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;

  if ((a2 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 48), "_showActionNotAvailableBecauseContentNotAvailableAlert");
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 64)));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001B8498;
    v6[3] = &unk_1008EE708;
    v7 = *(id *)(a1 + 32);
    v8 = *(id *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 64);
    +[BSUICloudAssetRatingsManager updateRating:title:body:itemId:shouldSuppressMetrics:completion:](BSUICloudAssetRatingsManager, "updateRating:title:body:itemId:shouldSuppressMetrics:completion:", v3, 0, 0, v4, 0, v6);

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void sub_1001B8498(uint64_t a1, char a2)
{
  _QWORD v3[4];
  id v4;
  id v5;
  uint64_t v6;
  char v7;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001B852C;
  v3[3] = &unk_1008EE6E0;
  v7 = a2;
  v4 = *(id *)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

}

void sub_1001B852C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  if (*(_BYTE *)(a1 + 56))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "isOwned"))
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
      if (objc_msgSend(v2, "length"))
        v3 = 1;
      else
        v3 = 2;

    }
    else
    {
      v3 = 0;
    }
    v4 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)objc_msgSend(*(id *)(a1 + 32), "contentType"));
    if (objc_msgSend(*(id *)(a1 + 32), "isAudiobook"))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hasRACSupport"));
      if (objc_msgSend(v5, "BOOLValue"))
        v6 = 1;
      else
        v6 = 2;

    }
    else
    {
      v6 = 0;
    }
    v12 = (id)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ba_analyticsTracker"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 48)));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalContentAssets"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v10, "count")));
    objc_msgSend(v12, "emitRatingEventWithTracker:rating:contentID:contentAcquisitionType:contentType:supplementalContentCount:productionType:", v7, v8, v9, v3, v4, v11, v6);

  }
}

void sub_1001B8AA0(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(id, void *, _QWORD);

  v4 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));
    v4[2](v4, v3, 0);

  }
}

void sub_1001B8F0C(uint64_t a1)
{
  void *v2;
  void (**v3)(id, id, _QWORD);
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  v3 = (void (**)(id, id, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
  if (v4)
  {
    if (v3)
      v3[2](v3, v4, 0);
  }
  else if (v3)
  {
    v3[2](v3, 0, 0);
  }

}

void sub_1001B905C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  __CFString *v4;
  void *v5;
  __CFString *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  if (v10)
  {
    v3 = objc_msgSend(v10, "contentType");
    v4 = CFSTR("Book");
    if (v3 == 6)
      v4 = CFSTR("Media");
    v5 = *(void **)(a1 + 32);
    v6 = v4;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "connection"));
    objc_msgSend(v7, "prioritizeAsset:forDataclass:", *(_QWORD *)(a1 + 40), v6);

  }
  v8 = objc_retainBlock(*(id *)(a1 + 48));
  v9 = v8;
  if (v8)
    (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);

}

void sub_1001B913C(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  float v13;
  float v14;
  void *v15;
  void *v16;
  id v17;

  v17 = a2;
  v3 = (void *)a1[4];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "dataclass"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetType"));
  LODWORD(v3) = objc_msgSend(v3, "_supportsDataclass:assetType:", v4, v5);

  v6 = v17;
  if ((_DWORD)v3)
  {
    v7 = (void *)a1[5];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "dataclass"));
    objc_msgSend(v7, "addObject:", v8);

    v9 = (void *)a1[6];
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "identifier"));
    objc_msgSend(v9, "setObject:forKey:", v17, v10);

    v11 = (void *)a1[7];
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "identifier"));
    objc_msgSend(v11, "addObject:", v12);

    objc_msgSend(v17, "downloadProgress");
    if (v13 >= 1.0)
    {
      v15 = (void *)a1[8];
      v6 = v17;
      goto LABEL_6;
    }
    objc_msgSend(v17, "downloadProgress");
    v6 = v17;
    if (v14 > 0.0)
    {
      v15 = (void *)a1[9];
LABEL_6:
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
      objc_msgSend(v15, "addObject:", v16);

      v6 = v17;
    }
  }

}

void sub_1001B9278(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;

  v3 = a2;
  v4 = objc_alloc((Class)BKLibraryDownloadStatus);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
  if (v5)
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
  else
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "temporaryAssetID"));
  v7 = (void *)v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "atAsset"));
  v9 = objc_msgSend(v8, "totalBytes");
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "atAsset"));
  v11 = objc_msgSend(v4, "initWithAssetID:state:progressValue:timeRemaining:bytesDownloaded:fileSize:", v7, 5, 0, v9, objc_msgSend(v10, "totalBytes"), 1.0);

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v13 = BKLibraryDownloadStatusNotification;
  v14 = *(_QWORD *)(a1 + 32);
  v17 = BKLibraryDownloadStatusKey;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v11));
  v18 = v15;
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v18, &v17, 1));
  objc_msgSend(v12, "postNotificationName:object:userInfo:", v13, v14, v16);

}

void sub_1001B9424(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  float v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;

  v5 = a3;
  v6 = *(void **)(a1 + 32);
  v7 = a2;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "atAssetsInFlight"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v7));

  if (v9)
  {
    v10 = BKATAssetLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      sub_1006A42FC(v5, v11);

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "assetID"));
    if (v12)
      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "assetID"));
    else
      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "temporaryAssetID"));
    v14 = (void *)v13;

    objc_msgSend(v5, "downloadProgress");
    if (v15 != 0.0)
    {
      v16 = objc_msgSend(objc_alloc((Class)BKLibraryDownloadStatus), "initWithAssetID:state:progressValue:timeRemaining:bytesDownloaded:fileSize:", v14, 4, 1, (unint64_t)(v15 * (double)(unint64_t)objc_msgSend(v5, "totalBytes")), objc_msgSend(v5, "totalBytes"), v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
      v18 = BKLibraryDownloadStatusNotification;
      v19 = *(_QWORD *)(a1 + 32);
      v22 = BKLibraryDownloadStatusKey;
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v16));
      v23 = v20;
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1));
      objc_msgSend(v17, "postNotificationName:object:userInfo:", v18, v19, v21);

    }
  }

}

void sub_1001B9704(uint64_t a1)
{
  void (**v1)(_QWORD, _QWORD);
  id v2;

  v1 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAirTrafficEndedHandler"));
  if (v1)
  {
    v2 = v1;
    v1[2](v1, 1);
    v1 = (void (**)(_QWORD, _QWORD))v2;
  }

}

void sub_1001B97EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  dispatch_time_t v15;
  _QWORD block[5];

  v3 = BKATAssetLog(a1, a2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    sub_1006A43D0(a1, v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetIDs"));
  if (objc_msgSend(v5, "count"))
  {

  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
    v7 = objc_msgSend(v6, "count");

    if (!v7)
      goto LABEL_9;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allValues"));

  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAirTrafficEndedHandler"));
  v11 = (void *)v10;
  if (v10)
    (*(void (**)(uint64_t, _QWORD))(v10 + 16))(v10, 0);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v12, "libraryDataSource:removedAssets:", *(_QWORD *)(a1 + 32), v9);

LABEL_9:
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetIDs"));
  objc_msgSend(v13, "removeAllObjects");

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
  objc_msgSend(v14, "removeAllObjects");

  v15 = dispatch_time(0, 1500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001B9978;
  block[3] = &unk_1008E72C0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v15, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001B9978(uint64_t a1)
{
  void (**v1)(_QWORD, _QWORD);
  id v2;

  v1 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAirTrafficEndedHandler"));
  if (v1)
  {
    v2 = v1;
    v1[2](v1, 0);
    v1 = (void (**)(_QWORD, _QWORD))v2;
  }

}

void sub_1001BB2F8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "layoutIfNeeded");

}

void sub_1001BB328(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1001BB330(uint64_t a1)
{
  id v2;
  id v3;
  _QWORD v4[4];
  id v5;

  v2 = objc_alloc_init((Class)TUIMutableTransactionOptions);
  objc_msgSend(v2, "setAnimate:", 1);
  objc_msgSend(v2, "setDuration:", 0.6);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001BB3E8;
  v4[3] = &unk_1008EE7F8;
  v5 = *(id *)(a1 + 32);
  v3 = +[TUITransaction currentOrNewTransactionWithOptions:block:](TUITransaction, "currentOrNewTransactionWithOptions:block:", v2, v4);

}

id sub_1001BB3E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_1001BB3F0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 != (id)1)
    objc_msgSend(v5, "setHorizontalSizeClass:", 1);

}

void sub_1001BB450(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001BB4D8;
  v2[3] = &unk_1008E7338;
  v3 = *(id *)(a1 + 32);
  v4 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

}

void sub_1001BB4D8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "cardStackTransitioningCardContentFinalizePreparationForOpen");
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1001BB500(uint64_t a1)
{
  int64_t v2;
  NSObject *v3;
  dispatch_time_t v4;
  intptr_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_signpost_id_t v9;
  const __CFString *v10;
  _QWORD block[4];
  id v12;
  uint8_t buf[4];
  const __CFString *v14;

  if (*(_BYTE *)(a1 + 56))
    v2 = 5000000000;
  else
    v2 = 300000000;
  v3 = *(NSObject **)(a1 + 32);
  v4 = dispatch_time(0, v2);
  v5 = dispatch_group_wait(v3, v4);
  v6 = BCAugmentedExperienceSignpost();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 48);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    v10 = CFSTR("YES");
    if (!v5)
      v10 = CFSTR("NO");
    *(_DWORD *)buf = 138412290;
    v14 = v10;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "EOB.CardAnimation.prepareForOpen.wait", "Timeout: %@", buf, 0xCu);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001BB668;
  block[3] = &unk_1008E7818;
  v12 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001BB668(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  kdebug_trace(725354652, 0, 0, 0, 0);
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1001BB6C4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  os_signpost_id_t v5;
  uint8_t v6[16];

  v2 = BCAugmentedExperienceSignpost();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 32);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)v6 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_END, v5, "EOB.CardAnimation.prepareForOpen", "", v6, 2u);
  }

}

id sub_1001BB7A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setupCardDropShadowForPresented:", 1);
}

void sub_1001BBA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 240), 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001BBA68(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  _BKEndOfBookCardTransitionSnapshotView *v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  id v61;
  id v62;
  double Center;
  double v64;
  double v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  void *v70;
  void *v71;
  void *v72;
  double CenterNoRounding;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  void *v79;
  CGAffineTransform v80;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "compactArtworkSource"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "createCardArtworkSource"));
  objc_msgSend(*(id *)(a1 + 32), "setCardArtworkSource:", v3);
  if (objc_msgSend(*(id *)(a1 + 32), "isCoverTransition"))
    objc_msgSend(*(id *)(a1 + 32), "hideCovers");
  objc_msgSend(*(id *)(a1 + 40), "updateCardSize");
  objc_msgSend(*(id *)(a1 + 32), "_cardInitialTopOffset");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v4;
  if (*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) != 0.0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cardNavigationController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
    objc_msgSend(v6, "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v15 = v10 - *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cardNavigationController"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "view"));
    objc_msgSend(v17, "setFrame:", v8, v15, v12, v14);

  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cardNavigationController"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "view"));
  objc_msgSend(v19, "setAlpha:", 0.0);

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "closeButton"));
  objc_msgSend(v20, "setAlpha:", 0.0);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v21, "layoutSubviews");

  v22 = -[_BKEndOfBookCardTransitionSnapshotView initWithCompactViewController:]([_BKEndOfBookCardTransitionSnapshotView alloc], "initWithCompactViewController:", *(_QWORD *)(a1 + 48));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v23, "insertSubview:atIndex:", v22, 0);

  objc_msgSend(*(id *)(a1 + 32), "setSnapshotView:", v22);
  -[_BKEndOfBookCardTransitionSnapshotView layoutSubviews](v22, "layoutSubviews");
  objc_msgSend(*(id *)(a1 + 32), "_setupCardDropShadowForPresented:", 0);
  if (objc_msgSend(*(id *)(a1 + 32), "isCoverTransition"))
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contentView"));
    objc_msgSend(v2, "frame");
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "referenceView"));
    objc_msgSend(v24, "convertRect:fromView:", v33, v26, v28, v30, v32);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v41 = v40;

    v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    objc_msgSend(v3, "frame");
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "referenceView"));
    objc_msgSend(v42, "convertRect:fromView:", v51, v44, v46, v48, v50);
    v53 = v52;
    v55 = v54;
    v57 = v56;
    v59 = v58;

    v60 = v55 + *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    v61 = objc_alloc_init((Class)BCSheetTransitionCoverController);
    v62 = objc_msgSend(*(id *)(a1 + 32), "isCompositeCompactArtwork");
    if ((_DWORD)v62)
    {
      Center = CGRectGetCenter(v62);
      v65 = v64;
      v66 = CGSizeScaledToFillInSize(v57, v59, v39, v41);
      v35 = CGRectMakeWithCenterAndSize(v66, Center, v65);
      v37 = v67;
      v39 = v68;
      v41 = v69;
      objc_msgSend(v61, "setupWithArtworkSource:", v3);
      v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v61, "coverView"));
      objc_msgSend(v70, "setAlpha:", 0.0);

    }
    else
    {
      objc_msgSend(v61, "setupWithArtworkSource:cardArtworkSource:isDismiss:", v2, v3, 0);
    }
    objc_msgSend(v61, "configureCoverViewWithFrame:", v35, v37, v39, v41);
    v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v61, "coverView"));
    objc_msgSend(v71, "addSubview:", v72);

    CenterNoRounding = CGRectGetCenterNoRounding(objc_msgSend(*(id *)(a1 + 32), "setCoverController:", v61), v53, v60, v57, v59);
    v74 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    *(double *)(v74 + 32) = CenterNoRounding;
    *(_QWORD *)(v74 + 40) = v75;
    sub_1001BBEF4(&v80, v35, v37, v39, v41, v53, v60, v57, v59);
    v76 = *(_OWORD **)(*(_QWORD *)(a1 + 72) + 8);
    v78 = *(_OWORD *)&v80.c;
    v77 = *(_OWORD *)&v80.tx;
    v76[2] = *(_OWORD *)&v80.a;
    v76[3] = v78;
    v76[4] = v77;

  }
  v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  objc_msgSend(v79, "setHidden:", 1);

}

CGAffineTransform *sub_1001BBEF4@<X0>(CGAffineTransform *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double Width;
  CGFloat v18;
  double Height;
  CGFloat v20;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v24.origin.x = a6;
  v24.origin.y = a7;
  v24.size.width = a8;
  v24.size.height = a9;
  Width = CGRectGetWidth(v24);
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  v18 = Width / CGRectGetWidth(v25);
  v26.origin.x = a6;
  v26.origin.y = a7;
  v26.size.width = a8;
  v26.size.height = a9;
  Height = CGRectGetHeight(v26);
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  v20 = Height / CGRectGetHeight(v27);
  return CGAffineTransformMakeScale(a1, v18, v20);
}

id sub_1001BBFC0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_animateContentCrossfade:", 1);
}

void sub_1001BC2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001BC2F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  _BKEndOfBookCardTransitionSnapshotView *v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  id v52;
  id v53;
  double Center;
  double v55;
  double v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  void *v61;
  void *v62;
  double CenterNoRounding;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  __int128 v67;
  __int128 v68;
  CGAffineTransform v69;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "createCompactArtworkSource"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "createCardArtworkSource"));
  objc_msgSend(*(id *)(a1 + 32), "setCompactArtworkSource:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "im_firstVisibleChildConformingToProtocol:includePresented:", &OBJC_PROTOCOL___BCSheetTransitioningArtworkHost, 0));
  v5 = v4;
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && objc_msgSend(v4, "visibilityOfArtworkSource:", v3) != (id)2)
    objc_msgSend(*(id *)(a1 + 32), "setCardArtworkSource:", v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardArtworkSource"));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "transitioningCardContent"));
  objc_msgSend(*(id *)(a1 + 32), "setCardContent:", v8);

  if (objc_msgSend(*(id *)(a1 + 32), "isCoverTransition"))
    objc_msgSend(*(id *)(a1 + 32), "hideCovers");
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardContent"));
  objc_msgSend(v9, "cardStackTransitioningCardContentPrepareForDismiss");

  v10 = -[_BKEndOfBookCardTransitionSnapshotView initWithCompactViewController:]([_BKEndOfBookCardTransitionSnapshotView alloc], "initWithCompactViewController:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "cardSize");
  -[_BKEndOfBookCardTransitionSnapshotView setFrame:](v10, "setFrame:", CGRectMakeWithSize(v11, v12));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v13, "insertSubview:atIndex:", v10, 0);

  objc_msgSend(*(id *)(a1 + 32), "setSnapshotView:", v10);
  objc_msgSend(*(id *)(a1 + 32), "_cardInitialTopOffset");
  -[_BKEndOfBookCardTransitionSnapshotView setSnapshotTopOffset:](v10, "setSnapshotTopOffset:");
  v14 = (void *)objc_claimAutoreleasedReturnValue(-[_BKEndOfBookCardTransitionSnapshotView snapshot](v10, "snapshot"));
  objc_msgSend(v14, "setAlpha:", 0.0);

  v15 = (void *)objc_claimAutoreleasedReturnValue(-[_BKEndOfBookCardTransitionSnapshotView closeButtonView](v10, "closeButtonView"));
  objc_msgSend(v15, "setAlpha:", 0.0);

  -[_BKEndOfBookCardTransitionSnapshotView layoutSubviews](v10, "layoutSubviews");
  if (objc_msgSend(*(id *)(a1 + 32), "isCoverTransition"))
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contentView"));
    objc_msgSend(v2, "frame");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "referenceView"));
    objc_msgSend(v16, "convertRect:fromView:", v25, v18, v20, v22, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    objc_msgSend(v7, "frame");
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "referenceView"));
    objc_msgSend(v34, "convertRect:fromView:", v43, v36, v38, v40, v42);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;

    v52 = objc_alloc_init((Class)BCSheetTransitionCoverController);
    v53 = objc_msgSend(*(id *)(a1 + 32), "isCompositeCompactArtwork");
    if ((_DWORD)v53)
    {
      Center = CGRectGetCenter(v53);
      v56 = v55;
      CGSizeScaledToFillInSize(v49, v51, v31, v33);
      v27 = CGRectMakeWithCenterAndSize(v57, Center, v56);
      v29 = v58;
      v31 = v59;
      v33 = v60;
      objc_msgSend(v52, "setupWithArtworkSource:", v7);
    }
    else
    {
      objc_msgSend(v52, "setupWithArtworkSource:cardArtworkSource:isDismiss:", v2, v7, 1);
    }
    objc_msgSend(v52, "configureCoverViewWithFrame:", v45, v47, v49, v51);
    v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v52, "coverView"));
    objc_msgSend(v61, "addSubview:", v62);

    CenterNoRounding = CGRectGetCenterNoRounding(objc_msgSend(*(id *)(a1 + 32), "setCoverController:", v52), v27, v29, v31, v33);
    v64 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    *(double *)(v64 + 32) = CenterNoRounding;
    *(_QWORD *)(v64 + 40) = v65;
    sub_1001BBEF4(&v69, v45, v47, v49, v51, v27, v29, v31, v33);
    v66 = *(_OWORD **)(*(_QWORD *)(a1 + 64) + 8);
    v68 = *(_OWORD *)&v69.c;
    v67 = *(_OWORD *)&v69.tx;
    v66[2] = *(_OWORD *)&v69.a;
    v66[3] = v68;
    v66[4] = v67;

  }
}

id sub_1001BC710(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_animateContentCrossfade:", 0);
}

void sub_1001BCB18(uint64_t a1)
{
  double v2;
  void *v3;
  void *v4;
  double v5;
  void *v6;
  id v7;

  if (*(_BYTE *)(a1 + 40))
    v2 = 0.0;
  else
    v2 = 1.0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshotView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "snapshot"));
  objc_msgSend(v4, "setAlpha:", v2);

  if (*(_BYTE *)(a1 + 40))
    v5 = 0.0;
  else
    v5 = 1.0;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshotView"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "closeButtonView"));
  objc_msgSend(v6, "setAlpha:", v5);

}

void sub_1001BCBCC(uint64_t a1, double a2)
{
  double v3;
  void *v4;
  void *v5;
  void *v6;
  unint64_t v7;
  double v8;
  void *v9;
  void *v10;
  unint64_t v11;
  double v12;
  void *v13;
  id v14;

  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  v3 = (double)*(unint64_t *)&a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cardNavigationController"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  objc_msgSend(v6, "setAlpha:", v3);

  LOBYTE(v7) = *(_BYTE *)(a1 + 40);
  v8 = (double)v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardViewController"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "closeButton"));
  objc_msgSend(v10, "setAlpha:", v8);

  if (objc_msgSend(*(id *)(a1 + 32), "isCompositeCompactArtwork"))
  {
    LOBYTE(v11) = *(_BYTE *)(a1 + 40);
    v12 = (double)v11;
    v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverController"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "coverView"));
    objc_msgSend(v13, "setAlpha:", v12);

  }
}

void sub_1001BD348(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *);

  v3 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buyParams"));
    v3[2](v3, v2);

  }
}

void sub_1001BD994(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithPermanentOrTemporaryAssetID:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dataSourceIdentifier"));
  if (!objc_msgSend(v3, "isEqualToString:", CFSTR("com.apple.ibooks.plist.untethered")))
  {
LABEL_6:

    goto LABEL_7;
  }
  v4 = objc_msgSend(v8, "state");

  if (v4 == 1)
  {
    v5 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 16));
    v6 = v5;
    if (v5)
      (*((void (**)(id, id))v5 + 2))(v5, v8);

    v7 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(v7 + 16);
    *(_QWORD *)(v7 + 16) = 0;
    goto LABEL_6;
  }
LABEL_7:

}

void sub_1001BDE3C(id a1)
{
  BKTestDriver *v1;
  void *v2;

  v1 = objc_alloc_init(BKTestDriver);
  v2 = (void *)qword_1009F51E8;
  qword_1009F51E8 = (uint64_t)v1;

}

void sub_1001BEC5C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString *v5;
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = NSStringFromSelector(*(SEL *)(a1 + 64));
  v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v1, "recordPaginationInfo:info:renderTree:pageCount:errorLabel:", CFSTR("presentation"), v2, v3, v4, v6);

}

void sub_1001BED94(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString *v5;
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = NSStringFromSelector(*(SEL *)(a1 + 64));
  v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v1, "recordPaginationInfo:info:renderTree:pageCount:errorLabel:", CFSTR("pagination"), v2, v3, v4, v6);

}

void sub_1001BEE9C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSString *v4;
  void *v5;
  void *v6;
  void *v7;
  NSString *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSString *v14;
  void *v15;
  void *v16;
  const __CFString *v17;
  void *v18;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = NSStringFromSelector(*(SEL *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "getBookInfo:errorLabel:", v3, v5));

  if (v6)
  {
    v7 = *(void **)(a1 + 32);
    v8 = NSStringFromSelector(*(SEL *)(a1 + 48));
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "getValueForKey:from:errorLabel:", CFSTR("pagination-result-path"), v6, v9));

    if (v10)
    {
      v11 = *(void **)(a1 + 32);
      v17 = CFSTR("fail");
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 0));
      v18 = v12;
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v18, &v17, 1));
      v14 = NSStringFromSelector(*(SEL *)(a1 + 48));
      v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      objc_msgSend(v11, "createJsonFile:content:errorLabel:", v10, v13, v15);

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "machine"));
      objc_msgSend(v16, "paginationDidEnd");

    }
  }

}

id sub_1001BF0C4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBookController:", *(_QWORD *)(a1 + 40));
}

id sub_1001BF140(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBookController:", 0);
}

void sub_1001BF1E8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryController"));
  v3 = *(void **)(a1 + 40);

  if (v2 != v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setLibraryController:", *(_QWORD *)(a1 + 40));
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "predicateForLocalLibraryAssets"));
      v6 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
      objc_msgSend(v6, "setPredicate:", v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "uiChildContext"));
      v10 = 0;
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v6, &v10));
      v9 = v10;
      objc_msgSend(*(id *)(a1 + 32), "setBookList:", v8);

    }
  }
}

void sub_1001BF4E0(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    WeakRetained = v3;
  }

}

void sub_1001BF538(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "currentSceneController"));
  if (!v1)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKTestDriver.m", 394, "-[BKTestDriver goToLibrary]_block_invoke", "currentSceneController", 0);
  v2 = objc_msgSend(v1, "newShowURLTransaction");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "libraryCollectionPresenter"));
  objc_msgSend(v3, "showLibraryWithTransaction:", v2);

}

void sub_1001BF664(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookList"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", objc_msgSend(*(id *)(a1 + 32), "currentBook")));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "currentSceneController"));
  if (!v4)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKTestDriver.m", 408, "-[BKTestDriver openNextBook]_block_invoke", "currentSceneController", 0);
  v5 = objc_msgSend(v4, "newShowAssetTransaction");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookPresenter"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));
  objc_msgSend(v6, "showAssetWithTransaction:assetID:location:options:completion:", v5, v7, 0, 0, 0);

}

void sub_1001BF7F8(uint64_t a1)
{
  int v1;
  void *v2;
  id v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "machine"));
  v3 = v2;
  if (v1)
    objc_msgSend(v2, "newPageIsReady");
  else
    objc_msgSend(v2, "pageTurnFailed");

}

void sub_1001BF898(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bookController"));
  if (v4)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
    objc_msgSend(v2, "processPageTurnResult:", objc_msgSend(v3, "turnPages:animated:", 1, 1));

  }
  else
  {
    objc_msgSend(v2, "processPageTurnResult:", 0);
  }

}

void sub_1001BF96C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
  objc_msgSend(v2, "turnToPageNumber:animated:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), 1);

  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "queue"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001BFA18;
  v5[3] = &unk_1008E72C0;
  v5[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v3, "dispatchInQueue:async:", v4, v5);

}

void sub_1001BFA18(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "machine"));
  objc_msgSend(v1, "firstPageRequested");

}

void sub_1001BFAE0(uint64_t a1)
{
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  int v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  NSString *v11;
  void *v12;
  void *v13;
  void *v14;
  NSString *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  __CFString *v21;
  unint64_t v22;
  __CFString *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  UIImage *v30;
  NSData *v31;
  void *v32;
  NSString *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  UIImage *v40;
  NSData *v41;
  void *v42;
  NSString *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  id v47;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
    v4 = (char *)objc_msgSend(v3, "currentPages");

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
    objc_msgSend(v5, "currentPages");
    v7 = v6;

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
    v47 = (id)objc_claimAutoreleasedReturnValue(+[AETestDriver getBookKeyWithBookController:](AETestDriver, "getBookKeyWithBookController:", v8));

    v9 = v47;
    if (v47)
    {
      v10 = *(void **)(a1 + 32);
      v11 = NSStringFromSelector(*(SEL *)(a1 + 40));
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "getBookInfo:errorLabel:", v47, v12));

      if (v13)
      {
        v14 = *(void **)(a1 + 32);
        v15 = NSStringFromSelector(*(SEL *)(a1 + 40));
        v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "getValueForKey:from:errorLabel:", CFSTR("pages-path"), v13, v16));

        if (v17)
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookController"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver getSnapshotsWithBookController:](AETestDriver, "getSnapshotsWithBookController:", v18));

          if (objc_msgSend(v19, "count") == (id)1)
          {
            v20 = v19;
            if (v7 < 1)
            {
              v23 = CFSTR("page");
            }
            else
            {
              v21 = CFSTR("page");
              v22 = (unint64_t)v4;
              do
              {
                v23 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@_%d"), v21, v22));

                v22 = (v22 + 1);
                v21 = v23;
                --v7;
              }
              while (v7);
            }
            v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@/%@.png"), v17, v23));

            v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("pages")));
            objc_msgSend(v38, "addObject:", v37);

            v39 = *(void **)(a1 + 32);
            v19 = v20;
            v40 = (UIImage *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "firstObject"));
            v41 = UIImagePNGRepresentation(v40);
            v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
            v43 = NSStringFromSelector(*(SEL *)(a1 + 40));
            v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
            objc_msgSend(v39, "createFile:content:errorLabel:", v37, v42, v44);

          }
          else if (objc_msgSend(v19, "count") == (id)v7 && v7 >= 1)
          {
            v24 = 0;
            v45 = v7;
            v46 = v4;
            do
            {
              v25 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@/page_%d.png"), v17, &v4[v24]));
              v26 = v17;
              v27 = (void *)v25;
              v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("pages")));
              objc_msgSend(v28, "addObject:", v27);

              v29 = *(void **)(a1 + 32);
              v30 = (UIImage *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectAtIndex:", v24));
              v31 = UIImagePNGRepresentation(v30);
              v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
              v33 = NSStringFromSelector(*(SEL *)(a1 + 40));
              v34 = v13;
              v35 = v19;
              v36 = (void *)objc_claimAutoreleasedReturnValue(v33);
              objc_msgSend(v29, "createFile:content:errorLabel:", v27, v32, v36);

              v19 = v35;
              v13 = v34;

              v17 = v26;
              v4 = v46;
              ++v24;
            }
            while (v45 != v24);
          }

        }
      }

      v9 = v47;
    }

  }
}

void sub_1001C0398(id a1)
{
  BKAuthenticationAlertRequest *v1;
  void *v2;

  v1 = objc_alloc_init(BKAuthenticationAlertRequest);
  v2 = (void *)qword_1009F51F8;
  qword_1009F51F8 = (uint64_t)v1;

}

void sub_1001C04C8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v6) + 16))(*(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v6));
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 8);
  *(_QWORD *)(v7 + 8) = 0;

}

uint64_t sub_1001C0720(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C0730(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD block[5];

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v2 + 24) && *(_BYTE *)(a1 + 48))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    *(_BYTE *)(v2 + 24) = 0;
    v3 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    if (!v3)
    {
      v4 = objc_alloc_init((Class)NSMutableSet);
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)(v5 + 8) = v4;

      v3 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    }
    v7 = objc_msgSend(*(id *)(a1 + 40), "copy");
    objc_msgSend(v3, "addObject:", v7);

    v8 = *(_QWORD *)(a1 + 32);
    if (!*(_BYTE *)(v8 + 25))
    {
      *(_BYTE *)(v8 + 25) = 1;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1001C0838;
      block[3] = &unk_1008E72C0;
      block[4] = *(_QWORD *)(a1 + 32);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

void sub_1001C0838(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[5];
  _QWORD v15[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Sign In"), &stru_10091C438, 0));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("Not Now"), &stru_10091C438, 0));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Sign In Required"), &stru_10091C438, 0));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("To access purchases in the Cloud, please sign in."), &stru_10091C438, 0));

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v7, v9, 1));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1001C0A58;
  v15[3] = &unk_1008E9710;
  v15[4] = *(_QWORD *)(a1 + 32);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v5, 1, v15));
  objc_msgSend(v10, "addAction:", v11);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001C0AD0;
  v14[3] = &unk_1008E9710;
  v14[4] = *(_QWORD *)(a1 + 32);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v3, 0, v14));
  objc_msgSend(v10, "addAction:", v12);

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
  objc_msgSend(v13, "presentViewController:animated:completion:", v10, 1, 0);

}

void sub_1001C0A58(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(NSObject **)(v1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C0AB0;
  block[3] = &unk_1008E72C0;
  block[4] = v1;
  dispatch_async(v2, block);
}

id sub_1001C0AB0(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 24) = 1;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 25) = 0;
  return objc_msgSend(*(id *)(a1 + 32), "_notifyHandlers:", 0);
}

void sub_1001C0AD0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  _QWORD v6[5];
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIViewController jsa_topMostViewControllerForWindow:](UIViewController, "jsa_topMostViewControllerForWindow:", 0));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(NSObject **)(v3 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001C0B60;
  v6[3] = &unk_1008E7338;
  v6[4] = v3;
  v7 = v2;
  v5 = v2;
  dispatch_async(v4, v6);

}

void sub_1001C0B60(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id location;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  if (v2)
    objc_msgSend(v2, "cancel");
  v3 = objc_alloc((Class)AMSAuthenticateRequest);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BUAccountsProvider sharedProvider](BUAccountsProvider, "sharedProvider"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "activeStoreAccount"));
  v6 = objc_msgSend(v3, "initWithAccount:options:", v5, 0);

  v7 = objc_msgSend(objc_alloc((Class)AMSUIAuthenticateTask), "initWithRequest:presentingViewController:", v6, *(_QWORD *)(a1 + 40));
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "performAuthentication"));
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void **)(v9 + 16);
  *(_QWORD *)(v9 + 16) = v8;

  objc_initWeak(&location, *(id *)(a1 + 32));
  v11 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1001C0CB0;
  v12[3] = &unk_1008EE948;
  objc_copyWeak(&v13, &location);
  objc_msgSend(v11, "addFinishBlock:", v12);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);

}

void sub_1001C0C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001C0CB0(uint64_t a1, void *a2, void *a3)
{
  id *v4;
  id v5;
  id v6;
  id WeakRetained;

  v4 = (id *)(a1 + 32);
  v5 = a3;
  v6 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  objc_msgSend(WeakRetained, "_handleAuthResult:error:", v6, v5);

}

void sub_1001C0D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(*(_QWORD *)(a1 + 40) + 24) = v2 == 0;
  objc_msgSend(*(id *)(a1 + 40), "_notifyHandlers:", v2 != 0);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0;

  *(_BYTE *)(*(_QWORD *)(a1 + 40) + 25) = 0;
}

void sub_1001C104C(id a1, id a2)
{
  id v2;
  void *v3;
  dispatch_queue_global_t global_queue;
  NSObject *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BDSJaliscoDAAPClient sharedClient](BDSJaliscoDAAPClient, "sharedClient"));
  global_queue = dispatch_get_global_queue(0, 0);
  v5 = objc_claimAutoreleasedReturnValue(global_queue);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001C110C;
  v8[3] = &unk_1008E7680;
  v9 = v3;
  v10 = v2;
  v6 = v2;
  v7 = v3;
  dispatch_async(v5, v8);

}

void sub_1001C110C(uint64_t a1)
{
  NSObject *activity;
  _QWORD block[4];
  id v4;
  id v5;

  activity = _os_activity_create((void *)&_mh_execute_header, "BKAppLaunchJaliscoUpdate", (os_activity_t)&_os_activity_none, OS_ACTIVITY_FLAG_DEFAULT);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C11B8;
  block[3] = &unk_1008E7680;
  v4 = *(id *)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  os_activity_apply(activity, block);

}

void sub_1001C11B8(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001C1248;
  v3[3] = &unk_1008ECD60;
  v4 = v2;
  v5 = *(id *)(a1 + 40);
  objc_msgSend(v4, "updatePolitely:reason:completionWithError:", 1, 7, v3);

}

void sub_1001C1248(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint8_t buf[4];
  int v25;

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "domain"));
  if (objc_msgSend(v6, "isEqualToString:", BLJaliscoDAAPClientErrorDomain))
  {
    v7 = objc_msgSend(v5, "code");

    if (v7 == (id)5)
    {
      v8 = sub_100036938();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1006A4488(a2, v9, v10, v11, v12, v13, v14, v15);

      v16 = (void *)objc_claimAutoreleasedReturnValue(+[BKAuthenticationAlertRequest sharedRequester](BKAuthenticationAlertRequest, "sharedRequester"));
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1001C140C;
      v21[3] = &unk_1008E8058;
      v22 = *(id *)(a1 + 32);
      v23 = *(id *)(a1 + 40);
      objc_msgSend(v16, "requestAuthenticationPolitely:completion:", 1, v21);

      v17 = v22;
      goto LABEL_11;
    }
  }
  else
  {

  }
  v18 = sub_100036938();
  v19 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    v25 = a2;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Updated BDSJaliscoDAAPClient on app launch : %{BOOL}d", buf, 8u);
  }

  v20 = objc_retainBlock(*(id *)(a1 + 40));
  v17 = v20;
  if (v20)
    (*((void (**)(id))v20 + 2))(v20);
LABEL_11:

}

void sub_1001C140C(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[4];
  id v16;

  if (a2)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1001C14D0;
    v15[3] = &unk_1008E7B98;
    v3 = *(void **)(a1 + 32);
    v16 = *(id *)(a1 + 40);
    objc_msgSend(v3, "updatePolitely:reason:completion:", 1, 7, v15);
    v4 = v16;
  }
  else
  {
    v5 = sub_100036938();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006A44F0(v6, v7, v8, v9, v10, v11, v12, v13);

    v14 = objc_retainBlock(*(id *)(a1 + 40));
    v4 = v14;
    if (v14)
      (*((void (**)(id))v14 + 2))(v14);
  }

}

void sub_1001C14D0(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  id v6;
  void *v7;
  _DWORD v8[2];

  v4 = sub_100036938();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "after auth retry Updated BDSJaliscoDAAPClient on app launch : %{BOOL}d", (uint8_t *)v8, 8u);
  }

  v6 = objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(id))v6 + 2))(v6);

}

void sub_1001C159C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_signpost_id_t v8;
  uint8_t v9[16];

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "preLaunchQueue"));
  objc_msgSend(v2, "setQosClass:", 33);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "librarySetupQueue"));
  objc_msgSend(v3, "setQosClass:", 33);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v4, "startProvisioningPackage");

  v5 = BCSignpostLaunch();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 48);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)v9 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v8, "Hold at launch", "", v9, 2u);
  }

}

void sub_1001C167C(uint64_t a1)
{
  BKOfflineCacheLoadingController *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_alloc_init(BKOfflineCacheLoadingController);
  objc_msgSend(*(id *)(a1 + 32), "setOfflineCacheLoadingController:", v2);

  kdebug_trace(725353712, 68, 0, 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "offlineCacheLoadingController"));
  objc_msgSend(v3, "prewarmForLaunchIfNeeded");

  kdebug_trace(725353712, 69, 0, 0, 0);
  v4 = +[BUBag defaultBag](BUBag, "defaultBag");
  v5 = +[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance");
  v7 = (id)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v6 = objc_msgSend(v7, "ubiquityIdentityToken");

}

void sub_1001C175C(id a1)
{
  +[BCLightLevelController preWarm](BCLightLevelController, "preWarm");
}

id sub_1001C1768(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "registerReadingSettings");
  return +[REBookReaderModuleFactory prewarm](REBookReaderModuleFactory, "prewarm");
}

void sub_1001C1788(id a1)
{
  uint64_t v1;
  NSObject *v2;
  os_signpost_id_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint8_t v11[16];
  uint8_t buf[16];

  v1 = BCSignpostLaunch(a1);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = os_signpost_id_generate(v2);

  v5 = BCSignpostLaunch(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_BEGIN, v3, "User Agent", "", buf, 2u);
  }

  v8 = BCSignpostLaunch(+[JSADevice userAgent](JSADevice, "userAgent"));
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = v9;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    *(_WORD *)v11 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v3, "User Agent", "", v11, 2u);
  }

}

void sub_1001C1890(id a1)
{
  +[ft9cupR7u6OrU4m1pyhB prewarmSync](ft9cupR7u6OrU4m1pyhB, "prewarmSync");
}

id sub_1001C1A0C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSBundle *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v5 = a3;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v8 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(*(_QWORD *)(a1 + 32)));
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorNamed:inBundle:compatibleWithTraitCollection:](UIColor, "colorNamed:inBundle:compatibleWithTraitCollection:", CFSTR("BrandColor"), v9, 0));
  objc_msgSend(v7, "setObject:forKeyedSubscript:", v10, NSForegroundColorAttributeName);

  v11 = objc_alloc_init((Class)NSMutableParagraphStyle);
  objc_msgSend(v11, "setAlignment:", 1);
  objc_msgSend(v11, "setLineSpacing:", 4.0);
  objc_msgSend(v7, "setObject:forKeyedSubscript:", v11, NSParagraphStyleAttributeName);
  if (v5)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "pathForResource:ofType:", v5, 0));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v12));
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v13, NSLinkAttributeName);

  }
  v14 = objc_alloc((Class)NSAttributedString);
  v15 = objc_msgSend(v7, "copy");
  v16 = objc_msgSend(v14, "initWithString:attributes:", v6, v15);

  return v16;
}

void sub_1001C1E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001C1E78(id *a1)
{
  id WeakRetained;
  _QWORD v3[5];
  id v4;
  id v5;
  id v6;

  WeakRetained = objc_loadWeakRetained(a1 + 7);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001C1F28;
  v3[3] = &unk_1008E7B70;
  v3[4] = WeakRetained;
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

}

id sub_1001C1F28(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_applicationOpenURL:options:sceneController:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void sub_1001C23C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1001C23DC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "analyticsController"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "applicationTracker"));
    objc_msgSend(v2, "emitWidgetEngagementEventWithTracker:widgetData:", v4, *(_QWORD *)(a1 + 32));

  }
}

void sub_1001C2610(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serviceCenter"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "setupServicesWithLibraryManager:appDelegate:", v3, *(_QWORD *)(a1 + 32));

  +[BAEventReporter setupLibraryAnalyticsDataProvider](BAEventReporter, "setupLibraryAnalyticsDataProvider");
  kdebug_trace(725353712, 54, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "_setupUserEngagement");
  kdebug_trace(725353712, 55, 0, 0, 0);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "startupQueue"));
  objc_msgSend(v4, "activate");

}

void sub_1001C26D8(id a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("com.apple.books.plist.changed"), 0, 0, 0);
}

id sub_1001C2700(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reload");
}

void sub_1001C2708(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appLaunchCoordinator"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001C2794;
  v3[3] = &unk_1008E72C0;
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("plistImporting cleanUpImportedFiles"), v3);

}

id sub_1001C2794(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "cleanupImportedFiles");
}

id sub_1001C279C(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "setCurrentQueueGeneration:", a2);
  return objc_msgSend(*(id *)(a1 + 40), "setCurrentQueueGeneration:", a2);
}

id sub_1001C27D0(id *a1)
{
  objc_msgSend(a1[4], "reload");
  objc_msgSend(a1[5], "reload");
  objc_msgSend(a1[6], "reload");
  return objc_msgSend(a1[7], "reload");
}

void sub_1001C2808(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousDocumentsController"));
  objc_msgSend(v1, "migrateBooksToUbiquityIfNeededWithCompletion:", 0);

}

void sub_1001C283C(id *a1, int a2)
{
  void *v4;
  _QWORD v5[4];
  id v6;

  objc_msgSend(a1[4], "reload");
  if (a2
    && ((objc_msgSend(a1[5], "hasDigestChangedSinceFetch") & 1) != 0
     || objc_msgSend(a1[6], "hasDigestChangedSinceFetch")))
  {
    objc_msgSend(a1[5], "reload");
    objc_msgSend(a1[6], "reload");
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1001C2920;
    v5[3] = &unk_1008E74C8;
    objc_copyWeak(&v6, a1 + 7);
    objc_msgSend(v4, "addCustomOperationBlock:", v5);

    objc_destroyWeak(&v6);
  }
}

void sub_1001C290C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001C2920(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ubiquitousDocumentsController"));
  objc_msgSend(v1, "migrateBooksToUbiquityIfNeededWithCompletion:", 0);

}

id sub_1001C2968(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteAssetIDs:completion:");
}

BLDownloadQueueUIManagerProtocol *__cdecl sub_1001C2970(id a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "windowManager"));

  return (BLDownloadQueueUIManagerProtocol *)v2;
}

id sub_1001C29B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "signalConditionSatisfied:", 0);
}

void sub_1001C29C8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationDidEnterBackground:", *(_QWORD *)(a1 + 32));

}

void sub_1001C2A04(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationWillResignActive:", *(_QWORD *)(a1 + 32));

}

void sub_1001C2A40(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationWillResignFrontmost:", *(_QWORD *)(a1 + 32));

}

void sub_1001C2A7C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;

  v2 = sub_100036938();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_1006A4558();

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "signalConditionSatisfied:", 14);

}

id sub_1001C2AD8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "signalConditionSatisfied:", 14);

  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_1001C2B10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_prewarmAEPluginRegistry");
}

void sub_1001C2B18(uint64_t a1)
{
  BSUIDownloadProgressCenter *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = objc_opt_new(BSUIDownloadProgressCenter);
  objc_msgSend(*(id *)(a1 + 32), "setDownloadProgressCenter:", v2);

  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadProgressCenter"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serviceCenter"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "engagementManager"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "jetActionHandler"));
  objc_msgSend(v10, "startJavascriptAppWithLibrary:libraryItemStateProvider:downloadProgressCenter:serviceCenter:storeController:engagementManager:jetActionHandler:", v3, v4, v5, v6, v7, v8, v9);

}

void sub_1001C2C38(id a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentPackage"));
  objc_msgSend(v1, "startEviction");

}

void sub_1001C2FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001C2FC8(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[3];
  _QWORD v4[3];

  v3[0] = AEAudioBookForceAudiobookPlayIfCurrentAsset;
  v3[1] = CFSTR("BKBookPresentWithoutAnimations");
  v4[0] = &__kCFBooleanTrue;
  v4[1] = &__kCFBooleanTrue;
  v3[2] = AEAudiobookOptionsShouldBeginPlaybackInBackground;
  v4[2] = &__kCFBooleanTrue;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 3));
  v2 = (void *)qword_1009F5218;
  qword_1009F5218 = v1;

}

void sub_1001C3074(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  void (**v6)(id, id);
  id v7;
  __int128 v8;
  _QWORD block[4];
  _QWORD *v10;
  _QWORD v11[5];
  __int128 v12;

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "length"))
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1001C31E8;
    v11[3] = &unk_1008E9970;
    v11[4] = *(_QWORD *)(a1 + 32);
    v8 = *(_OWORD *)(a1 + 40);
    v2 = (id)v8;
    v12 = v8;
    v3 = objc_retainBlock(v11);
    if (v3)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v3[2])(v3);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001C3584;
        block[3] = &unk_1008E7818;
        v10 = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

  }
  else
  {
    v4 = BooksSiriLog(0);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006A45DC();

    v6 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
    if (v6)
    {
      v7 = objc_msgSend(objc_alloc((Class)INPlayMediaIntentResponse), "initWithCode:userActivity:", 6, 0);
      v6[2](v6, v7);

    }
  }
}

void sub_1001C31E8(uint64_t a1)
{
  void *v2;
  id v3;
  __int128 v4;
  _QWORD v5[5];
  __int128 v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001C3280;
  v5[3] = &unk_1008EEDC8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 40);
  v3 = (id)v4;
  v6 = v4;
  objc_msgSend(v2, "requestPrimaryScene:", v5);

}

void sub_1001C3280(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  _QWORD v13[5];

  v3 = objc_msgSend(a2, "newShowURLTransaction");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1001C338C;
  v13[3] = &unk_1008E7BE8;
  v13[4] = *(_QWORD *)(a1 + 48);
  objc_msgSend(v3, "whenCancelled:", v13);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bookPresenter"));
  v7 = *(void **)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 40);
  v9 = qword_1009F5218;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001C3438;
  v10[3] = &unk_1008EEDA0;
  v12 = v6;
  v11 = v7;
  objc_msgSend(v5, "showAssetWithTransaction:assetID:location:options:completion:", v3, v8, 0, v9, v10);

}

void sub_1001C338C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = BooksSiriLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v5 = 138477827;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Playback tx cancelled for assetID:%{private}@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1001C3438(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  void (**v9)(id, id);
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  int v14;
  uint64_t v15;

  v4 = a3;
  v5 = BooksSiriLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006A4608((uint64_t)v4, v7, v8);

    v9 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v9)
    {
      v10 = objc_alloc((Class)INPlayMediaIntentResponse);
      v11 = 6;
LABEL_10:
      v13 = objc_msgSend(v10, "initWithCode:userActivity:", v11, 0);
      v9[2](v9, v13);

    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v14 = 138477827;
      v15 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Playback succeeded for assetID:%{private}@", (uint8_t *)&v14, 0xCu);
    }

    v9 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v9)
    {
      v10 = objc_alloc((Class)INPlayMediaIntentResponse);
      v11 = 4;
      goto LABEL_10;
    }
  }

}

uint64_t sub_1001C3584(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C3590(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10[2];
  _QWORD v11[5];
  __int128 v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
  v3 = objc_msgSend(v2, "length");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v4));

    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "bu_assetIDFromURL"));
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1001C36B8;
    v11[3] = &unk_1008EEE18;
    v11[4] = *(_QWORD *)(a1 + 40);
    *(_OWORD *)v10 = *(_OWORD *)(a1 + 48);
    v8 = v10[0];
    v12 = *(_OWORD *)v10;
    +[BKRecentBooksProvider recentBooksAssetIDs:](BKRecentBooksProvider, "recentBooksAssetIDs:", v11);

  }
}

void sub_1001C36B8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  __int128 v7;
  _QWORD block[4];
  id v9;
  uint64_t v10;
  __int128 v11;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C375C;
  block[3] = &unk_1008ED8D8;
  v4 = *(_QWORD *)(a1 + 32);
  v9 = v3;
  v10 = v4;
  v7 = *(_OWORD *)(a1 + 40);
  v5 = (id)v7;
  v11 = v7;
  v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_1001C375C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint8_t buf[4];
  uint64_t v20;
  _BYTE v21[128];

  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAssetProvider", (_QWORD)v15));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "libraryAssetOnMainQueueWithAssetID:", v7));

        if (objc_msgSend(v9, "isAudiobook")
          && ((objc_msgSend(v9, "streamable") & 1) != 0 || objc_msgSend(v9, "isLocal")))
        {
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v7);
          v11 = BooksSiriLog(v10);
          v12 = objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
            *(_DWORD *)buf = 138477827;
            v20 = v13;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Current audiobook assetID:%{private}@", buf, 0xCu);
          }

          goto LABEL_15;
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v21, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_15:

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1001C3B08(id *a1)
{
  void *v2;
  id *v3;
  void *v4;
  unsigned int v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  id *v25;
  _QWORD *v26;
  id v27;
  id v28;
  NSObject *v29;
  id v30;
  void *v31;
  _QWORD *v32;
  _QWORD v33[4];
  _QWORD *v34;
  _QWORD v35[4];
  id v36;
  _QWORD *v37;
  _QWORD v38[4];
  id v39;
  id v40;
  id v41;
  _QWORD v42[4];
  id v43;
  id v44;
  uint8_t buf[4];
  id v46;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "sceneManager"));
  v3 = a1 + 5;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "type"));
  v5 = objc_msgSend(v4, "isEqual:", CFSTR("com.apple.iBooks.openStoreSearch"));

  if (v5)
  {
    v6 = sub_100036938();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Performing shortcut: Search store", buf, 2u);
    }

    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v42[2] = sub_1001C3F70;
    v42[3] = &unk_1008EEE68;
    v43 = v2;
    v44 = a1[6];
    objc_msgSend(v43, "requestPrimaryScene:", v42);

    v8 = v43;
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "type"));
    v10 = objc_msgSend(v9, "isEqual:", CFSTR("com.apple.iBooks.assetReading"));

    v11 = sub_100036938();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    v13 = v12;
    if (v10)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Performing shortcut: Read book", buf, 2u);
      }

      v14 = objc_opt_class(NSString);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "userInfo"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("assetID")));
      v17 = BUDynamicCast(v14, v16);
      v8 = (id)objc_claimAutoreleasedReturnValue(v17);

      if (objc_msgSend(v8, "length"))
      {
        v38[0] = _NSConcreteStackBlock;
        v38[1] = 3221225472;
        v38[2] = sub_1001C4098;
        v38[3] = &unk_1008EEE90;
        v18 = v2;
        v39 = v18;
        v19 = v8;
        v40 = v19;
        v41 = a1[6];
        v20 = objc_retainBlock(v38);
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "sceneInfoPresentingAssetID:", v19));
        v22 = BCSceneLog(v21);
        v23 = objc_claimAutoreleasedReturnValue(v22);
        v24 = os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
        if (v21)
        {
          if (v24)
          {
            *(_DWORD *)buf = 138412290;
            v46 = v19;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Performing shortcut: Requesting scene with assetID=%@", buf, 0xCu);
          }

          v35[0] = _NSConcreteStackBlock;
          v35[1] = 3221225472;
          v35[2] = sub_1001C41D4;
          v35[3] = &unk_1008EEEB8;
          v25 = (id *)&v37;
          v37 = v20;
          v36 = v21;
          v26 = v20;
          objc_msgSend(v18, "requestSceneWithAssetID:completion:", v19, v35);

        }
        else
        {
          if (v24)
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Performing shortcut: Requesting primary scene", buf, 2u);
          }

          v33[0] = _NSConcreteStackBlock;
          v33[1] = 3221225472;
          v33[2] = sub_1001C4218;
          v33[3] = &unk_1008EDBF0;
          v25 = (id *)&v34;
          v34 = v20;
          v32 = v20;
          objc_msgSend(v18, "requestPrimaryScene:", v33);
        }

        v31 = v39;
      }
      else
      {
        v28 = sub_100036938();
        v29 = objc_claimAutoreleasedReturnValue(v28);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
          sub_1006A4674();

        v30 = objc_retainBlock(a1[6]);
        v31 = v30;
        if (v30)
          (*((void (**)(id, _QWORD))v30 + 2))(v30, 0);
      }

    }
    else
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1006A46A0(a1 + 5, v13);

      v27 = objc_retainBlock(a1[6]);
      v8 = v27;
      if (v27)
        (*((void (**)(id, _QWORD))v27 + 2))(v27, 0);
    }
  }

}

void sub_1001C3F70(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;

  v3 = objc_msgSend(a2, "newShowURLTransaction");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookPresenter"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001C4038;
  v6[3] = &unk_1008E8898;
  v7 = *(id *)(a1 + 32);
  v8 = v3;
  v9 = *(id *)(a1 + 40);
  v5 = v3;
  objc_msgSend(v4, "closeAllPresentersForSingleSceneWithTransaction:animated:completion:", v5, 0, v6);

}

void sub_1001C4038(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storePresenter"));
  objc_msgSend(v2, "showStoreSearchWithTransaction:", *(_QWORD *)(a1 + 40));

  v3 = objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
    v3 = v4;
  }

}

void sub_1001C4098(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = objc_msgSend(a2, "newShowAssetTransaction");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookPresenter"));
  v5 = *(_QWORD *)(a1 + 40);
  v10[0] = CFSTR("BKBookPresentingForceLargeCover");
  v10[1] = AEAudiobookOptionsShouldNotAutoplayKey;
  v11[0] = &__kCFBooleanTrue;
  v11[1] = &__kCFBooleanFalse;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v11, v10, 2));
  objc_msgSend(v4, "showAssetWithTransaction:assetID:location:options:completion:", v3, v5, 0, v6, 0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "synchronizer"));
  objc_msgSend(v7, "waitForCompletionWithTimeout:", 0.5);
  v8 = objc_retainBlock(*(id *)(a1 + 48));
  v9 = v8;
  if (v8)
    (*((void (**)(id, uint64_t))v8 + 2))(v8, 1);

}

void sub_1001C41D4(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneController"));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_1001C4218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1001C4224(void *a1)
{
  if (!a1)
    return 0xFFFFFFFFLL;
  if (objc_msgSend(a1, "caseInsensitiveCompare:", CFSTR("ibooks")))
    return 0xFFFFFFFFLL;
  return 3;
}

void sub_1001C42D8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_signpost_id_t v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  dispatch_time_t v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  unsigned int v27;
  const char *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  unsigned int v38;
  id v39;
  NSObject *v40;
  const char *v41;
  BKFinishedAssetManager *v42;
  void *v43;
  BKFinishedAssetManager *v44;
  NSObject *v45;
  NSObject *v46;
  id v47;
  NSObject *v48;
  _QWORD v49[5];
  _QWORD v50[5];
  _QWORD v51[4];
  id v52;
  _QWORD block[4];
  id v54;
  id location;
  uint8_t buf[4];
  const char *v57;

  v2 = BCSignpostLibrary();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = os_signpost_id_generate(v3);
  v5 = v3;
  v6 = v5;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_INTERVAL_BEGIN, v4, "Post-Library Reload", "", buf, 2u);
  }

  v7 = sub_100036938();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Running Post-Library Reload launch jobs", buf, 2u);
  }

  objc_initWeak(&location, *(id *)(a1 + 32));
  v9 = objc_alloc((Class)BKLibraryAssetModificationDateManager);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  v12 = objc_msgSend(v9, "initWithLibraryManager:annotationProvider:", v10, v11);
  objc_msgSend(*(id *)(a1 + 32), "setLibraryAssetModificationDateManager:", v12);

  v13 = objc_msgSend(objc_alloc((Class)BKLibraryAssetPostProcessor), "initWithLibraryManager:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setLibraryAssetPostProcessor:", v13);

  v14 = dispatch_time(0, 5000000000);
  v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "workloopUtilityQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C49D0;
  block[3] = &unk_1008E74C8;
  objc_copyWeak(&v54, &location);
  dispatch_after(v14, v15, block);

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetIsNewManager"));
  objc_msgSend(v16, "updateStaleEpubIDs");

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetIsNewManager"));
  objc_msgSend(v17, "resetIsNewIfNeeded");

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetIsNewManager"));
  objc_msgSend(v18, "migrateAudiobookProgressIfNeeded");

  objc_msgSend(*(id *)(a1 + 32), "importMigratedBooks");
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  +[BKBookProgressController preWarmWithAnnotationProvider:](BKBookProgressController, "preWarmWithAnnotationProvider:", v19);

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  +[BKApplicationShortcutController preWarmWithLibrary:annotationProvider:](BKApplicationShortcutController, "preWarmWithLibrary:annotationProvider:", v20, v21);

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  objc_msgSend(v22, "restartObserving");

  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "liverpoolStatusMonitor"));
  objc_msgSend(v23, "restartObserving");

  v24 = sub_100036938();
  v25 = objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "liverpoolStatusMonitor"));
    v27 = objc_msgSend(v26, "isCloudKitEnabled");
    v28 = "NO";
    if (v27)
      v28 = "YES";
    *(_DWORD *)buf = 136315138;
    v57 = v28;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "DidFinishUpgrading: Is user opted in: %s", buf, 0xCu);

  }
  objc_msgSend(*(id *)(a1 + 32), "_startObservingNotifications");
  v29 = objc_alloc((Class)BUCoalescingCallBlock);
  v51[0] = _NSConcreteStackBlock;
  v51[1] = 3221225472;
  v51[2] = sub_1001C4A14;
  v51[3] = &unk_1008E8718;
  objc_copyWeak(&v52, &location);
  v30 = objc_msgSend(v29, "initWithNotifyBlock:blockDescription:", v51, CFSTR("BKAppDelegate"));
  v31 = *(_QWORD *)(a1 + 32);
  v32 = *(void **)(v31 + 256);
  *(_QWORD *)(v31 + 256) = v30;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "setCoalescingDelay:", 1.0);
  objc_msgSend(*(id *)(a1 + 32), "_signalEnableSyncCheck");
  +[BCCloudKitController registerForSecureNotifications](BCCloudKitController, "registerForSecureNotifications");
  v33 = *(_QWORD *)(a1 + 32);
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryAssetStatusController sharedController](BKLibraryAssetStatusController, "sharedController"));
  objc_msgSend(v34, "setStoreDelegate:", v33);

  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_1001C4A7C;
  v50[3] = &unk_1008E72C0;
  v50[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v50);
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  objc_msgSend(v35, "setDelegate:", *(_QWORD *)(a1 + 32));
  +[BKLibraryIndexer setup](BKLibraryIndexer, "setup");
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472;
  v49[2] = sub_1001C4B04;
  v49[3] = &unk_1008E72C0;
  v49[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v49);

  v36 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryFileSizeManager sharedInstance](BKLibraryFileSizeManager, "sharedInstance"));
  objc_msgSend(v36, "purgeUnusedCacheEntries");

  objc_msgSend(*(id *)(a1 + 32), "setFinishedAssetRemovalThreshold:", 86400.0);
  v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v38 = objc_msgSend(v37, "BOOLForKey:", CFSTR("BKLibraryFinishedAssetForceEarlyThreshold"));

  if (v38)
    objc_msgSend(*(id *)(a1 + 32), "setFinishedAssetRemovalThreshold:", 10.0);
  v39 = sub_100036938();
  v40 = objc_claimAutoreleasedReturnValue(v39);
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(*(id *)(a1 + 32), "finishedAssetRemovalThreshold");
    *(_DWORD *)buf = 134217984;
    v57 = v41;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Finished asset removal threshhold is %f", buf, 0xCu);
  }

  v42 = [BKFinishedAssetManager alloc];
  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v44 = -[BKFinishedAssetManager initWithLibraryManager:](v42, "initWithLibraryManager:", v43);
  objc_msgSend(*(id *)(a1 + 32), "setFinishedAssetManager:", v44);

  objc_msgSend(*(id *)(a1 + 40), "updateMostRecentPurchaseDateCacheFromLibrary");
  v45 = v6;
  v46 = v45;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v45))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v46, OS_SIGNPOST_INTERVAL_END, v4, "Post-Library Reload", "", buf, 2u);
  }

  v47 = sub_100036938();
  v48 = objc_claimAutoreleasedReturnValue(v47);
  if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "Completed all Post-Library Reload launch jobs", buf, 2u);
  }

  objc_destroyWeak(&v52);
  objc_destroyWeak(&v54);
  objc_destroyWeak(&location);

}

void sub_1001C4974(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 152));
  _Unwind_Resume(a1);
}

void sub_1001C49D0(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAssetPostProcessor"));
  objc_msgSend(v1, "performPostProcessing");

}

void sub_1001C4A14(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  void *v5;
  id v6;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_updateEnableSync");

  v6 = objc_retainBlock(v3);
  v5 = v6;
  if (v6)
  {
    (*((void (**)(id))v6 + 2))(v6);
    v5 = v6;
  }

}

void sub_1001C4A7C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  objc_msgSend(v2, "startAllowingRefreshUpdateCount");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  objc_msgSend(v3, "refreshUpdateCountAsync");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  objc_msgSend(v4, "saveStateClosing:", 0);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookletMigrationManager"));
  objc_msgSend(v5, "migrateIfNeeded");

}

id sub_1001C4B04(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v4[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 120);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C4B6C;
  v4[3] = &unk_1008E72C0;
  v4[4] = v1;
  return objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("startIndexing library"), v4);
}

void sub_1001C4B6C(uint64_t a1)
{
  dispatch_time_t v2;
  NSObject *v3;

  v2 = dispatch_time(0, 10000000000);
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "workloopUtilityQueue"));
  dispatch_after(v2, v3, &stru_1008EEED8);

}

void sub_1001C4BD0(id a1)
{
  +[BKLibraryIndexer startIndexing](BKLibraryIndexer, "startIndexing");
}

id sub_1001C4BDC(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_1001C4C04(uint64_t a1)
{

}

id sub_1001C4C0C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_reloadLibraryForLaunch");
}

void sub_1001C4C14(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void (**v4)(void);

  v4 = (void (**)(void))objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  if (v4)
    v4[2]();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1001C4C74(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint8_t v8[16];

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    v2 = sub_100036938();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Library Reload: Launched from CarPlay. Starting library reload right away.", v8, 2u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    v4 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
    v5 = v4;
    if (v4)
      (*((void (**)(id))v4 + 2))(v4);
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = 0;

  }
}

void sub_1001C4D38(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  int v12;
  id v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = objc_msgSend(v2, "applicationState");

  v4 = sub_100036938();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v12 = 134217984;
    v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Library Reload: applicationState after delay: %ld", (uint8_t *)&v12, 0xCu);
  }

  if (v3 == (id)2 && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    v6 = sub_100036938();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Library Reload: Launched in background. Starting library reload right away.", (uint8_t *)&v12, 2u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    v8 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
    v9 = v8;
    if (v8)
      (*((void (**)(id))v8 + 2))(v8);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = 0;

  }
}

void sub_1001C4EA8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v2 = sub_100036938();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      sub_1006A4730(a1, v3);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    v4 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    v5 = v4;
    if (v4)
      (*((void (**)(id))v4 + 2))(v4);
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = 0;

  }
}

void sub_1001C4F4C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void (**v4)(void);

  v4 = (void (**)(void))objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  if (v4)
    v4[2]();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1001C4FAC(id a1)
{
  +[AETestDriver prewarm](AETestDriver, "prewarm");
  +[BKTestDriver prewarm](BKTestDriver, "prewarm");
}

void sub_1001C4FD0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  objc_msgSend(v1, "downloadQueueReload");

}

uint64_t sub_1001C5204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C535C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1001C5378(id *a1)
{
  id WeakRetained;
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (objc_msgSend(a1[4], "welcomeScreenShouldShow")
    && (v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "appLaunchCoordinator")),
        v4 = objc_msgSend(v3, "appLaunchCoordinatorIsConditionSatisfied:", 6),
        v3,
        v4))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001C547C;
    v8[3] = &unk_1008EEE68;
    v9 = a1[4];
    v10 = a1[5];
    objc_msgSend(v5, "requestPrimaryScene:", v8);

  }
  else
  {
    v6 = objc_retainBlock(a1[5]);
    v7 = v6;
    if (v6)
      (*((void (**)(id))v6 + 2))(v6);

  }
}

void sub_1001C547C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class(BKSceneController);
  v5 = BUDynamicCast(v4, v3);
  v6 = (id)objc_claimAutoreleasedReturnValue(v5);

  objc_msgSend(v6, "_showWelcomeScreen:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t sub_1001C54E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C5588(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousDocumentsController"));
  objc_msgSend(v1, "migrateBooksToUbiquityIfNeededWithCompletion:", 0);

}

void sub_1001C5704(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  objc_msgSend(v2, "clearAgingDocumentInbox");

  objc_msgSend(*(id *)(a1 + 32), "saveStateClosing:", 1);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[BCBackgroundTaskAssertion sharedAssertion](BCBackgroundTaskAssertion, "sharedAssertion"));
  objc_msgSend(v3, "releaseAssertionForIdentifier:", *(_QWORD *)(a1 + 40));

}

void sub_1001C5770(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = sub_100036938();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Updated BDSJaliscoDAAPClient on app launch", v3, 2u);
  }

}

void sub_1001C5850(id a1, int64_t a2, NSError *a3)
{
  NSError *v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  const char *v8;
  int v9;
  int64_t v10;

  v4 = a3;
  v5 = sub_100036938();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      v9 = 138412290;
      v10 = (int64_t)v4;
      v8 = "Error flushing Jet events: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v9, 0xCu);
    }
  }
  else if (v7)
  {
    v9 = 134217984;
    v10 = a2;
    v8 = "Flushed %ld Jet events";
    goto LABEL_6;
  }

}

id sub_1001C59F8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_applicationWillTerminate:", *(_QWORD *)(a1 + 40));
}

void sub_1001C5B28(id a1, int64_t a2, NSError *a3)
{
  NSError *v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  const char *v8;
  int v9;
  int64_t v10;

  v4 = a3;
  v5 = sub_100036938();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      v9 = 138412290;
      v10 = (int64_t)v4;
      v8 = "Error flushing Jet events: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v9, 0xCu);
    }
  }
  else if (v7)
  {
    v9 = 134217984;
    v10 = a2;
    v8 = "Flushed %ld Jet events";
    goto LABEL_6;
  }

}

void sub_1001C5C08(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a2;
  v4 = objc_opt_class(BKSceneController);
  v5 = BUDynamicCast(v4, v3);
  v9 = (id)objc_claimAutoreleasedReturnValue(v5);

  if (v9)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "analyticsManager"));
    objc_msgSend(v6, "appWillTerminate");

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "analyticsManager"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "analyticsController"));
    objc_msgSend(v8, "waitForSessionEnd:", *(double *)(a1 + 32));

  }
}

void sub_1001C5CB0(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appLaunchCoordinator"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001C5D30;
  v3[3] = &unk_1008E77C8;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1089, CFSTR("_signalExtendedLaunchComplete"), v3);

}

id sub_1001C5D30(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_signalExtendedLaunchComplete");
}

id sub_1001C5F3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "signalConditionSatisfied:", 1);
}

void sub_1001C5FD0(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appLaunchCoordinator"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C6060;
  v4[3] = &unk_1008E7338;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("presentBookMigrationNotice"), v4);

}

void sub_1001C6060(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentSceneController"));

  v4 = objc_msgSend(v3, "newTransactionWithName:", BCTransactionNameShowHUD);
  v5 = v4;
  if (v4)
  {
    v7 = BCTransactionOptionsTransactionKey;
    v8 = v4;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));
  }
  else
  {
    v6 = &__NSDictionary0__struct;
  }
  +[BSUINoticeViewController presentNoticeForMigratingBooksCollection:options:](BSUINoticeViewController, "presentNoticeForMigratingBooksCollection:options:", *(_QWORD *)(a1 + 40), v6);

}

id sub_1001C61A8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "appLaunchCoordinatorIsConditionSatisfied:", 13);
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "signalConditionSatisfied:", 13);
  return result;
}

id sub_1001C62E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_iCloudStatusChanged");
}

void sub_1001C65F8()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "delegate"));

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "airTrafficController"));
  objc_msgSend(v1, "airTrafficStarted");

}

void sub_1001C6658()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "delegate"));

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "airTrafficController"));
  objc_msgSend(v1, "airTrafficEnded");

}

void sub_1001C66B8()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "delegate"));

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetProvider"));
  objc_msgSend(v1, "managedBooksDidChange");

}

id sub_1001C6718(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "networkReachabilityChanged:", CFSTR("kNetworkReachabilityChangedNotification"), 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "networkReachability"));
  objc_msgSend(v3, "startNotifier");

  return +[BCCloudKitDatabaseController startInternetConnectionReachabilityNotifier](BCCloudKitDatabaseController, "startInternetConnectionReachabilityNotifier");
}

id sub_1001C6788(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_100036938();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Received tcc change notification.", v5, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "_signalEnableSyncCheck");
}

void sub_1001C67F8(id a1)
{
  id v1;

  v1 = +[BKAudiobookPlayerMuxingObserver sharedInstance](BKAudiobookPlayerMuxingObserver, "sharedInstance");
}

uint64_t sub_1001C681C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C6B28(id a1, UIAlertAction *a2)
{
  UIAlertAction *v2;

  v2 = a2;
  exit(1);
}

void sub_1001C6BD8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CKNotification notificationFromRemoteNotificationDictionary:](CKNotification, "notificationFromRemoteNotificationDictionary:", *(_QWORD *)(a1 + 32)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudKitController instanceForCKNotification:](BCCloudKitController, "instanceForCKNotification:", v2));
  v4 = sub_100036938();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "containerIdentifier"));
    v7 = 138543362;
    v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "application:didReceiveRemoteNotification: for container %{public}@", (uint8_t *)&v7, 0xCu);

  }
  objc_msgSend(v3, "handleRemoteNotification:", *(_QWORD *)(a1 + 32));

}

id sub_1001C6D40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_signalEnableSyncCheck");
}

id *sub_1001C6E90(id *result, int a2)
{
  if ((a2 & 0xFFFFFFFD) == 1)
    return (id *)objc_msgSend(result[4], "mergeSyncSidecar");
  return result;
}

uint64_t sub_1001C6EA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C6F20(uint64_t a1)
{
  BKLibraryImportMigratedBooksOperation *v2;
  void *v3;
  BKLibraryImportMigratedBooksOperation *v4;
  id v5;

  v5 = objc_alloc_init((Class)NSOperationQueue);
  objc_msgSend(v5, "setMaxConcurrentOperationCount:", 1);
  objc_msgSend(v5, "setQualityOfService:", 17);
  v2 = [BKLibraryImportMigratedBooksOperation alloc];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v4 = -[BKLibraryImportMigratedBooksOperation initWithLibraryAssetProvider:](v2, "initWithLibraryAssetProvider:", v3);

  objc_msgSend(v5, "addOperation:", v4);
}

void sub_1001C70D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001C70F0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mainLibrary"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), v4));

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001C71F0;
    v8[3] = &unk_1008EF0B8;
    v12 = *(_QWORD *)(a1 + 64);
    v9 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 56);
    v11 = *(id *)(a1 + 40);
    objc_msgSend(v7, "assetForLibraryAsset:completion:", v6, v8);

  }
}

void sub_1001C71F0(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "url"));
  if (v3)
  {
    v7 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pluginForURL:", v7));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "helperForURL:withOptions:", v7, 0));
      if ((objc_opt_respondsToSelector(v6, "acknowledgeAnnotationProvider:willMergeAnnotationsWithAssertVersionMismatch:assetID:assetURL:") & 1) != 0)*(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = objc_msgSend(v6, "acknowledgeAnnotationProvider:willMergeAnnotationsWithAssertVersionMismatch:assetID:assetURL:", a1[4], a1[5], a1[6], v7);

    }
    v3 = v7;
  }

}

void sub_1001C73F4(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C7450;
  block[3] = &unk_1008E72C0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001C7450(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appLaunchCoordinator"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001C74CC;
  v3[3] = &unk_1008E72C0;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("reload Ubiquity Data Sources"), v3);

}

void sub_1001C74CC(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v3 = objc_msgSend(v2, "isICloudDriveEnabled");

  v4 = *(void **)(a1 + 32);
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sceneManager"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "criticalAlertCoordinator"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1001C758C;
    v7[3] = &unk_1008E72C0;
    v7[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v6, "invokeAfterCriticalAlertDismisses:", v7);

  }
  else
  {
    objc_msgSend(v4, "_reloadUbiquityDataSources");
  }
}

id sub_1001C758C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reloadUbiquityDataSources");
}

intptr_t sub_1001C7594(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Deleted local copies of cloud data in response to logout.", v5, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "acknowledgeiCloudIdentity");
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1001C781C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001C783C(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) != UIBackgroundTaskInvalid)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v2, "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24));

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = UIBackgroundTaskInvalid;
  }
}

uint64_t sub_1001C78B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001C78C0(_QWORD *a1)
{
  BKDatabaseBackupFileManager *v2;

  v2 = -[BKDatabaseBackupFileManager initWithLibraryManager:annotationProvider:]([BKDatabaseBackupFileManager alloc], "initWithLibraryManager:annotationProvider:", a1[4], a1[5]);
  -[BKDatabaseBackupFileManager rewriteBackupFileWithCompletionBlock:](v2, "rewriteBackupFileWithCompletionBlock:", a1[6]);

}

void sub_1001C7B88(id a1, BKLibraryManagedObjectContext *a2)
{
  +[BKJaliscoStatus dsidChangeCleanup:](BKJaliscoStatus, "dsidChangeCleanup:", a2);
}

void sub_1001C7B98(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BDSJaliscoDAAPClient sharedClient](BDSJaliscoDAAPClient, "sharedClient"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C7C24;
  v4[3] = &unk_1008EDBC8;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "resetStaleJaliscoDatabaseWithCompletion:", v4);

}

void sub_1001C7C24(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  uint8_t buf[4];
  id v10;

  v3 = a2;
  v4 = sub_100036938();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "App finished resetStaleJaliscoDatabase after clientDetectedStoreChangeAndAccountChange error:%@", buf, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "_logIfError:operation:", v3, CFSTR("deleting jalisco store after clientDetectedStoreChangeAndAccountChange"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001C7D50;
  v7[3] = &unk_1008E77C8;
  v8 = *(id *)(a1 + 40);
  objc_msgSend(v6, "refreshStoreWithCompletion:", v7);

}

void sub_1001C7D50(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  _DWORD v8[2];

  v4 = sub_100036938();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "refreshStoreWithCompletion : %{BOOL}d", (uint8_t *)v8, 8u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BDSJaliscoDAAPClient sharedClient](BDSJaliscoDAAPClient, "sharedClient"));
  objc_msgSend(v6, "updatePolitelyAfterSignOut:reason:completion:", 1, 6, &stru_1008EF140);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourceJaliscoDAAPClientProxy sharedproxy](BKLibraryDataSourceJaliscoDAAPClientProxy, "sharedproxy"));
  objc_msgSend(v7, "clientDetectedStoreChange:", *(_QWORD *)(a1 + 32));

}

void sub_1001C7E48(id a1, BOOL a2)
{
  _BOOL4 v2;
  id v3;
  NSObject *v4;
  _DWORD v5[2];

  v2 = a2;
  v3 = sub_100036938();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "App finished updatePolitelyAfterSignOut success:%{BOOL}d", (uint8_t *)v5, 8u);
  }

}

void sub_1001C8030(id a1, BKLibraryManagedObjectContext *a2)
{
  +[BKJaliscoStatus dsidChangeCleanup:](BKJaliscoStatus, "dsidChangeCleanup:", a2);
}

void sub_1001C8040(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BDSJaliscoDAAPClient sharedClient](BDSJaliscoDAAPClient, "sharedClient"));
  objc_msgSend(v2, "updatePolitelyAfterSignIn:reason:completion:", 1, 6, &stru_1008EF180);

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourceJaliscoDAAPClientProxy sharedproxy](BKLibraryDataSourceJaliscoDAAPClientProxy, "sharedproxy"));
  objc_msgSend(v3, "clientDetectedStoreChange:", *(_QWORD *)(a1 + 32));

}

void sub_1001C80B0(id a1, BOOL a2)
{
  _BOOL4 v2;
  id v3;
  NSObject *v4;
  _DWORD v5[2];

  v2 = a2;
  v3 = sub_100036938();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "App finished updatePolitelyAfterSignIn success:%{BOOL}d", (uint8_t *)v5, 8u);
  }

}

void sub_1001C81F8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Update Required"), &stru_10091C438, 0));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("To continue to see purchases from other devices available for download in your library, please update to the latest version of Apple Books."), &stru_10091C438, 0));
  v11 = (id)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v3, v5, 1));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v7, 1, 0));
  objc_msgSend(v11, "addAction:", v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "currentSceneController"));
  objc_msgSend(v10, "presentViewController:animated:completion:", v11, 1, 0);

}

void sub_1001C872C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

void sub_1001C8754(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001C8800;
  v8[3] = &unk_1008EF1D0;
  v5 = *(id *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v9 = v5;
  v10 = v6;
  v12 = v7;
  v13 = v4;
  v11 = *(id *)(a1 + 32);
  objc_msgSend(v4, "deleteCloudDataWithCompletion:", v8);

}

void sub_1001C8800(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  __int128 v8;
  _QWORD block[5];
  id v10;
  __int128 v11;
  uint64_t v12;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C88B0;
  block[3] = &unk_1008EF1A8;
  v5 = *(NSObject **)(a1 + 32);
  block[4] = *(_QWORD *)(a1 + 40);
  v10 = v4;
  v8 = *(_OWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 64);
  v6 = (id)v8;
  v11 = v8;
  v7 = v4;
  dispatch_async(v5, block);

}

void sub_1001C88B0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSString *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = NSStringFromClass(*(Class *)(a1 + 64));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("deleting %@ core data stores"), v5));
  objc_msgSend(v2, "_logIfError:operation:", v3, v6);

  v7 = *(void **)(a1 + 40);
  if (v7)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(_QWORD *)(v8 + 40);
    v9 = (id *)(v8 + 40);
    if (!v10)
      objc_storeStrong(v9, v7);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1001C8954(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;

  v3 = a2;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001C8A04;
  v8[3] = &unk_1008EF248;
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v9 = v4;
  v10 = v5;
  v11 = v3;
  v13 = v6;
  v12 = *(id *)(a1 + 32);
  v7 = v3;
  objc_msgSend(v7, "deleteCloudDataWithCompletion:", v8);

}

void sub_1001C8A04(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  __int128 v8;
  _QWORD block[5];
  id v10;
  id v11;
  __int128 v12;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001C8AC0;
  block[3] = &unk_1008EF220;
  v5 = *(NSObject **)(a1 + 32);
  block[4] = *(_QWORD *)(a1 + 40);
  v10 = v4;
  v11 = *(id *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 56);
  v6 = (id)v8;
  v12 = v8;
  v7 = v4;
  dispatch_async(v5, block);

}

void sub_1001C8AC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  objc_class *v4;
  NSString *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 48));
  v5 = NSStringFromClass(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("deleting %@ core data stores"), v6));
  objc_msgSend(v2, "_logIfError:operation:", v3, v7);

  v8 = *(void **)(a1 + 40);
  if (v8)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v11 = *(_QWORD *)(v9 + 40);
    v10 = (id *)(v9 + 40);
    if (!v11)
      objc_storeStrong(v10, v8);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1001C8B68(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, BOOL))v2 + 2))(v2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) == 0);
    v2 = v3;
  }

}

void sub_1001C9900(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_1001C99D0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetCache"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetFromCacheID:", v3));

  if (v5)
  {
    v7 = BKLibraryDataSourceMediaLibraryLog(v6);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      sub_1006A4B64((uint64_t)v3, v5);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "removed"));
    objc_msgSend(v9, "setObject:forKeyedSubscript:", v5, v3);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updated"));
    objc_msgSend(v10, "setObject:forKeyedSubscript:", 0, v3);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetCache"));
  objc_msgSend(v11, "uncacheAsset:cacheID:", v5, v3);

}

id sub_1001C9CB0(void *a1, const char *a2)
{
  return objc_msgSend(a1, "count");
}

void sub_1001C9F28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *i;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *j;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  id *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  id v62;
  _BYTE v63[128];
  _BYTE v64[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(*(id *)(a1 + 32), "q_willJoinPlistContentsOnFetch");
  v3 = *(void **)(a1 + 32);
  v62 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "q_plistContentsArrayWithError:", &v62));
  v5 = v62;
  objc_msgSend(*(id *)(a1 + 32), "q_didJoinPlistContentsOnFetch");
  if (v5)
  {
    v6 = objc_msgSend(*(id *)(a1 + 32), "q_clearAssetCaches");
    v9 = BKLibraryLog(v6, v7, v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      sub_1006A4C9C(a1 + 32, v10);

    v11 = objc_retainBlock(*(id *)(a1 + 40));
    v12 = v11;
    if (v11)
      (*((void (**)(id, _QWORD, id))v11 + 2))(v11, 0, v5);
    goto LABEL_34;
  }
  v53 = (id *)(a1 + 32);
  v49 = a1;
  v13 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v4, "count"));
  v52 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v4, "count"));
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v50 = v4;
  v14 = v4;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
  if (!v15)
    goto LABEL_18;
  v16 = v15;
  v17 = *(_QWORD *)v59;
  do
  {
    for (i = 0; i != v16; i = (char *)i + 1)
    {
      if (*(_QWORD *)v59 != v17)
        objc_enumerationMutation(v14);
      v19 = *(_QWORD *)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)i);
      v20 = +[BKPlistAsset newBlankAsset](BKPlistAsset, "newBlankAsset", v49);
      objc_msgSend(*v53, "_setPropertiesOfAsset:withPlistEntry:", v20, v19);
      objc_msgSend(v2, "addObject:", v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "assetID"));
      v22 = objc_msgSend(v21, "length");

      if (v22)
      {
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "assetID"));
        objc_msgSend(v13, "setObject:forKey:", v20, v23);

        v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "assetID"));
      }
      else
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "temporaryAssetID"));
        v26 = objc_msgSend(v25, "length");

        if (!v26)
          goto LABEL_16;
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "temporaryAssetID"));
        objc_msgSend(v13, "setObject:forKey:", v20, v27);

        v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "temporaryAssetID"));
      }
      v28 = (void *)v24;
      objc_msgSend(v52, "addObject:", v24);

LABEL_16:
    }
    v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
  }
  while (v16);
LABEL_18:

  v51 = v2;
  objc_msgSend(*v53, "q_processAssetStateChanges:", v2);
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v53, "assetCache"));
  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v53, "assetCacheByTemporaryAssetID"));
  objc_msgSend(*v53, "q_clearAssetCaches");
  v56 = 0u;
  v57 = 0u;
  v54 = 0u;
  v55 = 0u;
  v12 = v13;
  v31 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v54, v63, 16);
  if (v31)
  {
    v32 = v31;
    v33 = *(_QWORD *)v55;
    do
    {
      for (j = 0; j != v32; j = (char *)j + 1)
      {
        if (*(_QWORD *)v55 != v33)
          objc_enumerationMutation(v12);
        v35 = *(_QWORD *)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)j);
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v35, v49));
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "assetID"));
        v38 = objc_msgSend(v37, "length");

        if (v38)
          objc_msgSend(v29, "setObject:forKey:", v36, v35);
        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "temporaryAssetID"));
        if (objc_msgSend(v39, "length"))
          objc_msgSend(v30, "setObject:forKey:", v36, v39);

      }
      v32 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v54, v63, 16);
    }
    while (v32);
  }

  v43 = BKLibraryLog(v40, v41, v42);
  v44 = objc_claimAutoreleasedReturnValue(v43);
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
    sub_1006A4C04();

  v2 = v51;
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "valueForKey:", CFSTR("assetID")));
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "bu_arrayByRemovingNSNulls"));

  objc_msgSend(*(id *)(v49 + 32), "_addAssetIDsToCacheManager:", v51);
  v47 = objc_retainBlock(*(id *)(v49 + 40));
  v48 = v47;
  v5 = 0;
  if (v47)
    (*((void (**)(id, void *, _QWORD))v47 + 2))(v47, v46, 0);

  v4 = v50;
LABEL_34:

}

void sub_1001CA958(id *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  NSMutableDictionary *v26;
  NSMutableDictionary *v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  void *v31;
  id *v32;
  _UNKNOWN **v33;
  void *i;
  uint64_t v35;
  unsigned __int8 v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  _UNKNOWN **v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  unsigned int v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  unsigned int v56;
  char *v57;
  char *v58;
  char *j;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  void *k;
  uint64_t v69;
  void *v70;
  void *v71;
  NSMutableDictionary *v72;
  id v73;
  id v74;
  uint64_t v75;
  void *m;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  id v84;
  void *v85;
  void *v86;
  void *v87;
  id *v88;
  NSMutableDictionary *v89;
  id obj;
  NSMutableDictionary *v91;
  void *v92;
  uint64_t v93;
  id v94;
  void *v95;
  id v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  id v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _BYTE v114[128];
  _BYTE v115[128];
  _BYTE v116[128];
  _BYTE v117[128];

  v96 = objc_alloc_init((Class)NSMutableSet);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(a1[4], "count")));
  v110 = 0u;
  v111 = 0u;
  v112 = 0u;
  v113 = 0u;
  v3 = a1[4];
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v110, v117, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v111;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v111 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v110 + 1) + 8 * (_QWORD)v7);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetCache"));
        v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v8));
        if (v10)
        {
          v11 = (void *)v10;

LABEL_9:
          objc_msgSend(v2, "addObject:", v11);

          goto LABEL_10;
        }
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetCacheByTemporaryAssetID"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKey:", v8));

        if (v11)
          goto LABEL_9;
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        objc_msgSend(v2, "addObject:", v13);

        objc_msgSend(v96, "addObject:", v8);
LABEL_10:
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v14 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v110, v117, 16);
      v5 = v14;
    }
    while (v14);
  }

  v15 = v96;
  if (!objc_msgSend(v96, "count"))
  {
    v28 = BKLibraryLog(0, v16, v17);
    v29 = objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
      sub_1006A4D1C();

    kdebug_trace(725353716, 73, 0, 0, 0);
    v30 = objc_retainBlock(a1[6]);
    v23 = v30;
    if (v30)
      (*((void (**)(id, void *, _QWORD))v30 + 2))(v30, v2, 0);
    goto LABEL_78;
  }
  v18 = a1[5];
  v88 = a1 + 5;
  v109 = 0;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "q_plistContentsArrayWithError:", &v109));
  v20 = v109;
  v23 = v20;
  if (v20)
  {
    v24 = BKLibraryLog(v20, v21, v22);
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      sub_1006A4E68((uint64_t)v88, v25);

    kdebug_trace(725353716, 73, 0, 0, 0);
    v26 = (NSMutableDictionary *)objc_retainBlock(a1[6]);
    v27 = v26;
    if (v26)
      ((void (*)(NSMutableDictionary *, _QWORD, void *))v26[2].super.super.isa)(v26, 0, v23);
    goto LABEL_77;
  }
  v91 = objc_opt_new(NSMutableDictionary);
  v31 = v96;
  v89 = objc_opt_new(NSMutableDictionary);
  v105 = 0u;
  v106 = 0u;
  v107 = 0u;
  v108 = 0u;
  v86 = v19;
  obj = v19;
  v32 = a1 + 5;
  v94 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v116, 16);
  if (!v94)
    goto LABEL_50;
  v92 = v2;
  v93 = *(_QWORD *)v106;
  v33 = BCMutableCloudSyncVersions_ptr;
  do
  {
    for (i = 0; i != v94; i = (char *)i + 1)
    {
      if (*(_QWORD *)v106 != v93)
        objc_enumerationMutation(obj);
      v35 = *(_QWORD *)(*((_QWORD *)&v105 + 1) + 8 * (_QWORD)i);
      v36 = objc_msgSend(*v32, "_isSupplementalPDFFromPlistEntry:", v35, v86);
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33[232], "storeIdFromPlistEntry:", v35));
      v38 = v37;
      if (!v37 || (v36 & 1) != 0)
        v39 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v33[232], "uniqueIdFromPlistEntry:", v35));
      else
        v39 = v37;
      v40 = v39;
      v41 = v33;
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33[232], "temporaryItemIdentifierFromPlistEntry:", v35));
      if ((objc_msgSend(v31, "containsObject:", v40) & 1) == 0
        && !objc_msgSend(v31, "containsObject:", v42))
      {
        v43 = +[BKPlistAsset newBlankAsset](BKPlistAsset, "newBlankAsset");
        objc_msgSend(*v32, "_setPropertiesOfAsset:withPlistEntry:", v43, v35);
        v46 = objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "assetID"));
        if (v46)
        {
          v47 = (void *)v46;
          v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "assetID"));
          v49 = objc_msgSend(v96, "containsObject:", v48);

          v31 = v96;
          if (v49)
          {
            v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "assetID"));
            -[NSMutableDictionary setObject:forKey:](v91, "setObject:forKey:", v43, v50);
            goto LABEL_45;
          }
        }
        v51 = objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "temporaryAssetID"));
        if (v51)
        {
          v52 = (void *)v51;
          v53 = objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "temporaryAssetID"));
          v54 = v31;
          v55 = (void *)v53;
          v56 = objc_msgSend(v54, "containsObject:", v53);

          if (v56)
          {
            v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "temporaryAssetID"));
            -[NSMutableDictionary setObject:forKey:](v89, "setObject:forKey:", v43, v50);
            v31 = v96;
LABEL_45:

          }
          else
          {
            v31 = v96;
          }
        }
        v32 = a1 + 5;
        goto LABEL_48;
      }
      v43 = +[BKPlistAsset newBlankAsset](BKPlistAsset, "newBlankAsset");
      objc_msgSend(*v32, "_setPropertiesOfAsset:withPlistEntry:", v43, v35);
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "assetID"));

      if (v44)
      {
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "assetID"));
        -[NSMutableDictionary setObject:forKey:](v91, "setObject:forKey:", v43, v45);

      }
      if (v42)
        -[NSMutableDictionary setObject:forKey:](v89, "setObject:forKey:", v43, v42);
LABEL_48:

      v33 = v41;
      v2 = v92;
    }
    v94 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v116, 16);
  }
  while (v94);
LABEL_50:

  v57 = (char *)objc_msgSend(a1[4], "count");
  if (v57)
  {
    v58 = v57;
    for (j = 0; j != v58; ++j)
    {
      v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", j, v86));
      v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));

      if (v60 == v61)
      {
        v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectAtIndexedSubscript:", j));
        v63 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v91, "objectForKeyedSubscript:", v62));
        if (v63
          || (v63 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v89, "objectForKeyedSubscript:", v62))) != 0)
        {
          objc_msgSend(v2, "setObject:atIndexedSubscript:", v63, j);

        }
      }
    }
  }
  v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v88, "assetCache", v86));
  v101 = 0u;
  v102 = 0u;
  v103 = 0u;
  v104 = 0u;
  v27 = v91;
  v65 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v27, "countByEnumeratingWithState:objects:count:", &v101, v115, 16);
  if (v65)
  {
    v66 = v65;
    v67 = *(_QWORD *)v102;
    do
    {
      for (k = 0; k != v66; k = (char *)k + 1)
      {
        if (*(_QWORD *)v102 != v67)
          objc_enumerationMutation(v27);
        v69 = *(_QWORD *)(*((_QWORD *)&v101 + 1) + 8 * (_QWORD)k);
        v70 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v27, "objectForKeyedSubscript:", v69));
        objc_msgSend(v64, "setObject:forKey:", v70, v69);

      }
      v66 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v27, "countByEnumeratingWithState:objects:count:", &v101, v115, 16);
    }
    while (v66);
  }
  v95 = v64;

  v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v88, "assetCacheByTemporaryAssetID"));
  v97 = 0u;
  v98 = 0u;
  v99 = 0u;
  v100 = 0u;
  v72 = v89;
  v73 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v72, "countByEnumeratingWithState:objects:count:", &v97, v114, 16);
  if (v73)
  {
    v74 = v73;
    v75 = *(_QWORD *)v98;
    do
    {
      for (m = 0; m != v74; m = (char *)m + 1)
      {
        if (*(_QWORD *)v98 != v75)
          objc_enumerationMutation(v72);
        v77 = *(_QWORD *)(*((_QWORD *)&v97 + 1) + 8 * (_QWORD)m);
        v78 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v72, "objectForKeyedSubscript:", v77));
        objc_msgSend(v71, "setObject:forKey:", v78, v77);

      }
      v74 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v72, "countByEnumeratingWithState:objects:count:", &v97, v114, 16);
    }
    while (v74);
  }

  v79 = objc_msgSend(*v88, "q_processAssetStateChanges:", v2);
  v82 = BKLibraryLog(v79, v80, v81);
  v83 = objc_claimAutoreleasedReturnValue(v82);
  if (os_log_type_enabled(v83, OS_LOG_TYPE_DEBUG))
    sub_1006A4DD0();

  kdebug_trace(725353716, 73, 0, 0, 0);
  v84 = objc_retainBlock(a1[6]);
  v85 = v84;
  v15 = v96;
  v19 = v87;
  if (v84)
    (*((void (**)(id, void *, _QWORD))v84 + 2))(v84, v2, 0);

  v23 = 0;
LABEL_77:

LABEL_78:
}

void sub_1001CB3EC(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = objc_retainBlock(a1[7]);
  v8 = v7;
  if (v7)
    (*((void (**)(id, id, _QWORD, id))v7 + 2))(v7, v5, 0, v6);

  if (a1[4])
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "itunesuQueue"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001CB4F0;
    v12[3] = &unk_1008E7B70;
    v13 = a1[4];
    v14 = a1[6];
    v10 = v5;
    v11 = a1[5];
    v15 = v10;
    v16 = v11;
    dispatch_async(v9, v12);

  }
}

void sub_1001CB4F0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  UIImage *v7;
  NSData *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BLEduCloudContainer sharedEduCloudContainer](BLEduCloudContainer, "sharedEduCloudContainer"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bookItemForPermlink:", a1[4]));
  v4 = v3;
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "itunesuAssetID"));
    v6 = objc_msgSend(v5, "isEqualToString:", a1[5]);

    if ((v6 & 1) == 0)
    {
      v7 = (UIImage *)a1[6];
      if (v7)
      {
        v8 = UIImageJPEGRepresentation(v7, 0.0);
        v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      }
      else
      {
        v9 = 0;
      }
      objc_msgSend(v4, "_setCloudCoverImageData:", v9);
      objc_msgSend(v4, "setItunesuAssetID:", a1[5]);
      v16 = 0;
      objc_msgSend(v2, "updateBookItem:error:", v4, &v16);
      v10 = v16;
      v13 = v10;
      if (v10)
      {
        v14 = BKLibraryLog(v10, v11, v12);
        v15 = objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
          sub_1006A4EE8();

      }
    }
  }

}

void sub_1001CB8A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_1001CB9CC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  void *v13;

  v3 = a2;
  v4 = objc_opt_class(BKPlistAsset);
  v5 = BUDynamicCast(v4, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v9 = v6;
  if (v6)
  {
    if (objc_msgSend(v6, "isRestoring"))
      objc_msgSend(*(id *)(a1 + 32), "_prioritizeRestorePlistAsset:", v9);
  }
  else
  {
    v10 = BKLibraryLog(0, v7, v8);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006A5000(a1);

  }
  v12 = objc_retainBlock(*(id *)(a1 + 48));
  v13 = v12;
  if (v12)
    (*((void (**)(id, id, _QWORD, _QWORD))v12 + 2))(v12, v3, 0, 0);

}

void sub_1001CBBC8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, void *, id);
  void *v7;
  void *v8;
  unsigned int v9;
  id v10;

  v10 = a2;
  v5 = a3;
  if (v5
    || objc_msgSend(v10, "count") == (id)1
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "firstObject")),
        v9 = objc_msgSend(v8, "conformsToProtocol:", &OBJC_PROTOCOL___BKAsset),
        v8,
        v9))
  {
    v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "firstObject"));
      v6[2](v6, v7, v5);
LABEL_8:

    }
  }
  else
  {
    v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorInvalidAssetError, 0));
      v6[2](v6, 0, v7);
      goto LABEL_8;
    }
  }

}

void sub_1001CBEA8(id *a1)
{
  id v2;
  NSObject *v3;
  id v4;
  id v5;
  id v6;
  _QWORD block[5];
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;

  if (objc_msgSend(a1[4], "length"))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001CBFF4;
    v10[3] = &unk_1008EF370;
    v2 = a1[5];
    v11 = a1[4];
    v12 = a1[6];
    objc_msgSend(v2, "q_asyncReplacePlistEntries:notify:completion:", v10, 1, a1[7]);
    v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "updateAssetMetadataQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001CC0D4;
    block[3] = &unk_1008E7928;
    v4 = a1[6];
    block[4] = a1[5];
    v8 = v4;
    v9 = a1[4];
    dispatch_async(v3, block);

  }
  else
  {
    v5 = objc_retainBlock(a1[7]);
    if (v5)
    {
      v6 = v5;
      (*((void (**)(id, _QWORD, _QWORD))v5 + 2))(v5, 0, 0);
      v5 = v6;
    }

  }
}

id sub_1001CBFF4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist assetIDFromPlistEntry:](IMLibraryPlist, "assetIDFromPlistEntry:", v3));
  if (objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32)))
  {
    v5 = objc_msgSend(v3, "mutableCopy");
    v6 = *(_QWORD *)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForTitle](IMLibraryPlist, "keyNameForTitle"));
    objc_msgSend(v5, "setObject:forKey:", v6, v7);

    v8 = *(_QWORD *)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForSortTitle](IMLibraryPlist, "keyNameForSortTitle"));
    objc_msgSend(v5, "setObject:forKey:", v8, v9);

  }
  else
  {
    v5 = 0;
  }
  v10 = objc_msgSend(v5, "copy");

  return v10;
}

void sub_1001CC0D4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  objc_msgSend(v2, "saveTitle:author:genre:language:pageProgressionDirection:forAssetID:", *(_QWORD *)(a1 + 40), 0, 0, 0, 0, *(_QWORD *)(a1 + 48));

}

void sub_1001CC2E4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5[2];
  id v6;
  _QWORD v7[4];
  int8x16_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  char v12;

  if (objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001CC410;
    v10[3] = &unk_1008EF398;
    v2 = *(void **)(a1 + 40);
    v11 = *(id *)(a1 + 32);
    v12 = *(_BYTE *)(a1 + 56);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1001CC4C0;
    v7[3] = &unk_1008E80F8;
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 32);
    v3 = v5[0];
    v8 = vextq_s8(*(int8x16_t *)v5, *(int8x16_t *)v5, 8uLL);
    v9 = *(id *)(a1 + 48);
    objc_msgSend(v2, "q_asyncReplacePlistEntries:notify:completion:", v10, 1, v7);

  }
  else
  {
    v4 = objc_retainBlock(*(id *)(a1 + 48));
    if (v4)
    {
      v6 = v4;
      (*((void (**)(id, _QWORD, _QWORD))v4 + 2))(v4, 0, 0);
      v4 = v6;
    }

  }
}

id sub_1001CC410(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist assetIDFromPlistEntry:](IMLibraryPlist, "assetIDFromPlistEntry:", v3));
  if (objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 32)))
  {
    v5 = objc_msgSend(v3, "mutableCopy");
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v6, CFSTR("Ephemeral"));

  }
  else
  {
    v5 = 0;
  }
  v7 = objc_msgSend(v5, "copy");

  return v7;
}

void sub_1001CC4C0(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD block[5];
  id v11;
  id v12;
  id v13;
  char v14;

  v5 = a3;
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetsQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001CC588;
  block[3] = &unk_1008EE1B8;
  v7 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v11 = v7;
  v8 = *(id *)(a1 + 48);
  v14 = a2;
  v12 = v5;
  v13 = v8;
  v9 = v5;
  dispatch_async(v6, block);

}

void sub_1001CC588(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "q_evictFromAssetCaches:", *(_QWORD *)(a1 + 40));
  v2 = objc_retainBlock(*(id *)(a1 + 56));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 48));
    v2 = v3;
  }

}

id sub_1001CC66C(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "reloadInGroup:", a2);
}

void sub_1001CC740(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "bu_arrayByRemovingNSNulls"));
  if (objc_msgSend(v4, "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    objc_msgSend(v3, "libraryDataSource:addedAssets:", *(_QWORD *)(a1 + 32), v4);

  }
}

void sub_1001CD1E0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[4];
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetCache"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetCacheByTemporaryAssetID"));
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v4 = *(id *)(a1 + 40);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v9));
        objc_msgSend(v2, "setObject:forKey:", v10, v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "temporaryAssetID"));
        if (v11)
          objc_msgSend(v3, "setObject:forKey:", v10, v11);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }

  v12 = *(void **)(a1 + 32);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001CD3A4;
  v14[3] = &unk_1008EA2C0;
  v13 = *(_QWORD *)(a1 + 48);
  v15 = *(id *)(a1 + 56);
  objc_msgSend(v12, "q_asyncAddAssetDictionaries:completion:", v13, v14);

}

void sub_1001CD3A4(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, uint64_t, _QWORD))v1 + 2))(v1, 1, 0);
    v1 = v2;
  }

}

void sub_1001CD5E8(id *a1)
{
  id v2;
  id v3;

  if (objc_msgSend(a1[4], "count"))
  {
    _objc_msgSend(a1[5], "q_asyncRemovePlistAssets:notify:completion:", a1[4], 1, a1[6]);
  }
  else
  {
    v2 = objc_retainBlock(a1[6]);
    if (v2)
    {
      v3 = v2;
      (*((void (**)(id, uint64_t, _QWORD))v2 + 2))(v2, 1, 0);
      v2 = v3;
    }

  }
}

void sub_1001CD928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001CD968(uint64_t a1)
{
  id *v2;
  void *v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  id v43;
  uint8_t buf[4];
  void *v45;
  __int16 v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;

  v2 = (id *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetCache"));
  v4 = (uint64_t *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40)));

  if (v5)
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "coverWritingMode"));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "language"));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "pageProgressionDirection"));
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

  }
  else
  {
    v18 = BKLibraryLog(v6, v7, v8);
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
      v21 = *v4;
      *(_DWORD *)buf = 138543874;
      v45 = v20;
      v46 = 2160;
      v47 = 1752392040;
      v48 = 2112;
      v49 = v21;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%{public}@: coverWritingModeLanguageAndPageProgressionDirectionFromAssetID: Asset is not in cache, reading full plist from disk. assetID: %{mask.hash}@", buf, 0x20u);

    }
    v22 = *v2;
    v43 = 0;
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "q_plistContentsWithError:", &v43));
    v24 = v43;
    v27 = v24;
    if (v24)
    {
      v28 = BKLibraryLog(v24, v25, v26);
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        sub_1006A53E8();
    }
    else
    {
      v29 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist entryForAssetID:contents:](IMLibraryPlist, "entryForAssetID:contents:", *v4, v23));
      if (v29)
      {
        v32 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist coverWritingModeFromPlistEntry:](IMLibraryPlist, "coverWritingModeFromPlistEntry:", v29));
        v33 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v34 = *(void **)(v33 + 40);
        *(_QWORD *)(v33 + 40) = v32;

        v35 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist languageFromPlistEntry:](IMLibraryPlist, "languageFromPlistEntry:", v29));
        v36 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v37 = *(void **)(v36 + 40);
        *(_QWORD *)(v36 + 40) = v35;

        v38 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist pageProgressionFromPlistEntry:](IMLibraryPlist, "pageProgressionFromPlistEntry:", v29));
        v39 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v40 = *(void **)(v39 + 40);
        *(_QWORD *)(v39 + 40) = v38;

        objc_msgSend(*(id *)(a1 + 32), "q_refreshAssetCachesFromPlistContents:", v23);
      }
      else
      {
        v41 = BKLibraryLog(0, v30, v31);
        v42 = objc_claimAutoreleasedReturnValue(v41);
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
          sub_1006A52D4(v2, v4, v42);

      }
    }

  }
}

void sub_1001CDD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001CDD4C(_QWORD *a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v2 = (void *)a1[4];
  v14 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "q_plistContentsWithError:", &v14));
  v4 = v14;
  v5 = v4;
  if (v3)
    v6 = v4 == 0;
  else
    v6 = 0;
  if (v6)
  {
    v7 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist entryForAssetID:contents:](IMLibraryPlist, "entryForAssetID:contents:", a1[5], v3));
    v8 = *(_QWORD *)(a1[7] + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    if (!*(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", a1[6]));
      v11 = objc_claimAutoreleasedReturnValue(+[IMLibraryPlist entryForAssetURL:contents:](IMLibraryPlist, "entryForAssetURL:contents:", v10, v3));
      v12 = *(_QWORD *)(a1[7] + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
  }

}

void sub_1001CFA70(_Unwind_Exception *a1)
{
  int v1;

  if (v1)
    objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1001CFA88(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x1001CFA94);
}

void sub_1001D0AFC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("assetID")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("temporaryAssetID")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "arrayByAddingObjectsFromArray:", v3));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bu_arrayByRemovingNSNulls"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v5));
  objc_msgSend(v8, "incrementVersionForIdentifiers:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  objc_msgSend(v7, "libraryDataSource:updatedAssets:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

void sub_1001D0E8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _UNKNOWN **v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *j;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id obj;
  void *v48;
  id v49;
  _QWORD v50[4];
  id v51;
  id v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[128];
  _BYTE v63[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plist"));
  v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "directory"));
  v44 = (void *)objc_claimAutoreleasedReturnValue(+[BLLockFile iTunesSyncLockFile](BLLockFile, "iTunesSyncLockFile"));
  v45 = v2;
  if (objc_msgSend(v44, "tryLock:", 0))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "plist"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contents"));

  }
  else
  {
    v4 = 0;
  }
  v60 = 0u;
  v61 = 0u;
  v59 = 0u;
  v58 = 0u;
  obj = *(id *)(v1 + 40);
  v49 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v63, 16);
  if (v49)
  {
    v5 = *(_QWORD *)v59;
    v6 = BCMutableCloudSyncVersions_ptr;
    v46 = *(_QWORD *)v59;
    do
    {
      for (i = 0; i != v49; i = (char *)i + 1)
      {
        if (*(_QWORD *)v59 != v5)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6[232], "lookupAssetURLStringFromAssetID:contents:", v8, v4));
        if (!objc_msgSend(v9, "length"))
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 48), "objectForKey:", v8));
          if (v10)
          {
            v11 = v6[232];
            v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v10));
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "entryForAssetURL:contents:", v12, v4));

            if (v13)
            {
              v14 = v10;

              v9 = v14;
            }
          }

        }
        if (objc_msgSend(v8, "length") && objc_msgSend(v9, "length"))
        {
          v15 = v1;
          v16 = v4;
          v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v9));
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "path"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "lastPathComponent"));

          if (objc_msgSend(v19, "length"))
          {
            objc_msgSend(*(id *)(v1 + 56), "addObject:", v8);
            objc_msgSend(*(id *)(v1 + 64), "addObject:", v19);
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "assetCache"));
            v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKey:", v8));
            if (v21)
            {
              v22 = (void *)v21;

              goto LABEL_20;
            }
            v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "assetCacheByTemporaryAssetID"));
            v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKey:", v8));

            if (v22)
            {
LABEL_20:
              objc_msgSend(*(id *)(v15 + 72), "addObject:", v22);

            }
          }

          v4 = v16;
          v5 = v46;
          v1 = v15;
          v6 = BCMutableCloudSyncVersions_ptr;
        }
        if (objc_msgSend(v9, "length"))
        {
          v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "lastPathComponent"));
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "stringByAppendingPathComponent:", v24));

          v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "fullPathToAssetID"));
          objc_msgSend(v26, "removeObjectForKey:", v25);

        }
      }
      v49 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v63, 16);
    }
    while (v49);
  }

  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "booksRootPath"));
  if (objc_msgSend(*(id *)(v1 + 64), "count"))
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 64), "allObjects"));
    v29 = v45;
    objc_msgSend(v45, "addDeletedFiles:", v28);

    v56 = 0u;
    v57 = 0u;
    v54 = 0u;
    v55 = 0u;
    v30 = *(id *)(v1 + 56);
    v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v54, v62, 16);
    if (v31)
    {
      v32 = v31;
      v33 = *(_QWORD *)v55;
      do
      {
        for (j = 0; j != v32; j = (char *)j + 1)
        {
          if (*(_QWORD *)v55 != v33)
            objc_enumerationMutation(v30);
          objc_msgSend(*(id *)(v1 + 32), "q_evictFromAssetCaches:", *(_QWORD *)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)j));
        }
        v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v54, v62, 16);
      }
      while (v32);
    }

    v35 = *(void **)(v1 + 32);
    v36 = *(void **)(v1 + 64);
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_1001D13BC;
    v50[3] = &unk_1008ECEC8;
    v51 = v36;
    v37 = v27;
    v38 = *(_QWORD *)(v1 + 32);
    v52 = v37;
    v53 = v38;
    objc_msgSend(v35, "q_asyncRemovePlistPaths:completion:", v51, v50);
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "libraryManager"));
    objc_msgSend(v39, "libraryDataSource:removedAssets:", *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 72));

    objc_msgSend(*(id *)(v1 + 32), "_removeAssetIDsFromCacheManager:", *(_QWORD *)(v1 + 72));
    v40 = objc_retainBlock(*(id *)(v1 + 80));
    v41 = v40;
    if (v40)
      (*((void (**)(id, uint64_t, _QWORD))v40 + 2))(v40, 1, 0);

    v42 = v51;
  }
  else
  {
    v43 = objc_retainBlock(*(id *)(v1 + 80));
    v42 = v43;
    v29 = v45;
    if (v43)
      (*((void (**)(id, uint64_t, _QWORD))v43 + 2))(v43, 1, 0);
  }

}

void sub_1001D13BC(uint64_t a1, int a2)
{
  id v3;
  id v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  __int128 v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[4];
  void *v25;
  __int16 v26;
  void *v27;
  _BYTE v28[128];

  if (a2)
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v3 = *(id *)(a1 + 32);
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    if (v4)
    {
      v6 = v4;
      v7 = *(_QWORD *)v21;
      *(_QWORD *)&v5 = 138412546;
      v18 = v5;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v21 != v7)
            objc_enumerationMutation(v3);
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v8), v18));
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v9));

          v11 = *(void **)(a1 + 48);
          v19 = 0;
          objc_msgSend(v11, "removeFileWithURL:error:", v10, &v19);
          v12 = v19;
          v15 = v12;
          if (v12)
          {
            v16 = BKLibraryLog(v12, v13, v14);
            v17 = objc_claimAutoreleasedReturnValue(v16);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = v18;
              v25 = v10;
              v26 = 2112;
              v27 = v15;
              _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Error: failed to remove: [URL: %@] [Error: %@]", buf, 0x16u);
            }

          }
          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
      }
      while (v6);
    }

  }
}

id sub_1001D1848(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist assetIDFromPlistEntry:](IMLibraryPlist, "assetIDFromPlistEntry:", a2));
  v4 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3);

  return v4;
}

id sub_1001D1920(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist folderNameFromPlistEntry:](IMLibraryPlist, "folderNameFromPlistEntry:", a2));
  v4 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3);

  return v4;
}

void sub_1001D1A1C(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  _QWORD v14[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001D1B3C;
  v14[3] = &unk_1008E72C0;
  v14[4] = *(_QWORD *)(a1 + 32);
  v3 = objc_msgSend(v2, "beginBackgroundTaskWithName:expirationHandler:", CFSTR("BKLibraryDataSourcePlist Remove"), v14);
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ioQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001D1B48;
  block[3] = &unk_1008EF460;
  v5 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v6 = v5;
  v13 = *(_BYTE *)(a1 + 56);
  v9 = v2;
  v10 = v6;
  v12 = v3;
  v11 = *(id *)(a1 + 48);
  v7 = v2;
  dispatch_async(v4, block);

}

id sub_1001D1B3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundTaskCancelled:", 1);
}

void sub_1001D1B48(uint64_t a1)
{
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  _UNKNOWN **v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *i;
  uint64_t v25;
  NSObject *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  NSObject *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  void *v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  char *v59;
  id v60;
  id *v61;
  void *v62;
  void *v63;
  _QWORD block[4];
  id v65;
  id v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint8_t buf[4];
  uint64_t v74;
  __int16 v75;
  const char *v76;
  __int16 v77;
  unsigned int v78;
  __int16 v79;
  int v80;
  __int16 v81;
  int v82;
  _BYTE v83[128];

  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "setStartQueueGeneration:", objc_msgSend(*(id *)(a1 + 32), "currentQueueGeneration"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "plist"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contents"));
  v5 = v4;
  if (v4)
    v6 = v4;
  else
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionary](NSDictionary, "dictionary"));
  v62 = v6;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plist"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "unfilteredContents"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", v9));
  v60 = objc_msgSend(v10, "count");

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plist"));
  v59 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "path"));

  objc_msgSend(*(id *)(a1 + 32), "setBackgroundTaskCancelled:", 0);
  v12 = 0;
  v13 = BCMutableCloudSyncVersions_ptr;
  v61 = v2;
  while (1)
  {
    v14 = objc_autoreleasePoolPush();
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13[132], "iTunesSyncLockFile"));
    if (objc_msgSend(v15, "tryLock:", 1))
    {
      v63 = v14;
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v62, "objectForKey:", v17));

      v71 = 0u;
      v72 = 0u;
      v69 = 0u;
      v70 = 0u;
      v19 = v18;
      v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v69, v83, 16);
      if (v20)
      {
        v21 = v20;
        v22 = 0;
        v23 = *(_QWORD *)v70;
        do
        {
          for (i = 0; i != v21; i = (char *)i + 1)
          {
            if (*(_QWORD *)v70 != v23)
              objc_enumerationMutation(v19);
            v25 = *(_QWORD *)(*((_QWORD *)&v69 + 1) + 8 * (_QWORD)i);
            if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 48) + 16))())
              ++v22;
            else
              objc_msgSend(v16, "addObject:", v25);
          }
          v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v69, v83, 16);
        }
        while (v21);
      }
      else
      {
        v22 = 0;
      }

      v27 = objc_msgSend(v19, "count");
      v30 = (int)v27;
      if (v22 > 0 || v60 > v27)
      {
        v32 = objc_msgSend(v62, "mutableCopyWithZone:", 0);
        v33 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
        -[NSObject setObject:forKey:](v32, "setObject:forKey:", v16, v33);

        v37 = BKLibraryLog(v34, v35, v36);
        v38 = objc_claimAutoreleasedReturnValue(v37);
        v2 = v61;
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
        {
          v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v61, "identifier"));
          v53 = objc_msgSend(v16, "count");
          *(_DWORD *)buf = 138544386;
          v74 = (uint64_t)v58;
          v75 = 2114;
          v76 = v59;
          v77 = 1024;
          v78 = v53;
          v79 = 1024;
          v80 = v22;
          v81 = 1024;
          v82 = (_DWORD)v60 - v30;
          _os_log_debug_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "%{public}@ Rewriting the plist: %{public}@ -- [%d Remaining] [Removed: %d] [Filtered: %d]", buf, 0x28u);

        }
        LODWORD(v26) = objc_msgSend(*(id *)(a1 + 32), "q_rewritePlistDictionary:path:notify:", v32, v59, *(unsigned __int8 *)(a1 + 72));
        v14 = v63;
      }
      else
      {
        v31 = BKLibraryLog(v27, v28, v29);
        v32 = objc_claimAutoreleasedReturnValue(v31);
        v2 = v61;
        v14 = v63;
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
        {
          v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v61, "identifier"));
          v52 = objc_msgSend(v16, "count");
          *(_DWORD *)buf = 138543874;
          v74 = (uint64_t)v51;
          v75 = 2114;
          v76 = v59;
          v77 = 1024;
          v78 = v52;
          _os_log_debug_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "%{public}@ No need to rewrite %{public}@. {Nothing removed} %d entries", buf, 0x1Cu);

        }
        LODWORD(v26) = 1;
      }

      v13 = BCMutableCloudSyncVersions_ptr;
    }
    else
    {
      LODWORD(v26) = 0;
    }

    objc_autoreleasePoolPop(v14);
    v42 = BKLibraryLog(v39, v40, v41);
    v43 = objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
    {
      v48 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
      v49 = (void *)v48;
      *(_DWORD *)buf = 138543874;
      v50 = "NO";
      if ((_DWORD)v26)
        v50 = "YES";
      v74 = v48;
      v75 = 2082;
      v76 = v50;
      v77 = 1024;
      v78 = v12 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);

    }
    v44 = v12 > 3 ? 1 : (char)v26;
    if ((v44 & 1) != 0)
      break;
    v45 = objc_msgSend(*v2, "backgroundTaskCancelled");
    if ((_DWORD)v45)
    {
      v54 = BKLibraryLog(v45, v46, v47);
      v26 = objc_claimAutoreleasedReturnValue(v54);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        sub_1006A59FC((uint64_t)v2);

      LOBYTE(v26) = 0;
      break;
    }
    usleep(0x61A8u);
    ++v12;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001D212C;
  block[3] = &unk_1008ED620;
  v55 = *(id *)(a1 + 40);
  v57 = *(void **)(a1 + 56);
  v56 = *(_QWORD *)(a1 + 64);
  v65 = v55;
  v67 = v56;
  v66 = v57;
  v68 = (char)v26;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001D212C(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(a1 + 48));
  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    v2 = v3;
  }

}

void sub_1001D2230(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  _QWORD v14[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001D2350;
  v14[3] = &unk_1008E72C0;
  v14[4] = *(_QWORD *)(a1 + 32);
  v3 = objc_msgSend(v2, "beginBackgroundTaskWithName:expirationHandler:", CFSTR("BKLibraryDataSourcePlist Replace"), v14);
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ioQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001D235C;
  block[3] = &unk_1008EF460;
  v5 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v6 = v5;
  v13 = *(_BYTE *)(a1 + 56);
  v9 = v2;
  v10 = v6;
  v12 = v3;
  v11 = *(id *)(a1 + 48);
  v7 = v2;
  dispatch_async(v4, block);

}

id sub_1001D2350(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundTaskCancelled:", 1);
}

void sub_1001D235C(uint64_t a1)
{
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  unint64_t v9;
  _UNKNOWN **v10;
  __int128 v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *i;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  void *v51;
  unsigned int v52;
  void *v53;
  unsigned int v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void *v58;
  __int128 v59;
  char *v60;
  id *v61;
  void *v62;
  void *v63;
  unint64_t v64;
  _QWORD block[4];
  id v66;
  id v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint8_t buf[4];
  uint64_t v75;
  __int16 v76;
  const char *v77;
  __int16 v78;
  unsigned int v79;
  __int16 v80;
  int v81;
  _BYTE v82[128];

  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "setStartQueueGeneration:", objc_msgSend(*(id *)(a1 + 32), "currentQueueGeneration"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "plist"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contents"));
  v5 = v4;
  if (v4)
    v6 = v4;
  else
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionary](NSDictionary, "dictionary"));
  v7 = v6;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plist"));
  v60 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "path"));

  objc_msgSend(*(id *)(a1 + 32), "setBackgroundTaskCancelled:", 0);
  v9 = 0;
  v10 = BCMutableCloudSyncVersions_ptr;
  *(_QWORD *)&v11 = 138544130;
  v59 = v11;
  v61 = v2;
  v62 = v7;
  while (1)
  {
    v12 = objc_autoreleasePoolPush();
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10[132], "iTunesSyncLockFile"));
    if (!objc_msgSend(v13, "tryLock:", 1))
    {
      LODWORD(v37) = 0;
      goto LABEL_26;
    }
    v63 = v12;
    v64 = v9;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v15));

    v72 = 0u;
    v73 = 0u;
    v70 = 0u;
    v71 = 0u;
    v17 = v16;
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v70, v82, 16);
    if (!v18)
    {

LABEL_22:
      v38 = BKLibraryLog(v28, v29, v30);
      v31 = objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
      {
        v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
        v52 = objc_msgSend(v14, "count");
        *(_DWORD *)buf = 138543874;
        v75 = (uint64_t)v51;
        v76 = 2114;
        v77 = v60;
        v78 = 1024;
        v79 = v52;
        _os_log_debug_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "%{public}@ No need to rewrite %{public}@. {Nothing replaced} %d entries", buf, 0x1Cu);

      }
      LODWORD(v37) = 1;
      goto LABEL_25;
    }
    v19 = v18;
    v20 = 0;
    v21 = *(_QWORD *)v71;
    do
    {
      for (i = 0; i != v19; i = (char *)i + 1)
      {
        if (*(_QWORD *)v71 != v21)
          objc_enumerationMutation(v17);
        v23 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * (_QWORD)i);
        v24 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
        v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
        if (v25)
        {
          ++v20;
          v26 = v14;
          v27 = v25;
        }
        else
        {
          v26 = v14;
          v27 = v23;
        }
        objc_msgSend(v26, "addObject:", v27, v59);

      }
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v70, v82, 16);
    }
    while (v19);

    v2 = v61;
    v7 = v62;
    if (v20 < 1)
      goto LABEL_22;
    v31 = objc_msgSend(v62, "mutableCopy");
    v32 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
    -[NSObject setObject:forKey:](v31, "setObject:forKey:", v14, v32);

    v36 = BKLibraryLog(v33, v34, v35);
    v37 = objc_claimAutoreleasedReturnValue(v36);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
    {
      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v61, "identifier"));
      v54 = objc_msgSend(v14, "count");
      *(_DWORD *)buf = v59;
      v75 = (uint64_t)v53;
      v76 = 2114;
      v77 = v60;
      v78 = 1024;
      v79 = v54;
      v80 = 1024;
      v81 = v20;
      _os_log_debug_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEBUG, "%{public}@ Rewriting the plist: %{public}@ -- [Total: %d] [Replaced: %d]", buf, 0x22u);

    }
    LODWORD(v37) = objc_msgSend(*(id *)(a1 + 32), "q_rewritePlistDictionary:path:notify:", v31, v60, *(unsigned __int8 *)(a1 + 72));
LABEL_25:
    v12 = v63;

    v10 = BCMutableCloudSyncVersions_ptr;
    v9 = v64;
LABEL_26:

    objc_autoreleasePoolPop(v12);
    v42 = BKLibraryLog(v39, v40, v41);
    v43 = objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
    {
      v48 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
      v49 = (void *)v48;
      *(_DWORD *)buf = 138543874;
      v50 = "NO";
      if ((_DWORD)v37)
        v50 = "YES";
      v75 = v48;
      v76 = 2082;
      v77 = v50;
      v78 = 1024;
      v79 = v9 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);

    }
    if (v9 > 3)
      v44 = 1;
    else
      v44 = (char)v37;
    if ((v44 & 1) != 0)
      goto LABEL_39;
    v45 = objc_msgSend(*v2, "backgroundTaskCancelled");
    if ((_DWORD)v45)
      break;
    usleep(0x61A8u);
    ++v9;
  }
  v55 = BKLibraryLog(v45, v46, v47);
  v37 = objc_claimAutoreleasedReturnValue(v55);
  if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
    sub_1006A59FC((uint64_t)v2);

  LOBYTE(v37) = 0;
LABEL_39:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001D28BC;
  block[3] = &unk_1008ED620;
  v56 = *(id *)(a1 + 40);
  v58 = *(void **)(a1 + 56);
  v57 = *(_QWORD *)(a1 + 64);
  v66 = v56;
  v68 = v57;
  v67 = v58;
  v69 = (char)v37;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001D28BC(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(a1 + 48));
  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    v2 = v3;
  }

}

void sub_1001D29B8(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  _QWORD v7[5];
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1001D2AD0;
  v12[3] = &unk_1008E72C0;
  v12[4] = *(_QWORD *)(a1 + 32);
  v3 = objc_msgSend(v2, "beginBackgroundTaskWithName:expirationHandler:", CFSTR("BKLibraryDataSourcePlist Add"), v12);
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ioQueue"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001D2ADC;
  v7[3] = &unk_1008ED928;
  v5 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v5;
  v9 = v2;
  v11 = v3;
  v10 = *(id *)(a1 + 48);
  v6 = v2;
  dispatch_async(v4, v7);

}

id sub_1001D2AD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundTaskCancelled:", 1);
}

void sub_1001D2ADC(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  unint64_t v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;
  __int128 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  unsigned int v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  id *v28;
  void *v29;
  _UNKNOWN **v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  void *v48;
  unsigned int v49;
  uint64_t v50;
  NSObject *v51;
  id v52;
  uint64_t v53;
  void *v54;
  __int128 v55;
  void *v56;
  void *v57;
  void *v58;
  unint64_t v59;
  _QWORD block[4];
  id v61;
  id v62;
  uint64_t v63;
  char v64;
  uint8_t buf[4];
  uint64_t v66;
  __int16 v67;
  const char *v68;
  __int16 v69;
  int v70;

  v1 = a1;
  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "setStartQueueGeneration:", objc_msgSend(*(id *)(a1 + 32), "currentQueueGeneration"));
  objc_msgSend(*v2, "setBackgroundTaskCancelled:", 0);
  v3 = 0;
  v4 = BCMutableCloudSyncVersions_ptr;
  v5 = BCMutableCloudSyncVersions_ptr;
  *(_QWORD *)&v6 = 138543618;
  v55 = v6;
  while (1)
  {
    v7 = objc_autoreleasePoolPush();
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[132], "iTunesSyncLockFile"));
    if (objc_msgSend(v8, "tryLock:", 1))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "plist"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "contents"));
      v11 = v10;
      v58 = v7;
      v59 = v3;
      if (v10)
        v12 = v10;
      else
        v12 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionary](NSDictionary, "dictionary"));
      v14 = v12;

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "plist"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "path"));

      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5[232], "keyNameForBooksArray"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKey:", v17));

      v57 = v18;
      if (v18)
        v19 = objc_msgSend(v18, "mutableCopyWithZone:", 0);
      else
        v19 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
      v20 = v19;
      objc_msgSend(v19, "addObjectsFromArray:", *(_QWORD *)(v1 + 40), v55);
      v21 = objc_msgSend(v14, "mutableCopyWithZone:", 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5[232], "keyNameForBooksArray"));
      objc_msgSend(v21, "setObject:forKey:", v20, v22);

      v26 = BKLibraryLog(v23, v24, v25);
      v27 = objc_claimAutoreleasedReturnValue(v26);
      v56 = v14;
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
        v49 = objc_msgSend(v20, "count");
        *(_DWORD *)buf = v55;
        v66 = (uint64_t)v48;
        v67 = 1024;
        LODWORD(v68) = v49;
        _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "%{public}@ Trying to rewritePlistDictionary: %d entries", buf, 0x12u);

      }
      v13 = objc_msgSend(*(id *)(v1 + 32), "q_rewritePlistDictionary:path:notify:", v21, v16, 1);
      v28 = v2;
      v29 = *(void **)(v1 + 40);
      v30 = v5;
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5[232], "keyNameForPath"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "valueForKey:", v31));

      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "plist"));
      objc_msgSend(v33, "removeDeletedPaths:", v32);

      v5 = v30;
      v2 = v28;

      v7 = v58;
      v3 = v59;
      v4 = BCMutableCloudSyncVersions_ptr;
    }
    else
    {
      v13 = 0;
    }

    objc_autoreleasePoolPop(v7);
    v37 = BKLibraryLog(v34, v35, v36);
    v38 = objc_claimAutoreleasedReturnValue(v37);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
    {
      v43 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "identifier"));
      v44 = v5;
      v45 = v1;
      v46 = (void *)v43;
      *(_DWORD *)buf = 138543874;
      v47 = "NO";
      if (v13)
        v47 = "YES";
      v66 = v43;
      v67 = 2082;
      v68 = v47;
      v69 = 1024;
      v70 = v3 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);

      v1 = v45;
      v5 = v44;
    }

    v39 = v3 > 3 ? 1 : v13;
    if ((v39 & 1) != 0)
      break;
    v40 = objc_msgSend(*v2, "backgroundTaskCancelled");
    if ((_DWORD)v40)
    {
      v50 = BKLibraryLog(v40, v41, v42);
      v51 = objc_claimAutoreleasedReturnValue(v50);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
        sub_1006A59FC((uint64_t)v2);

      LOBYTE(v13) = 0;
      break;
    }
    usleep(0x61A8u);
    ++v3;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001D2F44;
  block[3] = &unk_1008ED620;
  v52 = *(id *)(v1 + 48);
  v54 = *(void **)(v1 + 56);
  v53 = *(_QWORD *)(v1 + 64);
  v61 = v52;
  v63 = v53;
  v62 = v54;
  v64 = v13;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001D2F44(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(a1 + 48));
  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    v2 = v3;
  }

}

void sub_1001D31BC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = objc_opt_class(BKPlistAsset);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));

  v6 = BUDynamicCast(v4, v5);
  v8 = (id)objc_claimAutoreleasedReturnValue(v6);

  v7 = v8;
  if (v8)
  {
    objc_msgSend(*(id *)(a1 + 32), "_prioritizeRestorePlistAsset:", v8);
    v7 = v8;
  }

}

void sub_1001D3618(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_1001D3650(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1001D3814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BKLibraryAudiobookProgress *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  BKLibraryAudiobookProgress *v14;
  uint64_t v15;
  void *v16;
  id v17;

  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", CFSTR("chapterProgress")))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "objectForKey:", *(_QWORD *)(a1 + 48)));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    if (!v5)
    {
      v6 = -[BKLibraryAudiobookProgress initWithKind:instance:parameters:]([BKLibraryAudiobookProgress alloc], "initWithKind:instance:parameters:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
      v7 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v8 = *(void **)(v7 + 40);
      *(_QWORD *)(v7 + 40) = v6;

      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    }
    v9 = *(void **)(a1 + 48);
    v10 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
  }
  else
  {
    if (!objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", CFSTR("timeRemaining")))
      return;
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "objectForKey:", *(_QWORD *)(a1 + 48)));
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    if (!v5)
    {
      v14 = -[BKLibraryAudiobookProgress initWithKind:instance:parameters:]([BKLibraryAudiobookProgress alloc], "initWithKind:instance:parameters:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
    }
    v9 = *(void **)(a1 + 48);
    v10 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
  }
  v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "stringValue"));
  objc_msgSend(v10, "setObject:forKey:", v5);

}

void sub_1001D3EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001D3F08(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1001D40D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001D4100(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1001D41B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_1001D423C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_1001D4760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D48E4(uint64_t a1)
{
  id *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;

  v2 = (id *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchCompletion"));

  if (v3)
  {
    v5 = BKLibraryDataSourceJaliscoLog(v4);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      sub_1006A5B04(v2, v6);

  }
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "fetchCompletion"));
  v8 = (void *)v7;
  if (v7)
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v7 + 16))(v7, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "setFetchCompletion:", 0);

  objc_msgSend(*(id *)(a1 + 32), "setLibraryAssetMonitor:", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  v10 = objc_msgSend(*(id *)(a1 + 56), "copy");
  objc_msgSend(*(id *)(a1 + 32), "setFetchCompletion:", v10);

  v11 = _os_activity_create((void *)&_mh_execute_header, "Books/BKLibraryDataSourceJaliscoUpdate", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001D4A6C;
  v14[3] = &unk_1008E7B70;
  v12 = *(void **)(a1 + 40);
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v9;
  v16 = v12;
  v17 = *(id *)(a1 + 48);
  v13 = v9;
  os_activity_apply(v11, v14);

}

void sub_1001D4A6C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];
  id v8;
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;

  v2 = BKLibraryDataSourceJaliscoLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    *(_DWORD *)buf = 138412290;
    v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Books/BKLibraryDataSourceJaliscoUpdate %@ fetchAssetIDsWithPredicate updatePolitely", buf, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BDSJaliscoDAAPClient sharedClient](BDSJaliscoDAAPClient, "sharedClient"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001D4BC0;
  v7[3] = &unk_1008E9070;
  v6 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v6;
  v9 = *(id *)(a1 + 48);
  v10 = *(id *)(a1 + 56);
  objc_msgSend(v5, "updatePolitely:reason:completion:", 0, 6, v7);

}

void sub_1001D4BC0(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  NSObject *v5;
  _QWORD block[5];
  id v7;
  id v8;
  id v9;
  char v10;

  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001D4C64;
  block[3] = &unk_1008E89C0;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = *(NSObject **)(v3 + 48);
  block[1] = 3221225472;
  block[4] = v3;
  v10 = a2;
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  dispatch_async(v5, block);

}

id sub_1001D4C64(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  int v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  void *v19;

  v2 = BKLibraryDataSourceJaliscoLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v5 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)buf = 138412546;
    v17 = v4;
    v18 = 1024;
    LODWORD(v19) = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ fetchAssetIDsWithPredicate updatePolitely returned success: %{BOOL}d", buf, 0x12u);

  }
  v6 = objc_alloc((Class)BCRemoteManagedObjectIDMonitor);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "persistentStoreCoordinator"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentJaliscoHistoryToken"));
  v9 = objc_msgSend(v6, "initWithCoordinator:entityName:historyToken:predicate:mapProperty:propertiesOfInterest:observer:", v7, CFSTR("BLJaliscoServerItem"), v8, *(_QWORD *)(a1 + 48), CFSTR("storeID"), 0, *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "setLibraryAssetMonitor:", v9);

  v11 = BKLibraryDataSourceJaliscoLog(v10);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetMonitor"));
    *(_DWORD *)buf = 138412546;
    v17 = v13;
    v18 = 2112;
    v19 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor libraryAssetMonitor assigned to %@", buf, 0x16u);

  }
  return objc_msgSend(*(id *)(a1 + 32), "setBookletItemsPredicate:", *(_QWORD *)(a1 + 56));
}

void sub_1001D4FE8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  id v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v7 = BKLibraryDataSourceJaliscoLog(v6);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v12 = 138412546;
    v13 = v9;
    v14 = 2112;
    v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetIDsWithCompletion: assetIDs %@", (uint8_t *)&v12, 0x16u);

  }
  kdebug_trace(725353716, 75, 0, 0, 0);
  v10 = objc_retainBlock(*(id *)(a1 + 40));
  v11 = v10;
  if (v10)
    (*((void (**)(id, id, id))v10 + 2))(v10, v5, v6);

}

void sub_1001D51E0(id *a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  char *v14;
  char *v15;
  char *i;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *j;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *k;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id obj;
  id *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  id v73;
  uint8_t v74[128];
  uint8_t buf[4];
  void *v76;
  __int16 v77;
  uint64_t v78;
  __int16 v79;
  void *v80;
  __int16 v81;
  void *v82;
  __int16 v83;
  void *v84;
  _BYTE v85[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  v3 = objc_msgSend(v2, "newManagedObjectContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", a1[4]));
  v59 = v2;
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchRequestForStoreIDs:", v4));

  v73 = 0;
  v60 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v5, &v73));
  v57 = v73;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bu_arrayByRemovingItemsWithDuplicateValuesForKey:", CFSTR("storeID")));

  v9 = BKLibraryDataSourceJaliscoLog(v8);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "identifier"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", CFSTR(", ")));
    *(_DWORD *)buf = 138412802;
    v76 = v11;
    v77 = 2112;
    v78 = v5;
    v79 = 2112;
    v80 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetsWithIDs --- unsortedJaliscoServerItems fetch:%@ items:%@", buf, 0x20u);

  }
  v58 = (void *)v5;

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v7, "count")));
  v64 = a1;
  v14 = (char *)objc_msgSend(a1[4], "count");
  if (v14)
  {
    v15 = v14;
    for (i = 0; i != v15; ++i)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
      objc_msgSend(v13, "setObject:atIndexedSubscript:", v17, i);

    }
  }
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  v18 = v7;
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v69, v85, 16);
  v61 = v18;
  v62 = v13;
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v70;
    do
    {
      for (j = 0; j != v20; j = (char *)j + 1)
      {
        if (*(_QWORD *)v70 != v21)
          objc_enumerationMutation(v18);
        v23 = *(void **)(*((_QWORD *)&v69 + 1) + 8 * (_QWORD)j);
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "storeID"));
        v25 = objc_msgSend(v64[4], "indexOfObject:", v24);
        if (v25 != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          v26 = v25;
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64[5], "identifier"));
          v28 = +[BKJaliscoAsset newAssetFromServerItem:dataSourceIdentifier:](BKJaliscoAsset, "newAssetFromServerItem:dataSourceIdentifier:", v23, v27);

          v29 = BKLibraryDataSourceJaliscoLog(objc_msgSend(v13, "setObject:atIndexedSubscript:", v28, v26));
          v30 = objc_claimAutoreleasedReturnValue(v29);
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64[5], "identifier"));
            v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "storeID"));
            v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "title"));
            v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "expectedDate"));
            *(_DWORD *)buf = 138413314;
            v76 = v31;
            v77 = 2160;
            v78 = 1752392040;
            v79 = 2112;
            v80 = v32;
            v81 = 2112;
            v82 = v33;
            v83 = 2112;
            v84 = v34;
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "%@ fetch -- asset storeID: %{mask.hash}@ title: %@ expectedDate: %@", buf, 0x34u);

            v13 = v62;
            v18 = v61;

          }
        }

      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v69, v85, 16);
    }
    while (v20);
  }

  v35 = v64[5];
  v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v64[4]));
  v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "_bookletItemsForStoreIDSet:moc:dedupe:", v36, v60, 1));

  v67 = 0u;
  v68 = 0u;
  v65 = 0u;
  v66 = 0u;
  obj = v37;
  v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v74, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v66;
    do
    {
      for (k = 0; k != v39; k = (char *)k + 1)
      {
        if (*(_QWORD *)v66 != v40)
          objc_enumerationMutation(obj);
        v42 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * (_QWORD)k);
        v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "storeID"));
        v44 = objc_msgSend(v64[4], "indexOfObject:", v43);
        if (v44 != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          v45 = v44;
          v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64[5], "_supplementalAssetFromServerBookletItem:", v42));
          v47 = BKLibraryDataSourceJaliscoLog(objc_msgSend(v13, "setObject:atIndexedSubscript:", v46, v45));
          v48 = objc_claimAutoreleasedReturnValue(v47);
          if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
          {
            v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64[5], "identifier"));
            v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "title"));
            *(_DWORD *)buf = 138413058;
            v76 = v49;
            v77 = 2160;
            v78 = 1752392040;
            v79 = 2112;
            v80 = v43;
            v81 = 2112;
            v82 = v50;
            _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "%@ fetch -- booklet storeID: %{mask.hash}@ title: %@", buf, 0x2Au);

            v13 = v62;
          }

        }
      }
      v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v65, v74, 16);
    }
    while (v39);
  }

  v52 = BKLibraryDataSourceJaliscoLog(v51);
  v53 = objc_claimAutoreleasedReturnValue(v52);
  if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
  {
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v64[5], "identifier"));
    *(_DWORD *)buf = 138412546;
    v76 = v54;
    v77 = 2112;
    v78 = (uint64_t)v13;
    _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetsWithIDs --- sortedAssets %@", buf, 0x16u);

  }
  kdebug_trace(725353716, 77, 0, 0, 0);
  v55 = objc_retainBlock(v64[6]);
  v56 = v55;
  if (v55)
    (*((void (**)(id, void *, _QWORD))v55 + 2))(v55, v13, 0);

}

void sub_1001D5AB8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  _QWORD v39[5];
  id v40;
  id v41;
  _QWORD v42[5];
  id v43;
  id v44;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;

  v2 = BKLibraryDataSourceJaliscoLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    v46 = v4;
    v47 = 2112;
    v48 = v5;
    v49 = 2112;
    v50 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ resolveLibraryAsset: (assetID:%@, title:%@)", buf, 0x20u);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  v8 = objc_msgSend(v7, "newManagedObjectContext");

  v9 = *(void **)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 88))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_bookletItemForStoreID:moc:", v10, v8));
    v12 = v11;
    if (v11)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "parentItem"));
      v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "storeDownloadParameters"));

      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 64), "longLongValue")));
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v14, v15));

      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 56), "longLongValue")));
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v17));
      objc_msgSend(v16, "setStoreIdentifiersToDownload:", v18);

      objc_msgSend(v16, "setAudiobook:", 1);
      objc_msgSend(v16, "setSupplementalContent:", 1);
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "userInitiated"));

      if (v19)
      {
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "userInitiated"));
        objc_msgSend(v16, "setUserInitiated:", objc_msgSend(v20, "BOOLValue"));

      }
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "windowManager"));

      v23 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472;
      v42[2] = sub_1001D6024;
      v42[3] = &unk_1008E9ED0;
      v42[4] = *(_QWORD *)(a1 + 32);
      v12 = v12;
      v43 = v12;
      v44 = *(id *)(a1 + 80);
      objc_msgSend(v23, "purchaseWithRequest:uiManager:completion:", v16, v22, v42);

      goto LABEL_19;
    }
    v27 = BKLibraryDataSourceJaliscoLog(0);
    v26 = objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      sub_1006A5C24();
  }
  else
  {
    v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_serverItemForStoreID:moc:", v10, v8));
    v12 = (id)v24;
    if (v24)
    {
      v24 = (uint64_t)objc_msgSend((id)v24, "isDeleted");
      if ((v24 & 1) == 0)
      {
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
        v29 = +[BKJaliscoAsset newAssetFromServerItem:dataSourceIdentifier:](BKJaliscoAsset, "newAssetFromServerItem:dataSourceIdentifier:", v12, v28);

        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "storeDownloadParameters"));
        v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 56), "longLongValue")));
        v14 = (id)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v30, v31));

        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "isAudiobook"));
        objc_msgSend(v14, "setAudiobook:", objc_msgSend(v32, "BOOLValue"));

        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "userInitiated"));
        if (v33)
        {
          v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "userInitiated"));
          objc_msgSend(v14, "setUserInitiated:", objc_msgSend(v34, "BOOLValue"));

        }
        v35 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "windowManager"));

        v36 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
        v39[0] = _NSConcreteStackBlock;
        v39[1] = 3221225472;
        v39[2] = sub_1001D62BC;
        v39[3] = &unk_1008EDAC8;
        v39[4] = *(_QWORD *)(a1 + 32);
        v37 = *(id *)(a1 + 80);
        v40 = v29;
        v41 = v37;
        v38 = v29;
        objc_msgSend(v36, "purchaseWithRequest:uiManager:completion:", v14, v16, v39);

        goto LABEL_19;
      }
    }
    v25 = BKLibraryDataSourceJaliscoLog(v24);
    v26 = objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      sub_1006A5B98();
  }

  v14 = objc_retainBlock(*(id *)(a1 + 80));
  if (v14)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorAssetIDNotInCacheError, 0));
    (*((void (**)(id, _QWORD, uint64_t, void *))v14 + 2))(v14, 0, 1, v16);
LABEL_19:

  }
}

void sub_1001D6024(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  void *v17;
  uint8_t buf[4];
  void *v19;
  __int16 v20;
  id v21;

  v5 = a4;
  v6 = BKLibraryDataSourceJaliscoLog(v5);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    *(_DWORD *)buf = 138543618;
    v19 = v8;
    v20 = 2112;
    v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%{public}@ Purchase completed. error:%@", buf, 0x16u);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_supplementalAssetFromServerBookletItem:", *(_QWORD *)(a1 + 40)));
  v10 = objc_retainBlock(*(id *)(a1 + 48));
  v11 = v10;
  if (v10)
    (*((void (**)(id, void *, uint64_t, id))v10 + 2))(v10, v9, 1, v5);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plistWriter"));
  v17 = v9;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v17, 1));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1001D61CC;
  v15[3] = &unk_1008E73F0;
  v15[4] = *(_QWORD *)(a1 + 32);
  v16 = v9;
  v14 = v9;
  objc_msgSend(v12, "removePlistAssets:completion:", v13, v15);

}

void sub_1001D61CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  id v14;

  v4 = a3;
  v5 = BKLibraryDataSourceJaliscoLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
    v9 = 138543874;
    v10 = v7;
    v11 = 2112;
    v12 = v8;
    v13 = 2112;
    v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%{public}@ Deleted equivalent asset with assetID:%@ from books.plist error: %@", (uint8_t *)&v9, 0x20u);

  }
}

void sub_1001D62BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[5];
  id v15;
  uint64_t v16;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  id v20;

  v5 = a4;
  v6 = BKLibraryDataSourceJaliscoLog(v5);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    *(_DWORD *)buf = 138412546;
    v18 = v8;
    v19 = 2112;
    v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@ Purchase completed. error:%@", buf, 0x16u);

  }
  v9 = objc_retainBlock(*(id *)(a1 + 48));
  v10 = v9;
  if (v9)
    (*((void (**)(id, _QWORD, uint64_t, id))v9 + 2))(v9, *(_QWORD *)(a1 + 40), 1, v5);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plistWriter"));
  v16 = *(_QWORD *)(a1 + 40);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1001D644C;
  v14[3] = &unk_1008E73F0;
  v13 = *(void **)(a1 + 40);
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v13;
  objc_msgSend(v11, "removePlistAssets:completion:", v12, v14);

}

void sub_1001D644C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  id v14;

  v4 = a3;
  v5 = BKLibraryDataSourceJaliscoLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
    v9 = 138412802;
    v10 = v7;
    v11 = 2112;
    v12 = v8;
    v13 = 2112;
    v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%@ Deleted equivalent asset with assetID:%@ from books.plist error: %@", (uint8_t *)&v9, 0x20u);

  }
}

void sub_1001D66F4(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(id, _QWORD, id);
  void (**v7)(id, _QWORD, id);
  uint64_t v8;
  NSObject *v9;
  void (**v10)(id, _QWORD, void *);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void (**v22)(id, _QWORD, void *);
  int v23;
  void *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
  v3 = objc_msgSend(v2, "newManagedObjectContext");

  v5 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 64))
  {
    if (v5)
    {
      v6 = (void (**)(id, _QWORD, id))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_bookletItemForStoreID:moc:", v5, v3));
      v7 = (void (**)(id, _QWORD, id))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_supplementalAssetFromServerBookletItem:", v6));
      if (!v7)
      {
        v8 = BKLibraryDataSourceJaliscoLog(0);
        v9 = objc_claimAutoreleasedReturnValue(v8);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          sub_1006A5C24();

        v10 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 56));
        if (v10)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorAssetIDNotInCacheError, 0));
          v10[2](v10, 0, v11);

        }
LABEL_24:

        goto LABEL_25;
      }
LABEL_22:
      v22 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 56));
      v10 = v22;
      if (v22)
        v22[2](v22, v7, 0);
      goto LABEL_24;
    }
  }
  else if (v5)
  {
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_serverItemForStoreID:moc:", v5, v3));
    v6 = (void (**)(id, _QWORD, id))v12;
    if (!v12 || (v12 = (uint64_t)objc_msgSend((id)v12, "isDeleted"), (v12 & 1) != 0))
    {
      v13 = BKLibraryDataSourceJaliscoLog(v12);
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1006A5D74();

      v7 = (void (**)(id, _QWORD, id))objc_retainBlock(*(id *)(a1 + 56));
      if (!v7)
        goto LABEL_25;
      v10 = (void (**)(id, _QWORD, void *))objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorAssetIDNotInCacheError, 0));
      v7[2](v7, 0, v10);
      goto LABEL_24;
    }
    v17 = BKLibraryDataSourceJaliscoLog(v12);
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
      v20 = *(_QWORD *)(a1 + 32);
      v23 = 138412802;
      v24 = v19;
      v25 = 2160;
      v26 = 1752392040;
      v27 = 2112;
      v28 = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%@ asset found for storeId: %{mask.hash}@", (uint8_t *)&v23, 0x20u);

    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    v7 = +[BKJaliscoAsset newAssetFromServerItem:dataSourceIdentifier:](BKJaliscoAsset, "newAssetFromServerItem:dataSourceIdentifier:", v6, v21);

    goto LABEL_22;
  }
  v15 = BKLibraryDataSourceJaliscoLog(v4);
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    sub_1006A5CA0(a1, a1 + 32, v16);

  v6 = (void (**)(id, _QWORD, id))objc_retainBlock(*(id *)(a1 + 56));
  if (v6)
  {
    v7 = (void (**)(id, _QWORD, id))objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorAssetIDNotInCacheError, 0));
    v6[2](v6, 0, v7);
LABEL_25:

  }
}

void sub_1001D6B38(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  uint8_t buf[4];
  void *v17;

  v3 = a2;
  v4 = objc_msgSend(v3, "count");
  if (v4)
  {
    v5 = v4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001D6CA8;
    v12[3] = &unk_1008EDAA0;
    v6 = *(void **)(a1 + 32);
    v13 = *(id *)(a1 + 40);
    v15 = v5;
    v14 = *(id *)(a1 + 48);
    objc_msgSend(v6, "fetchAssetsWithIDs:completion:", v3, v12);

    v7 = v13;
  }
  else
  {
    v8 = BKLibraryDataSourceJaliscoLog(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 40), "time");
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
      *(_DWORD *)buf = 138412290;
      v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "MRP: %@ for 0 jalisco books", buf, 0xCu);

    }
    v11 = objc_retainBlock(*(id *)(a1 + 48));
    v7 = v11;
    if (v11)
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }

}

void sub_1001D6CA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t buf[4];
  void *v27;
  __int16 v28;
  void *v29;
  _BYTE v30[128];

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bu_arrayByRemovingNSNulls"));
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = 0;
    v11 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v11)
          objc_enumerationMutation(v7);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i), "purchaseDate"));
        v14 = v13;
        if (!v10 || objc_msgSend(v13, "compare:", v10) == (id)1)
        {
          v15 = v14;

          v10 = v15;
        }

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
    }
    while (v9);
  }
  else
  {
    v10 = 0;
  }
  v16 = BKLibraryDataSourceJaliscoLog(0);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(*(id *)(a1 + 32), "time");
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48)));
    *(_DWORD *)buf = 138412546;
    v27 = v18;
    v28 = 2112;
    v29 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "MRP: %@ for %@ jalisco books", buf, 0x16u);

  }
  v20 = objc_retainBlock(*(id *)(a1 + 40));
  v21 = v20;
  if (v20)
    (*((void (**)(id, void *))v20 + 2))(v20, v10);

}

void sub_1001D716C(id a1, BOOL a2)
{
  _BOOL4 v2;
  uint64_t v3;
  NSObject *v4;
  _DWORD v5[2];

  v2 = a2;
  v3 = BKLibraryDataSourceJaliscoLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJalisco updated jalisco after purchase %{BOOL}d}", (uint8_t *)v5, 8u);
  }

}

void sub_1001D7620(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  v5 = +[BKJaliscoAsset newAssetFromServerItem:dataSourceIdentifier:](BKJaliscoAsset, "newAssetFromServerItem:dataSourceIdentifier:", v4, v6);

  objc_msgSend(v2, "addObject:", v5);
}

void sub_1001D77B4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_supplementalAssetFromServerBookletItem:", a2));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_1001D79CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D7A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1001D7AB4(uint64_t a1)
{
  _BYTE *v2;
  uint64_t v3;
  void *v4;

  v2 = *(_BYTE **)(a1 + 32);
  if (v2[10])
  {
    v3 = 1;
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
    v3 = (uint64_t)objc_msgSend(v4, "isInitiallyLoadingJalisco");

    v2 = *(_BYTE **)(a1 + 32);
  }
  return _objc_msgSend(v2, "setProcessingAuthentication:", v3);
}

_QWORD *sub_1001D7BC0(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  id v15;
  id v16;
  int v17;
  void *v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;

  v1 = result;
  v3 = result[4];
  v2 = result[5];
  v4 = *(_QWORD *)(v2 + 56);
  if (v3 == v4)
  {
    v14 = BKLibraryDataSourceJaliscoLog(result);
    v6 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[5], "identifier"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "deletedObjects"));
      v15 = objc_msgSend(v8, "count");
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "addedObjects"));
      v16 = objc_msgSend(v10, "count");
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "updatedObjects"));
      v17 = 138413058;
      v18 = v7;
      v19 = 2048;
      v20 = v15;
      v21 = 2048;
      v22 = v16;
      v23 = 2048;
      v24 = objc_msgSend(v12, "count");
      v13 = "%@ managedObjectBackgroundMonitor:didSaveNotify: (deleted: %ld, added: %ld, updated: %ld). Will process and "
            "notify library of changes.";
      goto LABEL_7;
    }
  }
  else
  {
    if (v3 != *(_QWORD *)(v2 + 64))
      return result;
    v5 = BKLibraryDataSourceJaliscoLog(result);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[5], "identifier"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "deletedObjects"));
      v9 = objc_msgSend(v8, "count");
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "addedObjects"));
      v11 = objc_msgSend(v10, "count");
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v1[6], "updatedObjects"));
      v17 = 138413058;
      v18 = v7;
      v19 = 2048;
      v20 = v9;
      v21 = 2048;
      v22 = v11;
      v23 = 2048;
      v24 = objc_msgSend(v12, "count");
      v13 = "%@ Booklet managedObjectBackgroundMonitor:didSaveNotify: (deleted: %ld, added: %ld, updated: %ld). Will proc"
            "ess and notify library of changes.";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v17, 0x2Au);

    }
  }

  return objc_msgSend((id)v1[5], "_processLibraryAssetChanges:bookletItems:", v1[6], v3 != v4);
}

void sub_1001D7F2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  const __CFString *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  const __CFString *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  void (**v51)(_QWORD, _QWORD, _QWORD);
  void *v52;
  id v53;
  void *v54;
  void *v55;
  uint8_t buf[4];
  void *v57;
  __int16 v58;
  id v59;
  __int16 v60;
  id v61;
  __int16 v62;
  id v63;
  __int16 v64;
  const __CFString *v65;

  v2 = *(_QWORD *)(a1 + 32);
  v4 = (id *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 40);
  if (v2 == *(_QWORD *)(v3 + 56))
  {
    v9 = BKLibraryDataSourceJaliscoLog(a1);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
      v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "deletedObjects"));
      v12 = objc_msgSend(v54, "count");
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "addedObjects"));
      v14 = objc_msgSend(v13, "count");
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "updatedObjects"));
      v16 = objc_msgSend(v15, "count");
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fetchCompletion"));
      *(_DWORD *)buf = 138413314;
      v18 = CFSTR("have");
      v57 = v11;
      if (!v17)
        v18 = CFSTR("nil");
      v58 = 2048;
      v59 = v12;
      v60 = 2048;
      v61 = v14;
      v62 = 2048;
      v63 = v16;
      v64 = 2112;
      v65 = v18;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor:fetchNotify: (deleted: %ld, added: %ld, updated: %ld). %@ fetchCompletion", buf, 0x34u);

    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "addedObjects"));
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "bu_arrayByRemovingDuplicates"));

    v20 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
    objc_msgSend(v20, "addProductProfileIDs:priority:", v8, 3);

    v21 = -[NSObject mutableCopy](v8, "mutableCopy");
    objc_msgSend(*(id *)(a1 + 40), "setMonitoredStoreIDs:", v21);

    v22 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
    v23 = objc_alloc((Class)BCRemoteManagedObjectIDMonitor);
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "persistentStoreCoordinator"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "currentJaliscoHistoryToken"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "bookletItemsPredicate"));
    v27 = objc_msgSend(v23, "initWithCoordinator:entityName:historyToken:predicate:mapProperty:propertiesOfInterest:observer:", v24, CFSTR("BLJaliscoServerBookletItem"), v25, v26, CFSTR("storeID"), 0, *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 40), "setBookletAssetMonitor:", v27);

    v29 = BKLibraryDataSourceJaliscoLog(v28);
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "identifier"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "bookletAssetMonitor"));
      *(_DWORD *)buf = 138412546;
      v57 = v31;
      v58 = 2112;
      v59 = v32;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor bookletAssetMonitor assigned to %@", buf, 0x16u);

    }
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 64);
    v6 = BKLibraryDataSourceJaliscoLog(a1);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = v7;
    if (v2 == v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
        v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "deletedObjects"));
        v34 = objc_msgSend(v55, "count");
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "addedObjects"));
        v36 = objc_msgSend(v35, "count");
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "updatedObjects"));
        v38 = objc_msgSend(v37, "count");
        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fetchCompletion"));
        *(_DWORD *)buf = 138413314;
        v40 = CFSTR("have");
        v57 = v33;
        if (!v39)
          v40 = CFSTR("nil");
        v58 = 2048;
        v59 = v34;
        v60 = 2048;
        v61 = v36;
        v62 = 2048;
        v63 = v38;
        v64 = 2112;
        v65 = v40;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ Booklet managedObjectBackgroundMonitor:fetchNotify: (deleted: %ld, added: %ld, updated: %ld). %@ fetchCompletion", buf, 0x34u);

      }
      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "monitoredStoreIDs"));
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "addedObjects"));
      v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "bu_arrayByRemovingDuplicates"));
      objc_msgSend(v41, "addObjectsFromArray:", v43);

      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fetchCompletion"));
      if (v44)
      {
        v46 = BKLibraryDataSourceJaliscoLog(v45);
        v47 = objc_claimAutoreleasedReturnValue(v46);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "identifier"));
          v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "monitoredStoreIDs"));
          v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v49, "componentsJoinedByString:", CFSTR(", ")));
          *(_DWORD *)buf = 138412546;
          v57 = v48;
          v58 = 2112;
          v59 = v50;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor:fetchNotify: Calling completion with %@", buf, 0x16u);

        }
      }
      v51 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "fetchCompletion"));
      if (v51)
      {
        v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "monitoredStoreIDs"));
        v53 = objc_msgSend(v52, "copy");
        ((void (**)(_QWORD, id, _QWORD))v51)[2](v51, v53, 0);

      }
      objc_msgSend(*v4, "setFetchCompletion:", 0);

      v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "monitoredStoreIDs"));
      -[NSObject removeAllObjects](v8, "removeAllObjects");
    }
    else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      sub_1006A5E78((uint64_t)v4);
    }
  }

}

void sub_1001D8DB4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  BKLibrarySupplementalAsset *v6;
  void *v7;
  BKLibrarySupplementalAsset *v8;
  BKLibrarySupplementalAsset *v9;
  id v10;

  v10 = a2;
  v3 = objc_msgSend(*(id *)(a1 + 32), "countForObject:", v10);
  v4 = v10;
  if (!v3)
  {
    v5 = *(void **)(a1 + 40);
    if (*(_BYTE *)(a1 + 56))
    {
      v6 = [BKLibrarySupplementalAsset alloc];
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "identifier"));
      v8 = -[BKLibrarySupplementalAsset initWithParentAsset:dataSourceIdentifier:storeID:title:downloadParams:size:](v6, "initWithParentAsset:dataSourceIdentifier:storeID:title:downloadParams:size:", 0, v7, v10, 0, 0, 0);
    }
    else
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "identifier"));
      v8 = +[BKJaliscoAsset newAssetWithStoreID:dataSourceIdentifier:](BKJaliscoAsset, "newAssetWithStoreID:dataSourceIdentifier:", v10, v7);
    }
    v9 = v8;
    objc_msgSend(v5, "addObject:", v8);

    v4 = v10;
  }

}

void sub_1001D8E90(id *a1, void *a2)
{
  id v3;
  id v4;
  id v5;

  v5 = a2;
  v3 = objc_msgSend(a1[4], "countForObject:", v5);
  if (v3 < objc_msgSend(a1[5], "countForObject:", v5))
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourceJalisco.m", 810, "-[BKLibraryDataSourceJalisco _processLibraryAssetChanges:bookletItems:]_block_invoke", "[totalStoreIDCountedSet countForObject:addedStoreID] >= [addedStoreIDCountedSet countForObject:addedStoreID]", CFSTR("total count of server items with a given storeID should be >= added with the same storeID"));
  v4 = objc_msgSend(a1[5], "countForObject:", v5);
  if (v4 >= objc_msgSend(a1[4], "countForObject:", v5))
    objc_msgSend(a1[6], "addObject:", v5);

}

void sub_1001D904C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  v2 = BKLibraryDataSourceJaliscoLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ clientDetectedStoreChange reload complete!", (uint8_t *)&v5, 0xCu);

  }
}

void sub_1001D931C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, id, uint64_t))v5 + 2))(v5, v7, a3);

}

void sub_1001D9414(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 1);
    v1 = v2;
  }

}

void sub_1001D9500(uint64_t a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  id v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  int v12;

  v4 = BKLibraryDataSourceJaliscoLog(a1);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v9 = 138543618;
    v10 = v6;
    v11 = 1024;
    v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}@ reloadPurchaseItemStoreID completed, success=%{BOOL}d", (uint8_t *)&v9, 0x12u);

  }
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "updatePurchaseItemsWithCompletion:", *(_QWORD *)(a1 + 40));
  }
  else
  {
    v7 = objc_retainBlock(*(id *)(a1 + 40));
    v8 = v7;
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);

  }
}

void sub_1001D9A88(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  id v19;

  v5 = a2;
  v6 = a3;
  v7 = kdebug_trace(725353716, 75, 0, 0, 0);
  v8 = BKLibraryDataSourceJaliscoLog(v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "componentsJoinedByString:", CFSTR(", ")));
    v14 = 138412802;
    v15 = v10;
    v16 = 2112;
    v17 = v11;
    v18 = 2112;
    v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJaliscoPurchases %@ fetchAssets:[%@] error%@", (uint8_t *)&v14, 0x20u);

  }
  v12 = objc_retainBlock(*(id *)(a1 + 40));
  v13 = v12;
  if (v12)
    (*((void (**)(id, id, id))v12 + 2))(v12, v5, v6);

}

void sub_1001D9F28(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  id v19;

  v5 = a2;
  v6 = a3;
  v7 = kdebug_trace(725353716, 75, 0, 0, 0);
  v8 = BKLibraryDataSourceJaliscoLog(v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "componentsJoinedByString:", CFSTR(", ")));
    v14 = 138412802;
    v15 = v10;
    v16 = 2112;
    v17 = v11;
    v18 = 2112;
    v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJaliscoPreorders %@ fetchAssets:[%@] error%@", (uint8_t *)&v14, 0x20u);

  }
  v12 = objc_retainBlock(*(id *)(a1 + 40));
  v13 = v12;
  if (v12)
    (*((void (**)(id, id, id))v12 + 2))(v12, v5, v6);

}

uint64_t sub_1001DA0B4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

id sub_1001DA41C()
{
  return +[BCPPTConfig os_log](BCPPTConfig, "os_log");
}

unint64_t sub_1001DA550(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D09C0, &qword_1009D09C8, sub_1002BB82C);
}

unint64_t sub_1001DA56C(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D09B0, &qword_1009D09B8, (uint64_t (*)(_QWORD))sub_1002BB8A0);
}

unint64_t sub_1001DA588(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D09A0, &qword_1009D09A8, (uint64_t (*)(_QWORD))sub_1002BB8A4);
}

unint64_t sub_1001DA5A4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v31 = a4;
  v7 = sub_10004CFD4(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v13;
  }
  sub_10004CFD4(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = &v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_10000B5E4(v18, (uint64_t)v10, a2);
    v20 = *v10;
    result = v31(*v10);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v13[6] + result) = v20;
    v24 = v13[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v15, v25);
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v29 = v30;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DA73C(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0990, &qword_1009D0998, sub_1002BB928);
}

unint64_t sub_1001DA758(uint64_t a1)
{
  return sub_1001DA790(a1, &qword_1009D08F0, &qword_1009D08F8, sub_100033914);
}

unint64_t sub_1001DA774(uint64_t a1)
{
  return sub_1001DA790(a1, &qword_1009D05E0, &qword_1009D05E8, sub_100033914);
}

unint64_t sub_1001DA790(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10000B5E4(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_10004CFC4(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DA8B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(&qword_1009D05F0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10004CE80(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DA9C8(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0980, &qword_1009D0988, (uint64_t (*)(_QWORD))sub_1002BB958);
}

unint64_t sub_1001DA9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(&qword_1009D04D0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000B5E4(v7, (uint64_t)v16, &qword_1009D04D8);
    result = sub_1000561E8((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = sub_10004C7B4((uint64_t)&v18, v4[7] + 32 * result);
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DAB24(uint64_t a1)
{
  return sub_1001DB588(a1, &qword_1009D0828);
}

unint64_t sub_1001DAB30(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0970, &qword_1009D0978, sub_1002BBAEC);
}

unint64_t sub_1001DAB4C(uint64_t a1)
{
  return sub_1001DA790(a1, &qword_1009D0758, &qword_1009D0760, sub_100033914);
}

unint64_t sub_1001DAB68(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0960, &qword_1009D0968, (uint64_t (*)(_QWORD))sub_1002BBB1C);
}

unint64_t sub_1001DAB84(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0950, &qword_1009D0958, (uint64_t (*)(_QWORD))sub_1002BBBDC);
}

unint64_t sub_1001DABA0(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0940, &qword_1009D0948, (uint64_t (*)(_QWORD))sub_1002BBC7C);
}

unint64_t sub_1001DABBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10004CFD4(&qword_1009D0D30);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (double *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10004CFD4(&qword_1009D0D38);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D0D30);
    v15 = *v5;
    v16 = v5[1];
    result = sub_1002BBCF8(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (double *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for LayoutSubview(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DAD64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  unint64_t result;
  char v11;
  double *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009D7C60);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (double *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    result = sub_1002BBCF8(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (double *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(double *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DAE6C(uint64_t a1)
{
  return sub_1001DB858(a1, (uint64_t *)&unk_1009DDE40);
}

unint64_t sub_1001DAE78(uint64_t a1)
{
  return sub_1001DB858(a1, (uint64_t *)&unk_1009D7B10);
}

unint64_t sub_1001DAE84(uint64_t a1)
{
  return sub_1001DB858(a1, (uint64_t *)&unk_1009D0A30);
}

unint64_t sub_1001DAE90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009D0740);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = *(v6 - 1);
    v9 = v7;
    result = sub_100033914(v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DAF98(uint64_t a1)
{
  return sub_1001DB0E4(a1, &qword_1009D0520);
}

unint64_t sub_1001DAFA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009DDD90);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000B5E4(v7, (uint64_t)&v16, &qword_1009D04F0);
    v8 = v16;
    v9 = v17;
    result = sub_10004CE80(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = sub_10004C7B4((uint64_t)&v18, v4[7] + 32 * result);
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DB0D8(uint64_t a1)
{
  return sub_1001DB0E4(a1, &qword_1009D0678);
}

unint64_t sub_1001DB0E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_unknownObjectRetain(v10);
    result = sub_10004CE80(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DB1F8(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0930, &qword_1009D0938, (uint64_t (*)(_QWORD))sub_1002BBD58);
}

unint64_t sub_1001DB214(uint64_t a1)
{
  return sub_1001DA790(a1, &qword_1009D0A00, &qword_1009D0A08, sub_100033914);
}

unint64_t sub_1001DB230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10004CFD4(&qword_1009D0558);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10004CFD4(&qword_1009D0560);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D0558);
    result = sub_1002BB75C((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DB3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10004CFD4(&qword_1009D05B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10004CFD4(&qword_1009D05C0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D05B8);
    result = sub_1002BBDE4((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for CollectionRecommendationType(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v21 = type metadata accessor for CollectionRecommendationOptions(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17, v10, v21);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DB57C(uint64_t a1)
{
  return sub_1001DB588(a1, (uint64_t *)&unk_1009D7BD0);
}

unint64_t sub_1001DB588(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_10004CE80(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DB69C(uint64_t a1)
{
  return sub_1001DB6D4(a1, &qword_1009D0920, &qword_1009D0928, (uint64_t (*)(uint64_t))sub_1002C5A0C);
}

unint64_t sub_1001DB6B8(uint64_t a1)
{
  return sub_1001DB6D4(a1, &qword_1009D0910, &qword_1009D0918, (uint64_t (*)(uint64_t))sub_1002C5A0C);
}

unint64_t sub_1001DB6D4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v8 = sub_10004CFD4(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    v14 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v14;
  }
  sub_10004CFD4(a3);
  v13 = static _DictionaryStorage.allocate(capacity:)(v12);
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    goto LABEL_9;
  v16 = v13 + 64;
  v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v9 + 72);
  swift_retain(v13);
  while (1)
  {
    v20 = sub_10000B5E4(v18, (uint64_t)v11, a2);
    result = a4(v20);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v14[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v11, v25);
    v26 = v14[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v14[2] = v28;
    v18 += v19;
    if (!--v15)
    {
      swift_release(v14);
      v29 = v31;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DB84C(uint64_t a1)
{
  return sub_1001DB858(a1, &qword_1009D0518);
}

unint64_t sub_1001DB858(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    result = sub_10004CE80(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DB96C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009D09E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (char *)(a1 + 64);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 4);
    v8 = *((_QWORD *)v6 - 3);
    v9 = *((_QWORD *)v6 - 2);
    v10 = *((_QWORD *)v6 - 1);
    v11 = *v6;
    swift_bridgeObjectRetain(v8);
    sub_1001E160C(v9, v10, v11);
    result = sub_10004CE80(v7, v8);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v4[6] + 16 * result);
    *v14 = v7;
    v14[1] = v8;
    v15 = v4[7] + 24 * result;
    *(_QWORD *)v15 = v9;
    *(_QWORD *)(v15 + 8) = v10;
    *(_BYTE *)(v15 + 16) = v11;
    v16 = v4[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v4[2] = v18;
    v6 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DBAAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10004CFD4(&qword_1009D0528);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10004CFD4(&qword_1009D0530);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D0528);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10004CE80(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for NoteHighlight(0);
    result = sub_1001E08CC(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DBC44(uint64_t a1)
{
  return sub_1001DA5A4(a1, &qword_1009D0900, &qword_1009D0908, (uint64_t (*)(_QWORD))sub_1002BB8A0);
}

unint64_t sub_1001DBC60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10004CFD4(&qword_1009D0538);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10004CFD4(&qword_1009D0540);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D0538);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10004CE80(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for EventType(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1001DBE00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(&qword_1009D09D8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v9 = (id)*(v6 - 2);
    swift_bridgeObjectRetain(v8);
    result = sub_1002BBFB8((uint64_t)v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v9;
    v12 = (_QWORD *)(v4[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of InfoBar.MessageQueue.resolveTask()
{
  return 0;
}

uint64_t variable initialization expression of SearchBar.Coordinator.isEditing()
{
  return 0;
}

uint64_t variable initialization expression of InfoBar.Content.action()
{
  return 0;
}

uint64_t variable initialization expression of AppStoreReviewManager.remoteConfig()
{
  type metadata accessor for RCDataContainer(0);
  return static RCDataContainer.default.getter();
}

void *variable initialization expression of InfoBar.MessageQueue.timedMessages()
{
  return &_swiftEmptyArrayStorage;
}

void *variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.cancellables()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.buyButtonProvider@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.skipCumulativeDelta()
{
  return 0.0;
}

uint64_t variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.supportedSkipAmounts()
{
  return sub_1001E0070((uint64_t)&off_1008F0048);
}

uint64_t variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.downloadState()
{
  return 3;
}

void *variable initialization expression of SplitViewContentHostingController.cachedControllers()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of SplitViewContentHostingController.userSelectedItemSubject()
{
  return sub_1001DE4B8(&qword_1009CEC00);
}

uint64_t variable initialization expression of SplitViewContentHostingController.accessibilityPopToRootUserSelectedItemSubject()
{
  return sub_1001DE4B8(&qword_1009CEC08);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.navigationBarStyle()
{
  return sub_1001DE4B8((uint64_t *)&unk_1009CEC10);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.scrollOffsetInsetPublisher()
{
  return sub_1001DE4B8((uint64_t *)&unk_1009D8C30);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.undockingViewControllerPublisher()
{
  return sub_1001DE4B8((uint64_t *)&unk_1009CEC20);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.isPresentingCardsPublisher()
{
  return sub_1001DE4B8(&qword_1009D8C40);
}

CGFloat variable initialization expression of EdgeInsetPublisher._insets()
{
  return UIEdgeInsetsZero.top;
}

uint64_t variable initialization expression of REActionMenuState.safeAreaInsetsPublisher()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  _OWORD v5[2];

  v0 = type metadata accessor for EdgeInsetPublisher(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  v5[0] = *(_OWORD *)&UIEdgeInsetsZero.top;
  v5[1] = v2;
  type metadata accessor for UIEdgeInsets(0);
  Published.init(initialValue:)(v5, v3);
  return v1;
}

id variable initialization expression of REActionMenuState.scrubberMarkerController()
{
  return sub_1001DC1D4((uint64_t (*)(_QWORD))type metadata accessor for ScrubberMarkerController);
}

uint64_t variable initialization expression of REActionMenuState.snapshotQueue()
{
  return sub_1001DE564((void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD00000000000001BLL, 0x80000001007B2520);
}

uint64_t variable initialization expression of REActionMenuState.chapterTitleSubject()
{
  uint64_t v0;
  _QWORD v2[2];

  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  v0 = sub_10004CFD4(&qword_1009CEC50);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return CurrentValueSubject.init(_:)(v2);
}

uint64_t variable initialization expression of REActionMenuState.pagesLeftInChapterStringSubject()
{
  uint64_t v0;
  _QWORD v2[2];

  v2[0] = 0;
  v2[1] = 0;
  v0 = sub_10004CFD4(&qword_1009CEC58);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return CurrentValueSubject.init(_:)(v2);
}

uint64_t BKLibraryBookshelfCollectionViewController.canBecomeFirstResponder.getter()
{
  return 1;
}

uint64_t variable initialization expression of REActionMenuState.movementState()
{
  return 0;
}

uint64_t variable initialization expression of ScrubberStatePublisher._scrubberState()
{
  return 0;
}

uint64_t variable initialization expression of REActionMenuState.closedSubject()
{
  return sub_1001DC9B8(1);
}

unint64_t variable initialization expression of REActionMenuState.state()
{
  return 0x8000000000000000;
}

double variable initialization expression of REActionMenuState.scrubPositionDeltaMinimum()
{
  return 0.01;
}

id variable initialization expression of PalettePresentationInteraction.tapGestureRecognizer()
{
  return objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
}

id variable initialization expression of PalettePresentationInteraction.panGestureRecognizer()
{
  return objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
}

id variable initialization expression of EngagementManager.metadata()
{
  return sub_1001DC1D4(type metadata accessor for EngagementManagerMetadata);
}

id sub_1001DC1D4(uint64_t (*a1)(_QWORD))
{
  return objc_msgSend(objc_allocWithZone((Class)a1(0)), "init");
}

double variable initialization expression of NowPlayingIndicatorView.levelCornerRadius()
{
  return 0.5;
}

double variable initialization expression of NowPlayingIndicatorView.minimumLevelHeight()
{
  return 3.0;
}

double variable initialization expression of NowPlayingIndicatorView.maximumLevelHeight()
{
  return 13.0;
}

id variable initialization expression of NowPlayingIndicatorView.levelGuttersColor()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.2);

  return v1;
}

id variable initialization expression of NowPlayingIndicatorView.levelColor()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
}

void variable initialization expression of BKSharedWithYouProvider.dynamicArray()
{
  sub_1001DD8DC(0xD000000000000022, 0x80000001007B2540);
}

uint64_t variable initialization expression of ContextMenuProvider.swipeActionItems()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ThisActionItem;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ActionItem;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t SampleActionItem;
  uint64_t v17;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009DDFA0);
  v1 = swift_allocObject(v0, 176, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10070CC80;
  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009CEC80, type metadata accessor for ReadThisActionItem, (uint64_t)&unk_1007375E8);
  *(_QWORD *)(v1 + 32) = ThisActionItem;
  *(_QWORD *)(v1 + 40) = v3;
  v4 = type metadata accessor for MarkAsFinishedActionItem(0);
  v5 = sub_100008DB0((unint64_t *)&unk_1009DDFB0, type metadata accessor for MarkAsFinishedActionItem, (uint64_t)&unk_100729590);
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  v6 = type metadata accessor for MarkAsStillReadingActionItem(0);
  v7 = sub_100008DB0((unint64_t *)&unk_1009CEC90, type metadata accessor for MarkAsStillReadingActionItem, (uint64_t)&unk_100734770);
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 72) = v7;
  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  v9 = sub_100008DB0((unint64_t *)&unk_1009DDFC0, type metadata accessor for AddToWantToReadActionItem, (uint64_t)&unk_100713ED0);
  *(_QWORD *)(v1 + 80) = ActionItem;
  *(_QWORD *)(v1 + 88) = v9;
  v10 = type metadata accessor for RemoveFromWantToReadActionItem(0);
  v11 = sub_100008DB0((unint64_t *)&unk_1009CECA0, type metadata accessor for RemoveFromWantToReadActionItem, (uint64_t)&unk_100726CF0);
  *(_QWORD *)(v1 + 96) = v10;
  *(_QWORD *)(v1 + 104) = v11;
  v12 = type metadata accessor for ExplicitDeclineActionItem(0);
  v13 = sub_100008DB0((unint64_t *)&unk_1009DDFD0, type metadata accessor for ExplicitDeclineActionItem, (uint64_t)&protocol conformance descriptor for ExplicitDeclineActionItem);
  *(_QWORD *)(v1 + 112) = v12;
  *(_QWORD *)(v1 + 120) = v13;
  *(_QWORD *)(v1 + 128) = type metadata accessor for AppShareActionItem(0);
  *(_QWORD *)(v1 + 136) = &protocol witness table for ShareActionItem;
  v14 = type metadata accessor for ListenSampleActionItem(0);
  v15 = sub_100008DB0((unint64_t *)&unk_1009CECB0, type metadata accessor for ListenSampleActionItem, (uint64_t)&unk_1007329E8);
  *(_QWORD *)(v1 + 144) = v14;
  *(_QWORD *)(v1 + 152) = v15;
  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  v17 = sub_100008DB0((unint64_t *)&unk_1009DDFE0, type metadata accessor for ReadSampleActionItem, (uint64_t)&unk_100736568);
  *(_QWORD *)(v1 + 160) = SampleActionItem;
  *(_QWORD *)(v1 + 168) = v17;
  return v1;
}

uint64_t variable initialization expression of ContextMenuProvider.actionItems()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ActionItem;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t SampleActionItem;
  uint64_t v18;
  uint64_t ThisActionItem;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009DDFA0);
  v1 = swift_allocObject(v0, 496, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10070CC90;
  v2 = type metadata accessor for AddToCollectionActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009CECC0, type metadata accessor for AddToCollectionActionItem, (uint64_t)&unk_100712750);
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  v5 = sub_100008DB0((unint64_t *)&unk_1009DDFC0, type metadata accessor for AddToWantToReadActionItem, (uint64_t)&unk_100713ED0);
  *(_QWORD *)(v1 + 48) = ActionItem;
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 64) = type metadata accessor for AppShareActionItem(0);
  *(_QWORD *)(v1 + 72) = &protocol witness table for ShareActionItem;
  v6 = type metadata accessor for CancelDownloadActionItem(0);
  v7 = sub_100008DB0((unint64_t *)&unk_1009DDFF0, type metadata accessor for CancelDownloadActionItem, (uint64_t)&unk_10072BDD0);
  *(_QWORD *)(v1 + 80) = v6;
  *(_QWORD *)(v1 + 88) = v7;
  v8 = sub_10006629C();
  *(_QWORD *)(v1 + 96) = &type metadata for CloseAudiobookMiniPlayerActionItem;
  *(_QWORD *)(v1 + 104) = v8;
  v9 = type metadata accessor for CopyLinkActionItem(0);
  v10 = sub_100008DB0((unint64_t *)&unk_1009DE000, type metadata accessor for CopyLinkActionItem, (uint64_t)&unk_100730688);
  *(_QWORD *)(v1 + 112) = v9;
  *(_QWORD *)(v1 + 120) = v10;
  v11 = type metadata accessor for DislikeActionItem(0);
  v12 = sub_100008DB0((unint64_t *)&unk_1009CECE0, type metadata accessor for DislikeActionItem, (uint64_t)&unk_1007328D8);
  *(_QWORD *)(v1 + 128) = v11;
  *(_QWORD *)(v1 + 136) = v12;
  v13 = type metadata accessor for DownloadActionItem(0);
  v14 = sub_100008DB0((unint64_t *)&unk_1009DE010, type metadata accessor for DownloadActionItem, (uint64_t)&unk_100720458);
  *(_QWORD *)(v1 + 144) = v13;
  *(_QWORD *)(v1 + 152) = v14;
  v15 = type metadata accessor for EditFinishedDateActionItem(0);
  v16 = sub_100008DB0((unint64_t *)&unk_1009CECF0, type metadata accessor for EditFinishedDateActionItem, (uint64_t)&unk_100735EC0);
  *(_QWORD *)(v1 + 160) = v15;
  *(_QWORD *)(v1 + 168) = v16;
  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  v18 = sub_100008DB0((unint64_t *)&unk_1009DE020, type metadata accessor for GetSampleActionItem, (uint64_t)&unk_10071CDF8);
  *(_QWORD *)(v1 + 176) = SampleActionItem;
  *(_QWORD *)(v1 + 184) = v18;
  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  v20 = sub_100008DB0((unint64_t *)&unk_1009CEC80, type metadata accessor for ReadThisActionItem, (uint64_t)&unk_1007375E8);
  *(_QWORD *)(v1 + 192) = ThisActionItem;
  *(_QWORD *)(v1 + 200) = v20;
  v21 = type metadata accessor for ExplicitDeclineActionItem(0);
  v22 = sub_100008DB0((unint64_t *)&unk_1009DDFD0, type metadata accessor for ExplicitDeclineActionItem, (uint64_t)&protocol conformance descriptor for ExplicitDeclineActionItem);
  *(_QWORD *)(v1 + 208) = v21;
  *(_QWORD *)(v1 + 216) = v22;
  v23 = type metadata accessor for GiftActionItem(0);
  v24 = sub_100008DB0((unint64_t *)&unk_1009CED00, type metadata accessor for GiftActionItem, (uint64_t)&unk_100720A98);
  *(_QWORD *)(v1 + 224) = v23;
  *(_QWORD *)(v1 + 232) = v24;
  v25 = type metadata accessor for MultipleGiftActionItem(0);
  v26 = sub_100008DB0((unint64_t *)&unk_1009DE030, type metadata accessor for MultipleGiftActionItem, (uint64_t)&unk_10072D1E8);
  *(_QWORD *)(v1 + 240) = v25;
  *(_QWORD *)(v1 + 248) = v26;
  *(_QWORD *)(v1 + 256) = type metadata accessor for LikeActionItem(0);
  *(_QWORD *)(v1 + 264) = &protocol witness table for LikeActionItem;
  v27 = type metadata accessor for ListenSampleActionItem(0);
  v28 = sub_100008DB0((unint64_t *)&unk_1009CECB0, type metadata accessor for ListenSampleActionItem, (uint64_t)&unk_1007329E8);
  *(_QWORD *)(v1 + 272) = v27;
  *(_QWORD *)(v1 + 280) = v28;
  v29 = type metadata accessor for MarkAsFinishedActionItem(0);
  v30 = sub_100008DB0((unint64_t *)&unk_1009DDFB0, type metadata accessor for MarkAsFinishedActionItem, (uint64_t)&unk_100729590);
  *(_QWORD *)(v1 + 288) = v29;
  *(_QWORD *)(v1 + 296) = v30;
  v31 = type metadata accessor for MarkAsStillReadingActionItem(0);
  v32 = sub_100008DB0((unint64_t *)&unk_1009CEC90, type metadata accessor for MarkAsStillReadingActionItem, (uint64_t)&unk_100734770);
  *(_QWORD *)(v1 + 304) = v31;
  *(_QWORD *)(v1 + 312) = v32;
  v33 = type metadata accessor for OpenProductPageActionItem(0);
  v34 = sub_100008DB0((unint64_t *)&unk_1009CED10, type metadata accessor for OpenProductPageActionItem, (uint64_t)&unk_100728D60);
  *(_QWORD *)(v1 + 320) = v33;
  *(_QWORD *)(v1 + 328) = v34;
  *(_QWORD *)(v1 + 336) = type metadata accessor for RateAndReviewActionItem(0);
  *(_QWORD *)(v1 + 344) = &protocol witness table for RateAndReviewActionItem;
  v35 = type metadata accessor for ReadSampleActionItem(0);
  v36 = sub_100008DB0((unint64_t *)&unk_1009DDFE0, type metadata accessor for ReadSampleActionItem, (uint64_t)&unk_100736568);
  *(_QWORD *)(v1 + 352) = v35;
  *(_QWORD *)(v1 + 360) = v36;
  v37 = type metadata accessor for RemoveActionItem(0);
  v38 = sub_100008DB0((unint64_t *)&unk_1009DE040, type metadata accessor for RemoveActionItem, (uint64_t)&unk_100734FC8);
  *(_QWORD *)(v1 + 368) = v37;
  *(_QWORD *)(v1 + 376) = v38;
  v39 = type metadata accessor for RemoveFromContinueActionItem(0);
  v40 = sub_100008DB0((unint64_t *)&unk_1009CED20, type metadata accessor for RemoveFromContinueActionItem, (uint64_t)&unk_10071BFF0);
  *(_QWORD *)(v1 + 384) = v39;
  *(_QWORD *)(v1 + 392) = v40;
  v41 = type metadata accessor for RemoveFromWantToReadActionItem(0);
  v42 = sub_100008DB0((unint64_t *)&unk_1009CECA0, type metadata accessor for RemoveFromWantToReadActionItem, (uint64_t)&unk_100726CF0);
  *(_QWORD *)(v1 + 400) = v41;
  *(_QWORD *)(v1 + 408) = v42;
  v43 = type metadata accessor for RenameActionItem(0);
  v44 = sub_100008DB0((unint64_t *)&unk_1009DE050, type metadata accessor for RenameActionItem, (uint64_t)&unk_100716168);
  *(_QWORD *)(v1 + 416) = v43;
  *(_QWORD *)(v1 + 424) = v44;
  v45 = type metadata accessor for ReportAnIssueActionItem(0);
  v46 = sub_100008DB0((unint64_t *)&unk_1009CED30, type metadata accessor for ReportAnIssueActionItem, (uint64_t)&unk_10070F908);
  *(_QWORD *)(v1 + 432) = v45;
  *(_QWORD *)(v1 + 440) = v46;
  v47 = type metadata accessor for ViewSupplementalContentActionItem(0);
  v48 = sub_100008DB0((unint64_t *)&unk_1009DE060, type metadata accessor for ViewSupplementalContentActionItem, (uint64_t)&unk_100723CE8);
  *(_QWORD *)(v1 + 448) = v47;
  *(_QWORD *)(v1 + 456) = v48;
  *(_QWORD *)(v1 + 464) = type metadata accessor for SharedWithYouActionItem(0);
  *(_QWORD *)(v1 + 472) = &protocol witness table for SharedWithYouActionItem;
  v49 = type metadata accessor for InternalTapToRadarActionItem(0);
  v50 = sub_100008DB0((unint64_t *)&unk_1009CED40, type metadata accessor for InternalTapToRadarActionItem, (uint64_t)&unk_100735D60);
  *(_QWORD *)(v1 + 480) = v49;
  *(_QWORD *)(v1 + 488) = v50;
  return v1;
}

uint64_t variable initialization expression of SeriesListModeManager.filterPublishers()
{
  return sub_1001DC970((uint64_t *)&unk_1009CED50);
}

uint64_t variable initialization expression of SeriesListModeManager.sortPublishers()
{
  return sub_1001DC970(&qword_1009DF240);
}

uint64_t variable initialization expression of SeriesListModeManager.filterOptions()
{
  return sub_1001DC970((uint64_t *)&unk_1009CED60);
}

uint64_t variable initialization expression of SeriesListModeManager.previousSortOrders()
{
  return sub_1001DC970(&qword_1009DF260);
}

uint64_t sub_1001DC970(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = sub_10004CFD4(a1);
  result = swift_allocObject(v1, 28, 7);
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t variable initialization expression of CloseBookAnimator.crossFadeContent()
{
  return 0;
}

uint64_t variable initialization expression of BookReaderStateManager.isOrientationLockedSubject()
{
  return sub_1001DC9B8(0);
}

uint64_t sub_1001DC9B8(char a1)
{
  uint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return CurrentValueSubject.init(_:)(&v3);
}

uint64_t variable initialization expression of ChromeStyle._colorScheme@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DCC54((unsigned int *)&enum case for ColorScheme.light(_:), (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, a1);
}

uint64_t variable initialization expression of ChromeStyle._verticalSizeClass@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DCC54((unsigned int *)&enum case for UserInterfaceSizeClass.regular(_:), (uint64_t (*)(_QWORD))&type metadata accessor for UserInterfaceSizeClass, a1);
}

double variable initialization expression of ChromeStyle._statusBarHeight()
{
  return 44.0;
}

uint64_t variable initialization expression of ChromeStyle.controlFont()
{
  return sub_1001DCA60((unsigned int *)&enum case for Font.TextStyle.body(_:));
}

uint64_t variable initialization expression of ChromeStyle.controlSubtitleFont()
{
  return sub_1001DCA60((unsigned int *)&enum case for Font.TextStyle.caption(_:));
}

uint64_t sub_1001DCA60(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Font.TextStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a1, v5);
  v9 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = static Font.system(_:design:weight:)(v8, v4, 0, 1);
  sub_1001E01DC((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t variable initialization expression of InfoBar.Message.currentVisibleStartTime@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE7B0((uint64_t (*)(_QWORD))&type metadata accessor for Date, a1);
}

unint64_t variable initialization expression of PersonalizationEventDonor.config()
{
  return sub_10004CD48((uint64_t)_swiftEmptyArrayStorage, &qword_1009D0A40, &qword_1009D0A48, (uint64_t (*)(uint64_t *, unint64_t))sub_10004CFC4);
}

uint64_t variable initialization expression of PersonalizationEventDonor.defaultMaxCount()
{
  return 2000;
}

double variable initialization expression of PersonalizationEventDonor.defaultAgeToExpire()
{
  return 31536000.0;
}

uint64_t variable initialization expression of PersonalizationEventDonor.finishingBookAutomatically()
{
  return 2;
}

uint64_t variable initialization expression of BookProviderService.logger()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = type metadata accessor for BookProviderService(0);
  v0 = sub_10004CFD4(&qword_1009CEDD8);
  v1 = String.init<A>(describing:)(&v4, v0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v1, v2);
}

uint64_t variable initialization expression of ExplicitDeclineActionItem.type@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DCC54((unsigned int *)&enum case for ContextActionType.explicitDecline(_:), (uint64_t (*)(_QWORD))&type metadata accessor for ContextActionType, a1);
}

uint64_t sub_1001DCC54@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a3, v4, v5);
}

uint64_t variable initialization expression of ScrubberMarkerController.markerPageRange()
{
  return 1;
}

id variable initialization expression of ToolbarButton.backgroundView()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = type metadata accessor for BackdropView();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setCornerRadius:", 6.0);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v1, "setUserInteractionEnabled:", 0);
  objc_msgSend(v1, "setClipsToBounds:", 1);
  objc_msgSend(v1, "setAutoresizingMask:", 18);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  objc_msgSend(v4, "setUserInteractionEnabled:", 0);
  objc_msgSend(v4, "setAutoresizingMask:", 18);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "setFrame:");
  objc_msgSend(v1, "addSubview:", v4);

  return v1;
}

id variable initialization expression of ToolbarButton.highlightView()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setCornerRadius:", 6.0);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v0, "setUserInteractionEnabled:", 0);
  objc_msgSend(v0, "setAutoresizingMask:", 18);
  return v0;
}

double variable initialization expression of BookReaderHostLayoutController.capturedSafeAreaInsets@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of MiniPlayerHostingTabBarController.appearanceState()
{
  return 128;
}

uint64_t variable initialization expression of TabBarController.rootBarEventSubject()
{
  return sub_1001DE4B8((uint64_t *)&unk_1009CEEA0);
}

id variable initialization expression of TabBarController.isCreatingContentForNavigationController()
{
  return objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
}

uint64_t variable initialization expression of BookReaderModuleHost.appIntentsInfoTracker()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = type metadata accessor for AppIntentsAssetViewControllerInfoTracker(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  swift_unknownObjectWeakInit(v1 + 16, 0);
  v4 = 0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E91D0);
  Published.init(initialValue:)(&v4, v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = 0;
  swift_unknownObjectWeakAssign(v1 + 16, 0);
  return v1;
}

id variable initialization expression of BookReaderModuleHost.appIntentsInfo()
{
  return objc_msgSend(objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo), "init");
}

uint64_t variable initialization expression of BookReaderModuleHost.log()
{
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000020, 0x80000001007B2590);
}

uint64_t variable initialization expression of BookReaderModuleHost.hostID()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v5 = UUID.uuidString.getter(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t variable initialization expression of AnnotationProviderService.annotationsChangeSubject()
{
  return sub_1001DE4B8(&qword_1009CEEB8);
}

uint64_t variable initialization expression of AnnotationProviderService.bookmarkChangeSubject()
{
  return sub_1001DE4B8(&qword_1009CEEC0);
}

uint64_t variable initialization expression of AnnotationProviderService.highlightChangeSubject()
{
  return sub_1001DE4B8(&qword_1009CEEC8);
}

uint64_t variable initialization expression of MainContentViewController.toolbarHeightPublisher()
{
  uint64_t v0;
  uint64_t v2;

  v2 = 0;
  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEED0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return CurrentValueSubject.init(_:)(&v2);
}

uint64_t variable initialization expression of MainContentViewController.keyboardObserver()
{
  return 0;
}

double variable initialization expression of LibraryCollectionTitleView.minHeightThatCountsAsVisible()
{
  return 20.0;
}

id variable initialization expression of YearInReviewEligibilityService.setupPromise()
{
  return objc_msgSend(objc_allocWithZone((Class)AMSMutablePromise), "init");
}

uint64_t variable initialization expression of CarPlayDataManager.accessQueue()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v13 = sub_1001E0190();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v0, v11);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x80000001007B25C0, v5, v2, v9, 0);
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.currentUnderlinePercent()
{
  return 0;
}

void variable initialization expression of ReadingActivityService.dailyGoal()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  _QWORD v19[2];
  _BYTE v20[104];
  _QWORD v21[4];

  v0 = type metadata accessor for ReadingGoals.State(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static ReadingGoals.State.default.getter(v2);
  v6 = ReadingGoals.State.streakDayGoal.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v21[3] = &type metadata for Double;
  *(double *)v21 = v6;
  v7 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v7, v20);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v19[0] = 0x6D614E6775626564;
  v19[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = 0xD000000000000020;
  *(_QWORD *)(inited + 80) = 0x80000001007B25E0;
  v9 = sub_1000560A8(inited);
  v10 = sub_10003F198(v21, (uint64_t)&type metadata for Double);
  v11 = *(&type metadata for Double - 1);
  __chkstk_darwin(v10);
  v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, &type metadata for Double);
  (*(void (**)(char *, _QWORD *))(v11 + 8))(v13, &type metadata for Double);
  _s5Books15CurrentPageViewVwxx_0(v21);
  v15 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v17 = objc_msgSend(v15, "initWithValue:options:", v14, isa);
  swift_unknownObjectRelease(v14);

  if (!v17)
    __break(1u);
}

void variable initialization expression of ReadingActivityService.booksFinishedGoal()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  _QWORD v19[2];
  _BYTE v20[104];
  _QWORD v21[4];

  v0 = type metadata accessor for ReadingGoals.State(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static ReadingGoals.State.default.getter(v2);
  v6 = ReadingGoals.State.booksFinishedGoal.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v21[3] = &type metadata for Int;
  v21[0] = v6;
  v7 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v7, v20);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v19[0] = 0x6D614E6775626564;
  v19[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = 0xD000000000000028;
  *(_QWORD *)(inited + 80) = 0x80000001007B2610;
  v9 = sub_1000560A8(inited);
  v10 = sub_10003F198(v21, (uint64_t)&type metadata for Int);
  v11 = *(&type metadata for Int - 1);
  __chkstk_darwin(v10);
  v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, &type metadata for Int);
  (*(void (**)(char *, _QWORD *))(v11 + 8))(v13, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0(v21);
  v15 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v17 = objc_msgSend(v15, "initWithValue:options:", v14, isa);
  swift_unknownObjectRelease(v14);

  if (!v17)
    __break(1u);
}

void variable initialization expression of ReadingActivityService.finishedAssets()
{
  sub_1001DD8DC(0xD000000000000025, 0x80000001007B2640);
}

void variable initialization expression of ReadingActivityService.finishedAssetsData()
{
  sub_1001DDBF4(0xD000000000000029, 0x80000001007B2670);
}

void variable initialization expression of ReadingActivityService.finishedAssetYear()
{
  sub_1001DDFBC(0xD000000000000028, 0x80000001007B26A0);
}

void variable initialization expression of ReadingActivityService.finishedAssetAllTimeCount()
{
  sub_1001DDFBC(0xD000000000000030, 0x80000001007B26D0);
}

void variable initialization expression of ReadingActivityService.finishedAssetsAfterCurrentYearCount()
{
  sub_1001DDFBC(0xD00000000000003ALL, 0x80000001007B2710);
}

void variable initialization expression of ReadingActivityService.finishedAssetsPriorToCurrentYearCount()
{
  sub_1001DDFBC(0xD00000000000003CLL, 0x80000001007B2750);
}

void variable initialization expression of ReadingActivityService.isDailyGoalCompleted()
{
  sub_1001DDA2C(0xD00000000000002BLL, 0x80000001007B2790);
}

void variable initialization expression of ReadingActivityService.readingTimeToday()
{
  sub_1001DDFBC(0xD000000000000027, 0x80000001007B27C0);
}

void variable initialization expression of ReadingActivityService.readingIndicatorTimeToday()
{
  sub_1001DDFBC(0xD000000000000030, 0x80000001007B27F0);
}

void variable initialization expression of ReadingActivityService.readingHistory()
{
  sub_1001DD8DC(0xD000000000000025, 0x80000001007B2830);
}

void sub_1001DD8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  id v7;
  Class isa;
  Class v9;
  id v10;
  _QWORD v11[2];
  _BYTE v12[104];

  v4 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v11[0] = 0x6D614E6775626564;
  v11[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  v6 = sub_1000560A8(inited);
  v7 = objc_allocWithZone((Class)BSUIDynamicArray);
  sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v9 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v10 = objc_msgSend(v7, "initWithArray:options:", isa, v9);

  if (!v10)
    __break(1u);
}

void variable initialization expression of ReadingActivityService.didSeeWelcomeExperience()
{
  sub_1001DDA2C(0xD00000000000002ELL, 0x80000001007B2860);
}

void sub_1001DDA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  _QWORD v16[2];
  _BYTE v17[104];
  _QWORD v18[4];

  v18[3] = &type metadata for Bool;
  LOBYTE(v18[0]) = 0;
  v4 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v4, v17);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v16[0] = 0x6D614E6775626564;
  v16[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v16, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  v6 = sub_1000560A8(inited);
  v7 = sub_10003F198(v18, (uint64_t)&type metadata for Bool);
  v8 = *(&type metadata for Bool - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, &type metadata for Bool);
  (*(void (**)(char *, _QWORD *))(v8 + 8))(v10, &type metadata for Bool);
  _s5Books15CurrentPageViewVwxx_0(v18);
  v12 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v14 = objc_msgSend(v12, "initWithValue:options:", v11, isa);
  swift_unknownObjectRelease(v11);

  if (!v14)
    __break(1u);
}

void variable initialization expression of ReadingActivityService.allTimeRecordStreakData()
{
  sub_1001DDBF4(0xD00000000000002ELL, 0x80000001007B2890);
}

void sub_1001DDBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  _QWORD v17[2];
  _BYTE v18[104];
  _QWORD v19[4];

  v4 = sub_10004CFD4(&qword_1009D3090);
  v19[3] = v4;
  v19[0] = _swiftEmptyDictionarySingleton;
  v5 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v5, v18);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v17[0] = 0x6D614E6775626564;
  v17[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v17, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  v7 = sub_1000560A8(inited);
  if (v4)
  {
    v8 = sub_10003F198(v19, v4);
    v9 = *(_QWORD *)(v4 - 8);
    __chkstk_darwin(v8);
    v11 = (char *)&v17[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v4);
    _s5Books15CurrentPageViewVwxx_0(v19);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  v15 = objc_msgSend(v13, "initWithValue:options:", v12, isa);
  swift_unknownObjectRelease(v12);

  if (!v15)
    __break(1u);
}

uint64_t variable initialization expression of ReadingActivityService.readingHistoryPublisher()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_10004CFD4(&qword_1009CEEE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = sub_10004CFD4(&qword_1009CEEE8);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  return CurrentValueSubject.init(_:)(v2);
}

void variable initialization expression of ReadingActivityService.booksPerYear()
{
  sub_1001DDE90(0xD000000000000023, 0x80000001007B28C0);
}

void variable initialization expression of ReadingActivityService.timeReadPerMonth()
{
  sub_1001DDE90(0xD000000000000027, 0x80000001007B28F0);
}

void sub_1001DDE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  id v7;
  Class isa;
  id v9;
  _QWORD v10[2];
  _BYTE v11[104];

  v4 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v4, v11);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v10[0] = 0x6D614E6775626564;
  v10[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  v6 = sub_1000560A8(inited);
  v7 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v9 = objc_msgSend(v7, "initWithValue:options:", 0, isa);

  if (!v9)
    __break(1u);
}

void variable initialization expression of ReadingActivityService.finishedAssetCountByYear()
{
  sub_1001DDFBC(0xD00000000000002FLL, 0x80000001007B2920);
}

void sub_1001DDFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  _QWORD v16[2];
  _BYTE v17[104];
  _QWORD v18[4];

  v18[3] = &type metadata for Int;
  v18[0] = 0;
  v4 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v4, v17);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v16[0] = 0x6D614E6775626564;
  v16[1] = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v16, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  v6 = sub_1000560A8(inited);
  v7 = sub_10003F198(v18, (uint64_t)&type metadata for Int);
  v8 = *(&type metadata for Int - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, &type metadata for Int);
  (*(void (**)(char *, _QWORD *))(v8 + 8))(v10, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0(v18);
  v12 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v14 = objc_msgSend(v12, "initWithValue:options:", v11, isa);
  swift_unknownObjectRelease(v11);

  if (!v14)
    __break(1u);
}

double variable initialization expression of ReadingActivityService.goalsModule@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double variable initialization expression of ReadingActivityService.booksFinishedModule@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double variable initialization expression of SidebarViewModel._programmaticSelection@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)&result = 16711422;
  *(_OWORD *)(a1 + 64) = xmmword_10070CCB0;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

id variable initialization expression of SidebarViewModel._accountInfo@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CNContact), "init");
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of SidebarViewModel.AccountInfo.displayText()
{
  return 0;
}

id variable initialization expression of SidebarViewModel.AccountInfo.contact()
{
  return objc_msgSend(objc_allocWithZone((Class)CNContact), "init");
}

uint64_t variable initialization expression of RootBarStandardItemsManager.cacheAccessQueue()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v12 = sub_1001E0190();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v0, v10);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x80000001007B2950, v9, v2, v6, 0);
}

uint64_t variable initialization expression of PriceTrackingService._bridge()
{
  return 0x656764697262;
}

uint64_t variable initialization expression of PriceTrackingService._priceTracker()
{
  return 0x6172546563697270;
}

unint64_t variable initialization expression of PriceTrackingService._addToWTRDelegate()
{
  return 0xD000000000000010;
}

uint64_t variable initialization expression of PriceTrackingService._stateChanges()
{
  return 0x6168436574617473;
}

uint64_t _s5Books30YearInReviewEligibilityServiceC11_setupState33_7B264D70199A5E6B58C4E74855217919LL13BookDataStore26MutableObservableContainerCyAA0f5SetupH0OGvpfi_0()
{
  uint64_t v0;
  char v2;

  v2 = 0;
  v0 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return MutableObservableContainer.init(value:)(&v2);
}

uint64_t variable initialization expression of PageSnapshotLoader.pageIndexChanged()
{
  return sub_1001DE4B8(&qword_1009CEEF0);
}

uint64_t sub_1001DE4B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_10004CFD4(a1);
  v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return PassthroughSubject.init()(v2);
}

uint64_t variable initialization expression of PageSnapshotLoader.logger()
{
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007B29A0);
}

uint64_t variable initialization expression of DownloadPurchaseMonitor.queue()
{
  return sub_1001DE564((void (*)(void))&static DispatchQoS.unspecified.getter, 0xD00000000000001ELL, 0x80000001007B29C0);
}

uint64_t sub_1001DE564(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  _QWORD *v20;

  v19 = a3;
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  a1();
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v17 = sub_1001E0190();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v9, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(a2, v19, v14, v11, v8, 0);
}

uint64_t variable initialization expression of FinishedAssetManager.logger()
{
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x64656873696E6946, 0xEE00737465737341);
}

unint64_t variable initialization expression of BookReaderAccessoryHighlightsController.resolveStates()
{
  return sub_1001DB96C((uint64_t)_swiftEmptyArrayStorage);
}

id variable initialization expression of BookReaderAccessoryHighlightsController.highlightRenderingController()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)AEHighlightRenderingController), "init");
  objc_msgSend(v0, "setCanUseFilters:", 1);
  return v0;
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.currentTheme@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DE7B0((uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity, a1);
}

uint64_t sub_1001DE7B0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.interactiveHighlight()
{
  return 0;
}

unint64_t variable initialization expression of ChapterScrubbingState.pageImageLoaders()
{
  return sub_1001DFC98(_swiftEmptyArrayStorage, &qword_1009D09D0);
}

uint64_t variable initialization expression of ObjectGraphHost.dependenciesPromise()
{
  sub_10004CFD4(&qword_1009CEEF8);
  return Promise.__allocating_init()();
}

uint64_t sub_1001DE850(uint64_t a1, uint64_t a2)
{
  return sub_1001DF854(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

_WORD *sub_1001DE870@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

void sub_1001DE880(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

id sub_1001DE88C()
{
  id *v0;

  return *v0;
}

uint64_t sub_1001DE894@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1001DE89C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1001DE8A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1001DE8B8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1001DE8CC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1001DE8F8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1001DE91C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1001DE930@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1001DE944(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1001DE958()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1001DE968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_1001DE980(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

BOOL sub_1001DE994(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1001DE9A8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1001DE9C0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1001DE9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009D0C40, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E7AC);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1001DEA30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009D0C40, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E7AC);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1001DEA74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

_QWORD *sub_1001DEAB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1001DEAC8(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1001DEADC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_1001DEAF4(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1001DEB68(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_1001DEBE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_1001DEC24(uint64_t a1, uint64_t a2)
{
  return sub_1001DF854(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1001DEC38(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10070EFA0, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1001DEC74(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10070EFA0, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1001DECBC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  WitnessTable = swift_getWitnessTable(&unk_10070EFA0, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

Swift::Int sub_1001DED14()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001DED58()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001DED80(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_1001DEDC0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1001DEDD0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1001DEDDC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(BKAudiobookPlayerErrorDomain);
}

uint64_t sub_1001DEDEC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1001DEE2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1001DEE6C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1001DEED0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_1001DEF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1001DEF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_1001DEFB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1001E15D4(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

_QWORD *sub_1001DEFEC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1001DEFF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_10070EFA0, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

BOOL sub_1001DF044(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1001DF058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0CE8, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_10070E684);
  v3 = sub_100008DB0((unint64_t *)&unk_1009D0CF0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_10070E624);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0CA8, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_10070EC18);
  v3 = sub_100008DB0(&qword_1009D0CB0, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_10070EBB8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0CB8, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070F010);
  v3 = sub_100008DB0(&qword_1009D0CC0, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070EAB0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0CC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070F050);
  v3 = sub_100008DB0(&qword_1009D0CD0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070E9A4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0D08, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_10070E418);
  v3 = sub_100008DB0(&qword_1009D0D10, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_10070E3B8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF2EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0588, (uint64_t (*)(uint64_t))type metadata accessor for BCDefaultCollectionID, (uint64_t)&unk_10070D894);
  v3 = sub_100008DB0(&qword_1009D0590, (uint64_t (*)(uint64_t))type metadata accessor for BCDefaultCollectionID, (uint64_t)&unk_10070D834);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF370(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
  v3 = sub_100008DB0(&qword_1009D0D00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070E510);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1001DF44C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
  v3 = sub_100008DB0(&qword_1009D05B0, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070D1B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF4D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0((unint64_t *)&qword_1009D0CD8, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10070F094);
  v3 = sub_100008DB0(&qword_1009D0CE0, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10070E854);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0578, (uint64_t (*)(uint64_t))type metadata accessor for BDSCloudAssetType, (uint64_t)&unk_10070DBDC);
  v3 = sub_100008DB0(&qword_1009D0580, (uint64_t (*)(uint64_t))type metadata accessor for BDSCloudAssetType, (uint64_t)&unk_10070DB7C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0568, (uint64_t (*)(uint64_t))type metadata accessor for BDSLibraryContentAssetType, (uint64_t)&unk_10070DD34);
  v3 = sub_100008DB0(&qword_1009D0570, (uint64_t (*)(uint64_t))type metadata accessor for BDSLibraryContentAssetType, (uint64_t)&unk_10070DCD4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF65C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0598, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10070D4B8);
  v3 = sub_100008DB0(&qword_1009D05A0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10070D458);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF6E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0C88, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_10070EF18);
  v3 = sub_100008DB0(&qword_1009D0C90, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_10070EE6C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF764@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1001DF7A8@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001DF7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008DB0(&qword_1009D0C98, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070EF5C);
  v3 = sub_100008DB0(&qword_1009D0CA0, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070ED58);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001DF854(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1001DF890(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001DF8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001DF940(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

unint64_t sub_1001DF9C8(_QWORD *a1)
{
  return sub_1001DFC98(a1, &qword_1009D09D0);
}

unint64_t sub_1001DF9D4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_10004CFD4(&qword_1009D0750);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1002C8328(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = sub_1002C8328(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1001DFAD0(uint64_t a1)
{
  return sub_1001DFB18(a1, &qword_1009D0A20, &qword_1009D0A28, (uint64_t (*)(_QWORD))sub_1002BB7F4, (uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate);
}

unint64_t sub_1001DFAF4(uint64_t a1)
{
  return sub_1001DFB18(a1, (uint64_t *)&unk_1009D0A10, (uint64_t *)&unk_1009D7AC0, (uint64_t (*)(_QWORD))sub_1002BB7F4, (uint64_t (*)(_QWORD))&type metadata accessor for CFIRange);
}

unint64_t sub_1001DFB18(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t (*v27)(_QWORD);

  v26 = a5;
  v27 = a4;
  v8 = sub_10004CFD4(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t (**)(_QWORD))((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    sub_10004CFD4(a3);
    v13 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v12);
    v14 = (char *)v11 + *(int *)(v8 + 48);
    v15 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v16 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      sub_10000B5E4(v15, (uint64_t)v11, a2);
      v17 = *v11;
      result = v27(*v11);
      if ((v19 & 1) != 0)
        break;
      v20 = result;
      *(_QWORD *)((char *)v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v13[6] + 8 * result) = v17;
      v21 = v13[7];
      v22 = v26(0);
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v14, v22);
      v23 = v13[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
        goto LABEL_10;
      v13[2] = v25;
      v15 += v16;
      if (!--v12)
        return (unint64_t)v13;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1001DFC8C(_QWORD *a1)
{
  return sub_1001DFC98(a1, &qword_1009D7B70);
}

unint64_t sub_1001DFC98(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v2 = a1[2];
  if (!v2)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_10004CFD4(a2);
  v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v6 = a1[4];
  v5 = a1[5];
  result = sub_1002BB7F4(v6);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v5);
    return (unint64_t)v4;
  }
  v9 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v6;
    *(_QWORD *)(v4[7] + v10) = v5;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_retain(v5);
    result = sub_1002BB7F4(v6);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1001DFD90(uint64_t a1)
{
  return sub_1001DFB18(a1, &qword_1009D0508, &qword_1009D0510, (uint64_t (*)(_QWORD))sub_1002C8328, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookTasteInfo);
}

unint64_t sub_1001DFDB4(uint64_t a1)
{
  return sub_1001DFB18(a1, &qword_1009D0548, &qword_1009D0550, (uint64_t (*)(_QWORD))sub_1002C8328, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating);
}

uint64_t sub_1001DFDDC(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = result;
  v2 = (unint64_t)result >> 62;
  if ((unint64_t)result >> 62)
  {
    if (result < 0)
      v6 = result;
    else
      v6 = result & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(result);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    result = swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10004CFD4((uint64_t *)&unk_1009D0600);
      result = static _SetStorage.allocate(capacity:)(v3);
      v4 = (_QWORD *)result;
      v24 = v1;
      if (!v2)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v24 = v1;
  if (!v2)
  {
LABEL_4:
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return (uint64_t)v4;
    goto LABEL_15;
  }
LABEL_11:
  if (v1 < 0)
    v7 = v1;
  else
    v7 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v7);
  result = swift_bridgeObjectRelease(v1);
  if (!v5)
    return (uint64_t)v4;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v23 = v5;
  while ((v24 & 0xC000000000000001) != 0)
  {
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v24);
    v10 = __OFADD__(v8++, 1);
    if (v10)
      goto LABEL_32;
LABEL_24:
    v25 = result;
    v27 = result;
    v11 = v4[5];
    v12 = type metadata accessor for AnyCancellable(0);
    v13 = sub_100008DB0(&qword_1009DE360, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v12, v13);
    v14 = -1 << *((_BYTE *)v4 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    v17 = *(_QWORD *)&v9[8 * (v15 >> 6)];
    v18 = 1 << v15;
    if (((1 << v15) & v17) != 0)
    {
      v19 = ~v14;
      v20 = sub_100008DB0(&qword_1009D0610, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v26 = *(_QWORD *)(v4[6] + 8 * v15);
        result = dispatch thunk of static Equatable.== infix(_:_:)(&v26, &v27, v12, v20);
        if ((result & 1) != 0)
        {
          result = swift_release(v25);
          v5 = v23;
          goto LABEL_17;
        }
        v15 = (v15 + 1) & v19;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v9[8 * (v15 >> 6)];
        v18 = 1 << v15;
      }
      while ((v17 & (1 << v15)) != 0);
      v5 = v23;
    }
    *(_QWORD *)&v9[8 * v16] = v18 | v17;
    *(_QWORD *)(v4[6] + 8 * v15) = v25;
    v21 = v4[2];
    v10 = __OFADD__(v21, 1);
    v22 = v21 + 1;
    if (v10)
      goto LABEL_33;
    v4[2] = v22;
LABEL_17:
    if (v8 == v5)
      return (uint64_t)v4;
  }
  if (v8 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  result = swift_retain(*(_QWORD *)(v24 + 32 + 8 * v8));
  v10 = __OFADD__(v8++, 1);
  if (!v10)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1001E0070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10004CFD4(&qword_1009D0A98);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), v8);
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01C0, (uint64_t)&unk_1008F18B0);
}

unint64_t sub_1001E0190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E5390;
  if (!qword_1009E5390)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009CEC40);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009E5390);
  }
  return result;
}

uint64_t sub_1001E01DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009CEDD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0100, (uint64_t)&unk_1008F13E0);
}

void type metadata accessor for BDSLibraryContentAssetType(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0108, (uint64_t)&unk_1008F1410);
}

void type metadata accessor for BDSCloudAssetType(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0110, (uint64_t)&unk_1008F1438);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0118, (uint64_t)&unk_1008F1460);
}

void type metadata accessor for UIVibrancyEffectStyle(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0120, (uint64_t)&unk_1008F1480);
}

void type metadata accessor for ScrollPosition(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0128, (uint64_t)&unk_1008F14A0);
}

void type metadata accessor for NavigationDirection(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0138, (uint64_t)&unk_1008F14F0);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0140, (uint64_t)&unk_1008F1510);
}

void type metadata accessor for Attributes(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0148, (uint64_t)&unk_1008F1530);
}

void type metadata accessor for AnimationCurve(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0150, (uint64_t)&unk_1008F1558);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0158, (uint64_t)&unk_1008F1578);
}

void type metadata accessor for BookLayoutMode(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0160, (uint64_t)&unk_1008F15A0);
}

__n128 initializeWithTake for DeepLinkIntent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0168, (uint64_t)&unk_1008F1618);
}

void type metadata accessor for BKAssetState(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0170, (uint64_t)&unk_1008F1640);
}

void type metadata accessor for AEAssetViewControllerDownloadState(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0178, (uint64_t)&unk_1008F1668);
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0180, (uint64_t)&unk_1008F1688);
}

void type metadata accessor for FigaroKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0188, (uint64_t)&unk_1008F16A8);
}

void type metadata accessor for BCAnalyticsViewLifeCycleState(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0190, (uint64_t)&unk_1008F16D0);
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0198, (uint64_t)&unk_1008F16F0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01A0, (uint64_t)&unk_1008F1710);
}

uint64_t sub_1001E03B8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1001E03D8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01A8, (uint64_t)&unk_1008F1790);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01B0, (uint64_t)&unk_1008F17B8);
}

__n128 initializeWithTake for ExperimentIDEntry(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01B8, (uint64_t)&unk_1008F1830);
}

uint64_t initializeBufferWithCopyOfBuffer for ExperimentIDEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_1001E0478(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1001E0498(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for FeedNavigationBarStyle(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D01C8, (uint64_t)&unk_1008F18E0);
}

uint64_t sub_1001E04D8()
{
  return sub_100008DB0(&qword_1009D03B0, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&unk_10070D074);
}

uint64_t sub_1001E0504()
{
  return sub_100008DB0(&qword_1009D03B8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070D178);
}

uint64_t sub_1001E0530()
{
  return sub_100008DB0(&qword_1009D03C0, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070D14C);
}

uint64_t sub_1001E055C()
{
  return sub_100008DB0(&qword_1009D03C8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10070D41C);
}

uint64_t sub_1001E0588()
{
  return sub_100008DB0(&qword_1009D03D0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10070D3F0);
}

uint64_t sub_1001E05B4()
{
  return sub_100008DB0(&qword_1009D03D8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10070D48C);
}

uint64_t sub_1001E05E0()
{
  return sub_100008DB0(&qword_1009D03E0, (uint64_t (*)(uint64_t))type metadata accessor for Attributes, (uint64_t)&unk_10070D5B8);
}

uint64_t sub_1001E060C()
{
  return sub_100008DB0(&qword_1009D03E8, (uint64_t (*)(uint64_t))type metadata accessor for Attributes, (uint64_t)&unk_10070D584);
}

uint64_t sub_1001E0638()
{
  return sub_100008DB0(&qword_1009D03F0, (uint64_t (*)(uint64_t))type metadata accessor for Attributes, (uint64_t)&unk_10070D5E4);
}

uint64_t sub_1001E0664()
{
  return sub_100008DB0(&qword_1009D03F8, (uint64_t (*)(uint64_t))type metadata accessor for Attributes, (uint64_t)&unk_10070D620);
}

uint64_t sub_1001E0690()
{
  return sub_100008DB0(&qword_1009D0400, (uint64_t (*)(uint64_t))type metadata accessor for BCDefaultCollectionID, (uint64_t)&unk_10070D7F8);
}

uint64_t sub_1001E06BC()
{
  return sub_100008DB0(&qword_1009D0408, (uint64_t (*)(uint64_t))type metadata accessor for BCDefaultCollectionID, (uint64_t)&unk_10070D7CC);
}

uint64_t sub_1001E06E8()
{
  return sub_100008DB0(&qword_1009D0418, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10070D958);
}

uint64_t sub_1001E0714()
{
  return sub_100008DB0(&qword_1009D0420, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10070D924);
}

uint64_t sub_1001E0740()
{
  return sub_100008DB0(&qword_1009D0428, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10070D984);
}

uint64_t sub_1001E076C()
{
  return sub_100008DB0(&qword_1009D0430, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10070D9C0);
}

uint64_t sub_1001E0798()
{
  return sub_100008DB0(&qword_1009D0438, (uint64_t (*)(uint64_t))type metadata accessor for BDSCloudAssetType, (uint64_t)&unk_10070DB40);
}

uint64_t sub_1001E07C4()
{
  return sub_100008DB0(&qword_1009D0440, (uint64_t (*)(uint64_t))type metadata accessor for BDSCloudAssetType, (uint64_t)&unk_10070DB14);
}

uint64_t sub_1001E07F0()
{
  return sub_100008DB0(&qword_1009D0448, (uint64_t (*)(uint64_t))type metadata accessor for BDSCloudAssetType, (uint64_t)&unk_10070DBB0);
}

uint64_t sub_1001E081C()
{
  return sub_100008DB0(&qword_1009D0450, (uint64_t (*)(uint64_t))type metadata accessor for BDSLibraryContentAssetType, (uint64_t)&unk_10070DC98);
}

uint64_t sub_1001E0848()
{
  return sub_100008DB0(&qword_1009D0458, (uint64_t (*)(uint64_t))type metadata accessor for BDSLibraryContentAssetType, (uint64_t)&unk_10070DC6C);
}

uint64_t sub_1001E0874()
{
  return sub_100008DB0(&qword_1009D0460, (uint64_t (*)(uint64_t))type metadata accessor for BDSLibraryContentAssetType, (uint64_t)&unk_10070DD08);
}

uint64_t sub_1001E08A0()
{
  return sub_100008DB0(&qword_1009D0468, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070D1E8);
}

uint64_t sub_1001E08CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoteHighlight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1001E0910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10004CFD4(&qword_1009D0A70);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100008DB0(&qword_1009D0A78, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100008DB0(&qword_1009D0A80, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1001E0B78(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10004CFD4(&qword_1009D0A88);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v12);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

void sub_1001E0ED4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10004CFD4(&qword_1009D05F8);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v44 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v42 = v1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
        __break(1u);
        goto LABEL_43;
      }
      v12 = v10;
      v13 = NSObject._rawHashValue(seed:)(v4[5]);
      v14 = -1 << *((_BYTE *)v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        type metadata accessor for BKTapActionView();
        v19 = *(id *)(v4[6] + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, v12);

        if ((v20 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v12);
          v1 = v42;
          goto LABEL_18;
        }
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v42;
      }
      *(_QWORD *)&v8[8 * v16] = v18 | v17;
      *(_QWORD *)(v4[6] + 8 * v15) = v12;
      v24 = v4[2];
      v11 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v11)
        goto LABEL_44;
      v4[2] = v25;
LABEL_18:
      if (v9 == v44)
        return;
    }
  }
  v26 = 0;
  v43 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v43)
  {
    v27 = v4[5];
    v28 = *(id *)(v1 + 32 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      type metadata accessor for BKTapActionView();
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
        goto LABEL_30;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(v4[6] + 8 * v31);
          v39 = static NSObject.== infix(_:_:)(v38, v28);

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v5 = v44;
        goto LABEL_31;
      }
LABEL_38:
      v5 = v44;
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_45;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v5)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

Swift::Int sub_1001E122C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10004CFD4((uint64_t *)&unk_1009D09F0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_1001E136C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for ClusteringOptions.MediaType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10004CFD4(&qword_1009D05C8);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100008DB0(&qword_1009D05D0, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100008DB0(&qword_1009D05D8, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_1001E15D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1001E160C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(a1);
  swift_bridgeObjectRetain(a1);
  return swift_bridgeObjectRetain(a2);
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AA0, (uint64_t)&unk_1008F1900);
}

void type metadata accessor for BSUIAssetKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AA8, (uint64_t)&unk_1008F1928);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AB0, (uint64_t)&unk_1008F1950);
}

void type metadata accessor for AssetActivityItemProviderProperty(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AB8, (uint64_t)&unk_1008F1980);
}

void type metadata accessor for BLDownloadQueueProperty(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AC0, (uint64_t)&unk_1008F19A8);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AC8, (uint64_t)&unk_1008F19D0);
}

void type metadata accessor for UIKeyboardType(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AD0, (uint64_t)&unk_1008F19F8);
}

void type metadata accessor for BKLibraryDownloadState(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AD8, (uint64_t)&unk_1008F1A18);
}

void type metadata accessor for LargeTitleDisplayMode(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AE0, (uint64_t)&unk_1008F1A38);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AE8, (uint64_t)&unk_1008F1A58);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AF0, (uint64_t)&unk_1008F1A80);
}

void type metadata accessor for AudiobookPlayerError(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0AF8, (uint64_t)&unk_1008F1AB0);
}

void type metadata accessor for BERestorationSnapshotAppearance(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B00, (uint64_t)&unk_1008F1AD8);
}

void type metadata accessor for Identifier(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B08, (uint64_t)&unk_1008F1AF8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B10, (uint64_t)&unk_1008F1B20);
}

void type metadata accessor for BKSceneType(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B18, (uint64_t)&unk_1008F1B48);
}

void type metadata accessor for BSUIAddToWTRDelegatePriceTrackingOptInType(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B20, (uint64_t)&unk_1008F1B68);
}

void type metadata accessor for MCatalogRequestRelationship(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B28, (uint64_t)&unk_1008F1B88);
}

void type metadata accessor for DeleteActionItem(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B30, (uint64_t)&unk_1008F1BB0);
}

void type metadata accessor for AEAnnotationTheme_PageTheme(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B38, (uint64_t)&unk_1008F1BD0);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0B40, (uint64_t)&unk_1008F1BF0);
}

uint64_t sub_1001E17DC()
{
  return sub_100008DB0(&qword_1009D0B48, (uint64_t (*)(uint64_t))type metadata accessor for AEAnnotationTheme_PageTheme, (uint64_t)&unk_10070E264);
}

uint64_t sub_1001E1808()
{
  return sub_100008DB0(&qword_1009D0B50, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_10070E37C);
}

uint64_t sub_1001E1834()
{
  return sub_100008DB0(&qword_1009D0B58, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_10070E350);
}

uint64_t sub_1001E1860()
{
  return sub_100008DB0(&qword_1009D0B60, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_10070E3EC);
}

uint64_t sub_1001E188C()
{
  return sub_100008DB0(&qword_1009D0B68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070E4D4);
}

uint64_t sub_1001E18B8()
{
  return sub_100008DB0(&qword_1009D0B70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070E4A8);
}

uint64_t sub_1001E18E4()
{
  return sub_100008DB0(&qword_1009D0B78, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_10070E5E8);
}

uint64_t sub_1001E1910()
{
  return sub_100008DB0(&qword_1009D0B80, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_10070E5BC);
}

uint64_t sub_1001E193C()
{
  return sub_100008DB0(&qword_1009D0B88, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_10070E658);
}

uint64_t sub_1001E1968()
{
  return sub_100008DB0((unint64_t *)&unk_1009D0B90, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E714);
}

uint64_t sub_1001E1994()
{
  return sub_100008DB0((unint64_t *)&unk_1009E1C70, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F0D8);
}

uint64_t sub_1001E19C0()
{
  return sub_100008DB0(&qword_1009D0BA0, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10070E818);
}

uint64_t sub_1001E19EC()
{
  return sub_100008DB0(&qword_1009D0BA8, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10070E7EC);
}

uint64_t sub_1001E1A18()
{
  return sub_100008DB0(&qword_1009D0BB0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070E968);
}

uint64_t sub_1001E1A44()
{
  return sub_100008DB0(&qword_1009D0BB8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070E93C);
}

uint64_t sub_1001E1A70()
{
  return sub_100008DB0(&qword_1009D0BC0, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070EA78);
}

uint64_t sub_1001E1A9C()
{
  return sub_100008DB0(&qword_1009D0BC8, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070EA50);
}

uint64_t sub_1001E1AC8()
{
  return sub_100008DB0(&qword_1009D0BD0, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_10070EB7C);
}

uint64_t sub_1001E1AF4()
{
  return sub_100008DB0(&qword_1009D0BD8, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_10070EB50);
}

uint64_t sub_1001E1B20()
{
  return sub_100008DB0(&qword_1009D0BE0, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_10070EBEC);
}

uint64_t sub_1001E1B4C()
{
  return sub_100008DB0(&qword_1009D0BE8, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070ED1C);
}

uint64_t sub_1001E1B78()
{
  return sub_100008DB0(&qword_1009D0BF0, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070ECF0);
}

uint64_t sub_1001E1BA4()
{
  return sub_100008DB0(&qword_1009D0BF8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_10070EE30);
}

uint64_t sub_1001E1BD0()
{
  return sub_100008DB0(&qword_1009D0C00, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_10070EE04);
}

uint64_t sub_1001E1BFC()
{
  return sub_100008DB0(&qword_1009D0C08, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_10070EEA0);
}

uint64_t sub_1001E1C28()
{
  return sub_100008DB0((unint64_t *)&unk_1009D0C10, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070ED8C);
}

uint64_t sub_1001E1C54()
{
  return sub_100008DB0(&qword_1009F28B0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10070EFCC);
}

uint64_t sub_1001E1C80()
{
  return sub_100008DB0(&qword_1009D0C20, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10070ECB8);
}

uint64_t sub_1001E1CAC()
{
  return sub_100008DB0(&qword_1009D0C28, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070EAE0);
}

uint64_t sub_1001E1CD8()
{
  return sub_100008DB0(&qword_1009D0C30, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070E9D8);
}

uint64_t sub_1001E1D04()
{
  return sub_100008DB0(&qword_1009D0C38, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10070E888);
}

uint64_t sub_1001E1D30()
{
  return sub_100008DB0(&qword_1009D0C40, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E7AC);
}

uint64_t sub_1001E1D5C()
{
  return sub_100008DB0(&qword_1009D0C48, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E77C);
}

uint64_t sub_1001E1D88()
{
  return sub_100008DB0(&qword_1009D0C50, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070E73C);
}

uint64_t sub_1001E1DB4()
{
  return sub_100008DB0(&qword_1009D0C58, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10070F1B8);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0D18, (uint64_t)&unk_1008F1C10);
}

uint64_t sub_1001E1DF4()
{
  return sub_100008DB0(&qword_1009D0C60, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10070F180);
}

unint64_t sub_1001E1E24()
{
  unint64_t result;

  result = qword_1009D0C68;
  if (!qword_1009D0C68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1009D0C68);
  }
  return result;
}

uint64_t sub_1001E1E68()
{
  return sub_100008DB0(&qword_1009D0C70, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10070F1F0);
}

uint64_t sub_1001E1E94()
{
  return sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
}

uint64_t sub_1001E1EC0()
{
  return sub_100008DB0(&qword_1009D0C80, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070E544);
}

void type metadata accessor for BE_WKPaginationMode(uint64_t a1)
{
  sub_10004EC48(a1, (unint64_t *)&unk_1009D0D20, (uint64_t)&unk_1008F1C30);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_10004EC48(a1, (unint64_t *)&unk_1009D0D40, (uint64_t)&unk_1008F1C50);
}

uint64_t sub_1001E1FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  _QWORD v21[2];

  v21[0] = swift_getObjectType();
  v1 = sub_10004CFD4(qword_1009D11C8);
  v2 = String.init<A>(describing:)(v21, v1);
  v4 = v3;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(86);
  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  v6._countAndFlagsBits = 0x3D656C746974203ALL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title + 8);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10._object = (void *)0x80000001007B44A0;
  v10._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._object = (void *)0x80000001007B44C0;
  v13._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v13);
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x746E657272756320;
  v16._object = (void *)0xEE003D7865646E49;
  String.append(_:)(v16);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v18 = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v18);
  v19._countAndFlagsBits = 0x63616279616C7020;
  v19._object = (void *)0xEE003D657461526BLL;
  String.append(_:)(v19);
  Float.write<A>(to:)(v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(float *)(v0 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_playbackRate));
  return v21[0];
}

id sub_1001E2274()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayAudiobookData();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlayAudiobookData()
{
  return objc_opt_self(_TtC5Books20CarPlayAudiobookData);
}

uint64_t sub_1001E2300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_1001E2308(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_1001E34F4(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = "\t";
      v6[4] = "\t";
      v6[5] = "\t";
      v6[6] = "\t";
      v6[7] = "\t";
      swift_initStructMetadata(a1, 0, 8, v6, a1 + 32);
    }
  }
}

uint64_t *sub_1001E23A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11 + 1;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v13 + (v12 & ~v11) + 87) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain(v17);
  }
  else
  {
    v18 = *((unsigned __int8 *)a2 + v8);
    if (v18 >= 2)
    {
      if (v8 <= 3)
        v19 = v8;
      else
        v19 = 4;
      __asm { BR              X14 }
    }
    v20 = ~v11;
    if (v18 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v21 = 1;
    }
    else
    {
      v22 = *a2;
      *a1 = *a2;
      swift_retain(v22);
      v21 = 0;
    }
    *((_BYTE *)a1 + v8) = v21;
    v23 = ((unint64_t)a1 + v12) & v20;
    v24 = ((unint64_t)a2 + v12) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v23, v24, v9);
    v25 = (v23 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v24 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_QWORD *)v26;
    *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
    *(_QWORD *)v25 = v27;
    v28 = (v23 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v24 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v27) = *(_BYTE *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 8) = v27;
    v30 = (v23 + v13 + 39) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v24 + v13 + 39) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v27) = *(_BYTE *)(v31 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_BYTE *)(v30 + 8) = v27;
    v32 = (v23 + v13 + 55) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v24 + v13 + 55) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v27) = *(_BYTE *)(v33 + 8);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_BYTE *)(v32 + 8) = v27;
    v34 = (v23 + v13 + 71) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v24 + v13 + 71) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v27) = *(_BYTE *)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_BYTE *)(v34 + 8) = v27;
    v36 = (v23 + v13 + 87) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v24 + v13 + 87) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v34) = *(_BYTE *)(v37 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_BYTE *)(v36 + 8) = v34;
  }
  return a1;
}

uint64_t sub_1001E2624(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v4);
  else
    swift_release(*a1);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + v6 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t *sub_1001E271C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v12 = *a2;
    *a1 = *a2;
    swift_retain(v12);
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v8 + v14 + 1;
  v16 = ((unint64_t)a1 + v15) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = v16 + v18;
  v20 = v17 + v18;
  v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = v26;
  v27 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v26) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = v26;
  v29 = (v19 + 55) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v20 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v26) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = v26;
  v31 = (v19 + 71) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v20 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v26) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = v26;
  v33 = (v19 + 87) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v20 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v31) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v31;
  return a1;
}

uint64_t *sub_1001E2934(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;

  if (a1 != a2)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release(*a1);
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 0;
      swift_retain(v13);
    }
  }
  v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16 + 1;
  v18 = ((unint64_t)a1 + v17) & ~v16;
  v19 = ((unint64_t)a2 + v17) & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = v18 + v20;
  v22 = v19 + v20;
  v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = v28;
  v31 = (v21 + 55) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v22 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = v28;
  v33 = (v21 + 71) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v22 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v28;
  v35 = (v21 + 87) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v22 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v33) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = v33;
  return a1;
}

_QWORD *sub_1001E2C24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 + v13 + 1;
  v15 = ((unint64_t)a1 + v14) & ~v13;
  v16 = ((unint64_t)a2 + v14) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = v15 + v17;
  v19 = v16 + v17;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = v22;
  v23 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v25) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = v25;
  v28 = (v18 + 55) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v19 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v25) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v25;
  v30 = (v18 + 71) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v19 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v25) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v25;
  v32 = (v18 + 87) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v19 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v30) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = v30;
  return a1;
}

_QWORD *sub_1001E2E38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;

  if (a1 != a2)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release(*a1);
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      v13 = 1;
    }
    else
    {
      v13 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16 + 1;
  v18 = ((unint64_t)a1 + v17) & ~v16;
  v19 = ((unint64_t)a2 + v17) & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v15 + 40))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = v18 + v20;
  v22 = v19 + v20;
  v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = v28;
  v31 = (v21 + 55) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v22 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = v28;
  v33 = (v21 + 71) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v22 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v28;
  v35 = (v21 + 87) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v22 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v33) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = v33;
  return a1;
}

uint64_t sub_1001E3124(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v18;

  v6 = type metadata accessor for LayoutDirection(0);
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v7 + v11 + 1;
  if (v10 < a2)
  {
    v13 = ((*(_QWORD *)(v8 + 64) + (v12 & ~v11) + 87) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v13 < 4)
      v14 = ((a2 - v10 + 255) >> (8 * v13)) + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    __asm { BR              X17 }
  }
  if (v9 > 0xFE)
    return (*(uint64_t (**)(uint64_t))(v8 + 48))((v12 + a1) & ~v11);
  v18 = *(unsigned __int8 *)(a1 + v7);
  if (v18 >= 2)
    return (v18 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_1001E3298(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8) + 64);
  if (v8 <= 8)
    v8 = 8;
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= 0xFEu)
    v10 = 254;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v9 + 64)
        + ((v8 + 1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v10 >= a3)
  {
    v14 = 0;
    if (v10 >= a2)
      goto LABEL_19;
  }
  else
  {
    if (v11 <= 3)
      v12 = ((a3 - v10 + 255) >> (8 * v11)) + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (v10 >= a2)
LABEL_19:
      __asm { BR              X14 }
  }
  if (v11 >= 4)
    v15 = ~v10 + a2;
  else
    v15 = (~(_BYTE)v10 + a2);
  bzero(a1, v11);
  if ((_DWORD)v11 == 1)
    *a1 = v15;
  else
    *(_DWORD *)a1 = v15;
  __asm { BR              X10 }
}

void sub_1001E33F0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1001E33F8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1001E3400);
}

void sub_1001E3440()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_1001E3448()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
}

uint64_t sub_1001E3450@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)(v6 + v8) = 0;
  if ((_DWORD)v7)
  {
    if (a1 > 0xFE)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))((v4 + v6) & v5, v7);
    }
    else
    {
      if (v7 > 0xFE)
        JUMPOUT(0x1001E345CLL);
      *(_BYTE *)(v6 + a2) = -(char)v7;
    }
  }
  return result;
}

void sub_1001E34AC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_1001E34B4()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1001E34C4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

uint64_t type metadata accessor for EdgeHuggingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EdgeHuggingView);
}

void sub_1001E34F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D82C0[0])
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1009D82C0);
  }
}

uint64_t sub_1001E3548(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100867290, 1);
}

uint64_t sub_1001E357C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t TupleTypeMetadata2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[16];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t WitnessTable;
  uint64_t v86;

  v55 = a1;
  v57 = a2;
  v3 = sub_100030B74(&qword_1009EB830);
  v58 = *(_QWORD *)(a1 + 16);
  v4 = sub_100030B74(&qword_1009D1250);
  v5 = type metadata accessor for ModifiedContent(255, v58, v4);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v3, v5, v3, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v8 = swift_getTupleTypeMetadata3(255, v3, v5, &type metadata for Spacer, 0, 0);
  v9 = type metadata accessor for TupleView(255, v8);
  v10 = type metadata accessor for _ConditionalContent(255, v7, v9);
  v11 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v5, v3, 0, 0);
  v12 = type metadata accessor for TupleView(255, v11);
  v13 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v5, &type metadata for Spacer, 0, 0);
  v14 = type metadata accessor for TupleView(255, v13);
  v15 = type metadata accessor for _ConditionalContent(255, v12, v14);
  v16 = type metadata accessor for _ConditionalContent(255, v10, v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v86 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v10);
  v83 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v84 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v81 = v17;
  v82 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v15);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16);
  v19 = type metadata accessor for HStack(255, v16, v18);
  v20 = type metadata accessor for ModifiedContent(255, v19, v4);
  v21 = type metadata accessor for _ConditionalContent(255, v20, v20);
  v22 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v58, &type metadata for Spacer, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v23);
  v25 = type metadata accessor for HStack(255, v23, v24);
  v26 = type metadata accessor for _ConditionalContent(255, v21, v25);
  v79 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v19);
  v80 = sub_1001E7534();
  v77 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v78 = v77;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  v76 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v25);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v26);
  v28 = type metadata accessor for ZStack(255, v26, v27);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _FlexFrameLayout);
  v30 = type metadata accessor for ModifiedContent(255, v29, &type metadata for _PaddingLayout);
  v53 = type metadata accessor for ModifiedContent(255, v30, &type metadata for _PaddingLayout);
  v31 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v31, &type metadata for Spacer, 0, 0);
  v33 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v34 = type metadata accessor for _ConditionalContent(255, v53, v33);
  v35 = swift_getTupleTypeMetadata2(255, &type metadata for Spacer, v31, 0, 0);
  v36 = type metadata accessor for TupleView(255, v35);
  v37 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v28, &type metadata for Spacer, 0, 0);
  v38 = type metadata accessor for TupleView(255, v37);
  v39 = type metadata accessor for _ConditionalContent(255, v36, v38);
  v40 = type metadata accessor for _ConditionalContent(255, v34, v39);
  v54 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v28);
  v73 = v54;
  v74 = &protocol witness table for _FlexFrameLayout;
  v71 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v72 = &protocol witness table for _PaddingLayout;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v70 = &protocol witness table for _PaddingLayout;
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v53);
  v68 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v33);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v34);
  v65 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v36);
  v66 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
  v63 = v41;
  v64 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v40);
  v43 = type metadata accessor for VStack(0, v40, v42);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = __chkstk_darwin(v43);
  v47 = (char *)&v53 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v49 = (char *)&v53 - v48;
  v50 = *(_QWORD *)(v55 + 24);
  v60 = v58;
  v61 = v50;
  v62 = v56;
  sub_1001E43B8((uint64_t)sub_1001E7580, (uint64_t)v59, v55, v28, v54);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v43);
  sub_100344038((uint64_t)v47, v43, (uint64_t)v49);
  v51 = *(void (**)(char *, uint64_t))(v44 + 8);
  v51(v47, v43);
  sub_100341C00((uint64_t)v49, v43, v57);
  return ((uint64_t (*)(char *, uint64_t))v51)(v49, v43);
}

uint64_t sub_1001E3BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t WitnessTable;
  uint64_t v60;

  v42 = a1;
  v43 = a3;
  v44 = a4;
  v5 = sub_100030B74(&qword_1009EB830);
  v41 = sub_100030B74(&qword_1009D1250);
  v6 = type metadata accessor for ModifiedContent(255, a2, v41);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v5, v6, v5, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v9 = swift_getTupleTypeMetadata3(255, v5, v6, &type metadata for Spacer, 0, 0);
  v10 = type metadata accessor for TupleView(255, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v8, v10);
  v12 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v6, v5, 0, 0);
  v13 = type metadata accessor for TupleView(255, v12);
  v14 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v6, &type metadata for Spacer, 0, 0);
  v15 = type metadata accessor for TupleView(255, v14);
  v16 = type metadata accessor for _ConditionalContent(255, v13, v15);
  v17 = type metadata accessor for _ConditionalContent(255, v11, v16);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v60 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  v57 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v58 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v55 = v18;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v17);
  v20 = type metadata accessor for HStack(255, v17, v19);
  v21 = type metadata accessor for ModifiedContent(255, v20, v41);
  v22 = type metadata accessor for _ConditionalContent(255, v21, v21);
  v23 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a2, &type metadata for Spacer, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v26 = type metadata accessor for HStack(255, v24, v25);
  v27 = type metadata accessor for _ConditionalContent(255, v22, v26);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v20);
  v54 = sub_1001E7534();
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v52 = v51;
  v49 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v22);
  v50 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v26);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v27);
  v29 = type metadata accessor for ZStack(0, v27, v28);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v41 - v34;
  v36 = v43;
  v46 = a2;
  v47 = v43;
  v48 = v42;
  v38 = type metadata accessor for EdgeHuggingView(0, a2, v43, v37);
  sub_1001E407C((uint64_t)sub_1001E7598, (uint64_t)v45, v38, a2, v36);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v29);
  sub_100344038((uint64_t)v33, v29, (uint64_t)v35);
  v39 = *(void (**)(char *, uint64_t))(v30 + 8);
  v39(v33, v29);
  sub_100341C00((uint64_t)v35, v29, v44);
  return ((uint64_t (*)(char *, uint64_t))v39)(v35, v29);
}

uint64_t sub_1001E3FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EdgeHuggingView(0, v9, v10, v11);
  sub_100344038(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_100341C00((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_1001E407C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t WitnessTable;
  uint64_t v55;

  v6 = *(_QWORD *)(a3 + 24);
  v38 = *(_QWORD *)(a3 + 16);
  v39 = a4;
  v40 = v6;
  v41 = a5;
  v42 = a1;
  v43 = a2;
  v7 = static Alignment.center.getter(a1);
  v35 = v8;
  v36 = v7;
  v9 = sub_100030B74(&qword_1009EB830);
  v34 = sub_100030B74(&qword_1009D1250);
  v10 = type metadata accessor for ModifiedContent(255, a4, v34);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v9, v10, v9, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v13 = swift_getTupleTypeMetadata3(255, v9, v10, &type metadata for Spacer, 0, 0);
  v14 = type metadata accessor for TupleView(255, v13);
  v15 = type metadata accessor for _ConditionalContent(255, v12, v14);
  v16 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v10, v9, 0, 0);
  v17 = type metadata accessor for TupleView(255, v16);
  v18 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v10, &type metadata for Spacer, 0, 0);
  v19 = type metadata accessor for TupleView(255, v18);
  v20 = type metadata accessor for _ConditionalContent(255, v17, v19);
  v21 = type metadata accessor for _ConditionalContent(255, v15, v20);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v15);
  v52 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v50 = v22;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  v24 = type metadata accessor for HStack(255, v21, v23);
  v25 = type metadata accessor for ModifiedContent(255, v24, v34);
  v26 = type metadata accessor for _ConditionalContent(255, v25, v25);
  v27 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a4, &type metadata for Spacer, 0, 0);
  v28 = type metadata accessor for TupleView(255, v27);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v28);
  v30 = type metadata accessor for HStack(255, v28, v29);
  v31 = type metadata accessor for _ConditionalContent(0, v26, v30);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v24);
  v49 = sub_1001E7534();
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v47 = v46;
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v26);
  v45 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v30);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v31);
  return ZStack.init(alignment:content:)(v36, v35, sub_1001E75A4, v37, v31, v32);
}

uint64_t sub_1001E43B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t WitnessTable;
  void *v41;
  uint64_t v42;
  void *v43;

  v7 = *(_QWORD *)(a3 + 24);
  v26 = *(_QWORD *)(a3 + 16);
  v27 = a4;
  v28 = v7;
  v29 = a5;
  v30 = a1;
  v31 = a2;
  v24 = static HorizontalAlignment.center.getter();
  v8 = type metadata accessor for ModifiedContent(255, a4, &type metadata for _FlexFrameLayout);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v11 = type metadata accessor for ModifiedContent(255, a4, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v11, &type metadata for Spacer, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v14 = type metadata accessor for _ConditionalContent(255, v10, v13);
  v15 = swift_getTupleTypeMetadata2(255, &type metadata for Spacer, v11, 0, 0);
  v16 = type metadata accessor for TupleView(255, v15);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a4, &type metadata for Spacer, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v19 = type metadata accessor for _ConditionalContent(255, v16, v18);
  v20 = type metadata accessor for _ConditionalContent(0, v14, v19);
  v42 = a5;
  v43 = &protocol witness table for _FlexFrameLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v41 = &protocol witness table for _PaddingLayout;
  v38 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v39 = &protocol witness table for _PaddingLayout;
  v36 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v37 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v32 = v21;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
  return VStack.init(alignment:spacing:content:)(v24, 0, 0, sub_1001E758C, v25, v20, v22);
}

uint64_t sub_1001E4630@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t)@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  void *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  void (*v94)(char *, void (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t WitnessTable;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(void);
  void (*v180)(char *, uint64_t);
  void (*v181)(uint64_t, uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  void *v214;
  uint64_t v215;
  void *v216;
  uint64_t (*v217)(void);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  uint64_t v237;
  void *v238;
  void *v239;
  void *v240;
  uint64_t (*v241)(void);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  uint64_t v247;
  void *v248;
  void *v249;
  void *v250;
  void *v251;
  void *v252;
  void *v253;
  void *v254;
  void *v255;
  void *v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  char v260;
  char *v261;
  char *v262;
  uint64_t *v263;

  v193 = a7;
  v175 = a4;
  v176 = a6;
  v178 = a3;
  v179 = a2;
  v177 = a1;
  v189 = a8;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a5, &type metadata for Spacer, 0, 0);
  v10 = type metadata accessor for TupleView(0, TupleTypeMetadata3);
  v167 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v166 = (char *)&v157 - v11;
  v12 = type metadata accessor for ModifiedContent(255, a5, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Spacer, v12, 0, 0);
  v14 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v165 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v164 = (char *)&v157 - v15;
  v190 = v16;
  v194 = v10;
  v17 = type metadata accessor for _ConditionalContent(0, v16, v10);
  v171 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v172 = (uint64_t)&v157 - v18;
  v19 = swift_getTupleTypeMetadata2(255, v12, &type metadata for Spacer, 0, 0);
  v20 = type metadata accessor for TupleView(0, v19);
  v163 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v162 = (char *)&v157 - v22;
  v173 = v12;
  v168 = *(_QWORD *)(v12 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v157 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v181 = (void (*)(uint64_t, uint64_t))((char *)&v157 - v26);
  v27 = type metadata accessor for ModifiedContent(255, a5, &type metadata for _FlexFrameLayout);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _PaddingLayout);
  v187 = v20;
  v30 = type metadata accessor for _ConditionalContent(0, v29, v20);
  v170 = *(_QWORD *)(v30 - 8);
  v31 = __chkstk_darwin(v30);
  v169 = (char *)&v157 - v32;
  v180 = a5;
  v174 = *((_QWORD *)a5 - 1);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v157 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v157 - v37;
  v191 = v27;
  v159 = *(_QWORD *)(v27 - 8);
  v39 = __chkstk_darwin(v36);
  v41 = (char *)&v157 - v40;
  v192 = v28;
  v160 = *(_QWORD *)(v28 - 8);
  v42 = __chkstk_darwin(v39);
  v44 = (char *)&v157 - v43;
  v185 = v29;
  v161 = *(_QWORD *)(v29 - 8);
  v45 = __chkstk_darwin(v42);
  v47 = (char *)&v157 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v49 = (char *)&v157 - v48;
  v186 = v50;
  v188 = v17;
  v51 = type metadata accessor for _ConditionalContent(0, v50, v17);
  v183 = *(_QWORD *)(v51 - 8);
  v184 = v51;
  __chkstk_darwin(v51);
  v182 = (char *)&v157 - v52;
  v54 = type metadata accessor for EdgeHuggingView(0, v175, v176, v53);
  v55 = (uint64_t *)(v177 + *(int *)(v54 + 40));
  v56 = (uint64_t *)(v177 + *(int *)(v54 + 44));
  v57 = *v56;
  v58 = *((_BYTE *)v56 + 8);
  if ((v55[1] & 1) == 0)
  {
    v84 = (uint64_t)v49;
    v177 = *v55;
    v85 = v179();
    if ((v58 & 1) == 0)
    {
      v127 = static Alignment.center.getter(v85);
      v128 = (uint64_t)v193;
      v129 = v180;
      View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0x7FF0000000000000, 0, v127, v130, v180, v193);
      v131 = (*(uint64_t (**)(char *, _QWORD))(v174 + 8))(v38, v129);
      v132 = static Edge.Set.top.getter(v131);
      v203 = v128;
      v204 = &protocol witness table for _FlexFrameLayout;
      v133 = v191;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v191);
      View.padding(_:_:)(v132, v177, 0, v133, WitnessTable);
      v135 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v41, v133);
      v136 = static Edge.Set.bottom.getter(v135);
      v201 = WitnessTable;
      v202 = &protocol witness table for _PaddingLayout;
      v137 = v192;
      v138 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v192);
      View.padding(_:_:)(v136, v57, 0, v137, v138);
      (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v137);
      v199 = v138;
      v200 = &protocol witness table for _PaddingLayout;
      v71 = v185;
      v139 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v185);
      v157 = v84;
      sub_100344038((uint64_t)v47, v71, v84);
      v140 = *(void (**)(char *, uint64_t))(v161 + 8);
      v140(v47, v71);
      v181 = (void (*)(uint64_t, uint64_t))v140;
      sub_100341C00(v84, v71, (uint64_t)v47);
      v73 = v187;
      v141 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v187);
      v142 = (uint64_t)v169;
      sub_100265E68((uint64_t)v47, v71, v73, v139, v141);
      v140(v47, v71);
      v197 = v139;
      v198 = v141;
      v143 = v186;
      v144 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v186);
      v83 = v190;
      v145 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v190);
      v146 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v194);
      v195 = v145;
      v196 = v146;
      v75 = v143;
      v80 = v188;
      v147 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v188);
      v148 = v182;
      sub_100265E68(v142, v75, v80, v144, v147);
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v142, v75);
      v181(v157, v71);
      v82 = (uint64_t)v148;
      goto LABEL_9;
    }
    v86 = static Edge.Set.top.getter(v85);
    v87 = v180;
    v88 = (uint64_t)v193;
    View.padding(_:_:)(v86, v177, 0, v180, v193);
    (*(void (**)(char *, _QWORD))(v174 + 8))(v38, v87);
    v215 = v88;
    v216 = &protocol witness table for _PaddingLayout;
    v89 = v173;
    v90 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v173);
    v91 = v181;
    sub_100344038((uint64_t)v25, v89, (uint64_t)v181);
    v92 = v168;
    v93 = *(void (**)(char *, uint64_t))(v168 + 8);
    v93(v25, v89);
    v180 = v93;
    v94 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v92 + 16);
    v95 = v89;
    v94(v25, v91, v89);
    v259 = v57;
    v260 = 1;
    v261 = v25;
    v262 = (char *)&v259;
    v254 = (void *)v89;
    v255 = &type metadata for Spacer;
    v251 = (void *)v90;
    v252 = &protocol witness table for Spacer;
    v96 = (uint64_t)v162;
    sub_100341C18((uint64_t *)&v261, 2uLL, (uint64_t)&v254);
    v93(v25, v95);
    v213 = v88;
    v214 = &protocol witness table for _FlexFrameLayout;
    v211 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v191);
    v212 = &protocol witness table for _PaddingLayout;
    v209 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v192);
    v210 = &protocol witness table for _PaddingLayout;
    v97 = v185;
    v98 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v185);
    v73 = v187;
    v99 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v187);
    v100 = (uint64_t)v169;
    sub_100265F2C(v96, v97, v73, v98, v99);
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v96, v73);
    v207 = v98;
    v208 = v99;
    v75 = v186;
    v101 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v186);
    v83 = v190;
    v102 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v190);
    v71 = v97;
    v103 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v194);
    v205 = v102;
    v206 = v103;
    v80 = v188;
    v104 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v188);
    v82 = (uint64_t)v182;
    sub_100265E68(v100, v75, v80, v101, v104);
    (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v100, v75);
    v105 = v181;
    v106 = v173;
    goto LABEL_7;
  }
  if ((v56[1] & 1) == 0)
  {
    v107 = v179();
    v108 = static Edge.Set.bottom.getter(v107);
    v109 = v180;
    v110 = (uint64_t)v193;
    View.padding(_:_:)(v108, v57, 0, v180, v193);
    (*(void (**)(char *, _QWORD))(v174 + 8))(v38, v109);
    v227 = v110;
    v228 = &protocol witness table for _PaddingLayout;
    v111 = v173;
    v112 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v173);
    v113 = v181;
    sub_100344038((uint64_t)v25, v111, (uint64_t)v181);
    v114 = v168;
    v115 = *(void (**)(char *, uint64_t))(v168 + 8);
    v115(v25, v111);
    v180 = v115;
    v259 = 0;
    v260 = 1;
    v261 = (char *)&v259;
    (*(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v114 + 16))(v25, v113, v111);
    v262 = v25;
    v254 = &type metadata for Spacer;
    v255 = (void *)v111;
    v251 = &protocol witness table for Spacer;
    v252 = (void *)v112;
    v116 = (uint64_t)v164;
    sub_100341C18((uint64_t *)&v261, 2uLL, (uint64_t)&v254);
    v115(v25, v111);
    v83 = v190;
    v117 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v190);
    v179 = (uint64_t (*)(void))v117;
    v118 = v194;
    v119 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v194);
    sub_100265E68(v116, v83, v118, v117, v119);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v116, v83);
    v225 = v110;
    v226 = &protocol witness table for _FlexFrameLayout;
    v223 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v191);
    v224 = &protocol witness table for _PaddingLayout;
    v221 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v192);
    v222 = &protocol witness table for _PaddingLayout;
    v71 = v185;
    v120 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v185);
    v73 = v187;
    v121 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v187);
    v219 = v120;
    v220 = v121;
    v122 = v186;
    v123 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v186);
    v217 = v179;
    v218 = v119;
    v75 = v122;
    v80 = v188;
    v124 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v188);
    v125 = v172;
    v126 = v123;
    v82 = (uint64_t)v182;
    sub_100265F2C(v172, v75, v80, v126, v124);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v125, v80);
    v105 = v181;
    v106 = v111;
LABEL_7:
    v180((char *)v105, v106);
    goto LABEL_9;
  }
  v179();
  v59 = v38;
  v60 = (uint64_t)v38;
  v158 = v38;
  v61 = v180;
  v62 = v193;
  sub_100344038((uint64_t)v35, (uint64_t)v180, v60);
  v63 = v174;
  v64 = *(uint64_t **)(v174 + 8);
  ((void (*)(char *, _QWORD))v64)(v35, v61);
  v181 = (void (*)(uint64_t, uint64_t))v64;
  v259 = v57;
  v260 = 1;
  v261 = (char *)&v259;
  (*(void (**)(char *, char *, void (*)(char *, uint64_t)))(v63 + 16))(v35, v59, v61);
  v257 = v57;
  v258 = 1;
  v262 = v35;
  v263 = &v257;
  v254 = &type metadata for Spacer;
  v255 = v61;
  v256 = &type metadata for Spacer;
  v251 = &protocol witness table for Spacer;
  v252 = v62;
  v253 = &protocol witness table for Spacer;
  v65 = (uint64_t)v166;
  sub_100341C18((uint64_t *)&v261, 3uLL, (uint64_t)&v254);
  ((void (*)(char *, _QWORD))v64)(v35, v61);
  v66 = v190;
  v67 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v190);
  v179 = (uint64_t (*)(void))v67;
  v68 = v194;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v194);
  v70 = v172;
  sub_100265F2C(v65, v66, v68, v67, v69);
  (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v65, v68);
  v249 = v62;
  v250 = &protocol witness table for _FlexFrameLayout;
  v247 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v191);
  v248 = &protocol witness table for _PaddingLayout;
  v245 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v192);
  v246 = &protocol witness table for _PaddingLayout;
  v71 = v185;
  v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v185);
  v73 = v187;
  v74 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v187);
  v243 = v72;
  v244 = v74;
  v75 = v186;
  v76 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v186);
  v241 = v179;
  v242 = v69;
  v77 = v188;
  v78 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v188);
  v79 = v182;
  sub_100265F2C(v70, v75, v77, v76, v78);
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v70, v77);
  v80 = v77;
  v81 = v61;
  v82 = (uint64_t)v79;
  v181((uint64_t)v158, (uint64_t)v81);
  v83 = v190;
LABEL_9:
  v239 = v193;
  v240 = &protocol witness table for _FlexFrameLayout;
  v237 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v191);
  v238 = &protocol witness table for _PaddingLayout;
  v235 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v192);
  v236 = &protocol witness table for _PaddingLayout;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v71);
  v150 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v73);
  v233 = v149;
  v234 = v150;
  v151 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v75);
  v152 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v83);
  v153 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v194);
  v231 = v152;
  v232 = v153;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v80);
  v229 = v151;
  v230 = v154;
  v155 = v184;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v184);
  sub_100341C00(v82, v155, v189);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v183 + 8))(v82, v155);
}

uint64_t sub_1001E5538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  char v54;
  void (*v55)(char *, int *);
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t WitnessTable;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v120 = a7;
  v131 = a6;
  v130 = a4;
  v121 = a3;
  v119 = a2;
  v128 = a1;
  v124 = a8;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a5, &type metadata for Spacer, 0, 0);
  v111 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v111);
  v132 = type metadata accessor for HStack(0, v111, WitnessTable);
  v112 = *(_QWORD *)(v132 - 8);
  v10 = __chkstk_darwin(v132);
  v113 = (char *)&WitnessTable - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v114 = (uint64_t)&WitnessTable - v12;
  v13 = sub_100030B74(&qword_1009EB830);
  v14 = sub_100030B74(&qword_1009D1250);
  v122 = a5;
  v15 = type metadata accessor for ModifiedContent(255, a5, v14);
  v16 = swift_getTupleTypeMetadata3(255, v13, v15, v13, 0, 0);
  v17 = type metadata accessor for TupleView(255, v16);
  v18 = swift_getTupleTypeMetadata3(255, v13, v15, &type metadata for Spacer, 0, 0);
  v19 = type metadata accessor for TupleView(255, v18);
  v20 = type metadata accessor for _ConditionalContent(255, v17, v19);
  v21 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v15, v13, 0, 0);
  v22 = type metadata accessor for TupleView(255, v21);
  v23 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v15, &type metadata for Spacer, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  v25 = type metadata accessor for _ConditionalContent(255, v22, v24);
  v26 = type metadata accessor for _ConditionalContent(255, v20, v25);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v155 = v27;
  v156 = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
  v30 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v153 = v30;
  v154 = v31;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v25);
  v151 = v29;
  v152 = v32;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v26);
  v127 = type metadata accessor for HStack(255, v26, v33);
  v34 = type metadata accessor for ModifiedContent(255, v127, v14);
  v35 = type metadata accessor for _ConditionalContent(0, v34, v34);
  v118 = *(_QWORD *)(v35 - 8);
  v36 = __chkstk_darwin(v35);
  v117 = (char *)&WitnessTable - v37;
  v115 = *(_QWORD *)(v34 - 8);
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&WitnessTable - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v116 = (uint64_t)&WitnessTable - v41;
  v43 = (int *)type metadata accessor for EdgeHuggingView(0, v130, v131, v42);
  v44 = *((_QWORD *)v43 - 1);
  v45 = __chkstk_darwin(v43);
  v47 = (char *)&WitnessTable - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v49 = (char *)&WitnessTable - v48;
  v123 = v35;
  v50 = type metadata accessor for _ConditionalContent(0, v35, v132);
  v126 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v125 = (char *)&WitnessTable - v51;
  LOBYTE(v25) = *(_BYTE *)(v128 + v43[12] + 8);
  v52 = *(void (**)(char *))(v44 + 16);
  v53 = v128;
  v52(v49);
  v129 = v50;
  if ((v25 & 1) == 0)
  {
    (*(void (**)(char *, int *))(v44 + 8))(v49, v43);
    goto LABEL_7;
  }
  v54 = v49[v43[13] + 8];
  v55 = *(void (**)(char *, int *))(v44 + 8);
  v55(v49, v43);
  if ((v54 & 1) == 0)
  {
LABEL_7:
    sub_1001E5FCC(v119, v121, (uint64_t)v43, v122, v120, (uint64_t)v40);
    v82 = v127;
    v83 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v127);
    v84 = sub_1001E7534();
    v135 = v83;
    v136 = v84;
    v85 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
    v86 = v116;
    sub_100344038((uint64_t)v40, v34, v116);
    v87 = *(void (**)(char *, uint64_t))(v115 + 8);
    v87(v40, v34);
    sub_100341C00(v86, v34, (uint64_t)v40);
    v88 = (uint64_t)v117;
    sub_100265E68((uint64_t)v40, v34, v34, v85, v85);
    v87(v40, v34);
    v133 = v85;
    v134 = v85;
    v62 = v123;
    v89 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v123);
    v61 = v132;
    v90 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v132);
    v81 = (uint64_t)v125;
    sub_100265E68(v88, v62, v61, v89, v90);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v88, v62);
    v91 = v86;
    v77 = v82;
    v87((char *)v91, v34);
    v60 = v124;
    goto LABEL_8;
  }
  v56 = v53 + v43[15];
  v57 = *(_BYTE *)(v56 + 8);
  ((void (*)(char *, uint64_t, int *))v52)(v47, v53, v43);
  if ((v57 & 1) == 0)
  {
    v55(v47, v43);
    v60 = v124;
    v61 = v132;
    v62 = v123;
    v63 = v122;
    v64 = v121;
    v65 = v120;
    v66 = v119;
    goto LABEL_10;
  }
  v58 = v47[v43[14] + 8];
  v59 = ((uint64_t (*)(char *, int *))v55)(v47, v43);
  v60 = v124;
  v61 = v132;
  v62 = v123;
  v63 = v122;
  v64 = v121;
  v65 = v120;
  v66 = v119;
  if ((v58 & 1) == 0)
  {
LABEL_10:
    sub_1001E6114(*(_QWORD *)(v53 + v43[14]), *(unsigned __int8 *)(v53 + v43[14] + 8), *(_QWORD *)v56, *(unsigned __int8 *)(v56 + 8), v66, v64, (uint64_t)v43, v63, (uint64_t)v40, v65);
    v99 = v127;
    v100 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v127);
    v101 = sub_1001E7534();
    v139 = v100;
    v140 = v101;
    v102 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
    v103 = v116;
    sub_100344038((uint64_t)v40, v34, v116);
    v104 = *(void (**)(char *, uint64_t))(v115 + 8);
    v104(v40, v34);
    sub_100341C00(v103, v34, (uint64_t)v40);
    v105 = (uint64_t)v117;
    sub_100265F2C((uint64_t)v40, v34, v34, v102, v102);
    v104(v40, v34);
    v137 = v102;
    v138 = v102;
    v106 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v62);
    v107 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v61);
    v81 = (uint64_t)v125;
    sub_100265E68(v105, v62, v61, v106, v107);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v105, v62);
    v77 = v99;
    v104((char *)v103, v34);
    goto LABEL_8;
  }
  v67 = __chkstk_darwin(v59);
  *(&WitnessTable - 6) = v130;
  *(&WitnessTable - 5) = v68;
  *(&WitnessTable - 4) = v131;
  *(&WitnessTable - 3) = v69;
  v108 = v70;
  v109 = v71;
  v72 = static VerticalAlignment.center.getter(v67);
  v73 = (uint64_t)v113;
  HStack.init(alignment:spacing:content:)(v72, 0, 0, sub_1001E75C8, &WitnessTable - 8, v111, WitnessTable);
  v74 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v61);
  v75 = v114;
  sub_100344038(v73, v61, v114);
  v76 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  v76(v73, v61);
  sub_100341C00(v75, v61, v73);
  v77 = v127;
  v78 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v127);
  v79 = sub_1001E7534();
  v149 = v78;
  v150 = v79;
  v147 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v148 = v147;
  v80 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v62);
  v81 = (uint64_t)v125;
  sub_100265F2C(v73, v62, v61, v80, v74);
  v76(v73, v61);
  v76(v114, v61);
LABEL_8:
  v92 = v126;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v77);
  v94 = sub_1001E7534();
  v145 = v93;
  v146 = v94;
  v143 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v144 = v143;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v62);
  v96 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v61);
  v141 = v95;
  v142 = v96;
  v97 = v129;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v129);
  sub_100341C00(v81, v97, v60);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v81, v97);
}

uint64_t sub_1001E5FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v24 = a4;
  v11 = type metadata accessor for LayoutDirection(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v23 - v16;
  sub_100667A20((uint64_t)&v23 - v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for LayoutDirection.leftToRight(_:), v11);
  v18 = static LayoutDirection.== infix(_:_:)(v17, v15);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  v19(v17, v11);
  v20 = 48;
  if ((v18 & 1) != 0)
    v21 = 52;
  else
    v21 = 48;
  if ((v18 & 1) == 0)
    v20 = 52;
  return sub_1001E6114(*(_QWORD *)(v6 + *(int *)(a3 + v20)), *(unsigned __int8 *)(v6 + *(int *)(a3 + v20) + 8), *(_QWORD *)(v6 + *(int *)(a3 + v21)), *(unsigned __int8 *)(v6 + *(int *)(a3 + v21) + 8), a1, v23, a3, v24, a6, a5);
}

uint64_t sub_1001E6114@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t WitnessTable;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[16];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v46 = a8;
  v48 = a7;
  v54 = a6;
  v53 = a5;
  v52 = a4;
  v51 = a3;
  v50 = a2;
  v49 = a1;
  v57 = a9;
  v47 = a10;
  v56 = type metadata accessor for LayoutDirection(0);
  v11 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100030B74(&qword_1009EB830);
  v15 = sub_100030B74(&qword_1009D1250);
  v16 = type metadata accessor for ModifiedContent(255, a8, v15);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v14, v16, v14, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v19 = swift_getTupleTypeMetadata3(255, v14, v16, &type metadata for Spacer, 0, 0);
  v20 = type metadata accessor for TupleView(255, v19);
  v21 = type metadata accessor for _ConditionalContent(255, v18, v20);
  v22 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v16, v14, 0, 0);
  v23 = type metadata accessor for TupleView(255, v22);
  v24 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v16, &type metadata for Spacer, 0, 0);
  v25 = type metadata accessor for TupleView(255, v24);
  v26 = type metadata accessor for _ConditionalContent(255, v23, v25);
  v27 = type metadata accessor for _ConditionalContent(255, v21, v26);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v74 = WitnessTable;
  v75 = v29;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v23);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v25);
  v72 = v31;
  v73 = v32;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v26);
  v70 = v30;
  v71 = v33;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v27);
  v35 = type metadata accessor for HStack(0, v27, v34);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v46 - v38;
  v40 = *(_QWORD *)(v48 + 24);
  v59 = *(_QWORD *)(v48 + 16);
  v60 = v46;
  v61 = v40;
  v62 = v47;
  v63 = v49;
  v64 = v50 & 1;
  v65 = v51;
  v66 = v52 & 1;
  v67 = v53;
  v68 = v54;
  v69 = v55;
  v41 = static VerticalAlignment.center.getter(v37);
  HStack.init(alignment:spacing:content:)(v41, 0, 0, sub_1001E75D8, v58, v27, v34);
  KeyPath = swift_getKeyPath(&unk_10070F428);
  v43 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LayoutDirection.leftToRight(_:), v56);
  v44 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v35);
  View.environment<A>(_:_:)(KeyPath, v13, v35, v44);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v39, v35);
}

uint64_t sub_1001E64F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(void);
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[4];
  _QWORD v18[3];
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23[3];

  v8 = *(_QWORD *)(a4 - 8);
  v9 = __chkstk_darwin(a1);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void (*)(void))__chkstk_darwin(v9);
  v14 = (char *)v17 - v13;
  v12();
  sub_100344038((uint64_t)v11, a4, (uint64_t)v14);
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  v21 = 0;
  v22 = 1;
  v23[0] = (uint64_t)&v21;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, a4);
  v19 = 0;
  v20 = 1;
  v23[1] = (uint64_t)v11;
  v23[2] = (uint64_t)&v19;
  v18[0] = &type metadata for Spacer;
  v18[1] = a4;
  v18[2] = &type metadata for Spacer;
  v17[1] = &protocol witness table for Spacer;
  v17[2] = a6;
  v17[3] = &protocol witness table for Spacer;
  sub_100341C18(v23, 3uLL, (uint64_t)v18);
  v15(v14, a4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, a4);
}

uint64_t sub_1001E663C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, void (*a11)(_QWORD, _QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata3;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (**v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(_QWORD, _QWORD);
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  void ***v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD);
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void ****v94;
  char v95;
  void (**v96)(uint64_t, uint64_t);
  unsigned __int8 v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  void (*v116)(_QWORD, _QWORD);
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t WitnessTable;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  void (**v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  void (**v163)(char *, uint64_t);
  uint64_t v164;
  char *v165;
  uint64_t v166;
  void (**v167)(uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t);
  uint64_t v171;
  char *v172;
  void (*v173)(_QWORD, _QWORD);
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (**v197)(uint64_t, uint64_t);
  void ****v198;
  uint64_t v199;
  void (**v200)(uint64_t, uint64_t);
  unsigned __int8 v201;
  void ***v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(_QWORD, _QWORD);
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(_QWORD, _QWORD);
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void ***v218;
  char *v219;
  void **v220;
  void **v221;
  uint64_t v222;
  void ****v223;
  char v224;
  void (**v225)(uint64_t, uint64_t);
  unsigned __int8 v226;
  char *v227;
  uint64_t v228;
  void (*v229)(_QWORD, _QWORD);
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(_QWORD, _QWORD);
  unint64_t v242;
  void *v243;
  uint64_t v244;
  void (**v245)(uint64_t, uint64_t);
  unsigned __int8 v246;
  char *v247;
  uint64_t v248;
  uint64_t *v249;
  char *v250;
  void ***v251;
  char v252;
  uint64_t v253;
  uint64_t v254;

  v172 = (char *)a7;
  v169 = a6;
  v170 = a5;
  LODWORD(v171) = a4;
  v183 = a8;
  v184 = a3;
  v162 = a1;
  v173 = a11;
  v12 = sub_100030B74(&qword_1009D1250);
  v13 = type metadata accessor for ModifiedContent(255, a9, v12);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v13, &type metadata for Spacer, 0, 0);
  v15 = type metadata accessor for TupleView(0, TupleTypeMetadata3);
  v161 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v159 = (char *)&v154 - v16;
  v17 = sub_100030B74(&qword_1009EB830);
  v18 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v13, v17, 0, 0);
  v19 = type metadata accessor for TupleView(0, v18);
  v160 = *(void (***)(uint64_t, uint64_t))(v19 - 8);
  __chkstk_darwin(v19);
  v158 = (char *)&v154 - v20;
  v181 = v21;
  v182 = v15;
  v22 = type metadata accessor for _ConditionalContent(0, v21, v15);
  v164 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v163 = (void (**)(char *, uint64_t))((char *)&v154 - v23);
  v24 = swift_getTupleTypeMetadata3(255, v17, v13, &type metadata for Spacer, 0, 0);
  v25 = type metadata accessor for TupleView(0, v24);
  v156 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v154 = (char *)&v154 - v26;
  v167 = (void (**)(uint64_t, uint64_t))v17;
  v27 = swift_getTupleTypeMetadata3(255, v17, v13, v17, 0, 0);
  v28 = type metadata accessor for TupleView(0, v27);
  v157 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v155 = (char *)&v154 - v29;
  v179 = v30;
  v185 = v25;
  v31 = type metadata accessor for _ConditionalContent(0, v30, v25);
  v166 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v165 = (char *)&v154 - v32;
  v33 = type metadata accessor for LayoutDirection(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v154 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = a9;
  v38 = *(void (***)(char *, uint64_t))(a9 - 8);
  v39 = __chkstk_darwin(v35);
  v41 = (char *)&v154 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = v13;
  v174 = *(_QWORD *)(v13 - 8);
  v42 = __chkstk_darwin(v39);
  v44 = (char *)&v154 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v186 = (uint64_t)&v154 - v45;
  v178 = v31;
  v46 = type metadata accessor for _ConditionalContent(0, v31, v22);
  v176 = *(_QWORD *)(v46 - 8);
  v177 = v46;
  v47 = __chkstk_darwin(v46);
  v175 = (char *)&v154 - v48;
  v180 = v22;
  if ((a2 & 1) != 0)
  {
    v170(v47);
    KeyPath = swift_getKeyPath(&unk_10070F428);
    sub_100667A20((uint64_t)v37);
    v172 = v44;
    v84 = v168;
    v85 = v173;
    View.environment<A>(_:_:)(KeyPath, v37, v168, v173);
    swift_release(KeyPath);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
    v38[1](v41, v84);
    v86 = sub_1001E7534();
    if ((v171 & 1) != 0)
    {
      v241 = v85;
      v242 = v86;
      v130 = v187;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v187);
      v132 = v186;
      v133 = (uint64_t)v172;
      sub_100344038((uint64_t)v172, v130, v186);
      v134 = v174;
      v135 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
      v135(v133, v130);
      v173 = v135;
      v136 = v184;
      v243 = (void *)v184;
      LOBYTE(v244) = 1;
      v221 = &v243;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v133, v132, v130);
      v218 = (void ***)v136;
      LOBYTE(v219) = 1;
      v222 = v133;
      v223 = &v218;
      v198 = (void ****)&type metadata for Spacer;
      v199 = v130;
      v200 = (void (**)(uint64_t, uint64_t))&type metadata for Spacer;
      v249 = (uint64_t *)&protocol witness table for Spacer;
      v250 = (char *)WitnessTable;
      v251 = (void ***)&protocol witness table for Spacer;
      v137 = (uint64_t)v159;
      sub_100341C18((uint64_t *)&v221, 3uLL, (uint64_t)&v198);
      v135(v133, v130);
      v79 = v181;
      v138 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v181);
      v81 = v182;
      v139 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
      v140 = (uint64_t)v163;
      sub_100265F2C(v137, v79, v81, v138, v139);
      (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v137, v81);
      v72 = v179;
      v141 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v179);
      v142 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v185);
      v239 = v141;
      v240 = v142;
      v77 = v178;
      v143 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v178);
      v237 = v138;
      v238 = v139;
      v110 = v180;
      v144 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v180);
      v145 = v143;
      v113 = (uint64_t)v175;
      sub_100265F2C(v140, v77, v110, v145, v144);
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v140, v110);
      v173(v186, v130);
      v74 = v185;
      goto LABEL_10;
    }
    v229 = v85;
    v230 = v86;
    v87 = v187;
    v171 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v187);
    v88 = v186;
    v89 = (uint64_t)v172;
    sub_100344038((uint64_t)v172, v87, v186);
    v90 = v174;
    v173 = *(void (**)(_QWORD, _QWORD))(v174 + 8);
    v91 = ((uint64_t (*)(uint64_t, uint64_t))v173)(v89, v87);
    v92 = static Alignment.center.getter(v91);
    _FrameLayout.init(width:height:alignment:)(&v198, v184, 0, 0, 1, v92, v93);
    v94 = v198;
    v95 = v199;
    v96 = v200;
    v97 = v201;
    v99 = (char *)v202;
    v98 = v203;
    v195 = 0;
    LOBYTE(v196) = 1;
    v249 = &v195;
    v100 = v88;
    v101 = v187;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v89, v100, v187);
    v221 = 0;
    LOBYTE(v222) = 1;
    v223 = v94;
    v224 = v95;
    v225 = v96;
    v226 = v97;
    v227 = v99;
    v228 = v98;
    v250 = (char *)v89;
    v251 = &v221;
    v243 = &type metadata for Spacer;
    v244 = v101;
    v245 = v167;
    v218 = (void ***)&protocol witness table for Spacer;
    v219 = (char *)v171;
    v220 = (void **)sub_1001E7624();
    v102 = (uint64_t)v158;
    sub_100341C18((uint64_t *)&v249, 3uLL, (uint64_t)&v243);
    v173(v89, v101);
    v79 = v181;
    v103 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v181);
    v81 = v182;
    v104 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
    v105 = (uint64_t)v163;
    sub_100265E68(v102, v79, v81, v103, v104);
    v160[1](v102, v79);
    v72 = v179;
    v106 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v179);
    v74 = v185;
    v107 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v185);
    v216 = v106;
    v217 = v107;
    v108 = v178;
    v109 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v178);
    v214 = v103;
    v215 = v104;
    v77 = v108;
    v110 = v180;
    v111 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v180);
    v112 = v109;
    v113 = (uint64_t)v175;
    sub_100265F2C(v105, v77, v110, v112, v111);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v105, v110);
  }
  else
  {
    v161 = v34;
    v163 = v38;
    v164 = v33;
    v49 = v170;
    v50 = v168;
    v52 = static Alignment.center.getter(v47);
    if ((v171 & 1) != 0)
    {
      v114 = _FrameLayout.init(width:height:alignment:)(&v198, v162, 0, v184, 1, v52, v51);
      v171 = (uint64_t)v198;
      LODWORD(v162) = v199;
      v160 = v200;
      LODWORD(v159) = v201;
      v157 = v203;
      v158 = (char *)v202;
      v49((uint64_t)v114);
      v115 = swift_getKeyPath(&unk_10070F428);
      sub_100667A20((uint64_t)v37);
      v116 = v173;
      View.environment<A>(_:_:)(v115, v37, v50, v173);
      swift_release(v115);
      (*(void (**)(char *, uint64_t))(v161 + 8))(v37, v164);
      v163[1](v41, v50);
      v117 = sub_1001E7534();
      v212 = v116;
      v213 = v117;
      v118 = v187;
      v119 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v187);
      v120 = v186;
      sub_100344038((uint64_t)v44, v118, v186);
      v121 = v174;
      v122 = *(void (**)(char *, uint64_t))(v174 + 8);
      v122(v44, v118);
      v173 = (void (*)(_QWORD, _QWORD))v122;
      v123 = v184;
      v221 = (void **)v184;
      LOBYTE(v222) = 1;
      v223 = (void ****)v171;
      v224 = v162;
      v225 = v160;
      v226 = v159;
      v227 = v158;
      v228 = v157;
      v249 = (uint64_t *)&v221;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v44, v120, v118);
      v195 = v123;
      LOBYTE(v196) = 1;
      v250 = v44;
      v251 = (void ***)&v195;
      v243 = v167;
      v244 = v118;
      v245 = (void (**)(uint64_t, uint64_t))&type metadata for Spacer;
      v218 = (void ***)sub_1001E7624();
      v219 = (char *)v119;
      v220 = (void **)&protocol witness table for Spacer;
      v124 = (uint64_t)v154;
      sub_100341C18((uint64_t *)&v249, 3uLL, (uint64_t)&v243);
      v122(v44, v118);
      v72 = v179;
      v125 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v179);
      v74 = v185;
      v126 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v185);
      v76 = (uint64_t)v165;
      sub_100265F2C(v124, v72, v74, v125, v126);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v124, v74);
      v210 = v125;
      v211 = v126;
      v77 = v178;
      v78 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v178);
      v79 = v181;
      v127 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v181);
      v81 = v182;
      v128 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
      v208 = v127;
      v209 = v128;
    }
    else
    {
      v53 = _FrameLayout.init(width:height:alignment:)(&v243, v162, 0, 0, 1, v52, v51);
      v171 = (uint64_t)v243;
      LODWORD(v162) = v244;
      v160 = v245;
      LODWORD(v159) = v246;
      v158 = v247;
      v156 = v248;
      v49((uint64_t)v53);
      v54 = swift_getKeyPath(&unk_10070F428);
      sub_100667A20((uint64_t)v37);
      v55 = v173;
      View.environment<A>(_:_:)(v54, v37, v50, v173);
      swift_release(v54);
      (*(void (**)(char *, uint64_t))(v161 + 8))(v37, v164);
      v163[1](v41, v50);
      v56 = sub_1001E7534();
      v206 = v55;
      v207 = v56;
      v57 = v187;
      v172 = (char *)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v187);
      v58 = v186;
      sub_100344038((uint64_t)v44, v57, v186);
      v59 = v174;
      v173 = *(void (**)(_QWORD, _QWORD))(v174 + 8);
      v60 = ((uint64_t (*)(char *, uint64_t))v173)(v44, v57);
      v61 = static Alignment.center.getter(v60);
      _FrameLayout.init(width:height:alignment:)(&v249, v184, 0, 0, 1, v61, v62);
      v63 = (uint64_t)v249;
      v64 = v250;
      v65 = v251;
      v66 = v252;
      v68 = v253;
      v67 = v254;
      v221 = 0;
      LOBYTE(v222) = 1;
      v223 = (void ****)v171;
      v224 = v162;
      v225 = v160;
      v226 = v159;
      v227 = v158;
      v228 = v156;
      v218 = &v221;
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v70 = v187;
      v69(v44, v58, v187);
      LOBYTE(v199) = 1;
      v200 = (void (**)(uint64_t, uint64_t))v63;
      v201 = v64;
      v202 = v65;
      LOBYTE(v203) = v66;
      v204 = v68;
      v205 = v67;
      v219 = v44;
      v220 = (void **)&v198;
      v195 = (uint64_t)v167;
      v196 = v70;
      v197 = v167;
      v198 = 0;
      v192 = sub_1001E7624();
      v193 = (uint64_t)v172;
      v194 = v192;
      v71 = (uint64_t)v155;
      sub_100341C18((uint64_t *)&v218, 3uLL, (uint64_t)&v195);
      v173(v44, v70);
      v72 = v179;
      v73 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v179);
      v74 = v185;
      v75 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v185);
      v76 = (uint64_t)v165;
      sub_100265E68(v71, v72, v74, v73, v75);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v71, v72);
      v190 = v73;
      v191 = v75;
      v77 = v178;
      v78 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v178);
      v79 = v181;
      v80 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v181);
      v81 = v182;
      v82 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v182);
      v188 = v80;
      v189 = v82;
    }
    v110 = v180;
    v129 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v180);
    v113 = (uint64_t)v175;
    sub_100265E68(v76, v77, v110, v78, v129);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v76, v77);
  }
  v173(v186, v187);
LABEL_10:
  v146 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v72);
  v147 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v74);
  v235 = v146;
  v236 = v147;
  v148 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v77);
  v149 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v79);
  v150 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v81);
  v233 = v149;
  v234 = v150;
  v151 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v110);
  v231 = v148;
  v232 = v151;
  v152 = v177;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v177);
  sub_100341C00(v113, v152, v183);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v176 + 8))(v113, v152);
}

uint64_t sub_1001E7518()
{
  return static View._viewListCount(inputs:)();
}

unint64_t sub_1001E7534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1258;
  if (!qword_1009D1258)
  {
    v1 = sub_100030B74(&qword_1009D1250);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1258);
  }
  return result;
}

uint64_t sub_1001E7580@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1001E3BDC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1001E758C()
{
  return sub_1001E75B0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E4630);
}

uint64_t sub_1001E7598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001E3FD0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001E75A4()
{
  return sub_1001E75B0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E5538);
}

uint64_t sub_1001E75B0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001E75C8()
{
  uint64_t *v0;

  return sub_1001E64F8(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1001E75D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001E663C(*(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(void (**)(uint64_t))(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD, _QWORD))(v1 + 40));
}

unint64_t sub_1001E7624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1260;
  if (!qword_1009D1260)
  {
    v1 = sub_100030B74(&qword_1009EB830);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1260);
  }
  return result;
}

uint64_t sub_1001E7688(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;

  v1 = *a1;
  v43 = *a1;
  v2 = sub_100030B74(&qword_1009EB830);
  v3 = sub_100030B74(&qword_1009D1250);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v2, v4, v2, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v7 = swift_getTupleTypeMetadata3(255, v2, v4, &type metadata for Spacer, 0, 0);
  v8 = type metadata accessor for TupleView(255, v7);
  v9 = type metadata accessor for _ConditionalContent(255, v6, v8);
  v10 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v4, v2, 0, 0);
  v11 = type metadata accessor for TupleView(255, v10);
  v12 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v4, &type metadata for Spacer, 0, 0);
  v13 = type metadata accessor for TupleView(255, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v11, v13);
  v15 = type metadata accessor for _ConditionalContent(255, v9, v14);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v15);
  v17 = type metadata accessor for HStack(255, v15, WitnessTable);
  v18 = type metadata accessor for ModifiedContent(255, v17, v3);
  v19 = type metadata accessor for _ConditionalContent(255, v18, v18);
  v20 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v43, &type metadata for Spacer, 0, 0);
  v21 = type metadata accessor for TupleView(255, v20);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v21);
  v23 = type metadata accessor for HStack(255, v21, v22);
  v24 = type metadata accessor for _ConditionalContent(255, v19, v23);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v17);
  sub_1001E7534();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v24);
  v26 = type metadata accessor for ZStack(255, v24, v25);
  v27 = type metadata accessor for ModifiedContent(255, v26, &type metadata for _FlexFrameLayout);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _PaddingLayout);
  v30 = type metadata accessor for ModifiedContent(255, v26, &type metadata for _PaddingLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v30, &type metadata for Spacer, 0, 0);
  v32 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v33 = type metadata accessor for _ConditionalContent(255, v29, v32);
  v34 = swift_getTupleTypeMetadata2(255, &type metadata for Spacer, v30, 0, 0);
  v35 = type metadata accessor for TupleView(255, v34);
  v36 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, v26, &type metadata for Spacer, 0, 0);
  v37 = type metadata accessor for TupleView(255, v36);
  v38 = type metadata accessor for _ConditionalContent(255, v35, v37);
  v39 = type metadata accessor for _ConditionalContent(255, v33, v38);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v26);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v32);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v33);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v37);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v38);
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39);
  v41 = type metadata accessor for VStack(255, v39, v40);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v41);
}

uint64_t sub_1001E7BB8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D1268);
  sub_100048F64(v0, (uint64_t)qword_1009D1268);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000019, 0x80000001007B45E0);
}

uint64_t sub_1001E7C38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E250);
  sub_100048F64(v16, (uint64_t)qword_100A1E250);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007B4E00);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'typeDisplayRepresentation' for AppEnum that represents views that you can navigate to.", 87, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_1001E7E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  _BYTE *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (*v107)(char *);
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t, uint64_t);
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  void (*v126)(char *);
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, uint64_t, uint64_t, uint64_t);
  char *v138;
  char *v139;
  _BYTE *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  void (*v161)(char *, uint64_t, uint64_t, uint64_t);
  char *v162;
  _BYTE *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  void (*v168)(char *, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t result;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t, uint64_t);
  char *v180;
  uint64_t v181;
  char *v182;
  void (*v183)(char *);
  unsigned int v184;
  void (*v185)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v191 = (char *)&v173 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v189 = (char *)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = v4;
  __chkstk_darwin(v4);
  v8 = (char *)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v177 = (char *)&v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D1380);
  v18 = sub_10004CFD4(&qword_1009D09C0);
  v19 = *(_QWORD *)(v18 - 8);
  v181 = v18;
  v188 = *(_QWORD *)(v19 + 72);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v17, v21 + 14 * v188, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_10070F460;
  v187 = v22 + v21;
  v23 = v22 + v21 + *(int *)(v18 + 48);
  v174 = v22;
  v175 = v23;
  *(_BYTE *)(v22 + v21) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(1701670728, 0xE400000000000000);
  v25 = v11;
  static Locale.current.getter(v24);
  v183 = *(void (**)(char *))(v5 + 104);
  v26 = v8;
  v27 = v8;
  v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v186 = v6;
  v183(v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v26, "AppIntent: Tab: 'Home' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 106, 2);
  v185 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v185(v189, 1, 1, v190);
  v29 = type metadata accessor for DisplayRepresentation.Image(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v178 = v29;
  v179 = v30;
  v31 = v191;
  v30(v191, 1, 1, v29);
  v32 = sub_10004CFD4(&qword_1009D2640);
  v33 = swift_allocObject(v32, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7);
  *(_OWORD *)(v33 + 16) = xmmword_10070CCA0;
  v34 = v14;
  v35 = String.LocalizationValue.init(stringLiteral:)(0x20676E6964616552, 0xEB00000000776F4ELL);
  static Locale.current.getter(v35);
  v184 = v28;
  v36 = (void (*)(char *, uint64_t, uint64_t))v183;
  ((void (*)(char *, uint64_t, uint64_t))v183)(v26, v28, v6);
  v37 = v25;
  v38 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v25, v26, "AppIntent: Tab: Synonym for 'Home' tab name", 43, 2);
  v39 = v177;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v177, v189, v31, v33);
  v41 = v187;
  v40 = v188;
  v175 = v187 + v188 + *(int *)(v181 + 48);
  v176 = v34;
  *(_BYTE *)(v187 + v188) = 1;
  v42 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
  static Locale.current.getter(v42);
  v43 = v38;
  v44 = v38;
  v45 = v186;
  v36(v44, v28, v186);
  v46 = v39;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v34, 0, 0, v37, v43, "AppIntent: Tab: 'Library' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 109, 2);
  v47 = v189;
  v185(v189, 1, 1, v190);
  v48 = v191;
  v49 = v178;
  v179(v191, 1, 1, v178);
  DisplayRepresentation.init(title:subtitle:image:)(v46, v47, v48);
  v50 = 2 * v40;
  *(_BYTE *)(v41 + 2 * v40) = 2;
  v51 = v176;
  v52 = String.LocalizationValue.init(stringLiteral:)(0x6F7453206B6F6F42, 0xEA00000000006572);
  v53 = v37;
  v180 = v37;
  static Locale.current.getter(v52);
  v54 = v43;
  v182 = v43;
  v55 = v43;
  v56 = v184;
  v57 = (void (*)(char *, uint64_t, uint64_t))v183;
  ((void (*)(char *, _QWORD, uint64_t))v183)(v55, v184, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v51, 0, 0, v53, v54, "AppIntent: Tab: 'Book Store' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 112, 2);
  v58 = v189;
  v59 = v190;
  v185(v189, 1, 1, v190);
  v60 = v191;
  v61 = v49;
  v62 = v179;
  v179(v191, 1, 1, v61);
  DisplayRepresentation.init(title:subtitle:image:)(v46, v58, v60);
  v63 = v187;
  v64 = (_BYTE *)(v187 + v50 + v188);
  v65 = v181;
  v175 = (uint64_t)&v64[*(int *)(v181 + 48)];
  *v64 = 3;
  v66 = v176;
  v67 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEF65726F7453206BLL);
  v68 = v180;
  static Locale.current.getter(v67);
  v69 = v182;
  v57(v182, v56, v186);
  v70 = v177;
  v71 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v66, 0, 0, v68, v69, "AppIntent: Tab: 'Audiobook Store' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 117, 2);
  v72 = v58;
  v73 = v59;
  v74 = v185;
  v185(v58, 1, 1, v73);
  v75 = v191;
  v76 = v178;
  v62(v191, 1, 1, v178);
  v77 = v70;
  DisplayRepresentation.init(title:subtitle:image:)(v70, v72, v75);
  v175 = 4 * v188;
  v78 = (_BYTE *)(v63 + 4 * v188);
  v173 = &v78[*(int *)(v65 + 48)];
  *v78 = 4;
  v79 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  v80 = v180;
  static Locale.current.getter(v79);
  v81 = v182;
  v82 = (void (*)(char *, uint64_t, uint64_t))v183;
  v83 = v184;
  ((void (*)(char *, _QWORD, uint64_t))v183)(v182, v184, v186);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v71, 0, 0, v80, v81, "AppIntent: Tab: 'Search' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 108, 2);
  v74(v72, 1, 1, v190);
  v84 = v191;
  v85 = v76;
  v86 = v179;
  v179(v191, 1, 1, v85);
  DisplayRepresentation.init(title:subtitle:image:)(v77, v72, v84);
  v87 = v188;
  v88 = (_BYTE *)(v187 + v175 + v188);
  v175 = (uint64_t)&v88[*(int *)(v65 + 48)];
  *v88 = 5;
  v89 = v71;
  v90 = String.LocalizationValue.init(stringLiteral:)(0x74532061676E614DLL, 0xEB0000000065726FLL);
  v91 = v180;
  static Locale.current.getter(v90);
  v92 = v81;
  v93 = v81;
  v94 = v186;
  v82(v93, v83, v186);
  v95 = v177;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v89, 0, 0, v91, v92, "AppIntent: Tab: 'Manga' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 107, 2);
  v96 = v72;
  v97 = v190;
  v98 = v185;
  v185(v72, 1, 1, v190);
  v99 = v191;
  v86(v191, 1, 1, v178);
  v100 = v95;
  DisplayRepresentation.init(title:subtitle:image:)(v95, v96, v99);
  v101 = v187;
  v102 = (_BYTE *)(v187 + 6 * v87);
  v103 = v181;
  v175 = (uint64_t)&v102[*(int *)(v181 + 48)];
  *v102 = 6;
  v104 = String.LocalizationValue.init(stringLiteral:)(7105601, 0xE300000000000000);
  v105 = v180;
  static Locale.current.getter(v104);
  v106 = v182;
  v107 = v183;
  ((void (*)(char *, _QWORD, uint64_t))v183)(v182, v184, v94);
  v108 = v105;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v89, 0, 0, v105, v106, "'Library All' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 121, 2);
  v109 = v189;
  v98(v189, 1, 1, v97);
  v110 = v191;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x65762E736B6F6F62, 0xEE006C6163697472, 0, 0);
  v111 = v109;
  DisplayRepresentation.init(title:subtitle:image:)(v100, v109, v110);
  v175 = 8 * v188;
  v112 = (_BYTE *)(v101 + 7 * v188);
  v113 = v103;
  v173 = &v112[*(int *)(v103 + 48)];
  *v112 = 7;
  v114 = String.LocalizationValue.init(stringLiteral:)(0x206F7420746E6157, 0xEC00000064616552);
  v115 = v108;
  static Locale.current.getter(v114);
  v116 = v182;
  v117 = v184;
  v118 = v186;
  ((void (*)(char *, _QWORD, uint64_t))v107)(v182, v184, v186);
  v119 = v100;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v89, 0, 0, v115, v116, "'Want to Read' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 122, 2);
  v120 = v190;
  v121 = v185;
  v185(v111, 1, 1, v190);
  v122 = v191;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000014, 0x80000001007B4AA0, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v119, v111, v122);
  v173 = (_BYTE *)(v187 + v175 + *(int *)(v113 + 48));
  *(_BYTE *)(v187 + v175) = 8;
  v123 = v89;
  v124 = String.LocalizationValue.init(stringLiteral:)(0x64656873696E6946, 0xE800000000000000);
  static Locale.current.getter(v124);
  v125 = v182;
  v126 = v183;
  ((void (*)(char *, uint64_t, uint64_t))v183)(v182, v117, v118);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v123, 0, 0, v115, v125, "'Finished' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 118, 2);
  v127 = v189;
  v121(v189, 1, 1, v120);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000010, 0x80000001007B4B40, 0, 0);
  v128 = v119;
  v129 = v119;
  v130 = v127;
  DisplayRepresentation.init(title:subtitle:image:)(v128, v127, v122);
  v132 = v187;
  v131 = v188;
  v133 = (_BYTE *)(v187 + v175 + v188);
  v134 = v181;
  v175 = (uint64_t)&v133[*(int *)(v181 + 48)];
  *v133 = 9;
  v135 = String.LocalizationValue.init(stringLiteral:)(0x736B6F6F42, 0xE500000000000000);
  v136 = v180;
  static Locale.current.getter(v135);
  ((void (*)(char *, _QWORD, uint64_t))v126)(v125, v184, v186);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v123, 0, 0, v136, v125, "'Books' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 115, 2);
  v137 = v185;
  v185(v130, 1, 1, v190);
  v138 = v122;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(6775138, 0xE300000000000000, 0, 0);
  v139 = v129;
  DisplayRepresentation.init(title:subtitle:image:)(v129, v130, v138);
  v140 = (_BYTE *)(v132 + 10 * v131);
  v175 = (uint64_t)&v140[*(int *)(v134 + 48)];
  *v140 = 10;
  v141 = v176;
  v142 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
  static Locale.current.getter(v142);
  v143 = v184;
  v144 = v186;
  v145 = (void (*)(char *, uint64_t, uint64_t))v183;
  ((void (*)(char *, _QWORD, uint64_t))v183)(v125, v184, v186);
  v146 = v139;
  v147 = v136;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v141, 0, 0, v136, v125, "'Audiobooks' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v148 = v189;
  v149 = v190;
  v137(v189, 1, 1, v190);
  v150 = v191;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6E6F687064616568, 0xEA00000000007365, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v146, v148, v150);
  v151 = v187;
  v152 = v188;
  v153 = (_BYTE *)(v187 + 11 * v188);
  v154 = v181;
  v175 = (uint64_t)&v153[*(int *)(v181 + 48)];
  *v153 = 11;
  v155 = v141;
  v156 = String.LocalizationValue.init(stringLiteral:)(1933984848, 0xE400000000000000);
  static Locale.current.getter(v156);
  v157 = v182;
  v145(v182, v143, v144);
  v158 = v177;
  v159 = v147;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v155, 0, 0, v147, v157, "PDFs' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 113, 2);
  v160 = v189;
  v161 = v185;
  v185(v189, 1, 1, v149);
  v162 = v191;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x747865742E636F64, 0xE800000000000000, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v158, v160, v162);
  v163 = (_BYTE *)(v151 + 12 * v152);
  v175 = (uint64_t)&v163[*(int *)(v154 + 48)];
  *v163 = 12;
  v164 = v155;
  v165 = String.LocalizationValue.init(stringLiteral:)(0x6C706D615320794DLL, 0xEA00000000007365);
  v166 = v159;
  static Locale.current.getter(v165);
  v167 = v182;
  v168 = (void (*)(char *, uint64_t, uint64_t))v183;
  v169 = v184;
  v170 = v186;
  ((void (*)(char *, _QWORD, uint64_t))v183)(v182, v184, v186);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v164, 0, 0, v166, v167, "'My Samples' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v161(v160, 1, 1, v190);
  DisplayRepresentation.Image.init(named:isTemplate:)(0x73656C706D6173, 0xE700000000000000, 2);
  v179(v162, 0, 1, v178);
  DisplayRepresentation.init(title:subtitle:image:)(v158, v160, v162);
  *(_BYTE *)(v187 + 13 * v188) = 13;
  v171 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xEA00000000006465);
  static Locale.current.getter(v171);
  v168(v167, v169, v170);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v164, 0, 0, v166, v167, "'Downloaded' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v185(v160, 1, 1, v190);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000015, 0x80000001007B4DE0, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v158, v160, v162);
  result = sub_1001DA550(v174);
  qword_100A1E268 = result;
  return result;
}

uint64_t sub_1001E8DB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001E8DE8 + 4 * byte_10070F470[a1]))(0x626154656D6F68, 0xE700000000000000);
}

uint64_t sub_1001E8DE8()
{
  return 0x547972617262696CLL;
}

uint64_t sub_1001E8E04()
{
  return 0x726F74536B6F6F62;
}

unint64_t sub_1001E8E24()
{
  return 0xD000000000000011;
}

uint64_t sub_1001E8F30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_1001E8DB4(*a1);
  v5 = v4;
  v6 = sub_1001E8DB4(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

unint64_t sub_1001E8FBC()
{
  unint64_t result;

  result = qword_1009D1280;
  if (!qword_1009D1280)
  {
    result = swift_getWitnessTable(&unk_10070F498, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D1280);
  }
  return result;
}

Swift::Int sub_1001E9000()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = sub_1001E8DB4(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001E9060(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1001E8DB4(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001E90A0(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = sub_1001E8DB4(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1001E90FC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001EA234(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001E9128@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1001E8DB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1001E9154()
{
  unint64_t result;

  result = qword_1009D1288;
  if (!qword_1009D1288)
  {
    result = swift_getWitnessTable(&unk_10070F578, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D1288);
  }
  return result;
}

unint64_t sub_1001E919C()
{
  unint64_t result;

  result = qword_1009D1290;
  if (!qword_1009D1290)
  {
    result = swift_getWitnessTable(&unk_10070F5B0, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D1290);
  }
  return result;
}

unint64_t sub_1001E91E4()
{
  unint64_t result;

  result = qword_1009D1298;
  if (!qword_1009D1298)
  {
    result = swift_getWitnessTable(&unk_10070F500, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D1298);
  }
  return result;
}

void *sub_1001E9228()
{
  return &protocol witness table for String;
}

unint64_t sub_1001E9238()
{
  unint64_t result;

  result = qword_1009D12A0;
  if (!qword_1009D12A0)
  {
    result = swift_getWitnessTable(&unk_10070F5E0, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12A0);
  }
  return result;
}

unint64_t sub_1001E9280()
{
  unint64_t result;

  result = qword_1009D12A8;
  if (!qword_1009D12A8)
  {
    result = swift_getWitnessTable(&unk_10070F608, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12A8);
  }
  return result;
}

unint64_t sub_1001E92C8()
{
  unint64_t result;

  result = qword_1009D12B0;
  if (!qword_1009D12B0)
  {
    result = swift_getWitnessTable(&unk_10070F630, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12B0);
  }
  return result;
}

unint64_t sub_1001E9310()
{
  unint64_t result;

  result = qword_1009D12B8;
  if (!qword_1009D12B8)
  {
    result = swift_getWitnessTable(&unk_10070F688, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12B8);
  }
  return result;
}

uint64_t sub_1001E9358@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDBF8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E250, (uint64_t)sub_1001E7C38, a1);
}

uint64_t sub_1001E937C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001E93BC();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1001E93BC()
{
  unint64_t result;

  result = qword_1009D12C0;
  if (!qword_1009D12C0)
  {
    result = swift_getWitnessTable(&unk_10070F538, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12C0);
  }
  return result;
}

uint64_t sub_1001E9400(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E93BC();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001E943C()
{
  unint64_t result;

  result = qword_1009D12C8;
  if (!qword_1009D12C8)
  {
    result = swift_getWitnessTable(&unk_10070F6C8, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12C8);
  }
  return result;
}

unint64_t sub_1001E9484()
{
  unint64_t result;

  result = qword_1009D12D0;
  if (!qword_1009D12D0)
  {
    result = swift_getWitnessTable(&unk_10070F6F0, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12D0);
  }
  return result;
}

unint64_t sub_1001E94CC()
{
  unint64_t result;

  result = qword_1009D12D8;
  if (!qword_1009D12D8)
  {
    result = swift_getWitnessTable(&unk_10070F4C0, &type metadata for DeepLinkItem);
    atomic_store(result, (unint64_t *)&qword_1009D12D8);
  }
  return result;
}

double sub_1001E9510()
{
  double result;

  if (qword_1009CDC00 != -1)
    swift_once(&qword_1009CDC00, sub_1001E7E4C);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E268).n128_u64[0];
  return result;
}

uint64_t sub_1001E9550(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E9310();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1001E9588()
{
  return sub_100030B34(&qword_1009D12E0, &qword_1009D12E8, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1001E95B4(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EF770;
}

unint64_t sub_1001E95C8()
{
  unint64_t result;

  result = qword_1009D12F0;
  if (!qword_1009D12F0)
  {
    result = swift_getWitnessTable(&unk_10070F778, &type metadata for DeepLinkIntent);
    atomic_store(result, (unint64_t *)&qword_1009D12F0);
  }
  return result;
}

uint64_t sub_1001E960C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E270);
  sub_100048F64(v10, (uint64_t)qword_100A1E270);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007B4600);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for AppIntent that opens a tab bar item. When localizing, it is ok to translate as 'Change View in Books App'.", 116, 2);
}

uint64_t sub_1001E9780()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001E97A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E9810, v5, v6);
}

void sub_1001E9810()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 48));
  __asm { BR              X10 }
}

uint64_t sub_1001E985C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)sub_1001EA27C();
  sub_10021B054(0);

  static IntentResult.result<>()(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1001E9A50@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001E9A88(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

void (*sub_1001E9ABC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1001E9B04;
}

void sub_1001E9B04(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_1001E9B38()
{
  unint64_t result;

  result = qword_1009D12F8;
  if (!qword_1009D12F8)
  {
    result = swift_getWitnessTable(&unk_10070F7A0, &type metadata for DeepLinkIntent);
    atomic_store(result, (unint64_t *)&qword_1009D12F8);
  }
  return result;
}

unint64_t sub_1001E9B80()
{
  unint64_t result;

  result = qword_1009D1300;
  if (!qword_1009D1300)
  {
    result = swift_getWitnessTable(&unk_10070F830, &type metadata for DeepLinkIntent);
    atomic_store(result, (unint64_t *)&qword_1009D1300);
  }
  return result;
}

unint64_t sub_1001E9BC8()
{
  unint64_t result;

  result = qword_1009D1308;
  if (!qword_1009D1308)
  {
    result = swift_getWitnessTable(&unk_10070F858, &type metadata for DeepLinkIntent);
    atomic_store(result, (unint64_t *)&qword_1009D1308);
  }
  return result;
}

uint64_t sub_1001E9C0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100867324, 1);
}

uint64_t sub_1001E9C1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008672FC, 1);
}

uint64_t sub_1001E9C2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC08, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E270, (uint64_t)sub_1001E960C, a1);
}

uint64_t sub_1001E9C50@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_100048F64(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1001E9CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009D1360);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D1368);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, a1, a2);
  v10._countAndFlagsBits = 0x206F74206E65704FLL;
  v10._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10070F898);
  v12 = sub_10004CFD4(&qword_1009D1370);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_1001E9E34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009D1354);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_1001E97A0(a1, v5, v4);
}

uint64_t sub_1001E9E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001EA3F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001E9EBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E9B38();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for DeepLinkIntent(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s5Books14DeepLinkIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for DeepLinkIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for DeepLinkIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkIntent()
{
  return &type metadata for DeepLinkIntent;
}

uint64_t getEnumTagSinglePayload for DeepLinkItem(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1001EA14C + 4 * byte_10070F491[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1001EA180 + 4 * byte_10070F48C[v4]))();
}

uint64_t sub_1001EA180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EA188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001EA190);
  return result;
}

uint64_t sub_1001EA19C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001EA1A4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1001EA1A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EA1B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EA1BC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1001EA1C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkItem()
{
  return &type metadata for DeepLinkItem;
}

uint64_t sub_1001EA1DC()
{
  return sub_100030B34(&qword_1009D1318, &qword_1009D1320, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1001EA208()
{
  return sub_100030B34((unint64_t *)&qword_1009D2570, &qword_1009D1328, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_1001EA234(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EF600, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xE)
    return 14;
  else
    return v3;
}

uint64_t sub_1001EA27C()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;

  AppDependency.wrappedValue.getter(&v13);
  v0 = v13;
  v1 = objc_msgSend(v13, "primarySceneController");

  v2 = objc_msgSend(v1, "rootBarCoordinator");
  if (v2)
  {
    v3 = type metadata accessor for RootBarCoordinator();
    result = swift_dynamicCastClass(v2, v3);
    if (result)
      return result;
    swift_unknownObjectRelease(v2);
  }
  if (qword_1009CDBF0 != -1)
    swift_once(&qword_1009CDBF0, sub_1001E7BB8);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009D1268);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed getting root bar coordinator.", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = sub_1001EA7C0();
  v11 = swift_allocError(&type metadata for BookContextualIntentError, v10, 0, 0);
  *v12 = 0;
  return swift_willThrow(v11);
}

uint64_t sub_1001EA3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v40 = *(_QWORD *)(v0 - 8);
  v41 = v0;
  __chkstk_darwin(v0);
  v39 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  v3 = __chkstk_darwin(v2);
  v38 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v37 = (char *)&v36 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10004CFD4(&qword_1009D1340);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007B44E0);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Title for parameter that specifies target tab or collection when running an AppIntent that opens a view.", 104, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x80000001007B4570);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of target parameter on Deep Link Intent", 51, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  LOBYTE(v42[0]) = 14;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v37;
  v28(v37, 1, 1, v27);
  v30 = v38;
  v28(v38, 1, 1, v27);
  v31 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, enum case for InputConnectionBehavior.default(_:), v41);
  v32 = sub_1001E93BC();
  v33 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v22, v8, v42, v29, v30, v31, &off_1008EF770, v32);
  sub_10004CFD4(&qword_1009D1348);
  type metadata accessor for AppDependencyManager(0);
  memset(v42, 0, sizeof(v42));
  v43 = 0;
  v34 = static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)(v42, v34);
  return v33;
}

unint64_t sub_1001EA7C0()
{
  unint64_t result;

  result = qword_1009D1358;
  if (!qword_1009D1358)
  {
    result = swift_getWitnessTable(&unk_100726B4C, &type metadata for BookContextualIntentError);
    atomic_store(result, (unint64_t *)&qword_1009D1358);
  }
  return result;
}

uint64_t sub_1001EA804@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EA82C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v18);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = (void *)a2[10];
    *(_QWORD *)(v4 + 80) = v9;
    v10 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    v13 = v9;
    v12(v4 + 88, (uint64_t)(a2 + 11), v11);
    v14 = *(int *)(a3 + 32);
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_1001EA93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1001EA998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v8;
  v11(a1 + 88, a2 + 88, v10);
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

_QWORD *sub_1001EAA74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  sub_1001EAB00(a1, a2);
  sub_1001EAB00(a1 + 5, a2 + 5);
  v6 = (void *)a1[10];
  v7 = (void *)a2[10];
  a1[10] = v7;
  v8 = v7;

  sub_1001EAB00(a1 + 11, a2 + 11);
  v9 = *(int *)(a3 + 32);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_1001EAB00(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1001EAC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 88);
  v7 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 88) = v6;
  v11 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1001EACFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1001EADB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EADC0);
}

uint64_t sub_1001EADC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1001EAE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EAE48);
}

uint64_t sub_1001EAE48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

double sub_1001EAEBC@<D0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9[2];
  char v10;
  __int128 v11[2];

  v3 = v1 + 5;
  v5 = v1[8];
  v4 = v1[9];
  sub_10003F198(v3, v5);
  ContextActionDataProtocol.selectionMode.getter(v9, v5, v4);
  if ((v10 & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)v9);
  }
  else
  {
    sub_100022840(v9, (uint64_t)v11);
    sub_100022840(v11, (uint64_t)v9);
    v6 = sub_10004CFD4(&qword_1009DD4B0);
    v7 = sub_10004CFD4((uint64_t *)&unk_1009DFD10);
    if ((swift_dynamicCast(a1, v9, v6, v7, 6) & 1) != 0)
      return result;
  }
  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1001EAF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  sub_1001EAEBC(&v19);
  if (!v20)
  {
    sub_1001EB7F4((uint64_t)&v19);
LABEL_17:
    v17 = 0;
    return v17 & 1;
  }
  sub_1001EB834(&v19, &v21);
  v0 = v22;
  v1 = v23;
  sub_10003F198(&v21, v22);
  v2 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v0, v1);
  if ((static ContextActionAssetType.== infix(_:_:)(v2, 3) & 1) == 0
    || (sub_10003F198(&v21, v22), (sub_100298A34() & 1) == 0))
  {
LABEL_16:
    _s5Books15CurrentPageViewVwxx_0(&v21);
    goto LABEL_17;
  }
  v3 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v4 = objc_msgSend(v3, "currentAudiobook");
  if (!v4)
  {
LABEL_15:

    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "assetID");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = v22;
  v11 = v23;
  sub_10003F198(&v21, v22);
  v13 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v10, v11);
  v14 = v12;
  if (v7 != v13 || v9 != v12)
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v13, v12, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) != 0)
      goto LABEL_10;
    swift_unknownObjectRelease(v5);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n(v9, 2);
LABEL_10:
  v16 = objc_msgSend(v5, "isSG");
  sub_1001EB84C((uint64_t)&v21, (uint64_t)&v19);
  if ((v16 & 1) != 0)
  {
    v17 = 1;
  }
  else
  {
    sub_10003F198(&v19, v20);
    v17 = sub_100298CDC();
  }

  swift_unknownObjectRelease(v5);
  _s5Books15CurrentPageViewVwxx_0(&v19);
  _s5Books15CurrentPageViewVwxx_0(&v21);
  return v17 & 1;
}

uint64_t sub_1001EB180()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[13] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[14] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[15] = v3;
  v1[16] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[17] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[18] = v5;
  v1[19] = v6;
  return swift_task_switch(sub_1001EB214, v5, v6);
}

uint64_t sub_1001EB214()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;

  v1 = *(_QWORD **)(v0 + 104);
  v2 = (void *)v1[10];
  *(_QWORD *)(v0 + 160) = v2;
  if (!v2)
  {
    v7 = swift_release(*(_QWORD *)(v0 + 136));
    goto LABEL_5;
  }
  v3 = v1[8];
  v4 = v1[9];
  sub_10003F198(v1 + 5, v3);
  v5 = v2;
  ContextActionDataProtocol.selectionMode.getter((_QWORD *)(v0 + 16), v3, v4);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 136);

    swift_release(v6);
    v7 = sub_1001EB7C0(v0 + 16);
LABEL_5:
    v8 = static Logger.contextActionItem.getter(v7);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "ReportAnIssueActionItem tracker does not exist.", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_100022840((__int128 *)(v0 + 16), v0 + 64);
  sub_1003B1CBC((uint64_t)v5, (_QWORD *)(v0 + 64));
  v16 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 96);
  sub_10003F198((_QWORD *)(v0 + 64), v16);
  v18 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v16, v17);
  v20 = v19;
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  sub_10003F198((_QWORD *)(v0 + 64), v21);
  v23 = dispatch thunk of ContextAssetInfoProtocol.supplementalContentCount.getter(v21, v22);
  if ((v24 & 1) != 0)
    v25 = 0;
  else
    v25 = v23;
  v26 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v25);
  *(_QWORD *)(v0 + 168) = v26;
  objc_allocWithZone((Class)sub_10004CFD4(&qword_1009D1440));
  v27 = dword_1009EA55C;
  v28 = v5;
  v29 = (_QWORD *)swift_task_alloc(v27);
  *(_QWORD *)(v0 + 176) = v29;
  *v29 = v0;
  v29[1] = sub_1001EB45C;
  return sub_1005384F8(v18, v20, (uint64_t)v26, (uint64_t)v28);
}

uint64_t sub_1001EB45C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *v1;
  v4 = *(void **)(*v1 + 168);
  v3 = *(_QWORD *)(*v1 + 176);
  v5 = *(void **)(*v1 + 160);
  *(_QWORD *)(*v1 + 184) = a1;
  swift_task_dealloc(v3);

  return swift_task_switch(sub_1001EB4C8, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_1001EB4C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 160);
  v3 = *(_QWORD **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 136));
  v4 = v3[3];
  v5 = v3[4];
  sub_10003F198(v3, v4);
  dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v1, 1, v4, v5);

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EB55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1001EB5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to ContextActionItem.asyncSubMenu.getter[1]);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001EB614;
  return ContextActionItem.asyncSubMenu.getter(a1, a2);
}

uint64_t sub_1001EB614(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1001EB668()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D143C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1001EB180();
}

uint64_t ExplicitDeclineActionItem.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002E418(v1, a1);
}

uint64_t ExplicitDeclineActionItem.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002E418(v1 + 40, a1);
}

void *ExplicitDeclineActionItem.tracker.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

uint64_t ExplicitDeclineActionItem.figaroProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002E418(v1 + 88, a1);
}

uint64_t sub_1001EB724@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.reportConcern(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6 + 40);
  sub_100022840(a2, a6);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_1001EB7C0(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for ContextSelectionMode - 1) + 8))();
  return a1;
}

uint64_t sub_1001EB7F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(qword_1009D1448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1001EB834(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1001EB84C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1001EB890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1001EB898(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1001EB924(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 24) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
    v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain(v9);
    swift_retain(v14);
    v19(v17, v18, v4);
  }
  return a1;
}

uint64_t sub_1001EBA10(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (unint64_t)a1 + 15;
  swift_release(*a1);
  v3 &= 0xFFFFFFFFFFFFF8uLL;
  swift_release(*(_QWORD *)v3);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1001EBA64(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v5 = *a2;
  v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFF8);
  *v6 = v7;
  v8 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((v4 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 8) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_retain(v5);
  swift_retain(v7);
  v15(v13, v14, v10);
  return a1;
}

uint64_t *sub_1001EBB00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v7);
  v8 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 & 0xFFFFFFFFFFFFF8) + 15;
  v9 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v8;
  *(_QWORD *)v8 = v9;
  v8 += 15;
  swift_retain(v9);
  swift_release(v11);
  *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(unsigned __int8 *)(v12 + 80) + 8 + (v8 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 8 + (v10 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

_QWORD *sub_1001EBBAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t *sub_1001EBC20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFF8uLL;
  v8 = *(_QWORD *)v5;
  v5 += 15;
  v9 = *(_QWORD *)v7;
  *(_QWORD *)v7 = v8;
  v7 += 15;
  swift_release(v9);
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(unsigned __int8 *)(v10 + 80) + 8 + (v7 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(unsigned __int8 *)(v10 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1001EBCB4(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1001EBD88 + 4 * byte_10070F9B0[(v9 - 1)]))();
}

void sub_1001EBE08(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for ContrastingLeadingTrailingColorsView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContrastingLeadingTrailingColorsView);
}

uint64_t sub_1001EC018(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1008673F8, 1);
}

uint64_t sub_1001EC04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t WitnessTable;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(a1);
  v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v47 - v8;
  v10 = *(_QWORD *)(v7 + 16);
  v11 = sub_100030B74(&qword_1009D83F0);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v57 = v13;
  v58 = v14;
  v50 = v12;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v59 = v12;
  v60 = v12;
  v61 = WitnessTable;
  v62 = WitnessTable;
  v15 = type metadata accessor for ContrastingLeadingTrailingView(0, (uint64_t)&v59);
  v16 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  v55 = v16;
  v17 = __chkstk_darwin(v15);
  v49 = (uint64_t *)((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v53 = (uint64_t)&v47 - v19;
  v48 = v2;
  v20 = *(_QWORD *)(v2 + 16);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v21(v9, v2, a1);
  v22 = *(unsigned __int8 *)(v4 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = v23 + v5;
  v25 = v22 | 7;
  v26 = swift_allocObject(&unk_1008F23C0, v23 + v5, v22 | 7);
  *(_QWORD *)(v26 + 16) = v10;
  *(_QWORD *)(v26 + 24) = v13;
  v27 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v27(v26 + v23, v9, a1);
  v28 = v52;
  v21(v52, v48, a1);
  v29 = swift_allocObject(&unk_1008F23E8, v24, v25);
  *(_QWORD *)(v29 + 16) = v10;
  *(_QWORD *)(v29 + 24) = v13;
  v27(v29 + v23, v28, a1);
  v31 = (uint64_t)v49;
  v30 = v50;
  *v49 = v20;
  v59 = v30;
  v60 = v30;
  v61 = WitnessTable;
  v62 = WitnessTable;
  v32 = type metadata accessor for ContrastingLeadingTrailingView(0, (uint64_t)&v59);
  v33 = v31 + *(int *)(v32 + 52);
  v34 = *(_QWORD *)(v26 + 16);
  v35 = *(_QWORD *)(v26 + 24);
  v37 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContrastingLeadingTrailingColorsView(0, v34, v35, v36)- 8)+ 80);
  sub_1001EC36C((_QWORD *)(v26 + ((v37 + 32) & ~v37)), v34, v35, v33);
  v38 = v31 + *(int *)(v32 + 56);
  v39 = *(_QWORD *)(v29 + 16);
  v40 = *(_QWORD *)(v29 + 24);
  v42 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContrastingLeadingTrailingColorsView(0, v39, v40, v41)- 8)+ 80);
  sub_1001EC4CC(v29 + ((v42 + 32) & ~v42), v39, v40, v38);
  swift_release(v29);
  swift_release(v26);
  v43 = v54;
  swift_getWitnessTable(&unk_10070FA90, v54);
  v44 = v53;
  sub_100344038(v31, v43, v53);
  v45 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v45(v31, v43);
  sub_100341C00(v44, v43, v56);
  return ((uint64_t (*)(uint64_t, uint64_t))v45)(v44, v43);
}

uint64_t sub_1001EC36C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];

  v8 = sub_100030B74(&qword_1009D83F0);
  v9 = type metadata accessor for ModifiedContent(0, a2, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v20 - v14;
  type metadata accessor for ContrastingLeadingTrailingColorsView(0, a2, a3, v16);
  View.foregroundColor(_:)(*a1, a2, a3);
  v17 = sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v20[0] = a3;
  v20[1] = v17;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_100344038((uint64_t)v13, v9, (uint64_t)v15);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  sub_100341C00((uint64_t)v15, v9, a4);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t sub_1001EC4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];

  v8 = sub_100030B74(&qword_1009D83F0);
  v9 = type metadata accessor for ModifiedContent(0, a2, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v20 - v14;
  type metadata accessor for ContrastingLeadingTrailingColorsView(0, a2, a3, v16);
  View.foregroundColor(_:)(*(_QWORD *)(a1 + 8), a2, a3);
  v17 = sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v20[0] = a3;
  v20[1] = v17;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_100344038((uint64_t)v13, v9, (uint64_t)v15);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  sub_100341C00((uint64_t)v15, v9, a4);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t type metadata accessor for ContrastingLeadingTrailingView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ContrastingLeadingTrailingView);
}

uint64_t sub_1001EC644(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 3, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1001EC6E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  if ((v8 | v6) > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v9 + ((v6 + 8) & ~v6)) & ~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + (((v8 | v6) & 0xF8 ^ 0x1F8) & ((v8 | v6) + 16)));
    swift_retain(v12);
  }
  else
  {
    v13 = ~v8;
    *a1 = *a2;
    v14 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v15 = ((unint64_t)a2 + v6 + 8) & ~v6;
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))((v14 + v9) & v13, (v15 + v9) & v13, v4);
  }
  return v3;
}

uint64_t sub_1001EC7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_QWORD *sub_1001EC858(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1001EC8F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1001EC988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1001ECA20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v9 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1001ECAB8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  uint64_t v20;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = *(_QWORD *)(v4 + 64);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v13 = ((v10 + v11 + ((v9 + 8) & ~v9)) & ~v11) + *(_QWORD *)(v6 + 64);
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_23:
      if (v8)
      {
        v20 = (a1 + v9 + 8) & ~v9;
        if (v5 >= v7)
          return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(v20, *(unsigned int *)(v4 + 84));
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v20 + v10 + v11) & ~v11);
      }
      return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_23;
LABEL_14:
  v17 = (v15 - 1) << v14;
  if (v13 > 3)
    v17 = 0;
  if (!(_DWORD)v13)
    return v8 + v17 + 1;
  if (v13 <= 3)
    v18 = ((v10 + v11 + ((v9 + 8) & ~(_DWORD)v9)) & ~(_DWORD)v11) + *(_DWORD *)(v6 + 64);
  else
    v18 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1001ECBA4 + 4 * byte_10070F9BE[v18 - 1]))();
}

void sub_1001ECC34(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64)
       + *(unsigned __int8 *)(v6 + 80)
       + ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_100000004;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t sub_1001ECE54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100030B74(&qword_1009D83F0);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v10 = v2;
  v11 = sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v7[0] = v4;
  v7[1] = v4;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v9 = WitnessTable;
  v5 = type metadata accessor for ContrastingLeadingTrailingView(255, (uint64_t)v7);
  return swift_getWitnessTable(&unk_10070FA90, v5);
}

uint64_t sub_1001ECEF8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_10086742C, 1);
}

uint64_t sub_1001ECF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v26 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_100030B74(&qword_1009D1558);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = sub_100030B74(&qword_1009D1560);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v13 = type metadata accessor for ZStack(0, v11, WitnessTable);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v25 - v19;
  v21 = static Alignment.leading.getter(v18);
  v28 = v4;
  v29 = v7;
  v30 = *(_OWORD *)(a1 + 32);
  v31 = v2;
  ZStack.init(alignment:content:)(v21, v22, sub_1001ED738, v27, v11, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v13);
  sub_100344038((uint64_t)v17, v13, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  sub_100341C00((uint64_t)v20, v13, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v13);
}

uint64_t sub_1001ED0D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t WitnessTable;
  __int128 v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[4];
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v69 = a6;
  v11 = sub_100030B74(&qword_1009D1560);
  v61 = a3;
  v12 = type metadata accessor for ModifiedContent(0, a3, v11);
  v68 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v66 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v67 = (uint64_t)&v59 - v15;
  v16 = sub_100030B74(&qword_1009D1558);
  v17 = type metadata accessor for ModifiedContent(0, a2, v16);
  v70 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v71 = (uint64_t)&v59 - v21;
  v75 = a2;
  *(_QWORD *)&v76 = a3;
  *((_QWORD *)&v76 + 1) = a4;
  v77 = a5;
  v60 = a5;
  v62 = type metadata accessor for ContrastingLeadingTrailingView(0, (uint64_t)&v75);
  v59 = a1;
  v22 = static VerticalAlignment.center.getter(v62);
  sub_1001ED5CC(a1, (uint64_t)&v75);
  v23 = v75;
  v24 = v77;
  v25 = v78;
  v26 = BYTE8(v78);
  v27 = v80;
  v28 = v81;
  v65 = v76;
  v29 = v79;
  v75 = v22;
  *(_QWORD *)&v76 = 0;
  BYTE8(v76) = 1;
  v77 = v23;
  v78 = v65;
  LOBYTE(v79) = v24;
  *((_QWORD *)&v79 + 1) = v25;
  LOBYTE(v80) = v26;
  v81 = v29;
  v82 = v27;
  LOBYTE(v83) = v28;
  v30 = sub_10004CFD4(&qword_1009D1568);
  v31 = sub_100030B34(&qword_1009D1570, &qword_1009D1568, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v63 = v20;
  View.mask<A>(_:)(&v75, a2, v30, a4, v31);
  swift_release(v23);
  swift_release(v65);
  v32 = sub_100030B34(&qword_1009D1578, &qword_1009D1558, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
  v84 = a4;
  v85 = v32;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  sub_100344038((uint64_t)v20, v17, v71);
  *(_QWORD *)&v65 = *(_QWORD *)(v70 + 8);
  v33 = ((uint64_t (*)(char *, uint64_t))v65)(v20, v17);
  v34 = v59;
  v35 = static VerticalAlignment.center.getter(v33);
  v36 = v61;
  v37 = v60;
  sub_1001ED67C(v34, (uint64_t)&v75);
  v38 = v75;
  v39 = v76;
  v40 = *((_QWORD *)&v76 + 1);
  v41 = v77;
  v42 = v78;
  v43 = BYTE8(v78);
  v44 = v80;
  v45 = v81;
  v46 = v79;
  v75 = v35;
  *(_QWORD *)&v76 = 0;
  BYTE8(v76) = 0;
  v77 = v38;
  LOBYTE(v78) = v39;
  *((_QWORD *)&v78 + 1) = v40;
  LOBYTE(v79) = v41;
  *((_QWORD *)&v79 + 1) = v42;
  LOBYTE(v80) = v43;
  v81 = v46;
  v82 = v44;
  v83 = v45;
  v47 = sub_10004CFD4(&qword_1009D1580);
  v48 = sub_100030B34(&qword_1009D1588, &qword_1009D1580, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v49 = (uint64_t)v66;
  View.mask<A>(_:)(&v75, v36, v47, v37, v48);
  swift_release(v44);
  swift_release(v45);
  v50 = sub_100030B34(&qword_1009D1590, &qword_1009D1560, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
  v74[2] = v37;
  v74[3] = v50;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v52 = v67;
  sub_100344038(v49, v12, v67);
  v53 = v68;
  v54 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
  v54(v49, v12);
  v55 = (uint64_t)v63;
  v56 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v63, v71, v17);
  v75 = v55;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v49, v52, v12);
  *(_QWORD *)&v76 = v49;
  v74[0] = v17;
  v74[1] = v12;
  v72 = WitnessTable;
  v73 = v51;
  sub_100341C18(&v75, 2uLL, (uint64_t)v74);
  v54(v52, v12);
  v57 = (uint64_t (*)(uint64_t, uint64_t))v65;
  ((void (*)(uint64_t, uint64_t))v65)(v56, v17);
  v54(v49, v12);
  return v57(v55, v17);
}

double sub_1001ED5CC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  double result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v18;

  v4 = static Color.orange.getter();
  KeyPath = swift_getKeyPath(&unk_10070FAE0);
  v6 = *a1;
  v7 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v14, v6, 0, 0, 1, v7, v8);
  v9 = v14;
  v10 = v15;
  v11 = v16;
  v12 = v17;
  *(_QWORD *)a2 = KeyPath;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v9;
  *(_BYTE *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = v12;
  result = *(double *)&v18;
  *(_OWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = 1;
  return result;
}

uint64_t sub_1001ED67C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *a1;
  v4 = static Alignment.center.getter();
  v6 = _FrameLayout.init(width:height:alignment:)(&v15, v3, 0, 0, 1, v4, v5);
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v18;
  v11 = v19;
  v12 = v20;
  v13 = static Color.orange.getter(v6);
  result = swift_getKeyPath(&unk_10070FAE0);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 72) = v13;
  return result;
}

uint64_t sub_1001ED738@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001ED0D8(*(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1001ED750(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100030B74(&qword_1009D1558);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v5 = sub_100030B74(&qword_1009D1560);
  v6 = type metadata accessor for ModifiedContent(255, v2, v5);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(255, v8, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
}

Swift::Int sub_1001ED800()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_1001ED840()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_1001ED864(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_1001ED8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  id v21;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D1660);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D1668);
  v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v11 = PassthroughSubject.init()(v10);
  *(_QWORD *)(v1 + 16) = v11;
  *(_QWORD *)(v1 + 24) = &_swiftEmptySetSingleton;
  v20[0] = v11;
  v12 = sub_100059BB4();
  v13 = swift_retain(v11);
  v21 = (id)static OS_dispatch_queue.main.getter(v13);
  v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  v15 = sub_100030B34(&qword_1009D1670, &qword_1009D1668, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v16 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v21, v4, v9, v12, v15, v16);
  sub_1001EDE18((uint64_t)v4);

  swift_release(v20[0]);
  v17 = sub_100030B34(&qword_1009D1678, &qword_1009D1660, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v18 = Publisher<>.sink(receiveValue:)(sub_1001EDAB8, 0, v5, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess(v1 + 24, v20, 33, 0);
  AnyCancellable.store(in:)(v1 + 24);
  swift_endAccess(v20);
  swift_release(v18);
  return v1;
}

void sub_1001EDAB8()
{
  id v0;
  void *v1;
  _QWORD v2[6];

  v0 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
  v2[4] = sub_1001EDB60;
  v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  v2[2] = sub_1001EDBF0;
  v2[3] = &unk_1008F2528;
  v1 = _Block_copy(v2);
  objc_msgSend(v0, "requestPrimaryScene:", v1);
  _Block_release(v1);

}

void sub_1001EDB60(void *a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)objc_opt_self(UIViewController);
  v3 = objc_msgSend(a1, "bk_window");
  v4 = objc_msgSend(v2, "jsa_topMostViewControllerForWindow:", v3);

  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_1001EDBF0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_1001EDC40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ReportIssueRouter()
{
  return objc_opt_self(_TtC5Books17ReportIssueRouter);
}

uint64_t _s13RoutingActionOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s13RoutingActionOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001EDD20 + 4 * byte_10070FB20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001EDD40 + 4 * byte_10070FB25[v4]))();
}

_BYTE *sub_1001EDD20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001EDD40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001EDD48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001EDD50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001EDD58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001EDD60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13RoutingActionOMa()
{
  return &_s13RoutingActionON;
}

unint64_t sub_1001EDD80()
{
  unint64_t result;

  result = qword_1009D1640;
  if (!qword_1009D1640)
  {
    result = swift_getWitnessTable(&unk_10070FB84, &_s13RoutingActionON);
    atomic_store(result, (unint64_t *)&qword_1009D1640);
  }
  return result;
}

uint64_t sub_1001EDDC4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

unint64_t sub_1001EDDD0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1009D4E00;
  if (!qword_1009D4E00)
  {
    v1 = sub_100059BB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4E00);
  }
  return result;
}

uint64_t sub_1001EDE18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001EDE58(unint64_t a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v3 = objc_msgSend(v1, "navigationBar");
  v4 = objc_msgSend(v3, "prefersLargeTitles");

  if (v4)
  {
    v5 = objc_msgSend(v1, "viewControllers");
    v6 = sub_1001EDFE4();
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((v7 & 0xC000000000000001) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        v8 = *(id *)(v7 + 8 * a1 + 32);
LABEL_6:
        v9 = v8;
        v10 = objc_msgSend(v8, "navigationItem", swift_bridgeObjectRelease(v7).n128_f64[0]);
        v11 = objc_msgSend(v10, "largeTitleDisplayMode");

        if (v11)
        {
          v12 = objc_msgSend(v9, "navigationItem");
          objc_msgSend(v12, "largeTitleDisplayMode");

          return;
        }
        if (!a1)
        {

          return;
        }
        if (!__OFSUB__(a1, 1))
        {
          sub_1001EDE58(a1 - 1);

          return;
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v7);
    goto LABEL_6;
  }
}

unint64_t sub_1001EDFE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8D70;
  if (!qword_1009D8D70)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D8D70);
  }
  return result;
}

BOOL sub_1001EE020(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_1001EE038()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001EE07C()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001EE0A4(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1001EE0E4(float a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  const char *v25;
  char *v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)v55 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v55 - v14;
  if (a1 != 0.5)
  {
    if (a1 == 1.0)
    {
      v21 = String.LocalizationValue.init(stringLiteral:)(0x73206C616D726F4ELL, 0xEC00000064656570);
      static Locale.current.getter(v21);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      v22 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "Accessibility normal speed playback";
    }
    else
    {
      if (a1 == 1.5)
      {
        v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007B53B0);
        static Locale.current.getter(v30);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
        v31 = type metadata accessor for BundleFinder();
        v32 = swift_getObjCClassFromMetadata(v31);
        v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v32);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
        v25 = "Accessibility one and a half speed playback";
        v26 = v13;
        v27 = v33;
        v28 = v6;
        v29 = 43;
        goto LABEL_8;
      }
      if (a1 == 2.0)
      {
        v36 = String.LocalizationValue.init(stringLiteral:)(0x7320656C62756F44, 0xEC00000064656570);
        static Locale.current.getter(v36);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
        v37 = type metadata accessor for BundleFinder();
        v38 = swift_getObjCClassFromMetadata(v37);
        v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v38);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
        v25 = "Accessibility double speed playback";
      }
      else
      {
        if (a1 != 3.0)
        {
          v42 = String.LocalizationValue.init(stringLiteral:)(0x6565707320784025, 0xE900000000000064);
          static Locale.current.getter(v42);
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
          v43 = type metadata accessor for BundleFinder();
          v44 = swift_getObjCClassFromMetadata(v43);
          v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v44);
          (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
          v46 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v45, v6, "Accessibility incremental speed playback", 40, 2);
          v48 = v47;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
          v49 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
          v50 = swift_allocObject(v49, 72, 7);
          v55[0] = xmmword_10070CCA0;
          *(_OWORD *)(v50 + 16) = xmmword_10070CCA0;
          v51 = swift_allocObject(v49, 72, 7);
          *(_OWORD *)(v51 + 16) = v55[0];
          *(_QWORD *)(v51 + 56) = &type metadata for Float;
          *(_QWORD *)(v51 + 64) = &protocol witness table for Float;
          *(float *)(v51 + 32) = a1;
          v52 = String.init(format:_:)(26405, 0xE200000000000000, v51);
          v54 = v53;
          *(_QWORD *)(v50 + 56) = &type metadata for String;
          *(_QWORD *)(v50 + 64) = sub_10002BE50();
          *(_QWORD *)(v50 + 32) = v52;
          *(_QWORD *)(v50 + 40) = v54;
          v34 = String.init(format:_:)(v46, v48, v50);
          swift_bridgeObjectRelease(v48);
          return v34;
        }
        v39 = String.LocalizationValue.init(stringLiteral:)(0x7320656C70697254, 0xEC00000064656570);
        static Locale.current.getter(v39);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
        v40 = type metadata accessor for BundleFinder();
        v41 = swift_getObjCClassFromMetadata(v40);
        v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v41);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
        v25 = "Accessibility triple speed playback";
      }
    }
    v26 = v13;
    v27 = v24;
    v28 = v6;
    v29 = 35;
LABEL_8:
    v20 = String.init(localized:table:bundle:locale:comment:)(v26, 0, 0, v27, v28, v25, v29, 2);
    goto LABEL_9;
  }
  v16 = String.LocalizationValue.init(stringLiteral:)(0x65707320666C6148, 0xEA00000000006465);
  static Locale.current.getter(v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  v18 = swift_getObjCClassFromMetadata(v17);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v18);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v19, v6, "Accessibility half speed playback", 33, 2);
LABEL_9:
  v34 = v20;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v34;
}

double sub_1001EE708()
{
  return sub_1001EED38((uint64_t)&unk_100710470, (uint64_t)&unk_100710498);
}

BOOL sub_1001EE71C(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1001EE730()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007108A8);
  v2 = swift_getKeyPath(&unk_1007108D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001EE7A0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007108F0);
  v2 = swift_getKeyPath(&unk_100710918);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001EE810()
{
  return sub_1001EECBC((uint64_t)&unk_100710740, (uint64_t)&unk_100710768);
}

uint64_t sub_1001EE824()
{
  return sub_1001EECBC((uint64_t)&unk_100710668, (uint64_t)&unk_100710690);
}

uint64_t (*sub_1001EE838())()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  KeyPath = swift_getKeyPath(&unk_100710500);
  v2 = swift_getKeyPath(&unk_100710528);
  static Published.subscript.getter(v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7[0];
  if (!v7[0])
    return 0;
  v4 = v7[1];
  v5 = swift_allocObject(&unk_1008F26F8, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_1001F1574;
}

double sub_1001EE8E0()
{
  return sub_1001EED38((uint64_t)&unk_100710428, (uint64_t)&unk_100710450);
}

double sub_1001EE8F4()
{
  return sub_1001EED38((uint64_t)&unk_1007104B8, (uint64_t)&unk_1007104E0);
}

uint64_t sub_1001EE908()
{
  return sub_1001EECBC((uint64_t)&unk_100710038, (uint64_t)&unk_100710060);
}

uint64_t sub_1001EE91C()
{
  return sub_1001EEA54((uint64_t)&unk_100710080, (uint64_t)&unk_1007100A8);
}

uint64_t sub_1001EE930()
{
  return sub_1001EEAD0((uint64_t)&unk_100710548, (uint64_t)&unk_100710570);
}

uint64_t sub_1001EE944()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007101A0);
  v2 = swift_getKeyPath(&unk_1007101C8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001EE9B4()
{
  return sub_1001EF2E8((uint64_t)&unk_1007106B0, (uint64_t)&unk_1007106D8);
}

uint64_t sub_1001EE9C8()
{
  return sub_1001EF2E8((uint64_t)&unk_1007102C0, (uint64_t)&unk_1007102E8);
}

uint64_t sub_1001EE9DC()
{
  return sub_1001EF2E8((uint64_t)&unk_1007107D0, (uint64_t)&unk_1007107F8);
}

uint64_t sub_1001EE9F0()
{
  return sub_1001EF2E8((uint64_t)&unk_100710620, (uint64_t)&unk_100710648);
}

uint64_t sub_1001EEA04()
{
  return sub_1001EF2E8((uint64_t)&unk_1007101E8, (uint64_t)&unk_100710210);
}

uint64_t sub_1001EEA18()
{
  return sub_1001EF2E8((uint64_t)&unk_100710230, (uint64_t)&unk_100710258);
}

uint64_t sub_1001EEA2C()
{
  return sub_1001EF2E8((uint64_t)&unk_100710308, (uint64_t)&unk_100710330);
}

uint64_t sub_1001EEA40()
{
  return sub_1001EEA54((uint64_t)&unk_100710110, (uint64_t)&unk_100710138);
}

uint64_t sub_1001EEA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001EEABC()
{
  return sub_1001EEAD0((uint64_t)&unk_100710788, (uint64_t)&unk_1007107B0);
}

uint64_t sub_1001EEAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001EEB3C()
{
  return sub_1001EF2E8((uint64_t)&unk_10070FFF0, (uint64_t)&unk_100710018);
}

double sub_1001EEB50()
{
  return sub_1001EED38((uint64_t)&unk_10070FFA8, (uint64_t)&unk_10070FFD0);
}

double sub_1001EEB64()
{
  return sub_1001EED38((uint64_t)&unk_10070FF60, (uint64_t)&unk_10070FF88);
}

uint64_t sub_1001EEB78()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007103E0);
  v2 = swift_getKeyPath(&unk_100710408);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_1001EEBE8()
{
  return sub_1001EED38((uint64_t)&unk_100710818, (uint64_t)&unk_100710840);
}

double sub_1001EEBFC()
{
  return sub_1001EED38((uint64_t)&unk_100710278, (uint64_t)&unk_1007102A0);
}

double sub_1001EEC10()
{
  return sub_1001EED38((uint64_t)&unk_10070FED0, (uint64_t)&unk_10070FEF8);
}

double sub_1001EEC24()
{
  return sub_1001EED38((uint64_t)&unk_10070FE88, (uint64_t)&unk_10070FEB0);
}

float sub_1001EEC38()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100710398);
  v2 = swift_getKeyPath(&unk_1007103C0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return *(float *)&v4;
}

uint64_t sub_1001EECA8()
{
  return sub_1001EECBC((uint64_t)&unk_1007106F8, (uint64_t)&unk_100710720);
}

uint64_t sub_1001EECBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

double sub_1001EED24()
{
  return sub_1001EED38((uint64_t)&unk_100710860, (uint64_t)&unk_100710888);
}

double sub_1001EED38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

float sub_1001EEDA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100710350);
  v2 = swift_getKeyPath(&unk_100710378);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return *(float *)&v4;
}

uint64_t sub_1001EEE10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007100C8);
  v4 = swift_getKeyPath(&unk_1007100F0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1001EEE74()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10070FF18);
  v2 = swift_getKeyPath(&unk_10070FF40);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001EEEE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 40, 7);
}

Swift::Int sub_1001EEF08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt64 v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v1 = v0[2];
  v2 = v0[3];
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v2);
  if ((v0[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v0[4];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001EEF7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Identifiable<>.id.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EEFA4()
{
  return sub_1001EEA54((uint64_t)&unk_1007105D8, (uint64_t)&unk_100710600);
}

Swift::Int sub_1001EEFB8()
{
  return sub_1001EEF08();
}

void sub_1001EEFD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::UInt64 v6;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  if ((*(_QWORD *)(v3 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)(v3 + 32);
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
}

Swift::Int sub_1001EF038(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = (_QWORD *)*v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = v2[2];
  v4 = v2[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v4);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v2[4];
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_1001EF0AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  char v11;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(double *)(v2 + 32);
  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(double *)(v3 + 32);
  if (v4 == v7 && v5 == v8)
    return v6 == v9;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v7, v8, 0);
  result = 0;
  if ((v11 & 1) != 0)
    return v6 == v9;
  return result;
}

uint64_t sub_1001EF104()
{
  return sub_1001EEA54((uint64_t)&unk_100710158, (uint64_t)&unk_100710180);
}

Swift::Int sub_1001EF118()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = (void *)v0[2];
  Hasher.init(_seed:)(v5, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v2);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v3, "hash"));
  return Hasher._finalize()();
}

void sub_1001EF194(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v1;
  v4 = v1[1];
  v5 = (void *)v1[2];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v5, "hash"));
}

Swift::Int sub_1001EF1F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = (void *)v1[2];
  Hasher.init(_seed:)(v6, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v3);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v4, "hash"));
  return Hasher._finalize()();
}

id sub_1001EF270(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id result;

  v4 = *a1;
  v5 = a1[1];
  v6 = (void *)a1[2];
  v7 = a2[1];
  v8 = a2[2];
  if (v4 == *a2 && v5 == v7)
    return objc_msgSend(v6, "isEqual:", v8);
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v7, 0);
  result = 0;
  if ((v10 & 1) != 0)
    return objc_msgSend(v6, "isEqual:", v8);
  return result;
}

uint64_t sub_1001EF2D4()
{
  return sub_1001EF2E8((uint64_t)&unk_100710590, (uint64_t)&unk_1007105B8);
}

uint64_t sub_1001EF2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001EF350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v53 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v53 - v13;
  KeyPath = swift_getKeyPath(&unk_100710740);
  v16 = swift_getKeyPath(&unk_100710768);
  static Published.subscript.getter(&v56, v1, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = v57;
  v18 = sub_1001F15BC();
  LOBYTE(KeyPath) = Collection.isNotEmpty.getter(&type metadata for String, v18);
  swift_bridgeObjectRelease(v17);
  if ((KeyPath & 1) == 0)
    goto LABEL_4;
  v19 = swift_getKeyPath(&unk_100710668);
  v20 = swift_getKeyPath(&unk_100710690);
  static Published.subscript.getter(&v56, v1, v19, v20);
  swift_release(v19);
  swift_release(v20);
  v21 = v57;
  LOBYTE(v19) = Collection.isNotEmpty.getter(&type metadata for String, v18);
  swift_bridgeObjectRelease(v21);
  if ((v19 & 1) != 0)
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0x4025202D204025, 0xE700000000000000);
    static Locale.current.getter(v22);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    v23 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v27 = v54;
    v26 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v5, v7, v55);
    v28 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v25, v5, "Format string for merging the book title and author string into one label", 73, 2);
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v31 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v32 = swift_allocObject(v31, 112, 7);
    *(_OWORD *)(v32 + 16) = xmmword_10070FC00;
    v33 = swift_getKeyPath(&unk_100710740);
    v34 = swift_getKeyPath(&unk_100710768);
    static Published.subscript.getter(&v56, v1, v33, v34);
    swift_release(v33);
    swift_release(v34);
    v35 = v56;
    v36 = v57;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    v37 = sub_10002BE50();
    *(_QWORD *)(v32 + 64) = v37;
    *(_QWORD *)(v32 + 32) = v35;
    *(_QWORD *)(v32 + 40) = v36;
    v38 = swift_getKeyPath(&unk_100710668);
    v39 = swift_getKeyPath(&unk_100710690);
    static Published.subscript.getter(&v56, v1, v38, v39);
    swift_release(v38);
    swift_release(v39);
    v40 = v56;
    v41 = v57;
    *(_QWORD *)(v32 + 96) = &type metadata for String;
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 72) = v40;
    *(_QWORD *)(v32 + 80) = v41;
    v42 = String.init(format:_:)(v28, v30, v32);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
LABEL_4:
    v43 = swift_getKeyPath(&unk_100710740);
    v44 = swift_getKeyPath(&unk_100710768);
    static Published.subscript.getter(&v56, v1, v43, v44);
    swift_release(v43);
    swift_release(v44);
    v45 = v57;
    LOBYTE(v43) = Collection.isNotEmpty.getter(&type metadata for String, v18);
    swift_bridgeObjectRelease(v45);
    if ((v43 & 1) != 0)
    {
      v46 = swift_getKeyPath(&unk_100710740);
      v47 = &unk_100710768;
    }
    else
    {
      v48 = swift_getKeyPath(&unk_100710668);
      v49 = swift_getKeyPath(&unk_100710690);
      static Published.subscript.getter(&v56, v1, v48, v49);
      swift_release(v48);
      swift_release(v49);
      v50 = v57;
      LOBYTE(v48) = Collection.isNotEmpty.getter(&type metadata for String, v18);
      swift_bridgeObjectRelease(v50);
      if ((v48 & 1) == 0)
        return 0;
      v46 = swift_getKeyPath(&unk_100710668);
      v47 = &unk_100710690;
    }
    v51 = swift_getKeyPath(v47);
    static Published.subscript.getter(&v56, v1, v46, v51);
    swift_release(v46);
    swift_release(v51);
    return v56;
  }
  return v42;
}

id sub_1001EF854()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  objc_class *ObjectType;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  objc_super v142;
  char v143[8];
  _OWORD v144[2];
  uint64_t v145;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_10004CFD4(&qword_1009D1980);
  v133 = *(_QWORD *)(v2 - 8);
  v134 = v2;
  __chkstk_darwin(v2);
  v132 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_10004CFD4(&qword_1009D1988);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10004CFD4((uint64_t *)&unk_1009D1990);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10004CFD4((uint64_t *)&unk_1009DC000);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10004CFD4(&qword_1009D19A0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10004CFD4(&qword_1009D19A8);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_10004CFD4((uint64_t *)&unk_1009D19B0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v101 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10004CFD4(&qword_1009D19C0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_10004CFD4(&qword_1009D19C8);
  v106 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v138 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  v105 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v137 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10004CFD4(&qword_1009D4E10);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10004CFD4(&qword_1009D19E0);
  v111 = *(void (**)(char *, char *, uint64_t))(v139 - 8);
  __chkstk_darwin(v139);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10004CFD4(&qword_1009D19E8);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D19F0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D4E40);
  v24 = *(_QWORD *)(v23 - 8);
  v136 = v23;
  __chkstk_darwin(v23);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &v1[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__absolutePlayedInterval];
  *(_QWORD *)&v144[0] = 0;
  v28 = v1;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v29 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v29(v27, v26, v23);
  v30 = v29;
  v31 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__artwork];
  *(_QWORD *)&v144[0] = 0;
  v32 = sub_10004CFD4(&qword_1009D17F8);
  Published.init(initialValue:)(v144, v32);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v31, v22, v19);
  v33 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__assetID];
  v144[0] = 0uLL;
  v34 = sub_10004CFD4(&qword_1009D2A80);
  Published.init(initialValue:)(v144, v34);
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v33, v18, v100);
  v35 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__audiobookTitle];
  *(_QWORD *)&v144[0] = 0;
  *((_QWORD *)&v144[0] + 1) = 0xE000000000000000;
  Published.init(initialValue:)(v144, &type metadata for String);
  v36 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v111 + 4);
  v37 = v139;
  v36(v35, v16, v139);
  v38 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__authorName];
  *(_QWORD *)&v144[0] = 0;
  *((_QWORD *)&v144[0] + 1) = 0xE000000000000000;
  Published.init(initialValue:)(v144, &type metadata for String);
  v36(v38, v16, v37);
  v111 = v36;
  v39 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__backgroundColorClosure];
  v144[0] = 0uLL;
  v40 = sub_10004CFD4(&qword_1009D1820);
  v41 = v102;
  Published.init(initialValue:)(v144, v40);
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v39, v41, v104);
  v42 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__bufferedProportion];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v43 = v136;
  v44 = v30;
  v30(v42, v26, v136);
  v45 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterPlayedProportion];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v30(v45, v26, v43);
  v46 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterTitle];
  *(_QWORD *)&v144[0] = 0;
  *((_QWORD *)&v144[0] + 1) = 0xE000000000000000;
  v110 = v16;
  Published.init(initialValue:)(v144, &type metadata for String);
  v36(v46, v16, v37);
  v47 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__currentChapterIndex];
  *(_QWORD *)&v144[0] = 0;
  v48 = v137;
  Published.init(initialValue:)(v144, &type metadata for Int);
  v105 = *(_QWORD *)(v105 + 32);
  ((void (*)(char *, char *, uint64_t))v105)(v47, v48, v140);
  v49 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadProgress];
  *(_QWORD *)&v144[0] = 0;
  BYTE8(v144[0]) = 1;
  v104 = sub_10004CFD4(&qword_1009D1838);
  v50 = v138;
  Published.init(initialValue:)(v144, v104);
  v106 = *(_QWORD *)(v106 + 32);
  ((void (*)(char *, char *, uint64_t))v106)(v49, v50, v141);
  v51 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadState];
  LOBYTE(v144[0]) = 3;
  v52 = sub_10004CFD4(&qword_1009D1848);
  v53 = v107;
  Published.init(initialValue:)(v144, v52);
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v51, v53, v109);
  v54 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isFirstEverLaunch];
  LOBYTE(v144[0]) = 0;
  v55 = v101;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
  v57 = v113;
  v56(v54, v55, v113);
  v58 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isLoadingResources];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v58, v55, v57);
  v59 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPlaying];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v59, v55, v57);
  v60 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPreview];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v60, v55, v57);
  v61 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isScrubbing];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v61, v55, v57);
  v62 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isSkipping];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v62, v55, v57);
  v63 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isStalling];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v63, v55, v57);
  v64 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartChapterIndex];
  *(_QWORD *)&v144[0] = 0;
  v65 = v137;
  Published.init(initialValue:)(v144, &type metadata for Int);
  ((void (*)(char *, char *, uint64_t))v105)(v64, v65, v140);
  v66 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartTimeProportion];
  *(_QWORD *)&v144[0] = 0;
  BYTE8(v144[0]) = 1;
  v67 = v138;
  Published.init(initialValue:)(v144, v104);
  ((void (*)(char *, char *, uint64_t))v106)(v66, v67, v141);
  v68 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__multipleRoutes];
  LOBYTE(v144[0]) = 1;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v69 = v57;
  v56(v68, v55, v57);
  v70 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipBackwardInterval];
  *(_QWORD *)&v144[0] = 0x402E000000000000;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v71 = v136;
  v44(v70, v26, v136);
  v72 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipForwardInterval];
  *(_QWORD *)&v144[0] = 0x402E000000000000;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v72, v26, v71);
  v73 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playButtonState];
  LOBYTE(v144[0]) = 0;
  v74 = v114;
  Published.init(initialValue:)(v144, &type metadata for AudiobookNowPlaying.ButtonState);
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v73, v74, v116);
  v75 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playedInterval];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v75, v26, v71);
  v76 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skippingCumulativeDelta];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v76, v26, v71);
  v77 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerInitialDuration];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v77, v26, v71);
  v78 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerRemainingTime];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v78, v26, v71);
  v79 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playbackRate];
  LODWORD(v144[0]) = 0;
  v80 = v117;
  Published.init(initialValue:)(v144, &type metadata for AudiobookNowPlaying.PlaybackRate);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v79, v80, v119);
  v81 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__widestRateString];
  *(_QWORD *)&v144[0] = 0;
  *((_QWORD *)&v144[0] + 1) = 0xE000000000000000;
  v82 = v110;
  Published.init(initialValue:)(v144, &type metadata for String);
  v111(v81, v82, v139);
  v83 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__toPlayInterval];
  *(_QWORD *)&v144[0] = 0;
  Published.init(initialValue:)(v144, &type metadata for Double);
  v44(v83, v26, v71);
  v84 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__volume];
  LODWORD(v144[0]) = 1065353216;
  v85 = v120;
  Published.init(initialValue:)(v144, &type metadata for Float);
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v84, v85, v122);
  v86 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__buyButtonProvider];
  v145 = 0;
  memset(v144, 0, sizeof(v144));
  sub_1001F1600((uint64_t)v144, (uint64_t)v143);
  v87 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  v88 = v123;
  Published.init(initialValue:)(v143, v87);
  sub_1001F1648((uint64_t)v144);
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v86, v88, v125);
  v89 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerSelectedOption];
  *(_QWORD *)&v144[0] = 0;
  v90 = v126;
  Published.init(initialValue:)(v144, &type metadata for AudiobookNowPlayingSleepTimerOption);
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v89, v90, v128);
  v91 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapters];
  *(_QWORD *)&v144[0] = _swiftEmptyArrayStorage;
  v92 = sub_10004CFD4(&qword_1009D1890);
  v93 = v129;
  Published.init(initialValue:)(v144, v92);
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v91, v93, v131);
  v94 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__supplementalContents];
  *(_QWORD *)&v144[0] = _swiftEmptyArrayStorage;
  v95 = sub_10004CFD4(&qword_1009D18A0);
  v96 = v132;
  Published.init(initialValue:)(v144, v95);
  (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v94, v96, v134);
  v97 = &v28[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isSG];
  LOBYTE(v144[0]) = 0;
  Published.init(initialValue:)(v144, &type metadata for Bool);
  v56(v97, v55, v69);

  v142.receiver = v28;
  v142.super_class = ObjectType;
  return objc_msgSendSuper2(&v142, "init");
}

id AudiobookNowPlayingFullscreenTouchViewController.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1001F0C74()
{
  return type metadata accessor for AudiobookNowPlayingViewModel(0);
}

uint64_t type metadata accessor for AudiobookNowPlayingViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D17D8;
  if (!qword_1009D17D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookNowPlayingViewModel);
  return result;
}

void sub_1001F0CB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[38];

  sub_1001F1000(319, &qword_1009D17E8, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v39[0] = v4;
    sub_1001F1044(319, (unint64_t *)&qword_1009D17F0, &qword_1009D17F8);
    if (v6 <= 0x3F)
    {
      v39[1] = *(_QWORD *)(v5 - 8) + 64;
      sub_1001F1044(319, (unint64_t *)&unk_1009D1800, &qword_1009D2A80);
      if (v8 <= 0x3F)
      {
        v39[2] = *(_QWORD *)(v7 - 8) + 64;
        sub_1001F1000(319, &qword_1009D1810, (uint64_t)&type metadata for String);
        if (v10 <= 0x3F)
        {
          v11 = *(_QWORD *)(v9 - 8) + 64;
          v39[3] = v11;
          v39[4] = v11;
          sub_1001F1044(319, &qword_1009D1818, &qword_1009D1820);
          if (v13 <= 0x3F)
          {
            v39[5] = *(_QWORD *)(v12 - 8) + 64;
            v39[6] = v4;
            v39[7] = v4;
            v39[8] = v11;
            sub_1001F1000(319, (unint64_t *)&qword_1009D1828, (uint64_t)&type metadata for Int);
            if (v15 <= 0x3F)
            {
              v16 = *(_QWORD *)(v14 - 8) + 64;
              v39[9] = v16;
              sub_1001F1044(319, &qword_1009D1830, &qword_1009D1838);
              if (v18 <= 0x3F)
              {
                v19 = *(_QWORD *)(v17 - 8) + 64;
                v39[10] = v19;
                sub_1001F1044(319, &qword_1009D1840, &qword_1009D1848);
                if (v21 <= 0x3F)
                {
                  v39[11] = *(_QWORD *)(v20 - 8) + 64;
                  sub_1001F1000(319, (unint64_t *)&qword_1009D1850, (uint64_t)&type metadata for Bool);
                  if (v23 <= 0x3F)
                  {
                    v24 = *(_QWORD *)(v22 - 8) + 64;
                    v39[12] = v24;
                    v39[13] = v24;
                    v39[14] = v24;
                    v39[15] = v24;
                    v39[16] = v24;
                    v39[17] = v24;
                    v39[18] = v24;
                    v39[19] = v16;
                    v39[20] = v19;
                    v39[21] = v24;
                    v39[22] = v4;
                    v39[23] = v4;
                    sub_1001F1000(319, &qword_1009D1858, (uint64_t)&type metadata for AudiobookNowPlaying.ButtonState);
                    if (v26 <= 0x3F)
                    {
                      v39[24] = *(_QWORD *)(v25 - 8) + 64;
                      v39[25] = v4;
                      v39[26] = v4;
                      v39[27] = v4;
                      v39[28] = v4;
                      sub_1001F1000(319, &qword_1009D1860, (uint64_t)&type metadata for AudiobookNowPlaying.PlaybackRate);
                      if (v28 <= 0x3F)
                      {
                        v39[29] = *(_QWORD *)(v27 - 8) + 64;
                        v39[30] = v11;
                        v39[31] = v4;
                        sub_1001F1000(319, &qword_1009D1868, (uint64_t)&type metadata for Float);
                        if (v30 <= 0x3F)
                        {
                          v39[32] = *(_QWORD *)(v29 - 8) + 64;
                          sub_1001F1044(319, (unint64_t *)&qword_1009D1870, (uint64_t *)&unk_1009D4CE0);
                          if (v32 <= 0x3F)
                          {
                            v39[33] = *(_QWORD *)(v31 - 8) + 64;
                            sub_1001F1000(319, &qword_1009D1880, (uint64_t)&type metadata for AudiobookNowPlayingSleepTimerOption);
                            if (v34 <= 0x3F)
                            {
                              v39[34] = *(_QWORD *)(v33 - 8) + 64;
                              sub_1001F1044(319, &qword_1009D1888, &qword_1009D1890);
                              if (v36 <= 0x3F)
                              {
                                v39[35] = *(_QWORD *)(v35 - 8) + 64;
                                sub_1001F1044(319, &qword_1009D1898, &qword_1009D18A0);
                                if (v38 <= 0x3F)
                                {
                                  v39[36] = *(_QWORD *)(v37 - 8) + 64;
                                  v39[37] = v24;
                                  swift_updateClassMetadata2(a1, 256, 38, v39, a1 + 80);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1001F1000(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1001F1044(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100030B74(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for AudiobookNowPlayingViewModel.Chapter()
{
  return objc_opt_self(_TtCC5Books28AudiobookNowPlayingViewModel7Chapter);
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying()
{
  return &type metadata for AudiobookNowPlaying;
}

uint64_t destroy for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s5Books28AudiobookNowPlayingViewModelC19SupplementalContentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for AudiobookNowPlayingViewModel.SupplementalContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for AudiobookNowPlayingViewModel.SupplementalContent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for AudiobookNowPlayingViewModel.SupplementalContent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingViewModel.SupplementalContent()
{
  return &type metadata for AudiobookNowPlayingViewModel.SupplementalContent;
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying.PlaybackRate()
{
  return &type metadata for AudiobookNowPlaying.PlaybackRate;
}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlaying.ButtonState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F12D8 + 4 * byte_10070FC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F130C + 4 * byte_10070FC10[v4]))();
}

uint64_t sub_1001F130C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F1314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F131CLL);
  return result;
}

uint64_t sub_1001F1328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F1330);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F1334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F133C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1001F1348(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying.ButtonState()
{
  return &type metadata for AudiobookNowPlaying.ButtonState;
}

unint64_t sub_1001F1368()
{
  unint64_t result;

  result = qword_1009D1950;
  if (!qword_1009D1950)
  {
    result = swift_getWitnessTable(&unk_10070FCF8, &type metadata for AudiobookNowPlaying.ButtonState);
    atomic_store(result, (unint64_t *)&qword_1009D1950);
  }
  return result;
}

unint64_t sub_1001F13B0()
{
  unint64_t result;

  result = qword_1009D1958;
  if (!qword_1009D1958)
  {
    result = swift_getWitnessTable(&unk_10070FD48, &type metadata for AudiobookNowPlayingViewModel.SupplementalContent);
    atomic_store(result, (unint64_t *)&qword_1009D1958);
  }
  return result;
}

unint64_t sub_1001F13F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1960;
  if (!qword_1009D1960)
  {
    v1 = type metadata accessor for AudiobookNowPlayingViewModel.Chapter();
    result = swift_getWitnessTable(&unk_10070FDB0, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1960);
  }
  return result;
}

void *sub_1001F143C()
{
  return &protocol witness table for ObjectIdentifier;
}

void *sub_1001F1448()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1001F1454@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType(v2, a1);
  result = ObservableObject<>.objectWillChange.getter(ObjectType, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001F1550()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F1574()
{
  uint64_t v0;

  return sub_1004CA148(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

unint64_t sub_1001F15BC()
{
  unint64_t result;

  result = qword_1009D2390;
  if (!qword_1009D2390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009D2390);
  }
  return result;
}

uint64_t sub_1001F1600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F1648(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F16B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1001F16D0, 0, 0);
}

uint64_t sub_1001F16D0()
{
  uint64_t v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), "activeCookiesForDefaultURL");
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  v3 = sub_1001F1C4C();
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, v3, &protocol witness table for String);

  if (!*(_QWORD *)(v4 + 16) || (v5 = sub_10004CE80(0x62615F7078, 0xE500000000000000), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease(v4);
LABEL_7:
    v9 = 0;
LABEL_8:
    v16 = 0;
    return (*(uint64_t (**)(void *, uint64_t))(v0 + 8))(v9, v16);
  }
  v7 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  swift_bridgeObjectRelease(v4);
  v8 = objc_msgSend(v7, "value");
  v9 = v8;
  if (!v8)
  {

    goto LABEL_8;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  v13 = sub_1001F1C88(v10, v12);
  swift_bridgeObjectRelease(v12);
  v9 = (void *)sub_1001F1F0C((uint64_t)v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);

  return (*(uint64_t (**)(void *, uint64_t))(v0 + 8))(v9, v16);
}

uint64_t sub_1001F1850()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_1001F1884()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc(dword_1009D1BE4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001F18E4;
  v3[2] = v2;
  return swift_task_switch(sub_1001F16D0, 0, 0);
}

uint64_t sub_1001F18E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *v3;
  v8 = swift_task_dealloc(v6);
  if (!v2)
  {
    v8 = a1;
    v9 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
}

uint64_t sub_1001F1948(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = v4 == *a2 && v5 == v8;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v8, 0), result = 0, (v12 & 1) != 0))
  {
    if (v6 == v9 && v7 == v10)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
  }
  return result;
}

uint64_t sub_1001F19E4@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  uint64_t *v43;

  v43 = a2;
  v5 = sub_10004CFD4(&qword_1009D1BF0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_QWORD *)a1 + 2);
  v10 = *((_QWORD *)a1 + 3);
  v39 = *a1;
  v40 = v9;
  v41 = v10;
  Regex.init(_regexString:version:)(0x2B5B2A2E5D2B5B2FLL, 0xEA00000000002F5DLL, 1, &type metadata for Substring);
  v38[0] = 58;
  v38[1] = 0xE100000000000000;
  v11 = sub_1001F214C();
  v12 = sub_1001F15BC();
  v13 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)(v42, v8, v38, 0x7FFFFFFFFFFFFFFFLL, &type metadata for Substring, &type metadata for String, v5, v11, v12, v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v42[3];
  v15 = sub_1001F2190();
  v16 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(58, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for Substring, v15);
  swift_bridgeObjectRelease(v14);
  if (v16[2] == 2)
  {
    v17 = v16[4];
    v18 = v16[5];
    v19 = v16[6];
    v20 = v16[7];
    v21 = swift_bridgeObjectRetain(v20);
    v22 = static String._fromSubstring(_:)(v17, v18, v19, v20, v21);
    v24 = v23;
    result = swift_bridgeObjectRelease(v20);
    if (v16[2] < 2uLL)
    {
      __break(1u);
    }
    else
    {
      v26 = v16[8];
      v27 = v16[9];
      v28 = v16[10];
      v29 = v16[11];
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease(v16);
      v31 = static String._fromSubstring(_:)(v26, v27, v28, v29, v30);
      v33 = v32;
      result = swift_bridgeObjectRelease(v29);
      *a3 = v22;
      a3[1] = v24;
      a3[2] = v31;
      a3[3] = v33;
    }
  }
  else
  {
    v34 = sub_1001F21D4();
    v35 = swift_allocError(&type metadata for ExperimentIDsCookieParser.Errors, v34, 0, 0);
    *v36 = v16;
    result = swift_willThrow(v35);
    *v43 = v35;
  }
  return result;
}

uint64_t EditionStringFlatteningService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

unint64_t sub_1001F1C4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1BE8;
  if (!qword_1009D1BE8)
  {
    v1 = objc_opt_self(JSACookie);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D1BE8);
  }
  return result;
}

_QWORD *sub_1001F1C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D1BF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v31 = a1;
  *((_QWORD *)&v31 + 1) = a2;
  Regex.init(_regexString:version:)(0x2B5D392D305B5E2FLL, 0xEA00000000002F23, 1, &type metadata for Substring);
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  v10 = sub_1001F20C4();
  v11 = sub_1001F15BC();
  v12 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)(&v34, v9, v38, 0x7FFFFFFFFFFFFFFFLL, &type metadata for String, &type metadata for String, v6, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v35;
  v14 = sub_1001F2108();
  v15 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(35, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v14);
  swift_bridgeObjectRelease(v13);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v38[0] = _swiftEmptyArrayStorage;
    sub_100366A24(0, v16, 0);
    v17 = v38[0];
    v29 = v15;
    v18 = (uint64_t *)(v15 + 56);
    while (1)
    {
      v19 = *(v18 - 1);
      v20 = *v18;
      v31 = *(_OWORD *)(v18 - 3);
      v32 = v19;
      v33 = v20;
      swift_bridgeObjectRetain(v20);
      sub_1001F19E4(&v31, &v39, &v34);
      if (v3)
        break;
      v30 = 0;
      swift_bridgeObjectRelease(v20);
      v21 = v34;
      v22 = v35;
      v24 = v36;
      v23 = v37;
      v38[0] = v17;
      v26 = *(_QWORD *)(v17 + 16);
      v25 = *(_QWORD *)(v17 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_100366A24(v25 > 1, v26 + 1, 1);
        v17 = v38[0];
      }
      *(_QWORD *)(v17 + 16) = v26 + 1;
      v27 = (_QWORD *)(v17 + 32 * v26);
      v27[4] = v21;
      v27[5] = v22;
      v27[6] = v24;
      v27[7] = v23;
      v18 += 4;
      --v16;
      v3 = v30;
      if (!v16)
      {
        swift_bridgeObjectRelease(v29);
        return (_QWORD *)v17;
      }
    }
    swift_bridgeObjectRelease(v29);
    swift_release(v17);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v17;
}

uint64_t sub_1001F1F0C(uint64_t a1)
{
  int64_t v1;
  void **v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100045E44(0, v1, 0);
    v3 = (void **)(a1 + 56);
    do
    {
      v4 = (uint64_t)*(v3 - 1);
      v5 = *v3;
      v19 = (uint64_t)*(v3 - 3);
      v20 = (uint64_t)*(v3 - 2);
      swift_bridgeObjectRetain_n(v20, 2);
      swift_bridgeObjectRetain(v5);
      v6._countAndFlagsBits = 58;
      v6._object = (void *)0xE100000000000000;
      String.append(_:)(v6);
      swift_bridgeObjectRetain(v20);
      v7._countAndFlagsBits = v4;
      v7._object = v5;
      String.append(_:)(v7);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v20);
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_100045E44(v8 > 1, v9 + 1, 1);
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v19;
      v10[5] = v20;
      --v1;
    }
    while (v1);
  }
  v11 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v12 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v11, v12);
  v15 = v14;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._countAndFlagsBits = 125;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  return 123;
}

unint64_t sub_1001F20C4()
{
  unint64_t result;

  result = qword_1009D1BF8;
  if (!qword_1009D1BF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009D1BF8);
  }
  return result;
}

unint64_t sub_1001F2108()
{
  unint64_t result;

  result = qword_1009DE6D0;
  if (!qword_1009DE6D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009DE6D0);
  }
  return result;
}

unint64_t sub_1001F214C()
{
  unint64_t result;

  result = qword_1009D1C08;
  if (!qword_1009D1C08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1009D1C08);
  }
  return result;
}

unint64_t sub_1001F2190()
{
  unint64_t result;

  result = qword_1009D1C10;
  if (!qword_1009D1C10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1009D1C10);
  }
  return result;
}

unint64_t sub_1001F21D4()
{
  unint64_t result;

  result = qword_1009D1C18;
  if (!qword_1009D1C18)
  {
    result = swift_getWitnessTable(&unk_100710A4C, &type metadata for ExperimentIDsCookieParser.Errors);
    atomic_store(result, (unint64_t *)&qword_1009D1C18);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ExperimentIDsCookieParser.Errors(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ExperimentIDsCookieParser.Errors(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for ExperimentIDsCookieParser.Errors(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *initializeWithTake for ExperimentIDsCookieParser.Errors(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *assignWithTake for ExperimentIDsCookieParser.Errors(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentIDsCookieParser.Errors(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentIDsCookieParser.Errors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentIDsCookieParser.Errors()
{
  return &type metadata for ExperimentIDsCookieParser.Errors;
}

uint64_t destroy for ExperimentIDEntry(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ExperimentIDEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for ExperimentIDEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for ExperimentIDEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentIDEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentIDEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentIDEntry()
{
  return &type metadata for ExperimentIDEntry;
}

uint64_t sub_1001F2508(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t destroy for HistoryButton(uint64_t a1)
{

  sub_1001F2564(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1001F2564(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 80));
  return swift_release(*(_QWORD *)(a1 + 104));
}

uint64_t sub_1001F2564(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t initializeWithCopy for HistoryButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = v4;
  sub_1001F2508(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  sub_1001F2508(v9, v10);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  swift_retain(v13);
  return a1;
}

uint64_t assignWithCopy for HistoryButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  sub_1001F2508(v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  sub_1001F2564(v9, v10);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  sub_1001F2508(v11, v12);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v12;
  sub_1001F2564(v13, v14);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 80);
  v18 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v17;
  swift_retain(v17);
  swift_release(v18);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v20;
  swift_retain(v20);
  swift_release(v19);
  return a1;
}

__n128 initializeWithTake for HistoryButton(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for HistoryButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1001F2564(v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1001F2564(v9, v10);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v13);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryButton()
{
  return &type metadata for HistoryButton;
}

uint64_t sub_1001F28A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008676F4, 1);
}

uint64_t sub_1001F28B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  _QWORD *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  int v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t KeyPath;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  double v84;
  double v85;
  uint64_t OpaqueTypeConformance2;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t result;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  unint64_t v128;
  uint64_t v129;
  double v130;
  double v131;
  __int128 v132;
  unint64_t v133;

  v2 = v1;
  v126 = a1;
  v114 = type metadata accessor for HighlightHoverEffect(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_10004CFD4(&qword_1009D1CB8);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_10004CFD4(&qword_1009D1CA8);
  __chkstk_darwin(v108);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10004CFD4(&qword_1009D1C90);
  __chkstk_darwin(v111);
  v9 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_10004CFD4(&qword_1009D1CD8);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D1C78);
  __chkstk_darwin(v11);
  v13 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_10004CFD4(&qword_1009D1CE0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_10004CFD4(&qword_1009D1C70);
  v15 = __chkstk_darwin(v124);
  v122 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v123 = (char *)&v107 - v18;
  __chkstk_darwin(v17);
  v125 = (char *)&v107 - v19;
  v132 = *(_OWORD *)(v1 + 88);
  v133 = *(_QWORD *)(v1 + 104);
  v127 = *(_OWORD *)(v1 + 88);
  v128 = *(_QWORD *)(v1 + 104);
  sub_10004CFD4(&qword_1009D1CE8);
  State.wrappedValue.getter(&v130);
  v20 = 0.0;
  v21 = 0.0;
  if (v130 != 0.0)
  {
    if (qword_1009CE590 != -1)
      swift_once(&qword_1009CE590, sub_100478EE4);
    v22 = *(double *)&static REConstants.tapTargetSize;
    v127 = v132;
    v128 = v133;
    State.wrappedValue.getter(&v130);
    if ((v22 - v130) * 0.5 < 0.0)
      v21 = 0.0;
    else
      v21 = (v22 - v130) * 0.5;
  }
  v127 = v132;
  v128 = v133;
  v23 = State.wrappedValue.getter(&v130);
  if (v131 != 0.0)
  {
    if (qword_1009CE590 != -1)
      swift_once(&qword_1009CE590, sub_100478EE4);
    v24 = *(double *)&static REConstants.tapTargetSize;
    v127 = v132;
    v128 = v133;
    v23 = State.wrappedValue.getter(&v130);
    if ((v24 - v131) * 0.5 < 0.0)
      v20 = 0.0;
    else
      v20 = (v24 - v131) * 0.5;
  }
  v118 = v11;
  v25 = *(_QWORD *)(v1 + 72);
  v26 = *(_QWORD *)(v2 + 80);
  __chkstk_darwin(v23);
  *(&v107 - 4) = v2;
  *((double *)&v107 - 3) = v20;
  *((double *)&v107 - 2) = v21;
  swift_retain(v26);
  v27 = sub_10004CFD4(&qword_1009D1CF0);
  v28 = sub_1001F4E8C();
  v29 = Button.init(action:label:)(v25, v26, sub_1001F4E80, &v107 - 6, v27, v28);
  v30 = static Edge.Set.top.getter(v29);
  v31 = v30;
  v32 = static Edge.Set.bottom.getter(v30);
  v33 = Edge.Set.init(rawValue:)(0);
  v34 = Edge.Set.init(rawValue:)(v33);
  if (Edge.Set.init(rawValue:)(v34 & v31) != v31)
    v33 = Edge.Set.init(rawValue:)(v33 | v31);
  v35 = Edge.Set.init(rawValue:)(v33);
  if (Edge.Set.init(rawValue:)(v35 & v32) != v32)
    LOBYTE(v33) = Edge.Set.init(rawValue:)(v33 | v32);
  v36 = EdgeInsets.init(_all:)(-v20);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v109;
  v44 = v110;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v7, v5, v110);
  v45 = &v7[*(int *)(v108 + 36)];
  *v45 = v33;
  *((double *)v45 + 1) = v36;
  *((_QWORD *)v45 + 2) = v38;
  *((_QWORD *)v45 + 3) = v40;
  *((_QWORD *)v45 + 4) = v42;
  v45[40] = 0;
  v46 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v5, v44);
  v47 = static Edge.Set.leading.getter(v46);
  v48 = static Edge.Set.trailing.getter();
  v49 = Edge.Set.init(rawValue:)(0);
  v50 = Edge.Set.init(rawValue:)(v49);
  if (Edge.Set.init(rawValue:)(v50 & v47) != v47)
    v49 = Edge.Set.init(rawValue:)(v49 | v47);
  v51 = Edge.Set.init(rawValue:)(v49);
  if (Edge.Set.init(rawValue:)(v51 & v48) != v48)
    LOBYTE(v49) = Edge.Set.init(rawValue:)(v49 | v48);
  v52 = v118;
  v53 = EdgeInsets.init(_all:)(-v21);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v9, &qword_1009D1CA8);
  v60 = v111;
  v61 = &v9[*(int *)(v111 + 36)];
  *v61 = v49;
  *((double *)v61 + 1) = v53;
  *((_QWORD *)v61 + 2) = v55;
  *((_QWORD *)v61 + 3) = v57;
  *((_QWORD *)v61 + 4) = v59;
  v61[40] = 0;
  v62 = sub_100010960((uint64_t)v7, &qword_1009D1CA8);
  v63 = v112;
  static CustomHoverEffect<>.highlight.getter(v62);
  v64 = sub_1001F5558(&qword_1009D1C98, &qword_1009D1C90, (void (*)(void))sub_1001F4DFC);
  v65 = sub_100008DB0(&qword_1009D1CC0, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightHoverEffect, (uint64_t)&protocol conformance descriptor for HighlightHoverEffect);
  v66 = v115;
  v67 = v60;
  v68 = v114;
  View.hoverEffect<A>(_:isEnabled:)(v63, 1, v67, v114, v64, v65);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v63, v68);
  sub_100010960((uint64_t)v9, &qword_1009D1C90);
  v69 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    KeyPath = swift_getKeyPath(&unk_100710B10);
    v71 = swift_getKeyPath(&unk_100710B38);
    v72 = v69;
    static Published.subscript.getter(&v127, v72, KeyPath, v71);

    swift_release(KeyPath);
    swift_release(v71);
    v73 = v127;
    v74 = swift_getKeyPath(&unk_100710B58);
    v75 = v116;
    v76 = v117;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v13, v66, v117);
    v77 = (uint64_t *)&v13[*(int *)(v52 + 36)];
    *v77 = v74;
    v77[1] = v73;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v76);
    if (qword_1009CE5D8 != -1)
      swift_once(&qword_1009CE5D8, sub_1004790DC);
    v78 = sub_10004CFD4(&qword_1009D1C80);
    v79 = sub_100048F64(v78, (uint64_t)qword_100A1E9C0);
    v80 = sub_1001F4CEC();
    v81 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v82 = v119;
    View.dynamicTypeSize<A>(_:)(v79, v52, v78, v80, v81);
    sub_100010960((uint64_t)v13, &qword_1009D1C78);
    *(double *)&v83 = COERCE_DOUBLE(sub_1001F3F98(*(_BYTE *)(v2 + 64)));
    v85 = v84;
    v130 = *(double *)&v83;
    v131 = v84;
    *(_QWORD *)&v127 = v52;
    *((_QWORD *)&v127 + 1) = v78;
    v128 = v80;
    v129 = v81;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v127, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v87 = sub_1001F2108();
    v88 = v121;
    v89 = (uint64_t)v122;
    View.accessibilityLabel<A>(_:)(&v130, v121, &type metadata for String, OpaqueTypeConformance2, v87);
    swift_bridgeObjectRelease(*(_QWORD *)&v85);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v82, v88);
    v90 = sub_1001F4254(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
    v92 = v91;
    *(_QWORD *)&v127 = v90;
    *((_QWORD *)&v127 + 1) = v91;
    v94 = (uint64_t)v123;
    v93 = v124;
    ModifiedContent<>.accessibilityValue<A>(_:)(&v127, v124, &type metadata for String, v87);
    swift_bridgeObjectRelease(v92);
    sub_100010960(v89, &qword_1009D1C70);
    v95 = *(_QWORD *)(v2 + 32);
    v96 = *(_BYTE *)(v2 + 40);
    sub_1001F2508(v95, v96);
    LOBYTE(v87) = sub_100667C14(v95, v96);
    sub_1001F2564(v95, v96);
    v97 = v87 & 1;
    v98 = (uint64_t)v125;
    ModifiedContent<>.accessibilityHidden(_:)(v97, v93);
    sub_100010960(v94, &qword_1009D1C70);
    v99 = swift_getKeyPath(&unk_100710B88);
    v100 = v126;
    sub_10000B5E4(v98, v126, &qword_1009D1C70);
    v101 = v100 + *(int *)(sub_10004CFD4(&qword_1009D1C28) + 36);
    *(_QWORD *)v101 = v99;
    *(_BYTE *)(v101 + 8) = 0;
    return sub_100010960(v98, &qword_1009D1C70);
  }
  else
  {
    v103 = *(_QWORD *)(v2 + 8);
    v104 = type metadata accessor for ChromeStyle(0);
    v105 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v103, v104, v105, v106);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F32A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t@<X8>);
  void (*v57)(uint64_t@<X8>);
  _BYTE *v58;
  void (**v59)(uint64_t@<X8>);
  uint64_t v60;
  _BYTE *v61;
  uint64_t (**v62)(double *);
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  int v69;
  unsigned __int8 v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  int v85;
  unsigned __int8 v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  double *v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _OWORD *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  uint64_t v116;
  int v117;
  int v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  unsigned int v127;
  uint64_t v128;
  int v129;
  int v130;
  double v131;
  char v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  _BYTE v144[4];
  int v145;
  double v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  _BYTE *v152;
  uint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  _BYTE *v158;
  _BYTE *v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _OWORD v164[10];
  char v165;
  char v166;
  _BYTE v167[7];
  _BYTE v168[7];
  _WORD v169[8];
  _OWORD v170[18];
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;

  v163 = a2;
  v162 = sub_10004CFD4(&qword_1009D1E98);
  __chkstk_darwin(v162);
  v8 = &v144[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v153 = sub_10004CFD4(&qword_1009D1D58);
  __chkstk_darwin(v153);
  v154 = &v144[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v149 = sub_10004CFD4(&qword_1009D1E10);
  __chkstk_darwin(v149);
  v11 = &v144[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v12);
  v14 = &v144[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v148 = sub_10004CFD4(&qword_1009D1D68);
  __chkstk_darwin(v148);
  v151 = &v144[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v150 = sub_10004CFD4(&qword_1009D1D48);
  __chkstk_darwin(v150);
  v152 = &v144[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v155 = sub_10004CFD4(&qword_1009D1D38);
  __chkstk_darwin(v155);
  v159 = &v144[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v156 = sub_10004CFD4(&qword_1009D1D28);
  __chkstk_darwin(v156);
  v158 = &v144[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v161 = sub_10004CFD4(&qword_1009D1D18);
  v19 = __chkstk_darwin(v161);
  v157 = &v144[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v160 = &v144[-v21];
  v22 = *(_QWORD *)(a1 + 16);
  v23 = *(_BYTE *)(a1 + 24);
  sub_1001F2508(v22, v23);
  v24 = sub_100667A54(v22, v23);
  v25 = sub_1001F2564(v22, v23);
  if (v24 == 2)
  {
    v146 = a3;
    v147 = a4;
    v26 = sub_1001F3D8C(v25, (uint64_t)v164);
    v177 = v164[6];
    v178 = v164[7];
    v179 = v164[8];
    v180 = v164[9];
    v173 = v164[2];
    v174 = v164[3];
    v175 = v164[4];
    v176 = v164[5];
    v171 = v164[0];
    v172 = v164[1];
    v145 = static Edge.Set.vertical.getter(v26);
    v27 = EdgeInsets.init(_all:)(6.0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v165 = 0;
    v34 = static Edge.Set.horizontal.getter();
    v35 = EdgeInsets.init(_all:)(9.0);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v42 = v165;
    v166 = 0;
    v43 = type metadata accessor for ChromeStyle(0);
    v44 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v45 = EnvironmentObject.init()(v43, v44);
    v170[6] = v177;
    v170[7] = v178;
    v170[8] = v179;
    v170[9] = v180;
    v170[2] = v173;
    v170[3] = v174;
    v170[4] = v175;
    v170[5] = v176;
    v170[0] = v171;
    v170[1] = v172;
    LOWORD(v170[10]) = 257;
    *(_DWORD *)((char *)&v170[10] + 2) = *(_DWORD *)&v169[5];
    WORD3(v170[10]) = v169[7];
    BYTE8(v170[10]) = v145;
    *(_DWORD *)((char *)&v170[10] + 9) = *(_DWORD *)v169;
    HIDWORD(v170[10]) = *(_DWORD *)((char *)&v169[1] + 1);
    *(double *)&v170[11] = v27;
    *((_QWORD *)&v170[11] + 1) = v29;
    *(_QWORD *)&v170[12] = v31;
    *((_QWORD *)&v170[12] + 1) = v33;
    LOBYTE(v170[13]) = v42;
    *(_DWORD *)((char *)&v170[13] + 1) = *(_DWORD *)v168;
    DWORD1(v170[13]) = *(_DWORD *)&v168[3];
    BYTE8(v170[13]) = v34;
    HIDWORD(v170[13]) = *(_DWORD *)&v167[3];
    *(_DWORD *)((char *)&v170[13] + 9) = *(_DWORD *)v167;
    *(double *)&v170[14] = v35;
    *((_QWORD *)&v170[14] + 1) = v37;
    *(_QWORD *)&v170[15] = v39;
    *((_QWORD *)&v170[15] + 1) = v41;
    LOBYTE(v170[16]) = v166;
    *((_QWORD *)&v170[16] + 1) = 0x3FF0000000000000;
    *(_QWORD *)&v170[17] = v45;
    *((_QWORD *)&v170[17] + 1) = v46;
    v47 = enum case for RoundedCornerStyle.continuous(_:);
    v48 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v14, v47, v48);
    sub_1001F57A0((uint64_t)v14, (uint64_t)v11);
    *(_WORD *)&v11[*(int *)(v149 + 36)] = 256;
    v49 = v151;
    sub_10000B5E4((uint64_t)v11, (uint64_t)&v151[*(int *)(v148 + 36)], &qword_1009D1E10);
    memcpy(v49, v170, 0x120uLL);
    sub_1001F57E4((uint64_t)v170);
    sub_100010960((uint64_t)v11, &qword_1009D1E10);
    sub_1001F597C((uint64_t)v14);
    sub_1001F59B8((uint64_t)v170);
    v50 = (_OWORD *)swift_allocObject(&unk_1008F29D8, 128, 7);
    v51 = *(_OWORD *)(a1 + 80);
    v50[5] = *(_OWORD *)(a1 + 64);
    v50[6] = v51;
    v50[7] = *(_OWORD *)(a1 + 96);
    v52 = *(_OWORD *)(a1 + 16);
    v50[1] = *(_OWORD *)a1;
    v50[2] = v52;
    v53 = *(_OWORD *)(a1 + 48);
    v50[3] = *(_OWORD *)(a1 + 32);
    v50[4] = v53;
    v54 = sub_1001F56E8(a1);
    v55 = static Alignment.center.getter(v54);
    v57 = v56;
    v58 = v154;
    sub_10000B5E4((uint64_t)v49, (uint64_t)v154, &qword_1009D1D68);
    v59 = (void (**)(uint64_t@<X8>))&v58[*(int *)(v153 + 36)];
    *v59 = sub_1003202B0;
    v59[1] = 0;
    v59[2] = (void (*)(uint64_t@<X8>))v55;
    v59[3] = v57;
    v60 = swift_allocObject(&unk_1008F2A00, 32, 7);
    *(_QWORD *)(v60 + 16) = sub_1001F56E4;
    *(_QWORD *)(v60 + 24) = v50;
    v61 = v152;
    sub_10000B5E4((uint64_t)v58, (uint64_t)v152, &qword_1009D1D58);
    v62 = (uint64_t (**)(double *))&v61[*(int *)(v150 + 36)];
    *v62 = sub_1001F5D38;
    v62[1] = (uint64_t (*)(double *))v60;
    sub_100010960((uint64_t)v58, &qword_1009D1D58);
    v63 = sub_100010960((uint64_t)v49, &qword_1009D1D68);
    v64 = static Edge.Set.top.getter(v63);
    v65 = v64;
    v66 = static Edge.Set.bottom.getter(v64);
    v67 = Edge.Set.init(rawValue:)(0);
    v68 = Edge.Set.init(rawValue:)(v67);
    if (Edge.Set.init(rawValue:)(v68 & v65) != v65)
      v67 = Edge.Set.init(rawValue:)(v67 | v65);
    v69 = Edge.Set.init(rawValue:)(v67);
    v70 = Edge.Set.init(rawValue:)(v69 & v66);
    v71 = (uint64_t)v159;
    if (v70 != v66)
      LOBYTE(v67) = Edge.Set.init(rawValue:)(v67 | v66);
    v72 = EdgeInsets.init(_all:)(v146);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    sub_10000B5E4((uint64_t)v61, v71, &qword_1009D1D48);
    v79 = v71 + *(int *)(v155 + 36);
    *(_BYTE *)v79 = v67;
    *(double *)(v79 + 8) = v72;
    *(_QWORD *)(v79 + 16) = v74;
    *(_QWORD *)(v79 + 24) = v76;
    *(_QWORD *)(v79 + 32) = v78;
    *(_BYTE *)(v79 + 40) = 0;
    v80 = sub_100010960((uint64_t)v61, &qword_1009D1D48);
    v81 = static Edge.Set.leading.getter(v80);
    v82 = static Edge.Set.trailing.getter();
    v83 = Edge.Set.init(rawValue:)(0);
    v84 = Edge.Set.init(rawValue:)(v83);
    if (Edge.Set.init(rawValue:)(v84 & v81) != v81)
      v83 = Edge.Set.init(rawValue:)(v83 | v81);
    v85 = Edge.Set.init(rawValue:)(v83);
    v86 = Edge.Set.init(rawValue:)(v85 & v82);
    v87 = v147;
    if (v86 != v82)
      LOBYTE(v83) = Edge.Set.init(rawValue:)(v83 | v82);
    v88 = EdgeInsets.init(_all:)(v87);
    v90 = v89;
    v92 = v91;
    v94 = v93;
    v95 = v158;
    sub_10000B5E4(v71, (uint64_t)v158, &qword_1009D1D38);
    v96 = (double *)&v95[*(int *)(v156 + 36)];
    *(_BYTE *)v96 = v83;
    v96[1] = v88;
    *((_QWORD *)v96 + 2) = v90;
    *((_QWORD *)v96 + 3) = v92;
    *((_QWORD *)v96 + 4) = v94;
    *((_BYTE *)v96 + 40) = 0;
    sub_100010960(v71, &qword_1009D1D38);
    v97 = v157;
    sub_10000B5E4((uint64_t)v95, (uint64_t)v157, &qword_1009D1D28);
    v98 = v161;
    v97[*(int *)(v161 + 36)] = 0;
    sub_100010960((uint64_t)v95, &qword_1009D1D28);
    v99 = v160;
    sub_1001F5B8C((uint64_t)v97, (uint64_t)v160);
    sub_10000B5E4((uint64_t)v99, (uint64_t)v8, &qword_1009D1D18);
    swift_storeEnumTagMultiPayload(v8, v162, 0);
    v100 = sub_10004CFD4(&qword_1009D1E50);
    v101 = sub_1001F4F80();
    v102 = sub_1001F5490();
    _ConditionalContent<>.init(storage:)(v8, v98, v100, v101, v102);
    return sub_100010960((uint64_t)v99, &qword_1009D1D18);
  }
  else
  {
    sub_1001F3D8C(v25, (uint64_t)&v171);
    v170[6] = v177;
    v170[7] = v178;
    v170[8] = v179;
    v170[9] = v180;
    v170[2] = v173;
    v170[3] = v174;
    v170[4] = v175;
    v170[5] = v176;
    v170[0] = v171;
    v170[1] = v172;
    v104 = (_OWORD *)swift_allocObject(&unk_1008F2988, 128, 7);
    v105 = *(_OWORD *)(a1 + 80);
    v104[5] = *(_OWORD *)(a1 + 64);
    v104[6] = v105;
    v104[7] = *(_OWORD *)(a1 + 96);
    v106 = *(_OWORD *)(a1 + 16);
    v104[1] = *(_OWORD *)a1;
    v104[2] = v106;
    v107 = *(_OWORD *)(a1 + 48);
    v104[3] = *(_OWORD *)(a1 + 32);
    v104[4] = v107;
    v108 = sub_1001F56E8(a1);
    v109 = static Alignment.center.getter(v108);
    v111 = v110;
    v112 = swift_allocObject(&unk_1008F29B0, 32, 7);
    *(_QWORD *)(v112 + 16) = sub_1001F56E4;
    *(_QWORD *)(v112 + 24) = v104;
    v113 = static Edge.Set.top.getter(v112);
    v114 = v113;
    v115 = static Edge.Set.bottom.getter(v113);
    v116 = Edge.Set.init(rawValue:)(0);
    v117 = Edge.Set.init(rawValue:)(v116);
    if (Edge.Set.init(rawValue:)(v117 & v114) != v114)
      v116 = Edge.Set.init(rawValue:)(v116 | v114);
    v118 = Edge.Set.init(rawValue:)(v116);
    if (Edge.Set.init(rawValue:)(v118 & v115) != v115)
      LOBYTE(v116) = Edge.Set.init(rawValue:)(v116 | v115);
    v119 = EdgeInsets.init(_all:)(a3);
    v121 = v120;
    v123 = v122;
    v125 = v124;
    v126 = ((uint64_t (*)(void))static Edge.Set.leading.getter)();
    v127 = static Edge.Set.trailing.getter();
    v128 = Edge.Set.init(rawValue:)(0);
    v129 = Edge.Set.init(rawValue:)(v128);
    if (Edge.Set.init(rawValue:)(v129 & v126) != v126)
      v128 = Edge.Set.init(rawValue:)(v128 | v126);
    v130 = Edge.Set.init(rawValue:)(v128);
    if (Edge.Set.init(rawValue:)(v130 & v127) != v127)
      LOBYTE(v128) = Edge.Set.init(rawValue:)(v128 | v127);
    LOBYTE(v169[0]) = 0;
    v131 = EdgeInsets.init(_all:)(a4);
    v132 = v169[0];
    LOBYTE(v164[0]) = 0;
    v133 = v170[7];
    *((_OWORD *)v8 + 6) = v170[6];
    *((_OWORD *)v8 + 7) = v133;
    v134 = v170[9];
    *((_OWORD *)v8 + 8) = v170[8];
    *((_OWORD *)v8 + 9) = v134;
    v135 = v170[3];
    *((_OWORD *)v8 + 2) = v170[2];
    *((_OWORD *)v8 + 3) = v135;
    v136 = v170[5];
    *((_OWORD *)v8 + 4) = v170[4];
    *((_OWORD *)v8 + 5) = v136;
    v137 = v170[1];
    *(_OWORD *)v8 = v170[0];
    *((_OWORD *)v8 + 1) = v137;
    *((_WORD *)v8 + 80) = 257;
    *((_QWORD *)v8 + 21) = sub_1003202B0;
    *((_QWORD *)v8 + 22) = 0;
    *((_QWORD *)v8 + 23) = v109;
    *((_QWORD *)v8 + 24) = v111;
    *((_QWORD *)v8 + 25) = sub_1001F5798;
    *((_QWORD *)v8 + 26) = v112;
    v8[216] = v116;
    *((double *)v8 + 28) = v119;
    *((_QWORD *)v8 + 29) = v121;
    *((_QWORD *)v8 + 30) = v123;
    *((_QWORD *)v8 + 31) = v125;
    v8[256] = v132;
    v8[264] = v128;
    *((double *)v8 + 34) = v131;
    *((_QWORD *)v8 + 35) = v138;
    *((_QWORD *)v8 + 36) = v139;
    *((_QWORD *)v8 + 37) = v140;
    *((_WORD *)v8 + 152) = 0;
    swift_storeEnumTagMultiPayload(v8, v162, 1);
    v141 = sub_10004CFD4(&qword_1009D1E50);
    v142 = sub_1001F4F80();
    v143 = sub_1001F5490();
    return _ConditionalContent<>.init(storage:)(v8, v161, v141, v142, v143);
  }
}

uint64_t sub_1001F3D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD v35[9];
  char v36;

  v3 = v2;
  v33 = static VerticalAlignment.center.getter(a1);
  sub_1001F44D0(v3, (uint64_t)v35);
  v5 = *(_QWORD *)(v3 + 56);
  v6 = *(void **)v3;
  if (*(_QWORD *)v3)
  {
    v7 = v35[0];
    v8 = v35[1];
    v9 = v35[3];
    v30 = v35[4];
    v31 = v35[2];
    v28 = v35[6];
    v29 = v35[5];
    v26 = v35[8];
    v27 = v35[7];
    v32 = *(_QWORD *)(v3 + 48);
    v34 = v36;
    KeyPath = swift_getKeyPath(&unk_100710BB8);
    v11 = swift_getKeyPath(&unk_100710BE0);
    swift_bridgeObjectRetain(v5);
    v12 = v6;
    static Published.subscript.getter(v35, v12, KeyPath, v11);

    swift_release(KeyPath);
    swift_release(v11);
    v13 = v35[0];
    v14 = swift_getKeyPath(&unk_100710C00);
    v15 = *(_QWORD *)(v3 + 16);
    v16 = *(_BYTE *)(v3 + 24);
    sub_1001F2508(v15, v16);
    v17 = sub_100667A54(v15, v16);
    sub_1001F2564(v15, v16);
    if ((BEBookLayoutMode.isScroll.getter(v17, v18) & 1) != 0)
      v19 = static Font.footnote.getter();
    else
      v19 = static Font.subheadline.getter();
    v20 = v19;
    result = swift_getKeyPath(&unk_100710C30);
    *(_QWORD *)a2 = v33;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = v7;
    *(_QWORD *)(a2 + 32) = v8;
    *(_QWORD *)(a2 + 40) = v31;
    *(_QWORD *)(a2 + 48) = v9;
    *(_QWORD *)(a2 + 56) = v30;
    *(_QWORD *)(a2 + 64) = v29;
    *(_QWORD *)(a2 + 72) = v28;
    *(_QWORD *)(a2 + 80) = v27;
    *(_QWORD *)(a2 + 88) = v26;
    *(_BYTE *)(a2 + 96) = v34;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 112) = v32;
    *(_QWORD *)(a2 + 120) = v5;
    *(_QWORD *)(a2 + 128) = v14;
    *(_QWORD *)(a2 + 136) = v13;
    *(_QWORD *)(a2 + 144) = result;
    *(_QWORD *)(a2 + 152) = v20;
  }
  else
  {
    v22 = *(_QWORD *)(v3 + 8);
    v23 = type metadata accessor for ChromeStyle(0);
    v24 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v25 = swift_bridgeObjectRetain(v5);
    result = EnvironmentObject.error()(0, v22, v23, v24, v25);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F3F98(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  char *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = type metadata accessor for Locale(0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v36 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v36 - v14;
  v16 = *(_QWORD *)(v1 + 32);
  v17 = *(_BYTE *)(v1 + 40);
  sub_1001F2508(v16, v17);
  v18 = sub_100667C14(v16, v17);
  sub_1001F2564(v16, v17);
  if ((v18 & 1) != 0)
    return 0;
  if ((a1 & 1) != 0)
  {
    v31 = String.LocalizationValue.init(stringLiteral:)(0x6B636162206F47, 0xE700000000000000);
    static Locale.current.getter(v31);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v32 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32);
    v34 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v25 = v37;
    v24 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v6, v8, v38);
    v26 = "Accessibility string for a button that returns the user to a previously visited page that comes earlier in the"
          " history, similar to 'Go back' and 'Go forward' buttons in a web browser";
    v27 = v13;
    v28 = v34;
    v29 = v6;
    v30 = 182;
  }
  else
  {
    v20 = String.LocalizationValue.init(stringLiteral:)(0x6177726F66206F47, 0xEA00000000006472);
    static Locale.current.getter(v20);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v21 = type metadata accessor for BundleFinder();
    v22 = swift_getObjCClassFromMetadata(v21);
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v22);
    v25 = v37;
    v24 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v6, v8, v38);
    v26 = "Accessibility string for a button that returns the user to a previously visited page that comes later in the h"
          "istory, similar to 'Go back' and 'Go forward' buttons in a web browser";
    v27 = v13;
    v28 = v23;
    v29 = v6;
    v30 = 180;
  }
  v19 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v29, v26, v30, 2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v19;
}

uint64_t sub_1001F4254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v33 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v33 - 8);
  v4 = __chkstk_darwin(v33);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v33 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v33 - v14;
  v16 = *(_QWORD *)(v2 + 32);
  v17 = *(_BYTE *)(v2 + 40);
  sub_1001F2508(v16, v17);
  v18 = sub_100667C14(v16, v17);
  sub_1001F2564(v16, v17);
  if ((v18 & 1) != 0)
    return 0;
  v20 = String.LocalizationValue.init(stringLiteral:)(0x40252065676150, 0xE700000000000000);
  static Locale.current.getter(v20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v21 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v24 = v33;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v33);
  v25 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v23, v6, "Accessibility format string for a page number", 45, 2);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v29 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = sub_10002BE50();
  v30 = v35;
  *(_QWORD *)(v29 + 32) = v34;
  *(_QWORD *)(v29 + 40) = v30;
  v31 = swift_bridgeObjectRetain(v30);
  v19 = static String.localizedStringWithFormat(_:_:)(v25, v27, v29, v31);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v29);
  return v19;
}

double sub_1001F44D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  char v50;
  _OWORD v51[4];
  uint64_t v52;
  char v53;

  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    v4 = Image.init(systemName:)(0xD000000000000020, 0x80000001007B5700);
    v5 = *(_QWORD *)(a1 + 48);
    v6 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)&v51[0] = v5;
    *((_QWORD *)&v51[0] + 1) = v6;
    v7 = sub_1001F2108();
    v8 = swift_bridgeObjectRetain(v6);
    v9 = Text.init<A>(_:)(v51, &type metadata for String, v7, v8);
    v11 = v10;
    v13 = v12;
    v15 = (_QWORD *)(v14 & 1);
    v50 = 0;
    swift_retain(v4);
    sub_1001F596C(32, 0xE100000000000000, 0);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_1001F596C(v9, v11, (char)v15);
    swift_bridgeObjectRetain(v13);
    swift_retain(v4);
    sub_1001F596C(v9, v11, (char)v15);
    swift_bridgeObjectRetain(v13);
    sub_1001F5B28(v9, v11, (char)v15);
    swift_bridgeObjectRelease(v13);
    sub_1001F5B28(32, 0xE100000000000000, 0);
    swift_release(v4);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v42 = v4;
    v43 = xmmword_100710A90;
    v44 = 0;
    *(_QWORD *)&v45 = _swiftEmptyArrayStorage;
    *((_QWORD *)&v45 + 1) = v9;
    v46 = v11;
    v47 = v15;
    v48 = v13;
    v49 = 1;
    v16 = sub_10004CFD4(&qword_1009D1EA0);
    v17 = sub_10004CFD4(&qword_1009D1EA8);
    v18 = sub_100030B34(&qword_1009D1EB0, &qword_1009D1EA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v19 = sub_100030B34(&qword_1009D1EB8, &qword_1009D1EA8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v42, v16, v17, v18, v19);
    sub_1001F5B28(v9, v11, (char)v15);
    swift_release(v4);
    v20 = v13;
  }
  else
  {
    v21 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)&v51[0] = *(_QWORD *)(a1 + 48);
    *((_QWORD *)&v51[0] + 1) = v21;
    v22 = sub_1001F2108();
    v23 = swift_bridgeObjectRetain(v21);
    v24 = Text.init<A>(_:)(v51, &type metadata for String, v22, v23);
    v26 = v25;
    v28 = v27;
    v30 = v29 & 1;
    v31 = Image.init(systemName:)(0xD00000000000001FLL, 0x80000001007B5730);
    sub_1001F596C(v24, v26, v30);
    swift_bridgeObjectRetain(v28);
    sub_1001F596C(32, 0xE100000000000000, 0);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    swift_retain(v31);
    sub_1001F596C(v24, v26, v30);
    swift_bridgeObjectRetain(v28);
    sub_1001F5B28(32, 0xE100000000000000, 0);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_1001F5B28(v24, v26, v30);
    swift_bridgeObjectRelease(v28);
    v42 = v24;
    *(_QWORD *)&v43 = v26;
    *((_QWORD *)&v43 + 1) = v30;
    v44 = v28;
    v45 = xmmword_100710A90;
    v46 = 0;
    v47 = _swiftEmptyArrayStorage;
    v48 = v31;
    v49 = 0;
    v32 = sub_10004CFD4(&qword_1009D1EA0);
    v33 = sub_10004CFD4(&qword_1009D1EA8);
    v34 = sub_100030B34(&qword_1009D1EB0, &qword_1009D1EA0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v35 = sub_100030B34(&qword_1009D1EB8, &qword_1009D1EA8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v42, v32, v33, v34, v35);
    swift_release(v31);
    sub_1001F5B28(v24, v26, v30);
    v20 = v28;
  }
  swift_bridgeObjectRelease(v20);
  result = *(double *)v51;
  v37 = v51[1];
  v38 = v51[2];
  v39 = v51[3];
  v40 = v52;
  v41 = v53;
  *(_OWORD *)a2 = v51[0];
  *(_OWORD *)(a2 + 16) = v37;
  *(_OWORD *)(a2 + 32) = v38;
  *(_OWORD *)(a2 + 48) = v39;
  *(_QWORD *)(a2 + 64) = v40;
  *(_BYTE *)(a2 + 72) = v41;
  return result;
}

uint64_t sub_1001F48A4()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD v14[7];

  v1 = sub_10004CFD4(&qword_1009D1C20);
  __chkstk_darwin(v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D1C28);
  __chkstk_darwin(v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[5];
  v14[4] = v0[4];
  v14[5] = v7;
  v14[6] = v0[6];
  v8 = v0[1];
  v14[0] = *v0;
  v14[1] = v8;
  v9 = v0[3];
  v14[2] = v0[2];
  v14[3] = v9;
  sub_1001F28B0((uint64_t)v6);
  sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009D1C28);
  swift_storeEnumTagMultiPayload(v3, v1, 1);
  v10 = sub_10004CFD4(&qword_1009D1C30);
  v11 = sub_1001F49EC();
  v12 = sub_1001F4B78();
  _ConditionalContent<>.init(storage:)(v3, v10, v4, v11, v12);
  return sub_100010960((uint64_t)v6, &qword_1009D1C28);
}

unint64_t sub_1001F49EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D1C38;
  if (!qword_1009D1C38)
  {
    v1 = sub_100030B74(&qword_1009D1C30);
    v2[0] = sub_100030B74(&qword_1009D1C40);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_1001F4ADC();
    v2[3] = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C38);
  }
  return result;
}

unint64_t sub_1001F4ADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1C48;
  if (!qword_1009D1C48)
  {
    v1 = sub_100030B74(&qword_1009D1C40);
    sub_100030B34(&qword_1009D1C50, &qword_1009D1C58, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C48);
  }
  return result;
}

unint64_t sub_1001F4B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1C60;
  if (!qword_1009D1C60)
  {
    v1 = sub_100030B74(&qword_1009D1C28);
    sub_1001F4BFC();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C60);
  }
  return result;
}

unint64_t sub_1001F4BFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D1C68;
  if (!qword_1009D1C68)
  {
    v1 = sub_100030B74(&qword_1009D1C70);
    v2[0] = sub_100030B74(&qword_1009D1C78);
    v2[1] = sub_100030B74(&qword_1009D1C80);
    v2[2] = sub_1001F4CEC();
    v2[3] = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C68);
  }
  return result;
}

unint64_t sub_1001F4CEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D1C88;
  if (!qword_1009D1C88)
  {
    v1 = sub_100030B74(&qword_1009D1C78);
    v2[0] = sub_100030B74(&qword_1009D1C90);
    v2[1] = type metadata accessor for HighlightHoverEffect(255);
    v2[2] = sub_1001F5558(&qword_1009D1C98, &qword_1009D1C90, (void (*)(void))sub_1001F4DFC);
    v2[3] = sub_100008DB0(&qword_1009D1CC0, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightHoverEffect, (uint64_t)&protocol conformance descriptor for HighlightHoverEffect);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C88);
  }
  return result;
}

unint64_t sub_1001F4DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1CA0;
  if (!qword_1009D1CA0)
  {
    v1 = sub_100030B74(&qword_1009D1CA8);
    sub_100030B34(&qword_1009D1CB0, &qword_1009D1CB8, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1CA0);
  }
  return result;
}

uint64_t sub_1001F4E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001F32A0(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24), *(double *)(v1 + 32));
}

unint64_t sub_1001F4E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1CF8;
  if (!qword_1009D1CF8)
  {
    v1 = sub_100030B74(&qword_1009D1CF0);
    sub_1001F4F10(&qword_1009D1D00, &qword_1009D1D08, (void (*)(void))sub_1001F4F80, (void (*)(void))sub_1001F5490);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1CF8);
  }
  return result;
}

uint64_t sub_1001F4F10(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001F4F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1D10;
  if (!qword_1009D1D10)
  {
    v1 = sub_100030B74(&qword_1009D1D18);
    sub_1001F5558(&qword_1009D1D20, &qword_1009D1D28, (void (*)(void))sub_1001F5024);
    sub_100030B34(&qword_1009D1E38, &qword_1009D1E40, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1D10);
  }
  return result;
}

uint64_t sub_1001F5024()
{
  return sub_1001F5558(&qword_1009D1D30, &qword_1009D1D38, (void (*)(void))sub_1001F5048);
}

unint64_t sub_1001F5048()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1D40;
  if (!qword_1009D1D40)
  {
    v1 = sub_100030B74(&qword_1009D1D48);
    sub_1001F50CC();
    sub_100030B34(&qword_1009D1E28, &qword_1009D1E30, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1D40);
  }
  return result;
}

unint64_t sub_1001F50CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1D50;
  if (!qword_1009D1D50)
  {
    v1 = sub_100030B74(&qword_1009D1D58);
    sub_1001F5150();
    sub_100030B34(&qword_1009D1E18, &qword_1009D1E20, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1D50);
  }
  return result;
}

unint64_t sub_1001F5150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1D60;
  if (!qword_1009D1D60)
  {
    v1 = sub_100030B74(&qword_1009D1D68);
    sub_1001F51D4();
    sub_100030B34(&qword_1009D1E08, &qword_1009D1E10, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1D60);
  }
  return result;
}

unint64_t sub_1001F51D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1D70;
  if (!qword_1009D1D70)
  {
    v1 = sub_100030B74(&qword_1009D1D78);
    sub_1001F5558(&qword_1009D1D80, &qword_1009D1D88, (void (*)(void))sub_1001F5260);
    sub_1001F544C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1D70);
  }
  return result;
}

uint64_t sub_1001F5260()
{
  return sub_1001F5558(&qword_1009D1D90, &qword_1009D1D98, (void (*)(void))sub_1001F5284);
}

uint64_t sub_1001F5284()
{
  return sub_1001F5558(&qword_1009D1DA0, &qword_1009D1DA8, (void (*)(void))sub_1001F52A8);
}

unint64_t sub_1001F52A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1DB0;
  if (!qword_1009D1DB0)
  {
    v1 = sub_100030B74(&qword_1009D1DB8);
    sub_1001F532C();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1DB0);
  }
  return result;
}

unint64_t sub_1001F532C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1DC0;
  if (!qword_1009D1DC0)
  {
    v1 = sub_100030B74(&qword_1009D1DC8);
    sub_1001F53B0();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1DC0);
  }
  return result;
}

unint64_t sub_1001F53B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1DD0;
  if (!qword_1009D1DD0)
  {
    v1 = sub_100030B74(&qword_1009D1DD8);
    sub_100030B34(&qword_1009D1DE0, &qword_1009D1DE8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100030B34(&qword_1009D1DF0, &qword_1009D1DF8, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1DD0);
  }
  return result;
}

unint64_t sub_1001F544C()
{
  unint64_t result;

  result = qword_1009D1E00;
  if (!qword_1009D1E00)
  {
    result = swift_getWitnessTable(&unk_10071EAC0, &type metadata for ChromeMaterial);
    atomic_store(result, (unint64_t *)&qword_1009D1E00);
  }
  return result;
}

unint64_t sub_1001F5490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1E48;
  if (!qword_1009D1E48)
  {
    v1 = sub_100030B74(&qword_1009D1E50);
    sub_1001F5558(&qword_1009D1E58, &qword_1009D1E60, (void (*)(void))sub_1001F5534);
    sub_100030B34(&qword_1009D1E38, &qword_1009D1E40, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1E48);
  }
  return result;
}

uint64_t sub_1001F5534()
{
  return sub_1001F5558(&qword_1009D1E68, &qword_1009D1E70, (void (*)(void))sub_1001F55C0);
}

uint64_t sub_1001F5558(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100030B74(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001F55C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1E78;
  if (!qword_1009D1E78)
  {
    v1 = sub_100030B74(&qword_1009D1E80);
    sub_1001F5644();
    sub_100030B34(&qword_1009D1E28, &qword_1009D1E30, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1E78);
  }
  return result;
}

unint64_t sub_1001F5644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1E88;
  if (!qword_1009D1E88)
  {
    v1 = sub_100030B74(&qword_1009D1E90);
    sub_1001F5284();
    sub_100030B34(&qword_1009D1E18, &qword_1009D1E20, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1E88);
  }
  return result;
}

uint64_t sub_1001F56E8(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(id *)a1;
  sub_1001F2508(v2, v3);
  sub_1001F2508(v4, v5);
  swift_retain(v8);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1001F5774()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F5798(double *a1)
{
  uint64_t v1;

  return sub_1005F650C(a1, *(uint64_t (**)(double, double))(v1 + 16));
}

uint64_t sub_1001F57A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Capsule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F57E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v8 = *(void **)(a1 + 272);
  sub_1001F5890(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  v9 = v8;
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

void sub_1001F5890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) != 0)
  {
    swift_retain(a1);
    sub_1001F596C(a2, a3, a4 & 1);
    swift_bridgeObjectRetain(a5);
    sub_1001F596C(a6, a7, a8 & 1);
    swift_bridgeObjectRetain(a9);
  }
  else
  {
    sub_1001F596C(a1, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    sub_1001F596C(a5, a6, a7 & 1);
    swift_bridgeObjectRetain(a8);
    swift_retain(a9);
  }
}

uint64_t sub_1001F596C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1001F597C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Capsule(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F59B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v8 = *(void **)(a1 + 272);
  sub_1001F5A64(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  swift_release(v6);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  swift_release(v5);
  swift_release(v7);

  return a1;
}

uint64_t sub_1001F5A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) != 0)
  {
    swift_release(a1);
    sub_1001F5B28(a2, a3, a4 & 1);
    swift_bridgeObjectRelease(a5);
    sub_1001F5B28(a6, a7, a8 & 1);
    a8 = a9;
  }
  else
  {
    sub_1001F5B28(a1, a2, a3 & 1);
    swift_bridgeObjectRelease(a4);
    sub_1001F5B28(a5, a6, a7 & 1);
    swift_release(a9);
  }
  return swift_bridgeObjectRelease(a8);
}

uint64_t sub_1001F5B28(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1001F5B3C(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(v2 + 104);
  v7 = *(_QWORD *)(v2 + 120);
  *(double *)v5 = a1;
  *(double *)&v5[1] = a2;
  v3 = sub_10004CFD4(&qword_1009D1CE8);
  return State.wrappedValue.setter(v5, v3);
}

uint64_t sub_1001F5B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D1D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for HistoryButton.ArrowDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F5C38 + 4 * byte_100710AA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F5C6C + 4 * byte_100710AA0[v4]))();
}

uint64_t sub_1001F5C6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F5C74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F5C7CLL);
  return result;
}

uint64_t sub_1001F5C88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F5C90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F5C94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F5C9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HistoryButton.ArrowDirection()
{
  return &type metadata for HistoryButton.ArrowDirection;
}

uint64_t sub_1001F5CB8()
{
  return sub_1001F4F10(&qword_1009D1EC0, &qword_1009D1EC8, (void (*)(void))sub_1001F49EC, (void (*)(void))sub_1001F4B78);
}

unint64_t sub_1001F5CF0()
{
  unint64_t result;

  result = qword_1009D1ED0;
  if (!qword_1009D1ED0)
  {
    result = swift_getWitnessTable(&unk_100710CB0, &type metadata for HistoryButton.ArrowDirection);
    atomic_store(result, (unint64_t *)&qword_1009D1ED0);
  }
  return result;
}

uint64_t sub_1001F5D3C(uint64_t a1, uint64_t a2)
{
  void *v2;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    while (!__OFSUB__(v5--, 1))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
LABEL_5:
        v7 = v6;
        objc_msgSend(v2, "insertChildMenu:atStartOfMenuForIdentifier:", v6, a2);

        if (!v5)
          return swift_bridgeObjectRelease(a1);
      }
      else
      {
        if ((v5 & 0x8000000000000000) != 0)
          goto LABEL_12;
        if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v6 = *(id *)(a1 + 32 + 8 * v5);
          goto LABEL_5;
        }
LABEL_13:
        __break(1u);
LABEL_14:
        if (a1 < 0)
          v9 = a1;
        else
          v9 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v5 = _CocoaArrayWrapper.endIndex.getter(v9);
        if (!v5)
          return swift_bridgeObjectRelease(a1);
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1001F5E34(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v8 = *(id *)(a1 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v2, "insertChildMenu:atEndOfMenuForIdentifier:", v8, a2);

    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_1001F5F14(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v3 = v2;
  v6 = objc_msgSend(v2, "menuForIdentifier:", a2);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "children");
    v9 = sub_1001F6048();
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    swift_bridgeObjectRetain(a1);
    sub_100374634(a1);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v7, "menuByReplacingChildren:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

    objc_msgSend(v3, "replaceMenuForIdentifier:withMenu:", a2, v12);
  }
}

unint64_t sub_1001F6048()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4CF0;
  if (!qword_1009D4CF0)
  {
    v1 = objc_opt_self(UIMenuElement);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D4CF0);
  }
  return result;
}

uint64_t sub_1001F6084()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D1ED8);
  sub_100048F64(v0, (uint64_t)qword_1009D1ED8);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ALL, 0x80000001007B57F0);
}

uint64_t sub_1001F60F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E288);
  sub_100048F64(v16, (uint64_t)qword_100A1E288);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x646F4D206E65704FLL, 0xE900000000000065);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Type display representation for enum that defines 'Open Book' modes, e.g. most recent vs specific book", 102, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_1001F6308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t result;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v39 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v38 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v36 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D21A8);
  v17 = sub_10004CFD4(&qword_1009D09B0);
  v18 = *(_QWORD *)(v17 - 8);
  v35 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v35, v19 | 7);
  v37 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_10070FC00;
  v22 = v21 + v20;
  v31[1] = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x20746E6572727543, 0xEC0000006B6F6F42);
  static Locale.current.getter(v23);
  v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v36 = *(_QWORD *)(v36 + 104);
  v24 = v5;
  ((void (*)(char *))v36)(v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'Open Mode' enum case - open the most recent book.", 50, 2);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25 = v38;
  v32(v38, 1, 1, v12);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v39;
  v27(v39, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  *(_BYTE *)(v22 + v35) = 1;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x6369666963657053, 0xED00006B6F6F4220);
  static Locale.current.getter(v29);
  ((void (*)(char *, _QWORD, uint64_t))v36)(v24, v34, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v24, "'Open Mode' enum case - open a specific book.", 45, 2);
  v32(v25, 1, 1, v33);
  v27(v28, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  result = sub_1001DA56C(v37);
  qword_100A1E2A0 = result;
  return result;
}

uint64_t sub_1001F66C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100670828(*a1, *a2);
}

unint64_t sub_1001F66D8()
{
  unint64_t result;

  result = qword_1009D1EF0;
  if (!qword_1009D1EF0)
  {
    result = swift_getWitnessTable(&unk_100710CEC, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1EF0);
  }
  return result;
}

Swift::Int sub_1001F671C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6369666963657073;
  else
    v2 = 0x6563655274736F6DLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEA0000000000746ELL;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001F67A0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6369666963657073;
  else
    v2 = 0x6563655274736F6DLL;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEA0000000000746ELL;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001F6800(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6369666963657073;
  else
    v3 = 0x6563655274736F6DLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEA0000000000746ELL;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001F6880@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1008EF940;
  return sub_1001F99A0(v2, a1, a2);
}

void sub_1001F688C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6563655274736F6DLL;
  if (*v1)
    v2 = 0x6369666963657073;
  v3 = 0xEA0000000000746ELL;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1001F68D4()
{
  unint64_t result;

  result = qword_1009D1EF8;
  if (!qword_1009D1EF8)
  {
    result = swift_getWitnessTable(&unk_100710DCC, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1EF8);
  }
  return result;
}

unint64_t sub_1001F691C()
{
  unint64_t result;

  result = qword_1009D1F00;
  if (!qword_1009D1F00)
  {
    result = swift_getWitnessTable(&unk_100710E04, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F00);
  }
  return result;
}

unint64_t sub_1001F6964()
{
  unint64_t result;

  result = qword_1009D1F08;
  if (!qword_1009D1F08)
  {
    result = swift_getWitnessTable(&unk_100710D54, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F08);
  }
  return result;
}

unint64_t sub_1001F69AC()
{
  unint64_t result;

  result = qword_1009D1F10;
  if (!qword_1009D1F10)
  {
    result = swift_getWitnessTable(&unk_100710E34, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F10);
  }
  return result;
}

unint64_t sub_1001F69F4()
{
  unint64_t result;

  result = qword_1009D1F18;
  if (!qword_1009D1F18)
  {
    result = swift_getWitnessTable(&unk_100710E5C, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F18);
  }
  return result;
}

unint64_t sub_1001F6A3C()
{
  unint64_t result;

  result = qword_1009D1F20;
  if (!qword_1009D1F20)
  {
    result = swift_getWitnessTable(&unk_100710E84, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F20);
  }
  return result;
}

unint64_t sub_1001F6A84()
{
  unint64_t result;

  result = qword_1009D1F28;
  if (!qword_1009D1F28)
  {
    result = swift_getWitnessTable(&unk_100710EDC, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F28);
  }
  return result;
}

uint64_t sub_1001F6AC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC18, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E288, (uint64_t)sub_1001F60F4, a1);
}

uint64_t sub_1001F6AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F9C50(a1, a2, a3, (uint64_t (*)(void))sub_1001F6AF8);
}

unint64_t sub_1001F6AF8()
{
  unint64_t result;

  result = qword_1009D1F30;
  if (!qword_1009D1F30)
  {
    result = swift_getWitnessTable(&unk_100710D8C, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F30);
  }
  return result;
}

uint64_t sub_1001F6B3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6AF8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001F6B78()
{
  unint64_t result;

  result = qword_1009D1F38;
  if (!qword_1009D1F38)
  {
    result = swift_getWitnessTable(&unk_100710F1C, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F38);
  }
  return result;
}

unint64_t sub_1001F6BC0()
{
  unint64_t result;

  result = qword_1009D1F40;
  if (!qword_1009D1F40)
  {
    result = swift_getWitnessTable(&unk_100710F44, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F40);
  }
  return result;
}

unint64_t sub_1001F6C08()
{
  unint64_t result;

  result = qword_1009D1F48;
  if (!qword_1009D1F48)
  {
    result = swift_getWitnessTable(&unk_100710D14, &type metadata for OpenBookIntent.OpenMode);
    atomic_store(result, (unint64_t *)&qword_1009D1F48);
  }
  return result;
}

uint64_t sub_1001F6C4C(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CDC20, &qword_100A1E2A0, (uint64_t)sub_1001F6308);
}

uint64_t sub_1001F6C68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6A84();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1001F6CA0()
{
  return sub_100030B34(&qword_1009D1F50, &qword_1009D1F58, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1001F6CCC(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EF990;
}

unint64_t sub_1001F6CE0()
{
  unint64_t result;

  result = qword_1009D1F60;
  if (!qword_1009D1F60)
  {
    result = swift_getWitnessTable(&unk_10071100C, &type metadata for OpenBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009D1F60);
  }
  return result;
}

unint64_t sub_1001F6D28()
{
  unint64_t result;

  result = qword_1009D1F68;
  if (!qword_1009D1F68)
  {
    result = swift_getWitnessTable(&unk_100711034, &type metadata for OpenBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009D1F68);
  }
  return result;
}

uint64_t sub_1001F6D6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008677D0, 1);
}

uint64_t sub_1001F6D7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008677A8, 1);
}

uint64_t sub_1001F6D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E2A8);
  sub_100048F64(v10, (uint64_t)qword_100A1E2A8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6F6F42206E65704FLL, 0xE90000000000006BLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Open Book' AppIntent.", 32, 2);
}

uint64_t sub_1001F6F00()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001F6F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v42 = a1;
  v1 = sub_10004CFD4(&qword_1009D2158);
  v2 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  v41 = v2;
  v3 = __chkstk_darwin(v1);
  v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v39 = (char *)&v32 - v5;
  v6 = sub_10004CFD4(&qword_1009D2160);
  v36 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v32 - v11;
  __chkstk_darwin(v10);
  v37 = (char *)&v32 - v13;
  v44 = 0;
  v14 = sub_10004CFD4(&qword_1009D2168);
  v15 = sub_1001FC1E8();
  v34 = v15;
  v16 = sub_1001F6A3C();
  v33 = v16;
  v17 = sub_100030B34(&qword_1009D2170, &qword_1009D2168, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v32 = v17;
  ParameterSummaryCaseCondition.init(_:_:)(&v44, sub_1001F7294, 0, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v14, v15, v16, v17);
  v18 = sub_100030B34(&qword_1009D2178, &qword_1009D2160, (uint64_t)&protocol conformance descriptor for ParameterSummaryCaseCondition<A, B, C>);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v12, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v6, v18);
  v19 = *(void (**)(char *, uint64_t))(v36 + 8);
  v19(v12, v6);
  v43 = 1;
  v35 = v14;
  v21 = v33;
  v20 = v34;
  ParameterSummaryCaseCondition.init(_:_:)(&v43, sub_1001F7298, 0, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v14, v34, v33, v17);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v9, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v6, v18);
  v19(v9, v6);
  v22 = v38;
  v23 = v21;
  v24 = v32;
  ParameterSummaryDefaultCaseCondition.init(_:)(sub_1001F7294, 0, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v14, v20, v21, v32);
  v25 = sub_100030B34(&qword_1009D2180, &qword_1009D2158, (uint64_t)&protocol conformance descriptor for ParameterSummaryDefaultCaseCondition<A, B, C>);
  v27 = v39;
  v26 = v40;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v22, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v40, v25);
  v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v22, v26);
  v31 = v24;
  v29 = v37;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)(v37, v12, v27, &type metadata for OpenBookIntent, &type metadata for OpenBookIntent.OpenMode, v6, v6, v35, v23, v18, v18, v31);
  v28(v27, v26);
  v19(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v19)(v29, v6);
}

uint64_t sub_1001F7298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v25[1] = a1;
  v1 = sub_10004CFD4(&qword_1009D2188);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D2190);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2168);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v25 - v12;
  v14 = sub_1001FC1E8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 2, &type metadata for OpenBookIntent, v14);
  v15._countAndFlagsBits = 0x206E65704FLL;
  v15._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100711730);
  v17 = sub_10004CFD4(&qword_1009D2198);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100711758);
  v20 = sub_10004CFD4(&qword_1009D21A0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for OpenBookIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for OpenBookIntent, v14);
  v22 = sub_100030B34(&qword_1009D2170, &qword_1009D2168, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for OpenBookIntent, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v11, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for OpenBookIntent, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_1001F751C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_10004CFD4(&qword_1009D2188);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D2190);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2168);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v22 - v12;
  v14 = sub_1001FC1E8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenBookIntent, v14);
  v15._countAndFlagsBits = 0x206E65704FLL;
  v15._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100711730);
  v17 = sub_10004CFD4(&qword_1009D2198);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for OpenBookIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for OpenBookIntent, v14);
  v19 = sub_100030B34(&qword_1009D2170, &qword_1009D2168, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for OpenBookIntent, v7, v19);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for OpenBookIntent, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_1001F775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[46] = a3;
  v4[47] = a4;
  v4[44] = a1;
  v4[45] = a2;
  v5 = sub_10004CFD4(&qword_1009D1330);
  v4[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppIntentError(0);
  v4[49] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[50] = v7;
  v4[51] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[52] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[53] = v9;
  v4[54] = v10;
  return swift_task_switch(sub_1001F7818, v9, v10);
}

uint64_t sub_1001F7818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 568));
  if ((*(_BYTE *)(v0 + 568) & 1) != 0)
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
    v1 = *(_QWORD *)(v0 + 16);
    v2 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 456) = v1;
    *(_QWORD *)(v0 + 464) = v2;
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 472) = v3;
    *(_QWORD *)(v0 + 480) = v4;
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 488) = v5;
    *(_QWORD *)(v0 + 496) = v6;
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 504) = v7;
    *(_QWORD *)(v0 + 512) = v8;
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 520) = v9;
    *(_QWORD *)(v0 + 528) = v10;
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 536) = v11;
    *(_QWORD *)(v0 + 544) = v12;
    if (v2)
    {
      *(_QWORD *)(v0 + 112) = v1;
      *(_QWORD *)(v0 + 120) = v2;
      *(_BYTE *)(v0 + 128) = v3 & 1;
      *(_QWORD *)(v0 + 136) = v4;
      *(_QWORD *)(v0 + 144) = v5;
      *(_QWORD *)(v0 + 152) = v6;
      *(_QWORD *)(v0 + 160) = v7;
      *(_QWORD *)(v0 + 168) = v8;
      *(_QWORD *)(v0 + 176) = v9;
      *(_QWORD *)(v0 + 184) = v10;
      *(_QWORD *)(v0 + 192) = v11;
      *(_QWORD *)(v0 + 200) = v12;
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 248));
      v13 = (_QWORD *)swift_task_alloc(dword_1009E5084);
      *(_QWORD *)(v0 + 552) = v13;
      *v13 = v0;
      v13[1] = sub_1001F7B2C;
      return sub_10047105C(v0 + 112);
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 408);
      v17 = *(_QWORD *)(v0 + 392);
      v18 = *(_QWORD *)(v0 + 400);
      v19 = *(_QWORD *)(v0 + 384);
      v20 = swift_release(*(_QWORD *)(v0 + 416));
      v21 = IntentParameter.projectedValue.getter(v20);
      v22 = type metadata accessor for IntentDialog(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
      IntentParameter.needsValueError(_:)(v19);
      swift_release(v21);
      sub_100010960(v19, &qword_1009D1330);
      v23 = sub_1001FC22C();
      swift_allocError(v17, v23, 0, 0);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v24, v16, v17);
      swift_willThrow(v25);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      v26 = *(_QWORD *)(v0 + 384);
      swift_task_dealloc(*(_QWORD *)(v0 + 408));
      swift_task_dealloc(v26);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 208));
    v15 = (_QWORD *)swift_task_alloc(dword_1009E50A4);
    *(_QWORD *)(v0 + 440) = v15;
    *v15 = v0;
    v15[1] = sub_1001F7A2C;
    return sub_100470894();
  }
}

uint64_t sub_1001F7A2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 440);
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 424);
    v5 = *(_QWORD *)(v2 + 432);
    v6 = sub_1001F7CA4;
  }
  else
  {

    swift_unknownObjectRelease(*(_QWORD *)(v2 + 216));
    *(_QWORD *)(v2 + 320) = *(_QWORD *)(v2 + 232);
    sub_1001FC120((_QWORD *)(v2 + 320));
    *(_QWORD *)(v2 + 328) = *(_QWORD *)(v2 + 240);
    sub_1001FC120((_QWORD *)(v2 + 328));
    v4 = *(_QWORD *)(v2 + 424);
    v5 = *(_QWORD *)(v2 + 432);
    v6 = sub_1001F7AD8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001F7AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = swift_release(*(_QWORD *)(v0 + 416));
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 384);
  static IntentResult.result<>()(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F7B2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 552);
  *(_QWORD *)(*v1 + 560) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 424);
    v5 = *(_QWORD *)(v2 + 432);
    v6 = sub_1001F7D2C;
  }
  else
  {

    swift_unknownObjectRelease(*(_QWORD *)(v2 + 256));
    *(_QWORD *)(v2 + 312) = *(_QWORD *)(v2 + 272);
    sub_1001FC120((_QWORD *)(v2 + 312));
    *(_QWORD *)(v2 + 344) = *(_QWORD *)(v2 + 280);
    sub_1001FC120((_QWORD *)(v2 + 344));
    v4 = *(_QWORD *)(v2 + 424);
    v5 = *(_QWORD *)(v2 + 432);
    v6 = sub_1001F7BD8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001F7BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v14 = *(_OWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 504);
  v15 = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v7 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 416));
  v10 = sub_10006BAF8(v9, v8, v7, v6, v5, v4, v3, v15, v14, *((uint64_t *)&v14 + 1), v2, v1);
  v11 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 384);
  static IntentResult.result<>()(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F7CA4()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 416));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 216));
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 232);
  sub_1001FC120((_QWORD *)(v0 + 336));
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 240);
  sub_1001FC120((_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F7D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v10 = *(_OWORD *)(v0 + 520);
  v12 = *(_QWORD *)(v0 + 504);
  v13 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 488);
  v11 = *(_QWORD *)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 416));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 256));
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 272);
  sub_1001FC120((_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 280);
  sub_1001FC120((_QWORD *)(v0 + 288));
  sub_10006BAF8(v6, v7, v5, v4, v3, v11, v12, v13, v10, *((uint64_t *)&v10 + 1), v2, v1);
  v8 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F7E30@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC28, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E2A8, (uint64_t)sub_1001F6D8C, a1);
}

uint64_t sub_1001F7E58(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100711730);
  v4 = sub_10004CFD4(&qword_1009D2148);
  v5 = sub_100030B34(&qword_1009D2150, &qword_1009D2148, (uint64_t)&protocol conformance descriptor for ParameterSummaryTupleCaseCondition<A, B, C>);
  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_1001F6F20, 0, v4, a2, v5);
}

uint64_t sub_1001F7EE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D213C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_1001F775C(a1, v4, v5, v6);
}

uint64_t sub_1001F7F50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1001FAD88();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1001F7F78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001FC1E8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1001F7FA4()
{
  unint64_t result;

  result = qword_1009D1F78;
  if (!qword_1009D1F78)
  {
    result = swift_getWitnessTable(&unk_1007110E0, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1F78);
  }
  return result;
}

unint64_t sub_1001F7FEC()
{
  unint64_t result;

  result = qword_1009D1F80;
  if (!qword_1009D1F80)
  {
    result = swift_getWitnessTable(&unk_100711118, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1F80);
  }
  return result;
}

unint64_t sub_1001F8034()
{
  unint64_t result;

  result = qword_1009D1F88;
  if (!qword_1009D1F88)
  {
    result = swift_getWitnessTable(&unk_100711148, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1F88);
  }
  return result;
}

unint64_t sub_1001F807C()
{
  unint64_t result;

  result = qword_1009D1F90;
  if (!qword_1009D1F90)
  {
    result = swift_getWitnessTable(&unk_1007112D8, &type metadata for BookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009D1F90);
  }
  return result;
}

void *sub_1001F80C0()
{
  return &protocol witness table for String;
}

uint64_t sub_1001F80CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _OWORD v7[2];
  uint64_t v8;

  sub_10004CFD4(&qword_1009D2100);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v7, 0, sizeof(v7));
  v8 = 0;
  v5 = static AppDependencyManager.shared.getter(v0, v1, v2, v3, v4);
  result = AppDependency.__allocating_init(key:manager:)(v7, v5);
  qword_100A1E2C0 = result;
  return result;
}

uint64_t sub_1001F8130()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E2C8);
  sub_100048F64(v16, (uint64_t)qword_100A1E2C8);
  v17 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Type display representation for AppEntity that represents a book", 64, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

_QWORD *sub_1001F8338@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *result;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v30[1] = a1;
  v3 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D1338);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v30 - v10;
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)v30 - v18;
  EntityProperty.wrappedValue.getter(&v31, v17);
  v21 = v32;
  if (v32)
  {
    v22 = v31;
  }
  else
  {
    v22 = *v2;
    v21 = v2[1];
    v20 = swift_bridgeObjectRetain(v21);
  }
  v23 = LocalizedStringResource.init(stringLiteral:)(v22, v21, v20);
  EntityProperty.wrappedValue.getter(&v31, v23);
  v24 = v32;
  v25 = swift_bridgeObjectRelease(v32);
  if (!v24)
  {
    v28 = 1;
    goto LABEL_8;
  }
  result = EntityProperty.wrappedValue.getter(&v31, v25);
  if (v32)
  {
    LocalizedStringResource.init(stringLiteral:)(v31, v32, v27);
    v28 = 0;
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v28, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v12);
    sub_1001FC148((uint64_t)v11, (uint64_t)v9);
    v29 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
    DisplayRepresentation.init(title:subtitle:image:)(v16, v9, v5);
    sub_100010960((uint64_t)v11, &qword_1009D1338);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F8570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "libraryAssetOnMainQueueWithAssetID:", v6);

  if (v7)
  {
    v8 = objc_msgSend(v7, "storeID");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend((id)objc_opt_self(AEBookInfo), "storeURLForBookStoreId:isAudiobook:", v8, 0);

      if (v10)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

        v11 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
      }
      else
      {

        v22 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
      }
      return sub_100025B3C((uint64_t)v4, a1, (uint64_t *)&unk_1009D23D0);
    }

  }
  if (qword_1009CDC10 != -1)
    swift_once(&qword_1009CDC10, sub_1001F6084);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048F64(v12, (uint64_t)qword_1009D1ED8);
  v14 = Logger.logObject.getter(v13);
  v18 = static os_log_type_t.debug.getter(v14, v15, v16, v17);
  if (os_log_type_enabled(v14, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v18, "Failed fetching storeID", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
}

uint64_t sub_1001F87EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1009CDC30 != -1)
    swift_once(&qword_1009CDC30, sub_1001F80CC);
  v2 = qword_100A1E2C0;
  *a1 = qword_100A1E2C0;
  return swift_retain(v2);
}

unint64_t sub_1001F8840()
{
  unint64_t result;

  result = qword_1009D1F98;
  if (!qword_1009D1F98)
  {
    result = swift_getWitnessTable(&unk_100711050, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1F98);
  }
  return result;
}

unint64_t sub_1001F8888()
{
  unint64_t result;

  result = qword_1009D1FA0;
  if (!qword_1009D1FA0)
  {
    result = swift_getWitnessTable(&unk_100711180, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FA0);
  }
  return result;
}

uint64_t sub_1001F88CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v13;

  v2 = sub_10004CFD4(&qword_1009D2120);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D2128);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001F8840();
  _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, a1, v9);
  v10._object = (void *)0x80000001007B5B60;
  v10._countAndFlagsBits = 0xD00000000000001FLL;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v2);
  _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v5, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return _EntityURLRepresentation.init(stringInterpolation:)(v8, a1, v9);
}

unint64_t sub_1001F8A20()
{
  unint64_t result;

  result = qword_1009D1FA8;
  if (!qword_1009D1FA8)
  {
    result = swift_getWitnessTable(&unk_1007111A8, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FA8);
  }
  return result;
}

unint64_t sub_1001F8A68()
{
  unint64_t result;

  result = qword_1009D1FB0;
  if (!qword_1009D1FB0)
  {
    result = swift_getWitnessTable(&unk_1007111D0, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FB0);
  }
  return result;
}

unint64_t sub_1001F8AB0()
{
  unint64_t result;

  result = qword_1009D1FB8;
  if (!qword_1009D1FB8)
  {
    result = swift_getWitnessTable(&unk_1007111F8, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FB8);
  }
  return result;
}

unint64_t sub_1001F8AF8()
{
  unint64_t result;

  result = qword_1009D1FC0;
  if (!qword_1009D1FC0)
  {
    result = swift_getWitnessTable(&unk_100711250, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FC0);
  }
  return result;
}

void *sub_1001F8B3C()
{
  return &protocol witness table for String;
}

uint64_t sub_1001F8B48@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1001F8B54(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1001FC190();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_1001FC1D4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_1001F8B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC38, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E2C8, (uint64_t)sub_1001F8130, a1);
}

uint64_t sub_1001F8BC0()
{
  return sub_100030B34(&qword_1009D1FD0, &qword_1009D1FD8, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001F8BEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8840();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001F8C28()
{
  unint64_t result;

  result = qword_1009D1FE0;
  if (!qword_1009D1FE0)
  {
    result = swift_getWitnessTable(&unk_100711280, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D1FE0);
  }
  return result;
}

uint64_t sub_1001F8C70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F8AF8();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1001F8CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[9] = a1;
  v4[10] = a2;
  v5 = *v3;
  v4[11] = a3;
  v4[12] = v5;
  return swift_task_switch(sub_1001F8CC8, 0, 0);
}

uint64_t sub_1001F8CC8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[11];
  AppDependency.wrappedValue.getter(v0 + 2);
  v2 = (_QWORD *)swift_task_alloc(dword_1009E50AC);
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_1001F8D34;
  return sub_100471A18(v0[10], v1);
}

uint64_t sub_1001F8D34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v4 = *(_QWORD **)(*v1 + 72);
  v6 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 104));

  swift_unknownObjectRelease(*(_QWORD *)(v3 + 24));
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v3 + 40);
  sub_1001FC120((_QWORD *)(v3 + 64));
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v3 + 48);
  sub_1001FC120((_QWORD *)(v3 + 56));
  *v4 = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

unint64_t sub_1001F8DCC()
{
  unint64_t result;

  result = qword_1009D1FF0;
  if (!qword_1009D1FF0)
  {
    result = swift_getWitnessTable(&unk_100711330, &type metadata for BookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009D1FF0);
  }
  return result;
}

unint64_t sub_1001F8E14()
{
  unint64_t result;

  result = qword_1009D1FF8[0];
  if (!qword_1009D1FF8[0])
  {
    result = swift_getWitnessTable(&unk_100711390, &type metadata for BookEntityStringQuery);
    atomic_store(result, qword_1009D1FF8);
  }
  return result;
}

uint64_t sub_1001F8E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _OWORD v9[2];
  uint64_t v10;

  sub_10004CFD4(&qword_1009D2100);
  v2 = type metadata accessor for AppDependencyManager(0);
  memset(v9, 0, sizeof(v9));
  v10 = 0;
  v7 = static AppDependencyManager.shared.getter(v2, v3, v4, v5, v6);
  result = AppDependency.__allocating_init(key:manager:)(v9, v7);
  *a1 = result;
  return result;
}

uint64_t sub_1001F8EC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch(sub_1001F8EE0, 0, 0);
}

uint64_t sub_1001F8EE0()
{
  _QWORD *v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(dword_1009E50C4);
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1001F8F40;
  return sub_1004716BC(v0[9]);
}

uint64_t sub_1001F8F40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;

  v3 = *v1;
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 88));

  swift_unknownObjectRelease(*(_QWORD *)(v3 + 24));
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v3 + 40);
  sub_1001FC120((_QWORD *)(v3 + 64));
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v3 + 48);
  sub_1001FC120((_QWORD *)(v3 + 56));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_1001F8FC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch(sub_1001F8FE4, 0, 0);
}

uint64_t sub_1001F8FE4()
{
  uint64_t v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc(dword_1009E50AC);
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_1001F9044;
  return sub_100471A18(0, 0);
}

uint64_t sub_1001F9044(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v4 = *(_QWORD **)(*v1 + 72);
  v6 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 88));

  swift_unknownObjectRelease(*(_QWORD *)(v3 + 24));
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v3 + 40);
  sub_1001FC120((_QWORD *)(v3 + 64));
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v3 + 48);
  sub_1001FC120((_QWORD *)(v3 + 56));
  *v4 = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

unint64_t sub_1001F90DC()
{
  unint64_t result;

  result = qword_1009D2010;
  if (!qword_1009D2010)
  {
    result = swift_getWitnessTable(&unk_1007113B8, &type metadata for BookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009D2010);
  }
  return result;
}

unint64_t sub_1001F9124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2018[0];
  if (!qword_1009D2018[0])
  {
    v1 = sub_100030B74(&qword_1009E50B0);
    sub_1001F8AB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, qword_1009D2018);
  }
  return result;
}

uint64_t sub_1001F9188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001F807C();
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_1001F91F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000AE34;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_1001F9264()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E2E0);
  sub_100048F64(v16, (uint64_t)qword_100A1E2E0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x20746E65746E6F43, 0xEC00000065707954);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Type display representation for enum that represent book content types, e.g. book or pdf", 88, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_1001F947C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t result;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v39 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v38 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v36 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D2110);
  v17 = sub_10004CFD4(&qword_1009D09A0);
  v18 = *(_QWORD *)(v17 - 8);
  v35 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v35, v19 | 7);
  v37 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_10070FC00;
  v22 = v21 + v20;
  v31[1] = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  static Locale.current.getter(v23);
  v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v36 = *(_QWORD *)(v36 + 104);
  v24 = v5;
  ((void (*)(char *))v36)(v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'Content Type' enum case for books (EPUB, MT, RMT)", 50, 2);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25 = v38;
  v32(v38, 1, 1, v12);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v39;
  v27(v39, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  *(_BYTE *)(v22 + v35) = 1;
  v29 = String.LocalizationValue.init(stringLiteral:)(4605008, 0xE300000000000000);
  static Locale.current.getter(v29);
  ((void (*)(char *, _QWORD, uint64_t))v36)(v24, v34, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v24, "'Content Type' enum case for PDFs.", 34, 2);
  v32(v25, 1, 1, v33);
  v27(v28, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  result = sub_1001DA588(v37);
  qword_100A1E2F8 = result;
  return result;
}

uint64_t sub_1001F9818(char *a1, char *a2)
{
  return sub_1006704C0(*a1, *a2);
}

unint64_t sub_1001F9828()
{
  unint64_t result;

  result = qword_1009D2030;
  if (!qword_1009D2030)
  {
    result = swift_getWitnessTable(&unk_1007113D4, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2030);
  }
  return result;
}

Swift::Int sub_1001F986C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 6710384;
  else
    v2 = 1802465122;
  if (v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001F98DC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 6710384;
  else
    v2 = 1802465122;
  if (*v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001F9928(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 6710384;
  else
    v3 = 1802465122;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001F9994@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1008EFA08;
  return sub_1001F99A0(v2, a1, a2);
}

uint64_t sub_1001F99A0@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_1001F99F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1802465122;
  if (*v1)
    v2 = 6710384;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1001F9A2C()
{
  unint64_t result;

  result = qword_1009D2038;
  if (!qword_1009D2038)
  {
    result = swift_getWitnessTable(&unk_1007114B4, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2038);
  }
  return result;
}

unint64_t sub_1001F9A74()
{
  unint64_t result;

  result = qword_1009D2040;
  if (!qword_1009D2040)
  {
    result = swift_getWitnessTable(&unk_1007114EC, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2040);
  }
  return result;
}

unint64_t sub_1001F9ABC()
{
  unint64_t result;

  result = qword_1009D2048;
  if (!qword_1009D2048)
  {
    result = swift_getWitnessTable(&unk_10071143C, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2048);
  }
  return result;
}

unint64_t sub_1001F9B04()
{
  unint64_t result;

  result = qword_1009D2050;
  if (!qword_1009D2050)
  {
    result = swift_getWitnessTable(&unk_10071151C, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2050);
  }
  return result;
}

unint64_t sub_1001F9B4C()
{
  unint64_t result;

  result = qword_1009D2058;
  if (!qword_1009D2058)
  {
    result = swift_getWitnessTable(&unk_100711544, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2058);
  }
  return result;
}

unint64_t sub_1001F9B94()
{
  unint64_t result;

  result = qword_1009D2060;
  if (!qword_1009D2060)
  {
    result = swift_getWitnessTable(&unk_10071156C, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2060);
  }
  return result;
}

unint64_t sub_1001F9BDC()
{
  unint64_t result;

  result = qword_1009D2068;
  if (!qword_1009D2068)
  {
    result = swift_getWitnessTable(&unk_1007115C4, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2068);
  }
  return result;
}

uint64_t sub_1001F9C20@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC40, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E2E0, (uint64_t)sub_1001F9264, a1);
}

uint64_t sub_1001F9C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F9C50(a1, a2, a3, (uint64_t (*)(void))sub_1001F9C90);
}

uint64_t sub_1001F9C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD v5[2];

  v5[0] = a2;
  v5[1] = a4();
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1001F9C90()
{
  unint64_t result;

  result = qword_1009D2070;
  if (!qword_1009D2070)
  {
    result = swift_getWitnessTable(&unk_100711474, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2070);
  }
  return result;
}

uint64_t sub_1001F9CD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9C90();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001F9D10()
{
  unint64_t result;

  result = qword_1009D2078;
  if (!qword_1009D2078)
  {
    result = swift_getWitnessTable(&unk_100711604, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2078);
  }
  return result;
}

unint64_t sub_1001F9D58()
{
  unint64_t result;

  result = qword_1009D2080;
  if (!qword_1009D2080)
  {
    result = swift_getWitnessTable(&unk_10071162C, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2080);
  }
  return result;
}

unint64_t sub_1001F9DA0()
{
  unint64_t result;

  result = qword_1009D2088;
  if (!qword_1009D2088)
  {
    result = swift_getWitnessTable(&unk_1007113FC, &type metadata for BookAppEntityContentType);
    atomic_store(result, (unint64_t *)&qword_1009D2088);
  }
  return result;
}

uint64_t sub_1001F9DE4(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CDC48, &qword_100A1E2F8, (uint64_t)sub_1001F947C);
}

uint64_t sub_1001F9E00(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return swift_bridgeObjectRetain(*a4);
}

uint64_t sub_1001F9E3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F9BDC();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1001F9E74()
{
  return sub_100030B34(&qword_1009D2090, &qword_1009D2098, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1001F9EA0(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFA58;
}

unint64_t sub_1001F9EB4()
{
  unint64_t result;

  result = qword_1009D20A0;
  if (!qword_1009D20A0)
  {
    result = swift_getWitnessTable(&unk_1007116A4, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D20A0);
  }
  return result;
}

Swift::Int sub_1001F9EF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, 0);
  v1 = String.hash(into:)(v10, *v0, v0[1]);
  EntityProperty.wrappedValue.getter(&v8, v1);
  v2 = v9;
  if (v9)
  {
    v3 = v8;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v10, v3, v2);
    v4 = swift_bridgeObjectRelease_n(v2, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  EntityProperty.wrappedValue.getter(&v8, v4);
  v5 = v9;
  if (v9)
  {
    v6 = v8;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v10, v6, v5);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1001F9FF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = String.hash(into:)(a1, *v1, v1[1]);
  EntityProperty.wrappedValue.getter(&v9, v3);
  v4 = v10;
  if (v10)
  {
    v5 = v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v5, v4);
    v6 = swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  EntityProperty.wrappedValue.getter(&v9, v6);
  v7 = v10;
  if (v10)
  {
    v8 = v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1001FA0EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v13, a1);
  v4 = String.hash(into:)(v13, v2, v3);
  EntityProperty.wrappedValue.getter(&v11, v4);
  v5 = v12;
  if (v12)
  {
    v6 = v11;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v13, v6, v5);
    v7 = swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  EntityProperty.wrappedValue.getter(&v11, v7);
  v8 = v12;
  if (v12)
  {
    v9 = v11;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(v13, v9, v8);
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1001FA1F8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1001FAC00((uint64_t *)v9, v10) & 1;
}

ValueMetadata *type metadata accessor for BookAppEntityContentType()
{
  return &type metadata for BookAppEntityContentType;
}

ValueMetadata *type metadata accessor for BookEntityStringQuery()
{
  return &type metadata for BookEntityStringQuery;
}

uint64_t destroy for BookAppEntity(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  swift_release(a1[8]);
  swift_release(a1[9]);
  return swift_bridgeObjectRelease(a1[11]);
}

uint64_t initializeWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  v11 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t assignWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  swift_retain(v18);
  swift_release(v19);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a2 + 88);
  v21 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  return a1;
}

__n128 initializeWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v6);
  swift_release(*(_QWORD *)(a1 + 40));
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v7);
  swift_release(*(_QWORD *)(a1 + 56));
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v8);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookAppEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookAppEntity()
{
  return &type metadata for BookAppEntity;
}

uint64_t destroy for OpenBookIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s5Books14OpenBookIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for OpenBookIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for OpenBookIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenBookIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenBookIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent()
{
  return &type metadata for OpenBookIntent;
}

uint64_t _s5Books24BookAppEntityContentTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001FA844 + 4 * byte_100710CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001FA878 + 4 * byte_100710CE0[v4]))();
}

uint64_t sub_1001FA878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FA880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001FA888);
  return result;
}

uint64_t sub_1001FA894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001FA89CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001FA8A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FA8A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent.OpenMode()
{
  return &type metadata for OpenBookIntent.OpenMode;
}

uint64_t sub_1001FA8C4()
{
  return sub_100030B34(&qword_1009D20A8, &qword_1009D20B0, (uint64_t)&protocol conformance descriptor for ParameterSummarySwitchCondition<A, B, C>);
}

uint64_t sub_1001FA8F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D23D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 24) = swift_task_alloc(v4);
  v5 = swift_task_alloc(v4);
  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 40) = v6;
  *(_QWORD *)(v2 + 48) = v7;
  *(_BYTE *)(v2 + 80) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(v2 + 56) = *((_OWORD *)a2 + 5);
  return swift_task_switch(sub_1001FA978, 0, 0);
}

uint64_t sub_1001FA978()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(unsigned __int8 *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for URL(0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  if (v1 == 1)
  {
    v5 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001FAB34, v6, v7);
  }
  else
  {
    if (*(_QWORD *)(v0 + 64))
    {
      v9 = (void *)objc_opt_self(AEBookInfo);
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v9, "storeURLForBookStoreId:isAudiobook:", v10, 0);

      if (v11)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

        v12 = 0;
      }
      else
      {
        v12 = 1;
      }
      v15 = *(_QWORD *)(v0 + 16);
      v14 = *(_QWORD *)(v0 + 24);
      sub_100010960(v15, (uint64_t *)&unk_1009D23D0);
      v4(v14, v12, 1, v3);
      sub_100025B3C(v14, v15, (uint64_t *)&unk_1009D23D0);
    }
    else
    {
      v13 = *(_QWORD *)(v0 + 16);
      sub_100010960(v13, (uint64_t *)&unk_1009D23D0);
      v4(v13, 1, 1, v3);
    }
    v16 = *(_QWORD *)(v0 + 24);
    swift_task_dealloc(*(_QWORD *)(v0 + 32));
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001FAB34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 72));
  sub_1001F8570(v1);
  return swift_task_switch(sub_1001FAB90, 0, 0);
}

uint64_t sub_1001FAB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  sub_100010960(v2, (uint64_t *)&unk_1009D23D0);
  sub_100025B3C(v1, v2, (uint64_t *)&unk_1009D23D0);
  v3 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FAC00(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), v8 = 0, (v4 & 1) != 0))
  {
    v9 = EntityProperty.wrappedValue.getter(&v19, v4);
    v11 = v19;
    v10 = v20;
    v12 = EntityProperty.wrappedValue.getter(&v19, v9);
    v13 = v20;
    if (!v10)
    {
      if (v20)
      {
        v8 = 0;
        v10 = v20;
LABEL_23:
        swift_bridgeObjectRelease(v10);
        return v8 & 1;
      }
      goto LABEL_14;
    }
    if (!v20)
    {
LABEL_20:
      v8 = 0;
      goto LABEL_23;
    }
    if (v11 == v19 && v10 == v20)
    {
      swift_bridgeObjectRelease(v10);
      v12 = (_QWORD *)swift_bridgeObjectRelease(v13);
LABEL_14:
      v15 = EntityProperty.wrappedValue.getter(&v19, v12);
      v17 = v19;
      v16 = v20;
      EntityProperty.wrappedValue.getter(&v19, v15);
      v10 = v20;
      if (v16)
      {
        if (v20)
        {
          if (v17 == v19 && v16 == v20)
          {
            swift_bridgeObjectRelease(v16);
            v8 = 1;
          }
          else
          {
            v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v16, v19, v20, 0);
            swift_bridgeObjectRelease(v16);
          }
        }
        else
        {
          v8 = 0;
          v10 = v16;
        }
        goto LABEL_23;
      }
      if (!v20)
      {
        v8 = 1;
        return v8 & 1;
      }
      goto LABEL_20;
    }
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, v19, v20, 0);
    swift_bridgeObjectRelease(v10);
    v12 = (_QWORD *)swift_bridgeObjectRelease(v13);
    v8 = 0;
    if ((v14 & 1) != 0)
      goto LABEL_14;
  }
  return v8 & 1;
}

uint64_t sub_1001FAD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  void (*v56)(char *);
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v62 = type metadata accessor for InputConnectionBehavior(0);
  v57 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v61 = (char *)&v48 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_10004CFD4(&qword_1009D1330);
  v2 = __chkstk_darwin(v1);
  v60 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v59 = (char *)&v48 - v4;
  v5 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  v53 = v18;
  v20 = __chkstk_darwin(v18);
  v58 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v48 = (char *)&v48 - v22;
  v54 = sub_10004CFD4(&qword_1009D20F0);
  v23 = String.LocalizationValue.init(stringLiteral:)(1701869908, 0xE400000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v50 = v8;
  v25(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v49 = v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Open Book' parameter that controls mode - open most recent or open specific book.", 82, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x80000001007B5870);
  static Locale.current.getter(v26);
  v25(v11, v24, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description for 'Open Book' AppIntent mode parameter", 52, 2);
  v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v52(v7, 0, 1, v18);
  LOBYTE(v63) = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v51 = v28;
  v29 = v59;
  v28(v59, 1, 1, v27);
  v30 = v60;
  v28(v60, 1, 1, v27);
  v55 = enum case for InputConnectionBehavior.default(_:);
  v56 = *(void (**)(char *))(v57 + 104);
  v31 = v61;
  v56(v61);
  v32 = sub_1001F6AF8();
  v33 = v48;
  v57 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v48, v7, &v63, v29, v30, v31, &off_1008EF9B8, v32);
  v54 = sub_10004CFD4(&qword_1009D20F8);
  v34 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  static Locale.current.getter(v34);
  v35 = v50;
  v36 = v49;
  v49(v11, v24, v50);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Open Book' parameter that specifies which book to open.", 56, 2);
  v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x80000001007B5930);
  static Locale.current.getter(v37);
  v36(v11, v24, v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the parameter of the specific book title to choose in the Open Book Intent", 89, 2);
  v52(v7, 0, 1, v53);
  v67 = 0u;
  v68 = 0u;
  v65 = 0u;
  v66 = 0u;
  v63 = 0u;
  v64 = 0u;
  v38 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007B59D0);
  static Locale.current.getter(v38);
  v36(v11, v24, v35);
  v39 = v58;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Open Book' prompt when running in 'specific' mode with no book selected.", 73, 2);
  v40 = v59;
  IntentDialog.init(_:)(v39);
  v41 = v40;
  v42 = v51;
  v51(v40, 0, 1, v27);
  v43 = v60;
  v42(v60, 1, 1, v27);
  v44 = v61;
  ((void (*)(char *, _QWORD, uint64_t))v56)(v61, v55, v62);
  v45 = sub_1001F8840();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v33, v7, &v63, v41, v43, v44, v45);
  sub_10004CFD4(&qword_1009D2100);
  type metadata accessor for AppDependencyManager(0);
  v63 = 0u;
  v64 = 0u;
  *(_QWORD *)&v65 = 0;
  v46 = static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)(&v63, v46);
  return v57;
}

uint64_t sub_1001FB3C8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v67;
  uint64_t v68;
  char *v69;
  int v70;
  _QWORD *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

  v71 = (_QWORD *)a2;
  v70 = a1 & 1;
  v76 = type metadata accessor for InputConnectionBehavior(0);
  v68 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v3);
  v74 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (char *)&v60 - v6;
  v7 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v7);
  v72 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v64 = v19;
  __chkstk_darwin(v19);
  v69 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v60 = (char *)&v60 - v23;
  v65 = sub_10004CFD4(&qword_1009D20F0);
  v24 = String.LocalizationValue.init(stringLiteral:)(1701869908, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v62 = v9;
  v26(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  v61 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Open Book' parameter that controls mode - open most recent or open specific book.", 82, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x80000001007B5870);
  static Locale.current.getter(v27);
  v26(v12, v25, v9);
  v28 = v72;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description for 'Open Book' AppIntent mode parameter", 52, 2);
  v63 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v63(v28, 0, 1, v19);
  LOBYTE(v77) = 0;
  v29 = type metadata accessor for IntentDialog(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v66 = v30;
  v31 = v73;
  v30(v73, 1, 1, v29);
  v32 = v74;
  v30(v74, 1, 1, v29);
  v67 = enum case for InputConnectionBehavior.default(_:);
  v68 = *(_QWORD *)(v68 + 104);
  v33 = v75;
  ((void (*)(char *))v68)(v75);
  v34 = sub_1001F6AF8();
  v35 = v60;
  v36 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v60, v28, &v77, v31, v32, v33, &off_1008EF9E0, v34);
  v65 = sub_10004CFD4(&qword_1009D20F8);
  swift_retain(v36);
  v37 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  static Locale.current.getter(v37);
  v38 = v62;
  v39 = v61;
  v61(v12, v25, v62);
  v40 = v35;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Open Book' parameter that specifies which book to open.", 56, 2);
  v41 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x80000001007B5930);
  static Locale.current.getter(v41);
  v39(v12, v25, v38);
  v42 = v72;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of the parameter of the specific book title to choose in the Open Book Intent", 89, 2);
  v63(v42, 0, 1, v64);
  v81 = 0u;
  v82 = 0u;
  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007B59D0);
  static Locale.current.getter(v43);
  v39(v12, v25, v38);
  v44 = v69;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Open Book' prompt when running in 'specific' mode with no book selected.", 73, 2);
  v45 = v73;
  IntentDialog.init(_:)(v44);
  v46 = v66;
  v66(v45, 0, 1, v29);
  v47 = v74;
  v46(v74, 1, 1, v29);
  v48 = v75;
  ((void (*)(char *, _QWORD, uint64_t))v68)(v75, v67, v76);
  v49 = sub_1001F8840();
  v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v40, v42, &v77, v45, v47, v48, v49);
  sub_10004CFD4(&qword_1009D2100);
  type metadata accessor for AppDependencyManager(0);
  v77 = 0u;
  v78 = 0u;
  *(_QWORD *)&v79 = 0;
  v51 = swift_retain(v50);
  v56 = static AppDependencyManager.shared.getter(v51, v52, v53, v54, v55);
  v57 = AppDependency.__allocating_init(key:manager:)(&v77, v56);
  LOBYTE(v77) = v70;
  swift_retain(v36);
  swift_retain(v50);
  swift_retain(v57);
  IntentParameter.wrappedValue.setter(&v77);
  swift_release(v50);
  swift_release(v36);
  v58 = v71;
  sub_100025B3C((uint64_t)v71, (uint64_t)&v77, &qword_1009D2108);
  swift_retain(v36);
  swift_retain(v50);
  swift_retain(v57);
  sub_10004E97C(v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
  IntentParameter.wrappedValue.setter(&v77);
  sub_10004E97C(v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  swift_release_n(v57, 2);
  swift_release_n(v50, 2);
  swift_release_n(v36, 2);
  return v36;
}

uint64_t sub_1001FBB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v55 = a6;
  v56 = a8;
  v59 = a1;
  v60 = a7;
  v53 = a2;
  v54 = a5;
  v51 = a3;
  v52 = a4;
  v57 = a9;
  v58 = a10;
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D20B8);
  v50 = ((uint64_t (*)(void))EntityProperty<>.init())();
  v23 = swift_retain(v50);
  v49 = EntityProperty<>.init()(v23);
  v24 = swift_retain(v49);
  v48 = EntityProperty<>.init()(v24);
  swift_retain(v48);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x65726E6547, 0xE500000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v27(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'genre' filter label", 41, 2);
  v28 = EntityProperty<>.init(title:)(v22);
  v47 = v28;
  sub_10004CFD4(&qword_1009D20C0);
  v29 = swift_retain(v28);
  v30 = EntityProperty<>.init()(v29);
  sub_10004CFD4(&qword_1009D20C8);
  swift_retain(v30);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x20746E65746E6F43, 0xEC00000065707954);
  static Locale.current.getter(v31);
  v27(v13, v26, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'content type' filter label", 48, 2);
  v32 = sub_1001F9C90();
  v33 = EntityProperty<>.init(title:)(v22, v32);
  sub_10004CFD4(&qword_1009D20D0);
  swift_retain(v33);
  v34 = String.LocalizationValue.init(stringLiteral:)(0x6C62616572616853, 0xED00004C52552065);
  static Locale.current.getter(v34);
  v27(v13, v26, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Book AppEntity shareable store URL property", 43, 2);
  v35 = sub_100030B34(&qword_1009D20E0, &qword_1009D20E8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v36 = EntityProperty<>.init(title:_get:)(v22, &unk_1009D20D8, 0, v35);
  v61 = v51;
  v62 = v52;
  swift_retain_n(v36, 2);
  v37 = v53;
  swift_bridgeObjectRetain_n(v53, 2);
  v38 = v50;
  swift_retain(v50);
  v39 = v49;
  swift_retain(v49);
  v40 = v48;
  swift_retain(v48);
  v41 = v47;
  swift_retain(v47);
  swift_retain(v30);
  swift_retain(v33);
  EntityProperty.wrappedValue.setter(&v61);
  swift_bridgeObjectRelease(0);
  swift_release(v36);
  swift_release(v33);
  swift_release(v30);
  swift_release(v41);
  swift_release(v40);
  swift_release(v39);
  swift_release(v38);
  swift_bridgeObjectRelease(v37);
  v61 = v54;
  v62 = v55;
  swift_bridgeObjectRetain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v40);
  swift_retain(v41);
  swift_retain(v30);
  swift_retain(v33);
  swift_retain(v36);
  EntityProperty.wrappedValue.setter(&v61);
  swift_bridgeObjectRelease(0);
  swift_release(v36);
  swift_release(v33);
  swift_release(v30);
  swift_release(v41);
  swift_release(v40);
  swift_release(v39);
  swift_release(v38);
  swift_bridgeObjectRelease(v37);
  LOBYTE(v61) = 0;
  v42 = v56;
  swift_bridgeObjectRetain_n(v56, 2);
  swift_bridgeObjectRetain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v40);
  swift_retain(v41);
  swift_retain(v30);
  swift_retain(v33);
  swift_retain(v36);
  EntityProperty.wrappedValue.setter(&v61);
  swift_bridgeObjectRelease(v42);
  swift_release(v36);
  swift_release(v33);
  swift_release(v30);
  swift_release(v41);
  swift_release(v40);
  swift_release(v39);
  swift_release(v38);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRetain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v40);
  swift_retain(v41);
  swift_retain(v30);
  swift_retain(v33);
  swift_bridgeObjectRelease(v42);
  swift_release(v36);
  swift_bridgeObjectRelease_n(v37, 2);
  swift_release_n(v38, 2);
  swift_release_n(v39, 2);
  swift_release_n(v40, 2);
  swift_release_n(v41, 2);
  swift_release_n(v30, 2);
  result = swift_release_n(v33, 2);
  v44 = v57;
  *v57 = v59;
  v44[1] = v37;
  *((_BYTE *)v44 + 16) = v58;
  v44[3] = v38;
  v44[4] = v39;
  v44[5] = v40;
  v44[6] = v41;
  v44[7] = v30;
  v44[8] = v33;
  v45 = v60;
  v44[9] = v36;
  v44[10] = v45;
  v44[11] = v42;
  return result;
}

_QWORD *sub_1001FC120(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t sub_1001FC148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D1338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001FC190()
{
  unint64_t result;

  result = qword_1009D2118;
  if (!qword_1009D2118)
  {
    result = swift_getWitnessTable(&unk_1007110A8, &type metadata for BookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009D2118);
  }
  return result;
}

uint64_t sub_1001FC1D4(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_1001FC1E8()
{
  unint64_t result;

  result = qword_1009D2130;
  if (!qword_1009D2130)
  {
    result = swift_getWitnessTable(&unk_100710F7C, &type metadata for OpenBookIntent);
    atomic_store(result, &qword_1009D2130);
  }
  return result;
}

unint64_t sub_1001FC22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2140;
  if (!qword_1009D2140)
  {
    v1 = type metadata accessor for AppIntentError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AppIntentError, v1);
    atomic_store(result, (unint64_t *)&qword_1009D2140);
  }
  return result;
}

uint64_t sub_1001FC274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001FC29C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001FC2D0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v19;
  _BYTE v20[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v20[-v10];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007B5D90);
  v12 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v13 = v12(v9, v11, v5);
  static Locale.current.getter(v13);
  v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_orientation_lock_title", 31, 2, v9, 0, 0, 0, v4, "Portrait orientation lock info bar title", 40, 2);
  v15 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v15(v11, v5);
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
    v16 = v12(v9, v11, v5);
    static Locale.current.getter(v16);
    LOWORD(v19) = 2;
    String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_orientation_lock_description_on", 40, 2, v9, 0, 0, 0, v4, "Portrait orientation lock 'on' info bar description", 51, v19);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
    v17 = v12(v9, v11, v5);
    static Locale.current.getter(v17);
    LOWORD(v19) = 2;
    String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_orientation_lock_description_off", 41, 2, v9, 0, 0, 0, v4, "Portrait orientation lock 'off' info bar description", 52, v19);
  }
  v15(v11, v5);
  return v14;
}

uint64_t sub_1001FC51C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v19;
  _BYTE v20[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v20[-v10];
  String.LocalizationValue.init(stringLiteral:)(0x69754720656E694CLL, 0xEA00000000006564);
  v12 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v13 = v12(v9, v11, v5);
  static Locale.current.getter(v13);
  v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_line_guide_title", 25, 2, v9, 0, 0, 0, v4, "Line guide lock info bar title", 30, 2);
  v15 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v15(v11, v5);
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
    v16 = v12(v9, v11, v5);
    static Locale.current.getter(v16);
    LOWORD(v19) = 2;
    String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_description_on", 23, 2, v9, 0, 0, 0, v4, "Line guide 'on' info bar description", 36, v19);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
    v17 = v12(v9, v11, v5);
    static Locale.current.getter(v17);
    LOWORD(v19) = 2;
    String.init(localized:defaultValue:table:bundle:locale:comment:)("Info_bar_description_off", 24, 2, v9, 0, 0, 0, v4, "Line guide 'off' info bar description", 37, v19);
  }
  v15(v11, v5);
  return v14;
}

uint64_t sub_1001FC768()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D21B0);
  sub_100048F64(v0, (uint64_t)qword_1009D21B0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000002CLL, 0x80000001007B61B0);
}

void sub_1001FC7E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_23;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v8)
    {
LABEL_21:
      dispatch thunk of AssetActivityItemProviding.update(annotations:)(_swiftEmptyArrayStorage, a2, a3);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      return;
    }
    sub_100366A50(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v27 = a2;
    v28 = v4;
    v29 = a3;
    v30 = v8;
    v9 = 0;
    v31 = v7;
    v32 = v7 & 0xC000000000000001;
    while (v8 != v9)
    {
      if (v32)
      {
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      }
      else
      {
        v10 = *(void **)(v7 + 8 * v9 + 32);
        swift_unknownObjectRetain(v10);
      }
      v11 = objc_msgSend(v10, "annotationLocation", v27, v28, v29);
      if (v11)
      {
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      v16 = objc_msgSend(v10, "annotationSelectedText");
      if (!v16)
        goto LABEL_28;
      v17 = v16;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      a3 = v18;

      v19 = objc_msgSend(v10, "annotationNote");
      if (v19)
      {
        v20 = v19;
        v21 = v15;
        v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        a2 = v22;
        swift_unknownObjectRelease(v10);

      }
      else
      {
        v21 = v15;
        swift_unknownObjectRelease(v10);
        v4 = 0;
        a2 = 0;
      }
      v24 = _swiftEmptyArrayStorage[2];
      v23 = _swiftEmptyArrayStorage[3];
      if (v24 >= v23 >> 1)
        sub_100366A50(v23 > 1, v24 + 1, 1);
      ++v9;
      _swiftEmptyArrayStorage[2] = v24 + 1;
      v25 = &_swiftEmptyArrayStorage[6 * v24];
      v25[4] = v13;
      v25[5] = v21;
      v25[6] = v33;
      v25[7] = a3;
      v25[8] = v4;
      v25[9] = a2;
      v8 = v30;
      v7 = v31;
      if (v30 == v9)
      {
        a3 = v29;
        a2 = v27;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    if (v7 < 0)
      v26 = v7;
    else
      v26 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v7);
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

double sub_1001FCA38@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _OWORD *a3@<X8>)
{
  NSString v6;
  id v7;
  double result;

  v6 = String._bridgeToObjectiveC()();
  v7 = (id)(*(uint64_t (**)(uint64_t, NSString, uint64_t))(a2 + 16))(a2, v6, a1);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(v7);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_1001FCABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  Class isa;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  Class v51;
  objc_super v52;
  _BYTE v53[24];
  _QWORD *v54;

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  v7 = *(_QWORD *)(a1 + 16);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider), "setShareType:", v7 != 1);
  v8 = *(void **)(v1 + v6);
  if (v7)
  {
    v54 = _swiftEmptyArrayStorage;
    v42 = v8;
    v9 = v8;
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    v51 = (Class)type metadata accessor for AnnotationWrapper(0);
    v10 = (uint64_t *)(a1 + 72);
    v43 = v5;
    do
    {
      v50 = v7;
      v11 = *(v10 - 5);
      v44 = *(v10 - 4);
      v45 = v11;
      v12 = *(v10 - 2);
      v13 = *(v10 - 1);
      v14 = *v10;
      v47 = *(v10 - 3);
      v48 = v13;
      v15 = (char *)objc_allocWithZone(v51);
      v16 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationLocation];
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      v17 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote];
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v18 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationRepresentativeText];
      *(_QWORD *)v18 = 0;
      *((_QWORD *)v18 + 1) = 0;
      v19 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationCreationDate];
      v46 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationCreationDate];
      v20 = type metadata accessor for Date(0);
      v21 = *(void (**)(void))(*(_QWORD *)(v20 - 8) + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v19, 1, 1, v20);
      v49 = &v15[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationModificationDate];
      v21();
      v22 = *((_QWORD *)v16 + 1);
      v23 = v44;
      *(_QWORD *)v16 = v45;
      *((_QWORD *)v16 + 1) = v23;
      v24 = v23;
      swift_bridgeObjectRetain_n(v23, 2);
      swift_bridgeObjectRetain_n(v12, 2);
      swift_bridgeObjectRetain_n(v14, 2);
      v25 = v15;
      swift_bridgeObjectRelease(v22);
      v26 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v18 = v47;
      *((_QWORD *)v18 + 1) = v12;
      v27 = (uint64_t)v43;
      swift_bridgeObjectRelease(v26);
      v28 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v17 = v48;
      *((_QWORD *)v17 + 1) = v14;
      v29 = swift_bridgeObjectRelease(v28);
      Date.init()(v29);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v21)(v27, 0, 1, v20);
      v30 = (uint64_t)v46;
      swift_beginAccess(v46, v53, 33, 0);
      sub_10006CD88(v27, v30);
      v31 = swift_endAccess(v53);
      Date.init()(v31);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v21)(v27, 0, 1, v20);
      v32 = (uint64_t)v49;
      swift_beginAccess(v49, v53, 33, 0);
      sub_10006CD88(v27, v32);
      swift_endAccess(v53);

      v52.receiver = v25;
      v52.super_class = v51;
      v33 = objc_msgSendSuper2(&v52, "init");
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v12);
      v34 = swift_bridgeObjectRelease(v24);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      v35 = v54[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
      v36 = v35;
      v37 = v50;
      v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v33);
      specialized ContiguousArray._endMutation()(v38);
      v10 += 6;
      v7 = v37 - 1;
    }
    while (v7);
    v39 = v54;
    v8 = v42;
  }
  else
  {
    v40 = v8;
    v39 = _swiftEmptyArrayStorage;
  }
  sub_10004CFD4(&qword_1009D2360);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  objc_msgSend(v8, "setAnnotations:", isa);

}

uint64_t sub_1001FCE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  char v11;
  id v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  v4 = v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(Strong, v6);
    v10 = v3;
    v11 = dispatch thunk of BookProviding.areCitationsAllowed.getter(ObjectType, v8);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v12 = v3;
    v11 = 0;
  }
  objc_msgSend(v3, "setCitationsAllowed:", v11 & 1);

  v13 = objc_msgSend(*(id *)(v1 + v2), "pasteboardString");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

  return v14;
}

uint64_t sub_1001FCED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  id v11;
  char v12;
  id v13;
  uint64_t (**v14)(id, NSString, _QWORD);
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  int v19;
  uint64_t (**v21)(id, NSString, _QWORD);
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  v6 = v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v11 = v5;
    v12 = dispatch thunk of BookProviding.areCitationsAllowed.getter(ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v13 = v5;
    v12 = 0;
  }
  objc_msgSend(v5, "setCitationsAllowed:", v12 & 1);

  v14 = (uint64_t (**)(id, NSString, _QWORD))objc_msgSend(*(id *)(v2 + v4), "propertySource");
  v15 = AEAssetActivityItemProviderPropertyStoreShortUrl;
  v16 = String._bridgeToObjectiveC()();
  v17 = (id)v14[2](v14, v16, v15);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v17);
    swift_unknownObjectRelease(v17);
    _Block_release(v14);
  }
  else
  {
    _Block_release(v14);
    v26 = 0u;
    v27 = 0u;
  }
  sub_10004C7B4((uint64_t)&v26, (uint64_t)&v28);
  if (v29)
  {
    sub_10004CFC4(&v28, &v30);
    if (v31)
    {
LABEL_9:
      sub_10004CFC4(&v30, v32);
      sub_10004CFC4(v32, &v30);
      v18 = type metadata accessor for URL(0);
      v19 = swift_dynamicCast(a1, &v30, (char *)&type metadata for Any + 8, v18, 6);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, v19 ^ 1u, 1, v18);
    }
  }
  else
  {
    v21 = (uint64_t (**)(id, NSString, _QWORD))objc_msgSend(*(id *)(v2 + v4), "propertySource");
    v22 = AEAssetActivityItemProviderPropertyStoreUrl;
    v23 = String._bridgeToObjectiveC()();
    v24 = (id)v21[2](v21, v23, v22);

    if (v24)
    {
      _bridgeAnyObjectToAny(_:)(v24);
      swift_unknownObjectRelease(v24);
      _Block_release(v21);
    }
    else
    {
      _Block_release(v21);
      v26 = 0u;
      v27 = 0u;
    }
    sub_10004C7B4((uint64_t)&v26, (uint64_t)&v30);
    sub_100010960((uint64_t)&v28, (uint64_t *)&unk_1009D04E0);
    if (v31)
      goto LABEL_9;
  }
  sub_100010960((uint64_t)&v30, (uint64_t *)&unk_1009D04E0);
  v25 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
}

id sub_1001FD188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _QWORD *v41;
  uint8_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  Class isa;
  void *v51;
  id v52;
  id v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  char v64[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchTime(0);
  v55 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v55 - v6;
  v8 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  v10 = v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_bookProvider);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType();
    v15 = v9;
    v16 = dispatch thunk of BookProviding.areCitationsAllowed.getter(ObjectType, v13);
    swift_unknownObjectRelease(v12);
  }
  else
  {
    v17 = v9;
    v16 = 0;
  }
  objc_msgSend(v9, "setCitationsAllowed:", v16 & 1, v55);

  v18 = swift_allocObject(&unk_1008F3128, 24, 7);
  v19 = sub_10004CFD4(&qword_1009D4B80);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
  v57 = v8;
  v21 = *(void **)(v1 + v8);
  v22 = sub_100009E04(0, (unint64_t *)&unk_1009D23B0, AEAssetActivityItemProvider_ptr);
  *(_QWORD *)(v18 + 16) = v20;
  v56 = v18 + 16;
  *(_QWORD *)(v20 + 56) = v22;
  *(_QWORD *)(v20 + 32) = v21;
  v23 = *(void **)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_progressKitController);
  if (v23)
  {
    v24 = v21;
    v25 = v23;
    v26 = dispatch_group_create();
    dispatch_group_enter(v26);
    v27 = swift_allocObject(&unk_1008F31A0, 32, 7);
    *(_QWORD *)(v27 + 16) = v18;
    *(_QWORD *)(v27 + 24) = v26;
    v62 = sub_1001FE998;
    v63 = v27;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_10000B65C;
    v61 = &unk_1008F31B8;
    v28 = _Block_copy(&aBlock);
    v29 = v63;
    swift_retain(v18);
    v30 = v26;
    swift_release(v29);
    v31 = v25;
    objc_msgSend(v25, "activeContextWithCompletion:", v28);
    _Block_release(v28);
    static DispatchTime.now()();
    + infix(_:_:)(v5, 1.0);
    v32 = *(void (**)(char *, uint64_t))(v55 + 8);
    v33 = v5;
    v34 = v30;
    v32(v33, v2);
    v35 = OS_dispatch_group.wait(timeout:)(v7) & 1;
    v32(v7, v2);
    v36 = v18;
    if ((static DispatchTimeoutResult.== infix(_:_:)(v35, 1) & 1) != 0)
    {
      if (qword_1009CDC50 != -1)
        swift_once(&qword_1009CDC50, sub_1001FC768);
      v37 = type metadata accessor for Logger(0);
      v38 = sub_100048F64(v37, (uint64_t)qword_1009D21B0);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter(v39);
      v41 = &unk_10070F000;
      if (os_log_type_enabled(v39, v40))
      {
        v42 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "timed out waiting for progress kit current context", v42, 2u);
        swift_slowDealloc(v42, -1, -1);

      }
      else
      {

      }
    }
    else
    {

      v41 = (_QWORD *)&unk_10070F000;
    }
  }
  else
  {
    v43 = v21;
    v41 = &unk_10070F000;
    v36 = v18;
  }
  swift_beginAccess(v56, v64, 0, 0);
  v44 = *(_QWORD *)(v36 + 16);
  v45 = v57;
  v46 = objc_msgSend(*(id *)(v1 + v57), "shareType", swift_bridgeObjectRetain(v44).n128_f64[0]);
  v47 = objc_msgSend(*(id *)(v1 + v45), "propertySource");
  v48 = swift_allocObject(&unk_1008F3150, 24, 7);
  *(_QWORD *)(v48 + 16) = v47;
  v49 = objc_allocWithZone((Class)IMActivityController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v44);
  v62 = sub_1001FE854;
  v63 = v48;
  aBlock = _NSConcreteStackBlock;
  v59 = v41[354];
  v60 = sub_1001FE85C;
  v61 = &unk_1008F3168;
  v51 = _Block_copy(&aBlock);
  v52 = objc_msgSend(v49, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:", isa, 0, v46, v51, 0);

  _Block_release(v51);
  swift_release(v63);
  objc_msgSend(v52, "setManagedBook:", objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_book), "isManagedBook"));
  v53 = objc_msgSend(v52, "viewController");
  swift_release(v36);

  return v53;
}

void sub_1001FD690(void *a1, uint64_t a2, dispatch_group_t group)
{
  _QWORD **v5;
  _QWORD *v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _BYTE v11[24];
  __int128 v12;
  uint64_t v13;

  if (a1)
  {
    v5 = (_QWORD **)(a2 + 16);
    v13 = sub_100009E04(0, (unint64_t *)&unk_1009D23C0, CLSContext_ptr);
    *(_QWORD *)&v12 = a1;
    swift_beginAccess(v5, v11, 33, 0);
    v6 = *v5;
    v7 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1005B0474(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v10 = v6[2];
    v9 = v6[3];
    if (v10 >= v9 >> 1)
    {
      v6 = sub_1005B0474((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v10 + 1;
    sub_10004CFC4(&v12, &v6[4 * v10 + 4]);
    swift_endAccess(v11);
  }
  dispatch_group_leave(group);
}

id sub_1001FD7C4()
{
  return sub_1001FE610(type metadata accessor for AssetActivityItemProviderWrapper);
}

uint64_t sub_1001FD854()
{
  return type metadata accessor for AssetActivityItemProviderWrapper(0);
}

uint64_t type metadata accessor for AssetActivityItemProviderWrapper(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009D2220, (uint64_t)&nominal type descriptor for AssetActivityItemProviderWrapper);
}

void sub_1001FD870(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_1007117B8;
  v4[2] = &unk_1007117B8;
  v4[3] = &unk_1007117D0;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10000AB68(319, &qword_1009D2230, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_1001FD918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v12;

  v8 = sub_10004CFD4((uint64_t *)&unk_1009D2B30);
  inited = swift_initStackObject(v8, &v12);
  *(_QWORD *)(inited + 32) = a3;
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 64) = 0;
  *(_QWORD *)(inited + 72) = 0;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  sub_1001FCABC(inited);
  swift_setDeallocating(inited);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D2380);
  return swift_arrayDestroy(inited + 32, 1, v10);
}

void sub_1001FD9D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Class isa;

  v1 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider), "setShareType:", 2);
  v2 = *(id *)(v0 + v1);
  sub_10004CFD4(&qword_1009D2360);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setAnnotations:", isa);

}

void sub_1001FDA58()
{
  sub_1001FCABC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1001FDA6C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider), "annotations");
  v2 = sub_10004CFD4(&qword_1009D2360);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v4 = sub_10004CFD4(&qword_1009D2368);
  v5 = sub_1001FE778();
  LOBYTE(v4) = Collection.isNotEmpty.getter(v4, v5);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

id sub_1001FDB14(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
    return 0;
  result = objc_msgSend(a1, "annotationLocation");
  if (result)
  {
    v11 = result;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v14 = v13;

    v15 = v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_paginationService;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_paginationService);
    if (Strong)
    {
      v17 = Strong;
      v18 = *(_QWORD *)(v15 + 8);
      ObjectType = swift_getObjectType();
      dispatch thunk of Paginating.location(for:)(v12, v14, ObjectType, v18);
      swift_bridgeObjectRelease(v14);
      swift_unknownObjectRelease(v17);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      v20 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
      v21 = Location.pageOffset.getter(v20);
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      result = (id)(v21 + 1);
      if (__OFADD__(v21, 1))
        __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease(v14);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009D23A0);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001FDD50(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  _BYTE v28[16];

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
    return 0;
  v10 = objc_msgSend(a1, "annotationLocation");
  v11 = v10;
  if (!v10)
    return 0;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;

  v15 = v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_paginationService;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_paginationService);
  if (!Strong)
  {
    swift_bridgeObjectRelease(v14);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009D23A0);
    return 0;
  }
  v17 = Strong;
  v18 = *(_QWORD *)(v15 + 8);
  ObjectType = swift_getObjectType();
  dispatch thunk of Paginating.location(for:)(v12, v14, ObjectType, v18);
  swift_bridgeObjectRelease(v14);
  swift_unknownObjectRelease(v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
  v22 = swift_unknownObjectWeakLoadStrong(v15);
  if (!v22)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v23 = v22;
  v24 = *(_QWORD *)(v15 + 8);
  v25 = swift_getObjectType();
  v26 = Location.pageOffset.getter(v25);
  v27 = __OFADD__(v26, 1);
  result = v26 + 1;
  if (!v27)
  {
    v20 = dispatch thunk of Paginating.chapterName(pageNumber:)(result, v25, v24);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    swift_unknownObjectRelease(v23);
    return v20;
  }
  __break(1u);
  return result;
}

id sub_1001FE0E0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v3 = a1 + *a3;
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 8));
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

uint64_t sub_1001FE144(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = (uint64_t *)(a1 + *a4);
  v9 = v8[1];
  *v8 = v6;
  v8[1] = v7;
  return swift_bridgeObjectRelease(v9);
}

Class sub_1001FE2A8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  _BYTE v14[24];

  v5 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a1 + *a3;
  swift_beginAccess(v8, v14, 0, 0);
  sub_1001FE7C4(v8, (uint64_t)v7);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  return isa;
}

void sub_1001FE390(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _BYTE v15[24];

  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a3)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v10 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    v11 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  v12 = (uint64_t)a1 + *a4;
  swift_beginAccess(v12, v15, 33, 0);
  v13 = a1;
  sub_10006CD88((uint64_t)v9, v12);
  swift_endAccess(v15);

}

uint64_t sub_1001FE4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote + 8);
  if (v5)
  {
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote);
    v15 = v5;
    v6 = swift_bridgeObjectRetain(v5);
    static CharacterSet.whitespacesAndNewlines.getter(v6);
    v7 = sub_1001F2108();
    v8 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v7);
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease(v5);
    v14 = v8;
    v15 = v10;
    v11 = sub_1001F15BC();
    v12 = Collection.isNotEmpty.getter(&type metadata for String, v11);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

id sub_1001FE604()
{
  return sub_1001FE610(type metadata accessor for AnnotationWrapper);
}

id sub_1001FE610(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1001FE6D0()
{
  return type metadata accessor for AnnotationWrapper(0);
}

uint64_t type metadata accessor for AnnotationWrapper(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D22E8, (uint64_t)&nominal type descriptor for AnnotationWrapper);
}

void sub_1001FE6EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  v4[0] = &unk_100711808;
  v4[1] = &unk_100711808;
  v4[2] = &unk_100711808;
  sub_10000AB68(319, (unint64_t *)&qword_1009D5E30, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

unint64_t sub_1001FE778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2370;
  if (!qword_1009D2370)
  {
    v1 = sub_100030B74(&qword_1009D2368);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009D2370);
  }
  return result;
}

uint64_t sub_1001FE7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D7440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FE80C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FE830()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001FE854@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1001FCA38(a1, *(_QWORD *)(v2 + 16), a2);
}

id sub_1001FE85C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, uint64_t, uint64_t, id);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;

  v5 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, id))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  swift_retain(v4);
  v9 = a3;
  v5(v17, v6, v8, v9);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);

  v10 = v18;
  if (!v18)
    return 0;
  v11 = sub_10003F198(v17, v18);
  v12 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v14);
  v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v14, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
  _s5Books15CurrentPageViewVwxx_0(v17);
  return v15;
}

uint64_t sub_1001FE96C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001FE998(void *a1)
{
  uint64_t v1;

  sub_1001FD690(a1, *(_QWORD *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_1001FE9A0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

id NotificationOptInStatusController.__allocating_init(center:status:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___BKNotificationOptInStatusController_center] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___BKNotificationOptInStatusController_status] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, "init");
}

id NotificationOptInStatusController.init(center:status:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR___BKNotificationOptInStatusController_center] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___BKNotificationOptInStatusController_status] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

Swift::Void __swiftcall NotificationOptInStatusController.checkAndReportOptInStatus()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR___BKNotificationOptInStatusController_center);
  v2 = swift_allocObject(&unk_1008F3238, 24, 7);
  swift_unknownObjectUnownedInit(v2 + 16);
  v6[4] = sub_1001FEC7C;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1001EDBF0;
  v6[3] = &unk_1008F3250;
  v3 = _Block_copy(v6);
  v4 = v7;
  v5 = v1;
  swift_release(v4);
  objc_msgSend(v5, "getNotificationSettingsWithCompletionHandler:", v3);
  _Block_release(v3);

}

uint64_t sub_1001FEB64()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FEB88(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v8 = a1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1008F3288, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a2;
  v10[5] = v8;
  v11 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009D2428, (uint64_t)v10);
  return swift_release(v11);
}

uint64_t sub_1001FEC7C(void *a1)
{
  uint64_t v1;

  return sub_1001FEB88(a1, v1);
}

uint64_t sub_1001FEC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for UserAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[6] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[7] = swift_task_alloc(v9);
  v5[8] = swift_task_alloc(v9);
  v5[9] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v5[10] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001FED38, v11, v12);
}

uint64_t sub_1001FED38()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *Strong;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  void (*v14)(uint64_t, _QWORD, uint64_t);
  uint64_t v15;
  void *v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 80));
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(v1 + 16);
  v4 = *(char **)&Strong[OBJC_IVAR___BKNotificationOptInStatusController_status];

  v5 = (char *)objc_msgSend(v2, "authorizationStatus");
  if (v4 != v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)(v0 + 16) + 16;
    v8 = (char *)swift_unknownObjectUnownedLoadStrong(v7);
    *(_QWORD *)&v8[OBJC_IVAR___BKNotificationOptInStatusController_status] = v6;

    v9 = (void *)swift_unknownObjectUnownedLoadStrong(v7);
    if ((unint64_t)(v4 - 2) >= 2)
    {
      v10 = *(_QWORD *)(v0 + 72);
      v11 = *(_QWORD *)(v0 + 32);
      v12 = *(_QWORD *)(v0 + 40);
      if (v4 == (char *)1)
        v13 = (unsigned int *)&enum case for UserAction.optOut(_:);
      else
        v13 = (unsigned int *)&enum case for UserAction.unknown(_:);
    }
    else
    {
      v10 = *(_QWORD *)(v0 + 72);
      v11 = *(_QWORD *)(v0 + 32);
      v12 = *(_QWORD *)(v0 + 40);
      v13 = (unsigned int *)&enum case for UserAction.optIn(_:);
    }
    v14 = *(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104);
    v14(v10, *v13, v11);
    v15 = *(_QWORD *)(v0 + 16);

    v16 = (void *)swift_unknownObjectUnownedLoadStrong(v15 + 16);
    if ((unint64_t)(v6 - 1) >= 3)
      v17 = (unsigned int *)&enum case for UserAction.unknown(_:);
    else
      v17 = (unsigned int *)*(&off_1008F32C8 + (_QWORD)(v6 - 1));
    v19 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 32);
    v14(v19, *v17, v20);

    v21 = sub_100008DB0(&qword_1009D2430, (uint64_t (*)(uint64_t))&type metadata accessor for UserAction, (uint64_t)&protocol conformance descriptor for UserAction);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v18, v19, v20, v21) & 1) == 0)
    {
      v22 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
      v23 = objc_msgSend(v22, "primaryAnalyticsController");

      v24 = (void *)dispatch thunk of AnalyticsController.applicationTracker.getter();
      v25 = objc_msgSend(v23, "newSessionAssertion");
      if (v24)
      {
        v26 = *(_QWORD *)(v0 + 56);
        v28 = *(_QWORD *)(v0 + 40);
        v27 = *(_QWORD *)(v0 + 48);
        v29 = *(_QWORD *)(v0 + 32);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 16))(v26, *(_QWORD *)(v0 + 64), v29);
        v30 = *(unsigned __int8 *)(v28 + 80);
        v31 = (v30 + 16) & ~v30;
        v32 = (v27 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
        v33 = swift_allocObject(&unk_1008F32B0, v32 + 8, v30 | 7);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v33 + v31, v26, v29);
        *(_QWORD *)(v33 + v32) = v25;
        v34 = v24;
        swift_unknownObjectRetain(v25);
        BATracker.transaction(_:)(sub_1001FF6F0, v33);
        swift_release(v33);

      }
      swift_unknownObjectRelease(v25);

    }
    v35 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 32);
    v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 8);
    v37(*(_QWORD *)(v0 + 64), v36);
    v37(v35, v36);
  }
  v38 = *(_QWORD *)(v0 + 64);
  v39 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1001FF00C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id result;
  _BYTE v51[12];
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  __int128 v71;
  _OWORD v72[3];

  v70 = a3;
  v4 = type metadata accessor for ModelType(0);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin(v4);
  v65 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for NotificationOptInTypeData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  v69 = v7;
  __chkstk_darwin(v6);
  v64 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Location(0);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin(v9);
  v59 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for NotificationOptInLocationData(0);
  v12 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  v63 = v12;
  __chkstk_darwin(v11);
  v58 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for UserAction(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v51[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for NotificationOptInActionData(0);
  v57 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = &v51[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  NotificationOptInActionData.init(userAction:)(v17);
  v21 = sub_10004CFD4(&qword_1009D2438);
  v56 = v21;
  v22 = type metadata accessor for DataEventTrait(0);
  v23 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 + 32) & ~v24;
  v55 = v25 + *(_QWORD *)(v23 + 72);
  v26 = v24 | 7;
  v53 = v24 | 7;
  v27 = swift_allocObject(v21, v55, v24 | 7);
  v71 = xmmword_10070CCA0;
  *(_OWORD *)(v27 + 16) = xmmword_10070CCA0;
  v28 = enum case for DataEventTrait.onlyOnce(_:);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104);
  v52 = enum case for DataEventTrait.onlyOnce(_:);
  v29(v27 + v25, enum case for DataEventTrait.onlyOnce(_:), v22);
  v30 = v29;
  v31 = sub_100008DB0(&qword_1009D2440, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationOptInActionData, (uint64_t)&protocol conformance descriptor for NotificationOptInActionData);
  AccessTracker.push<A>(data:traits:file:line:)(v20, v27, 0xD000000000000057, 0x80000001007B62C0, 41, v18, v31);
  swift_bridgeObjectRelease(v27);
  (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v20, v18);
  v32 = v59;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v60 + 104))(v59, enum case for Location.deviceSettings(_:), v61);
  v33 = v58;
  NotificationOptInLocationData.init(location:)(v32);
  v34 = v56;
  v35 = v55;
  v36 = swift_allocObject(v56, v55, v26);
  *(_OWORD *)(v36 + 16) = v71;
  v37 = v28;
  v38 = v54;
  v30(v36 + v25, v37, v54);
  v39 = sub_100008DB0(&qword_1009D2448, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationOptInLocationData, (uint64_t)&protocol conformance descriptor for NotificationOptInLocationData);
  v40 = v33;
  v41 = v33;
  v42 = v62;
  AccessTracker.push<A>(data:traits:file:line:)(v40, v36, 0xD000000000000057, 0x80000001007B62C0, 42, v62, v39);
  swift_bridgeObjectRelease(v36);
  (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v41, v42);
  v43 = v65;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v66 + 104))(v65, enum case for ModelType.global(_:), v67);
  v44 = v64;
  NotificationOptInTypeData.init(type:)(v43);
  v45 = swift_allocObject(v34, v35, v53);
  *(_OWORD *)(v45 + 16) = v71;
  v30(v45 + v25, v52, v38);
  v46 = sub_100008DB0(&qword_1009D2450, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationOptInTypeData, (uint64_t)&protocol conformance descriptor for NotificationOptInTypeData);
  v47 = v68;
  AccessTracker.push<A>(data:traits:file:line:)(v44, v45, 0xD000000000000057, 0x80000001007B62C0, 43, v68, v46);
  swift_bridgeObjectRelease(v45);
  (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v44, v47);
  v48 = type metadata accessor for NotificationOptInActionEvent(0);
  v49 = sub_100008DB0(&qword_1009D2458, (uint64_t (*)(uint64_t))&type metadata accessor for NotificationOptInActionEvent, (uint64_t)&protocol conformance descriptor for NotificationOptInActionEvent);
  memset(v72, 0, 32);
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v48, 0, v72, 0, 0, v48, v49);
  sub_10004A7B8((uint64_t)v72);
  result = v70;
  if (v70)
    return objc_msgSend(v70, "invalidate");
  return result;
}

id SearchBar.Coordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void NotificationOptInStatusController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.NotificationOptInStatusController", 39, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for NotificationOptInStatusController()
{
  return objc_opt_self(BKNotificationOptInStatusController);
}

uint64_t sub_1001FF5D0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001FF604(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009D2424);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_1001FEC84(a1, v4, v5, v7, v6);
}

uint64_t sub_1001FF67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UserAction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

id sub_1001FF6F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for UserAction(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1001FF00C(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void *sub_1001FF740(uint64_t a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  v4 = sub_1002009E8(a1, v3);

  return v4;
}

UIMenu sub_1001FF790()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  UIMenuElementSize v18;
  __n128 v19;
  UIMenuElementSize preferredElementSize;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  UIMenu v39;
  UIMenu *v40;
  Swift::String v41;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  __int16 preferredElementSize_8;
  int preferredElementSize_8a;
  int preferredElementSize_8b;
  int preferredElementSize_8c;
  Swift::OpaquePointer v50;
  Swift::OpaquePointer v51;
  Swift::OpaquePointer v52;
  uint64_t v53;
  UIMenu *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  UIImage_optional v60;
  UIImage_optional v61;
  UIImage_optional v62;

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - v8;
  String.LocalizationValue.init(stringLiteral:)(0x6867696C68676948, 0xE900000000000074);
  v10 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
  v11 = v10(v6, v9, v3);
  static Locale.current.getter(v11);
  preferredElementSize_8 = 2;
  v12 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_Highlight", 14, 2, v6, 0, 0, 0, v2, "'Highlight' menu", 16, preferredElementSize_8);
  v56 = v13;
  v57 = v12;
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1007118C0;
  v17 = (uint64_t)sub_1003A155C(1, 4);
  v18 = v17;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v43 = v17;
    else
      v43 = v17 & 0xFFFFFFFFFFFFFF8;
    v44 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v43, v44, v45);
  }
  else
  {
    v19 = swift_bridgeObjectRetain(v17);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
    sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    preferredElementSize = v18;
  }
  swift_bridgeObjectRelease(v18);
  v55 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v60.value.super.isa = 0;
  v60.is_nil = 0;
  *(UIMenu *)(v16 + 32) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v60, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v50);
  v22 = swift_allocObject(v15, 56, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1007118D0;
  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  String.LocalizationValue.init(stringLiteral:)(0x65746F4E20646441, 0xE800000000000000);
  v23 = v10(v6, v9, v3);
  static Locale.current.getter(v23);
  LOWORD(preferredElementSize_8a) = 2;
  v24 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Note", 18, 2, v6, 0, 0, 0, v2, "'Add Note' menu item", 20, preferredElementSize_8a);
  v54 = (UIMenu *)v16;
  v25 = v24;
  v26 = v10;
  v28 = v27;
  v14(v9, v3);
  v58 = 0u;
  v59 = 0u;
  *(_QWORD *)(v22 + 32) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v25, v28, 0, 0, 0, 0, "books_addNote:", &v58, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  String.LocalizationValue.init(stringLiteral:)(0x4E206574656C6544, 0xEB0000000065746FLL);
  v29 = v26(v6, v9, v3);
  static Locale.current.getter(v29);
  LOWORD(preferredElementSize_8b) = 2;
  v30 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Note", 21, 2, v6, 0, 0, 0, v2, "'Delete Note' menu item", 23, preferredElementSize_8b);
  v32 = v31;
  v14(v9, v3);
  v58 = 0u;
  v59 = 0u;
  *(_QWORD *)(v22 + 40) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v30, v32, 0, 0, 0, 0, "books_removeNote:", &v58, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B6600);
  v33 = v26(v6, v9, v3);
  static Locale.current.getter(v33);
  LOWORD(preferredElementSize_8c) = 2;
  v34 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Highlight", 26, 2, v6, 0, 0, 0, v2, "'Remove Highlight' menu item", 28, preferredElementSize_8c);
  v36 = v35;
  v14(v9, v3);
  v58 = 0u;
  v59 = 0u;
  v37 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v34, v36, 0, 0, 0, 0, "books_removeHighlight:", &v58, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v22 + 48) = v37;
  *(_QWORD *)&v58 = v22;
  specialized Array._endMutation()(v37);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v61.value.super.isa = 0;
  v61.is_nil = 0;
  v39.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v61, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v58, v51).super.super.isa;
  v40 = v54;
  v54[5].super.super.isa = v39.super.super.isa;
  *(_QWORD *)&v58 = v40;
  specialized Array._endMutation()(v39.super.super.isa);
  v41._object = v56;
  v41._countAndFlagsBits = v57;
  v62.value.super.isa = 0;
  v62.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, (Swift::String_optional)0, v62, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v58, v52);
}

UIMenu sub_1001FFD6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  __int16 preferredElementSize_8;
  int preferredElementSize_8a;
  int preferredElementSize_8b;
  int preferredElementSize_8c;
  int preferredElementSize_8d;
  int preferredElementSize_8e;
  Swift::OpaquePointer v47;
  _QWORD v48[2];
  void *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 preferredElementSize;
  __int128 v53;
  UIImage_optional v54;

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v48 - v8;
  v51 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  String.LocalizationValue.init(stringLiteral:)(1684957510, 0xE400000000000000);
  v10 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
  v11 = v10(v6, v9, v3);
  static Locale.current.getter(v11);
  preferredElementSize_8 = 2;
  v12 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_Find", 9, 2, v6, 0, 0, 0, v2, "'Find' menu", 11, preferredElementSize_8);
  v49 = v13;
  v50 = v12;
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1007118E0;
  v17 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  String.LocalizationValue.init(stringLiteral:)(0xA680E2646E6946, 0xA700000000000000);
  v18 = v10(v6, v9, v3);
  static Locale.current.getter(v18);
  LOWORD(preferredElementSize_8a) = 0;
  v19 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Find", 14, 2, v6, 0, 0, 0, v2, "'Find…' menu item", 19, preferredElementSize_8a);
  v21 = v20;
  v14(v9, v3);
  preferredElementSize = 0u;
  v53 = 0u;
  v48[1] = v17;
  *(_QWORD *)(v16 + 32) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v19, v21, 0, "books_find:", 70, 0xE100000000000000, 0x100000, &preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  String.LocalizationValue.init(stringLiteral:)(0x78654E20646E6946, 0xE900000000000074);
  v22 = v10(v6, v9, v3);
  static Locale.current.getter(v22);
  LOWORD(preferredElementSize_8b) = 2;
  v23 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Find_Next", 19, 2, v6, 0, 0, 0, v2, "'Find Next' menu item", 21, preferredElementSize_8b);
  v25 = v24;
  v14(v9, v3);
  preferredElementSize = 0u;
  v53 = 0u;
  *(_QWORD *)(v16 + 40) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v23, v25, 0, "books_findNext:", 71, 0xE100000000000000, 0x100000, &preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  String.LocalizationValue.init(stringLiteral:)(0x65725020646E6946, 0xED000073756F6976);
  v26 = v10(v6, v9, v3);
  static Locale.current.getter(v26);
  LOWORD(preferredElementSize_8c) = 2;
  v27 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Find_Previous", 23, 2, v6, 0, 0, 0, v2, "'Find Previous' menu item", 25, preferredElementSize_8c);
  v29 = v28;
  v14(v9, v3);
  preferredElementSize = 0u;
  v53 = 0u;
  *(_QWORD *)(v16 + 48) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v27, v29, 0, 0, 0, 0, "books_findPrevious:", &preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007B6480);
  v30 = v10(v6, v9, v3);
  static Locale.current.getter(v30);
  LOWORD(preferredElementSize_8d) = 2;
  v31 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Use_Selection_for_Find", 32, 2, v6, 0, 0, 0, v2, "'Use Selection for Find' menu item", 34, preferredElementSize_8d);
  v33 = v32;
  v14(v9, v3);
  preferredElementSize = 0u;
  v53 = 0u;
  *(_QWORD *)(v16 + 56) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v31, v33, 0, "books_useSelectionForFind:", 69, 0xE100000000000000, 0x100000, &preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007B64F0);
  v34 = v10(v6, v9, v3);
  static Locale.current.getter(v34);
  LOWORD(preferredElementSize_8e) = 2;
  v35 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Jump_to_Selection", 27, 2, v6, 0, 0, 0, v2, "'Jump to Selection' menu item", 29, preferredElementSize_8e);
  v37 = v36;
  v14(v9, v3);
  preferredElementSize = 0u;
  v53 = 0u;
  v38 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v35, v37, 0, "books_jumpToSelection:", 74, 0xE100000000000000, 0x100000, &preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v16 + 64) = v38;
  *(_QWORD *)&preferredElementSize = v16;
  specialized Array._endMutation()(v38);
  v39._object = v49;
  v39._countAndFlagsBits = v50;
  v54.value.super.isa = 0;
  v54.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v54, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v47);
}

void sub_100200408(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Class isa;
  Class v44;
  Class v45;
  int preferredElementSize_8;
  Swift::OpaquePointer v47;
  uint64_t v48;
  void (*v49)(char *);
  uint64_t v50;
  UIMenuIdentifier v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  void *v54;
  __int128 aBlock;
  __int128 v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  UIImage_optional v59;

  v54 = a1;
  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - v13;
  v15 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
  static Locale.current.getter(v16);
  v52 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v52(v11, v14, v8);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v4, "Edit -> Delete", 14, 2);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v23 = v8;
  v24 = v54;
  v49 = *(void (**)(char *))(v9 + 8);
  v50 = v23;
  v49(v14);
  aBlock = 0u;
  v56 = 0u;
  v53 = v15;
  v25 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v20, v22, 0, "delete:", 8, 0xE100000000000000, 0x100000, &aBlock, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v26 = swift_allocObject(&unk_1008F32F0, 24, 7);
  *(_QWORD *)(v26 + 16) = v25;
  v27 = swift_allocObject(&unk_1008F3318, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_1002009D0;
  *(_QWORD *)(v27 + 24) = v26;
  v57 = sub_100064AD4;
  v58 = v27;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v56 = sub_1005D7BD8;
  *((_QWORD *)&v56 + 1) = &unk_1008F3330;
  v28 = _Block_copy(&aBlock);
  v29 = v58;
  v30 = v25;
  swift_retain(v27);
  *(_QWORD *)&v31 = swift_release(v29).n128_u64[0];
  v51 = UIMenuStandardEdit;
  objc_msgSend(v24, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", UIMenuStandardEdit, v28, v31);
  _Block_release(v28);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v27, "", 62, 20, 56, 1);
  swift_release(v27);
  if ((v29 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v32 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v33 = swift_allocObject(v32, 40, 7);
    *(_OWORD *)(v33 + 16) = xmmword_1007118F0;
    String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xED00006567615020);
    v34 = v50;
    v35 = ((uint64_t (*)(char *, char *, uint64_t))v52)(v11, v14, v50);
    static Locale.current.getter(v35);
    LOWORD(preferredElementSize_8) = 2;
    v36 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Bookmark", 22, 2, v11, 0, 0, 0, v7, "'Add Bookmark' menu item", 24, preferredElementSize_8);
    v38 = v37;
    ((void (*)(char *, uint64_t))v49)(v14, v34);
    aBlock = 0u;
    v56 = 0u;
    v39 = v38;
    v40 = v26;
    v41 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v36, v39, 0, "books_toggleBookmark:", 68, 0xE100000000000000, 0x100000, &aBlock, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    *(_QWORD *)(v33 + 32) = v41;
    *(_QWORD *)&aBlock = v33;
    specialized Array._endMutation()(v41);
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v59.value.super.isa = 0;
    v59.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v59, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, v47).super.super.isa;
    objc_msgSend(v24, "insertSiblingMenu:afterMenuForIdentifier:", isa, v51);

    v44 = sub_1001FF790().super.super.isa;
    objc_msgSend(v24, "insertSiblingMenu:afterMenuForIdentifier:", v44, UIMenuEdit);

    objc_msgSend(v24, "removeMenuForIdentifier:", UIMenuSpelling);
    objc_msgSend(v24, "removeMenuForIdentifier:", UIMenuSubstitutions);
    objc_msgSend(v24, "removeMenuForIdentifier:", UIMenuTransformations);
    v45 = sub_1001FFD6C().super.super.isa;
    objc_msgSend(v24, "insertSiblingMenu:beforeMenuForIdentifier:", v45, UIMenuFind);

    objc_msgSend(v24, "removeMenuForIdentifier:", UIMenuFind);
    swift_release(v40);

  }
}

uint64_t sub_1002009AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *sub_1002009D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FF740(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002009D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_1002009E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char **v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = v3; i; i = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    v4 = 4;
    v5 = &selRef__teardownLocalViews;
    v6 = i;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v8 = v7;
      v9 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v10 = v5;
      v11 = objc_opt_self(UICommand);
      v12 = swift_dynamicCastObjCClass(v8, v11);
      if (!v12)
        goto LABEL_15;
      v13 = (void *)v12;
      v14 = v8;
      v15 = static Selector.== infix(_:_:)(objc_msgSend(v13, v10[108]), "delete:");

      if ((v15 & 1) != 0)
      {
        v8 = a2;

LABEL_14:
        v6 = i;
LABEL_15:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v18 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
        specialized Array._endMutation()(v19);
        v5 = v10;
        goto LABEL_5;
      }
      v8 = v14;
      v16 = static Selector.== infix(_:_:)(objc_msgSend(v13, v10[108]), "pasteAndMatchStyle:");

      if ((v16 & 1) == 0)
        goto LABEL_14;
      v5 = v10;

      v6 = i;
LABEL_5:
      ++v4;
      if (v9 == v6)
        goto LABEL_24;
    }
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_24:
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100200C00()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D2460);
  sub_100048F64(v0, (uint64_t)qword_1009D2460);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000015, 0x8000000100711900);
}

void sub_100200C80(void *a1)
{
  uint64_t v1;
  void *v2;
  BOOL v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!a1)
  {
    if (!v2)
      return;
LABEL_9:
    v4 = swift_allocObject(&unk_1008F3460, 24, 7);
    swift_unknownObjectUnownedInit(v4 + 16);
    v5 = v2;
    swift_retain(v4);
    FrontmostWindowTracker.onFrontmostChanged.setter(sub_10020290C, v4);

    swift_release(v4);
LABEL_10:
    sub_100200D2C();
    return;
  }
  if (v2)
    v3 = a1 == v2;
  else
    v3 = 0;
  if (!v3)
  {
    if (!v2)
      goto LABEL_10;
    goto LABEL_9;
  }
}

void sub_100200D2C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  char v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int16 v14;
  int v15;
  __int16 v16;
  int v17;
  char *v18;
  uint64_t v19;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (v2)
  {
    v3 = v2;
    v4 = FrontmostWindowTracker.isFrontmost.getter();

  }
  else
  {
    v4 = 0;
  }
  if (qword_1009CDC58 != -1)
    swift_once(&qword_1009CDC58, sub_100200C00);
  v5 = type metadata accessor for Logger(0);
  sub_100048F64(v5, (uint64_t)qword_1009D2460);
  v6 = v1;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(18, -1);
    v10 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412546;
    v18 = v6;
    v11 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v9 + 4, v9 + 12);
    *v10 = v6;

    *(_WORD *)(v9 + 12) = 1024;
    v17 = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 14, v9 + 18);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%@: window is frontmost => %{BOOL}d", (uint8_t *)v9, 0x12u);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  v13 = &v6[OBJC_IVAR___BKFrontmostAssetTracker_state];
  v14 = v6[OBJC_IVAR___BKFrontmostAssetTracker_state];
  v15 = v6[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  *v13 = v14;
  v13[1] = v4 & 1;
  if (v15)
    v16 = 256;
  else
    v16 = 0;
  sub_100201054(v16 | v14);
}

void sub_100200F44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = v1;
  v4 = OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker;
  v12 = *(id *)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!v12)
  {
    v8 = 0;
    goto LABEL_9;
  }
  if (!a1)
  {
    v9 = v12;
    v8 = v12;
LABEL_8:
    v10 = v8;
    FrontmostWindowTracker.onFrontmostChanged.setter(0, 0);

    v8 = *(void **)(v2 + v4);
    goto LABEL_9;
  }
  type metadata accessor for FrontmostWindowTracker(0);
  v5 = v12;
  v6 = a1;
  v7 = static NSObject.== infix(_:_:)(v5, v6);

  v8 = *(void **)(v2 + v4);
  if ((v7 & 1) == 0 && v8)
    goto LABEL_8;
LABEL_9:
  *(_QWORD *)(v2 + v4) = a1;
  v11 = a1;

  sub_100200C80(v12);
}

BOOL sub_10020102C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

void sub_100201054(__int16 a1)
{
  _BYTE *v1;
  char v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(_QWORD);
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v2 = v1[OBJC_IVAR___BKFrontmostAssetTracker_state] & v1[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  if ((a1 & 1) != 0)
  {
    if ((v2 & 1) == (unsigned __int16)(a1 & 0x100) >> 8)
      return;
  }
  else if ((v1[OBJC_IVAR___BKFrontmostAssetTracker_state] & v1[OBJC_IVAR___BKFrontmostAssetTracker_state + 1] & 1) == 0)
  {
    return;
  }
  if (qword_1009CDC58 != -1)
    swift_once(&qword_1009CDC58, sub_100200C00);
  v3 = type metadata accessor for Logger(0);
  sub_100048F64(v3, (uint64_t)qword_1009D2460);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(18, -1);
    v8 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412546;
    v14 = v4;
    v9 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 4, v7 + 12);
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 1024;
    LODWORD(v14) = v2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, (char *)&v14 + 4, v7 + 14, v7 + 18);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@: is frontmost => %{BOOL}d", (uint8_t *)v7, 0x12u);
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v11 = &v4[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged];
  swift_beginAccess(&v4[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged], &v14, 0, 0);
  v12 = *(void (**)(_QWORD))v11;
  if (*(_QWORD *)v11)
  {
    v13 = *((_QWORD *)v11 + 1);
    swift_retain(v13);
    v12(v2 & 1);
    sub_10002AD00((uint64_t)v12, v13);
  }
}

uint64_t FrontmostAssetTracker.isFrontmost.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_state) & *(_BYTE *)(v0
                                                                               + OBJC_IVAR___BKFrontmostAssetTracker_state
                                                                               + 1) & 1;
}

uint64_t FrontmostAssetTracker.onFrontmostChanged.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged);
  swift_beginAccess(v0 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged, v4, 0, 0);
  v2 = *v1;
  sub_10002ACF0(*v1, v1[1]);
  return v2;
}

uint64_t FrontmostAssetTracker.onFrontmostChanged.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10002AD00(v6, v7);
}

uint64_t (*FrontmostAssetTracker.onFrontmostChanged.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged, a1, 33, 0);
  return j__swift_endAccess;
}

void **FrontmostAssetTracker.__allocating_init(assetID:window:onFrontmostChanged:)(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return FrontmostAssetTracker.init(assetID:window:onFrontmostChanged:)(a1, a2, a3, a4, a5);
}

void **FrontmostAssetTracker.init(assetID:window:onFrontmostChanged:)(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjectType;
  id v12;
  id v13;
  uint64_t ObjCClassMetadata;
  id v15;
  id v16;
  id v17;
  void **v18;
  uint64_t v19;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v13 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v13)
    ObjCClassMetadata = swift_getObjCClassMetadata(v13);
  else
    ObjCClassMetadata = 0;
  v15 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v16 = objc_msgSend(v15, "appLaunchCoordinator");

  v17 = objc_allocWithZone(ObjectType);
  v18 = sub_100201750(a1, a2, a3, v12, ObjCClassMetadata, v16, a4, a5);
  v19 = swift_getObjectType();
  swift_deallocPartialClassInstance(v6, v19, 72, 7);
  return v18;
}

void **sub_100201750(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  objc_class *ObjectType;
  char *v16;
  uint64_t *v17;
  id v18;
  NSString v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void **v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  void **v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void **v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v50;
  void **aBlock;
  _QWORD v52[4];
  uint64_t v53;
  objc_super v54;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker] = 0;
  *(_WORD *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_state] = 0;
  v16 = &v8[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = (uint64_t *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_assetID];
  *v17 = a1;
  v17[1] = a2;
  *(_QWORD *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_uiApplication] = a4;
  *(_QWORD *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_appKitBundle] = a5;
  v54.receiver = v8;
  v54.super_class = ObjectType;
  swift_bridgeObjectRetain(a2);
  v46 = a4;
  v18 = objc_msgSendSuper2(&v54, "init");
  v19 = String._bridgeToObjectiveC()();
  v20 = swift_allocObject(&unk_1008F3488, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v18);
  v52[3] = sub_100202968;
  v53 = v20;
  aBlock = _NSConcreteStackBlock;
  v52[0] = 1107296256;
  v52[1] = sub_10004DCB4;
  v52[2] = &unk_1008F34A0;
  v21 = _Block_copy(&aBlock);
  swift_release(v53);
  v47 = a6;
  objc_msgSend(a6, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 32, v19, v21);
  _Block_release(v21);

  v45 = a3;
  FrontmostAssetTracker.window.setter(a3);
  if (qword_1009CDC58 != -1)
    swift_once(&qword_1009CDC58, sub_100200C00);
  v22 = type metadata accessor for Logger(0);
  sub_100048F64(v22, (uint64_t)qword_1009D2460);
  v23 = v18;
  swift_bridgeObjectRetain(a2);
  v24 = v23;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc(32, -1);
    v28 = (_QWORD *)swift_slowAlloc(8, -1);
    v44 = (void **)swift_slowAlloc(32, -1);
    v50 = (uint64_t)v24;
    aBlock = v44;
    *(_DWORD *)v27 = 138412803;
    v29 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &aBlock, v27 + 4, v27 + 12);
    *v28 = v18;

    *(_WORD *)(v27 + 12) = 2160;
    v50 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &aBlock, v27 + 14, v27 + 22);
    *(_WORD *)(v27 + 22) = 2081;
    swift_bridgeObjectRetain(a2);
    v50 = sub_100040F58(a1, a2, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &aBlock, v27 + 24, v27 + 32);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%@: assetID: %{private,mask.hash}s", (uint8_t *)v27, 0x20u);
    v30 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v28, 1, v30);
    swift_slowDealloc(v28, -1, -1);
    swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v31 = (void **)v24;
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(18, -1);
    v35 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v34 = 138412546;
    aBlock = v31;
    v36 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v52, v34 + 4, v34 + 12);
    *v35 = v18;

    *(_WORD *)(v34 + 12) = 1024;
    v37 = *((_BYTE *)v36 + OBJC_IVAR___BKFrontmostAssetTracker_state);
    v38 = *((_BYTE *)v36 + OBJC_IVAR___BKFrontmostAssetTracker_state + 1);

    LODWORD(aBlock) = v37 & v38 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v34 + 14, v34 + 18);

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%@: initial is frontmost: %{BOOL}d", (uint8_t *)v34, 0x12u);
    v39 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v35, 1, v39);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    swift_unknownObjectRelease(v47);
  }
  else
  {

    swift_unknownObjectRelease(v47);
  }

  v40 = (uint64_t *)((char *)v31 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged);
  swift_beginAccess((char *)v31 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged, &aBlock, 1, 0);
  v41 = *v40;
  v42 = v40[1];
  *v40 = a7;
  v40[1] = a8;
  sub_10002AD00(v41, v42);
  return v31;
}

void sub_100201CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100201D44();

  }
}

void sub_100201D44()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int v10;
  __int16 v11;
  __int16 v12;
  char *v13;
  uint64_t v14;

  if (qword_1009CDC58 != -1)
    swift_once(&qword_1009CDC58, sub_100200C00);
  v1 = type metadata accessor for Logger(0);
  sub_100048F64(v1, (uint64_t)qword_1009D2460);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v13 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%@: app launch completed", v5, 0xCu);
    v8 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BKFrontmostAssetTracker_state];
  v10 = v2[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  v11 = v2[OBJC_IVAR___BKFrontmostAssetTracker_state];
  *v9 = 1;
  v9[1] = v10;
  if (v10)
    v12 = 256;
  else
    v12 = 0;
  sub_100201054(v12 | v11);
}

void FrontmostAssetTracker.window.setter(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  id v37;
  id v38;
  char **v39;
  char *v40;
  uint64_t v41;

  v2 = v1;
  v3 = OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker;
  v4 = *(void **)&v1[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (!v4)
  {
    if (!a1)
      return;
    goto LABEL_13;
  }
  v37 = a1;
  v5 = v4;
  v6 = (void *)FrontmostWindowTracker.window.getter();

  if (!v37)
  {

    if (qword_1009CDC58 != -1)
      swift_once(&qword_1009CDC58, sub_100200C00);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_1009D2460);
    v10 = v2;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = (char **)swift_slowAlloc(8, -1);
      v40 = v10;
      *(_DWORD *)v13 = 138412290;
      v14 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v13 + 4, v13 + 12);
      *v39 = v10;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%@: window => nil", v13, 0xCu);
      v15 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v39, 1, v15);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      v16 = *(void **)&v2[v3];
      if (v16)
      {
LABEL_11:
        v17 = v16;
        FrontmostWindowTracker.onFrontmostChanged.setter(0, 0);
        v18 = *(void **)&v2[v3];
LABEL_21:
        *(_QWORD *)&v2[v3] = 0;

        sub_100200C80(v16);
        return;
      }
    }
    else
    {

      v16 = *(void **)&v2[v3];
      if (v16)
        goto LABEL_11;
    }
    v18 = 0;
    goto LABEL_21;
  }
  sub_1002026E4();
  v7 = v6;
  v38 = v37;
  v8 = static NSObject.== infix(_:_:)(v7, v38);

  if ((v8 & 1) != 0)
  {

    return;
  }
  a1 = v38;
LABEL_13:
  v19 = qword_1009CDC58;
  v20 = a1;
  if (v19 != -1)
    swift_once(&qword_1009CDC58, sub_100200C00);
  v21 = type metadata accessor for Logger(0);
  sub_100048F64(v21, (uint64_t)qword_1009D2460);
  v22 = v20;
  v23 = v2;
  v24 = (char *)v22;
  v25 = v23;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc(22, -1);
    v29 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v28 = 138412546;
    v40 = v25;
    v30 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v28 + 4, v28 + 12);
    *v29 = v25;

    *(_WORD *)(v28 + 12) = 2112;
    v40 = v24;
    v31 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v28 + 14, v28 + 22);
    v29[1] = v24;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%@: window => %@", (uint8_t *)v28, 0x16u);
    v32 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v29, 2, v32);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v33 = *(void **)&v25[OBJC_IVAR___BKFrontmostAssetTracker_uiApplication];
  v34 = *(_QWORD *)&v25[OBJC_IVAR___BKFrontmostAssetTracker_appKitBundle];
  objc_allocWithZone((Class)type metadata accessor for FrontmostWindowTracker(0));
  v35 = v24;
  v36 = (void *)FrontmostWindowTracker.init(window:uiApplication:appKitBundle:)(v35, v33, v34);
  sub_100200F44(v36);

}

id FrontmostAssetTracker.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  objc_class *ObjectType;
  void *v5;
  id v6;
  objc_super v8;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = *(void **)&v2[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (v5)
  {
    v6 = v5;
    FrontmostWindowTracker.onFrontmostChanged.setter(0, 0);

  }
  v8.receiver = v3;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t FrontmostAssetTracker.window.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = FrontmostWindowTracker.window.getter();

  return v3;
}

void (*FrontmostAssetTracker.window.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;

  a1[1] = v1;
  v3 = *(void **)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (v3)
  {
    v4 = v3;
    v5 = FrontmostWindowTracker.window.getter();

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  return sub_100202638;
}

void sub_100202638(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    FrontmostAssetTracker.window.setter(v2);

  }
  else
  {
    FrontmostAssetTracker.window.setter(*a1);
  }
}

void FrontmostAssetTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.FrontmostAssetTracker", 27, "init()", 6, 0);
  __break(1u);
}

unint64_t sub_1002026E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2490;
  if (!qword_1009D2490)
  {
    v1 = objc_opt_self(UIWindow);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D2490);
  }
  return result;
}

uint64_t type metadata accessor for FrontmostAssetTracker()
{
  return objc_opt_self(BKFrontmostAssetTracker);
}

_WORD *initializeBufferWithCopyOfBuffer for FrontmostAssetTracker.State(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FrontmostAssetTracker.State(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FrontmostAssetTracker.State(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10020283C + 4 * byte_100711915[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100202870 + 4 * byte_100711910[v4]))();
}

uint64_t sub_100202870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100202878(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100202880);
  return result;
}

uint64_t sub_10020288C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100202894);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100202898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002028A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FrontmostAssetTracker.State()
{
  return &type metadata for FrontmostAssetTracker.State;
}

uint64_t sub_1002028BC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002028E0(char a1)
{
  uint64_t v1;

  return sub_100653B5C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002028E8()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10020290C()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  sub_100200D2C();

}

uint64_t sub_100202944()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100202968(uint64_t a1)
{
  uint64_t v1;

  sub_100201CF4(a1, v1);
}

uint64_t sub_100202980()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E300);
  sub_100048F64(v16, (uint64_t)qword_100A1E300);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x707041206B6F6F42, 0xEF65636E61726165);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'typeDisplayRepresentation' for AppEnum represents reading experience appearance/theme settings", 95, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_100202B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  char *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t result;
  void (*v101)(char *, uint64_t, uint64_t);
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unsigned int v107;
  uint64_t v108;
  char *v109;
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  char *v124;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v124 = (char *)&v101 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v111 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v6 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v119 = v13;
  __chkstk_darwin(v13);
  v109 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D2630);
  v17 = sub_10004CFD4(&qword_1009D0990);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  v117 = v17;
  v120 = *(_BYTE **)(v18 + 72);
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v104 = 8 * (_QWORD)v120;
  v22 = swift_allocObject(v16, v21 + 8 * (_QWORD)v120, v20 | 7);
  v105 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_100711990;
  v113 = v22 + v21;
  v106 = v22 + v21 + *(int *)(v19 + 48);
  *(_BYTE *)(v22 + v21) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x6F4D20746867694CLL, 0xEA00000000006564);
  static Locale.current.getter(v23);
  v24 = *(void (**)(char *))(v4 + 104);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24(v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Light Mode' appearance name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 137, 2);
  v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v110(v111, 1, 1, v13);
  v112 = type metadata accessor for DisplayRepresentation.Image(0);
  v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56);
  v116(v124, 1, 1, v112);
  v118 = sub_10004CFD4(&qword_1009D2640);
  v26 = *(unsigned __int8 *)(v14 + 80);
  v114 = *(_QWORD *)(v14 + 72);
  v115 = (v26 + 32) & ~v26;
  v121 = v26 | 7;
  v122 = v115 + 2 * v114;
  v27 = swift_allocObject(v118, v122, v26 | 7);
  v123 = xmmword_10070FC00;
  *(_OWORD *)(v27 + 16) = xmmword_10070FC00;
  v28 = String.LocalizationValue.init(stringLiteral:)(0x746867694CLL, 0xE500000000000000);
  static Locale.current.getter(v28);
  v29 = v108;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v6, v25, v108);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Light Mode' theme", 53, 2);
  v30 = String.LocalizationValue.init(stringLiteral:)(0x685420746867694CLL, 0xEB00000000656D65);
  static Locale.current.getter(v30);
  v107 = v25;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v6, v25, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Light Mode' theme", 53, 2);
  v31 = v111;
  v32 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v111, v124, v27);
  v103 = (uint64_t)&v120[v113 + *(int *)(v117 + 48)];
  v120[v113] = 1;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x646F4D206B726144, 0xE900000000000065);
  static Locale.current.getter(v33);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v6, v25, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Dark Mode' appearance name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 136, 2);
  v110(v31, 1, 1, v119);
  v116(v32, 1, 1, v112);
  v34 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v34 + 16) = v123;
  v35 = String.LocalizationValue.init(stringLiteral:)(1802658116, 0xE400000000000000);
  static Locale.current.getter(v35);
  v36 = v107;
  ((void (*)(char *, _QWORD, uint64_t))v24)(v6, v107, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Dark Mode' theme", 52, 2);
  v106 = 0xEA0000000000656DLL;
  v37 = String.LocalizationValue.init(stringLiteral:)(0x656854206B726144, 0xEA0000000000656DLL);
  static Locale.current.getter(v37);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v6, v36, v29);
  v38 = (void (*)(char *, uint64_t, uint64_t))v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Dark Mode' theme", 52, 2);
  v39 = v31;
  v40 = v31;
  v41 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v40, v124, v34);
  v103 = 2 * (_QWORD)v120;
  v42 = (_BYTE *)(v113 + 2 * (_QWORD)v120);
  v102 = &v42[*(int *)(v117 + 48)];
  *v42 = 2;
  v43 = String.LocalizationValue.init(stringLiteral:)(0x6C616E696769724FLL, 0xEE00656D65685420);
  static Locale.current.getter(v43);
  v44 = v108;
  v38(v6, v36, v108);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Original' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 130, 2);
  v110(v39, 1, 1, v119);
  v116(v41, 1, 1, v112);
  v45 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v45 + 16) = v123;
  v46 = String.LocalizationValue.init(stringLiteral:)(0x6C616E696769724FLL, 0xE800000000000000);
  static Locale.current.getter(v46);
  v47 = v44;
  v38(v6, v36, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Original Theme'", 51, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0x6C616E696769724FLL, 0xED000065646F4D20);
  static Locale.current.getter(v48);
  v49 = v36;
  v38(v6, v36, v47);
  v50 = v38;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Original Theme'", 51, 2);
  v51 = v111;
  v52 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v111, v124, v45);
  v53 = &v120[v103 + v113];
  v103 = (uint64_t)&v53[*(int *)(v117 + 48)];
  *v53 = 3;
  v54 = String.LocalizationValue.init(stringLiteral:)(0x6854207465697551, 0xEB00000000656D65);
  static Locale.current.getter(v54);
  v55 = v49;
  v56 = v47;
  v50(v6, v55, v47);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Quiet' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance..", 128, 2);
  v110(v51, 1, 1, v119);
  v116(v52, 1, 1, v112);
  v57 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v57 + 16) = v123;
  v58 = String.LocalizationValue.init(stringLiteral:)(0x7465697551, 0xE500000000000000);
  static Locale.current.getter(v58);
  v59 = v107;
  v50(v6, v107, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Quiet Theme'", 48, 2);
  v60 = String.LocalizationValue.init(stringLiteral:)(0x6F4D207465697551, 0xEA00000000006564);
  static Locale.current.getter(v60);
  v50(v6, v59, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Quiet Theme'", 48, 2);
  v61 = v111;
  v62 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v111, v124, v57);
  v103 = 4 * (_QWORD)v120;
  v63 = (_BYTE *)(v113 + 4 * (_QWORD)v120);
  v102 = &v63[*(int *)(v117 + 48)];
  *v63 = 4;
  v64 = String.LocalizationValue.init(stringLiteral:)(0x6854207265706150, 0xEB00000000656D65);
  static Locale.current.getter(v64);
  v50(v6, v59, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Paper' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 127, 2);
  v110(v61, 1, 1, v119);
  v116(v62, 1, 1, v112);
  v65 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v65 + 16) = v123;
  v66 = String.LocalizationValue.init(stringLiteral:)(0x7265706150, 0xE500000000000000);
  static Locale.current.getter(v66);
  v50(v6, v59, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Paper Theme'", 48, 2);
  v67 = String.LocalizationValue.init(stringLiteral:)(0x6F4D207265706150, 0xEA00000000006564);
  static Locale.current.getter(v67);
  v68 = v59;
  v69 = v59;
  v70 = v56;
  v50(v6, v68, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Paper Theme'", 48, 2);
  v71 = v61;
  v72 = v61;
  v73 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v72, v124, v65);
  v74 = &v120[v103 + v113];
  v103 = (uint64_t)&v74[*(int *)(v117 + 48)];
  *v74 = 5;
  v75 = String.LocalizationValue.init(stringLiteral:)(0x65685420646C6F42, v106);
  static Locale.current.getter(v75);
  v50(v6, v69, v56);
  v76 = v50;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Bold' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 126, 2);
  v110(v71, 1, 1, v119);
  v116(v73, 1, 1, v112);
  v77 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v77 + 16) = v123;
  v78 = String.LocalizationValue.init(stringLiteral:)(1684827970, 0xE400000000000000);
  static Locale.current.getter(v78);
  v79 = v107;
  v50(v6, v107, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Bold Theme'", 47, 2);
  v80 = String.LocalizationValue.init(stringLiteral:)(0x646F4D20646C6F42, 0xE900000000000065);
  static Locale.current.getter(v80);
  v50(v6, v79, v56);
  v101 = v50;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Bold Theme'", 47, 2);
  v81 = v109;
  v82 = v111;
  v83 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v111, v124, v77);
  v84 = (_BYTE *)(v113 + 6 * (_QWORD)v120);
  v103 = (uint64_t)&v84[*(int *)(v117 + 48)];
  *v84 = 6;
  v85 = String.LocalizationValue.init(stringLiteral:)(0x656854206D6C6143, v106);
  static Locale.current.getter(v85);
  v76(v6, v79, v70);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Calm' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 126, 2);
  v110(v82, 1, 1, v119);
  v116(v83, 1, 1, v112);
  v86 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v86 + 16) = v123;
  v87 = String.LocalizationValue.init(stringLiteral:)(1835819331, 0xE400000000000000);
  static Locale.current.getter(v87);
  v88 = v79;
  v89 = v79;
  v90 = v70;
  v91 = v101;
  v101(v6, v89, v70);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Calm Theme'", 47, 2);
  v92 = String.LocalizationValue.init(stringLiteral:)(0x646F4D206D6C6143, 0xE900000000000065);
  static Locale.current.getter(v92);
  v91(v6, v88, v70);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Calm Theme'", 47, 2);
  v93 = v111;
  v94 = v124;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v81, v111, v124, v86);
  v95 = (_BYTE *)(v113 + v104 - (_QWORD)v120);
  v120 = &v95[*(int *)(v117 + 48)];
  *v95 = 7;
  v96 = String.LocalizationValue.init(stringLiteral:)(0x6854207375636F46, 0xEB00000000656D65);
  static Locale.current.getter(v96);
  v91(v6, v88, v90);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: 'Focus' theme name - appears in the chooser when running an AppIntent sets reader themes and appearance.", 127, 2);
  v110(v93, 1, 1, v119);
  v116(v94, 1, 1, v112);
  v97 = swift_allocObject(v118, v122, v121);
  *(_OWORD *)(v97 + 16) = v123;
  v98 = String.LocalizationValue.init(stringLiteral:)(0x7375636F46, 0xE500000000000000);
  static Locale.current.getter(v98);
  v91(v6, v88, v90);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Focus Theme'", 48, 2);
  v99 = String.LocalizationValue.init(stringLiteral:)(0x6F4D207375636F46, 0xEA00000000006564);
  static Locale.current.getter(v99);
  v91(v6, v88, v90);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Book Theme: Synonym for 'Focus Theme'", 48, 2);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v109, v111, v94, v97);
  result = sub_1001DA73C(v105);
  qword_100A1E318 = result;
  return result;
}

void sub_100203D28(char *a1)
{
  sub_100670954(*a1);
}

unint64_t sub_100203D38()
{
  unint64_t result;

  result = qword_1009D24E0;
  if (!qword_1009D24E0)
  {
    result = swift_getWitnessTable(&unk_1007119C4, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D24E0);
  }
  return result;
}

void sub_100203D7C()
{
  char *v0;

  sub_1006724B0(0, *v0);
}

void sub_100203D88(uint64_t a1)
{
  char *v1;

  sub_100671C68(a1, *v1);
}

void sub_100203D90(uint64_t a1)
{
  char *v1;

  sub_1006724B0(a1, *v1);
}

unint64_t sub_100203D98@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100204FE4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100203DC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100203DF8 + 4 * byte_1007119A0[*v0]))();
}

void sub_100203DF8(_QWORD *a1@<X8>)
{
  *a1 = 0x65646F4D6B726164;
  a1[1] = 0xE800000000000000;
}

void sub_100203E14(_QWORD *a1@<X8>)
{
  *a1 = 0x31656D656874;
  a1[1] = 0xE600000000000000;
}

void sub_100203E2C(_QWORD *a1@<X8>)
{
  *a1 = 0x32656D656874;
  a1[1] = 0xE600000000000000;
}

void sub_100203E44(_QWORD *a1@<X8>)
{
  *a1 = 0x33656D656874;
  a1[1] = 0xE600000000000000;
}

void sub_100203E5C(_QWORD *a1@<X8>)
{
  *a1 = 0x34656D656874;
  a1[1] = 0xE600000000000000;
}

void sub_100203E74(_QWORD *a1@<X8>)
{
  *a1 = 0x35656D656874;
  a1[1] = 0xE600000000000000;
}

void sub_100203E8C(_QWORD *a1@<X8>)
{
  *a1 = 0x36656D656874;
  a1[1] = 0xE600000000000000;
}

unint64_t sub_100203EA8()
{
  unint64_t result;

  result = qword_1009D24E8;
  if (!qword_1009D24E8)
  {
    result = swift_getWitnessTable(&unk_100711AA4, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D24E8);
  }
  return result;
}

unint64_t sub_100203EF0()
{
  unint64_t result;

  result = qword_1009D24F0;
  if (!qword_1009D24F0)
  {
    result = swift_getWitnessTable(&unk_100711ADC, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D24F0);
  }
  return result;
}

unint64_t sub_100203F38()
{
  unint64_t result;

  result = qword_1009D24F8;
  if (!qword_1009D24F8)
  {
    result = swift_getWitnessTable(&unk_100711A2C, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D24F8);
  }
  return result;
}

unint64_t sub_100203F80()
{
  unint64_t result;

  result = qword_1009D2500;
  if (!qword_1009D2500)
  {
    result = swift_getWitnessTable(&unk_100711B0C, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2500);
  }
  return result;
}

unint64_t sub_100203FC8()
{
  unint64_t result;

  result = qword_1009D2508;
  if (!qword_1009D2508)
  {
    result = swift_getWitnessTable(&unk_100711B34, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2508);
  }
  return result;
}

unint64_t sub_100204010()
{
  unint64_t result;

  result = qword_1009D2510;
  if (!qword_1009D2510)
  {
    result = swift_getWitnessTable(&unk_100711B5C, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2510);
  }
  return result;
}

unint64_t sub_100204058()
{
  unint64_t result;

  result = qword_1009D2518;
  if (!qword_1009D2518)
  {
    result = swift_getWitnessTable(&unk_100711BB4, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2518);
  }
  return result;
}

uint64_t sub_10020409C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC60, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E300, (uint64_t)sub_100202980, a1);
}

uint64_t sub_1002040C0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100204100();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100204100()
{
  unint64_t result;

  result = qword_1009D2520;
  if (!qword_1009D2520)
  {
    result = swift_getWitnessTable(&unk_100711A64, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2520);
  }
  return result;
}

uint64_t sub_100204144(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100204100();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100204180()
{
  unint64_t result;

  result = qword_1009D2528;
  if (!qword_1009D2528)
  {
    result = swift_getWitnessTable(&unk_100711BF4, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2528);
  }
  return result;
}

unint64_t sub_1002041C8()
{
  unint64_t result;

  result = qword_1009D2530;
  if (!qword_1009D2530)
  {
    result = swift_getWitnessTable(&unk_100711C1C, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2530);
  }
  return result;
}

unint64_t sub_100204210()
{
  unint64_t result;

  result = qword_1009D2538;
  if (!qword_1009D2538)
  {
    result = swift_getWitnessTable(&unk_1007119EC, &type metadata for BookThemeSetting);
    atomic_store(result, (unint64_t *)&qword_1009D2538);
  }
  return result;
}

double sub_100204254()
{
  double result;

  if (qword_1009CDC68 != -1)
    swift_once(&qword_1009CDC68, sub_100202B9C);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E318).n128_u64[0];
  return result;
}

uint64_t sub_100204294(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100204058();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002042CC()
{
  return sub_100030B34(&qword_1009D2540, &qword_1009D2548, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1002042F8(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFBC8;
}

unint64_t sub_10020430C()
{
  unint64_t result;

  result = qword_1009D2550;
  if (!qword_1009D2550)
  {
    result = swift_getWitnessTable(&unk_100711CBC, &type metadata for BookReaderChangeThemeIntent);
    atomic_store(result, (unint64_t *)&qword_1009D2550);
  }
  return result;
}

uint64_t sub_100204354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E320);
  sub_100048F64(v10, (uint64_t)qword_100A1E320);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007B6A30);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for AppIntent that controls reader appearance and themes.", 63, 2);
}

_QWORD *sub_1002044C8@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1002044E8()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100204518()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10004CFD4(&qword_1009D2608);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D2610);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100204890();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for BookReaderChangeThemeIntent, v6);
  v7._object = (void *)0x80000001007B6A10;
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100711E18);
  v9 = sub_10004CFD4(&qword_1009D2618);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100711E40);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D2620);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for BookReaderChangeThemeIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for BookReaderChangeThemeIntent, v6);
}

_QWORD *sub_1002046D4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1002046F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for ChangeOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_10020478C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1002047D4;
}

_QWORD *sub_1002047D8@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100204810(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

void (*sub_100204844(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1002047D4;
}

unint64_t sub_100204890()
{
  unint64_t result;

  result = qword_1009F2A70;
  if (!qword_1009F2A70)
  {
    result = swift_getWitnessTable(&unk_100711CE4, &type metadata for BookReaderChangeThemeIntent);
    atomic_store(result, (unint64_t *)&qword_1009F2A70);
  }
  return result;
}

unint64_t sub_1002048D8()
{
  unint64_t result;

  result = qword_1009D2560;
  if (!qword_1009D2560)
  {
    result = swift_getWitnessTable(&unk_100711D74, &type metadata for BookReaderChangeThemeIntent);
    atomic_store(result, (unint64_t *)&qword_1009D2560);
  }
  return result;
}

unint64_t sub_100204920()
{
  unint64_t result;

  result = qword_1009D2568;
  if (!qword_1009D2568)
  {
    result = swift_getWitnessTable(&unk_100711D9C, &type metadata for BookReaderChangeThemeIntent);
    atomic_store(result, (unint64_t *)&qword_1009D2568);
  }
  return result;
}

uint64_t sub_100204964()
{
  return sub_100030B34((unint64_t *)&qword_1009D2570, &qword_1009D1328, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100204990(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100867B00, 1);
}

uint64_t sub_1002049A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDC70, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E320, (uint64_t)sub_100204354, a1);
}

uint64_t sub_1002049C8()
{
  return swift_task_switch(sub_1002049DC, 0, 0);
}

uint64_t sub_1002049DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = sub_100205654();
  v2 = swift_allocError(&type metadata for BookReaderChangeThemeError, v1, 0, 0);
  swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100204A34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10020502C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100204A58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100204890();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void sub_100204A80()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v9[15];
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009D2648);
  __chkstk_darwin(v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for ChangeOperation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  IntentParameter.wrappedValue.getter(&v10);
  v7 = v10;
  IntentParameter.wrappedValue.getter(v6);
  v8 = &v2[*(int *)(v0 + 48)];
  *v2 = v7;
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v4 + 32))(v8, v6, v3);
  __asm { BR              X9 }
}

const char *sub_100204B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == enum case for ChangeOperation.disable(_:))
    return "books_disableTheme:";
  if (v4 == enum case for ChangeOperation.enable(_:))
    return "books_enableTheme:";
  if (v4 == enum case for ChangeOperation.toggle(_:))
    return "books_toggleTheme:";
  sub_1002056E8(v0);
  return 0;
}

uint64_t sub_100204CF0()
{
  uint64_t v0;

  return qword_100711F60[*(char *)(v0 + OBJC_IVAR____TtC5Books15ThemeIDProvider_setting)];
}

id sub_100204D48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThemeIDProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ThemeIDProvider()
{
  return objc_opt_self(_TtC5Books15ThemeIDProvider);
}

ValueMetadata *type metadata accessor for BookReaderChangeThemeIntent()
{
  return &type metadata for BookReaderChangeThemeIntent;
}

uint64_t storeEnumTagSinglePayload for BookThemeSetting(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100204DF4 + 4 * byte_1007119B5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100204E28 + 4 * byte_1007119B0[v4]))();
}

uint64_t sub_100204E28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100204E30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100204E38);
  return result;
}

uint64_t sub_100204E44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100204E4CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100204E50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100204E58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookThemeSetting()
{
  return &type metadata for BookThemeSetting;
}

uint64_t sub_100204E74()
{
  return sub_100030B34(&qword_1009D25B8, (uint64_t *)&unk_1009D25C0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100204EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x80000001007B7110);
  static Locale.current.getter(v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Error message when attempting to change reader appearance when there is no book open.", 85, 2);
}

unint64_t sub_100204FE4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EFAE8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

uint64_t sub_10020502C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char v70[3];
  uint64_t v71;

  v69 = type metadata accessor for InputConnectionBehavior(0);
  v64 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v68 = (char *)&v54 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_10004CFD4(&qword_1009D1330);
  v2 = __chkstk_darwin(v1);
  v67 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v66 = (char *)&v54 - v4;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D25D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v65 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  __chkstk_darwin(v10);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v63 = v21;
  __chkstk_darwin(v21);
  v55 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10004CFD4(&qword_1009D25E0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v59 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v57 = v12;
  v26(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  v58 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Title for parameter that specifies operation to perform when running an AppIntent that changes reader appearance and themes - enable, disable, or toggle", 152, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007B6870);
  static Locale.current.getter(v27);
  v26(v14, v25, v12);
  v28 = v65;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Description for intent change operation parameter possible values.", 66, 2);
  v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v62(v28, 0, 1, v21);
  v29 = enum case for ChangeOperation.enable(_:);
  v30 = type metadata accessor for ChangeOperation(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 104);
  v54 = (uint64_t)v7;
  v32(v7, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v7, 0, 1, v30);
  v33 = type metadata accessor for IntentDialog(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v56 = v34;
  v35 = v66;
  v34(v66, 1, 1, v33);
  v36 = v67;
  v34(v67, 1, 1, v33);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v64 = *(_QWORD *)(v64 + 104);
  v37 = v68;
  ((void (*)(char *))v64)(v68);
  v38 = sub_100205614(&qword_1009D25E8, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  dispatch thunk of static CaseIterable.allCases.getter(&v71, v30, v38);
  v39 = v71;
  v40 = sub_100205614(&qword_1009D25F0, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v41 = v55;
  v42 = v65;
  v61 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v55, v65, v54, v35, v36, v37, v39, v40);
  v54 = sub_10004CFD4(&qword_1009D25F8);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x6E61726165707041, 0xEA00000000006563);
  static Locale.current.getter(v43);
  v44 = v59;
  v45 = v57;
  v46 = v58;
  v58(v14, v59, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Title for parameter that specifies target mode when running and AppIntent that changes reader appearance and themes - light mode, dark mode, or one of the themes.", 162, 2);
  v47 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000001007B6990);
  static Locale.current.getter(v47);
  v46(v14, v44, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Description for theme change intent setting parameter possible values.", 70, 2);
  v62(v42, 0, 1, v63);
  v70[0] = 0;
  v48 = v66;
  v49 = v56;
  v56(v66, 1, 1, v33);
  v50 = v67;
  v49(v67, 1, 1, v33);
  v51 = v68;
  ((void (*)(char *, _QWORD, uint64_t))v64)(v68, v60, v69);
  v52 = sub_100204100();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v41, v42, v70, v48, v50, v51, &off_1008EFBC8, v52);
  return v61;
}

uint64_t sub_100205614(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ChangeOperation(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100205654()
{
  unint64_t result;

  result = qword_1009D2600;
  if (!qword_1009D2600)
  {
    result = swift_getWitnessTable(&unk_100711F1C, &type metadata for BookReaderChangeThemeError);
    atomic_store(result, (unint64_t *)&qword_1009D2600);
  }
  return result;
}

uint64_t sub_100205698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002056C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002056E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D2648);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for BookReaderChangeThemeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100205768 + 4 * byte_1007119BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100205788 + 4 * byte_1007119BF[v4]))();
}

_BYTE *sub_100205768(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100205788(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100205790(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100205798(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002057A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002057A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChangeThemeError()
{
  return &type metadata for BookReaderChangeThemeError;
}

unint64_t sub_1002057C8()
{
  unint64_t result;

  result = qword_1009D2650;
  if (!qword_1009D2650)
  {
    result = swift_getWitnessTable(&unk_100711EF4, &type metadata for BookReaderChangeThemeError);
    atomic_store(result, (unint64_t *)&qword_1009D2650);
  }
  return result;
}

uint64_t LibraryAnalyticsDataProvider.seriesType(for:)@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (id)BSUIGetLibraryItemStateProvider();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "itemStateWithIdentifier:", v3);

  swift_unknownObjectRelease(v2);
  v5 = objc_msgSend(v4, "seriesType");
  swift_unknownObjectRelease(v4);
  switch((unint64_t)v5)
  {
    case 1uLL:
      v10 = (unsigned int *)&enum case for SeriesType.nonSeries(_:);
      goto LABEL_6;
    case 2uLL:
      v10 = (unsigned int *)&enum case for SeriesType.ordered(_:);
      goto LABEL_6;
    case 3uLL:
      v10 = (unsigned int *)&enum case for SeriesType.unOrdered(_:);
LABEL_6:
      v11 = *v10;
      v12 = type metadata accessor for SeriesType(0);
      v13 = *(_QWORD *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(a1, v11, v12);
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v8 = a1;
      v9 = 0;
      v6 = v12;
      break;
    default:
      v6 = type metadata accessor for SeriesType(0);
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
      v8 = a1;
      v9 = 1;
      break;
  }
  return v7(v8, v9, 1, v6);
}

ValueMetadata *type metadata accessor for LibraryAnalyticsDataProvider()
{
  return &type metadata for LibraryAnalyticsDataProvider;
}

uint64_t sub_100205964()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t KeyPath;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _QWORD v36[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10004CFD4(&qword_1009D26A8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (int *)type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel];
  v36[3] = ObjectType;
  v36[4] = &off_1008F3948;
  v36[0] = v1;
  *v11 = swift_getKeyPath(&unk_1007125B0);
  v16 = sub_10004CFD4(&qword_1009D26B0);
  swift_storeEnumTagMultiPayload(v11, v16, 0);
  *v8 = swift_getKeyPath(&unk_1007125D8);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v8, v17, 0);
  *v5 = swift_getKeyPath(&unk_100712608);
  v18 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v5, v18, 0);
  KeyPath = swift_getKeyPath(&unk_100712638);
  v19 = swift_getKeyPath(&unk_100712668);
  v20 = type metadata accessor for BuyButtonViewModel(0);
  v21 = sub_100008DB0(&qword_1009D26C0, type metadata accessor for BuyButtonViewModel, (uint64_t)&unk_10072F0D0);
  swift_retain(v15);
  v22 = v1;
  *v14 = ObservedObject.init(wrappedValue:)(v15, v20, v21);
  v14[1] = v23;
  sub_100025B3C((uint64_t)v36, (uint64_t)(v14 + 2), &qword_1009D26C8);
  sub_100025B3C((uint64_t)v11, (uint64_t)v14 + v12[6], &qword_1009D26A8);
  v24 = (char *)v14 + v12[7];
  type metadata accessor for CGSize(0);
  v33[0] = 0;
  v33[1] = 0;
  State.init(wrappedValue:)(&v34, v33, v25);
  v26 = v35;
  *(_OWORD *)v24 = v34;
  *((_QWORD *)v24 + 2) = v26;
  sub_100025B3C((uint64_t)v8, (uint64_t)v14 + v12[8], (uint64_t *)&unk_1009D8230);
  sub_100025B3C((uint64_t)v5, (uint64_t)v14 + v12[9], &qword_1009D26A0);
  v27 = (char *)v14 + v12[10];
  *(_QWORD *)v27 = KeyPath;
  v27[8] = 0;
  v28 = (char *)v14 + v12[11];
  *(_QWORD *)v28 = v19;
  v28[8] = 0;
  v29 = sub_100008DB0((unint64_t *)&unk_1009D26D0, type metadata accessor for BuyButtonView, (uint64_t)&unk_1007339F0);
  return AnyView.init<A>(_:)(v14, v12, v29);
}

double sub_100205C80(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v23;
  uint64_t v24;
  double result;

  v19 = v18;
  sub_100059BB4();
  v23 = swift_allocObject(&unk_1008F39D0, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v19);
  v24 = swift_allocObject(&unk_1008F3A20, 168, 7);
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = a3;
  *(_QWORD *)(v24 + 32) = a4;
  *(_QWORD *)(v24 + 40) = a5;
  *(_QWORD *)(v24 + 48) = a6;
  *(_BYTE *)(v24 + 56) = a2;
  *(_QWORD *)(v24 + 64) = a15;
  *(_QWORD *)(v24 + 72) = a16;
  *(_QWORD *)(v24 + 80) = a17;
  *(_QWORD *)(v24 + 88) = a18;
  *(_BYTE *)(v24 + 96) = a1;
  *(_QWORD *)(v24 + 104) = a7;
  *(_QWORD *)(v24 + 112) = a11;
  *(_QWORD *)(v24 + 120) = a8;
  *(_QWORD *)(v24 + 128) = a10;
  *(_QWORD *)(v24 + 136) = a12;
  *(_QWORD *)(v24 + 144) = a9;
  *(_QWORD *)(v24 + 152) = a13;
  *(_QWORD *)(v24 + 160) = a14;
  swift_bridgeObjectRetain(a14);
  swift_retain(v23);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRetain(a16);
  swift_bridgeObjectRetain(a18);
  swift_retain(a7);
  swift_retain(a11);
  swift_retain(a8);
  swift_retain(a10);
  swift_retain(a12);
  swift_retain(a9);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_100207780, v24);
  swift_release(v23);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

void sub_100205E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, uint64_t a18, char a19, double a20,double a21,double a22,double a23,double a24,double a25,double a26,uint64_t a27)
{
  uint64_t v26;
  uint64_t Strong;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  double v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  char v85[32];

  v26 = a1 + 16;
  swift_beginAccess(a1 + 16, v85, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v26);
  if (Strong)
  {
    v28 = (char *)Strong;
    v82 = a8;
    v29 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel;
    v80 = a6;
    v30 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel);
    v81 = *(double *)&a7;
    KeyPath = swift_getKeyPath(&unk_100712178);
    v32 = swift_getKeyPath(&unk_1007121A0);
    v83 = *(double *)&a2;
    v84 = a3;
    swift_retain(v30);
    swift_bridgeObjectRetain(a3);
    static Published.subscript.setter(&v83, v30, KeyPath, v32);
    v33 = *(_QWORD *)&v28[v29];
    v34 = swift_getKeyPath(&unk_1007121C0);
    v35 = swift_getKeyPath(&unk_1007121E8);
    v83 = *(double *)&a4;
    v84 = a5;
    swift_bridgeObjectRetain(a5);
    swift_retain(v33);
    static Published.subscript.setter(&v83, v33, v34, v35);
    v36 = *(_QWORD *)&v28[v29];
    v37 = swift_getKeyPath(&unk_100712208);
    v38 = swift_getKeyPath(&unk_100712230);
    LOBYTE(v83) = v80;
    swift_retain(v36);
    static Published.subscript.setter(&v83, v36, v37, v38);
    v39 = *(_QWORD *)&v28[v29];
    v40 = swift_getKeyPath(&unk_100712250);
    v41 = swift_getKeyPath(&unk_100712278);
    v83 = v81;
    v84 = v82;
    swift_retain(v39);
    swift_bridgeObjectRetain(v82);
    static Published.subscript.setter(&v83, v39, v40, v41);
    v42 = *(_QWORD *)&v28[v29];
    v43 = swift_getKeyPath(&unk_100712298);
    v44 = swift_getKeyPath(&unk_1007122C0);
    v83 = a17;
    v84 = a18;
    swift_retain(v42);
    swift_bridgeObjectRetain(a18);
    static Published.subscript.setter(&v83, v42, v43, v44);
    v45 = *(_QWORD *)&v28[v29];
    v46 = swift_getKeyPath(&unk_1007122E0);
    v47 = swift_getKeyPath(&unk_100712308);
    LOBYTE(v83) = a19 & 1;
    swift_retain(v45);
    static Published.subscript.setter(&v83, v45, v46, v47);
    v48 = *(_QWORD *)&v28[v29];
    v49 = swift_getKeyPath(&unk_100712328);
    v50 = swift_getKeyPath(&unk_100712350);
    v83 = a20;
    swift_retain(v48);
    swift_retain(*(_QWORD *)&a20);
    static Published.subscript.setter(&v83, v48, v49, v50);
    v51 = *(_QWORD *)&v28[v29];
    v52 = swift_getKeyPath(&unk_100712370);
    v53 = swift_getKeyPath(&unk_100712398);
    v83 = a21;
    swift_retain(v51);
    swift_retain(*(_QWORD *)&a21);
    static Published.subscript.setter(&v83, v51, v52, v53);
    v54 = *(_QWORD *)&v28[v29];
    v55 = swift_getKeyPath(&unk_1007123B8);
    v56 = swift_getKeyPath(&unk_1007123E0);
    v83 = a22;
    swift_retain(v54);
    swift_retain(*(_QWORD *)&a22);
    static Published.subscript.setter(&v83, v54, v55, v56);
    v57 = *(_QWORD *)&v28[v29];
    v58 = swift_getKeyPath(&unk_100712400);
    v59 = swift_getKeyPath(&unk_100712428);
    v83 = a23;
    swift_retain(v57);
    swift_retain(*(_QWORD *)&a23);
    static Published.subscript.setter(&v83, v57, v58, v59);
    v60 = *(_QWORD *)&v28[v29];
    v61 = swift_getKeyPath(&unk_100712448);
    v62 = swift_getKeyPath(&unk_100712470);
    v83 = a24;
    swift_retain(v60);
    swift_retain(*(_QWORD *)&a24);
    static Published.subscript.setter(&v83, v60, v61, v62);
    if (a25 == 0.0
      || (v63 = *(double *)(*(_QWORD *)&v28[OBJC_IVAR____TtC5Books18BuyButtonPresenter_style] + 56), v63 <= 0.0))
    {
      v70 = *(_QWORD *)&v28[v29];
      v71 = swift_getKeyPath(&unk_100712490);
      v72 = swift_getKeyPath(&unk_1007124B8);
      v83 = 0.0;
      swift_retain(v70);
      static Published.subscript.setter(&v83, v70, v71, v72);
      v67 = *(_QWORD *)&v28[v29];
      v68 = swift_getKeyPath(&unk_1007124D8);
      v69 = swift_getKeyPath(&unk_100712500);
      v83 = 0.0;
    }
    else
    {
      v64 = *(_QWORD *)&v28[v29];
      v65 = swift_getKeyPath(&unk_100712490);
      v66 = swift_getKeyPath(&unk_1007124B8);
      v83 = v63;
      swift_retain(*(_QWORD *)&a25);
      swift_retain(v64);
      static Published.subscript.setter(&v83, v64, v65, v66);
      v67 = *(_QWORD *)&v28[v29];
      v68 = swift_getKeyPath(&unk_1007124D8);
      v69 = swift_getKeyPath(&unk_100712500);
      v83 = a25;
    }
    swift_retain(v67);
    static Published.subscript.setter(&v83, v67, v68, v69);
    v73 = *(_QWORD *)&v28[v29];
    v74 = swift_getKeyPath(&unk_100712520);
    v75 = swift_getKeyPath(&unk_100712548);
    if (a27)
    {
      v83 = a26;
      v84 = a27;
      swift_bridgeObjectRetain(a27);
    }
    else
    {
      v83 = a26;
      v84 = 0;
    }
    swift_retain(v73);
    static Published.subscript.setter(&v83, v73, v74, v75);
    v76 = *(_QWORD *)&v28[v29];
    v77 = *(double *)(*(_QWORD *)&v28[OBJC_IVAR____TtC5Books18BuyButtonPresenter_style] + 216);
    v78 = swift_getKeyPath(&unk_100712568);
    v79 = swift_getKeyPath(&unk_100712590);
    v83 = v77;
    swift_retain(v76);
    static Published.subscript.setter(&v83, v76, v78, v79);

  }
}

uint64_t sub_100206444(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v3 = v2[12];
  v4 = v2[8];
  v5 = v2[9];
  v16 = v2[11];
  v19 = v2[10];
  v20 = v2[5];
  v21 = v2[3];
  v22 = v2[28];
  v6 = *(_QWORD **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                  + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  v7 = v6[4];
  v8 = v6[5];
  v9 = v6[7];
  if (v9)
  {
    v15 = v6[6];
    v17 = v6[7];
  }
  else if (v8)
  {
    swift_bridgeObjectRetain(v6[5]);
    v15 = v7;
    v17 = v8;
  }
  else
  {
    v15 = 0;
    v17 = 0xE000000000000000;
  }
  v10 = v6[3];
  v23 = v6[9];
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v19);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_bridgeObjectRetain_n(v9, 2);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v8);
  v11 = sub_1003446C8();
  v13 = v12;
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  sub_100205C80(a1 & 1, 0, v16, v3, 0, 0, v4, v5, v19, v20, v21, v22, 0, 0, v15, v17, v11, v13);
  swift_bridgeObjectRelease(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v19);
  swift_release(v20);
  swift_release(v21);
  swift_release(v22);
  swift_bridgeObjectRelease(v17);
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_100206674(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  v3 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor;
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style) + 136);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  v6 = *(_QWORD *)(v5 + 40);
  if (v6)
  {
    v7 = *(_QWORD *)(v5 + 32);
    v8 = sub_1001F15BC();
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v6);
    if ((Collection.isNotEmpty.getter(&type metadata for String, v8) & 1) != 0)
    {
      swift_bridgeObjectRelease(v4);
      v30 = v7;
      v22 = v6;
    }
    else
    {
      v22 = v4;
      swift_bridgeObjectRelease(v6);
    }
  }
  else
  {
    v22 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style) + 136);
    swift_bridgeObjectRetain(v4);
  }
  v9 = *(_QWORD **)(v31 + v2);
  v11 = v9[13];
  v10 = v9[14];
  v12 = v9[15];
  v26 = v9[5];
  v27 = v9[3];
  v28 = v9[28];
  v13 = *(_QWORD **)(*(_QWORD *)(v31 + v3) + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  v14 = v13[4];
  v15 = v13[5];
  v16 = v13[7];
  if (v16)
  {
    v24 = v13[6];
    v25 = v13[7];
  }
  else if (v15)
  {
    swift_bridgeObjectRetain(v13[5]);
    v24 = v14;
    v25 = v15;
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
  }
  v17 = v13[3];
  v32 = v13[9];
  swift_bridgeObjectRetain(v32);
  swift_retain(v11);
  swift_retain(v10);
  v23 = v12;
  swift_retain(v12);
  swift_retain(v26);
  swift_retain(v27);
  swift_retain(v28);
  swift_bridgeObjectRetain_n(v16, 2);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v15);
  v18 = sub_1003446C8();
  v20 = v19;
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v17);
  sub_100205C80(a1 & 1, 1, v30, v22, 0, 0, v11, v10, v23, v26, v27, v28, 0, 0, v24, v25, v18, v20);
  swift_bridgeObjectRelease(v22);
  swift_release(v11);
  swift_release(v10);
  swift_release(v23);
  swift_release(v26);
  swift_release(v27);
  swift_release(v28);
  swift_bridgeObjectRelease(v25);
  return swift_bridgeObjectRelease(v20);
}

uint64_t sub_100206914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v3 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor;
  v5 = *(_QWORD *)(v2 + 128);
  v4 = *(_QWORD *)(v2 + 136);
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  v7 = *(_QWORD *)(v6 + 40);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 32);
    v9 = sub_1001F15BC();
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v7);
    if ((Collection.isNotEmpty.getter(&type metadata for String, v9) & 1) != 0)
    {
      swift_bridgeObjectRelease(v4);
      v23 = v8;
      v24 = v7;
    }
    else
    {
      v23 = v5;
      v24 = v4;
      swift_bridgeObjectRelease(v7);
    }
  }
  else
  {
    v23 = v5;
    v24 = v4;
    swift_bridgeObjectRetain(v4);
  }
  v10 = *(_QWORD **)(v32 + v1);
  v11 = v10[22];
  v27 = v10[21];
  v13 = v10[18];
  v12 = v10[19];
  v29 = v10[5];
  v30 = v10[3];
  v31 = v10[28];
  v14 = *(_QWORD **)(*(_QWORD *)(v32 + v3) + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  v15 = v14[4];
  v16 = v14[5];
  v17 = v14[7];
  if (v17)
  {
    v26 = v14[6];
    v28 = v14[7];
  }
  else if (v16)
  {
    swift_bridgeObjectRetain(v14[5]);
    v26 = v15;
    v28 = v16;
  }
  else
  {
    v26 = 0;
    v28 = 0xE000000000000000;
  }
  v18 = v14[3];
  v33 = v14[9];
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v11);
  swift_retain(v13);
  v25 = v12;
  swift_retain(v12);
  swift_retain(v29);
  swift_retain(v30);
  swift_retain(v31);
  swift_bridgeObjectRetain_n(v17, 2);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v16);
  v19 = sub_1003446C8();
  v21 = v20;
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  sub_100205C80(0, 2, v27, v11, v23, v24, v13, v25, 0, v29, v30, v31, 0x72616D6B63656863, 0xE90000000000006BLL, v26, v28, v19, v21);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v24);
  swift_release(v13);
  swift_release(v25);
  swift_release(v29);
  swift_release(v30);
  swift_release(v31);
  swift_bridgeObjectRelease(v28);
  return swift_bridgeObjectRelease(v21);
}

void sub_100206BCC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100206C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6563697270, 0xE500000000000000, 1684104562, 0xE400000000000000, 0);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);
    v7 = v2;
    v8 = *(_QWORD *)(v4 + *(_QWORD *)(v2 + 1648));
    v9 = v0;
    v10 = *(_BYTE *)(*(_QWORD *)(v8 + *(_QWORD *)(v0 + 1104)) + 81);
    v11 = *(_QWORD **)(v4 + v1);
    if ((v10 & 1) != 0)
    {
      v3 = v11[25];
      v12 = v11[26];
    }
    else
    {
      v3 = v11[23];
      v12 = v11[24];
    }
    v29 = v12;
    swift_bridgeObjectRetain(v12);
  }
  else
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v4 + *(_QWORD *)(v2 + 1648)) + *(_QWORD *)(v0 + 1104));
    v14 = *(_QWORD *)(v13 + 40);
    if (v14)
    {
      v37 = v3;
      v7 = v2;
      v9 = v0;
      v3 = *(_QWORD *)(v13 + 32);
      v15 = sub_1001F15BC();
      swift_bridgeObjectRetain(v14);
      if ((Collection.isNotEmpty.getter(&type metadata for String, v15) & 1) != 0)
      {
        swift_bridgeObjectRelease(v5);
        v29 = v14;
      }
      else
      {
        v29 = v5;
        swift_bridgeObjectRelease(v14);
        v3 = v37;
      }
    }
    else
    {
      v7 = v2;
      v9 = v0;
      v29 = v5;
    }
  }
  v16 = *(_QWORD **)(v4 + v1);
  v17 = v16[6];
  v18 = v16[2];
  v19 = v16[4];
  v33 = v16[5];
  v34 = v16[3];
  v35 = v16[28];
  v20 = *(_QWORD **)(*(_QWORD *)(v4 + *(_QWORD *)(v7 + 1648)) + *(_QWORD *)(v9 + 1104));
  v21 = v20[4];
  v22 = v20[5];
  v23 = v20[7];
  if (v23)
  {
    v31 = v20[6];
    v32 = v20[7];
  }
  else if (v22)
  {
    swift_bridgeObjectRetain(v20[5]);
    v31 = v21;
    v32 = v22;
  }
  else
  {
    v31 = 0;
    v32 = 0xE000000000000000;
  }
  v24 = v20[3];
  v38 = v20[9];
  swift_bridgeObjectRetain(v38);
  swift_retain(v18);
  swift_retain(v19);
  v30 = v17;
  swift_retain(v17);
  swift_retain(v33);
  swift_retain(v34);
  swift_retain(v35);
  swift_bridgeObjectRetain_n(v23, 2);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v22);
  v25 = sub_1003446C8();
  v27 = v26;
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  sub_100205C80(v36 & 1, 0, v3, v29, 0, 0, v18, v19, v30, v33, v34, v35, 0, 0, v31, v32, v25, v27);
  swift_bridgeObjectRelease(v29);
  swift_release(v18);
  swift_release(v19);
  swift_release(v30);
  swift_release(v33);
  swift_release(v34);
  swift_release(v35);
  swift_bridgeObjectRelease(v32);
  return swift_bridgeObjectRelease(v27);
}

uint64_t type metadata accessor for BuyButtonPresenter()
{
  return objc_opt_self(_TtC5Books18BuyButtonPresenter);
}

void sub_100207030(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_100059BB4();
  v3 = swift_allocObject(&unk_1008F39D0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  v4 = swift_allocObject(&unk_1008F39F8, 25, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = a1;
  swift_retain(v3);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002076F8, v4);
  swift_release(v3);
  swift_release(v4);
  __asm { BR              X10 }
}

uint64_t sub_1002070FC()
{
  char v0;
  char v2;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6563697270, 0xE500000000000000, 7959906, 0xE300000000000000, 0);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  return sub_100206444(v0 & 1);
}

uint64_t sub_1002071F0()
{
  char v0;
  char v2;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E776F6E6B6E75, 0xE700000000000000, 0x726F6572506E6163, 0xEB00000000726564, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  return sub_100206674(v0 & 1);
}

void sub_100207300()
{
  uint64_t v0;
  char v1;
  char v2;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E776F6E6B6E75, 0xE700000000000000, 0x726F657250646964, 0xEB00000000726564, 0);
  swift_bridgeObjectRelease(0xE700000000000000);
  if ((v2 & 1) != 0)
  {
    sub_100206914();
  }
  else
  {
    if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                               + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager)
                   + 80) & 1) != 0)
      JUMPOUT(0x1002072C4);
    sub_100206BCC(v1);
  }
}

void sub_100207428(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  char v12;
  _BYTE v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (a2 == 7)
    {
      v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel);
      KeyPath = swift_getKeyPath(&unk_1007120E8);
      v11 = swift_getKeyPath(&unk_100712110);
      v12 = 2;
    }
    else
    {
      if (a2 == 6)
      {
        v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel);
        v7 = swift_getKeyPath(&unk_1007120E8);
        v8 = swift_getKeyPath(&unk_100712110);
        v12 = 1;
        swift_retain_n(v6, 2);
        static Published.subscript.setter(&v12, v6, v7, v8);
        swift_release(v6);
LABEL_8:

        return;
      }
      v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel);
      KeyPath = swift_getKeyPath(&unk_1007120E8);
      v11 = swift_getKeyPath(&unk_100712110);
      v12 = 0;
    }
    swift_retain(v9);
    static Published.subscript.setter(&v12, v9, KeyPath, v11);
    goto LABEL_8;
  }
}

void sub_100207578(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel);
    KeyPath = swift_getKeyPath(&unk_1007120E8);
    v9 = swift_getKeyPath(&unk_100712110);
    LOBYTE(v13) = 2;
    swift_retain(v7);
    static Published.subscript.setter(&v13, v7, KeyPath, v9);
    v10 = *(_QWORD *)&v5[v6];
    v11 = swift_getKeyPath(&unk_100712130);
    v12 = swift_getKeyPath(&unk_100712158);
    v13 = a2;
    swift_retain(v10);
    static Published.subscript.setter(&v13, v10, v11, v12);

  }
}

uint64_t sub_100207674@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002076B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002076D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1002076F8()
{
  uint64_t v0;

  sub_100207428(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100207704()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_release(v0[16]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  swift_bridgeObjectRelease(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

void sub_100207780(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;

  sub_100205E30(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_BYTE *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(double *)(v8 + 104), *(double *)(v8 + 120), *(double *)(v8 + 136), a4, a5, a6, a7, a8, *(double *)(v8 + 80), *(_QWORD *)(v8 + 88), *(_BYTE *)(v8 + 96),
    *(double *)(v8 + 104),
    *(double *)(v8 + 112),
    *(double *)(v8 + 120),
    *(double *)(v8 + 128),
    *(double *)(v8 + 136),
    *(double *)(v8 + 144),
    *(double *)(v8 + 152),
    *(_QWORD *)(v8 + 160));
}

uint64_t sub_100207870@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10020789C(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_1002078C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002078EC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch(sub_10000B870, 0, 0);
}

uint64_t sub_100207908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100207914);
}

uint64_t sub_100207914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100207990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020799C);
}

uint64_t sub_10020799C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_100207A10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __int128 v43[2];
  char v44;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  sub_10003F198(v1, v2);
  result = ContextActionDataProtocol.selectionMode.getter(v43, v2, v3);
  if ((v44 & 1) == 0)
  {
    sub_100022840(v43, (uint64_t)&v39);
    v27 = v40;
    v28 = v41;
    sub_10003F198(&v39, v40);
    v29 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v27, v28);
    LOBYTE(v27) = static ContextActionAssetType.== infix(_:_:)(v29, 4);
    sub_10002E418((uint64_t)&v39, (uint64_t)v36);
    if ((v27 & 1) != 0)
    {
      v30 = 0;
    }
    else
    {
      v32 = v37;
      v33 = v38;
      sub_10003F198(v36, v37);
      v34 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v32, v33);
      v30 = static ContextActionAssetType.== infix(_:_:)(v34, 5) ^ 1;
    }
    _s5Books15CurrentPageViewVwxx_0(v36);
    _s5Books15CurrentPageViewVwxx_0(&v39);
    return (_QWORD *)(v30 & 1);
  }
  v5 = *(_QWORD *)&v43[0];
  v6 = _swiftEmptyArrayStorage;
  v42 = _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(*(_QWORD *)&v43[0] + 16);
  if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    v31 = v6[2];
    swift_release(v6);
    v30 = v31 == 0;
    return (_QWORD *)(v30 & 1);
  }
  v8 = 0;
  v9 = *(_QWORD *)&v43[0] + 32;
  while (v8 < *(_QWORD *)(v5 + 16))
  {
    sub_10002E418(v9, (uint64_t)&v39);
    v10 = v40;
    v11 = v41;
    sub_10003F198(&v39, v40);
    v12 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v10, v11);
    v13 = static ContextActionAssetType.== infix(_:_:)(v12, 4);
    sub_10002E418((uint64_t)&v39, (uint64_t)v36);
    if ((v13 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(v36);
LABEL_10:
      sub_100022840(&v39, (uint64_t)v36);
      v18 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
      {
        sub_100366A6C(0, v18[2] + 1, 1);
        v18 = v42;
      }
      v20 = v18[2];
      v19 = v18[3];
      if (v20 >= v19 >> 1)
        sub_100366A6C(v19 > 1, v20 + 1, 1);
      v21 = v37;
      v22 = v38;
      v23 = sub_100063750((uint64_t)v36, v37);
      __chkstk_darwin(v23);
      v25 = (char *)&v36[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v25);
      sub_100208534(v20, (uint64_t)v25, (uint64_t *)&v42, v21, v22);
      result = (_QWORD *)_s5Books15CurrentPageViewVwxx_0(v36);
      goto LABEL_5;
    }
    v14 = v37;
    v15 = v38;
    sub_10003F198(v36, v37);
    v16 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v14, v15);
    v17 = static ContextActionAssetType.== infix(_:_:)(v16, 5);
    _s5Books15CurrentPageViewVwxx_0(v36);
    if ((v17 & 1) != 0)
      goto LABEL_10;
    result = (_QWORD *)_s5Books15CurrentPageViewVwxx_0(&v39);
LABEL_5:
    ++v8;
    v9 += 40;
    if (v7 == v8)
    {
      v6 = v42;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100207CE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[42] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[43] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[44] = v3;
  v1[45] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[46] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100207D7C, v5, v6);
}

uint64_t sub_100207D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSString v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;

  v1 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 368));
  sub_10002E418(v1 + 40, v0 + 96);
  v2 = sub_10004CFD4(&qword_1009D2848);
  v3 = sub_10004CFD4(&qword_1009D2850);
  if ((swift_dynamicCast(v0 + 56, v0 + 96, v2, v3, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_13:
    v20 = sub_1002084F4(v0 + 56);
    v21 = static Logger.contextActionItem.getter(v20);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Action doesn't have sufficient information to handle action.", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    v26 = *(_QWORD *)(v0 + 352);
    v25 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 344);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    goto LABEL_46;
  }
  v4 = *(_QWORD **)(v0 + 336);
  v80 = (_QWORD *)(v0 + 16);
  sub_100022840((__int128 *)(v0 + 56), v0 + 16);
  v5 = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 512);
  v6 = v4[3];
  v7 = v4[4];
  sub_10003F198(v4, v6);
  v8 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v6, v7);
  v9 = *(_QWORD *)(v8 + 16);
  v77 = v5;
  v78 = v4;
  if (v9)
  {
    v76 = v8;
    v10 = v8 + 32;
    v11 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002E418(v10, v0 + 136);
      v13 = *(_QWORD *)(v0 + 160);
      v14 = *(_QWORD *)(v0 + 168);
      sub_10003F198((_QWORD *)(v0 + 136), v13);
      v15 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v13, v14);
      v17 = v16;
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 136));
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100043ED0(0, v11[2] + 1, 1, v11);
        v19 = v11[2];
        v18 = v11[3];
        if (v19 >= v18 >> 1)
          v11 = sub_100043ED0((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
        v11[2] = v19 + 1;
        v12 = &v11[2 * v19];
        v12[4] = v15;
        v12[5] = v17;
      }
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v76);
    v4 = v78;
    v28 = v11[2];
    if (!v28)
      goto LABEL_22;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease(v8);
  v11 = _swiftEmptyArrayStorage;
  v28 = _swiftEmptyArrayStorage[2];
  if (v28)
  {
LABEL_19:
    swift_bridgeObjectRetain(v11);
    v29 = v11 + 5;
    do
    {
      v30 = *v29;
      swift_bridgeObjectRetain(*v29);
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "addObject:", v31);

      swift_bridgeObjectRelease(v30);
      v29 += 2;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease(v11);
  }
LABEL_22:
  v32 = *(_QWORD **)(v0 + 336);
  swift_bridgeObjectRelease(v11);
  sub_10003F198(v80, *(_QWORD *)(v0 + 40));
  v33 = v4[3];
  v34 = v4[4];
  sub_10003F198(v32, v33);
  v35 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v33, v34);
  v36 = v35;
  v37 = *(_QWORD *)(v35 + 16);
  if (v37)
  {
    sub_100045E44(0, v37, 0);
    v74 = v36;
    v38 = v36 + 32;
    do
    {
      sub_10002E418(v38, v0 + 176);
      v39 = *(_QWORD *)(v0 + 200);
      v40 = *(_QWORD *)(v0 + 208);
      sub_10003F198((_QWORD *)(v0 + 176), v39);
      v41 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v39, v40);
      v43 = v42;
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 176));
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_100045E44(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v45 = _swiftEmptyArrayStorage[2];
      v44 = _swiftEmptyArrayStorage[3];
      if (v45 >= v44 >> 1)
        sub_100045E44(v44 > 1, v45 + 1, 1);
      _swiftEmptyArrayStorage[2] = v45 + 1;
      v46 = &_swiftEmptyArrayStorage[2 * v45];
      v46[4] = v41;
      v46[5] = v43;
      v38 += 40;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease(v74);
    v4 = v78;
  }
  else
  {
    swift_bridgeObjectRelease(v35);
  }
  v47 = v4[3];
  v48 = v4[4];
  sub_10003F198(*(_QWORD **)(v0 + 336), v47);
  v49 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v47, v48);
  v50 = v49;
  v51 = *(_QWORD *)(v49 + 16);
  if (v51)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v51);
    v75 = v50;
    v52 = v50 + 32;
    do
    {
      sub_10002E418(v52, v0 + 216);
      v53 = *(_QWORD *)(v0 + 240);
      v54 = *(_QWORD *)(v0 + 248);
      sub_10003F198((_QWORD *)(v0 + 216), v53);
      v55 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", word_1007127F0[(char)dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v53, v54)]);
      v56 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 216));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v57 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v57);
      v58 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
      specialized ContiguousArray._endMutation()(v58);
      v52 += 40;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease(v75);
    v4 = v78;
  }
  else
  {
    swift_bridgeObjectRelease(v49);
  }
  v59 = v4[3];
  v60 = v4[4];
  sub_10003F198(*(_QWORD **)(v0 + 336), v59);
  v61 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v59, v60);
  v62 = *(_QWORD *)(v61 + 16);
  if (v62)
  {
    v79 = v61;
    v63 = v61 + 32;
    while (1)
    {
      sub_10002E418(v63, v0 + 256);
      v64 = *(_QWORD *)(v0 + 280);
      v65 = *(_QWORD *)(v0 + 288);
      sub_10003F198((_QWORD *)(v0 + 256), v64);
      v66 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v64, v65);
      v67 = static ContextActionAssetType.== infix(_:_:)(v66, 4);
      sub_10002E418(v0 + 256, v0 + 296);
      if ((v67 & 1) != 0)
        break;
      v68 = *(_QWORD *)(v0 + 320);
      v69 = *(_QWORD *)(v0 + 328);
      sub_10003F198((_QWORD *)(v0 + 296), v68);
      v70 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v68, v69);
      v71 = static ContextActionAssetType.== infix(_:_:)(v70, 5);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 296));
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 256));
      if ((v71 & 1) != 0)
        goto LABEL_44;
      v63 += 40;
      if (!--v62)
      {
        v61 = v79;
        goto LABEL_42;
      }
    }
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 296));
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 256));
LABEL_44:
    swift_bridgeObjectRelease(v79);
    v72 = 1;
  }
  else
  {
LABEL_42:
    swift_bridgeObjectRelease(v61);
    v72 = 0;
  }
  sub_10044D6D4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v77, v72);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

  _s5Books15CurrentPageViewVwxx_0(v80);
LABEL_46:
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208420()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D2844);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100207CE8();
}

uint64_t sub_100208464@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_100022840(a1, a6);
  sub_100022840(a2, a6 + 40);
  *(_QWORD *)(a6 + 80) = a3;
  sub_100022840(a4, a6 + 88);
  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.addToCollection(_:);
  v13 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
}

uint64_t sub_1002084F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(qword_1009D2858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100208534(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_1000257F8(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_100022840(&v12, v10 + 40 * a1 + 32);
}

_QWORD *sub_1002085AC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return v0;
}

uint64_t sub_1002085D8()
{
  uint64_t v0;

  sub_1002085AC();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1002085F8(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  _BOOL4 v6;
  _BYTE v7[24];

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (result)
  {
    v4 = result;
    v5 = (_QWORD *)(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v7, 0, 0);
    v6 = (char *)objc_msgSend(*(id *)(*sub_10003F198(v5, v5[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state")- 4 < (char *)0xFFFFFFFFFFFFFFFELL;
    sub_1002A4B2C(a1 & 1, v6, 0);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_1002086A4(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v4 = Strong;
    v7 = (id)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
    if (v7)
    {
      v5 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v4
                                                               + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 24);
      if (v5)
      {
        v6 = (uint64_t)v5;
        objc_msgSend(v5, "assetViewController:requestClose:error:", v7, a1 & 1, 0);
        swift_unknownObjectRelease(v4);
        v4 = v6;
      }
      swift_unknownObjectRelease(v4);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100208774()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;
  _BYTE v4[24];

  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (result)
  {
    v2 = result;
    v3 = (_QWORD *)(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v4, 0, 0);
    objc_msgSend(*(id *)(*sub_10003F198(v3, v3[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "removeObserver:");
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

id sub_100208864()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingNavigationHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookNowPlayingNavigationHandler()
{
  return objc_opt_self(_TtC5Books36AudiobookNowPlayingNavigationHandler);
}

uint64_t sub_1002088EC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D2920);
  sub_100048F64(v0, (uint64_t)qword_1009D2920);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000013, 0x80000001007B73A0);
}

void sub_100208968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for BookContentSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10004CFD4(&qword_1009D2B18);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
  swift_beginAccess(v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000B5E4(a1, (uint64_t)v13, &qword_1009D2B10);
  sub_10000B5E4(v14, v15, &qword_1009D2B10);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_100010960((uint64_t)v13, &qword_1009D2B10);
      return;
    }
  }
  else
  {
    sub_10000B5E4((uint64_t)v13, (uint64_t)v10, &qword_1009D2B10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_100211358();
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_100010960((uint64_t)v13, &qword_1009D2B10);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100010960((uint64_t)v13, &qword_1009D2B18);
LABEL_8:
  sub_100208BA8();
}

void sub_100208BA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  _BYTE v70[288];
  uint64_t v71;
  _QWORD v72[37];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - v6;
  v8 = type metadata accessor for BookContentSelection(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 8);
  if (Strong)
  {
    v13 = Strong;
    v14 = v1[9];
    v15 = (uint64_t)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
    swift_beginAccess((char *)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, &v71, 0, 0);
    v68 = v15;
    sub_10000B5E4(v15, (uint64_t)v7, &qword_1009D2B10);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    v69 = v14;
    if (v16 == 1)
    {
      sub_100010960((uint64_t)v7, &qword_1009D2B10);
    }
    else
    {
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v22 = BookContentSelection.selectionText.getter(v21);
      v24 = v23;
      v72[0] = v22;
      v72[1] = v23;
      v25 = sub_1001F15BC();
      v26 = Collection.isNotEmpty.getter(&type metadata for String, v25);
      v27 = swift_bridgeObjectRelease(v24);
      if ((v26 & 1) != 0)
      {
        v28 = BookContentSelection.containingHighlightID.getter(v27);
        if (v29
          && (v30 = v28,
              v31 = v29,
              swift_getObjectType(),
              v32 = dispatch thunk of AnnotationProviding.highlightAnnotationDetail(for:)(v30, v31),
              swift_bridgeObjectRelease(v31),
              v32))
        {
          v33 = v1[6];
          v67 = v1[7];
          ObjectType = swift_getObjectType();
          v34 = sub_10004CFD4((uint64_t *)&unk_1009D2B30);
          v35 = swift_allocObject(v34, 80, 7);
          *(_OWORD *)(v35 + 16) = xmmword_10070CCA0;
          v36 = swift_retain(v32);
          v66 = v32;
          v37 = dispatch thunk of AnnotationEntity.location.getter(v36);
          v64 = v38;
          v39 = swift_release(v66);
          v40 = v64;
          *(_QWORD *)(v35 + 32) = v37;
          *(_QWORD *)(v35 + 40) = v40;
          *(_QWORD *)(v35 + 48) = dispatch thunk of HighlightAnnotationDetailEntity.selectedText.getter(v39);
          *(_QWORD *)(v35 + 56) = v41;
          *(_QWORD *)(v35 + 64) = dispatch thunk of HighlightAnnotationDetailEntity.noteText.getter();
          *(_QWORD *)(v35 + 72) = v42;
          dispatch thunk of AssetActivityItemProviding.update(annotations:)(v35, ObjectType, v67);
          swift_release(v66);
        }
        else
        {
          v33 = v1[6];
          v67 = v1[7];
          v66 = swift_getObjectType();
          v64 = BookContentSelection.selectionText.getter(v66);
          ObjectType = (uint64_t)v4;
          v46 = v45;
          v48 = BookContentSelection.selectionCFI.getter(v47);
          v35 = v49;
          dispatch thunk of AssetActivityItemProviding.update(text:cfi:)(v64, v46, v48, v49, v66, v67);
          v50 = v46;
          v4 = (char *)ObjectType;
          swift_bridgeObjectRelease(v50);
        }
        v51 = swift_bridgeObjectRelease(v35);
        (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v51);
        v43 = v67;
LABEL_17:
        if (qword_1009CDC78 != -1)
          swift_once(&qword_1009CDC78, sub_1002088EC);
        v52 = type metadata accessor for Logger(0);
        v53 = sub_100048F64(v52, (uint64_t)qword_1009D2920);
        v54 = Logger.logObject.getter(v53);
        v58 = static os_log_type_t.debug.getter(v54, v55, v56, v57);
        if (os_log_type_enabled(v54, v58))
        {
          v59 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, v58, "Creating state", v59, 2u);
          swift_slowDealloc(v59, -1, -1);
        }

        v60 = swift_getObjectType();
        v61 = swift_getObjectType();
        sub_10000B5E4(v68, (uint64_t)v4, &qword_1009D2B10);
        v62 = (void *)v1[5];
        swift_unknownObjectRetain(v33);
        v63 = v62;
        sub_1002107F4((uint64_t)v4, v63, v33, v13, v60, v61, v43, (uint64_t)v69, (uint64_t)v72);

        swift_unknownObjectRelease(v33);
        memcpy(v70, (char *)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state, sizeof(v70));
        memcpy((char *)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state, v72, 0x120uLL);
        sub_1002113A0((uint64_t)v70);
        return;
      }
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v27);
    }
    v33 = v1[6];
    v43 = v1[7];
    v44 = swift_getObjectType();
    dispatch thunk of AssetActivityItemProviding.clear()(v44, v43);
    goto LABEL_17;
  }
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100048F64(v17, (uint64_t)qword_1009D2920);
  v69 = Logger.logObject.getter(v18);
  v19 = static os_log_type_t.error.getter(v69);
  if (os_log_type_enabled(v69, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v69, v19, "Missing annotation provider service!", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

}

double sub_1002090E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v15[-v7 - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    v12 = type metadata accessor for BookContentSelection(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    v13 = v11 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
    swift_beginAccess(v11 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, v16, 0, 0);
    sub_10000B5E4(v13, (uint64_t)v5, &qword_1009D2B10);
    swift_beginAccess(v13, v15, 33, 0);
    sub_100211310((uint64_t)v8, v13);
    swift_endAccess(v15);
    sub_100208968((uint64_t)v5);
    sub_100010960((uint64_t)v8, &qword_1009D2B10);
    sub_100010960((uint64_t)v5, &qword_1009D2B10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_100209240()
{
  uint64_t v0;
  _BYTE v2[288];

  sub_1001FE9A0(v0 + 16);
  swift_weakDestroy(v0 + 32);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  sub_1001FE9A0(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 80));
  sub_100010960(v0 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, &qword_1009D2B10);
  memcpy(v2, (const void *)(v0 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state), sizeof(v2));
  sub_1002113A0((uint64_t)v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002092DC()
{
  return _s26ContentSelectionInteractorCMa(0);
}

uint64_t _s26ContentSelectionInteractorCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D2970;
  if (!qword_1009D2970)
    return swift_getSingletonMetadata(a1, &_s26ContentSelectionInteractorCMn);
  return result;
}

void sub_100209320(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100712900;
  v4[1] = &unk_100712918;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_100712930;
  v4[4] = &unk_100712900;
  v4[5] = &unk_100712948;
  sub_1002093CC(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = &unk_100712960;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_1002093CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D2980)
  {
    v2 = type metadata accessor for BookContentSelection(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D2980);
  }
}

uint64_t sub_100209420(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t _s26ContentSelectionInteractorC5StateVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
    v3 = *(_QWORD *)(a1 + 48);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
  }
  v4 = *(_QWORD *)(a1 + 112);
  if (v4)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
    v5 = *(_QWORD *)(a1 + 96);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
  }
  if (*(_QWORD *)(a1 + 152))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 136));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 144));
    swift_release(*(_QWORD *)(a1 + 160));
  }
  v6 = *(_QWORD *)(a1 + 192);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 176);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 208));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 224));
    if (*(unsigned __int8 *)(a1 + 256) != 255)
      sub_100209510(*(_QWORD *)(a1 + 240), *(_QWORD *)(a1 + 248));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 264));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 280));
}

uint64_t sub_100209510(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t _s26ContentSelectionInteractorC5StateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    v9 = *(_QWORD *)(a2 + 48);
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v6;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v6);
    v10 = *(_QWORD *)(a2 + 112);
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v23;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    v10 = *(_QWORD *)(a2 + 112);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v11;
      v13 = *(_QWORD *)(a2 + 96);
      v12 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v13;
      *(_QWORD *)(a1 + 104) = v12;
      *(_QWORD *)(a1 + 112) = v10;
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v10);
      v14 = *(_QWORD *)(a2 + 152);
      if (v14)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v24 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  v14 = *(_QWORD *)(a2 + 152);
  if (v14)
  {
LABEL_4:
    v15 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v15;
    v16 = *(_QWORD *)(a2 + 144);
    v17 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 144) = v16;
    *(_QWORD *)(a1 + 152) = v14;
    *(_QWORD *)(a1 + 160) = v17;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    swift_retain(v17);
    v18 = *(_QWORD *)(a2 + 192);
    if (v18)
      goto LABEL_5;
LABEL_10:
    v26 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v26;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    v27 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v27;
    goto LABEL_12;
  }
LABEL_9:
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v18 = *(_QWORD *)(a2 + 192);
  if (!v18)
    goto LABEL_10;
LABEL_5:
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v19;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v18;
  v20 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v20;
  v21 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v21;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v22 = *(unsigned __int8 *)(a2 + 256);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  if (v22 == 255)
  {
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  }
  else
  {
    v28 = *(_QWORD *)(a2 + 240);
    v29 = *(_QWORD *)(a2 + 248);
    sub_100209420(v28, v29);
    *(_QWORD *)(a1 + 240) = v28;
    *(_QWORD *)(a1 + 248) = v29;
    *(_BYTE *)(a1 + 256) = v22 & 1;
  }
LABEL_12:
  v30 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v30;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v31 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 280) = v31;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v31);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD *v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  __int128 *v68;
  _BYTE *v69;
  int v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (_OWORD *)(a1 + 32);
  v9 = (_OWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v11 = *(_QWORD *)(a2 + 40);
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v11;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(v12);
      v13 = *(_QWORD *)(a1 + 48);
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v13);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v15 = *(_QWORD *)(a2 + 64);
      v16 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 64) = v15;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease(v16);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    }
    else
    {
      sub_100209D0C((_QWORD *)(a1 + 32));
      v20 = *(_OWORD *)(a2 + 57);
      v21 = *(_OWORD *)(a2 + 48);
      *v8 = *v9;
      *(_OWORD *)(a1 + 48) = v21;
      *(_OWORD *)(a1 + 57) = v20;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v17 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v17;
    v18 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v18;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 64) = v19;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v22 = *v9;
    v23 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *v8 = v22;
    *(_OWORD *)(a1 + 48) = v23;
  }
  v24 = (_OWORD *)(a1 + 80);
  v25 = (_OWORD *)(a2 + 80);
  v26 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v26)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v27 = *(_QWORD *)(a2 + 88);
      v28 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v28);
      v29 = *(_QWORD *)(a1 + 96);
      v30 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 96) = v30;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRelease(v29);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v31 = *(_QWORD *)(a2 + 112);
      v32 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 112) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v32);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    }
    else
    {
      sub_100209D38((_QWORD *)(a1 + 80));
      v36 = *(_OWORD *)(a2 + 105);
      v37 = *(_OWORD *)(a2 + 96);
      *v24 = *v25;
      *(_OWORD *)(a1 + 96) = v37;
      *(_OWORD *)(a1 + 105) = v36;
    }
  }
  else if (v26)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v33 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v33;
    v34 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 96) = v34;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v35 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 112) = v35;
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
  }
  else
  {
    v38 = *v25;
    v39 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    *v24 = v38;
    *(_OWORD *)(a1 + 96) = v39;
  }
  v40 = (_OWORD *)(a1 + 128);
  v41 = (_OWORD *)(a2 + 128);
  v42 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v42)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v43 = *(_QWORD *)(a2 + 136);
      v44 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = v43;
      swift_bridgeObjectRetain(v43);
      swift_bridgeObjectRelease(v44);
      v45 = *(_QWORD *)(a1 + 144);
      v46 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 144) = v46;
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRelease(v45);
      v47 = *(_QWORD *)(a2 + 160);
      v48 = *(_QWORD *)(a1 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v47;
      swift_retain(v47);
      swift_release(v48);
    }
    else
    {
      sub_100209D64((_QWORD *)(a1 + 128));
      v52 = *(_QWORD *)(a2 + 160);
      v53 = *(_OWORD *)(a2 + 144);
      *v40 = *v41;
      *(_OWORD *)(a1 + 144) = v53;
      *(_QWORD *)(a1 + 160) = v52;
    }
  }
  else if (v42)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v49 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v49;
    v50 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 144) = v50;
    v51 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v51;
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v50);
    swift_retain(v51);
  }
  else
  {
    v54 = *v41;
    v55 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *v40 = v54;
    *(_OWORD *)(a1 + 144) = v55;
  }
  v56 = (_OWORD *)(a1 + 168);
  v57 = (_OWORD *)(a2 + 168);
  v58 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192))
  {
    if (v58)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      v59 = *(_QWORD *)(a2 + 176);
      v60 = *(_QWORD *)(a1 + 176);
      *(_QWORD *)(a1 + 176) = v59;
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRelease(v60);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      v61 = *(_QWORD *)(a2 + 192);
      v62 = *(_QWORD *)(a1 + 192);
      *(_QWORD *)(a1 + 192) = v61;
      swift_bridgeObjectRetain(v61);
      swift_bridgeObjectRelease(v62);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v63 = *(_QWORD *)(a2 + 208);
      v64 = *(_QWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 208) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease(v64);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v65 = *(_QWORD *)(a2 + 224);
      v66 = *(_QWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 224) = v65;
      swift_bridgeObjectRetain(v65);
      swift_bridgeObjectRelease(v66);
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      v67 = (__int128 *)(a1 + 240);
      v68 = (__int128 *)(a2 + 240);
      v69 = (_BYTE *)(a1 + 256);
      v70 = *(unsigned __int8 *)(a2 + 256);
      if (*(unsigned __int8 *)(a1 + 256) == 255)
      {
        if (v70 == 255)
        {
          v82 = *v68;
          *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
          *v67 = v82;
        }
        else
        {
          v94 = v70 & 1;
          v95 = *(_QWORD *)(a2 + 240);
          v96 = *(_QWORD *)(a2 + 248);
          sub_100209420(v95, v96);
          *(_QWORD *)(a1 + 240) = v95;
          *(_QWORD *)(a1 + 248) = v96;
          *v69 = v94;
        }
      }
      else if (v70 == 255)
      {
        sub_100209D90((uint64_t *)(a1 + 240));
        v71 = *(_BYTE *)(a2 + 256);
        *v67 = *v68;
        *(_BYTE *)(a1 + 256) = v71;
      }
      else
      {
        v87 = v70 & 1;
        v88 = *(_QWORD *)(a2 + 240);
        v89 = *(_QWORD *)(a2 + 248);
        sub_100209420(v88, v89);
        v90 = *(_QWORD *)(a1 + 240);
        v91 = *(_QWORD *)(a1 + 248);
        *(_QWORD *)(a1 + 240) = v88;
        *(_QWORD *)(a1 + 248) = v89;
        *v69 = v87;
        sub_100209510(v90, v91);
      }
    }
    else
    {
      sub_100209DC0(a1 + 168);
      v78 = *(_OWORD *)(a2 + 184);
      *v56 = *v57;
      *(_OWORD *)(a1 + 184) = v78;
      v80 = *(_OWORD *)(a2 + 216);
      v79 = *(_OWORD *)(a2 + 232);
      v81 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
      *(_OWORD *)(a1 + 216) = v80;
      *(_OWORD *)(a1 + 232) = v79;
      *(_OWORD *)(a1 + 200) = v81;
    }
  }
  else if (v58)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    v72 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 176) = v72;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v73 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 192) = v73;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v74 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 208) = v74;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v75 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v75;
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    v76 = *(unsigned __int8 *)(a2 + 256);
    swift_bridgeObjectRetain(v72);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v74);
    swift_bridgeObjectRetain(v75);
    if (v76 == 255)
    {
      v77 = *(_OWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = v77;
    }
    else
    {
      v92 = *(_QWORD *)(a2 + 240);
      v93 = *(_QWORD *)(a2 + 248);
      sub_100209420(v92, v93);
      *(_QWORD *)(a1 + 240) = v92;
      *(_QWORD *)(a1 + 248) = v93;
      *(_BYTE *)(a1 + 256) = v76 & 1;
    }
  }
  else
  {
    v83 = *(_OWORD *)(a2 + 184);
    *v56 = *v57;
    *(_OWORD *)(a1 + 184) = v83;
    v84 = *(_OWORD *)(a2 + 200);
    v85 = *(_OWORD *)(a2 + 216);
    v86 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    *(_OWORD *)(a1 + 216) = v85;
    *(_OWORD *)(a1 + 232) = v86;
    *(_OWORD *)(a1 + 200) = v84;
  }
  v97 = *(_QWORD *)(a2 + 264);
  v98 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v97;
  swift_bridgeObjectRetain(v97);
  swift_bridgeObjectRelease(v98);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v99 = *(_QWORD *)(a1 + 280);
  v100 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 280) = v100;
  swift_bridgeObjectRetain(v100);
  swift_bridgeObjectRelease(v99);
  return a1;
}

_QWORD *sub_100209D0C(_QWORD *a1)
{
  _s26ContentSelectionInteractorC5StateV6LookupVwxx(a1, (uint64_t)&_s26ContentSelectionInteractorC5StateV6LookupVN);
  return a1;
}

_QWORD *sub_100209D38(_QWORD *a1)
{
  _s26ContentSelectionInteractorC5StateV6LookupVwxx(a1, (uint64_t)&_s26ContentSelectionInteractorC5StateV9TranslateVN);
  return a1;
}

_QWORD *sub_100209D64(_QWORD *a1)
{
  _s26ContentSelectionInteractorC5StateV5ShareVwxx(a1, (uint64_t)&_s26ContentSelectionInteractorC5StateV5ShareVN);
  return a1;
}

uint64_t *sub_100209D90(uint64_t *a1)
{
  sub_100209510(*a1, a1[1]);
  return a1;
}

uint64_t sub_100209DC0(uint64_t a1)
{
  _s26ContentSelectionInteractorC5StateV12AddHighlightVwxx(a1);
  return a1;
}

void *_s26ContentSelectionInteractorC5StateVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t _s26ContentSelectionInteractorC5StateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  int v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_QWORD *)(a2 + 64))
    {
      v8 = *(_QWORD *)(a2 + 40);
      v9 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v8;
      swift_bridgeObjectRelease(v9);
      v10 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRelease(v10);
      v11 = *(_QWORD *)(a2 + 64);
      v12 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v11;
      swift_bridgeObjectRelease(v12);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      goto LABEL_6;
    }
    sub_100209D0C((_QWORD *)(a1 + 32));
  }
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
LABEL_6:
  if (*(_QWORD *)(a1 + 112))
  {
    if (*(_QWORD *)(a2 + 112))
    {
      v14 = *(_QWORD *)(a2 + 88);
      v15 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v14;
      swift_bridgeObjectRelease(v15);
      v16 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease(v16);
      v17 = *(_QWORD *)(a2 + 112);
      v18 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v17;
      swift_bridgeObjectRelease(v18);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      goto LABEL_11;
    }
    sub_100209D38((_QWORD *)(a1 + 80));
  }
  v19 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
LABEL_11:
  if (*(_QWORD *)(a1 + 152))
  {
    if (*(_QWORD *)(a2 + 152))
    {
      v20 = *(_QWORD *)(a2 + 136);
      v21 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v20;
      swift_bridgeObjectRelease(v21);
      v22 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRelease(v22);
      v23 = *(_QWORD *)(a1 + 160);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      swift_release(v23);
      goto LABEL_16;
    }
    sub_100209D64((_QWORD *)(a1 + 128));
  }
  v24 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v24;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_16:
  if (!*(_QWORD *)(a1 + 192))
  {
LABEL_23:
    v35 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v35;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    v36 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v36;
    goto LABEL_24;
  }
  if (!*(_QWORD *)(a2 + 192))
  {
    sub_100209DC0(a1 + 168);
    goto LABEL_23;
  }
  v25 = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v25;
  swift_bridgeObjectRelease(v26);
  v27 = *(_QWORD *)(a2 + 192);
  v28 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v27;
  swift_bridgeObjectRelease(v28);
  v29 = *(_QWORD *)(a2 + 208);
  v30 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v29;
  swift_bridgeObjectRelease(v30);
  v31 = *(_QWORD *)(a2 + 224);
  v32 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v31;
  swift_bridgeObjectRelease(v32);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v33 = (_OWORD *)(a2 + 240);
  if (*(unsigned __int8 *)(a1 + 256) != 255)
  {
    v34 = *(unsigned __int8 *)(a2 + 256);
    if (v34 != 255)
    {
      v40 = *(_QWORD *)(a1 + 240);
      v41 = *(_QWORD *)(a1 + 248);
      *(_OWORD *)(a1 + 240) = *v33;
      *(_BYTE *)(a1 + 256) = v34 & 1;
      sub_100209510(v40, v41);
      goto LABEL_24;
    }
    sub_100209D90((uint64_t *)(a1 + 240));
  }
  *(_OWORD *)(a1 + 240) = *v33;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
LABEL_24:
  v37 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease(v37);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v38 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease(v38);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 288))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 288) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateVMa()
{
  return &_s26ContentSelectionInteractorC5StateVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  if (*(unsigned __int8 *)(a1 + 88) != 255)
    return sub_100209510(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(unsigned __int8 *)(a2 + 88);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 72);
    v9 = *(_QWORD *)(a2 + 80);
    sub_100209420(v10, v9);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 88) = v8 & 1;
  }
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 *v13;
  int v14;
  char v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = (__int128 *)(a1 + 72);
  v13 = (__int128 *)(a2 + 72);
  v14 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v14 == 255)
    {
      v16 = *v13;
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *v12 = v16;
    }
    else
    {
      v22 = v14 & 1;
      v24 = *(_QWORD *)(a2 + 72);
      v23 = *(_QWORD *)(a2 + 80);
      sub_100209420(v24, v23);
      *(_QWORD *)(a1 + 72) = v24;
      *(_QWORD *)(a1 + 80) = v23;
      *(_BYTE *)(a1 + 88) = v22;
    }
  }
  else if (v14 == 255)
  {
    sub_100209D90((uint64_t *)(a1 + 72));
    v15 = *(_BYTE *)(a2 + 88);
    *v12 = *v13;
    *(_BYTE *)(a1 + 88) = v15;
  }
  else
  {
    v17 = v14 & 1;
    v19 = *(_QWORD *)(a2 + 72);
    v18 = *(_QWORD *)(a2 + 80);
    sub_100209420(v19, v18);
    v20 = *(_QWORD *)(a1 + 72);
    v21 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v18;
    *(_BYTE *)(a1 + 88) = v17;
    sub_100209510(v20, v21);
  }
  return a1;
}

__n128 _s26ContentSelectionInteractorC5StateV12AddHighlightVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = (_OWORD *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 88) != 255)
  {
    v13 = *(unsigned __int8 *)(a2 + 88);
    if (v13 != 255)
    {
      v14 = *(_QWORD *)(a1 + 72);
      v15 = *(_QWORD *)(a1 + 80);
      *(_OWORD *)(a1 + 72) = *v12;
      *(_BYTE *)(a1 + 88) = v13 & 1;
      sub_100209510(v14, v15);
      return a1;
    }
    sub_100209D90((uint64_t *)(a1 + 72));
  }
  *(_OWORD *)(a1 + 72) = *v12;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV12AddHighlightVMa()
{
  return &_s26ContentSelectionInteractorC5StateV12AddHighlightVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwxx(uint64_t *a1)
{
  return sub_100209510(*a1, a1[1]);
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100209420(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100209420(*(_QWORD *)a2, v4);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_100209510(v6, v7);
  return a1;
}

__n128 _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_100209510(v4, v5);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10020A748(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_10020A750(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOMa()
{
  return &_s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionON;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwxx(_QWORD *a1, uint64_t a2)
{
  return sub_10020A99C(a1, a2, (uint64_t (*)(_QWORD))&_swift_release);
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s26ContentSelectionInteractorC5StateV5ShareVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  v9 = a2[3];
  v8 = a2[4];
  v10 = a1[4];
  a1[3] = v9;
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 initializeWithTake for BooksAssetAppIntentsPerformer(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV5ShareVMa()
{
  return &_s26ContentSelectionInteractorC5StateV5ShareVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwxx(_QWORD *a1, uint64_t a2)
{
  return sub_10020A99C(a1, a2, (uint64_t (*)(_QWORD))&_swift_bridgeObjectRelease);
}

__n128 _s26ContentSelectionInteractorC5StateV6LookupVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV9TranslateVMa()
{
  return &_s26ContentSelectionInteractorC5StateV9TranslateVN;
}

uint64_t sub_10020A99C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return a3(a1[4]);
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10020AB68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV6LookupVMa()
{
  return &_s26ContentSelectionInteractorC5StateV6LookupVN;
}

uint64_t sub_10020ABC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1[10] = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v1[12] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[13] = v4;
  v1[14] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D2AC8);
  v1[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D2AD0);
  v1[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[17] = v7;
  v1[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D2B10);
  v1[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v1[20] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v1[21] = v10;
  v1[22] = v11;
  return swift_task_switch(sub_10020ACF4, v10, v11);
}

uint64_t sub_10020ACF4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 80) + 32);
  *(_QWORD *)(v0 + 184) = Strong;
  if (!Strong)
  {
    v8 = *(_QWORD *)(v0 + 160);
LABEL_8:
    swift_release(v8);
    goto LABEL_9;
  }
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 152);
  BookContentModule.selection.getter();
  v4 = type metadata accessor for BookContentSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v10 = BookContentSelection.selectionCFI.getter(v6);
    v12 = v11;
    *(_QWORD *)(v0 + 192) = v11;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
    if (v12)
    {
      v13 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.rects(forCFI:clippedToBounds:)[1]);
      *(_QWORD *)(v0 + 200) = v13;
      *v13 = v0;
      v13[1] = sub_10020AE6C;
      return BookContentModule.rects(forCFI:clippedToBounds:)(v10, v12, 1);
    }
    swift_release(*(_QWORD *)(v0 + 160));
    v8 = v2;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(v2);
  sub_100010960(v7, &qword_1009D2B10);
LABEL_9:
  v15 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(double, double))(v0 + 8))(0.0, 0.0);
}

uint64_t sub_10020AE6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 192);
  v3 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 208) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10020AECC, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_10020AECC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = swift_release(*(_QWORD *)(v0 + 160));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 208);
    if (*(_QWORD *)(v3 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 136) + 16))(*(_QWORD *)(v0 + 120), v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 136) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 136) + 80)), *(_QWORD *)(v0 + 128), v2);
      v4 = 0;
    }
    else
    {
      v4 = 1;
    }
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
    v8 = swift_bridgeObjectRelease(v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v7, 1, v5, v8) == 1)
    {
      v9 = *(_QWORD *)(v0 + 120);
      swift_release(*(_QWORD *)(v0 + 184));
      v10 = &qword_1009D2AC8;
      v11 = v9;
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 144);
      v13 = *(_QWORD *)(v0 + 96);
      v14 = *(_QWORD *)(v0 + 104);
      v15 = *(_QWORD *)(v0 + 88);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(v12, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
      BookContentModule.convertToUI(_:)(v12);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
      v17 = *(_QWORD *)(v0 + 184);
      v19 = *(_QWORD *)(v0 + 136);
      v18 = *(_QWORD *)(v0 + 144);
      v20 = *(_QWORD *)(v0 + 128);
      if (v16 != 1)
      {
        v30 = *(_QWORD *)(v0 + 104);
        v29 = *(_QWORD *)(v0 + 112);
        v31 = *(_QWORD *)(v0 + 96);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 32))(v29, *(_QWORD *)(v0 + 88), v31);
        RelativeValue.value.getter((_QWORD *)(v0 + 16), v31);
        v22 = *(double *)(v0 + 16);
        RelativeValue.value.getter((_QWORD *)(v0 + 48), v31);
        v32 = swift_release(v17);
        (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v29, v31, v32);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
        v23 = *(double *)(v0 + 56);
        goto LABEL_12;
      }
      v21 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD))(v19 + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
      swift_release(v17);
      v10 = (uint64_t *)&unk_1009D2AA0;
      v11 = v21;
    }
    sub_100010960(v11, v10);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
  }
  v22 = 0.0;
  v23 = 0.0;
LABEL_12:
  v24 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 112);
  v25 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(double, double))(v0 + 8))(v22, v23);
}

void sub_10020B0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  id v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[16];
  _QWORD v22[2];

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100210BF4(v19);
  sub_100025B3C((uint64_t)&v20, (uint64_t)v21, &qword_1009E4CE0);
  sub_100025B3C((uint64_t)v21, (uint64_t)v22, &qword_1009E4CE0);
  if (v22[1])
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (Strong)
    {
      v6 = Strong;
      v7 = (void *)objc_opt_self(UIPasteboard);
      sub_100210D60((uint64_t)v21);
      v8 = objc_msgSend(v7, "generalPasteboard");
      v9 = String._bridgeToObjectiveC()();
      v10 = static UTType.utf8PlainText.getter();
      UTType.identifier.getter(v10);
      v12 = v11;
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setValue:forPasteboardType:", v9, v13, swift_bridgeObjectRelease(v12).n128_f64[0]);
      swift_unknownObjectRelease(v6);

      sub_100210D88((uint64_t)v21);
    }
  }
  else
  {
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048F64(v14, (uint64_t)qword_1009D2920);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to perform copy. Missing state", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
}

uint64_t sub_10020B330()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[68] = v0;
  v2 = type metadata accessor for SelectionInfo.PresentationLifecycle(0);
  v1[69] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[70] = v3;
  v1[71] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v1[72] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v1[73] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[74] = swift_task_alloc(v6);
  v1[75] = swift_task_alloc(v6);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v1[76] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v1[77] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[78] = v9;
  v1[79] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v1[80] = v10;
  v1[81] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v1[82] = v11;
  v1[83] = v12;
  return swift_task_switch(sub_10020B458, v11, v12);
}

uint64_t sub_10020B458()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 48, v0 + 304, &qword_1009D2AB0);
  sub_100025B3C(v0 + 304, v0 + 352, &qword_1009D2AB0);
  if (*(_QWORD *)(v0 + 384))
  {
    v1 = *(_QWORD *)(v0 + 544);
    v2 = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 416) = v2;
    *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 377);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    *(_QWORD *)(v0 + 672) = Strong;
    if (Strong)
    {
      v4 = Strong;
      v5 = swift_weakLoadStrong(*(_QWORD *)(v0 + 544) + 32);
      *(_QWORD *)(v0 + 680) = v5;
      if (v5)
      {
        v6 = *(_QWORD *)(v0 + 408);
        v7 = *(_QWORD *)(v0 + 416);
        *(_QWORD *)(v0 + 688) = v7;
        v8 = *(_QWORD *)(v0 + 400);
        *(_QWORD *)(v0 + 696) = v8;
        *(_QWORD *)(v0 + 704) = v6;
        sub_1002110D8((uint64_t *)(v0 + 304));
        v9 = (_QWORD *)swift_task_alloc(dword_1009D2AC4);
        *(_QWORD *)(v0 + 712) = v9;
        *v9 = v0;
        v9[1] = sub_10020B75C;
        return sub_10020BC94(*(_QWORD *)(v0 + 608), v7, v8, v6);
      }
      v13 = *(_QWORD *)(v0 + 648);
      sub_1002110D8((uint64_t *)(v0 + 304));
      swift_release(v13);
      swift_unknownObjectRelease(v4);
      sub_100025B3C(v0 + 400, v0 + 464, &qword_1009D2A80);
      sub_100210D88(v0 + 464);
      sub_100025B3C(v0 + 416, v0 + 528, &qword_1009D2AB8);
      sub_1001FC120((_QWORD *)(v0 + 528));
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 424);
      v12 = v0 + 496;
    }
    else
    {
      v11 = *(_QWORD *)(v0 + 648);
      sub_1002110D8((uint64_t *)(v0 + 304));
      swift_release(v11);
      sub_100025B3C(v0 + 400, v0 + 512, &qword_1009D2A80);
      sub_100210D88(v0 + 512);
      sub_100025B3C(v0 + 416, v0 + 536, &qword_1009D2AB8);
      sub_1001FC120((_QWORD *)(v0 + 536));
      *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 424);
      v12 = v0 + 448;
    }
    sub_100210D88(v12);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 648));
  }
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100048F64(v14, (uint64_t)qword_1009D2920);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to perform lookup. Missing state, router, and/or source rect", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = *(_QWORD *)(v0 + 608);
  v20 = *(_QWORD *)(v0 + 600);
  v21 = *(_QWORD *)(v0 + 592);
  v22 = *(_QWORD *)(v0 + 568);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020B75C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 712));
  return swift_task_switch(sub_10020B7AC, *(_QWORD *)(v1 + 656), *(_QWORD *)(v1 + 664));
}

uint64_t sub_10020B7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 608);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 704);
    v5 = *(_QWORD *)(v0 + 688);
    v6 = *(_QWORD *)(v0 + 672);
    v7 = *(_QWORD *)(v0 + 648);
    swift_release(*(_QWORD *)(v0 + 680));
    swift_release(v7);
    swift_unknownObjectRelease(v6);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
    *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 424);
    sub_100210D88(v0 + 480);
    sub_100010960(v3, (uint64_t *)&unk_1009D2AA0);
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100048F64(v8, (uint64_t)qword_1009D2920);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unable to perform lookup. Missing state, router, and/or source rect", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = *(_QWORD *)(v0 + 608);
    v14 = *(_QWORD *)(v0 + 600);
    v15 = *(_QWORD *)(v0 + 592);
    v16 = *(_QWORD *)(v0 + 568);
    swift_task_dealloc(*(_QWORD *)(v0 + 632));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 640);
    v19 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v0 + 632), v3, v2);
    *(_BYTE *)(v0 + 345) = *(_BYTE *)(v0 + 440);
    *(_QWORD *)(v0 + 720) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10020B9C0, v20, v21);
  }
}

uint64_t sub_10020B9C0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 704);
  swift_release(*(_QWORD *)(v0 + 720));
  v2 = *(_BYTE *)(v0 + 345) != 1 || v1 == 0;
  if (v2 || (Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 544) + 32)) == 0)
  {
    v5 = *(_QWORD *)(v0 + 704);
    v11 = *(_QWORD *)(v0 + 600);
    v12 = type metadata accessor for SelectionInfo.ID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v0 + 704);
    v6 = *(_QWORD *)(v0 + 696);
    v7 = *(_QWORD *)(v0 + 568);
    v8 = *(_QWORD *)(v0 + 560);
    v9 = *(_QWORD *)(v0 + 552);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, enum case for SelectionInfo.PresentationLifecycle.removeAfterDisplay(_:), v9);
    BookContentModule.addSelectionInfo(cfi:lifecycle:)(v6, v5, v7);
    v10 = swift_release(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v7, v9, v10);
  }
  *(_QWORD *)(v0 + 728) = v5;
  return swift_task_switch(sub_10020BAD0, *(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 664));
}

uint64_t sub_10020BAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = *(_QWORD *)(v0 + 728);
  v21 = *(_QWORD *)(v0 + 688);
  v1 = *(_QWORD *)(v0 + 680);
  v18 = *(_QWORD *)(v0 + 632);
  v19 = *(_QWORD *)(v0 + 672);
  v22 = *(_QWORD *)(v0 + 624);
  v23 = *(_QWORD *)(v0 + 616);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_QWORD *)(v0 + 544);
  swift_release(*(_QWORD *)(v0 + 648));
  BookContentModule.clearSelection()();
  v7 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 432);
  v9 = swift_allocObject(&unk_1008F4130, 24, 7);
  swift_weakInit(v9 + 16, v6);
  sub_10000B5E4(v2, v3, &qword_1009D2A98);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 24) & ~v10;
  v12 = swift_allocObject(&unk_1008F4158, v11 + v4, v10 | 7);
  *(_QWORD *)(v12 + 16) = v9;
  sub_100025B3C(v3, v12 + v11, &qword_1009D2A98);
  swift_retain(v9);
  sub_1004D6560(v7, v8, v18, (uint64_t)sub_1002110BC, v12);
  swift_release(v1);
  swift_release(v12);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v8);
  swift_unknownObjectRelease(v19);
  swift_bridgeObjectRelease(v21);
  sub_100010960(v2, &qword_1009D2A98);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v18, v23);
  swift_release(v9);
  v13 = *(_QWORD *)(v0 + 608);
  v14 = *(_QWORD *)(v0 + 600);
  v15 = *(_QWORD *)(v0 + 592);
  v16 = *(_QWORD *)(v0 + 568);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020BC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v6 = sub_10004CFD4(&qword_1009D2AC8);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2AD0);
  v5[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[10] = v8;
  v5[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D2AA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v9);
  v5[13] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v5[15] = v11;
  v5[16] = v12;
  return swift_task_switch(sub_10020BD8C, v11, v12);
}

uint64_t sub_10020BD8C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 56) + 32);
  if (!Strong)
    goto LABEL_6;
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 32);
  if (!v3)
  {
    swift_release(Strong);
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = v3;
  v7 = sub_10004CFD4(&qword_1009D2AE0);
  v8 = sub_100030B34(&qword_1009D2AE8, &qword_1009D2AE0, (uint64_t)&protocol conformance descriptor for [A]);
  static RelativeValue<>.union<A>(_:)(v0 + 16, v7, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v9 = *(_QWORD *)(v0 + 64);
    swift_release(v2);
    sub_100010960(v9, &qword_1009D2AC8);
LABEL_6:
    v10 = *(_QWORD *)(v0 + 104);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
LABEL_7:
    sub_100010960(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1009D2AA0);
    v12 = (_QWORD *)swift_task_alloc(dword_1009D2ADC);
    *(_QWORD *)(v0 + 136) = v12;
    *v12 = v0;
    v12[1] = sub_10020BFD4;
    return sub_10020EB98(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v14 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 32))(v15, *(_QWORD *)(v0 + 64), v17);
  BookContentModule.convertToUI(_:)(v15);
  v18 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v18);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v14, 1, v19) == 1)
    goto LABEL_7;
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 24);
  v23 = swift_release(*(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v20 + 32))(v22, v21, v19, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
  v24 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020BFD4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  return swift_task_switch(sub_10020C020, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_10020C020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_100025B3C(v1, v2, (uint64_t *)&unk_1009D2AA0);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10020C09C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong)
  {
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009D2920);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to perform translate. Missing state or router", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    return 0;
  }
  v2 = Strong;
  v3 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
  if (!v3)
  {
    v11 = Logger.logObject.getter(0);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to present translate without a delegate", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_unknownObjectRelease(v2);

    return 0;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "isTranslateAvailableForAssetViewController:", v2);
  swift_unknownObjectRelease(v2);
  swift_unknownObjectRelease(v4);
  return v5;
}

uint64_t sub_10020C248()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[63] = v0;
  v2 = type metadata accessor for SelectionInfo.PresentationLifecycle(0);
  v1[64] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[65] = v3;
  v1[66] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v1[67] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v1[68] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[69] = swift_task_alloc(v6);
  v1[70] = swift_task_alloc(v6);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v1[71] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v1[72] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[73] = v9;
  v1[74] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v1[75] = v10;
  v1[76] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v1[77] = v11;
  v1[78] = v12;
  return swift_task_switch(sub_10020C370, v11, v12);
}

uint64_t sub_10020C370()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 96, v0 + 304, (uint64_t *)&unk_1009E4CA0);
  sub_100025B3C(v0 + 304, v0 + 352, (uint64_t *)&unk_1009E4CA0);
  if (*(_QWORD *)(v0 + 384))
  {
    v1 = *(_QWORD *)(v0 + 504);
    v2 = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 416) = v2;
    *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 377);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    *(_QWORD *)(v0 + 632) = Strong;
    if (Strong)
    {
      v4 = *(_QWORD *)(v0 + 408);
      v5 = *(_QWORD *)(v0 + 416);
      *(_QWORD *)(v0 + 640) = v5;
      v6 = *(_QWORD *)(v0 + 400);
      *(_QWORD *)(v0 + 648) = v6;
      *(_QWORD *)(v0 + 656) = v4;
      sub_1002110D8((uint64_t *)(v0 + 304));
      v7 = (_QWORD *)swift_task_alloc(dword_1009D2AC4);
      *(_QWORD *)(v0 + 664) = v7;
      *v7 = v0;
      v7[1] = sub_10020C5DC;
      return sub_10020BC94(*(_QWORD *)(v0 + 568), v5, v6, v4);
    }
    v9 = *(_QWORD *)(v0 + 608);
    sub_1002110D8((uint64_t *)(v0 + 304));
    swift_release(v9);
    sub_100025B3C(v0 + 400, v0 + 464, &qword_1009D2A80);
    sub_100210D88(v0 + 464);
    sub_100025B3C(v0 + 416, v0 + 496, &qword_1009D2AB8);
    sub_1001FC120((_QWORD *)(v0 + 496));
    *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 424);
    sub_100210D88(v0 + 480);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 608));
  }
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048F64(v10, (uint64_t)qword_1009D2920);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to perform translate. Missing state or router", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = *(_QWORD *)(v0 + 568);
  v16 = *(_QWORD *)(v0 + 560);
  v17 = *(_QWORD *)(v0 + 552);
  v18 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 592));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020C5DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 664));
  return swift_task_switch(sub_10020C62C, *(_QWORD *)(v1 + 616), *(_QWORD *)(v1 + 624));
}

uint64_t sub_10020C62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 656);
    v5 = *(_QWORD *)(v0 + 640);
    v6 = *(_QWORD *)(v0 + 632);
    swift_release(*(_QWORD *)(v0 + 608));
    swift_unknownObjectRelease(v6);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
    *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 424);
    sub_100210D88(v0 + 448);
    sub_100010960(v3, (uint64_t *)&unk_1009D2AA0);
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009D2920);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable to perform translate. Missing state or router", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = *(_QWORD *)(v0 + 568);
    v13 = *(_QWORD *)(v0 + 560);
    v14 = *(_QWORD *)(v0 + 552);
    v15 = *(_QWORD *)(v0 + 528);
    swift_task_dealloc(*(_QWORD *)(v0 + 592));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 600);
    v18 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v0 + 592), v3, v2);
    *(_BYTE *)(v0 + 345) = *(_BYTE *)(v0 + 440);
    *(_QWORD *)(v0 + 672) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10020C834, v19, v20);
  }
}

uint64_t sub_10020C834()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 656);
  swift_release(*(_QWORD *)(v0 + 672));
  v2 = *(_BYTE *)(v0 + 345) != 1 || v1 == 0;
  if (v2 || (Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 504) + 32)) == 0)
  {
    v5 = *(_QWORD *)(v0 + 656);
    v11 = *(_QWORD *)(v0 + 560);
    v12 = type metadata accessor for SelectionInfo.ID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v0 + 656);
    v6 = *(_QWORD *)(v0 + 648);
    v7 = *(_QWORD *)(v0 + 528);
    v8 = *(_QWORD *)(v0 + 520);
    v9 = *(_QWORD *)(v0 + 512);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, enum case for SelectionInfo.PresentationLifecycle.removeAfterDisplay(_:), v9);
    BookContentModule.addSelectionInfo(cfi:lifecycle:)(v6, v5, v7);
    v10 = swift_release(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v7, v9, v10);
  }
  *(_QWORD *)(v0 + 680) = v5;
  return swift_task_switch(sub_10020C944, *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624));
}

uint64_t sub_10020C944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = *(_QWORD *)(v0 + 680);
  v20 = *(_QWORD *)(v0 + 640);
  v1 = *(_QWORD *)(v0 + 632);
  v18 = *(_QWORD *)(v0 + 592);
  v21 = *(_QWORD *)(v0 + 584);
  v22 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 552);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 536);
  v6 = *(_QWORD *)(v0 + 504);
  swift_release(*(_QWORD *)(v0 + 608));
  v7 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 432);
  v9 = swift_allocObject(&unk_1008F4130, 24, 7);
  swift_weakInit(v9 + 16, v6);
  sub_10000B5E4(v2, v3, &qword_1009D2A98);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 24) & ~v10;
  v12 = swift_allocObject(&unk_1008F41A8, v11 + v4, v10 | 7);
  v12[2].isa = (Class)v9;
  sub_100025B3C(v3, (uint64_t)v12 + v11, &qword_1009D2A98);
  swift_retain(v9);
  sub_1004D6224(v7, v8, v18, (uint64_t)sub_10021114C, v12);
  swift_release(v12);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v8);
  swift_unknownObjectRelease(v1);
  swift_bridgeObjectRelease(v20);
  sub_100010960(v2, &qword_1009D2A98);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v22);
  swift_release(v9);
  v13 = *(_QWORD *)(v0 + 568);
  v14 = *(_QWORD *)(v0 + 560);
  v15 = *(_QWORD *)(v0 + 552);
  v16 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 592));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10020CAF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v8 = sub_10004CFD4(&qword_1009D2A98);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_10000B5E4(a2, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1009D2A98);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 24) & ~v11;
  v13 = swift_allocObject(a3, v12 + v10, v11 | 7);
  *(_QWORD *)(v13 + 16) = a1;
  sub_100025B3C((uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, &qword_1009D2A98);
  swift_retain(a1);
  sub_1006498E4(a4, v13);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10020CBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v16[24];

  v4 = sub_10004CFD4(&qword_1009D2A98);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for SelectionInfo.ID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v12 = result;
    sub_10000B5E4(a2, (uint64_t)v6, &qword_1009D2A98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100010960((uint64_t)v6, &qword_1009D2A98);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      Strong = swift_weakLoadStrong(v12 + 32);
      if (Strong)
      {
        v14 = Strong;
        BookContentModule.removeSelectionInfo(_:)(v10);
        swift_release(v14);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    return swift_release(v12);
  }
  return result;
}

uint64_t sub_10020CD30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[56] = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v1[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[58] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[59] = v4;
  v1[60] = v5;
  return swift_task_switch(sub_10020CDC0, v4, v5);
}

uint64_t sub_10020CDC0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 144, v0 + 384, &qword_1009D2B08);
  sub_100025B3C(v0 + 384, v0 + 344, &qword_1009D2B08);
  if (*(_QWORD *)(v0 + 368))
  {
    v1 = *(_QWORD *)(v0 + 448);
    v2 = *(_OWORD *)(v0 + 360);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 344);
    *(_OWORD *)(v0 + 320) = v2;
    *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 376);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    *(_QWORD *)(v0 + 488) = Strong;
    if (Strong)
    {
      v4 = *(_QWORD *)(v0 + 312);
      v5 = *(_QWORD *)(v0 + 320);
      v6 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)(v0 + 496) = v5;
      *(_QWORD *)(v0 + 504) = v4;
      sub_1002112A4((uint64_t *)(v0 + 384));
      v7 = (_QWORD *)swift_task_alloc(dword_1009D2AC4);
      *(_QWORD *)(v0 + 512) = v7;
      *v7 = v0;
      v7[1] = sub_10020CFE0;
      return sub_10020BC94(*(_QWORD *)(v0 + 456), v5, v6, v4);
    }
    v10 = *(_QWORD *)(v0 + 464);
    sub_1002112A4((uint64_t *)(v0 + 384));
    swift_release(v10);
    sub_100025B3C(v0 + 304, v0 + 424, &qword_1009D2A80);
    sub_100210D88(v0 + 424);
    sub_100025B3C(v0 + 320, v0 + 440, &qword_1009D2AB8);
    sub_1001FC120((_QWORD *)(v0 + 440));
    v9 = 336;
  }
  else
  {
    v9 = 464;
  }
  swift_release(*(_QWORD *)(v0 + v9));
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100048F64(v11, (uint64_t)qword_1009D2920);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to perform share. Missing state and/or router", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020CFE0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 512));
  return swift_task_switch(sub_10020D02C, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_10020D02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(v0 + 496);
  v1 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = swift_release(*(_QWORD *)(v0 + 464));
  v6 = *(_QWORD *)(v0 + 336);
  v7 = (void *)(*(uint64_t (**)(__n128))(v0 + 328))(v5);
  sub_1004D6A20(v7);

  swift_release(v6);
  swift_unknownObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  sub_100010960(v4, (uint64_t *)&unk_1009D2AA0);
  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020D0D4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 1248) = v1;
  *(_BYTE *)(v2 + 681) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 1256) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 1264) = v4;
  *(_QWORD *)(v2 + 1272) = v5;
  return swift_task_switch(sub_10020D148, v4, v5);
}

uint64_t sub_10020D148()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 184, v0 + 1072, &qword_1009D2A70);
  sub_100025B3C(v0 + 1072, v0 + 688, &qword_1009D2A70);
  if (!*(_QWORD *)(v0 + 712))
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 1248);
  v2 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 640) = v2;
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 665) = *(_OWORD *)(v0 + 761);
  v3 = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 608) = v3;
  Strong = swift_weakLoadStrong(v1 + 32);
  *(_QWORD *)(v0 + 1280) = Strong;
  if (!Strong)
  {
LABEL_7:
    swift_release(*(_QWORD *)(v0 + 1256));
LABEL_8:
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048F64(v13, (uint64_t)qword_1009D2920);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to perform add highlight. Missing state and/or annotation provider", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    goto LABEL_13;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v0 + 1248);
  v7 = swift_unknownObjectWeakLoadStrong(v6 + 64);
  *(_QWORD *)(v0 + 1288) = v7;
  *(_QWORD *)(v0 + 1296) = *(_QWORD *)(v6 + 72);
  if (!v7)
  {
    v24 = *(_QWORD *)(v0 + 1256);
    sub_100210F50(v0 + 1072, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100210EC8);
    swift_release(v24);
    swift_release(v5);
    sub_100210F50(v0 + 1072, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100210FAC);
    goto LABEL_8;
  }
  if (*(_BYTE *)(v0 + 681) == 6)
  {
    v8 = *(_QWORD *)(v0 + 648);
    if (v8)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v0 + 1256);
      v11 = *(_QWORD *)(v0 + 640);
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 648));
      swift_release(v10);
      BookContentModule.clearSelection()();
      swift_unknownObjectRelease(v9);
      v12 = swift_release(v5);
      return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v11, v8, v12);
    }
  }
  sub_100025B3C(v0 + 664, v0 + 1192, &qword_1009D2A78);
  sub_100025B3C(v0 + 1192, v0 + 1168, &qword_1009D2A78);
  v19 = *(unsigned __int8 *)(v0 + 1184);
  if (v19 != 255)
  {
    v20 = v19 & 1;
    v21 = *(_QWORD *)(v0 + 1168);
    v22 = *(_QWORD *)(v0 + 1176);
    sub_100211034(v0 + 1192);
    v23 = (_QWORD *)swift_task_alloc(dword_1009D2A8C);
    *(_QWORD *)(v0 + 1304) = v23;
    *v23 = v0;
    v23[1] = sub_10020D634;
    return sub_10020D9DC(v21, v22, v20);
  }
  sub_100210BF4((void *)(v0 + 304));
  sub_100025B3C(v0 + 472, v0 + 976, &qword_1009D2A70);
  sub_100025B3C(v0 + 976, v0 + 880, &qword_1009D2A70);
  if (!*(_QWORD *)(v0 + 904))
    goto LABEL_21;
  v25 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 832) = v25;
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)(v0 + 857) = *(_OWORD *)(v0 + 953);
  v26 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 800) = v26;
  sub_100025B3C(v0 + 784, v0 + 1216, &qword_1009D2A80);
  sub_100025B3C(v0 + 1216, v0 + 1232, &qword_1009D2A80);
  v27 = *(_QWORD *)(v0 + 1240);
  if (!v27)
  {
LABEL_21:
    swift_release(*(_QWORD *)(v0 + 1256));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100048F64(v34, (uint64_t)qword_1009D2920);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to perform add highlight. Missing updated state or state CFI", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }
    v39 = *(_QWORD *)(v0 + 1288);
    v40 = *(_QWORD *)(v0 + 1280);

    BookContentModule.clearSelection()();
    swift_unknownObjectRelease(v39);
    v12 = swift_release(v40);
LABEL_13:
    v11 = 0;
    v8 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v11, v8, v12);
  }
  v28 = *(_QWORD *)(v0 + 1232);
  swift_getObjectType();
  v29 = *(_QWORD *)(v0 + 800);
  v30 = *(_QWORD *)(v0 + 808);
  v31 = *(_QWORD *)(v0 + 816);
  v32 = *(_QWORD *)(v0 + 824);
  sub_100210F50(v0 + 976, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100210EC8);
  sub_100210D60(v0 + 1216);
  v33 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)[1]);
  *(_QWORD *)(v0 + 1312) = v33;
  *v33 = v0;
  v33[1] = sub_10020D900;
  return dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(v28, v27, v29, v30, v31, v32, *(unsigned __int8 *)(v0 + 681), 1);
}

uint64_t sub_10020D634()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1304));
  sub_100211064(v1 + 1192);
  return swift_task_switch(sub_10020D690, *(_QWORD *)(v1 + 1264), *(_QWORD *)(v1 + 1272));
}

uint64_t sub_10020D690()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;

  sub_100210BF4((void *)(v0 + 304));
  sub_100025B3C(v0 + 472, v0 + 976, &qword_1009D2A70);
  sub_100025B3C(v0 + 976, v0 + 880, &qword_1009D2A70);
  if (!*(_QWORD *)(v0 + 904))
    goto LABEL_4;
  v1 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 832) = v1;
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)(v0 + 857) = *(_OWORD *)(v0 + 953);
  v2 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 800) = v2;
  sub_100025B3C(v0 + 784, v0 + 1216, &qword_1009D2A80);
  sub_100025B3C(v0 + 1216, v0 + 1232, &qword_1009D2A80);
  v3 = *(_QWORD *)(v0 + 1240);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 1232);
    swift_getObjectType();
    v5 = *(_QWORD *)(v0 + 800);
    v6 = *(_QWORD *)(v0 + 808);
    v7 = *(_QWORD *)(v0 + 816);
    v8 = *(_QWORD *)(v0 + 824);
    sub_100210F50(v0 + 976, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100210EC8);
    sub_100210D60(v0 + 1216);
    v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)[1]);
    *(_QWORD *)(v0 + 1312) = v9;
    *v9 = v0;
    v9[1] = sub_10020D900;
    return dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(v4, v3, v5, v6, v7, v8, *(unsigned __int8 *)(v0 + 681), 1);
  }
  else
  {
LABEL_4:
    swift_release(*(_QWORD *)(v0 + 1256));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100048F64(v11, (uint64_t)qword_1009D2920);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to perform add highlight. Missing updated state or state CFI", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    v16 = *(_QWORD *)(v0 + 1288);
    v17 = *(_QWORD *)(v0 + 1280);

    BookContentModule.clearSelection()();
    swift_unknownObjectRelease(v16);
    v18 = swift_release(v17);
    return (*(uint64_t (**)(_QWORD, _QWORD, __n128))(v0 + 8))(0, 0, v18);
  }
}

uint64_t sub_10020D900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 1312);
  v3[165] = a1;
  v3[166] = a2;
  swift_task_dealloc(v4);
  sub_100210D88((uint64_t)(v3 + 152));
  sub_100210F50((uint64_t)(v3 + 122), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100210FAC);
  return swift_task_switch(sub_10020D988, v3[158], v3[159]);
}

uint64_t sub_10020D988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1288);
  v2 = *(_QWORD *)(v0 + 1280);
  swift_release(*(_QWORD *)(v0 + 1256));
  BookContentModule.clearSelection()();
  swift_unknownObjectRelease(v1);
  swift_release(v2);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1320), *(_QWORD *)(v0 + 1328));
}

uint64_t sub_10020D9DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 40) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  return swift_task_switch(sub_10020DA50, v6, v7);
}

uint64_t sub_10020DA50()
{
  uint64_t v0;
  char v1;
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;

  v1 = *(_BYTE *)(v0 + 88);
  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 32) + 32);
  *(_QWORD *)(v0 + 64) = Strong;
  if ((v1 & 1) != 0)
  {
    if (Strong)
    {
      v6 = *(_QWORD *)(v0 + 24);
      v7 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.select(annotationID:)[1]);
      *(_QWORD *)(v0 + 80) = v7;
      *v7 = v0;
      v7[1] = sub_10020DBB0;
      return BookContentModule.select(annotationID:)(*(_QWORD *)(v0 + 16), v6);
    }
  }
  else if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.select(cfi:)[1]);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10020DB2C;
    return BookContentModule.select(cfi:)(*(_QWORD *)(v0 + 16), v3);
  }
  v8 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_10020DB2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_release(v2);
  return swift_task_switch(sub_10020DB80, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10020DB80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020DBB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v2);
  return swift_task_switch(sub_100211924, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10020DC08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[42] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[43] = v2;
  v1[44] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[45] = v3;
  v1[46] = v4;
  return swift_task_switch(sub_10020DC78, v3, v4);
}

uint64_t sub_10020DC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 280, v0 + 320, (uint64_t *)&unk_1009E4CB0);
  sub_100025B3C(v0 + 320, v0 + 304, (uint64_t *)&unk_1009E4CB0);
  v1 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 376) = v1;
  if (v1
    && (v2 = *(_QWORD *)(v0 + 336),
        *(_BYTE *)(v0 + 314) = *(_BYTE *)(v0 + 312),
        Strong = swift_unknownObjectWeakLoadStrong(v2 + 64),
        *(_QWORD *)(v0 + 384) = Strong,
        *(_QWORD *)(v0 + 392) = *(_QWORD *)(v2 + 72),
        Strong))
  {
    v4 = *(_QWORD *)(v0 + 344);
    v5 = sub_100210E8C((_QWORD *)(v0 + 320));
    *(_QWORD *)(v0 + 400) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 408) = v6;
    *(_QWORD *)(v0 + 416) = v7;
    return swift_task_switch(sub_10020DE20, v6, v7);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 352));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100048F64(v9, (uint64_t)qword_1009D2920);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to perform remove highlights. Missing state and/or annotation provider", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10020DE20()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  if ((*(_BYTE *)(v0 + 314) & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 336) + 16);
    *(_QWORD *)(v0 + 424) = Strong;
    if (Strong)
    {
      v3 = *(_QWORD *)(v0 + 344);
      v4 = sub_100495D90((uint64_t *)&v7);
      *(_OWORD *)(v0 + 432) = v7;
      *(_QWORD *)(v0 + 448) = v8;
      *(_OWORD *)(v0 + 456) = v9;
      *(_QWORD *)(v0 + 472) = v10;
      *(_QWORD *)(v0 + 480) = static MainActor.shared.getter(v4);
      v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 488) = v5;
      *(_QWORD *)(v0 + 496) = v6;
      return swift_task_switch(sub_10020DF00, v5, v6);
    }
    else
    {
      swift_release(*(_QWORD *)(v0 + 400));
      return swift_task_switch(sub_10020E2B8, *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
    }
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 400));
    return swift_task_switch(sub_10020E24C, *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
  }
}

uint64_t sub_10020DF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(v1 + 448);
  v9 = *(_OWORD *)(v1 + 464);
  v7 = *(_OWORD *)(v1 + 432);
  v2 = *(_QWORD *)(v1 + 424);
  v3 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 504) = v3;
  v4 = swift_task_alloc(80);
  *(_QWORD *)(v1 + 512) = v4;
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v9;
  *(_QWORD *)(v4 + 64) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 520) = v5;
  *v5 = v1;
  v5[1] = sub_10020DFEC;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 313, v3, &protocol witness table for MainActor, 0xD000000000000037, 0x80000001007B73C0, sub_100210DB0, v4, &type metadata for Bool);
}

uint64_t sub_10020DFEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 504);
  v3 = *(_QWORD *)(*v0 + 512);
  swift_task_dealloc(*(_QWORD *)(*v0 + 520));
  swift_release(v2);
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10020E054, *(_QWORD *)(v1 + 488), *(_QWORD *)(v1 + 496));
}

uint64_t sub_10020E054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 440);
  swift_release(*(_QWORD *)(v0 + 480));
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  *(_BYTE *)(v0 + 315) = *(_BYTE *)(v0 + 313);
  return swift_task_switch(sub_10020E0BC, *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416));
}

uint64_t sub_10020E0BC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[53];
  swift_release(v0[50]);
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10020E100, v0[45], v0[46]);
}

uint64_t sub_10020E100()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint8_t *v13;

  v1 = *(unsigned __int8 *)(v0 + 315);
  swift_release(*(_QWORD *)(v0 + 352));
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 384);
    v3 = *(_QWORD *)(v0 + 392);
    v4 = *(_QWORD *)(v0 + 376);
    ObjectType = swift_getObjectType();
    dispatch thunk of AnnotationProviding.deleteAnnotationsWithUUIDs(_:)(v4, ObjectType, v3);
    sub_1001FC120((_QWORD *)(v0 + 320));
    v6 = swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_1001FC120((_QWORD *)(v0 + 320));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009D2920);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 384);
    if (v11)
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "User cancelled remove highlights", v13, 2u);
      swift_slowDealloc(v13, -1, -1);

      v6 = swift_unknownObjectRelease(v12);
    }
    else
    {
      swift_unknownObjectRelease(*(_QWORD *)(v0 + 384));

    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_10020E24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v5;

  swift_release(*(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 376);
  ObjectType = swift_getObjectType();
  dispatch thunk of AnnotationProviding.deleteAnnotationsWithUUIDs(_:)(v3, ObjectType, v2);
  sub_1001FC120((_QWORD *)(v0 + 320));
  v5 = swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_10020E2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;
  __n128 v8;

  swift_release(*(_QWORD *)(v0 + 352));
  sub_1001FC120((_QWORD *)(v0 + 320));
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009D2920);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 384);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "User cancelled remove highlights", v7, 2u);
    swift_slowDealloc(v7, -1, -1);

    v8 = swift_unknownObjectRelease(v6);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 384));

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_10020E3C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[40] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[41] = v2;
  v1[42] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[43] = v3;
  v1[44] = v4;
  return swift_task_switch(sub_10020E434, v3, v4);
}

uint64_t sub_10020E434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 296, v0 + 312, &qword_1009D2A60);
  sub_100025B3C(v0 + 312, v0 + 304, &qword_1009D2A60);
  v1 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 360) = v1;
  if (v1
    && (v2 = *(_QWORD *)(v0 + 320),
        Strong = swift_unknownObjectWeakLoadStrong(v2 + 64),
        *(_QWORD *)(v0 + 368) = Strong,
        *(_QWORD *)(v0 + 376) = *(_QWORD *)(v2 + 72),
        Strong))
  {
    v4 = *(_QWORD *)(v0 + 328);
    v5 = sub_100210E8C((_QWORD *)(v0 + 312));
    *(_QWORD *)(v0 + 384) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 392) = v6;
    *(_QWORD *)(v0 + 400) = v7;
    return swift_task_switch(sub_10020E5D4, v6, v7);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 336));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100048F64(v9, (uint64_t)qword_1009D2920);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to perform remove notes. Missing state and/or annotation provider", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10020E5D4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 320) + 16);
  *(_QWORD *)(v0 + 408) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 328);
    v3 = sub_100496010((uint64_t *)&v7);
    *(_OWORD *)(v0 + 416) = v7;
    *(_QWORD *)(v0 + 432) = v8;
    *(_OWORD *)(v0 + 440) = v9;
    *(_QWORD *)(v0 + 456) = v10;
    *(_QWORD *)(v0 + 464) = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 472) = v4;
    *(_QWORD *)(v0 + 480) = v5;
    return swift_task_switch(sub_10020E694, v4, v5);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 384));
    return swift_task_switch(sub_10020E9F8, *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
  }
}

uint64_t sub_10020E694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(v1 + 432);
  v9 = *(_OWORD *)(v1 + 448);
  v7 = *(_OWORD *)(v1 + 416);
  v2 = *(_QWORD *)(v1 + 408);
  v3 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 488) = v3;
  v4 = swift_task_alloc(80);
  *(_QWORD *)(v1 + 496) = v4;
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v9;
  *(_QWORD *)(v4 + 64) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 504) = v5;
  *v5 = v1;
  v5[1] = sub_10020E780;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 520, v3, &protocol witness table for MainActor, 0xD000000000000037, 0x80000001007B73C0, sub_100210DB0, v4, &type metadata for Bool);
}

uint64_t sub_10020E780()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 496);
  v3 = *(_QWORD *)(*v0 + 488);
  swift_task_dealloc(*(_QWORD *)(*v0 + 504));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10020E7E8, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_10020E7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 424);
  swift_release(*(_QWORD *)(v0 + 464));
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  *(_BYTE *)(v0 + 521) = *(_BYTE *)(v0 + 520);
  return swift_task_switch(sub_10020E850, *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 400));
}

uint64_t sub_10020E850()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[51];
  swift_release(v0[48]);
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10020E894, v0[43], v0[44]);
}

uint64_t sub_10020E894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  __n128 v12;

  if ((*(_BYTE *)(v0 + 521) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 360);
    ObjectType = swift_getObjectType();
    v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AnnotationProviding.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)[1]);
    *(_QWORD *)(v0 + 512) = v3;
    *v3 = v0;
    v3[1] = sub_10020EB04;
    return dispatch thunk of AnnotationProviding.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)(v1, ObjectType, *(_QWORD *)(v0 + 376));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 336));
    sub_1001FC120((_QWORD *)(v0 + 312));
    if (qword_1009CDC78 != -1)
      swift_once(&qword_1009CDC78, sub_1002088EC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100048F64(v5, (uint64_t)qword_1009D2920);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 368);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "User cancelled remove notes", v11, 2u);
      swift_slowDealloc(v11, -1, -1);

      v12 = swift_unknownObjectRelease(v10);
    }
    else
    {
      swift_unknownObjectRelease(*(_QWORD *)(v0 + 368));

    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
}

uint64_t sub_10020E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;
  __n128 v8;

  swift_release(*(_QWORD *)(v0 + 336));
  sub_1001FC120((_QWORD *)(v0 + 312));
  if (qword_1009CDC78 != -1)
    swift_once(&qword_1009CDC78, sub_1002088EC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009D2920);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 368);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "User cancelled remove notes", v7, 2u);
    swift_slowDealloc(v7, -1, -1);

    v8 = swift_unknownObjectRelease(v6);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 368));

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_10020EB04()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 512));
  sub_1001FC120(v1 + 39);
  return swift_task_switch(sub_10020EB5C, v1[43], v1[44]);
}

uint64_t sub_10020EB5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 336));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020EB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_10004CFD4(&qword_1009D2AC8);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D2AD0);
  v4[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[9] = v7;
  v4[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[12] = v9;
  v4[13] = v10;
  return swift_task_switch(sub_10020EC58, v9, v10);
}

uint64_t sub_10020EC58()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(v0 + 40)
    && (Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 48) + 32), (*(_QWORD *)(v0 + 112) = Strong) != 0))
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.rects(forCFI:clippedToBounds:)[1]);
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = sub_10020ED30;
    return BookContentModule.rects(forCFI:clippedToBounds:)(*(_QWORD *)(v0 + 32), v2, 1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 88));
    v5 = *(_QWORD *)(v0 + 24);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10020ED30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10020ED88, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_10020ED88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 88));
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 16) = v2;
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = sub_10004CFD4(&qword_1009D2AE0);
    v7 = sub_100030B34(&qword_1009D2AE8, &qword_1009D2AE0, (uint64_t)&protocol conformance descriptor for [A]);
    static RelativeValue<>.union<A>(_:)(v0 + 16, v6, v7);
    v8 = swift_bridgeObjectRelease(v2);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v5, 1, v3, v8);
    v10 = *(_QWORD *)(v0 + 112);
    if (v9 != 1)
    {
      v15 = *(_QWORD *)(v0 + 72);
      v14 = *(_QWORD *)(v0 + 80);
      v16 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 32))(v14, *(_QWORD *)(v0 + 56), v16);
      BookContentModule.convertToUI(_:)(v14);
      v17 = swift_release(v10);
      (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v14, v16, v17);
      goto LABEL_7;
    }
    v11 = *(_QWORD *)(v0 + 56);
    swift_release(v10);
    sub_100010960(v11, &qword_1009D2AC8);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 112));
  }
  v12 = *(_QWORD *)(v0 + 24);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_7:
  v18 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020EF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v4 = dispatch thunk of AssetActivityItemProviding.pasteboardString()(a2, a3);
  v6 = v5;
  if (v5)
  {
    v7 = v4;
    v8 = sub_1001F15BC();
    swift_bridgeObjectRetain(v6);
    v9 = Collection.isNotEmpty.getter(&type metadata for String, v8);
    swift_bridgeObjectRelease(v6);
    swift_unknownObjectRelease(a1);
    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease(v6);
      return 0;
    }
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return 0;
  }
  return v7;
}

uint64_t sub_10020EFB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a3;
  v11 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BookContentSelection(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v13, &qword_1009D2B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {

    swift_unknownObjectRelease(v33);
    sub_100010960(a1, &qword_1009D2B10);
    result = sub_100010960((uint64_t)v13, &qword_1009D2B10);
LABEL_8:
    v28 = 0;
    v30 = 0;
    v31 = 0;
    v22 = 0;
    v21 = 0;
    goto LABEL_10;
  }
  v32 = a1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  v19 = dispatch thunk of AssetActivityItemProviding.pasteboardString()(a4, a5);
  v21 = v20;
  if (!v20)
  {

    swift_unknownObjectRelease(v33);
    sub_100010960(v32, &qword_1009D2B10);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v28 = 0;
    v30 = 0;
    v31 = 0;
    v22 = 0;
    goto LABEL_10;
  }
  v22 = v19;
  v23 = BookContentSelection.selectionText.getter();
  v25 = v24;
  v34 = v23;
  v35 = v24;
  v26 = sub_1001F15BC();
  v27 = Collection.isNotEmpty.getter(&type metadata for String, v26);
  swift_bridgeObjectRelease(v25);
  if ((v27 & 1) == 0 || (BookProviderService.areCitationsAllowed.getter() & 1) == 0)
  {

    swift_unknownObjectRelease(v33);
    swift_bridgeObjectRelease(v21);
    sub_100010960(v32, &qword_1009D2B10);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_8;
  }
  v28 = BookContentSelection.selectionCFI.getter();
  v30 = v29;
  v31 = BookContentSelection.selectionRects.getter();

  swift_unknownObjectRelease(v33);
  sub_100010960(v32, &qword_1009D2B10);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_10:
  *(_QWORD *)a6 = v28;
  *(_QWORD *)(a6 + 8) = v30;
  *(_QWORD *)(a6 + 16) = v31;
  *(_QWORD *)(a6 + 24) = v22;
  *(_QWORD *)(a6 + 32) = v21;
  *(_BYTE *)(a6 + 40) = 0;
  return result;
}

_QWORD *sub_10020F238@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  _QWORD *result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v12 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v29 - v17;
  if ((dispatch thunk of AssetActivityItemProviding.canMakeActivityViewController.getter(a4, a5, v16) & 1) != 0
    && (BookProviderService.areCitationsAllowed.getter() & 1) != 0)
  {
    v31 = a4;
    v32 = a5;
    sub_10000B5E4(a1, (uint64_t)v18, &qword_1009D2B10);
    v19 = type metadata accessor for BookContentSelection(0);
    v20 = *(_QWORD *)(v19 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v30(v18, 1, v19) == 1)
    {
      sub_100010960((uint64_t)v18, &qword_1009D2B10);
      v21 = 0;
      v22 = 0;
    }
    else
    {
      v21 = BookContentSelection.selectionCFI.getter();
      v22 = v26;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    }
    sub_10000B5E4(a1, (uint64_t)v14, &qword_1009D2B10);
    if (v30(v14, 1, v19) == 1)
    {

      sub_100010960(a1, &qword_1009D2B10);
      sub_100010960((uint64_t)v14, &qword_1009D2B10);
      v23 = 0;
    }
    else
    {
      v27 = v20;
      v23 = BookContentSelection.selectionRects.getter();

      sub_100010960(a1, &qword_1009D2B10);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v19);
    }
    result = (_QWORD *)swift_allocObject(&unk_1008F41F8, 40, 7);
    v28 = v32;
    result[2] = v31;
    result[3] = v28;
    result[4] = a3;
    v24 = sub_1002115D4;
  }
  else
  {

    swift_unknownObjectRelease(a3);
    sub_100010960(a1, &qword_1009D2B10);
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    result = 0;
  }
  *a6 = v21;
  a6[1] = v22;
  a6[2] = v23;
  a6[3] = (uint64_t)v24;
  a6[4] = (uint64_t)result;
  return result;
}

uint64_t sub_10020F48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  _BYTE v59[4];
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v6);
  v8 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for BookContentSelection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B5E4(a1, (uint64_t)v8, &qword_1009D2B10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_unknownObjectRelease(a2);
    sub_100010960(a1, &qword_1009D2B10);
    result = sub_100010960((uint64_t)v8, &qword_1009D2B10);
LABEL_8:
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    goto LABEL_30;
  }
  v14 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = BookContentSelection.selectionText.getter(v14);
  v17 = v16;
  v68 = v15;
  v69 = v16;
  v18 = sub_1001F15BC();
  v19 = Collection.isNotEmpty.getter(&type metadata for String, v18);
  v20 = swift_bridgeObjectRelease(v17);
  if ((v19 & 1) == 0)
  {
    swift_unknownObjectRelease(a2);
    sub_100010960(a1, &qword_1009D2B10);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
  v21 = BookContentSelection.containingHighlightID.getter(v20);
  if (v22
    && (v24 = v22,
        v25 = dispatch thunk of AnnotationProviding.highlightAnnotationDetail(for:)(v21, v22),
        v23 = swift_bridgeObjectRelease(v24),
        v25))
  {
    v26 = dispatch thunk of HighlightAnnotationDetailEntity.hasNote.getter(v23);
    v23 = swift_release(v25);
    v62 = v26 & 1;
  }
  else
  {
    v62 = 0;
  }
  v39 = BookContentSelection.containingHighlightID.getter(v23);
  v65 = a2;
  v66 = a1;
  v63 = v10;
  v64 = v9;
  if (v40)
  {
    v67 = v39;
    v61 = v40;
    v42 = 1;
LABEL_22:
    v60 = v42;
    goto LABEL_23;
  }
  v43 = BookContentSelection.extendedCFI.getter(v39);
  if (!v44)
  {
LABEL_21:
    v67 = 0;
    v61 = 0;
    v42 = 255;
    goto LABEL_22;
  }
  v67 = v43;
  v45 = v44;
  v46 = swift_bridgeObjectRetain(v44);
  v47 = BookContentSelection.selectionCFI.getter(v46);
  if (v48)
  {
    v49 = v48;
    if (v67 == v47 && v45 == v48)
    {
      swift_bridgeObjectRelease_n(v45, 2);
      v50 = v49;
    }
    else
    {
      v51 = v45;
      v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v45, v47, v48, 0);
      swift_bridgeObjectRelease(v51);
      v41 = swift_bridgeObjectRelease(v49);
      if ((v52 & 1) == 0)
      {
        v60 = 0;
        v61 = v51;
        goto LABEL_23;
      }
      v50 = v51;
    }
    v41 = swift_bridgeObjectRelease(v50);
    goto LABEL_21;
  }
  v61 = v45;
  v41 = swift_bridgeObjectRelease(v45);
  v60 = 0;
LABEL_23:
  v27 = BookContentSelection.selectionCFI.getter(v41);
  v28 = v53;
  v29 = BookContentSelection.selectionText.getter(v27);
  v30 = v54;
  v55 = BookContentSelection.contextText.getter();
  if (v56)
    v31 = v55;
  else
    v31 = 0;
  if (v56)
    v32 = v56;
  else
    v32 = 0xE000000000000000;
  v33 = BookContentSelection.containingHighlightID.getter(v57);
  v34 = v58;
  swift_unknownObjectRelease(v65);
  sub_100010960(v66, &qword_1009D2B10);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v63 + 8))(v12, v64);
  v37 = v61;
  v35 = v62;
  v36 = v67;
  v38 = v60;
LABEL_30:
  *(_QWORD *)a3 = v27;
  *(_QWORD *)(a3 + 8) = v28;
  *(_QWORD *)(a3 + 16) = v29;
  *(_QWORD *)(a3 + 24) = v30;
  *(_QWORD *)(a3 + 32) = v31;
  *(_QWORD *)(a3 + 40) = v32;
  *(_QWORD *)(a3 + 48) = v33;
  *(_QWORD *)(a3 + 56) = v34;
  *(_QWORD *)(a3 + 64) = v35;
  *(_QWORD *)(a3 + 72) = v36;
  *(_QWORD *)(a3 + 80) = v37;
  *(_BYTE *)(a3 + 88) = v38;
  return result;
}

uint64_t sub_10020F80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v4 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BookContentSelection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v6, &qword_1009D2B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_unknownObjectRelease(a2);
    sub_100010960(a1, &qword_1009D2B10);
    sub_100010960((uint64_t)v6, &qword_1009D2B10);
    return 0;
  }
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v12 = BookContentSelection.intersectingHighlightIDs.getter(v11);
  v28[0] = v12;
  v13 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v14 = sub_100030B34((unint64_t *)&qword_1009D2B40, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = Collection.isNotEmpty.getter(v13, v14);
  swift_bridgeObjectRelease(v12);
  if ((v15 & 1) == 0)
  {
    swift_unknownObjectRelease(a2);
    sub_100010960(a1, &qword_1009D2B10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  v17 = BookContentSelection.intersectingHighlightIDs.getter(v16);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v26 = v7;
    v27 = a1;
    v25 = v17;
    v19 = (uint64_t *)(v17 + 40);
    do
    {
      v20 = *v19;
      v28[0] = *(v19 - 1);
      v28[1] = v20;
      swift_bridgeObjectRetain(v20);
      v21 = sub_10020FE88(v28);
      swift_bridgeObjectRelease(v20);
      if ((v21 & 1) != 0)
        break;
      v19 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease(v25);
    v7 = v26;
    a1 = v27;
  }
  else
  {
    swift_bridgeObjectRelease(v17);
  }
  v22 = BookContentSelection.intersectingHighlightIDs.getter(v23);
  swift_unknownObjectRelease(a2);
  sub_100010960(a1, &qword_1009D2B10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v22;
}

uint64_t sub_10020FA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  _QWORD v25[2];

  v8 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookContentSelection(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v10, &qword_1009D2B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_unknownObjectRelease(a2);
    sub_100010960(a1, &qword_1009D2B10);
    sub_100010960((uint64_t)v10, &qword_1009D2B10);
    return 0;
  }
  v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v16 = BookContentSelection.intersectingHighlightIDs.getter(v15);
  __chkstk_darwin(v16);
  v25[-4] = a3;
  v25[-3] = a4;
  v25[-2] = a2;
  sub_100373F8C((uint64_t (*)(_QWORD *, __n128))sub_100211590, (uint64_t)&v25[-6], v17);
  v19 = v18;
  v25[0] = v18;
  swift_bridgeObjectRetain(v18);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v21 = sub_100030B34((unint64_t *)&qword_1009D2B40, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = Collection.isNotEmpty.getter(v20, v21);
  swift_unknownObjectRelease(a2);
  sub_100010960(a1, &qword_1009D2B10);
  v23 = swift_bridgeObjectRelease(v25[0]);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v23);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease(v19);
    return 0;
  }
  return v19;
}

BOOL sub_10020FC94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[3];
  _QWORD v20[2];

  v8 = swift_allocObject(&unk_1008F4220, 24, 7);
  *(_QWORD *)(v8 + 16) = 0;
  v9 = (uint64_t *)(v8 + 16);
  v19[0] = a3;
  v19[1] = a4;
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3;
  v11 = 11;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) == 0)
    v11 = 7;
  v20[0] = 15;
  v20[1] = v11 | (v10 << 16);
  v12 = (_QWORD *)swift_allocObject(&unk_1008F4248, 40, 7);
  v12[2] = v8;
  v12[3] = a1;
  v12[4] = a2;
  swift_retain(v8);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D2B50);
  v14 = sub_1001F2108();
  v15 = sub_100030B34((unint64_t *)&unk_1009E7650, (uint64_t *)&unk_1009D2B50, (uint64_t)&protocol conformance descriptor for Range<A>);
  StringProtocol.enumerateSubstrings<A>(in:options:_:)(v20, 3, sub_10021162C, v12, &type metadata for String, v13, v14, v15);
  swift_release(v12);
  swift_beginAccess(v9, v19, 0, 0);
  v16 = *v9;
  swift_release(v8);
  return v16 >= a1 && v16 <= a2;
}

void sub_10020FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if (a2)
  {
    v14[0] = a1;
    v14[1] = a2;
    v12 = sub_1001F15BC();
    if ((Collection.isNotEmpty.getter(&type metadata for String, v12) & 1) != 0)
    {
      swift_beginAccess(a8 + 16, v14, 1, 0);
      v13 = *(_QWORD *)(a8 + 16) + 1;
      if (__OFADD__(*(_QWORD *)(a8 + 16), 1))
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(a8 + 16) = v13;
        if (v13 > a10)
          *a7 = 1;
      }
    }
  }
}

uint64_t sub_10020FE88(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  char v3;

  result = dispatch thunk of AnnotationProviding.highlightAnnotationDetail(for:)(*a1, a1[1]);
  if (result)
  {
    v2 = result;
    v3 = dispatch thunk of HighlightAnnotationDetailEntity.hasNote.getter();
    swift_release(v2);
    return v3 & 1;
  }
  return result;
}

void sub_10020FEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  void *v51;
  id v52;
  const void *v53;
  uint64_t v54;
  void *Strong;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void **aBlock;
  uint64_t v70;
  void (*v71)(uint64_t, void *);
  void *v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;

  v67 = a6;
  v68 = a8;
  v65 = a4;
  v66 = a7;
  v62 = a5;
  v63 = a3;
  v64 = a2;
  v9 = type metadata accessor for Locale(0);
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v57 - v13;
  v58 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v58 - 8);
  v16 = __chkstk_darwin(v58);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v57 - v19;
  v21 = sub_10004CFD4(&qword_1009D2A50);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  __chkstk_darwin(v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v21);
  v24 = *(unsigned __int8 *)(v22 + 80);
  v25 = (v24 + 16) & ~v24;
  v61 = swift_allocObject(&unk_1008F4068, v25 + v23, v24 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v61 + v25, (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
  static Locale.current.getter(v26);
  v27 = v58;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v58);
  v28 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v32 = v59;
  v31 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v12, v14, v60);
  String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v30, v12, "Cancel button", 13, 2);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v27);
  v35 = v62;
  swift_bridgeObjectRetain(v62);
  v36 = v63;
  swift_bridgeObjectRetain(v63);
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v39 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v37, v38, 1);

  v40 = swift_allocObject(&unk_1008F4090, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_100210E18;
  v41 = v61;
  *(_QWORD *)(v40 + 24) = v61;
  v42 = v41;
  swift_retain(v41);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v73 = sub_100210E7C;
  v74 = v40;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_1001EDBF0;
  v72 = &unk_1008F40A8;
  v44 = _Block_copy(&aBlock);
  swift_release(v74);
  v45 = (void *)objc_opt_self(UIAlertAction);
  v46 = objc_msgSend(v45, "actionWithTitle:style:handler:", v43, 1, v44);
  _Block_release(v44);

  objc_msgSend(v39, "addAction:", v46);
  v47 = v42;
  v48 = swift_allocObject(&unk_1008F40E0, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100210E18;
  *(_QWORD *)(v48 + 24) = v42;
  swift_retain(v42);
  v49 = v66;
  swift_bridgeObjectRetain(v66);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  v73 = sub_100210E84;
  v74 = v48;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_1001EDBF0;
  v72 = &unk_1008F40F8;
  v51 = _Block_copy(&aBlock);
  swift_release(v74);
  v52 = objc_msgSend(v45, "actionWithTitle:style:handler:", v50, 2, v51);
  v53 = v51;
  v54 = v68;
  _Block_release(v53);

  objc_msgSend(v39, "addAction:", v52);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v54 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
  if (Strong)
  {
    v56 = Strong;
    objc_msgSend(Strong, "assetViewController:presentViewController:animated:completion:", v54, v39, 1, 0);
    swift_release(v47);

    swift_unknownObjectRelease(v56);
  }
  else
  {
    swift_release(v47);

  }
}

uint64_t sub_1002103DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v2 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BookContentSelection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v4, &qword_1009D2B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010960(a1, &qword_1009D2B10);
    sub_100010960((uint64_t)v4, &qword_1009D2B10);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = BookContentSelection.selectionText.getter(v9);
  v12 = v11;
  v18[0] = v10;
  v18[1] = v11;
  v13 = sub_1001F15BC();
  v14 = Collection.isNotEmpty.getter(&type metadata for String, v13);
  swift_bridgeObjectRelease(v12);
  if ((v14 & 1) == 0)
  {
    sub_100010960(a1, &qword_1009D2B10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v16 = BookContentSelection.selectionText.getter(v15);
  sub_100010960(a1, &qword_1009D2B10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_100210584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookContentSelection(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v10, &qword_1009D2B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010960(a1, &qword_1009D2B10);
    result = sub_100010960((uint64_t)v10, &qword_1009D2B10);
LABEL_6:
    v36 = 0;
    v24 = 0;
    v26 = 0;
    v31 = 0;
    v33 = 0;
    v37 = 0;
    goto LABEL_7;
  }
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17 = BookContentSelection.selectionText.getter(v16);
  v19 = v18;
  v20 = sub_10020FC94(1, 3, v17, v18);
  v21 = swift_bridgeObjectRelease(v19);
  if (!v20)
  {
    sub_100010960(a1, &qword_1009D2B10);
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  v22 = BookContentSelection.selectionCFI.getter(v21);
  v40 = v4;
  v41 = v22;
  v24 = v23;
  v25 = BookContentSelection.selectionRects.getter();
  v39 = v5;
  v26 = v25;
  v42 = BookContentSelection.selectionText.getter(v25);
  v43 = v27;
  static CharacterSet.whitespacesAndNewlines.getter(v28);
  v29 = sub_1001F2108();
  v30 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v29);
  v38 = a1;
  v31 = v30;
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
  v34 = swift_bridgeObjectRelease(v43);
  v35 = BookContentSelection.isAnnotation.getter(v34);
  sub_100010960(v38, &qword_1009D2B10);
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v36 = v41;
  v37 = (v35 & 1) == 0;
LABEL_7:
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v31;
  *(_QWORD *)(a2 + 32) = v33;
  *(_BYTE *)(a2 + 40) = v37;
  return result;
}

double sub_1002107F4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  double result;
  uint64_t v35;
  int v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;
  unsigned __int8 v60;
  _OWORD v61[2];
  uint64_t v62;
  unsigned __int8 v63;
  _OWORD v64[2];
  uint64_t v65;
  _OWORD v66[5];
  uint64_t v67;
  unsigned __int8 v68;

  v53 = a8;
  v17 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  v57 = sub_1002103DC((uint64_t)v19);
  v56 = v20;
  v21 = swift_unknownObjectRetain(a3);
  v55 = sub_10020EF00(v21, a5, a7);
  v54 = v22;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  sub_100210584((uint64_t)v19, (uint64_t)v58);
  v52 = v58[0];
  v51 = v58[1];
  v50 = v59;
  v49 = v60;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  swift_unknownObjectRetain(a3);
  v23 = a2;
  sub_10020EFB8((uint64_t)v19, v23, a3, a5, a7, (uint64_t)v61);
  v48 = v61[0];
  v47 = v61[1];
  v46 = v62;
  v45 = v63;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  swift_unknownObjectRetain(a3);
  sub_10020F238((uint64_t)v19, v23, a3, a5, a7, (uint64_t *)v64);
  v44 = v64[0];
  v43 = v64[1];
  v42 = v65;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  swift_unknownObjectRetain(a4);
  v24 = v53;
  sub_10020F48C((uint64_t)v19, a4, (uint64_t)v66);
  v41 = v66[0];
  v40 = v66[1];
  v39 = v66[2];
  v38 = v66[3];
  v37 = v66[4];
  v25 = v67;
  v36 = v68;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  swift_unknownObjectRetain(a4);
  v26 = sub_10020F80C((uint64_t)v19, a4);
  LOBYTE(a5) = v27;
  sub_10000B5E4(a1, (uint64_t)v19, &qword_1009D2B10);
  v28 = sub_10020FA8C((uint64_t)v19, a4, a6, v24);
  sub_100010960(a1, &qword_1009D2B10);
  v29 = v56;
  *(_QWORD *)a9 = v57;
  *(_QWORD *)(a9 + 8) = v29;
  v30 = v54;
  *(_QWORD *)(a9 + 16) = v55;
  *(_QWORD *)(a9 + 24) = v30;
  v31 = v51;
  *(_OWORD *)(a9 + 32) = v52;
  *(_OWORD *)(a9 + 48) = v31;
  *(_QWORD *)(a9 + 64) = v50;
  *(_BYTE *)(a9 + 72) = v49;
  v32 = v47;
  *(_OWORD *)(a9 + 80) = v48;
  *(_OWORD *)(a9 + 96) = v32;
  *(_QWORD *)(a9 + 112) = v46;
  *(_BYTE *)(a9 + 120) = v45;
  v33 = v43;
  *(_OWORD *)(a9 + 128) = v44;
  *(_OWORD *)(a9 + 144) = v33;
  *(_QWORD *)(a9 + 160) = v42;
  *(_OWORD *)(a9 + 168) = v41;
  *(_OWORD *)(a9 + 184) = v40;
  *(_OWORD *)(a9 + 200) = v39;
  *(_OWORD *)(a9 + 216) = v38;
  result = *(double *)&v37;
  *(_OWORD *)(a9 + 232) = v37;
  *(_QWORD *)(a9 + 248) = v25;
  *(_BYTE *)(a9 + 256) = v36;
  *(_QWORD *)(a9 + 264) = v26;
  *(_BYTE *)(a9 + 272) = a5;
  *(_QWORD *)(a9 + 280) = v28;
  return result;
}

void *sub_100210BF4@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D2B10);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v15[-v8];
  Strong = swift_weakLoadStrong(v1 + 32);
  if (Strong)
  {
    v11 = Strong;
    BookContentModule.selection.getter();
    swift_release(v11);
  }
  else
  {
    v12 = type metadata accessor for BookContentSelection(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  v13 = v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
  swift_beginAccess(v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, v16, 0, 0);
  sub_10000B5E4(v13, (uint64_t)v6, &qword_1009D2B10);
  swift_beginAccess(v13, v15, 33, 0);
  sub_100211310((uint64_t)v9, v13);
  swift_endAccess(v15);
  sub_100208968((uint64_t)v6);
  sub_100010960((uint64_t)v9, &qword_1009D2B10);
  sub_100010960((uint64_t)v6, &qword_1009D2B10);
  return memcpy(a1, (const void *)(v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state), 0x120uLL);
}

uint64_t sub_100210D60(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100210D88(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100210DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4(&qword_1009D2A50);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100210E18(char a1)
{
  sub_10004CFD4(&qword_1009D2A50);
  return sub_1002B4148(a1);
}

uint64_t sub_100210E58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100210E7C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002B4188(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_100210E84(uint64_t a1)
{
  uint64_t v1;

  return sub_1002B41AC(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

_QWORD *sub_100210E8C(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

void sub_100210EB4(uint64_t a1)
{
  uint64_t *v1;

  sub_10020FEDC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_100210EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    return sub_100210F38(a10, a11, a12);
  }
  return result;
}

uint64_t sub_100210F38(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100209420(a1, a2);
  return a1;
}

uint64_t sub_100210F50(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 88);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v4);
  return a1;
}

uint64_t sub_100210FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a8);
    return sub_10021101C(a10, a11, a12);
  }
  return result;
}

uint64_t sub_10021101C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100209510(a1, a2);
  return a1;
}

uint64_t sub_100211034(uint64_t a1)
{
  sub_100210F38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_100211064(uint64_t a1)
{
  sub_10021101C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_100211094()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1002110BC()
{
  return sub_100211160((uint64_t)&unk_1008F4180, (void (*)(uint64_t))sub_1002110D4);
}

uint64_t *sub_1002110D8(uint64_t *a1)
{
  sub_10021110C(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_10021110C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

double sub_10021114C()
{
  return sub_100211160((uint64_t)&unk_1008F41D0, (void (*)(uint64_t))sub_1002110D4);
}

double sub_100211160(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8) + 80);
  return sub_10020CAF0(*(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a1, a2);
}

uint64_t sub_1002111BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for SelectionInfo.ID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10021125C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8) + 80);
  return sub_10020CBD0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t *sub_1002112A4(uint64_t *a1)
{
  sub_1002112D4(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_1002112D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain(a3);
    swift_retain(a5);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100211310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D2B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_100211358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2B20;
  if (!qword_1009D2B20)
  {
    v1 = type metadata accessor for BookContentSelection(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BookContentSelection, v1);
    atomic_store(result, (unint64_t *)&qword_1009D2B20);
  }
  return result;
}

uint64_t sub_1002113A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 112);
  v20 = *(_QWORD *)(a1 + 136);
  v21 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_QWORD *)(a1 + 144);
  v17 = *(_QWORD *)(a1 + 160);
  v29 = *(_QWORD *)(a1 + 176);
  v30 = *(_QWORD *)(a1 + 168);
  v27 = *(_QWORD *)(a1 + 192);
  v28 = *(_QWORD *)(a1 + 184);
  v25 = *(_QWORD *)(a1 + 208);
  v26 = *(_QWORD *)(a1 + 200);
  v23 = *(_QWORD *)(a1 + 224);
  v24 = *(_QWORD *)(a1 + 216);
  v16 = *(_OWORD *)(a1 + 232);
  v10 = *(_QWORD *)(a1 + 248);
  v8 = *(_BYTE *)(a1 + 256);
  v22 = *(_QWORD *)(a1 + 264);
  v31 = *(_QWORD *)(a1 + 280);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(v2);
  sub_100211518(v3, v4, v5, v6, v7);
  sub_100211518(v15, v14, v13, v12, v11);
  sub_100211554(v21, v20, v19, v18, v17);
  sub_100210FAC(v30, v29, v28, v27, v26, v25, v24, v23, v16, *((uint64_t *)&v16 + 1), v10, v8);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v31);
  return a1;
}

uint64_t sub_100211518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_100211554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a4)
  {
    swift_release(a5);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_100211590(_QWORD *a1)
{
  return sub_10020FE88(a1) & 1;
}

uint64_t sub_1002115B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002115D4()
{
  uint64_t v0;

  return dispatch thunk of AssetActivityItemProviding.makeActivityViewController()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002115F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100211608()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10021162C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t *v7;

  sub_10020FDF4(a1, a2, a3, a4, a5, a6, a7, v7[2], v7[3], v7[4]);
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV11RemoveNotesVMa()
{
  return &_s26ContentSelectionInteractorC5StateV11RemoveNotesVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVMa()
{
  return &_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVN;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV4CopyVMa()
{
  return &_s26ContentSelectionInteractorC5StateV4CopyVN;
}

_QWORD *_s26ContentSelectionInteractorC5StateV13FindSelectionVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV13FindSelectionVwxx(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for OpenTabBarItemError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *_s26ContentSelectionInteractorC5StateV13FindSelectionVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenTabBarItemError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenTabBarItemError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV13FindSelectionVMa()
{
  return &_s26ContentSelectionInteractorC5StateV13FindSelectionVN;
}

uint64_t sub_100211940@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "objectForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_10004C7B4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = type metadata accessor for Date(0);
    v6 = swift_dynamicCast(a1, v10, (char *)&type metadata for Any + 8, v5, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D04E0);
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_100211A84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  NSString v9;
  uint64_t v11;

  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_10000B5E4(a1, (uint64_t)v4, &qword_1009D7440);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setObject:forKey:", isa, v9);

  swift_unknownObjectRelease(isa);
  return sub_100010960(a1, &qword_1009D7440);
}

uint64_t sub_100211BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  void *Strong;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v17;
  uint64_t v22;
  id v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v2 = sub_10004CFD4(&qword_1009D2BD8);
  __chkstk_darwin(v2);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocationType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v32[-v10];
  swift_beginAccess(a1, v33, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    goto LABEL_5;

  v13 = sub_1002134FC();
  if (!v14)
    goto LABEL_5;
  LocationType.init(rawValue:)(v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
    v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 88))(v9, v5);
    if (v17 == enum case for LocationType.postReading(_:)
      || v17 == enum case for LocationType.fromContextualActionSheet(_:)
      || v17 == enum case for LocationType.fromReadingNowFinish(_:)
      || v17 == enum case for LocationType.fromAddToFinishCollection(_:)
      || v17 == enum case for LocationType.fromLibraryFinish(_:))
    {
      swift_beginAccess(a1, v32, 0, 0);
      v22 = swift_unknownObjectWeakLoadStrong(a1);
      v15 = (void *)v22;
      if (v22)
      {
        v23 = *(id *)(v22 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

        v24 = 0xD00000000000002ALL;
        v25 = "appStoreReview.markedBookAsFinishedEnabled";
LABEL_26:
        v27 = (unint64_t)(v25 - 32) | 0x8000000000000000;
LABEL_27:
        LOBYTE(v15) = sub_10002903C(v24, v27, (uint64_t)v23);

      }
    }
    else
    {
      if (v17 != enum case for LocationType.postPurchase(_:))
      {
        if (v17 == enum case for LocationType.postWTR(_:))
        {
          swift_beginAccess(a1, v32, 0, 0);
          v28 = swift_unknownObjectWeakLoadStrong(a1);
          v15 = (void *)v28;
          if (!v28)
            goto LABEL_28;
          v23 = *(id *)(v28 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

          v29 = "appStoreReview.addingToWTREnabled";
        }
        else
        {
          if (v17 == enum case for LocationType.postReadingGoalChange(_:))
          {
            swift_beginAccess(a1, v32, 0, 0);
            v30 = swift_unknownObjectWeakLoadStrong(a1);
            v15 = (void *)v30;
            if (!v30)
              goto LABEL_28;
            v23 = *(id *)(v30 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

            v24 = 0xD00000000000002DLL;
            v25 = "appStoreReview.customizingReadingGoalsEnabled";
            goto LABEL_26;
          }
          if (v17 != enum case for LocationType.postRatingAContent(_:))
          {
            v15 = *(void **)(v6 + 8);
            ((void (*)(_BYTE *, uint64_t))v15)(v11, v5);
            ((void (*)(_BYTE *, uint64_t))v15)(v9, v5);
            LOBYTE(v15) = 0;
            return v15 & 1;
          }
          swift_beginAccess(a1, v32, 0, 0);
          v31 = swift_unknownObjectWeakLoadStrong(a1);
          v15 = (void *)v31;
          if (!v31)
            goto LABEL_28;
          v23 = *(id *)(v31 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

          v29 = "appStoreReview.rateContentEnabled";
        }
        v27 = (unint64_t)(v29 - 32) | 0x8000000000000000;
        v24 = 0xD000000000000021;
        goto LABEL_27;
      }
      swift_beginAccess(a1, v32, 0, 0);
      v26 = swift_unknownObjectWeakLoadStrong(a1);
      v15 = (void *)v26;
      if (v26)
      {
        v23 = *(id *)(v26 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

        v24 = 0xD00000000000001ELL;
        v25 = "appStoreReview.purchaseEnabled";
        goto LABEL_26;
      }
    }
LABEL_28:
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
    return v15 & 1;
  }
  sub_100010960((uint64_t)v4, &qword_1009D2BD8);
LABEL_5:
  LOBYTE(v15) = 1;
  return v15 & 1;
}

void sub_100211FB0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  unint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD aBlock[5];
  uint64_t v80;
  char v81[24];
  char v82[32];

  v69 = a5;
  v74 = a4;
  v7 = sub_10004CFD4(&qword_1009D2BD8);
  __chkstk_darwin(v7);
  v70 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocationType(0);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  v10 = *(_QWORD *)(v71 + 64);
  v11 = __chkstk_darwin(v9);
  v67 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v68 = (char *)&v64 - v12;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for DispatchTime(0);
  v19 = *(_QWORD *)(v73 - 8);
  v20 = __chkstk_darwin(v73);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v64 - v23;
  v25 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a3 + 16;
  swift_beginAccess(v28, v82, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v28);
  if (Strong)
  {
    v30 = (void *)Strong;
    Date.init()(Strong);
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v27, 0, 1, v31);
    sub_100211A84((uint64_t)v27);

  }
  if (a1)
  {
    v32 = a1;
    if (!objc_msgSend(v32, "BOOLValue"))
    {

      return;
    }
    v64 = v32;
    swift_beginAccess(v28, v81, 0, 0);
    v33 = swift_unknownObjectWeakLoadStrong(v28);
    if (v33)
    {
      v34 = (void *)v33;
      v35 = *(id *)(v33 + OBJC_IVAR___BKAppStoreReviewManager_sharedStoreReview);

      objc_msgSend(v35, "didAttemptPromptReview");
    }
    v36 = sub_100059BB4();
    v66 = static OS_dispatch_queue.main.getter(v36);
    static DispatchTime.now()();
    objc_msgSend((id)objc_opt_self(BSUINoticeViewController), "noticeTotalDuration");
    + infix(_:_:)(v22, v37 + 0.3);
    v65 = *(void (**)(char *, uint64_t))(v19 + 8);
    v38 = v73;
    v65(v22, v73);
    v39 = swift_allocObject(&unk_1008F4530, 24, 7);
    v40 = v74;
    *(_QWORD *)(v39 + 16) = v74;
    aBlock[4] = sub_1002134C8;
    v80 = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F4548;
    v41 = _Block_copy(aBlock);
    v42 = v80;
    v43 = v40;
    v44 = swift_release(v42);
    static DispatchQoS.unspecified.getter(v44);
    aBlock[0] = _swiftEmptyArrayStorage;
    v45 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v46 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v47 = sub_100065324();
    v48 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v46, v47, v78, v45);
    v49 = (void *)v66;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v24, v18, v15, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v15, v48);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v18, v76);
    v65(v24, v38);
    swift_beginAccess(v28, aBlock, 0, 0);
    v50 = (void *)swift_unknownObjectWeakLoadStrong(v28);
    if (v50)
    {

      v51 = sub_1002134FC();
      if (v52)
      {
        v53 = (uint64_t)v70;
        LocationType.init(rawValue:)(v51);
        v55 = v71;
        v54 = v72;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v53, 1, v72) == 1)
        {

          sub_100010960(v53, &qword_1009D2BD8);
          return;
        }
        v56 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
        v57 = v68;
        v56(v68, v53, v54);
        v58 = v69;
        if (v69)
        {
          v59 = v67;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v67, v57, v54);
          v60 = *(unsigned __int8 *)(v55 + 80);
          v61 = (v60 + 16) & ~v60;
          v62 = swift_allocObject(&unk_1008F4580, v61 + v10, v60 | 7);
          v56((char *)(v62 + v61), (uint64_t)v59, v54);
          v63 = v58;
          BATracker.transaction(_:)(sub_10021381C, v62);

          swift_release(v62);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
          return;
        }
        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
      }
    }

  }
}

uint64_t sub_100212590(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v21[2];

  v3 = type metadata accessor for LocationType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationData(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  LocationData.init(locationType:)(v6);
  v11 = sub_10004CFD4(&qword_1009D2438);
  v12 = type metadata accessor for DataEventTrait(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v11, v15 + *(_QWORD *)(v13 + 72), v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10070CCA0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v16 + v15, enum case for DataEventTrait.onlyOnce(_:), v12);
  v17 = sub_100008DB0(&qword_1009D2BE0, (uint64_t (*)(uint64_t))&type metadata accessor for LocationData, (uint64_t)&protocol conformance descriptor for LocationData);
  AccessTracker.push<A>(data:traits:file:line:)(v10, v16, 0xD000000000000063, 0x80000001007B7670, 188, v7, v17);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = type metadata accessor for AppReviewPromptRequestEvent(0);
  v19 = sub_100008DB0(&qword_1009D2BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AppReviewPromptRequestEvent, (uint64_t)&protocol conformance descriptor for AppReviewPromptRequestEvent);
  memset(v21, 0, sizeof(v21));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v18, 0, v21, 0, 0, v18, v19);
  return sub_100010960((uint64_t)v21, (uint64_t *)&unk_1009D04E0);
}

uint64_t sub_1002127C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  _BYTE v21[40];
  __int128 v22;
  __int128 v23;

  v2 = v1;
  v4 = type metadata accessor for LocationType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = objc_msgSend(a1, "userInfo");
  if (!v8)
  {
    v22 = 0u;
    v23 = 0u;
    return sub_100010960((uint64_t)&v22, (uint64_t *)&unk_1009D04E0);
  }
  v9 = v8;
  v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v11 = (void *)BLDownloadQueuePropertyIsPurchase;
  v20 = BLDownloadQueuePropertyIsPurchase;
  type metadata accessor for BLDownloadQueueProperty(0);
  v13 = v12;
  v14 = sub_100008DB0(&qword_1009D0CB8, (uint64_t (*)(uint64_t))type metadata accessor for BLDownloadQueueProperty, (uint64_t)&unk_10070F010);
  v15 = v11;
  AnyHashable.init<A>(_:)(&v20, v13, v14);
  if (*(_QWORD *)(v10 + 16) && (v16 = sub_1000561E8((uint64_t)v21), (v17 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v10 + 56) + 32 * v16, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v10);
  sub_1000569AC((uint64_t)v21);
  if (!*((_QWORD *)&v23 + 1))
    return sub_100010960((uint64_t)&v22, (uint64_t *)&unk_1009D04E0);
  result = swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
  {
    if ((v21[0] & 1) != 0)
    {
      v19 = sub_10002903C(0xD00000000000001ELL, 0x80000001007B7630, *(_QWORD *)(v2 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig));
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocationType.postPurchase(_:), v4);
      sub_100212E04(v19 & 1, (uint64_t)v7);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return result;
}

void sub_100212A6C(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;

  v11 = type metadata accessor for LocationType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)&a1[OBJC_IVAR___BKAppStoreReviewManager_remoteConfig];
  v16 = a3;
  v17 = a1;
  LOBYTE(a5) = sub_10002903C(a4, a5, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *a6, v11);
  sub_100212E04(a5 & 1, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

}

uint64_t sub_100212B60(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t *v17;
  char *v18;
  char v19;
  _QWORD v21[2];
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D2BD8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "userInfo");
  if (!v11)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_11:
    v17 = (uint64_t *)&unk_1009D04E0;
    v18 = (char *)&v23;
    return sub_100010960((uint64_t)v18, v17);
  }
  v12 = v11;
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v21[0] = 0xD00000000000001CLL;
  v21[1] = 0x80000001007B7530;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_1000561E8((uint64_t)&v22), (v15 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  sub_1000569AC((uint64_t)&v22);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_11;
  result = swift_dynamicCast(&v22, &v23, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((result & 1) == 0)
    return result;
  LocationType.init(rawValue:)(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v19 = sub_10002903C(0xD00000000000002ALL, 0x80000001007B7550, *(_QWORD *)(v2 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig));
    sub_100212E04(v19 & 1, (uint64_t)v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v17 = &qword_1009D2BD8;
  v18 = v6;
  return sub_100010960((uint64_t)v18, v17);
}

uint64_t sub_100212E04(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocationType(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  result = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v17 = sub_100059BB4();
    v28 = static OS_dispatch_queue.main.getter(v17);
    v18 = swift_allocObject(&unk_1008F4468, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v3);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v12);
    v19 = *(unsigned __int8 *)(v13 + 80);
    v20 = (v19 + 24) & ~v19;
    v21 = swift_allocObject(&unk_1008F4490, v20 + v14, v19 | 7);
    *(_QWORD *)(v21 + 16) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21 + v20, v16, v12);
    aBlock[4] = sub_100213434;
    v33 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F44A8;
    v22 = _Block_copy(aBlock);
    v23 = swift_release(v33);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v26 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v6, v24);
    v27 = (void *)v28;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  }
  return result;
}

void sub_100213084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  _BYTE v27[24];

  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = (void *)Strong;
    Date.init()(Strong);
    v9 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
    v10 = sub_100211A84((uint64_t)v6);
    LocationType.rawValue.getter(v10);
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setObject:forKey:", v14, v15);

    v16 = sub_10004CFD4(&qword_1009D2BC8);
    v17 = type metadata accessor for LocationType(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject(v16, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
    *(_OWORD *)(v21 + 16) = xmmword_10070CCA0;
    v22 = v21 + v20;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v22, enum case for LocationType.postReading(_:), v17);
    v23 = sub_100008DB0(&qword_1009D2BD0, (uint64_t (*)(uint64_t))&type metadata accessor for LocationType, (uint64_t)&protocol conformance descriptor for LocationType);
    v24 = dispatch thunk of static Equatable.== infix(_:_:)(v22, a2, v17, v23);
    swift_setDeallocating(v21);
    swift_arrayDestroy(v22, *(_QWORD *)(v21 + 16), v17);
    swift_deallocClassInstance(v21, 32, 7);
    if ((v24 & 1) == 0)
    {
      v25 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
      objc_msgSend(v25, "attemptToPresentStoreReview");

      v8 = v25;
    }

  }
}

id AppStoreReviewManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for AppStoreReviewRemoteConfig()
{
  return &type metadata for AppStoreReviewRemoteConfig;
}

ValueMetadata *type metadata accessor for AppStoreReviewDataStorage()
{
  return &type metadata for AppStoreReviewDataStorage;
}

uint64_t sub_10021339C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002133C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for LocationType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100213434()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocationType(0) - 8) + 80);
  sub_100213084(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100213464()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100213498(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100211FB0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1002134A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002134C8()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(SKStoreReviewController), "requestReviewInScene:", *(_QWORD *)(v0 + 16));
}

uint64_t sub_1002134FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  NSString v5;
  id v6;
  unsigned int *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[32];

  v0 = type metadata accessor for LocationType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "objectForKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_10004C7B4((uint64_t)&v13, (uint64_t)v15);
  sub_10000B5E4((uint64_t)v15, (uint64_t)&v13, (uint64_t *)&unk_1009D04E0);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_100010960((uint64_t)&v13, (uint64_t *)&unk_1009D04E0);
LABEL_9:
    sub_10004C7B4((uint64_t)v15, (uint64_t)&v13);
    if (*((_QWORD *)&v14 + 1))
    {
      if (swift_dynamicCast(&v12, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6))return v12;
      else
        return 0;
    }
    else
    {
      v9 = &v13;
LABEL_14:
      sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009D04E0);
      return 0;
    }
  }
  if ((swift_dynamicCast(&v12, &v13, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    goto LABEL_9;
  switch(v12)
  {
    case 0:
      v7 = (unsigned int *)&enum case for LocationType.postReading(_:);
      break;
    case 1:
      v7 = (unsigned int *)&enum case for LocationType.fromContextualActionSheet(_:);
      break;
    case 2:
      v7 = (unsigned int *)&enum case for LocationType.fromReadingNowFinish(_:);
      break;
    case 3:
      v7 = (unsigned int *)&enum case for LocationType.fromLibraryFinish(_:);
      break;
    case 4:
      v7 = (unsigned int *)&enum case for LocationType.fromAddToFinishCollection(_:);
      break;
    case 5:
      v7 = (unsigned int *)&enum case for LocationType.postPurchase(_:);
      break;
    case 6:
      v7 = (unsigned int *)&enum case for LocationType.postWTR(_:);
      break;
    case 7:
      v7 = (unsigned int *)&enum case for LocationType.postReadingGoalChange(_:);
      break;
    case 8:
      v7 = (unsigned int *)&enum case for LocationType.postRatingAContent(_:);
      break;
    default:
      v9 = (__int128 *)v15;
      goto LABEL_14;
  }
  v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *v7, v0);
  v8 = LocationType.rawValue.getter(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D04E0);
  return v8;
}

uint64_t sub_1002137BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for LocationType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021381C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocationType(0) - 8) + 80);
  return sub_100212590(a1, v1 + ((v3 + 16) & ~v3));
}

NSString sub_10021399C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D2BF0 = (uint64_t)result;
  return result;
}

NSString sub_1002139D0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D2BF8 = (uint64_t)result;
  return result;
}

NSString sub_100213A04()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D2C00 = (uint64_t)result;
  return result;
}

NSString sub_100213A38()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D2C08 = (uint64_t)result;
  return result;
}

NSString sub_100213A6C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D2C10 = (uint64_t)result;
  return result;
}

_QWORD *sub_100213AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54[24];

  v1 = type metadata accessor for Location(0);
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  __chkstk_darwin(v1);
  v49 = (uint64_t *)((char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for PageLocation(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SpreadPaginationEntity.Column(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v45 - v10;
  v12 = type metadata accessor for SpreadPaginationEntity(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v0;
  v19 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, v54, 0, 0);
  sub_10000B5E4(v19, (uint64_t)v18, (uint64_t *)&unk_1009E8E70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12))
  {
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009E8E70);
    v20 = sub_10004CFD4(&qword_1009D2F30);
    v21 = (_QWORD *)swift_allocObject(v20, 40, 7);
    *((_OWORD *)v21 + 1) = xmmword_10070CCA0;
    v22 = v49;
    v23 = CurrentValueSubject.value.getter(v49);
    v24 = Location.pageOffset.getter(v23);
    (*(void (**)(_QWORD *, uint64_t))(v50 + 8))(v22, v51);
    v21[4] = v24;
  }
  else
  {
    v52 = v6;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v25 = sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009E8E70);
    v26 = SpreadPaginationEntity.columns.getter(v25);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v28 = v26 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
      v29 = *(_QWORD *)(v52 + 72);
      v50 = *(_QWORD *)(v52 + 16);
      v51 = v29;
      LODWORD(v49) = enum case for SpreadPaginationEntity.Column.location(_:);
      v46 = v26;
      v30 = swift_bridgeObjectRetain(v26);
      v21 = _swiftEmptyArrayStorage;
      v31 = v47;
      v32 = v48;
      v33 = v53;
      do
      {
        v35 = (void (*)(char *, char *, uint64_t))v50;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v50)(v11, v28, v5, v30);
        v35(v9, v11, v5);
        v36 = v11;
        v37 = v52;
        v38 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v9, v5);
        if (v38 == (_DWORD)v49)
        {
          (*(void (**)(char *, uint64_t))(v37 + 96))(v9, v5);
          v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v33, v9, v32);
          v40 = v31;
          v41 = PageLocation.pageOffset.getter(v39);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v53, v32);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v5);
          v11 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_1005B0580(0, v21[2] + 1, 1, v21);
          v43 = v21[2];
          v42 = v21[3];
          if (v43 >= v42 >> 1)
            v21 = sub_1005B0580((_QWORD *)(v42 > 1), v43 + 1, 1, v21);
          v21[2] = v43 + 1;
          v21[v43 + 4] = v41;
          v31 = v47;
          v32 = v48;
        }
        else
        {
          v34 = *(void (**)(char *, uint64_t))(v37 + 8);
          v34(v9, v5);
          v34(v36, v5);
          v11 = v36;
        }
        v28 += v51;
        --v27;
        v33 = v53;
      }
      while (v27);
      swift_bridgeObjectRelease_n(v46, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v26);
      return _swiftEmptyArrayStorage;
    }
  }
  return v21;
}

uint64_t sub_100213EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  char *v78;
  char *v79;
  void (*v80)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t, uint64_t);
  char *v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  double v124;
  uint64_t v125;
  char *v126;
  void (*v127)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v131)(char *, char *, uint64_t);
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  void (*v140)(char *, uint64_t);
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  _QWORD v148[3];

  v3 = v2;
  v134 = a2;
  v147 = a1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009F0210);
  __chkstk_darwin(v4);
  v145 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v143 = (char *)&v131 - v8;
  v9 = type metadata accessor for HistorySnapshot(0, v7);
  __chkstk_darwin(v9);
  v144 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v11);
  v138 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v13);
  v141 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v15);
  v135 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v136 = (char *)&v131 - v18;
  v19 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v19);
  v133 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v137 = (uint64_t (*)(char *, char *, uint64_t))((char *)&v131 - v22);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v23);
  v140 = (void (*)(char *, uint64_t))((char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v27 = (char *)&v131 - v26;
  v28 = type metadata accessor for Location(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v146 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v139 = (char *)&v131 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v131 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v131 - v37;
  __chkstk_darwin(v39);
  v142 = (char *)&v131 - v40;
  v41 = type metadata accessor for CFIRange(0);
  __chkstk_darwin(v41);
  v43 = (char *)&v131 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Date(0);
  __chkstk_darwin(v44);
  v46 = (char *)&v131 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009D2EF0);
  __chkstk_darwin(v47);
  v49 = (char *)&v131 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread;
  v51 = type metadata accessor for SpreadPaginationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
  v52 = v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation;
  v53 = sub_10004CFD4(&qword_1009D2C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
  v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, 1, 1, v28);
  v55 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_readingLocationDatedCFISubject;
  v148[0] = 0;
  v148[1] = 0xE000000000000000;
  static Date.distantPast.getter(v54);
  v56 = v46;
  v57 = (_QWORD *)v29;
  DatedLocation.init(location:date:)(v148, v56, &type metadata for String);
  v58 = sub_10004CFD4(&qword_1009D2EC8);
  swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
  *(_QWORD *)(v3 + v55) = CurrentValueSubject.init(_:)(v49);
  v59 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
  *v59 = 0;
  v59[1] = 0;
  v60 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIRangeSubject;
  CFIRange.init(start:end:)(0, 0xE000000000000000, 0, 0xE000000000000000);
  v61 = sub_10004CFD4(&qword_1009D2EB8);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  *(_QWORD *)(v3 + v60) = CurrentValueSubject.init(_:)(v43);
  v62 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIUpdatesSubject;
  v148[0] = _swiftEmptyArrayStorage;
  v63 = sub_10004CFD4(&qword_1009D2EA8);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  *(_QWORD *)(v3 + v62) = CurrentValueSubject.init(_:)(v148);
  v64 = v147;
  sub_10000B5E4(v147, (uint64_t)v27, (uint64_t *)&unk_1009D23A0);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v65(v27, 1, v28) != 1)
  {
    v81 = v136;
    v131 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 32);
    v82 = v131(v38, v27, v28);
    v83 = (uint64_t)v137;
    Location.requestedAnchor.getter(v82);
    v84 = type metadata accessor for Location.AnchorRequest(0);
    v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48);
    v85 = v132(v83, 1, v84);
    sub_100010960(v83, &qword_1009F1BB0);
    v137 = (uint64_t (*)(char *, char *, uint64_t))v57[2];
    v86 = v137(v35, v38, v28);
    if (v85 == 1)
    {
      v87 = v38;
      v88 = (uint64_t)v81;
      Location.requestedCFI.getter(v86);
      v89 = (void (*)(char *, uint64_t))v57[1];
      v89(v35, v28);
      v90 = type metadata accessor for Location.CFIRequest(0);
      v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 48))(v88, 1, v90);
      v92 = sub_100010960(v88, &qword_1009D2F38);
      if (v91 == 1)
      {
        v89(v87, v28);
        v64 = v147;
        goto LABEL_3;
      }
      v97 = (uint64_t)v135;
      v38 = v87;
    }
    else
    {
      v89 = (void (*)(char *, uint64_t))v57[1];
      v92 = ((uint64_t (*)(char *, uint64_t))v89)(v35, v28);
      v97 = (uint64_t)v135;
    }
    Location.requestedCFI.getter(v92);
    v98 = type metadata accessor for Location.CFIRequest(0);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98) == 1)
    {
      v100 = sub_100010960(v97, &qword_1009D2F38);
    }
    else
    {
      v101 = Location.CFIRequest.location.getter();
      v102 = v97;
      v103 = v101;
      v105 = v104;
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v102, v98);
      v106 = String.cfiSpineIndex.getter(v103, v105);
      if ((v107 & 1) == 0)
      {
        v108 = v106;
        v109 = sub_10004CFD4(&qword_1009D2F18);
        v110 = v141;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v141, 1, 1, v109);
        v111 = sub_10004CFD4(&qword_1009D2AD0);
        v112 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56);
        v140 = v89;
        v113 = v138;
        v112(v138, 1, 1, v111);
        v68 = v142;
        Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v108, 0, v110, 0, 0, v103, v105, v113, 0.0, 0);
        v140(v38, v28);
        v64 = v147;
        v66 = v144;
        v94 = v145;
        v67 = v143;
LABEL_21:
        v96 = v57;
        v95 = (void (*)(char *, char *, uint64_t))v137;
        goto LABEL_22;
      }
      swift_bridgeObjectRelease(v105);
    }
    v67 = v143;
    v66 = v144;
    v114 = (uint64_t)v133;
    Location.requestedAnchor.getter(v100);
    v115 = v132(v114, 1, v84);
    v116 = sub_100010960(v114, &qword_1009F1BB0);
    v94 = v145;
    if (v115 == 1)
    {
      v144 = (char *)Location.documentOrdinal.getter(v116);
      v117 = sub_10004CFD4(&qword_1009D2F18);
      v118 = v141;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v141, 1, 1, v117);
      v119 = sub_10004CFD4(&qword_1009D2AD0);
      v120 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56);
      v140 = v89;
      v121 = v138;
      v120(v138, 1, 1, v119);
      v68 = v142;
      Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v144, 0, v118, 0, 0, 0, 0, v121, 0.0, 0);
      v140(v38, v28);
    }
    else
    {
      v68 = v142;
      v131(v142, v38, v28);
    }
    v64 = v147;
    goto LABEL_21;
  }
  sub_100010960((uint64_t)v27, (uint64_t *)&unk_1009D23A0);
LABEL_3:
  v67 = v143;
  v66 = v144;
  v68 = v142;
  v69 = (char *)v140;
  sub_10000B5E4(v64, (uint64_t)v140, (uint64_t *)&unk_1009D23A0);
  if (v65(v69, 1, v28) == 1)
  {
    v70 = sub_10004CFD4(&qword_1009D2F18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v141, 1, 1, v70);
    v71 = sub_10004CFD4(&qword_1009D2AD0);
    v72 = v138;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v138, 1, 1, v71);
    v73 = v28;
    v74 = v3;
    v75 = v67;
    v76 = v57;
    v77 = v66;
    v78 = v139;
    Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v134, 0, v141, 0, 0, 0, 0, v72, 0.0, 0);
    sub_100010960((uint64_t)v69, (uint64_t *)&unk_1009D23A0);
    v79 = v78;
    v66 = v77;
    v57 = v76;
    v67 = v75;
    v3 = v74;
    v28 = v73;
    v80 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v57[4];
  }
  else
  {
    v80 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v57[4];
    v93 = v139;
    v80(v139, (void (*)(_QWORD, _QWORD))v69, v28);
    v79 = v93;
  }
  v94 = v145;
  v80(v68, (void (*)(_QWORD, _QWORD))v79, v28);
  v95 = (void (*)(char *, char *, uint64_t))v57[2];
  v96 = v57;
LABEL_22:
  v122 = v146;
  v95(v146, v68, v28);
  v123 = sub_10004CFD4(&qword_1009D2ED8);
  swift_allocObject(v123, *(unsigned int *)(v123 + 48), *(unsigned __int16 *)(v123 + 52));
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject) = CurrentValueSubject.init(_:)(v122);
  v125 = type metadata accessor for HistorySnapshot.Info(0, v124);
  v126 = v68;
  v127 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56);
  v127(v67, 1, 1, v125);
  v127(v94, 1, 1, v125);
  HistorySnapshot.init(next:previous:)(v67, v94);
  v128 = sub_10004CFD4(&qword_1009D2E98);
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v129 = CurrentValueSubject.init(_:)(v66);
  sub_100010960(v64, (uint64_t *)&unk_1009D23A0);
  ((void (*)(char *, uint64_t))v96[1])(v126, v28);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject) = v129;
  return v3;
}

uint64_t sub_100214A08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  _QWORD v9[2];
  _BYTE v10[40];
  __int128 v11;
  __int128 v12;

  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_11:
    result = sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
    *(_QWORD *)a1 = 0;
    v8 = 1;
    goto LABEL_12;
  }
  v3 = v2;
  v9[0] = 0x6F69746365726964;
  v9[1] = 0xE90000000000006ELL;
  AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1000561E8((uint64_t)v10), (v5 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_1000569AC((uint64_t)v10);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_11;
  type metadata accessor for NavigationDirection(0);
  result = swift_dynamicCast(a1, &v11, (char *)&type metadata for Any + 8, v6, 6);
  if ((result & 1) == 0)
    *(_QWORD *)a1 = 0;
  v8 = result ^ 1;
LABEL_12:
  *(_BYTE *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_100214B18()
{
  uint64_t v0;

  sub_100010960(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, (uint64_t *)&unk_1009E8E70);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject));
  sub_100010960(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation, &qword_1009D2EE8);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, (uint64_t *)&unk_1009D23A0);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_readingLocationDatedCFISubject));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI
                                      + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIRangeSubject));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIUpdatesSubject));
  return v0;
}

uint64_t sub_100214BD8()
{
  uint64_t v0;

  sub_100214B18();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100214BFC()
{
  return type metadata accessor for CurrentLocationProvider(0);
}

uint64_t type metadata accessor for CurrentLocationProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D2C78;
  if (!qword_1009D2C78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CurrentLocationProvider);
  return result;
}

void sub_100214C40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  sub_10000AB68(319, &qword_1009D2C88, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_100214D24(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_10000AB68(319, (unint64_t *)&unk_1009D2CA0, (uint64_t (*)(uint64_t))&type metadata accessor for Location);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[6] = &unk_100712A88;
        v8[7] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[8] = (char *)&value witness table for Builtin.NativeObject + 64;
        swift_updateClassMetadata2(a1, 256, 9, v8, a1 + 80);
      }
    }
  }
}

void sub_100214D24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D2C90)
  {
    v2 = sub_100030B74(&qword_1009D2C98);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D2C90);
  }
}

BOOL sub_100214D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  _BYTE v9[24];

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess(v4, v9, 0, 0);
  sub_10000B5E4(v4, (uint64_t)v3, (uint64_t *)&unk_1009D23A0);
  v5 = type metadata accessor for Location(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_100010960((uint64_t)v3, (uint64_t *)&unk_1009D23A0);
  return v6;
}

uint64_t sub_100214E48()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_100214E70@<X0>(uint64_t a1@<X8>)
{
  return sub_100214E9C(&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation, &qword_1009D2EE8, a1);
}

uint64_t sub_100214E88@<X0>(uint64_t a1@<X8>)
{
  return sub_100214E9C(&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, (uint64_t *)&unk_1009E8E70, a1);
}

uint64_t sub_100214E9C@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  _BYTE v8[24];

  v6 = v3 + *a1;
  swift_beginAccess(v6, v8, 0, 0);
  return sub_10000B5E4(v6, a3, a2);
}

uint64_t sub_100214EF8(uint64_t a1, uint64_t a2)
{
  return sub_100214F58(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject, &qword_1009D2ED8, &qword_1009D2EE0);
}

uint64_t sub_100214F14()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_100214F3C(uint64_t a1, uint64_t a2)
{
  return sub_100214F58(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_readingLocationDatedCFISubject, &qword_1009D2EC8, &qword_1009D2ED0);
}

uint64_t sub_100214F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_10004CFD4(a4);
  v8 = sub_100030B34(a5, a4, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v7, v8);
}

uint64_t sub_100214FC4()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_100214FEC(uint64_t a1, uint64_t a2)
{
  return sub_100214F58(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIRangeSubject, &qword_1009D2EB8, &qword_1009D2EC0);
}

uint64_t sub_100215008()
{
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

uint64_t sub_100215040(uint64_t a1, uint64_t a2)
{
  return sub_100214F58(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIUpdatesSubject, &qword_1009D2EA8, &qword_1009D2EB0);
}

_QWORD *sub_10021505C@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

uint64_t sub_100215084(uint64_t a1, uint64_t a2)
{
  return sub_100214F58(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject, &qword_1009D2E98, &qword_1009D2EA0);
}

uint64_t sub_1002150A0(uint64_t a1, uint64_t a2)
{
  return sub_1002150E8(a1, a2, &qword_1009CDC90, &qword_1009D2BF8, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_1002139D0);
}

uint64_t sub_1002150C4(uint64_t a1, uint64_t a2)
{
  return sub_1002150E8(a1, a2, &qword_1009CDC88, &qword_1009D2BF0, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_10021399C);
}

uint64_t sub_1002150E8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a6;
  v23 = a5;
  v9 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D2E88);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (*a3 != -1)
    swift_once(a3, v22);
  NSNotificationCenter.publisher(for:object:)(*a4, v6);

  v18 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  Publisher.map<A>(_:)(v23, 0, v9, (char *)&type metadata for () + 8, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = sub_100030B34(&qword_1009D2E90, &qword_1009D2E88, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v20 = Publisher.eraseToAnyPublisher()(v13, v19);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v20;
}

uint64_t sub_100215298(uint64_t a1, uint64_t a2)
{
  return sub_1002150E8(a1, a2, &qword_1009CDC98, &qword_1009D2C00, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_100213A04);
}

uint64_t sub_1002152BC(uint64_t a1, uint64_t a2)
{
  return sub_1002150E8(a1, a2, &qword_1009CDCA0, &qword_1009D2C08, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_100213A38);
}

uint64_t sub_1002152E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D2E78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CDCA8 != -1)
    swift_once(&qword_1009CDCA8, sub_100213A6C);
  NSNotificationCenter.publisher(for:object:)(qword_1009D2C10, v0);

  type metadata accessor for NavigationDirection(0);
  v11 = v10;
  v12 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  Publisher.compactMap<A>(_:)(sub_100214A08, 0, v1, v11, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v13 = sub_100030B34(&qword_1009D2E80, &qword_1009D2E78, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v14 = Publisher.eraseToAnyPublisher()(v5, v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

uint64_t sub_100215490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t, __n128);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t result;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, __n128);
  __n128 v90;
  char v91;
  __n128 v92;
  char v93;
  __n128 v94;
  char *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, __n128);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[2];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v131 = a2;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v4);
  v112 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v122 = (uint64_t)&v107 - v7;
  v8 = type metadata accessor for Date(0);
  __chkstk_darwin(v8);
  v116 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for PageLocation(0);
  __chkstk_darwin(v115);
  v114 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D2EE8);
  __chkstk_darwin(v11);
  v117 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v113 = (char *)&v107 - v15;
  updated = type metadata accessor for UpdateReason(0, v14);
  v17 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v111 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v123 = (char *)&v107 - v20;
  __chkstk_darwin(v21);
  v124 = (char *)&v107 - v22;
  __chkstk_darwin(v23);
  v126 = (char *)&v107 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v107 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v107 - v29;
  v31 = type metadata accessor for Location(0);
  v130 = v31;
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v125 = (char *)&v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v107 - v35;
  v121 = v2;
  v119 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject);
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v107 - v35));
  v37 = sub_100008DB0(&qword_1009D2EF8, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  v127 = a1;
  v38 = dispatch thunk of static Equatable.== infix(_:_:)(v36, a1, v31, v37);
  v129 = v32;
  v39 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
  v120 = v36;
  v40 = v31;
  v41 = v17;
  v118 = v39;
  ((void (*)(char *, uint64_t))v39)(v36, v40);
  v128 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v128(v30, v131, updated);
  if ((v38 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v27, enum case for UpdateReason.locationFulfillment(_:), updated);
    v42 = sub_100008DB0(&qword_1009D2F00, (uint64_t (*)(uint64_t))&type metadata accessor for UpdateReason, (uint64_t)&protocol conformance descriptor for UpdateReason);
    dispatch thunk of RawRepresentable.rawValue.getter(&v136, updated, v42);
    dispatch thunk of RawRepresentable.rawValue.getter(&v132, updated, v42);
    v43 = v137;
    v44 = v133[0];
    if (v136 != v132 || v137 != v133[0])
    {
      v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v136, v137, v132, v133[0], 0);
      swift_bridgeObjectRelease(v43);
      v92 = swift_bridgeObjectRelease(v44);
      v46 = *(void (**)(char *, uint64_t, __n128))(v17 + 8);
      v46(v27, updated, v92);
      result = ((uint64_t (*)(char *, uint64_t))v46)(v30, updated);
      v50 = v131;
      v47 = v126;
      v48 = v127;
      v49 = v125;
      if ((v91 & 1) == 0)
        return result;
      goto LABEL_7;
    }
    v45 = swift_bridgeObjectRelease_n(v137, 2);
    v46 = *(void (**)(char *, uint64_t, __n128))(v17 + 8);
    v46(v27, updated, v45);
  }
  else
  {
    v46 = *(void (**)(char *, uint64_t, __n128))(v17 + 8);
  }
  v47 = v126;
  v48 = v127;
  v49 = v125;
  ((void (*)(char *, uint64_t))v46)(v30, updated);
  v50 = v131;
LABEL_7:
  v110 = v41;
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v51 = type metadata accessor for Logger(0);
  v52 = sub_100048F64(v51, (uint64_t)qword_1009F1A00);
  v53 = v130;
  v125 = *(char **)(v129 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v125)(v49, v48, v130);
  v54 = ((uint64_t (*)(char *, uint64_t, uint64_t))v128)(v47, v50, updated);
  v109 = v52;
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.info.getter(v55);
  v57 = os_log_type_enabled(v55, v56);
  v126 = (char *)v46;
  if (v57)
  {
    v58 = swift_slowAlloc(22, -1);
    v108 = swift_slowAlloc(64, -1);
    v136 = v108;
    *(_DWORD *)v58 = 136315394;
    v59 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v60 = dispatch thunk of CustomStringConvertible.description.getter(v53, v59);
    v62 = v61;
    v132 = sub_100040F58(v60, v61, &v136);
    v48 = v127;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133, v58 + 4, v58 + 12);
    v63 = swift_bridgeObjectRelease(v62);
    v118(v49, v130, v63);
    *(_WORD *)(v58 + 12) = 2080;
    v64 = sub_100008DB0(&qword_1009D2F08, (uint64_t (*)(uint64_t))&type metadata accessor for UpdateReason, (uint64_t)&protocol conformance descriptor for UpdateReason);
    v65 = dispatch thunk of CustomStringConvertible.description.getter(updated, v64);
    v67 = v66;
    v132 = sub_100040F58(v65, v66, &v136);
    v53 = v130;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133, v58 + 14, v58 + 22);
    v68 = swift_bridgeObjectRelease(v67);
    v46(v47, updated, v68);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "CurrentLocationProvider Updating #currentLoc to: %s  reason:%s", (uint8_t *)v58, 0x16u);
    v69 = v108;
    swift_arrayDestroy(v108, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    v70 = v58;
    v50 = v131;
    swift_slowDealloc(v70, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v118)(v49, v53);
    ((void (*)(char *, uint64_t))v46)(v47, updated);
  }

  v71 = Location.hasRequestedLocation.getter();
  v72 = v124;
  v73 = v121;
  if ((v71 & 1) == 0)
  {
    v74 = v114;
    v75 = Location.pageLocation.getter(v71);
    v76 = v116;
    Date.init()(v75);
    v77 = (uint64_t)v113;
    DatedLocation.init(location:date:)(v74, v76, v115);
    v78 = sub_10004CFD4(&qword_1009D2C98);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
    v79 = v117;
    sub_100025B3C(v77, v117, &qword_1009D2EE8);
    v80 = v73 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation;
    swift_beginAccess(v73 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation, &v136, 33, 0);
    sub_10000B558(v79, v80, &qword_1009D2EE8);
    swift_endAccess(&v136);
  }
  v81 = v120;
  ((void (*)(char *, uint64_t, uint64_t))v125)(v120, v48, v53);
  CurrentValueSubject.value.setter(v81);
  v82 = v73 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess(v73 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, &v136, 0, 0);
  v83 = v122;
  sub_10000B5E4(v82, v122, (uint64_t *)&unk_1009D23A0);
  v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v83, 1, v53);
  sub_100010960(v83, (uint64_t *)&unk_1009D23A0);
  v128(v72, v50, updated);
  if (v84 == 1)
    return ((uint64_t (*)(char *, uint64_t))v126)(v72, updated);
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v123, enum case for UpdateReason.userInteraction(_:), updated);
  v86 = sub_100008DB0(&qword_1009D2F00, (uint64_t (*)(uint64_t))&type metadata accessor for UpdateReason, (uint64_t)&protocol conformance descriptor for UpdateReason);
  dispatch thunk of RawRepresentable.rawValue.getter(&v132, updated, v86);
  dispatch thunk of RawRepresentable.rawValue.getter(&v134, updated, v86);
  v87 = v133[0];
  v88 = v135;
  v89 = (void (*)(char *, uint64_t, __n128))v126;
  if (v132 == v134 && v133[0] == v135)
  {
    v90 = swift_bridgeObjectRelease_n(v133[0], 2);
    v89(v123, updated, v90);
    ((void (*)(char *, uint64_t))v89)(v72, updated);
  }
  else
  {
    v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v132, v133[0], v134, v135, 0);
    swift_bridgeObjectRelease(v87);
    v94 = swift_bridgeObjectRelease(v88);
    v89(v123, updated, v94);
    result = ((uint64_t (*)(char *, uint64_t))v89)(v72, updated);
    if ((v93 & 1) == 0)
      return result;
  }
  v95 = v111;
  v96 = ((uint64_t (*)(char *, uint64_t, uint64_t))v128)(v111, v50, updated);
  v97 = Logger.logObject.getter(v96);
  v98 = static os_log_type_t.default.getter(v97);
  if (os_log_type_enabled(v97, v98))
  {
    v99 = (uint8_t *)swift_slowAlloc(12, -1);
    v100 = swift_slowAlloc(32, -1);
    v132 = v100;
    *(_DWORD *)v99 = 136315138;
    v101 = sub_100008DB0(&qword_1009D2F08, (uint64_t (*)(uint64_t))&type metadata accessor for UpdateReason, (uint64_t)&protocol conformance descriptor for UpdateReason);
    v102 = dispatch thunk of CustomStringConvertible.description.getter(updated, v101);
    v104 = v103;
    v134 = sub_100040F58(v102, v103, &v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, &v135, v99 + 4, v99 + 12);
    v105 = swift_bridgeObjectRelease(v104);
    ((void (*)(char *, uint64_t, __n128))v126)(v95, updated, v105);
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "CurrentLocationProvider #currentLoc cleared configurationChangeResumeLocation reason:%s", v99, 0xCu);
    swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v100, -1, -1);
    swift_slowDealloc(v99, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v89)(v95, updated);
  }

  v106 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v112, 1, 1, v130);
  swift_beginAccess(v82, &v132, 33, 0);
  sub_10000B558(v106, v82, (uint64_t *)&unk_1009D23A0);
  return swift_endAccess(&v132);
}

uint64_t sub_100215F80(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for HistorySnapshot(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject);
  CurrentValueSubject.value.getter((uint8_t **)((char *)&v29 - v9));
  v12 = sub_100008DB0(&qword_1009D2F20, (uint64_t (*)(uint64_t))&type metadata accessor for HistorySnapshot, (uint64_t)&protocol conformance descriptor for HistorySnapshot);
  v13 = dispatch thunk of static Equatable.== infix(_:_:)(v10, a1, v4, v12);
  v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v14(v10, v4);
  if ((v13 & 1) == 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v16 = type metadata accessor for Logger(0);
    sub_100048F64(v16, (uint64_t)qword_1009F1A00);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v18 = v17(v7, a1, v4);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.info.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v32 = v11;
      v22 = (uint8_t *)v21;
      v30 = swift_slowAlloc(32, -1);
      v34 = v30;
      v31 = v17;
      *(_DWORD *)v22 = 136315138;
      v29 = v22 + 4;
      v23 = sub_100008DB0(&qword_1009D2F28, (uint64_t (*)(uint64_t))&type metadata accessor for HistorySnapshot, (uint64_t)&protocol conformance descriptor for HistorySnapshot);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v4, v23);
      v26 = v25;
      v33 = sub_100040F58(v24, v25, &v34);
      v17 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v29, v22 + 12);
      v27 = swift_bridgeObjectRelease(v26);
      ((void (*)(char *, uint64_t, __n128))v14)(v7, v4, v27);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "CurrentLocationProvider updating currentHistory %s", v22, 0xCu);
      v28 = v30;
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      v14(v7, v4);
    }

    v17(v10, a1, v4);
    return CurrentValueSubject.value.setter(v10);
  }
  return result;
}

void sub_10021623C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  char v82[24];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v2);
  v75 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  v5 = __chkstk_darwin(v4);
  v74 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for UpdateReason(0, v5);
  v78 = *(_QWORD *)(updated - 8);
  v79 = updated;
  __chkstk_darwin(updated);
  v77 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v69 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - v16;
  v18 = type metadata accessor for Location(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v76 = (uint64_t)&v69 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v69 - v25;
  v27 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, v82, 0, 0);
  sub_10000B5E4(v27, (uint64_t)v17, (uint64_t *)&unk_1009D23A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v73 = v18;
    sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D23A0);
    v28 = type metadata accessor for CurrentLocationProvider(0);
    v29 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
    v31 = LocationProviding.readingLocationCFI.getter(v28, v29, v30);
    v33 = v32;
    if ((String.isCFI.getter(v31, v32, v34) & 1) != 0)
    {
      v71 = v1;
      v35 = CurrentValueSubject.value.getter(v21);
      v70 = Location.documentOrdinal.getter(v35);
      v36 = v73;
      v72 = *(void (**)(_QWORD *, uint64_t))(v19 + 8);
      v72(v21, v73);
      v37 = sub_10004CFD4(&qword_1009D2F18);
      v38 = v31;
      v39 = v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v74, 1, 1, v37);
      v40 = sub_10004CFD4(&qword_1009D2AD0);
      v41 = v75;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v75, 1, 1, v40);
      swift_bridgeObjectRetain(v33);
      v42 = v76;
      Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v70, 0, v39, 0, 0, v38, v33, v41, 0.0, 0);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, v42, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v36);
      sub_100025B3C((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_1009D23A0);
      swift_beginAccess(v27, v81, 33, 0);
      sub_10000B558((uint64_t)v11, v27, (uint64_t *)&unk_1009D23A0);
      swift_endAccess(v81);
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v43 = type metadata accessor for Logger(0);
      sub_100048F64(v43, (uint64_t)qword_1009F1A00);
      swift_bridgeObjectRetain(v33);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v81[0] = v48;
        *(_DWORD *)v47 = 136446210;
        v49 = String.redactedCFI.getter(v38, v33);
        v51 = v50;
        v80 = sub_100040F58(v49, v50, v81);
        v36 = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v47 + 4, v47 + 12);
        swift_bridgeObjectRelease_n(v33, 2);
        swift_bridgeObjectRelease(v51);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "CurrentLocationProvider captured #currentLoc configurationChangeResumeLocation: %{public}s", v47, 0xCu);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v33, 2);
      }
      v66 = (uint64_t)v77;
      v65 = v78;
      v67 = v79;
      (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for UpdateReason.configurationChange(_:), v79);
      v68 = v76;
      sub_100215490(v76, v66);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v67);
      v72((_QWORD *)v68, v36);
    }
    else
    {
      swift_bridgeObjectRelease(v33);
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v60 = type metadata accessor for Logger(0);
      v61 = sub_100048F64(v60, (uint64_t)qword_1009F1A00);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.info.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v64 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "#currentLoc readingLocationCFI is invalid -- Skipping capture of configurationChangeResumeLocation", v64, 2u);
        swift_slowDealloc(v64, -1, -1);
      }

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v17, v18);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v52 = type metadata accessor for Logger(0);
    v53 = sub_100048F64(v52, (uint64_t)qword_1009F1A00);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.info.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "#currentLoc configurationChangeResumeLocation is set -- Skipping capture of configurationChangeResumeLocation", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }

    v58 = (uint64_t)v77;
    v57 = v78;
    v59 = v79;
    (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for UpdateReason.configurationChange(_:), v79);
    sub_100215490((uint64_t)v26, v58);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
  }
}

double sub_1002169A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  if ((String.isCFI.getter() & 1) != 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v6 = type metadata accessor for Logger(0);
    sub_100048F64(v6, (uint64_t)qword_1009F1A00);
    v7 = swift_bridgeObjectRetain_n(a2, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.info.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v28 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = String.redactedCFI.getter(a1, a2);
      v14 = v13;
      v27 = sub_100040F58(v12, v13, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "#visibleCFI CurrentLocationProvider: staging readingLocationCFI: %{public}s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v25 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
    v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI + 8);
    *v25 = a1;
    v25[1] = a2;
    swift_bridgeObjectRetain(a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  else
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v15 = type metadata accessor for Logger(0);
    sub_100048F64(v15, (uint64_t)qword_1009F1A00);
    v16 = swift_bridgeObjectRetain_n(a2, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v28 = v20;
      *(_DWORD *)v19 = 136446210;
      v21 = String.redactedCFI.getter(a1, a2);
      v23 = v22;
      v27 = sub_100040F58(v21, v22, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "#visibleCFI CurrentLocationProvider: Attempt to stage invalid CFI: %{public}s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_bridgeObjectRelease_n(a2, 2).n128_u64[0];
    }
  }
  return result;
}

double sub_100216CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  os_log_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint8_t *v34;
  uint8_t *v35;
  os_log_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39[2];

  v1 = sub_10004CFD4(&qword_1009D2EF0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v33 - v7);
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI + 8);
  if (!v10)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100048F64(v25, (uint64_t)qword_1009F1A00);
    v37 = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.error.getter(v37);
    if (!os_log_type_enabled(v37, v27))
      goto LABEL_16;
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    v29 = "#visibleCFI CurrentLocationProvider: Attempt to commit without a CFI.";
    goto LABEL_15;
  }
  v11 = *v9;
  *v9 = 0;
  v9[1] = 0;
  if ((String.isCFI.getter(v11, v10, v6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v10);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100048F64(v30, (uint64_t)qword_1009F1A00);
    v37 = Logger.logObject.getter(v31);
    v27 = static os_log_type_t.error.getter(v37);
    if (!os_log_type_enabled(v37, v27))
      goto LABEL_16;
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    v29 = "#visibleCFI CurrentLocationProvider: Attempt to commit an invalid CFI.";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v37, v27, v29, v28, 2u);
    swift_slowDealloc(v28, -1, -1);
LABEL_16:

    return result;
  }
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v12 = type metadata accessor for Logger(0);
  sub_100048F64(v12, (uint64_t)qword_1009F1A00);
  v13 = swift_bridgeObjectRetain_n(v10, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v39[0] = (uint64_t)v37;
    v35 = v16;
    v36 = v14;
    *(_DWORD *)v16 = 136446210;
    v17 = v16 + 12;
    v34 = v16 + 4;
    v18 = String.redactedCFI.getter(v11, v10);
    v20 = v19;
    v38 = sub_100040F58(v18, v19, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v34, v17);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease(v20);
    v21 = v36;
    v22 = v15;
    v23 = v35;
    _os_log_impl((void *)&_mh_execute_header, v36, v22, "#visibleCFI CurrentLocationProvider: adopting readingLocationCFI: %{public}s", v35, 0xCu);
    v24 = v37;
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
  }
  v39[0] = v11;
  v39[1] = v10;
  CurrentValueSubject.value.getter(v8);
  DatedLocation.setLocation(_:updateDate:)(v39, 1, v1);
  (*(void (**)(char *, _QWORD *, uint64_t))(v2 + 16))(v4, v8, v1);
  CurrentValueSubject.value.setter(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v8, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

void sub_1002170DC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  unint64_t v8;
  Class isa;
  _QWORD v10[2];
  _BYTE v11[104];

  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CDCA8 != -1)
    swift_once(&qword_1009CDCA8, sub_100213A6C);
  v4 = qword_1009D2C10;
  v5 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v5, v11);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v10[0] = 0x6F69746365726964;
  v10[1] = 0xE90000000000006ELL;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  type metadata accessor for NavigationDirection(0);
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 72) = a1;
  v8 = sub_1000560A8(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "postNotificationName:object:userInfo:", v4, v1, isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

uint64_t sub_10021735C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 304) = a1;
  *(_QWORD *)(v2 + 312) = v1;
  return swift_task_switch(sub_100217374, 0, 0);
}

uint64_t sub_100217374()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009DAF84);
  *(_QWORD *)(v0 + 320) = v1;
  *v1 = v0;
  v1[1] = sub_1002173D0;
  return sub_10032C748(v0 + 16, *(_QWORD *)(v0 + 304));
}

uint64_t sub_1002173D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002177CC;
  else
    v3 = sub_100217434;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100217434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  _BYTE *v13;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  unint64_t v27;

  sub_10004CD0C(v0 + 16, v0 + 48);
  v1 = sub_10004CFD4(&qword_1009D3090);
  if (!swift_dynamicCast(v0 + 280, v0 + 48, (char *)&type metadata for Any + 8, v1, 6))
  {
    v9 = sub_100218230();
    v10 = swift_allocError(&type metadata for AMDCollectionService.Errors, v9, 0, 0);
    *v11 = 0;
LABEL_10:
    swift_willThrow(v10);
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 280);
  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_10004CE80(0x7365726F6373, 0xE600000000000000), (v4 & 1) == 0))
  {
    swift_bridgeObjectRelease(v2);
    v12 = sub_100218230();
    v10 = swift_allocError(&type metadata for AMDCollectionService.Errors, v12, 0, 0);
    *v13 = 1;
    goto LABEL_10;
  }
  sub_10004CD0C(*(_QWORD *)(v2 + 56) + 32 * v3, v0 + 144);
  sub_10004CFC4((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 112));
  sub_10004CD0C(v0 + 112, v0 + 176);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D30A0);
  if (!swift_dynamicCast(v0 + 272, v0 + 176, (char *)&type metadata for Any + 8, v5, 6))
  {
    swift_bridgeObjectRelease(v2);
    v15 = sub_100218230();
    v16 = swift_allocError(&type metadata for AMDCollectionService.Errors, v15, 0, 0);
    v18 = 2;
LABEL_19:
    *v17 = v18;
    swift_willThrow(v16);
LABEL_23:
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(v0 + 272);
  if (*(_QWORD *)(v2 + 16) && (v7 = sub_10004CE80(0x7364496D616461, 0xE700000000000000), (v8 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v2 + 56) + 32 * v7, v0 + 208);
  }
  else
  {
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*(_QWORD *)(v0 + 232))
  {
    swift_bridgeObjectRelease(v6);
    sub_10004A7B8(v0 + 208);
    v22 = sub_100218230();
    v16 = swift_allocError(&type metadata for AMDCollectionService.Errors, v22, 0, 0);
    v18 = 3;
    goto LABEL_19;
  }
  sub_10004CFC4((_OWORD *)(v0 + 208), (_OWORD *)(v0 + 240));
  sub_10004CD0C(v0 + 240, v0 + 80);
  v19 = sub_10004CFD4(&qword_1009D30B0);
  if (!swift_dynamicCast(v0 + 288, v0 + 80, (char *)&type metadata for Any + 8, v19, 6))
  {
    swift_bridgeObjectRelease(v6);
    v23 = sub_100218230();
    v24 = swift_allocError(&type metadata for AMDCollectionService.Errors, v23, 0, 0);
    v26 = 4;
LABEL_22:
    *v25 = v26;
    swift_willThrow(v24);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
    goto LABEL_23;
  }
  v20 = *(_QWORD *)(v0 + 288);
  if (*(_QWORD *)(v6 + 16) != *(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v20);
    v27 = sub_100218230();
    v24 = swift_allocError(&type metadata for AMDCollectionService.Errors, v27, 0, 0);
    v26 = 5;
    goto LABEL_22;
  }
  v21 = sub_1002177D8(*(_QWORD *)(v0 + 288), v6);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v6);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_1002177CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002177D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  uint64_t (*__ptr32 *v22)();
  uint64_t v23;
  _QWORD *v24;
  double *v25;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  double v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t result;
  _BYTE v67[16];
  int64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;
  int64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  int64_t v86;
  _QWORD *v87;
  _BYTE *v88;
  _QWORD *v89;

  v4 = sub_10004CFD4(&qword_1009D30B8);
  __chkstk_darwin(v4);
  v85 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009D30C0);
  __chkstk_darwin(v6);
  v84 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Book.MediaType(0);
  v82 = *(_QWORD *)(v8 - 8);
  v83 = v8;
  __chkstk_darwin(v8);
  v88 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Book(0);
  v11 = __chkstk_darwin(v10);
  v79 = &v67[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v73 = &v67[-v13];
  v14 = type metadata accessor for ScoredBook(0);
  v80 = *(_QWORD *)(v14 - 8);
  v81 = v14;
  v15 = __chkstk_darwin(v14);
  v78 = &v67[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v72 = &v67[-v17];
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a2 + 16);
  if (v19 >= v18)
    v20 = *(_QWORD *)(a1 + 16);
  else
    v20 = *(_QWORD *)(a2 + 16);
  v89 = _swiftEmptyArrayStorage;
  sub_100366A98(0, v20, 0);
  v21 = v89;
  v22 = &off_10070C000;
  v70 = a2;
  v71 = a1;
  v69 = v18;
  v68 = v19;
  if (v20)
  {
    v23 = a1;
    v24 = (_QWORD *)(a1 + 32);
    v25 = (double *)(a2 + 32);
    LODWORD(v76) = enum case for Book.MediaType.ebook(_:);
    LODWORD(v75) = enum case for RecommendationSource.siri(_:);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(a2);
    v74 = xmmword_10070CCA0;
    v26 = v20;
    v77 = v20;
    while (v18)
    {
      if (!v19)
        goto LABEL_28;
      v86 = v26;
      v87 = v24;
      v27 = *v24;
      if (v27 < 0)
        goto LABEL_31;
      v28 = v21;
      v29 = *v25;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v82 + 104))(v88, v76, v83);
      v30 = sub_10004CFD4(&qword_1009D30C8);
      v31 = type metadata accessor for RecommendationSource(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned __int8 *)(v32 + 80);
      v34 = (v33 + 32) & ~v33;
      v35 = swift_allocObject(v30, v34 + *(_QWORD *)(v32 + 72), v33 | 7);
      *(_OWORD *)(v35 + 16) = v74;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 104))(v35 + v34, v75, v31);
      v36 = type metadata accessor for Book.Rationale(0);
      v37 = v84;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v84, 1, 1, v36);
      v38 = type metadata accessor for Book.Content(0);
      v39 = v85;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v85, 1, 1, v38);
      v40 = v79;
      Book.init(storeID:mediaType:seriesID:sources:rationale:content:)(v27, v88, 0, 1, v35, v37, v39);
      v41 = v78;
      ScoredBook.init(book:score:)(v40, v29);
      v21 = v28;
      v89 = v28;
      v43 = v28[2];
      v42 = v28[3];
      if (v43 >= v42 >> 1)
      {
        sub_100366A98(v42 > 1, v43 + 1, 1);
        v21 = v89;
      }
      v21[2] = v43 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v80 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v43, v41, v81);
      --v19;
      --v18;
      ++v25;
      v24 = v87 + 1;
      v26 = v86 - 1;
      v20 = v77;
      v22 = &off_10070C000;
      if (v86 == 1)
        goto LABEL_14;
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
LABEL_14:
    if (v69 <= v68)
    {
LABEL_26:
      swift_bridgeObjectRelease(v70);
      swift_bridgeObjectRelease(v71);
      return (uint64_t)v21;
    }
    v44 = 0;
    LODWORD(v79) = enum case for Book.MediaType.ebook(_:);
    LODWORD(v78) = enum case for RecommendationSource.siri(_:);
    if (v20 <= v68)
      v45 = v68;
    else
      v45 = v20;
    v86 = v45 - v20;
    v46 = (_QWORD *)(v69 - v20);
    v87 = (_QWORD *)(v68 - v20);
    v47 = 8 * v20 + 32;
    v77 = v71 + v47;
    v75 = v70 + v47;
    v74 = *((_OWORD *)v22 + 202);
    v76 = (_QWORD *)(v69 - v20);
    while (v46 != v44)
    {
      if (v87 == v44)
        goto LABEL_26;
      if ((_QWORD *)v86 == v44)
        goto LABEL_30;
      v48 = *(_QWORD *)(v77 + 8 * (_QWORD)v44);
      if (v48 < 0)
        goto LABEL_31;
      v49 = v21;
      v50 = *(double *)(v75 + 8 * (_QWORD)v44);
      v51 = v88;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v82 + 104))(v88, v79, v83);
      v52 = sub_10004CFD4(&qword_1009D30C8);
      v53 = type metadata accessor for RecommendationSource(0);
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(unsigned __int8 *)(v54 + 80);
      v56 = (v55 + 32) & ~v55;
      v57 = swift_allocObject(v52, v56 + *(_QWORD *)(v54 + 72), v55 | 7);
      *(_OWORD *)(v57 + 16) = v74;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v54 + 104))(v57 + v56, v78, v53);
      v58 = type metadata accessor for Book.Rationale(0);
      v59 = v84;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v84, 1, 1, v58);
      v60 = type metadata accessor for Book.Content(0);
      v61 = v85;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v85, 1, 1, v60);
      v62 = v73;
      Book.init(storeID:mediaType:seriesID:sources:rationale:content:)(v48, v51, 0, 1, v57, v59, v61);
      v63 = v72;
      ScoredBook.init(book:score:)(v62, v50);
      v21 = v49;
      v89 = v49;
      v65 = v49[2];
      v64 = v49[3];
      if (v65 >= v64 >> 1)
      {
        sub_100366A98(v64 > 1, v65 + 1, 1);
        v21 = v89;
      }
      v21[2] = v65 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v80 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v65, v63, v81);
      v44 = (_QWORD *)((char *)v44 + 1);
      v46 = v76;
      if (v76 == v44)
        goto LABEL_26;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

uint64_t sub_100217E9C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for AMDCollectionService.Event()
{
  return objc_opt_self(_TtCC5Books20AMDCollectionServiceP33_4EFD11BC7D3B203388E5898071D414945Event);
}

uint64_t sub_100217EE8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch(sub_100217F04, 0, 0);
}

uint64_t sub_100217F04()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  swift_getObjectType();
  v1 = sub_1003A7B50();
  v2 = objc_allocWithZone((Class)type metadata accessor for AMDCollectionService.Event());
  v3 = sub_1002180AC(v1);
  v0[3] = v3;

  v4 = (_QWORD *)swift_task_alloc(dword_1009D308C);
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_100217FCC;
  v5 = v0[2];
  v4[38] = v3;
  v4[39] = v5;
  return swift_task_switch(sub_100217374, 0, 0);
}

uint64_t sub_100217FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100218078;
  }
  else
  {
    *(_QWORD *)(v4 + 48) = a1;
    v6 = sub_100218040;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100218040()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_100218078()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002180AC(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  char *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;
  char v17[176];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtCC5Books20AMDCollectionServiceP33_4EFD11BC7D3B203388E5898071D414945Event_data;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Books20AMDCollectionServiceP33_4EFD11BC7D3B203388E5898071D414945Event_data] = 0;
  v5 = OBJC_IVAR____TtCC5Books20AMDCollectionServiceP33_4EFD11BC7D3B203388E5898071D414945Event_engagementData;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Books20AMDCollectionServiceP33_4EFD11BC7D3B203388E5898071D414945Event_engagementData] = 0;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v6, v17);
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = 0xD000000000000016;
  *(_QWORD *)(inited + 56) = 0x80000001007B7A90;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x65736163657375;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 96) = 0x6974736567677573;
  *(_QWORD *)(inited + 104) = 0xEB00000000736E6FLL;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 1684632420;
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  *(_QWORD *)(inited + 168) = sub_100218274();
  *(_QWORD *)(inited + 144) = a1;
  v8 = v1;
  v9 = a1;
  v10 = sub_10003FB0C(inited);
  v11 = sub_1004EC9E0(v10);
  v12 = *(_QWORD *)&v1[v4];
  *(_QWORD *)&v1[v4] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = sub_1004EC9E0(v10);
  swift_bridgeObjectRelease(v10);
  v14 = *(_QWORD *)&v1[v5];
  *(_QWORD *)&v1[v5] = v13;

  swift_bridgeObjectRelease(v14);
  v16.receiver = v8;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, "init");
}

unint64_t sub_100218230()
{
  unint64_t result;

  result = qword_1009D3098;
  if (!qword_1009D3098)
  {
    result = swift_getWitnessTable(&unk_100712C50, &type metadata for AMDCollectionService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009D3098);
  }
  return result;
}

unint64_t sub_100218274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA820;
  if (!qword_1009DA820)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DA820);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AMDCollectionService.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002182FC + 4 * byte_100712B75[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100218330 + 4 * byte_100712B70[v4]))();
}

uint64_t sub_100218330(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100218338(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100218340);
  return result;
}

uint64_t sub_10021834C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100218354);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100218358(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100218360(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMDCollectionService.Errors()
{
  return &type metadata for AMDCollectionService.Errors;
}

unint64_t sub_100218380()
{
  unint64_t result;

  result = qword_1009D30E0;
  if (!qword_1009D30E0)
  {
    result = swift_getWitnessTable(&unk_100712C28, &type metadata for AMDCollectionService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009D30E0);
  }
  return result;
}

uint64_t sub_1002183C4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D30F0);
  sub_100048F64(v0, (uint64_t)qword_1009D30F0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000016, 0x8000000100712C90);
}

uint64_t sub_100218460(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t result;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_10004AA7C(a2, (uint64_t)v16);
  v6 = v17;
  if (v17)
  {
    v7 = sub_10003F198(v16, v17);
    v8 = *(_QWORD *)(v6 - 8);
    __chkstk_darwin(v7);
    v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    _s5Books15CurrentPageViewVwxx_0(v16);
  }
  else
  {
    v11 = 0;
  }
  v15.receiver = v2;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v11);
  swift_unknownObjectRelease(v11);
  v13 = static Selector.== infix(_:_:)("books_import:", a1) ^ 1;
  result = v13 & v12;
  if ((v13 & 1) == 0)
  {
    if (v12)
      return *(_QWORD *)&v2[OBJC_IVAR___BKAppGlobalActionHandler_appKitBundle] != 0;
  }
  return result;
}

void sub_10021862C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  sub_10004AA7C(a1, (uint64_t)&v13);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_100010960((uint64_t)&v13, (uint64_t *)&unk_1009D04E0);
    goto LABEL_6;
  }
  v2 = sub_10021AC80();
  if ((swift_dynamicCast(&v12, &v13, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_6:
    v15 = 0u;
    v16 = 0u;
LABEL_7:
    sub_100010960((uint64_t)&v15, (uint64_t *)&unk_1009D04E0);
    goto LABEL_8;
  }
  v3 = v12;
  v4 = objc_msgSend(v12, "propertyList");

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_10004C7B4((uint64_t)&v13, (uint64_t)&v15);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_7;
  if ((swift_dynamicCast(&v13, &v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v10 = *((_QWORD *)&v13 + 1);
    v11 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAppGlobalActionHandler_sceneManager), "jsaLibraryManager");
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v11, "openBook:options:", v7, 0);

    goto LABEL_12;
  }
LABEL_8:
  if (qword_1009CDCB0 != -1)
    swift_once(&qword_1009CDCB0, sub_1002183C4);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009D30F0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to open recent book because the assetID could not be found", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
LABEL_12:

}

void sub_1002188B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;
  _QWORD aBlock[5];
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAppGlobalActionHandler_appKitBundle);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR___BKAppGlobalActionHandler_sceneManager);
    v3 = swift_allocObject(&unk_1008F47A0, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v0);
    v4 = swift_allocObject(&unk_1008F47C8, 32, 7);
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v1;
    aBlock[4] = sub_10021AC44;
    v12 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001EDBF0;
    aBlock[3] = &unk_1008F47E0;
    v5 = _Block_copy(aBlock);
    swift_release(v12);
    objc_msgSend(v2, "requestPrimaryScene:", v5);
    _Block_release(v5);
  }
  else
  {
    if (qword_1009CDCB0 != -1)
      swift_once(&qword_1009CDCB0, sub_1002183C4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009D30F0);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Cannot 'Import' without an AppKitBundle", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
}

void sub_100218A5C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100218AC8(a3, a1);

  }
}

void sub_100218AC8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD aBlock[5];
  uint64_t v45;

  v41 = a1;
  v39 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v39 - 8);
  v4 = __chkstk_darwin(v39);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v39 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v39 - v14;
  v43 = a2;
  v16 = objc_msgSend(a2, "bk_window");
  aBlock[0] = v16;
  v17 = sub_10004CFD4((uint64_t *)&unk_1009EA010);
  v40 = Optional._bridgeToObjectiveC()(v17);

  v18 = String._bridgeToObjectiveC()();
  v19 = String.LocalizationValue.init(stringLiteral:)(0x74726F706D49, 0xE600000000000000);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v23 = v39;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v39);
  String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v22, v6, "Button label for importing a book", 33, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  isa = (Class)objc_msgSend((id)objc_opt_self(BKAppSceneManager), "supportedFileImportTypes");
  if (!isa)
  {
    v28 = type metadata accessor for UTType(0);
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v28);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
  }
  v30 = (void *)swift_getObjCClassFromMetadata(v41);
  v31 = swift_allocObject(&unk_1008F47A0, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v42);
  v32 = swift_allocObject(&unk_1008F4818, 32, 7);
  v33 = v43;
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = v33;
  aBlock[4] = sub_10021AC78;
  v45 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100218FAC;
  aBlock[3] = &unk_1008F4830;
  v34 = _Block_copy(aBlock);
  v35 = v45;
  v36 = v33;
  swift_release(v35);
  LOBYTE(v38) = 1;
  v37 = v40;
  objc_msgSend(v30, "showOpenPanelInWindow:title:prompt:allowedContentTypes:canChooseFiles:canChooseDirectories:allowsMultipleSelection:completion:", v40, v18, v26, isa, 1, 1, v38, v34);
  _Block_release(v34);
  swift_unknownObjectRelease(v37);

}

void sub_100218E50(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  if ((a1 & 1) != 0)
  {
    v5 = a3 + 16;
    swift_beginAccess(a3 + 16, v8, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (void *)Strong;
      sub_100218EC0(a4);

    }
  }
}

uint64_t sub_100218EC0(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  NSString v5;
  void *v6;
  Class isa;
  id v8;

  v3 = objc_msgSend(a1, "rootBarCoordinator");
  if (v3)
  {
    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "selectWithIdentifier:isUserAction:", v5, 0);

    swift_unknownObjectRelease(v4);
  }
  v6 = *(void **)(v1 + OBJC_IVAR___BKAppGlobalActionHandler_sceneManager);
  type metadata accessor for URL(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a1, "newShowURLTransaction");
  objc_msgSend(v6, "handleImportURLs:transaction:perURLCompletion:completion:", isa, v8, 0, 0);

  return swift_unknownObjectRelease(v8);
}

uint64_t sub_100218FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = type metadata accessor for URL(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v7);
  swift_retain(v5);
  v6(a2, v8);
  swift_release(v5);
  return swift_bridgeObjectRelease(v8);
}

void sub_100219014()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t Strong;
  NSURL *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  v62 = v4;
  v5 = __chkstk_darwin(v3);
  v58 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for Locale(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v58 - v13;
  v15 = type metadata accessor for String.LocalizationValue(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v58 - v20;
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x80000001007B7BB0);
  static Locale.current.getter(v22);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  v23 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v26 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v25, v12, "URL for Provide Books Feedback menu button", 42, 2);
  v28 = v27;
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30 = v62;
  v29(v14, v8);
  v31 = *(void (**)(char *, uint64_t))(v16 + 8);
  v32 = v61;
  v31(v21, v15);
  URL.init(string:)(v26, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v2, 1, v32) == 1)
  {
    sub_100010960((uint64_t)v2, (uint64_t *)&unk_1009D23D0);
    if (qword_1009CDCB0 != -1)
      swift_once(&qword_1009CDCB0, sub_1002183C4);
    v33 = type metadata accessor for Logger(0);
    sub_100048F64(v33, (uint64_t)qword_1009D30F0);
    swift_bridgeObjectRetain(v28);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v64[0] = v38;
      *(_DWORD *)v37 = 136315138;
      swift_bridgeObjectRetain(v28);
      v63 = sub_100040F58(v26, v28, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to create feedback URL from %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v28, 2);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v28);
    v39 = v59;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v59, v2, v32);
    v40 = v60;
    Strong = swift_unknownObjectWeakLoadStrong(v60 + OBJC_IVAR___BKAppGlobalActionHandler_delegate);
    if (Strong)
    {
      v43 = (void *)Strong;
      URL._bridgeToObjectiveC()(v42);
      v45 = v44;
      objc_msgSend(v43, "appGlobalActionHandler:open:", v40, v44);
      swift_unknownObjectRelease(v43);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v32);
    }
    else
    {
      if (qword_1009CDCB0 != -1)
        swift_once(&qword_1009CDCB0, sub_1002183C4);
      v46 = type metadata accessor for Logger(0);
      sub_100048F64(v46, (uint64_t)qword_1009D30F0);
      v47 = v58;
      v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 16))(v58, v39, v32);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.error.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc(12, -1);
        v52 = swift_slowAlloc(32, -1);
        v64[0] = v52;
        *(_DWORD *)v51 = 136315138;
        v53 = sub_100008DB0((unint64_t *)&qword_1009D3168, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v54 = dispatch thunk of CustomStringConvertible.description.getter(v32, v53);
        v56 = v55;
        v63 = sub_100040F58(v54, v55, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v51 + 4, v51 + 12);
        swift_bridgeObjectRelease(v56);
        v57 = *(void (**)(char *, uint64_t))(v62 + 8);
        v57(v47, v32);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unable to open feedback URL %s without a delegate", v51, 0xCu);
        swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v51, -1, -1);

      }
      else
      {

        v57 = *(void (**)(char *, uint64_t))(v30 + 8);
        v57(v47, v32);
      }
      v57(v39, v32);
    }
  }
}

uint64_t sub_100219640(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v8);
    v9 = (id)swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  a4(v9);

  return sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009D04E0);
}

void sub_100219730()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  void *isa;
  char **v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = (id)BUOnboardingAllBundleIDs();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

  v36 = v3;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v5 = sub_10021AAA8();
  if ((Collection.isNotEmpty.getter(v4, v5) & 1) == 0)
  {
    swift_bridgeObjectRelease(v3);
    if (qword_1009CDCB0 != -1)
      swift_once(&qword_1009CDCB0, sub_1002183C4);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_1009D30F0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (!os_log_type_enabled(v19, v20))
      goto LABEL_20;
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    v22 = "books_aboutPrivacy: BUOnboardingAllBundleIDs returned zero identifiers.";
    goto LABEL_19;
  }
  if (qword_1009CDCB0 != -1)
    swift_once(&qword_1009CDCB0, sub_1002183C4);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009D30F0);
  v7 = swift_bridgeObjectRetain_n(v3, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = v1;
    v11 = swift_slowAlloc(32, -1);
    v36 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(v3);
    v13 = Array.description.getter(v12, &type metadata for String);
    v15 = v14;
    swift_bridgeObjectRelease(v3);
    v35 = sub_100040F58(v13, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(v3, 2);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "books_aboutPrivacy: bundleIdentifiers: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    v16 = v11;
    v1 = v34;
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
  }
  if (*(_QWORD *)(v3 + 16) == 1)
  {
    v23 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease(v3);
    isa = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    v25 = &selRef_presenterForPrivacySplashWithIdentifier_;
  }
  else
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    v25 = &selRef_presenterForPrivacyUnifiedAboutWithIdentifiers_;
  }
  v26 = objc_msgSend((id)objc_opt_self(OBPrivacyPresenter), *v25, isa);

  if (!v26)
  {
    v19 = Logger.logObject.getter(v27);
    v20 = static os_log_type_t.error.getter(v19);
    if (!os_log_type_enabled(v19, v20))
      goto LABEL_20;
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    v22 = "Unable to present privacy; OBPrivacyPresenter could not be created";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v22, v21, 2u);
    swift_slowDealloc(v21, -1, -1);
    goto LABEL_20;
  }
  v28 = *(void **)(v1 + OBJC_IVAR___BKAppGlobalActionHandler_sceneManager);
  v19 = v26;
  v29 = objc_msgSend(v28, "anySceneController");
  v30 = objc_msgSend(v29, "genericPresenting");
  swift_unknownObjectRelease(v29);
  -[NSObject setUnderlineLinks:](v19, "setUnderlineLinks:", 1);
  v31 = -[NSObject splashController](v19, "splashController");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "setUnderlineLinks:", 1);

    v33 = objc_msgSend(v30, "presenterModalPresentingViewController");
    -[NSObject setPresentingViewController:](v19, "setPresentingViewController:", v33);

    -[NSObject present](v19, "present");
    swift_unknownObjectRelease(v30);

LABEL_20:
    return;
  }

  __break(1u);
}

uint64_t sub_100219C60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for Logger(0);
  v0[36] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[37] = v2;
  v0[38] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v0[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v0[40] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v0[41] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[42] = swift_task_alloc(v6);
  v0[43] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v0[44] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v0[45] = v8;
  v0[46] = v9;
  return swift_task_switch(sub_100219D4C, v8, v9);
}

uint64_t sub_100219D4C()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  v3 = objc_msgSend(v2, "booksServiceAndSupportURL");

  v4 = objc_msgSend(v3, "valuePromise");
  v0[47] = v4;

  v0[7] = v0 + 31;
  v0[2] = v0;
  v0[3] = sub_100219E4C;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[23] = _NSConcreteStackBlock;
  v6 = v0 + 23;
  v6[1] = 0x40000000;
  v6[2] = sub_10021A668;
  v6[3] = &unk_1008F4760;
  v6[4] = v5;
  objc_msgSend(v4, "resultWithTimeout:completion:", v6, 1.0);
  return swift_continuation_await(v1);
}

uint64_t sub_100219E4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 384) = v2;
  if (v2)
    v3 = sub_10021A2B4;
  else
    v3 = sub_100219EA8;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 368));
}

uint64_t sub_100219EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSURL *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Class isa;
  uint64_t v10;

  v1 = v0;
  v2 = v0 + 80;
  v3 = *(void **)(v1 + 248);

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  *(_QWORD *)(v1 + 392) = v4;
  URL._bridgeToObjectiveC()(v5);
  v7 = v6;
  *(_QWORD *)(v1 + 400) = v6;
  v8 = sub_1001DA758((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100008DB0(&qword_1009D0CC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070F050);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v1 + 408) = isa;
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(v1 + 120) = v1 + 416;
  *(_QWORD *)(v1 + 80) = v1;
  *(_QWORD *)(v1 + 88) = sub_10021A010;
  v10 = swift_continuation_init(v2, 0);
  *(_QWORD *)(v1 + 144) = _NSConcreteStackBlock;
  v1 += 144;
  *(_QWORD *)(v1 + 8) = 0x40000000;
  *(_QWORD *)(v1 + 16) = sub_10021A6F4;
  *(_QWORD *)(v1 + 24) = &unk_1008F4778;
  *(_QWORD *)(v1 + 32) = v10;
  objc_msgSend(v4, "openURL:options:completionHandler:", v7, isa, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_10021A010()
{
  uint64_t v0;

  return swift_task_switch(sub_10021A054, *(_QWORD *)(*(_QWORD *)v0 + 360), *(_QWORD *)(*(_QWORD *)v0 + 368));
}

uint64_t sub_10021A054()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 400);
  v2 = *(void **)(v0 + 408);
  v3 = *(void **)(v0 + 392);
  swift_release(*(_QWORD *)(v0 + 352));
  v4 = *(_BYTE *)(v0 + 416);

  if ((v4 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 320));
  }
  else
  {
    if (qword_1009CDCB0 != -1)
      swift_once(&qword_1009CDCB0, sub_1002183C4);
    v5 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 344);
    v7 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    sub_100048F64(*(_QWORD *)(v0 + 288), (uint64_t)qword_1009D30F0);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 336);
    v14 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 320);
    v16 = *(_QWORD *)(v0 + 328);
    if (v12)
    {
      v29 = *(_QWORD *)(v0 + 344);
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v30 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_100008DB0((unint64_t *)&qword_1009D3168, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v20 = dispatch thunk of CustomStringConvertible.description.getter(v15, v19);
      v22 = v21;
      *(_QWORD *)(v0 + 256) = sub_100040F58(v20, v21, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 256, v0 + 264, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v22);
      v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v23(v13, v15);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "UIApplication could not open %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      v23(v29, v15);
    }
    else
    {

      v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v24(v13, v15);
      v24(v14, v15);
    }
  }
  v25 = *(_QWORD *)(v0 + 336);
  v27 = *(_QWORD *)(v0 + 304);
  v26 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10021A2B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSURL *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Class isa;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v3 = (void *)v1[47];
  v2 = v1[48];
  swift_willThrow(a1);

  static Logger.accountController.getter();
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = v1[48];
    v34 = v1[37];
    v35 = v1[36];
    v36 = v1[38];
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v37[0] = v9;
    *(_DWORD *)v8 = 136315394;
    v1[33] = sub_100040F58(0xD000000000000021, 0x80000001007B7B80, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 33, v1 + 34, v8 + 4, v8 + 12);
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue(v7, v1 + 34, v1 + 28);
    v10 = Error.localizedDescription.getter(v1[29], v1[30]);
    v12 = v11;
    v1[35] = sub_100040F58(v10, v11, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 35, v1 + 36, v8 + 14, v8 + 22);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Unable to retrieve booksServiceAndSupportURL from AMSBag due to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    v13 = v1[48];
    v15 = v1[37];
    v14 = v1[38];
    v16 = v1[36];
    swift_errorRelease(v13);
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = v1[40];
  v18 = v1[41];
  v19 = v1[39];
  URL.init(string:)(0xD00000000000001FLL, 0x80000001007B7B50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v21 = v1 + 10;
    v22 = v1[43];
    v23 = v1[40];
    v24 = v1[41];
    v25 = v1[39];
    swift_errorRelease(v1[48]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, v25, v23);
    v26 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v1[49] = v26;
    URL._bridgeToObjectiveC()(v27);
    v29 = v28;
    v1[50] = v28;
    v30 = sub_1001DA758((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_100008DB0(&qword_1009D0CC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10070F050);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v1[51] = isa;
    swift_bridgeObjectRelease(v30);
    v1[15] = v1 + 52;
    v1[10] = v1;
    v1[11] = sub_10021A010;
    v32 = swift_continuation_init(v1 + 10, 0);
    v1[18] = _NSConcreteStackBlock;
    v33 = v1 + 18;
    v33[1] = 0x40000000;
    v33[2] = sub_10021A6F4;
    v33[3] = &unk_1008F4778;
    v33[4] = v32;
    objc_msgSend(v26, "openURL:options:completionHandler:", v29, isa, v33);
    return swift_continuation_await(v21);
  }
  return result;
}

uint64_t sub_10021A668(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10021A6F4(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t type metadata accessor for AppGlobalActionHandler()
{
  return objc_opt_self(BKAppGlobalActionHandler);
}

uint64_t sub_10021AA20()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021AA44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D315C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100219C60();
}

unint64_t sub_10021AAA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2B40;
  if (!qword_1009D2B40)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009E8850);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009D2B40);
  }
  return result;
}

void sub_10021AAF4()
{
  id v0;
  uint64_t ObjCClassMetadata;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  v0 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v0)
  {
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "openKeyboardShortcuts");
  }
  else
  {
    if (qword_1009CDCB0 != -1)
      swift_once(&qword_1009CDCB0, sub_1002183C4);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100048F64(v2, (uint64_t)qword_1009D30F0);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Unable to present keyboard shortcuts; BCAppKitBundle could not be loaded",
        v5,
        2u);
      swift_slowDealloc(v5, -1, -1);
    }

  }
}

uint64_t sub_10021ABFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021AC20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10021AC44(void *a1)
{
  uint64_t v1;

  sub_100218A5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10021AC4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10021AC78(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_100218E50(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t sub_10021AC80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3180;
  if (!qword_1009D3180)
  {
    v1 = objc_opt_self(UICommand);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D3180);
  }
  return result;
}

id sub_10021AD30@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for YearInReviewEligibilityService()), "init");
  *a1 = result;
  return result;
}

uint64_t sub_10021AD68(uint64_t *a1, void *a2)
{
  return sub_1000275F0(*a1, a2);
}

uint64_t sub_10021AD70(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v2 + 2;
  v5 = *v1;
  v2[2] = v2;
  v2[3] = sub_10021AE0C;
  v6 = swift_continuation_init(v2 + 2, 1);
  v2[10] = _NSConcreteStackBlock;
  v7 = v2 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_10021AE60;
  v7[3] = &unk_1008F48A8;
  v7[4] = v6;
  objc_msgSend(v5, "addNotificationRequest:withCompletionHandler:", a1, v7);
  return swift_continuation_await(v4);
}

uint64_t sub_10021AE0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*(_QWORD *)(v2 + 48))
    swift_willThrow(a1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10021AE60(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_10021AED4()
{
  void **v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1 + 2;
  v3 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_10021AF68;
  v4 = swift_continuation_init(v1 + 2, 0);
  v1[10] = _NSConcreteStackBlock;
  v5 = v1 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_10021AFA8;
  v5[3] = &unk_1008F4890;
  v5[4] = v4;
  objc_msgSend(v3, "getPendingNotificationRequestsWithCompletionHandler:", v5);
  return swift_continuation_await(v2);
}

uint64_t sub_10021AF68()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 8))(*(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_10021AFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = sub_100009E04(0, &qword_1009D32F0, UNNotificationRequest_ptr);
  **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  return swift_continuation_resume(v3);
}

void sub_10021AFFC()
{
  void **v0;
  void *v1;
  Class isa;

  v1 = *v0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "removePendingNotificationRequestsWithIdentifiers:", isa);

}

_UNKNOWN **sub_10021B048()
{
  return &protocol witness table for YearInReviewEligibilityService;
}

uint64_t sub_10021B054(char a1)
{
  char *v1;
  void *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind];
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = qword_1009CE400;
    (id)v4;
    if (v5 != -1)
      swift_once(&qword_1009CE400, sub_1003FC048);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009E1C80);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v21 = swift_slowAlloc(64, -1);
      *(_DWORD *)v10 = 136315394;
      v19 = sub_100040F58(0xD000000000000012, 0x80000001007B8180, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v10 + 4, v10 + 12);
      *(_WORD *)(v10 + 12) = 2080;
      __asm { BR              X10 }
    }

    __asm { BR              X10 }
  }
  if (qword_1009CE400 != -1)
    swift_once(&qword_1009CE400, sub_1003FC048);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100048F64(v11, (uint64_t)qword_1009E1C80);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    *(_DWORD *)v15 = 136315394;
    v19 = sub_100040F58(0xD000000000000012, 0x80000001007B8180, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v15 + 4, v15 + 12);
    *(_WORD *)(v15 + 12) = 2080;
    __asm { BR              X10 }
  }

  v16 = swift_allocObject(&unk_1008F4C80, 25, 7);
  *(_QWORD *)(v16 + 16) = v2;
  *(_BYTE *)(v16 + 24) = a1;
  v17 = v2;
  sub_10021C2CC(sub_100221940, v16);
  return swift_release(v16);
}

uint64_t sub_10021B870(unsigned __int8 a1)
{
  char *v1;
  void *v2;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind];
  if ((v4 & 0x8000000000000000) != 0)
  {
    if (qword_1009CE400 != -1)
      swift_once(&qword_1009CE400, sub_1003FC048);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100048F64(v19, (uint64_t)qword_1009E1C80);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v31 = v24;
      *(_DWORD *)v23 = 136315394;
      v30 = sub_100040F58(0xD000000000000019, 0x80000001007B8160, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v23 + 4, v23 + 12);
      *(_WORD *)(v23 + 12) = 2080;
      v25 = sub_100329478(a1);
      v27 = v26;
      v30 = sub_100040F58(v25, v26, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v23 + 14, v23 + 22);
      swift_bridgeObjectRelease(v27);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: splitView identifier: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }

    v16 = swift_allocObject(&unk_1008F4BE0, 25, 7);
    *(_QWORD *)(v16 + 16) = v2;
    *(_BYTE *)(v16 + 24) = a1;
    v28 = v2;
    sub_10021C2CC(sub_1002218B8, v16);
  }
  else
  {
    v5 = qword_1009CE400;
    v6 = (id)v4;
    if (v5 != -1)
      swift_once(&qword_1009CE400, sub_1003FC048);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009E1C80);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(22, -1);
      v12 = swift_slowAlloc(64, -1);
      v31 = v12;
      *(_DWORD *)v11 = 136315394;
      v30 = sub_100040F58(0xD000000000000019, 0x80000001007B8160, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v11 + 4, v11 + 12);
      *(_WORD *)(v11 + 12) = 2080;
      v13 = sub_100329478(a1);
      v15 = v14;
      v30 = sub_100040F58(v13, v14, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v11 + 14, v11 + 22);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: tabBar identifier: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    v16 = swift_allocObject(&unk_1008F4C08, 40, 7);
    *(_BYTE *)(v16 + 16) = a1;
    *(_QWORD *)(v16 + 24) = v2;
    *(_QWORD *)(v16 + 32) = v6;
    v17 = v6;
    v18 = v2;
    sub_10021C2CC(sub_1002218F0, v16);

  }
  return swift_release(v16);
}

uint64_t sub_10021BC40(unint64_t *a1, unint64_t *a2)
{
  return sub_10021EFDC(*a1, *a2);
}

void sub_10021BC4C(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v4 = v3;
  if (qword_1009CDCC0 != -1)
  {
    swift_once(&qword_1009CDCC0, sub_100064C64);
    v3 = v4;
  }
  objc_msgSend(v3, "postNotificationName:object:", qword_100A1E348, a2);

}

void sub_10021BCF0(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  id v12;

  if (a1 < 0)
    v2 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  else
    v2 = a1;
  v3 = OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind;
  if (v2 != (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind) & 0x7FFFFFFFFFFFFFFFLL))
  {
    v5 = (void *)a1;
    if (a1 < 0)
      v5 = *(void **)(*(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL)
                                + OBJC_IVAR___BKSplitViewController_contentHostingController)
                    + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v6 = v5;
    objc_msgSend(v6, "undockMiniPlayer");
    swift_unknownObjectRelease(v6);
    v7 = *(_QWORD *)(v1 + v3);
    v8 = (id)(v7 & 0x7FFFFFFFFFFFFFFFLL);
    sub_10022148C(a1, v7);

    if ((*(_BYTE *)(v1 + OBJC_IVAR___BKRootBarCoordinator_isMiniPlayerHidden) & 1) == 0)
    {
      v9 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
      if (v9)
      {
        v10 = *(_QWORD *)(v1 + v3);
        if ((v10 & 0x8000000000000000) != 0)
          v10 = *(_QWORD *)(*(_QWORD *)(v10 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                          + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
        v11 = (id)v10;
        v12 = v9;
        objc_msgSend(v11, "dockMiniPlayer:", v12);

        swift_unknownObjectRelease(v11);
      }
    }
  }
}

uint64_t sub_10021BEA0(uint64_t result)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;

  v2 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
  if (v2)
  {
    if (result && v2 == (void *)result)
      return result;
    if ((*(_BYTE *)(v1 + OBJC_IVAR___BKRootBarCoordinator_isMiniPlayerHidden) & 1) == 0)
    {
      v3 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
      if ((v3 & 0x8000000000000000) != 0)
        v3 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                       + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
      v4 = (id)v3;
      v5 = v2;
      objc_msgSend(v4, "dockMiniPlayer:", v5);

      return swift_unknownObjectRelease(v4);
    }
  }
  else if (!result)
  {
    return result;
  }
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v6 & 0x8000000000000000) != 0)
    v6 = *(_QWORD *)(*(_QWORD *)(v6 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                   + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
  v7 = (id)v6;
  objc_msgSend(v7, "undockMiniPlayer");
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_10021C000(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  unint64_t v5;
  id v6;
  id v7;

  if (*(_BYTE *)(v1 + OBJC_IVAR___BKRootBarCoordinator_isMiniPlayerHidden) != (result & 1))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR___BKRootBarCoordinator_isMiniPlayerHidden))
    {
      v2 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
      if ((v2 & 0x8000000000000000) != 0)
        v2 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                       + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
      v3 = (id)v2;
      objc_msgSend(v3, "undockMiniPlayer");
      return swift_unknownObjectRelease(v3);
    }
    else
    {
      v4 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
      if (v4)
      {
        v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
        if ((v5 & 0x8000000000000000) != 0)
          v5 = *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                         + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
        v6 = (id)v5;
        v7 = v4;
        objc_msgSend(v6, "dockMiniPlayer:", v7);

        return swift_unknownObjectRelease(v6);
      }
    }
  }
  return result;
}

void sub_10021C100(char *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t Strong;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  char *v20;

  if (a1)
  {
    v3 = &a1[OBJC_IVAR___BKPalettePresentationInteraction_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR___BKPalettePresentationInteraction_delegate]);
    v5 = a1;
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      if (Strong == v1)
        swift_unknownObjectWeakAssign(v3, 0);
    }
    v6 = &v5[OBJC_IVAR___BKPalettePresentationInteraction_transitioningDelegate];
    v7 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR___BKPalettePresentationInteraction_transitioningDelegate]);
    if (v7)
    {
      v8 = v7;
      swift_unknownObjectRelease(v7);
      if (v8 == v1)
        swift_unknownObjectWeakAssign(v6, 0);
    }
    v9 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
    if (v9)
    {
      v10 = objc_msgSend(v9, "view");
      if (!v10)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
      v11 = v10;
      objc_msgSend(v10, "removeInteraction:", v5);

    }
  }
  v12 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction);
  if (v12)
  {
    v13 = OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController;
    v14 = *(void **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
    v20 = *(char **)(v1 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction);
    if (!v14)
    {
      v19 = v12;
LABEL_19:
      swift_unknownObjectWeakAssign(&v20[OBJC_IVAR___BKPalettePresentationInteraction_delegate], v1);
      swift_unknownObjectWeakAssign(&v20[OBJC_IVAR___BKPalettePresentationInteraction_transitioningDelegate], v1);

      return;
    }
    v15 = v12;
    v16 = objc_msgSend(v14, "view");
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, "addInteraction:", v15);

      v18 = *(void **)(v1 + v13);
      if (v18)
        objc_msgSend(v18, "addSpringLoadedInteractionWith:", v15);
      goto LABEL_19;
    }
    goto LABEL_21;
  }
}

void sub_10021C2CC(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v19;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___BKRootBarCoordinator_sceneController);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___BKRootBarCoordinator_presentersProvider);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "bookPresenter");
      v17 = v6;
      v10 = objc_msgSend(v9, "bookPresenterCurrentlyOpenBookForSingleScene:", v17);
      swift_unknownObjectRelease(v10);

      v11 = swift_unknownObjectRelease(v9);
      if (v10)
      {
        v12 = objc_msgSend(v17, "newShowAssetTransaction");
        v13 = objc_msgSend(v8, "bookPresenter");
        v14 = swift_allocObject(&unk_1008F4A28, 32, 7);
        *(_QWORD *)(v14 + 16) = a1;
        *(_QWORD *)(v14 + 24) = a2;
        aBlock[4] = sub_10021F0CC;
        v19 = v14;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000147F0;
        aBlock[3] = &unk_1008F4A40;
        v15 = _Block_copy(aBlock);
        v16 = v19;
        swift_unknownObjectRetain(v12);
        sub_10002ACF0((uint64_t)a1, a2);
        swift_release(v16);
        objc_msgSend(v13, "closeAllPresentersForSingleSceneWithTransaction:animated:completion:", v12, 1, v15);
        _Block_release(v15);

        swift_unknownObjectRelease(v8);
        swift_unknownObjectRelease(v13);
        swift_unknownObjectRelease_n(v12, 2);
      }
      else
      {
        if (a1)
          ((void (*)(uint64_t))a1)(v11);
        swift_unknownObjectRelease(v8);

      }
      return;
    }

  }
  if (a1)
    a1();
}

id sub_10021C4F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootBarCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10021C644()
{
  uint64_t v0;
  unint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  objc_super v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v1 & 0x8000000000000000) != 0)
  {
    v11 = *(char **)(v1 + OBJC_IVAR___BKSplitViewController_contentHostingController);
    v16.receiver = *(id *)&v11[OBJC_IVAR___BKSplitViewContentHostingController_viewController];
    v16.super_class = (Class)type metadata accessor for MainContentViewController();
    v12 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
    v2 = v11;
    v13 = objc_msgSendSuper2(&v16, "contentNavigationController");
    if (v13)
    {
      v14 = v13;
      v10 = objc_msgSend(v13, "topViewController", v16.receiver, v16.super_class);

      return v10;
    }

LABEL_9:
    return 0;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v2 = (char *)(id)v1;
  v3 = (void *)static OS_dispatch_queue.main.getter(v2);
  v4 = &_dispatch_main_q;
  v5 = &_dispatch_main_q;
  v6 = v3;
  v7 = &_dispatch_main_q;
  if (v6 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v4 = v6;
  }

  v8 = sub_10004C404();
  if (!v8)
    goto LABEL_9;
  v9 = v8;
  v10 = objc_msgSend(v8, "topViewController");

  return v10;
}

void sub_10021C7B8(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  Swift::String v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  if (qword_1009CE408 != -1)
    swift_once(&qword_1009CE408, sub_10006B6D0);
  v8 = type metadata accessor for Logger(0);
  sub_100048F64(v8, (uint64_t)qword_1009E1C98);
  v9 = swift_bridgeObjectRetain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(32, -1);
    v31 = a3;
    v13 = swift_slowAlloc(96, -1);
    v33 = v13;
    *(_DWORD *)v12 = 136315650;
    v32 = sub_100040F58(0xD000000000000020, 0x80000001007B8030, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2080;
    v32 = sub_100040F58(0xD000000000000012, 0x8000000100712D80, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 14, v12 + 22);
    *(_WORD *)(v12 + 22) = 2080;
    swift_bridgeObjectRetain(a2);
    v32 = sub_100040F58(a1, (unint64_t)a2, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 24, v12 + 32);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s %s select tab with identifier %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v13, 3, (char *)&type metadata for Any + 8);
    v14 = v13;
    a3 = v31;
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v15 = *(_QWORD *)(v4 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v15 & 0x8000000000000000) != 0)
  {
    v28 = *(void **)(v15 + OBJC_IVAR___BKSplitViewController_contentHostingController);
    v29 = (id)(v15 & 0x7FFFFFFFFFFFFFFFLL);
    v16 = v28;
    v30._countAndFlagsBits = a1;
    v30._object = a2;
    SplitViewContentHostingController.select(identifier:isUserAction:editNameOnSelect:)(v30, a3 & 1, 0);

  }
  else
  {
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v16 = (id)v15;
    v17 = (void *)static OS_dispatch_queue.main.getter(v16);
    v18 = &_dispatch_main_q;
    v19 = &_dispatch_main_q;
    v20 = v17;
    v21 = &_dispatch_main_q;
    if (v20 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v18 = v20;
    }

    v22 = sub_1004F3980(a1, (unint64_t)a2);
    if ((v23 & 1) == 0)
    {
      v24 = v22;
      if ((*((_BYTE *)v16 + OBJC_IVAR___BKTabBarController_isTransferingFromSidebar) & 1) == 0 && (a3 & 1) != 0)
      {
        v25 = objc_msgSend(v16, "bk_rootBarCoordinator");
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, "rootViewController");
          swift_unknownObjectRelease(v26);
          objc_msgSend(v27, "bc_dismissIfSafeAnimated:", 0);

        }
      }
      objc_msgSend(v16, "bc_setSelectedIndex:", v24);
      sub_100049A90();
    }
  }

}

BOOL sub_10021CBAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char v12;
  char v13;
  void *v15;
  id v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27[24];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v5 & 0x8000000000000000) != 0)
  {
    v15 = *(void **)(v5 + OBJC_IVAR___BKSplitViewController_contentHostingController);
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v16 = (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
    v17 = v15;
    v18 = (void *)static OS_dispatch_queue.main.getter(v17);
    v19 = &_dispatch_main_q;
    v20 = &_dispatch_main_q;
    v21 = v18;
    v22 = &_dispatch_main_q;
    if (v21 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v19 = v21;
    }

    v23 = &v17[OBJC_IVAR___BKSplitViewContentHostingController_standardItems];
    swift_beginAccess(&v17[OBJC_IVAR___BKSplitViewContentHostingController_standardItems], v27, 0, 0);
    v24 = *(_QWORD *)v23;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v24);
    v26 = sub_1002C5E9C(v25, a1, a2);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(a2);

    if (v26)
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v6 = (id)v5;
    v7 = (void *)static OS_dispatch_queue.main.getter(v6);
    v8 = &_dispatch_main_q;
    v9 = &_dispatch_main_q;
    v10 = v7;
    v11 = &_dispatch_main_q;
    if (v10 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v8 = v10;
    }

    sub_1004F3980(a1, a2);
    v13 = v12;

    return (v13 & 1) == 0;
  }
}

id sub_10021CEBC(uint64_t a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  Swift::String v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  char v30[24];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v5 & 0x8000000000000000) != 0)
  {
    v15 = (void *)(v5 & 0x7FFFFFFFFFFFFFFFLL);
    v16 = *(void **)(v5 + OBJC_IVAR___BKSplitViewController_contentHostingController);
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v17 = v15;
    v18 = v16;
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    v20 = &_dispatch_main_q;
    v21 = &_dispatch_main_q;
    v22 = v19;
    v23 = &_dispatch_main_q;
    if (v22 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v20 = v22;
    }

    v24 = &v18[OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers];
    swift_beginAccess(&v18[OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers], v30, 0, 0);
    v25 = *(_QWORD *)v24;
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(v25);
      v26 = sub_10004CE80(a1, (uint64_t)a2);
      if ((v27 & 1) != 0)
      {
        v28 = *(id *)(*(_QWORD *)(v25 + 56) + 8 * v26);
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v25);
        v14 = objc_msgSend(v28, "topViewController");

        return v14;
      }

      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v25);
    }
    else
    {

    }
    return 0;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (id)v5;
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = &_dispatch_main_q;
  v9 = &_dispatch_main_q;
  v10 = v7;
  v11 = &_dispatch_main_q;
  if (v10 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v8 = v10;
  }

  v12._countAndFlagsBits = a1;
  v12._object = a2;
  v13 = (void *)TabBarController.navigationController(forIdentifier:)(v12);
  v14 = objc_msgSend(v13, "topViewController");

  return v14;
}

void sub_10021D154(void *a1, void *a2)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  id v7;
  id v8;
  id v9;
  int64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_splitViewController);
  if (v3)
  {
    v4 = *(void **)(v2 + OBJC_IVAR___BKRootBarCoordinator_tabBarController);
    if (v4)
    {
      v17 = (id)v3;
      v7 = v4;
      v8 = objc_msgSend(a1, "horizontalSizeClass");
      v9 = objc_msgSend(a2, "horizontalSizeClass");
      if (v8 == (id)2)
      {
        if (v9 != (id)1)
        {
LABEL_14:

          return;
        }
        v11 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
        *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind) = v4;
        v12 = v7;
      }
      else
      {
        if (v8 != (id)1 || v9 != (id)2)
          goto LABEL_14;
        v11 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
        *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind) = v3 | 0x8000000000000000;
        v12 = v17;
      }
      v13 = v12;
      sub_10021BCF0(v11);

      v14 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
      v15 = objc_msgSend(v14, "sceneManager");

      v16 = objc_msgSend(v15, "minifiedFlowController");
      objc_msgSend(v16, "activeRootBarKindDidChange");

      goto LABEL_14;
    }
  }
}

void sub_10021D350()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR___BKRootBarCoordinator_tabBarController);
  if (v1)
  {
    v5 = v1;
    sub_1004F3EF4();

  }
  else
  {
    v2 = *(char **)(v0 + OBJC_IVAR___BKRootBarCoordinator_splitViewController);
    if (v2)
    {
      v3 = *(void **)&v2[OBJC_IVAR___BKSplitViewController_contentHostingController];
      v4 = v2;
      v6 = v3;
      sub_1002B4C74();

    }
  }
}

void sub_10021D418(void *a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v7 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v8 = objc_msgSend(v7, "sceneManager");

  v9 = objc_msgSend(v8, "minifiedFlowController");
  objc_msgSend(v9, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);

  v10 = swift_allocObject(&unk_1008F4B68, 24, 7);
  *(_QWORD *)(v10 + 16) = v3;
  v14[4] = sub_100221860;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1004D7C0C;
  v14[3] = &unk_1008F4B80;
  v11 = _Block_copy(v14);
  v12 = v15;
  v13 = v3;
  swift_release(v12);
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v11);
  _Block_release(v11);
}

void sub_10021D560(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v3 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v4 = objc_msgSend(v3, "windowManager");

  v5 = objc_msgSend(*(id *)(a2 + OBJC_IVAR___BKRootBarCoordinator_rootViewController), "view");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "window");

    objc_msgSend(v4, "updateWindowSizeIfNeeded:", v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_10021D630(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  BOOL v4;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;

  v2 = OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController;
  v3 = *(void **)&v1[OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController];
  if (v3)
    v4 = v3 == a1;
  else
    v4 = 0;
  if (!v4)
  {
    objc_msgSend(v1, "undockMiniPlayer");
    v6 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = a1;
    v7 = a1;
    sub_10021BEA0((uint64_t)v6);

    v8 = *(void **)&v1[OBJC_IVAR___BKRootBarCoordinator_miniPlayerInteraction];
    v9 = *(char **)&v1[OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction];
    *(_QWORD *)&v1[OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction] = v8;
    v10 = v8;
    sub_10021C100(v9);

  }
}

void sub_10021D748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char *v5;
  void *v6;

  v1 = OBJC_IVAR___BKRootBarCoordinator_undockingMiniPlayer;
  if ((*(_BYTE *)(v0 + OBJC_IVAR___BKRootBarCoordinator_undockingMiniPlayer) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR___BKRootBarCoordinator_undockingMiniPlayer) = 1;
    v2 = OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController;
    v3 = *(void **)(v0 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController);
    if (v3)
    {
      objc_msgSend(v3, "willUndock");
      v4 = *(void **)(v0 + v2);
    }
    else
    {
      v4 = 0;
    }
    *(_QWORD *)(v0 + v2) = 0;
    sub_10021BEA0((uint64_t)v4);

    v5 = *(char **)(v0 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction);
    *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction) = 0;
    sub_10021C100(v5);

    v6 = *(void **)(v0 + OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController);
    *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController) = 0;

    *(_BYTE *)(v0 + v1) = 0;
  }
}

uint64_t sub_10021D820(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;

  if (!*(_QWORD *)&v3[OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController])
  {
    v7 = sub_1003B0800();
    if (!v7)
      v7 = sub_1003B0CF0();
    v8 = (void *)v7;
    v9 = objc_opt_self(BKAssetPresentingViewController);
    v10 = (void *)swift_dynamicCastObjCClass(a1, v9);
    v11 = v8;
    if (v10)
    {
      v12 = objc_msgSend(v10, "assetViewController");
      if (v12)
      {
        v13 = v12;
        v14 = type metadata accessor for AudiobookNowPlayingTouchViewController();
        v15 = swift_dynamicCastClass(v13, v14);
        if (v15)
        {
          Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v15 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
          v10 = (void *)Strong;
          if (Strong)
          {
            v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
            swift_retain(v17);
            swift_unknownObjectRelease(v10);
            v10 = (void *)swift_unknownObjectWeakLoadStrong(v17 + 16);

            swift_release(v17);
          }
          else
          {

          }
        }
        else
        {

          v10 = 0;
        }
      }
      else
      {
        v10 = 0;
      }
    }
    v18 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v11[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler]+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
      swift_retain(v20);
      swift_unknownObjectRelease(v19);
      swift_unknownObjectWeakAssign(v20 + 16, v10);

      swift_release(v20);
    }
    else
    {

    }
    swift_unknownObjectRelease(v10);
    objc_msgSend(v3, "dockMiniPlayer:", v11);

  }
  v21 = *(void **)&v3[OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController];
  *(_QWORD *)&v3[OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController] = a1;
  v22 = a1;

  v23 = swift_allocObject(&unk_1008F4A00, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  sub_10002ACF0(a2, a3);
  sub_10030AC4C((void (*)(id))sub_10021F0CC, v23);
  return swift_release(v23);
}

void sub_10021DAF0(void (*a1)(void), uint64_t a2)
{
  char *v2;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  uint64_t aBlock[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(void **)&v2[OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController];
  if (v5)
  {
    if (a1)
    {
      aBlock[4] = (uint64_t)a1;
      v19 = a2;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000147F0;
      aBlock[3] = (uint64_t)&unk_1008F49A0;
      v6 = _Block_copy(aBlock);
      v7 = v19;
      v8 = v5;
      sub_10002ACF0((uint64_t)a1, a2);
      swift_release(v7);
    }
    else
    {
      v17 = v5;
      v6 = 0;
    }
    objc_msgSend(v2, "presentFullPlayer:completion:", v5, v6);
    _Block_release(v6);

  }
  else
  {
    if (qword_1009CE408 != -1)
      swift_once(&qword_1009CE408, sub_10006B6D0);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100048F64(v9, (uint64_t)qword_1009E1C98);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = v11;
    v13 = Logger.logObject.getter(v11);
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      aBlock[0] = v16;
      *(_DWORD *)v15 = 136315138;
      v20 = sub_100040F58(0xD000000000000023, 0x80000001007B8000, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v15 + 4, v15 + 12);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s no full player to present", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }

    if (a1)
      a1();
  }
}

void sub_10021DE60(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_10021DE9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  NSString v15;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE700000000000000);
  objc_msgSend(v14, "selectWithIdentifier:isUserAction:", v15, 0);

}

void sub_10021DF48(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10021DFAC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  swift_bridgeObjectRelease(v1 + 2059);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKRootBarCoordinator_sceneController);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "newShowURLTransaction");

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKRootBarCoordinator_presentersProvider);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "libraryCollectionPresenter");
    swift_unknownObjectRelease(v6);
    objc_msgSend(v7, "showLibraryWithTransaction:", v4);
    swift_unknownObjectRelease(v4);
    v8 = v7;
  }
  else
  {
    v8 = v4;
  }
  return swift_unknownObjectRelease(v8);
}

uint64_t sub_10021E20C()
{
  unsigned __int8 v0;
  char v1;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736B6F6F62, 0xE500000000000000, 0x65526F54746E6177, 0xEA00000000006461, 0);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v1 & 1) != 0)
    JUMPOUT(0x10021E378);
  return ((uint64_t (*)(_QWORD))((char *)&loc_10021E2C4 + dword_10021E554[v0 - 2]))(0);
}

void sub_10021E2D4()
{
  char v0;

  v0 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736B6F6F62, 0xE500000000000000, 0x656C706D6153796DLL, 0xE900000000000073, 0);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v0 & 1) == 0)
    JUMPOUT(0x10021E374);
  JUMPOUT(0x10021E378);
}

void sub_10021E2E8()
{
  uint64_t v0;
  char v1;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F6F626F69647561, v0 + 3850, 0x656C706D6153796DLL, 0xE900000000000073, 0);
  swift_bridgeObjectRelease(v0 + 3850);
  if ((v1 & 1) == 0)
    JUMPOUT(0x10021E374);
  JUMPOUT(0x10021E378);
}

void sub_10021E300()
{
  char v0;

  v0 = _stringCompareWithSmolCheck(_:_:expecting:)(1936090224, 0xE400000000000000, 0x656C706D6153796DLL, 0xE900000000000073, 0);
  swift_bridgeObjectRelease(0xE400000000000000);
  if ((v0 & 1) == 0)
    JUMPOUT(0x10021E374);
  JUMPOUT(0x10021E378);
}

void sub_10021E324()
{
  JUMPOUT(0x10021E338);
}

uint64_t sub_10021E56C(uint64_t a1, char a2)
{
  void *Strong;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR___BKRootBarCoordinator_sceneController);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "newShowURLTransaction");

  }
  else
  {
    v6 = 0;
  }
  v7 = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR___BKRootBarCoordinator_presentersProvider);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "libraryCollectionPresenter");
    swift_unknownObjectRelease(v8);
    sub_100329560(a2);
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v9, "showLibraryCollectionInPlaceWithTransaction:collectionID:replaceExistingPresentedCollection:", v6, v12, 1);

    swift_unknownObjectRelease(v6);
    v6 = v9;
  }
  return swift_unknownObjectRelease(v6);
}

void sub_10021E64C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_10021E690(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  NSString v15;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000001007B1C10);
  objc_msgSend(v14, "selectWithIdentifier:isUserAction:", v15, 0);

}

double sub_10021E780(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;

  if (qword_1009CE400 != -1)
    swift_once(&qword_1009CE400, sub_1003FC048);
  v4 = type metadata accessor for Logger(0);
  sub_100048F64(v4, (uint64_t)qword_1009E1C80);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v13 = v9;
    *(_DWORD *)v8 = 136315394;
    v12 = sub_100040F58(0xD000000000000010, 0x80000001007B8140, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4, v8 + 12);
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v12 = sub_100040F58(a1, a2, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 14, v8 + 22);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "RootBarCoordinator: %s: term: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v10 = swift_allocObject(&unk_1008F4BB8, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_bridgeObjectRetain(a2);
  sub_10021C2CC(sub_10022188C, v10);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_10021E9A8()
{
  void *v0;
  id v1;

  v0 = (void *)objc_opt_self(JSAApplication);
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "searchForTerm:", v1);

}

id UIViewController.rootBarCoordinator.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "splitViewController");
  if (!v1)
    v1 = objc_msgSend(v0, "tabBarController");
  v2 = objc_msgSend(v1, "bk_rootBarCoordinator");

  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for RootBarCoordinator.RootBarKind(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for RootBarCoordinator.RootBarKind(_QWORD *a1)
{

}

uint64_t *assignWithCopy for RootBarCoordinator.RootBarKind(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for RootBarCoordinator.RootBarKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for RootBarCoordinator.RootBarKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RootBarCoordinator.RootBarKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10021EC68(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_10021EC74(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_10021EC84(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for RootBarCoordinator.RootBarKind()
{
  return &type metadata for RootBarCoordinator.RootBarKind;
}

char *sub_10021ECA8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  char *v31;
  void *v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  _QWORD *v39;
  _QWORD v40[5];

  v36 = a1;
  v37 = a2;
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[3] = type metadata accessor for StandardItemsCacheManager();
  v40[4] = &protocol witness table for StandardItemsCacheManager;
  v40[0] = a3;
  a4[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_loadedFromBag] = 0;
  v19 = &a4[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items];
  v39 = _swiftEmptyArrayStorage;
  v20 = a4;
  v21 = sub_10004CFD4(&qword_1009E8800);
  Published.init(initialValue:)(&v39, v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  *(_QWORD *)&v20[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag] = 0;
  v34 = OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheAccessQueue;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  v39 = _swiftEmptyArrayStorage;
  v22 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v24 = sub_100030B34((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40, (uint64_t)&protocol conformance descriptor for [A]);
  v25 = v35;
  v26 = v22;
  v27 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v23, v24, v6, v26);
  v28 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x80000001007B2950, v14, v25, v11, 0);
  *(_QWORD *)&v20[v34] = v28;
  *(_QWORD *)&v20[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_restrictionProvider] = v27;
  sub_10002E418((uint64_t)v40, (uint64_t)&v20[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager]);
  swift_unknownObjectRetain(v27);

  v29 = (objc_class *)type metadata accessor for RootBarStandardItemsManager(0);
  v38.receiver = v20;
  v38.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v38, "init");
  v31 = v30;
  if (v37)
  {
    v32 = *(void **)&v30[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag];
    *(_QWORD *)&v30[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag] = v37;
    swift_unknownObjectRelease(v27);

  }
  else
  {
    swift_unknownObjectRelease(v27);
  }
  _s5Books15CurrentPageViewVwxx_0(v40);
  return v31;
}

uint64_t sub_10021EFDC(unint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  void *v9;

  if ((a1 & 0x8000000000000000) != 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      v9 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
      sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
      v4 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
      v5 = v9;
      v6 = v4;
      v7 = v5;
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
    v4 = (id)a1;
    v5 = (id)a2;
    v6 = v4;
    v7 = v5;
LABEL_7:
    v8 = static NSObject.== infix(_:_:)(v6, v7);

    return v8 & 1;
  }
  v8 = 0;
  return v8 & 1;
}

uint64_t sub_10021F0A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021F0CC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

char *sub_10021F0F4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *ObjectType;
  objc_super v48;
  _BYTE v49[24];

  v45 = a4;
  v46 = a5;
  v44 = a3;
  v42 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = sub_10004CFD4(&qword_1009D35C8);
  v43 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D7940);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC5Books18SidebarDataManager_selectionStatePublisher;
  v16 = sub_10004CFD4(&qword_1009D35A0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = a6;
  *(_QWORD *)&a6[v15] = PassthroughSubject.init()();
  v18 = OBJC_IVAR____TtC5Books18SidebarDataManager_searchBarPublisher;
  v19 = sub_10004CFD4(&qword_1009D34F8);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  *(_QWORD *)&v17[v18] = PassthroughSubject.init()();
  v20 = OBJC_IVAR____TtC5Books18SidebarDataManager_standardItemsPublisher;
  v21 = sub_10004CFD4(&qword_1009D3510);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)&v17[v20] = PassthroughSubject.init()();
  v22 = OBJC_IVAR____TtC5Books18SidebarDataManager_defaultCollectionsPublisher;
  v23 = sub_10004CFD4(&qword_1009D3548);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)&v17[v22] = PassthroughSubject.init()();
  v24 = OBJC_IVAR____TtC5Books18SidebarDataManager_userCollectionsPublisher;
  v25 = sub_10004CFD4(&qword_1009D3560);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)&v17[v24] = PassthroughSubject.init()();
  v26 = OBJC_IVAR____TtC5Books18SidebarDataManager_accountPublisher;
  v27 = sub_10004CFD4(&qword_1009D3578);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  *(_QWORD *)&v17[v26] = PassthroughSubject.init()();
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18SidebarDataManager_cancellables] = &_swiftEmptySetSingleton;
  swift_beginAccess(&a1[OBJC_IVAR___BKSplitViewContentHostingController__selectedItem], v49, 33, 0);
  v28 = sub_10004CFD4(&qword_1009D33C8);
  Published.projectedValue.getter(v28);
  swift_endAccess(v49);
  v29 = sub_100030B34(&qword_1009D33D0, &qword_1009D7940, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v30 = Publisher.eraseToAnyPublisher()(v11, v29);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18SidebarDataManager_selectedItemReceiver] = v30;
  swift_beginAccess(v42 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v49, 33, 0);
  v31 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.getter(v31);
  swift_endAccess(v49);
  v32 = sub_100030B34((unint64_t *)&unk_1009EE4F0, &qword_1009D35C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v33 = Publisher.eraseToAnyPublisher()(v8, v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18SidebarDataManager_standardItemsReceiver] = v33;
  v34 = &v17[OBJC_IVAR____TtC5Books18SidebarDataManager_contactDescriptorKeys];
  v35 = v45;
  *(_QWORD *)v34 = v44;
  *((_QWORD *)v34 + 1) = v35;
  v36 = v46;
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18SidebarDataManager_restrictionsProvider] = v46;
  swift_retain(v35);
  swift_unknownObjectRetain(v36);

  v48.receiver = v17;
  v48.super_class = ObjectType;
  v37 = (char *)objc_msgSendSuper2(&v48, "init");
  v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC5Books18SidebarDataManager_restrictionsProvider];
  v39 = v37;
  objc_msgSend((id)swift_unknownObjectRetain(v38), "addObserver:", v39);
  swift_unknownObjectRelease(v38);

  swift_release(v35);
  swift_unknownObjectRelease(v36);
  return v39;
}

_QWORD *sub_10021F4C8(void *a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  id v31;
  objc_class *v32;
  char *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  void *v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  void *v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v194;
  uint64_t v195;
  _QWORD *v196;
  char *v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t);
  unint64_t v200;
  id v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  id v207;

  v201 = a2;
  v202 = a3;
  v8 = sub_10004CFD4(&qword_1009D34A0);
  v9 = *(_QWORD *)(v8 - 8);
  v189 = v8;
  v190 = v9;
  __chkstk_darwin(v8);
  v187 = (char *)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D34A8);
  v12 = *(_QWORD *)(v11 - 8);
  v191 = v11;
  v192 = v12;
  __chkstk_darwin(v11);
  v188 = (char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_10004CFD4(&qword_1009D34B0);
  v184 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v181 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_10004CFD4(&qword_1009D34B8);
  v186 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v182 = (char *)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_10004CFD4(&qword_1009D34C0);
  v180 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v178 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_10004CFD4(&qword_1009D34C8);
  v177 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v175 = (char *)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_10004CFD4(&qword_1009D34D0);
  v172 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_10004CFD4(&qword_1009D34D8);
  v174 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v170 = (char *)&v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_10004CFD4(&qword_1009D34E0);
  v168 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v166 = (char *)&v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v21);
  v197 = (char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for DispatchQoS.QoSClass(0);
  v23 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v25 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_10004CFD4(&qword_1009D34E8);
  v165 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v163 = (char *)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009D3488);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  a5[2] = PassthroughSubject.init()();
  v28 = sub_10004CFD4(&qword_1009D3470);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  a5[3] = PassthroughSubject.init()();
  a5[4] = &_swiftEmptySetSingleton;
  v205 = a5 + 4;
  v29 = (void *)objc_opt_self(BURestrictionsProvider);
  v30 = a1;
  swift_retain(a4);
  v31 = objc_msgSend(v29, "sharedInstance");
  v32 = (objc_class *)type metadata accessor for SidebarDataManager();
  v33 = (char *)objc_allocWithZone(v32);
  v34 = v201;
  v35 = sub_10021F0F4(v30, (uint64_t)v34, v202, a4, (uint64_t)v31, v33);

  a5[8] = v32;
  a5[9] = &off_1008FF0B8;
  a5[5] = v35;
  v196 = a5 + 5;
  v206 = a5[3];
  v36 = v206;
  v37 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  LODWORD(v202) = enum case for DispatchQoS.QoSClass.default(_:);
  v201 = *(id *)(v23 + 104);
  v38 = v204;
  ((void (*)(char *))v201)(v25);
  swift_retain(v36);
  v39 = (void *)static OS_dispatch_queue.global(qos:)(v25);
  v199 = *(void (**)(char *, uint64_t))(v23 + 8);
  v199(v25, v38);
  v207 = v39;
  v198 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 56);
  v40 = (uint64_t)v197;
  v193(v197, 1, 1, v198);
  v41 = sub_100030B34(&qword_1009D3478, &qword_1009D3470, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v200 = sub_1001EDDD0();
  v42 = v163;
  v43 = v37;
  Publisher.receive<A>(on:options:)(&v207, v40, v28, v37, v41, v200);
  sub_1001EDE18(v40);

  swift_release(v206);
  v44 = swift_allocObject(&unk_1008F4B40, 24, 7);
  swift_weakInit(v44 + 16, a5);
  v45 = sub_100030B34(&qword_1009D34F0, &qword_1009D34E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v46 = v164;
  v47 = Publisher<>.sink(receiveValue:)(sub_1002216E0, v44, v164, v45);
  swift_release(v44);
  (*(void (**)(char *, uint64_t))(v165 + 8))(v42, v46);
  v48 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v48);
  swift_endAccess(&v206);
  swift_release(v47);
  v49 = a5[8];
  v50 = a5[9];
  sub_10003F198(a5 + 5, v49);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
  v203 = v25;
  v51 = v202;
  v52 = v204;
  v53 = (void (*)(char *, uint64_t, uint64_t))v201;
  ((void (*)(char *, _QWORD, uint64_t))v201)(v25, v202, v204);
  v54 = v43;
  v195 = v43;
  v55 = (void *)static OS_dispatch_queue.global(qos:)(v25);
  v56 = v199;
  v199(v25, v52);
  v207 = v55;
  v57 = v193;
  v193((char *)v40, 1, 1, v198);
  v58 = sub_10004CFD4(&qword_1009D34F8);
  v59 = sub_100030B34(&qword_1009D3500, &qword_1009D34F8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v60 = v166;
  Publisher.receive<A>(on:options:)(&v207, v40, v58, v54, v59, v200);
  sub_1001EDE18(v40);

  swift_release(v206);
  v61 = swift_allocObject(&unk_1008F4B40, 24, 7);
  swift_weakInit(v61 + 16, a5);
  v62 = sub_100030B34(&qword_1009D3508, &qword_1009D34E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v63 = v167;
  v64 = Publisher<>.sink(receiveValue:)(sub_1002216E8, v61, v167, v62);
  swift_release(v61);
  (*(void (**)(char *, uint64_t))(v168 + 8))(v60, v63);
  v65 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v65);
  swift_endAccess(&v206);
  swift_release(v64);
  v194 = a5;
  v66 = a5[8];
  v67 = a5[9];
  v68 = v196;
  sub_10003F198(v196, v66);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 24))(v66, v67);
  v70 = v203;
  v69 = v204;
  v53(v203, v51, v204);
  v71 = v195;
  v72 = (void *)static OS_dispatch_queue.global(qos:)(v70);
  v56(v70, v69);
  v207 = v72;
  v74 = (uint64_t)v197;
  v73 = v198;
  v57(v197, 1, 1, v198);
  v75 = sub_10004CFD4(&qword_1009D3510);
  v76 = sub_100030B34(&qword_1009D3518, &qword_1009D3510, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v77 = v169;
  v78 = v200;
  Publisher.receive<A>(on:options:)(&v207, v74, v75, v71, v76, v200);
  sub_1001EDE18(v74);

  swift_release(v206);
  v79 = sub_100030B34(&qword_1009D3520, &qword_1009D34D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v80 = sub_1002216F0();
  v81 = v170;
  v82 = v171;
  Publisher<>.removeDuplicates()(v171, v79, v80);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v77, v82);
  v83 = swift_allocObject(&unk_1008F4B40, 24, 7);
  v84 = v194;
  swift_weakInit(v83 + 16, v194);
  v85 = sub_100030B34(&qword_1009D3540, &qword_1009D34D8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v86 = v173;
  v87 = Publisher<>.sink(receiveValue:)(sub_100221798, v83, v173, v85);
  swift_release(v83);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v81, v86);
  v88 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v88);
  swift_endAccess(&v206);
  swift_release(v87);
  v89 = v84[8];
  v90 = v84[9];
  sub_10003F198(v68, v89);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 40))(v89, v90);
  v92 = v203;
  v91 = v204;
  v93 = v202;
  v94 = (void (*)(char *, uint64_t, uint64_t))v201;
  ((void (*)(char *, _QWORD, uint64_t))v201)(v203, v202, v204);
  v95 = v195;
  v96 = (void *)static OS_dispatch_queue.global(qos:)(v92);
  v97 = v92;
  v98 = v199;
  v199(v97, v91);
  v207 = v96;
  v99 = (uint64_t)v197;
  v57(v197, 1, 1, v73);
  v100 = sub_10004CFD4(&qword_1009D3548);
  v101 = sub_100030B34(&qword_1009D3550, &qword_1009D3548, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v102 = v175;
  Publisher.receive<A>(on:options:)(&v207, v99, v100, v95, v101, v78);
  sub_1001EDE18(v99);

  swift_release(v206);
  v103 = swift_allocObject(&unk_1008F4B40, 24, 7);
  v104 = v194;
  swift_weakInit(v103 + 16, v194);
  v105 = sub_100030B34(&qword_1009D3558, &qword_1009D34C8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v106 = v176;
  v107 = Publisher<>.sink(receiveValue:)(sub_1002217A0, v103, v176, v105);
  swift_release(v103);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v102, v106);
  v108 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v108);
  swift_endAccess(&v206);
  swift_release(v107);
  v109 = v104[8];
  v110 = v104[9];
  v111 = v196;
  sub_10003F198(v196, v109);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 96))(v109, v110);
  v113 = v203;
  v112 = v204;
  v94(v203, v93, v204);
  v114 = v195;
  v115 = (void *)static OS_dispatch_queue.global(qos:)(v113);
  v98(v113, v112);
  v207 = v115;
  v116 = v99;
  v117 = v99;
  v118 = v198;
  v119 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v193;
  v193((char *)v117, 1, 1, v198);
  v120 = sub_10004CFD4(&qword_1009D3560);
  v121 = sub_100030B34(&qword_1009D3568, &qword_1009D3560, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v122 = v178;
  Publisher.receive<A>(on:options:)(&v207, v116, v120, v114, v121, v200);
  sub_1001EDE18(v116);

  swift_release(v206);
  v123 = swift_allocObject(&unk_1008F4B40, 24, 7);
  v124 = v194;
  swift_weakInit(v123 + 16, v194);
  v125 = sub_100030B34(&qword_1009D3570, &qword_1009D34C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v126 = v179;
  v127 = Publisher<>.sink(receiveValue:)(sub_1002217A8, v123, v179, v125);
  swift_release(v123);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v122, v126);
  v128 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v128);
  swift_endAccess(&v206);
  swift_release(v127);
  v129 = v124[8];
  v130 = v124[9];
  sub_10003F198(v111, v129);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 104))(v129, v130);
  v131 = v203;
  v132 = v204;
  ((void (*)(char *, _QWORD, uint64_t))v201)(v203, v202, v204);
  v133 = (void *)static OS_dispatch_queue.global(qos:)(v131);
  v199(v131, v132);
  v207 = v133;
  v119(v116, 1, 1, v118);
  v134 = sub_10004CFD4(&qword_1009D3578);
  v135 = sub_100030B34(&qword_1009D3580, &qword_1009D3578, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v136 = v181;
  v137 = v200;
  Publisher.receive<A>(on:options:)(&v207, v116, v134, v114, v135, v200);
  sub_1001EDE18(v116);

  swift_release(v206);
  v138 = sub_100030B34(&qword_1009D3588, &qword_1009D34B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v139 = sub_1002217B0();
  v140 = v182;
  v141 = v183;
  Publisher<>.removeDuplicates()(v183, v138, v139);
  (*(void (**)(char *, uint64_t))(v184 + 8))(v136, v141);
  v142 = swift_allocObject(&unk_1008F4B40, 24, 7);
  swift_weakInit(v142 + 16, v124);
  v143 = sub_100030B34(&qword_1009D3598, &qword_1009D34B8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v144 = v185;
  v145 = Publisher<>.sink(receiveValue:)(sub_1002217F4, v142, v185, v143);
  swift_release(v142);
  (*(void (**)(char *, uint64_t))(v186 + 8))(v140, v144);
  v146 = v205;
  swift_beginAccess(v205, &v206, 33, 0);
  AnyCancellable.store(in:)(v146);
  swift_endAccess(&v206);
  swift_release(v145);
  v147 = v124[8];
  v148 = v124[9];
  sub_10003F198(v196, v147);
  v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v148 + 8))(v147, v148);
  v149 = v203;
  ((void (*)(char *, _QWORD, uint64_t))v201)(v203, v202, v132);
  v150 = (void *)static OS_dispatch_queue.global(qos:)(v149);
  v199(v149, v132);
  v207 = v150;
  v119(v116, 1, 1, v198);
  v151 = sub_10004CFD4(&qword_1009D35A0);
  v152 = sub_100030B34(&qword_1009D35A8, &qword_1009D35A0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v153 = v187;
  Publisher.receive<A>(on:options:)(&v207, v116, v151, v114, v152, v137);
  sub_1001EDE18(v116);

  swift_release(v206);
  v154 = sub_100030B34(&qword_1009D35B0, &qword_1009D34A0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v155 = sub_1002217FC();
  v156 = v188;
  v157 = v189;
  Publisher<>.removeDuplicates()(v189, v154, v155);
  (*(void (**)(char *, uint64_t))(v190 + 8))(v153, v157);
  v158 = swift_allocObject(&unk_1008F4B40, 24, 7);
  swift_weakInit(v158 + 16, v124);
  v159 = sub_100030B34(&qword_1009D35C0, &qword_1009D34A8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v160 = v191;
  v161 = Publisher<>.sink(receiveValue:)(sub_100221840, v158, v191, v159);
  swift_release(v158);
  (*(void (**)(char *, uint64_t))(v192 + 8))(v156, v160);
  swift_beginAccess(v146, &v206, 33, 0);
  AnyCancellable.store(in:)(v146);
  swift_endAccess(&v206);
  swift_release(v161);
  return v124;
}

id sub_100220684(void *a1, char *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  id v65;
  id result;
  void *v67;
  id v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t ObjCClassFromMetadata;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  NSString v84;
  id v85;
  id v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  _QWORD v99[3];

  v96 = a2;
  v5 = type metadata accessor for Locale(0);
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  v6 = __chkstk_darwin(v5);
  v91 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v93 = (char *)&v87 - v8;
  v92 = type metadata accessor for String.LocalizationValue(0);
  v90 = *(_QWORD *)(v92 - 8);
  v9 = __chkstk_darwin(v92);
  v88 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v89 = (char *)&v87 - v11;
  v12 = (_QWORD *)((char *)a3 + *(_QWORD *)(qword_1009E4150 + (swift_isaMask & *a3) + 96));
  *v12 = &_swiftEmptySetSingleton;
  v13 = type metadata accessor for SidebarPresenter();
  swift_allocObject(v13, 66, 7);
  v14 = a3;
  v15 = a1;
  v16 = sub_100404F28(v15);
  v98 = *(_QWORD *)(qword_1009E4150 + (swift_isaMask & *v14) + 72);
  *(_QWORD *)((char *)v14 + v98) = v16;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = sub_10004CFD4(&qword_1009D3438);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = swift_retain(v17);
  v20 = PassthroughSubject.init()(v19);
  v21 = type metadata accessor for SidebarViewModel(0);
  v22 = sub_100008DB0(&qword_1009D3440, type metadata accessor for SidebarViewModel, (uint64_t)&protocol conformance descriptor for SidebarViewModel);
  v23 = ObservedObject.init(wrappedValue:)(v17, v21, v22);
  v24 = (_QWORD *)((char *)v14 + *(_QWORD *)(qword_1009E4150 + (swift_isaMask & *v14) + 64));
  v97 = v24;
  *v24 = v20;
  v24[1] = v23;
  v24[2] = v25;
  v26 = type metadata accessor for SidebarInteractor();
  v27 = (_QWORD *)swift_allocObject(v26, 80, 7);
  v28 = v15;
  v29 = v96;
  v30 = sub_10021F4C8(v28, v29, (uint64_t)variable initialization expression of InfoBar.MessageQueue.timedMessages, 0, v27);

  v96 = *(char **)(qword_1009E4150 + (swift_isaMask & *v14) + 80);
  *(_QWORD *)&v96[(_QWORD)v14] = v30;
  v31 = type metadata accessor for SidebarRouter();
  swift_allocObject(v31, 40, 7);
  v32 = sub_10066BBA4(v28);
  v33 = *(_QWORD *)(qword_1009E4150 + (swift_isaMask & *v14) + 88);
  *(_QWORD *)((char *)v14 + v33) = v32;
  v99[0] = v20;
  v34 = *(_QWORD *)(v16 + 40);
  v35 = sub_100030B34(&qword_1009D3448, &qword_1009D3438, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v36 = sub_100030B34(&qword_1009D3450, &qword_1009D3438, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  swift_retain(v20);
  v37 = swift_retain(v34);
  v38 = Publisher.subscribe<A>(_:)(v37, v18, v18, v35, v36);
  swift_release(v20);
  swift_release(v34);
  swift_beginAccess(v12, v99, 33, 0);
  AnyCancellable.store(in:)(v12);
  swift_endAccess(v99);
  swift_release(v38);
  v39 = v98;
  v40 = *(_QWORD *)(*(_QWORD *)((char *)v14 + v98) + 32);
  v99[0] = v40;
  v41 = *(_QWORD *)(*(_QWORD *)((char *)v14 + v33) + 16);
  swift_retain(v40);
  swift_retain(v41);
  v42 = sub_10004CFD4(&qword_1009D3458);
  v43 = sub_100030B34(&qword_1009D3460, &qword_1009D3458, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v44 = sub_100030B34(&qword_1009D3468, &qword_1009D3458, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v45 = Publisher.subscribe<A>(_:)(v41, v42, v42, v43, v44);
  swift_release(v40);
  swift_release(v41);
  swift_beginAccess(v12, v99, 33, 0);
  AnyCancellable.store(in:)(v12);
  swift_endAccess(v99);
  swift_release(v45);
  v46 = *(_QWORD *)(*(_QWORD *)((char *)v14 + v39) + 24);
  v99[0] = v46;
  v47 = v96;
  v48 = *(_QWORD *)(*(_QWORD *)&v96[(_QWORD)v14] + 24);
  swift_retain(v46);
  swift_retain(v48);
  v49 = sub_10004CFD4(&qword_1009D3470);
  v50 = sub_100030B34(&qword_1009D3478, &qword_1009D3470, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v51 = sub_100030B34(&qword_1009D3480, &qword_1009D3470, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v52 = Publisher.subscribe<A>(_:)(v48, v49, v49, v50, v51);
  swift_release(v46);
  swift_release(v48);
  swift_beginAccess(v12, v99, 33, 0);
  AnyCancellable.store(in:)(v12);
  swift_endAccess(v99);
  swift_release(v52);
  v53 = *(_QWORD *)(*(_QWORD *)&v47[(_QWORD)v14] + 16);
  v99[0] = v53;
  v54 = *(_QWORD *)(*(_QWORD *)((char *)v14 + v98) + 48);
  swift_retain(v53);
  swift_retain(v54);
  v55 = sub_10004CFD4(&qword_1009D3488);
  v56 = sub_100030B34(&qword_1009D3490, &qword_1009D3488, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v57 = sub_100030B34(&qword_1009D3498, &qword_1009D3488, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v58 = Publisher.subscribe<A>(_:)(v54, v55, v55, v56, v57);
  swift_release(v53);
  swift_release(v54);
  swift_beginAccess(v12, v99, 33, 0);
  AnyCancellable.store(in:)(v12);
  swift_endAccess(v99);
  swift_release(v58);
  v59 = *(_QWORD **)&v47[(_QWORD)v14];
  v60 = v59[8];
  v61 = v59[9];
  sub_10003F198(v59 + 5, v60);
  v62 = *(void (**)(uint64_t, uint64_t))(v61 + 112);
  swift_retain(v59);
  v62(v60, v61);
  swift_release(v59);

  v63 = v97[1];
  v64 = v97[2];
  v99[0] = *v97;
  v99[1] = v63;
  v99[2] = v64;
  swift_retain(v99[0]);
  swift_retain(v64);
  v65 = (id)UIHostingController.init(rootView:)(v99);
  result = objc_msgSend(v65, "view");
  if (result)
  {
    v67 = result;
    v68 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v67, "setBackgroundColor:", v68);

    v69 = v65;
    v70 = v89;
    v71 = String.LocalizationValue.init(stringLiteral:)(0x736B6F6F42, 0xE500000000000000);
    v72 = v93;
    static Locale.current.getter(v71);
    v73 = v90;
    v74 = v88;
    v75 = v92;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v88, v70, v92);
    v76 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v76);
    v78 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v80 = v94;
    v79 = v95;
    v81 = v91;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v91, v72, v95);
    String.init(localized:table:bundle:locale:comment:)(v74, 0, 0, v78, v81, "Nav bar large title on iPad sidebar", 35, 2);
    v83 = v82;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v72, v79);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v75);
    v84 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v83);
    objc_msgSend(v69, "setTitle:", v84);

    v85 = objc_msgSend(v69, "navigationItem");
    v86 = objc_msgSend(v69, "editButtonItem");
    objc_msgSend(v85, "setRightBarButtonItem:animated:", v86, 0);

    return v69;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_100220EC0(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  char *result;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  objc_super v42;

  v6 = OBJC_IVAR___BKSplitViewController_rootBarEventSubject;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = a3;
  *(_QWORD *)&a3[v6] = PassthroughSubject.init()(v8);
  *(_QWORD *)&v8[OBJC_IVAR___BKSplitViewController_cancellables] = &_swiftEmptySetSingleton;
  v9 = &v8[OBJC_IVAR___BKSplitViewController_lastCollectionCreated];
  v10 = sub_10004CFD4(&qword_1009D3408);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = type metadata accessor for MainContentViewController();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11));
  swift_unknownObjectRetain(a1);
  v13 = objc_msgSend(v12, "init");
  v14 = objc_allocWithZone((Class)type metadata accessor for SplitViewContentHostingController(0));
  v40 = a1;
  v15 = SplitViewContentHostingController.init(viewControllerProvider:viewController:)(a1, v13);
  *(_QWORD *)&v8[OBJC_IVAR___BKSplitViewController_contentHostingController] = v15;
  result = (char *)objc_msgSend(*(id *)&v15[OBJC_IVAR___BKSplitViewContentHostingController_viewController], "view");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v17, "setBackgroundColor:", v18);

    v42.receiver = v8;
    v42.super_class = (Class)type metadata accessor for SplitViewController(0);
    v19 = (char *)objc_msgSendSuper2(&v42, "initWithStyle:", 1);
    objc_msgSend(v19, "setDelegate:", v19);
    v20 = OBJC_IVAR___BKSplitViewController_contentHostingController;
    v21 = *(void **)&v19[OBJC_IVAR___BKSplitViewController_contentHostingController];
    v22 = objc_allocWithZone((Class)sub_10004CFD4(&qword_1009D3410));
    v23 = a2;
    v24 = v21;
    v25 = sub_100220684(v24, v23, v22);

    v26 = objc_msgSend(objc_allocWithZone((Class)BSUINavigationController), "initWithRootViewController:", v25);
    objc_msgSend(v19, "setViewController:forColumn:", v26, 0);
    objc_msgSend(v19, "setViewController:forColumn:", *(_QWORD *)&v24[OBJC_IVAR___BKSplitViewContentHostingController_viewController], 2);
    v27 = sub_10004CFD4(&qword_1009CEC00);
    v28 = sub_100030B34(&qword_1009D3418, &qword_1009CEC00, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v41[0] = Publisher.eraseToAnyPublisher()(v27, v28);
    v29 = swift_allocObject(&unk_1008F4B18, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v19);
    v30 = sub_10004CFD4(&qword_1009D3420);
    v31 = sub_100030B34(&qword_1009D3428, &qword_1009D3420, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v32 = Publisher<>.sink(receiveValue:)(sub_1002216AC, v29, v30, v31);
    swift_release(v29);
    swift_release(v41[0]);
    v33 = &v19[OBJC_IVAR___BKSplitViewController_cancellables];
    swift_beginAccess(&v19[OBJC_IVAR___BKSplitViewController_cancellables], v41, 33, 0);
    AnyCancellable.store(in:)(v33);
    swift_endAccess(v41);
    swift_release(v32);
    v41[0] = *(_QWORD *)(*(_QWORD *)&v19[v20]
                       + OBJC_IVAR___BKSplitViewContentHostingController_accessibilityPopToRootUserSelectedItemSubject);
    v34 = sub_10004CFD4(&qword_1009CEC08);
    v35 = sub_100030B34(&qword_1009D3430, &qword_1009CEC08, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v41[0] = Publisher.eraseToAnyPublisher()(v34, v35);
    v36 = swift_allocObject(&unk_1008F4B18, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v19);
    v37 = sub_10004CFD4((uint64_t *)&unk_1009DB470);
    v38 = sub_100030B34((unint64_t *)&unk_1009DCC70, (uint64_t *)&unk_1009DB470, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v39 = Publisher<>.sink(receiveValue:)(sub_1002216B4, v36, v37, v38);
    swift_release(v36);
    swift_release(v41[0]);
    swift_beginAccess(v33, v41, 33, 0);
    AnyCancellable.store(in:)(v33);
    swift_endAccess(v41);

    swift_unknownObjectRelease(v40);
    swift_release(v39);

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10022134C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;

  if (qword_1009CE408 != -1)
    swift_once(&qword_1009CE408, sub_10006B6D0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009E1C98);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "rootViewDidDisappear: Sending .rootViewControllerDidDisappear notification", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = v5;
  if (qword_1009CDCC8 != -1)
  {
    swift_once(&qword_1009CDCC8, sub_100064C30);
    v5 = v6;
  }
  objc_msgSend(v5, "postNotificationName:object:", qword_100A1E350, 0);

}

uint64_t sub_10022148C(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t result;
  _UNKNOWN **v9;
  id v10;
  _UNKNOWN **v11;
  id v12;
  uint64_t v13;
  uint64_t ObjectType;

  v3 = a1;
  if ((a1 & 0x8000000000000000) != 0)
    v4 = *(void **)(a1 + OBJC_IVAR___BKSplitViewController_contentHostingController);
  else
    v4 = (void *)a1;
  v5 = v4;
  if ((a2 & 0x8000000000000000) != 0)
    v6 = *(void **)(a2 + OBJC_IVAR___BKSplitViewController_contentHostingController);
  else
    v6 = (void *)a2;
  v7 = v6;
  swift_unknownObjectRelease(v5);
  result = swift_unknownObjectRelease(v7);
  if (v5 != v7)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      a2 = *(_QWORD *)(a2 + OBJC_IVAR___BKSplitViewController_contentHostingController);
      v9 = &protocol witness table for SplitViewContentHostingController;
    }
    else
    {
      v9 = &protocol witness table for TabBarController;
    }
    v10 = (id)a2;
    if ((v3 & 0x8000000000000000) != 0)
    {
      v3 = *(_QWORD *)(v3 + OBJC_IVAR___BKSplitViewController_contentHostingController);
      v11 = &protocol witness table for SplitViewContentHostingController;
    }
    else
    {
      v11 = &protocol witness table for TabBarController;
    }
    v12 = (id)v3;
    ObjectType = swift_getObjectType(v10, v13);
    (*((void (**)(id, void *, uint64_t))v9[2] + 1))(v12, v11[1], ObjectType);
    swift_unknownObjectRelease(v10);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_1002215B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D7970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100221604()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100221630()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100221654()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100221678(uint64_t a1)
{
  uint64_t v1;

  sub_10021BC4C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100221680()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002216AC(uint64_t *a1)
{
  uint64_t v1;

  sub_100645FCC(a1, v1);
}

void *sub_1002216B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1006460A4(a1, v1);
}

uint64_t sub_1002216BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002216E0(__int128 *a1)
{
  uint64_t v1;

  return sub_1005393EC(a1, v1);
}

uint64_t sub_1002216E8(uint64_t *a1)
{
  uint64_t v1;

  return sub_100539638(a1, v1);
}

unint64_t sub_1002216F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3528;
  if (!qword_1009D3528)
  {
    v1 = sub_100030B74(&qword_1009D3530);
    sub_100221754();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009D3528);
  }
  return result;
}

unint64_t sub_100221754()
{
  unint64_t result;

  result = qword_1009D3538;
  if (!qword_1009D3538)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Sidebar.DataModel.StandardItem, &type metadata for Sidebar.DataModel.StandardItem);
    atomic_store(result, (unint64_t *)&qword_1009D3538);
  }
  return result;
}

uint64_t sub_100221798(uint64_t *a1)
{
  uint64_t v1;

  return sub_100539700(a1, v1);
}

uint64_t sub_1002217A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1005397E0(a1, v1);
}

uint64_t sub_1002217A8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1005398B8(a1, v1);
}

unint64_t sub_1002217B0()
{
  unint64_t result;

  result = qword_1009D3590;
  if (!qword_1009D3590)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Sidebar.DataModel.AccountState, &type metadata for Sidebar.DataModel.AccountState);
    atomic_store(result, (unint64_t *)&qword_1009D3590);
  }
  return result;
}

uint64_t sub_1002217F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100539994(a1, v1);
}

unint64_t sub_1002217FC()
{
  unint64_t result;

  result = qword_1009D35B8;
  if (!qword_1009D35B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Sidebar.DataModel.SelectionState, &type metadata for Sidebar.DataModel.SelectionState);
    atomic_store(result, (unint64_t *)&qword_1009D35B8);
  }
  return result;
}

uint64_t sub_100221840(uint64_t *a1)
{
  uint64_t v1;

  return sub_100539A80(a1, v1);
}

uint64_t sub_100221848(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4)
    return swift_unknownObjectRelease(a3);
  return result;
}

void sub_100221860(uint64_t a1)
{
  uint64_t v1;

  sub_10021D560(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100221868()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10022188C()
{
  sub_10021E9A8();
}

uint64_t sub_100221894()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1002218B8()
{
  uint64_t v0;

  sub_10021E64C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1002218C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002218F0()
{
  uint64_t v0;

  sub_10021DF48(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1002218FC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  result = (uint64_t)objc_msgSend(a1, "isCancelled");
  if ((result & 1) == 0)
    return sub_10021E56C(v2, v3);
  return result;
}

void sub_100221940()
{
  uint64_t v0;

  sub_10021DE60(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_10022194C()
{
  unint64_t result;

  result = qword_1009D35D8;
  if (!qword_1009D35D8)
  {
    result = swift_getWitnessTable(&unk_10071339C, &type metadata for OpenTabBarItemError);
    atomic_store(result, (unint64_t *)&qword_1009D35D8);
  }
  return result;
}

void sub_1002219CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100221A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v6[6];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;

  swift_bridgeObjectRetain(0xE700000000000000);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(0x7972617262696CLL, 0xE700000000000000);
  v2 = v1;
  swift_bridgeObjectRelease(v1);
  if (v2)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    v3 = 14;
  }
  else
  {
    v13._countAndFlagsBits = 0x7972617262696CLL;
    v13._object = (void *)0xE700000000000000;
    v3 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v13);
    if (v3 == 16)
      v3 = 15;
  }
  sub_100047B64(v3, v6);
  swift_bridgeObjectRelease(0xE700000000000000);
  sub_100025B3C((uint64_t)v6, (uint64_t)&v7, (uint64_t *)&unk_1009D7970);
  if (!*((_QWORD *)&v7 + 1))
    return 0x6E776F6E6B6E75;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v4 = v7;
  *(_OWORD *)(v0 - 64) = v8;
  sub_100210D88(v0 - 64);
  sub_100025B3C((uint64_t)&v12, v0 - 48, &qword_1009D2A80);
  sub_100210D88(v0 - 48);
  return v4;
}

uint64_t sub_100221B68()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D35E0);
  sub_100048F64(v0, (uint64_t)qword_1009D35E0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001FLL, 0x80000001007B8350);
}

uint64_t sub_100221BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  __int16 v21;
  _QWORD v22[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E358);
  sub_100048F64(v16, (uint64_t)qword_100A1E358);
  v17 = String.LocalizationValue.init(stringLiteral:)(2003134806, 0xE400000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  v21 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("TAB_BAR_ITEM_TYPE_DISPLAY_REPRESENTATION", 40, 2, v11, 0, 0, v8, v5, "'typeDisplayRepresentation' for AppEnum that represents tabs that you can navigate to.", 86, v21);
  v18 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v19 = v22[0];
  v18(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v19);
}

unint64_t sub_100221E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  _BYTE *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  unint64_t result;
  uint64_t v93;
  char *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, _QWORD, uint64_t);
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  char *v111;
  char *v112;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v112 = (char *)&v93 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v111 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v105 = v13;
  __chkstk_darwin(v13);
  v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D36F8);
  v18 = sub_10004CFD4(&qword_1009D0980);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v107 = v18;
  v108 = v20;
  v21 = *(unsigned __int8 *)(v19 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v17, v22 + 6 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_1007133E0;
  v106 = v23 + v22;
  v96 = v23 + v22 + *(int *)(v18 + 48);
  v97 = v23;
  *(_BYTE *)(v23 + v22) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(1701670728, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v109 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v101 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = v102;
  v109(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v102);
  v27 = v16;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Tab: 'Home' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 106, 2);
  v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v110(v111, 1, 1, v13);
  v28 = type metadata accessor for DisplayRepresentation.Image(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v103 = v28;
  v104 = v29;
  v30 = v112;
  v29(v112, 1, 1, v28);
  v31 = sub_10004CFD4(&qword_1009D2640);
  v32 = swift_allocObject(v31, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7);
  *(_OWORD *)(v32 + 16) = xmmword_10070CCA0;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x20676E6964616552, 0xEB00000000776F4ELL);
  static Locale.current.getter(v33);
  v34 = v25;
  v35 = v109;
  v109(v6, v34, v26);
  v36 = v12;
  v37 = v12;
  v38 = v9;
  v39 = v9;
  v40 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v36, 0, 0, v38, v6, "AppIntent: Tab: Synonym for 'Home' tab name", 43, 2);
  v94 = v27;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v27, v111, v30, v32);
  v41 = v106;
  v42 = v107;
  v43 = v108;
  v96 = v106 + v108 + *(int *)(v107 + 48);
  *(_BYTE *)(v106 + v108) = 1;
  v98 = v37;
  v44 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
  v45 = v39;
  v100 = v39;
  static Locale.current.getter(v44);
  v99 = v40;
  v46 = v101;
  v35(v40, v101, v26);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v37, 0, 0, v45, v40, "AppIntent: Tab: 'Library' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 109, 2);
  v47 = v111;
  v48 = v105;
  v110(v111, 1, 1, v105);
  v49 = v112;
  v50 = v103;
  v51 = v104;
  v104(v112, 1, 1, v103);
  v52 = v94;
  DisplayRepresentation.init(title:subtitle:image:)(v94, v47, v49);
  v96 = 2 * v43;
  v53 = (_BYTE *)(v41 + 2 * v43);
  v95 = &v53[*(int *)(v42 + 48)];
  *v53 = 2;
  v54 = v98;
  v55 = String.LocalizationValue.init(stringLiteral:)(0x6F7453206B6F6F42, 0xEA00000000006572);
  v56 = v100;
  static Locale.current.getter(v55);
  v57 = v99;
  v58 = v102;
  v59 = v109;
  v109(v99, v46, v102);
  v60 = v54;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v54, 0, 0, v56, v57, "AppIntent: Tab: 'Book Store' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 112, 2);
  v61 = v111;
  v110(v111, 1, 1, v48);
  v62 = v112;
  v51(v112, 1, 1, v50);
  v63 = v52;
  DisplayRepresentation.init(title:subtitle:image:)(v52, v61, v62);
  v64 = v107;
  v65 = v108;
  v66 = (_BYTE *)(v106 + v96 + v108);
  v96 = (uint64_t)&v66[*(int *)(v107 + 48)];
  *v66 = 3;
  v67 = v60;
  v68 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEF65726F7453206BLL);
  v69 = v100;
  static Locale.current.getter(v68);
  v70 = v101;
  v59(v57, v101, v58);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v67, 0, 0, v69, v57, "AppIntent: Tab: 'Audiobook Store' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 117, 2);
  v71 = v105;
  v72 = v110;
  v110(v61, 1, 1, v105);
  v73 = v112;
  v74 = v103;
  v104(v112, 1, 1, v103);
  v75 = v63;
  DisplayRepresentation.init(title:subtitle:image:)(v63, v61, v73);
  v76 = 4 * v65;
  v96 = 4 * v65;
  v77 = v106;
  v78 = (_BYTE *)(v106 + v76);
  v95 = &v78[*(int *)(v64 + 48)];
  *v78 = 4;
  v79 = v98;
  v80 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  v81 = v100;
  static Locale.current.getter(v80);
  v82 = v99;
  v83 = v102;
  v109(v99, v70, v102);
  v84 = v79;
  v85 = v79;
  v86 = v81;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v84, 0, 0, v81, v82, "AppIntent: Tab: 'Search' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 108, 2);
  v87 = v111;
  v72(v111, 1, 1, v71);
  v88 = v112;
  v89 = v74;
  v90 = v104;
  v104(v112, 1, 1, v89);
  DisplayRepresentation.init(title:subtitle:image:)(v75, v87, v88);
  *(_BYTE *)(v77 + v96 + v108) = 5;
  v91 = String.LocalizationValue.init(stringLiteral:)(0x74532061676E614DLL, 0xEB0000000065726FLL);
  static Locale.current.getter(v91);
  v109(v82, v101, v83);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v85, 0, 0, v86, v82, "AppIntent: Tab: 'Manga' tab name - appears in the chooser when running an AppIntent that navigates to tabs.", 107, 2);
  v110(v87, 1, 1, v105);
  v90(v88, 1, 1, v103);
  DisplayRepresentation.init(title:subtitle:image:)(v75, v87, v88);
  result = sub_1001DA9C8(v97);
  qword_100A1E370 = result;
  return result;
}

void sub_100222630(char *a1)
{
  sub_100670E04(*a1);
}

unint64_t sub_100222640()
{
  unint64_t result;

  result = qword_1009D35F8;
  if (!qword_1009D35F8)
  {
    result = swift_getWitnessTable(&unk_100712E8C, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D35F8);
  }
  return result;
}

void sub_100222684()
{
  char *v0;

  sub_100671590(*v0);
}

void sub_10022268C()
{
  __asm { BR              X10 }
}

uint64_t sub_1002226C0(uint64_t a1)
{
  String.hash(into:)(a1, 0x7972617262696CLL, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100222754(uint64_t a1)
{
  char *v1;

  sub_1006722C4(a1, *v1);
}

unint64_t sub_10022275C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100223F84(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100222788()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1002227B0 + 4 * byte_100712E7C[*v0]))();
}

void sub_1002227B0(_QWORD *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000;
}

void sub_1002227CC(_QWORD *a1@<X8>)
{
  *a1 = 0x726F74536B6F6F62;
  a1[1] = 0xE900000000000065;
}

void sub_1002227EC(char *a1@<X8>)
{
  strcpy(a1, "audiobookStore");
  a1[15] = -18;
}

void sub_100222814(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void sub_10022282C(_QWORD *a1@<X8>)
{
  *a1 = 0x61676E616DLL;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_100222848()
{
  unint64_t result;

  result = qword_1009D3600;
  if (!qword_1009D3600)
  {
    result = swift_getWitnessTable(&unk_100712F6C, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3600);
  }
  return result;
}

unint64_t sub_100222890()
{
  unint64_t result;

  result = qword_1009D3608;
  if (!qword_1009D3608)
  {
    result = swift_getWitnessTable(&unk_100712FA4, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3608);
  }
  return result;
}

unint64_t sub_1002228D8()
{
  unint64_t result;

  result = qword_1009D3610;
  if (!qword_1009D3610)
  {
    result = swift_getWitnessTable(&unk_100712EF4, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3610);
  }
  return result;
}

unint64_t sub_100222920()
{
  unint64_t result;

  result = qword_1009D3618;
  if (!qword_1009D3618)
  {
    result = swift_getWitnessTable(&unk_100712FD4, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3618);
  }
  return result;
}

unint64_t sub_100222968()
{
  unint64_t result;

  result = qword_1009D3620;
  if (!qword_1009D3620)
  {
    result = swift_getWitnessTable(&unk_100712FFC, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3620);
  }
  return result;
}

unint64_t sub_1002229B0()
{
  unint64_t result;

  result = qword_1009D3628;
  if (!qword_1009D3628)
  {
    result = swift_getWitnessTable(&unk_100713024, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3628);
  }
  return result;
}

unint64_t sub_1002229F8()
{
  unint64_t result;

  result = qword_1009D3630;
  if (!qword_1009D3630)
  {
    result = swift_getWitnessTable(&unk_10071307C, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3630);
  }
  return result;
}

uint64_t sub_100222A3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDCD8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E358, (uint64_t)sub_100221BE4, a1);
}

uint64_t sub_100222A60(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100222AA0();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100222AA0()
{
  unint64_t result;

  result = qword_1009D3638;
  if (!qword_1009D3638)
  {
    result = swift_getWitnessTable(&unk_100712F2C, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3638);
  }
  return result;
}

uint64_t sub_100222AE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100222AA0();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100222B20()
{
  unint64_t result;

  result = qword_1009D3640;
  if (!qword_1009D3640)
  {
    result = swift_getWitnessTable(&unk_1007130BC, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3640);
  }
  return result;
}

unint64_t sub_100222B68()
{
  unint64_t result;

  result = qword_1009D3648;
  if (!qword_1009D3648)
  {
    result = swift_getWitnessTable(&unk_1007130E4, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3648);
  }
  return result;
}

unint64_t sub_100222BB0()
{
  unint64_t result;

  result = qword_1009D3650;
  if (!qword_1009D3650)
  {
    result = swift_getWitnessTable(&unk_100712EB4, &type metadata for TabBarItem);
    atomic_store(result, (unint64_t *)&qword_1009D3650);
  }
  return result;
}

double sub_100222BF4()
{
  double result;

  if (qword_1009CDCE0 != -1)
    swift_once(&qword_1009CDCE0, sub_100221E14);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E370).n128_u64[0];
  return result;
}

uint64_t sub_100222C34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002229F8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100222C6C()
{
  return sub_100030B34(&qword_1009D3658, &qword_1009D3660, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100222C98(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFC90;
}

unint64_t sub_100222CAC()
{
  unint64_t result;

  result = qword_1009D3668;
  if (!qword_1009D3668)
  {
    result = swift_getWitnessTable(&unk_10071316C, &type metadata for OpenTabBarItemIntent);
    atomic_store(result, (unint64_t *)&qword_1009D3668);
  }
  return result;
}

uint64_t sub_100222CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E378);
  sub_100048F64(v10, (uint64_t)qword_100A1E378);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007B8370);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for AppIntent that opens a tab bar item. When localizing, it is ok to translate as 'Change View in Books App'.", 116, 2);
}

uint64_t sub_100222E64()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100222E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100222F04, v5, v6);
}

uint64_t sub_100222F04()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v15)(void);

  swift_release(v0[6]);
  AppDependency.wrappedValue.getter(v0 + 2);
  v1 = (void *)v0[2];
  v2 = objc_msgSend(v1, "primarySceneController");

  v3 = objc_msgSend(v2, "rootBarCoordinator");
  if (v3)
  {
    v4 = type metadata accessor for RootBarCoordinator();
    if (swift_dynamicCastClass(v3, v4))
    {
      IntentParameter.wrappedValue.getter(v0 + 2);
      v5 = sub_10021B054(*((_BYTE *)v0 + 16));
      static IntentResult.result<>()(v5);
      swift_unknownObjectRelease(v3);
      v15 = (uint64_t (*)(void))v0[1];
      return v15();
    }
    swift_unknownObjectRelease(v3);
  }
  if (qword_1009CDCD0 != -1)
    swift_once(&qword_1009CDCD0, sub_100221B68);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048F64(v6, (uint64_t)qword_1009D35E0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed getting root bar coordinator.", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = sub_1001EA7C0();
  v12 = swift_allocError(&type metadata for BookContextualIntentError, v11, 0, 0);
  *v13 = 0;
  swift_willThrow(v12);
  v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100223118(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100868458, 1);
}

uint64_t sub_100223128(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100868430, 1);
}

uint64_t sub_100223138@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDCE8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E378, (uint64_t)sub_100222CF0, a1);
}

uint64_t sub_10022315C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009D36E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D36E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, a1, a2);
  v10._countAndFlagsBits = 0x206F74206E65704FLL;
  v10._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100713330);
  v12 = sub_10004CFD4(&qword_1009D36F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_1002232C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009D36DC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_100222E94(a1, v5, v4);
}

uint64_t sub_10022332C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100223FCC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100223354()
{
  unint64_t result;

  result = qword_1009D3690;
  if (!qword_1009D3690)
  {
    result = swift_getWitnessTable(&unk_1007132C8, &type metadata for TabBarItemOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1009D3690);
  }
  return result;
}

unint64_t sub_10022339C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3698[0];
  if (!qword_1009D3698[0])
  {
    v1 = sub_100030B74(&qword_1009D3660);
    sub_1002229B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, qword_1009D3698);
  }
  return result;
}

uint64_t sub_100223400(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[15] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[16] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[17] = v3;
  v1[18] = v4;
  return swift_task_switch(sub_10022346C, v3, v4);
}

uint64_t sub_10022346C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSString v4;

  AppDependency.wrappedValue.getter(v0 + 10);
  v1 = (void *)v0[10];
  v2 = objc_msgSend(v1, "primarySceneController");

  v3 = objc_msgSend(v2, "launchCoordinator");
  v0[19] = v3;

  v4 = String._bridgeToObjectiveC()();
  v0[20] = v4;
  v0[7] = v0 + 21;
  v0[2] = v0;
  v0[3] = sub_100223590;
  v0[14] = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10021A6F4;
  v0[13] = &unk_1008F4DF0;
  objc_msgSend(v3, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 4096, v4, v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_100223590()
{
  uint64_t v0;

  return swift_task_switch(sub_1002235D4, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1002235D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 128));

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 80));
  v3 = *(void **)(v0 + 80);
  v4 = objc_msgSend(v3, "primarySceneController");

  v5 = objc_msgSend(v4, "rootBarCoordinator");
  if (v5)
    JUMPOUT(0x100223730);
  if (qword_1009CDCD0 != -1)
    swift_once(&qword_1009CDCD0, sub_100221B68);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048F64(v6, (uint64_t)qword_1009D35E0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v13 = v11;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)(v0 + 80) = sub_100040F58(0x2873746C75736572, 0xE900000000000029, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4, v10 + 12);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TabBarOptionsProvider: %s: Failed getting root bar coordinator.", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  return (*(uint64_t (**)(_UNKNOWN **))(v0 + 8))(&off_1008EFF88);
}

uint64_t sub_100223C7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1009D36D4);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100223CCC;
  return sub_100223400(v3);
}

uint64_t sub_100223CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

ValueMetadata *type metadata accessor for TabBarItemOptionsProvider()
{
  return &type metadata for TabBarItemOptionsProvider;
}

ValueMetadata *type metadata accessor for OpenTabBarItemIntent()
{
  return &type metadata for OpenTabBarItemIntent;
}

uint64_t storeEnumTagSinglePayload for TabBarItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100223D94 + 4 * byte_100712E87[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100223DC8 + 4 * byte_100712E82[v4]))();
}

uint64_t sub_100223DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100223DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100223DD8);
  return result;
}

uint64_t sub_100223DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100223DECLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100223DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100223DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabBarItem()
{
  return &type metadata for TabBarItem;
}

uint64_t sub_100223E14()
{
  return sub_100030B34(&qword_1009D36B0, &qword_1009D36B8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100223E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000001007B8420);
  static Locale.current.getter(v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Error message when attempting to open a tab that doesn't exist.", 63, 2);
}

unint64_t sub_100223F84(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EFE88, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

uint64_t sub_100223FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char v57[3];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v52 = *(_QWORD *)(v0 - 8);
  v53 = v0;
  __chkstk_darwin(v0);
  v51 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  v3 = __chkstk_darwin(v2);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v49 = (char *)&v48 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_10004CFD4(&qword_1009D36C0);
  v23 = String.LocalizationValue.init(stringLiteral:)(2003134806, 0xE400000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  v47 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("VIEW_OR_SIDEBAR_ITEM_TITLE", 26, 2, v18, 0, 0, v15, v12, "Title for parameter that specifies target tab when running an AppIntent that opens tab bar item.", 96, v47);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x80000001007B82B0);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of target parameter on Open Tab Bar Item Intent", 59, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  v57[0] = 6;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v49;
  v28(v49, 1, 1, v27);
  v30 = v50;
  v28(v50, 1, 1, v27);
  sub_10004CFD4(&qword_1009D1348);
  v31 = type metadata accessor for AppDependencyManager(0);
  v54 = 0u;
  v55 = 0u;
  v56 = 0;
  v36 = static AppDependencyManager.shared.getter(v31, v32, v33, v34, v35);
  *(_QWORD *)&v54 = AppDependency.__allocating_init(key:manager:)(&v54, v36);
  v37 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for InputConnectionBehavior.default(_:), v53);
  v38 = sub_1002243F8();
  v39 = sub_100222AA0();
  v40 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)(v22, v8, v57, v29, v30, v37, &off_1008EFF38, &v54, &type metadata for TabBarItemOptionsProvider, v38, v39);
  v56 = 0;
  v54 = 0u;
  v55 = 0u;
  v45 = static AppDependencyManager.shared.getter(v40, v41, v42, v43, v44);
  AppDependency.__allocating_init(key:manager:)(&v54, v45);
  return v40;
}

unint64_t sub_1002243F8()
{
  unint64_t result;

  result = qword_1009D36C8;
  if (!qword_1009D36C8)
  {
    result = swift_getWitnessTable(&unk_100713268, &type metadata for TabBarItemOptionsProvider);
    atomic_store(result, &qword_1009D36C8);
  }
  return result;
}

uint64_t sub_10022443C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for OpenTabBarItemError()
{
  return &type metadata for OpenTabBarItemError;
}

char *sub_100224474(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v6 = a2[3];
    *((_QWORD *)a1 + 3) = v6;
    v7 = a2[8];
    v14 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v14;
    v8 = *(int *)(a3 + 36);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    *((_QWORD *)a1 + 8) = v7;
    v11 = v5;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v14);
    swift_retain(v7);
    v12 = sub_10004CFD4(&qword_1009D3700);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
  }
  return a1;
}

uint64_t sub_10022454C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_10004CFD4(&qword_1009D3700);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1002245B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __int128 v13;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 64) = v6;
  v10 = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v13);
  swift_retain(v6);
  v11 = sub_10004CFD4(&qword_1009D3700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
  return a1;
}

uint64_t sub_100224664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(int *)(a3 + 36);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_10004CFD4(&qword_1009D3700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

