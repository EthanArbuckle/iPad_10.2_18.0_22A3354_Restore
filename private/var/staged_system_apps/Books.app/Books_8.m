void sub_1005628B0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  void *v13;
  BOOL v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  os_log_t v59;
  int v60;
  void *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t aBlock[5];
  uint64_t v71;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v11);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v13 = (void *)qword_1009DE420;
  v14 = os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v12);
  v15 = (unint64_t)a1 >> 62;
  v68 = v5;
  if (v14)
  {
    v60 = v12;
    v62 = v10;
    v63 = v8;
    v16 = v2;
    swift_bridgeObjectRetain_n(a1, 2);
    v17 = v16;
    v59 = v13;
    v18 = swift_slowAlloc(32, -1);
    v57 = swift_slowAlloc(96, -1);
    aBlock[0] = v57;
    *(_DWORD *)v18 = 136315650;
    ObjectType = swift_getObjectType();
    v20 = _typeName(_:qualified:)(ObjectType, 0);
    v22 = v21;
    v69 = (_QWORD *)sub_100040F58(v20, v21, aBlock);
    v66 = (unint64_t)a1 >> 62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v18 + 4, v18 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 12) = 2080;
    v69 = (_QWORD *)sub_100040F58(0xD000000000000024, 0x80000001007D2E20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v18 + 14, v18 + 22);
    v58 = (uint8_t *)v18;
    *(_WORD *)(v18 + 22) = 2080;
    if (v66)
    {
      if (a1 < 0)
        v56 = a1;
      else
        v56 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v23 = _CocoaArrayWrapper.endIndex.getter(v56);
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
    }
    v64 = v7;
    v65 = v4;
    v61 = v2;
    if (v23)
    {
      if (v23 < 1)
      {
        __break(1u);
        return;
      }
      v24 = 0;
      v25 = _swiftEmptyArrayStorage;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
        else
          v26 = *(id *)(a1 + 8 * v24 + 32);
        v27 = v26;
        v28 = objc_msgSend(v26, "assetID");
        if (v28)
        {
          v29 = v28;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          v32 = v31;

          if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
            v25 = sub_100043ED0(0, v25[2] + 1, 1, v25);
          v34 = v25[2];
          v33 = v25[3];
          if (v34 >= v33 >> 1)
            v25 = sub_100043ED0((_QWORD *)(v33 > 1), v34 + 1, 1, v25);
          v25[2] = v34 + 1;
          v35 = &v25[2 * v34];
          v35[4] = v30;
          v35[5] = v32;
        }
        else
        {

        }
        ++v24;
      }
      while (v23 != v24);
    }
    else
    {
      v25 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(a1);
    v36 = v58;
    v37 = Array.description.getter(v25, &type metadata for String);
    v39 = v38;
    swift_bridgeObjectRelease(v25);
    v69 = (_QWORD *)sub_100040F58(v37, v39, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v36 + 24, v36 + 32);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v39);
    v40 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "%s %s assets: %s", v36, 0x20u);
    v41 = v57;
    swift_arrayDestroy(v57, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    v7 = v64;
    v4 = v65;
    v10 = v62;
    v8 = v63;
    v2 = v61;
    v15 = v66;
  }
  if (v15)
  {
    if (a1 < 0)
      v52 = a1;
    else
      v52 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v53 = sub_10004CFD4(&qword_1009DA850);
    v55 = _bridgeCocoaArray<A>(_:)(v52, v53, v54);
    swift_bridgeObjectRelease(a1);
    a1 = v55;
  }
  else
  {
    v42 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v42);
  }
  v43 = swift_allocObject(&unk_1009100F8, 32, 7);
  *(_QWORD *)(v43 + 16) = v2;
  *(_QWORD *)(v43 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1005633AC;
  v71 = v43;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000147F0;
  aBlock[3] = (uint64_t)&unk_100910110;
  v44 = _Block_copy(aBlock);
  v45 = v2;
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v46);
  v69 = _swiftEmptyArrayStorage;
  v47 = v10;
  v48 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v49 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v50 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v49, v50, v4, v48);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v7, v44);
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v8);
  v51 = v71;
  swift_bridgeObjectRelease(a1);
  swift_release(v51);
}

double sub_100562E84(void *a1)
{
  char *v1;
  os_log_type_t v3;
  void *v4;
  char *v5;
  NSObject *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t Strong;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v3))
  {
    swift_unknownObjectRetain_n(a1, 2);
    v5 = v1;
    v6 = v4;
    v7 = v5;
    v8 = swift_slowAlloc(32, -1);
    v9 = swift_slowAlloc(96, -1);
    v22 = v9;
    *(_DWORD *)v8 = 136315650;
    ObjectType = swift_getObjectType();
    v11 = _typeName(_:qualified:)(ObjectType, 0);
    v13 = v12;
    v21 = sub_100040F58(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v8 + 12) = 2080;
    v21 = sub_100040F58(0xD00000000000001ELL, 0x80000001007D2E00, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v8 + 14, v8 + 22);
    *(_WORD *)(v8 + 22) = 2080;
    if (a1)
    {
      v14 = objc_msgSend(a1, "assetID");
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

    }
    else
    {
      v17 = 0xE300000000000000;
      v15 = 7104878;
    }
    v21 = sub_100040F58(v15, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v8 + 24, v8 + 32);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v6, v3, "%s %s current: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy(v9, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate]);
  if (Strong)
  {
    v20 = Strong;
    sub_1002D4C64(Strong);
    *(_QWORD *)&result = swift_unknownObjectRelease(v20).n128_u64[0];
  }
  return result;
}

void sub_100563100(void *a1)
{
  char *v1;
  os_log_type_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t Strong;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v3))
  {
    v5 = 0x64656D616E6E75;
    swift_unknownObjectRetain_n(a1, 2);
    v6 = v1;
    v22 = v4;
    v7 = v6;
    v8 = swift_slowAlloc(32, -1);
    v9 = swift_slowAlloc(96, -1);
    v24 = v9;
    *(_DWORD *)v8 = 136315650;
    ObjectType = swift_getObjectType();
    v11 = _typeName(_:qualified:)(ObjectType, 0);
    v13 = v12;
    v23 = sub_100040F58(v11, v12, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v8 + 12) = 2080;
    v23 = sub_100040F58(0xD00000000000001BLL, 0x80000001007D2DE0, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v8 + 14, v8 + 22);
    *(_WORD *)(v8 + 22) = 2080;
    if (a1 && (v14 = objc_msgSend(a1, "title")) != 0)
    {
      v15 = v14;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

    }
    else
    {
      v17 = 0xE700000000000000;
    }
    v23 = sub_100040F58(v5, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v8 + 24, v8 + 32);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v22, v3, "%s %s %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy(v9, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  v18 = sub_100561634();
  if (v18)
  {
    v19 = v18;
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate]);
    if (Strong)
    {
      v21 = Strong;
      sub_1002D528C(v19);

      swift_unknownObjectRelease(v21);
    }
    else
    {

    }
  }
}

double sub_1005633AC()
{
  uint64_t v0;

  return sub_1005611E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005633D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005633DC);
}

uint64_t sub_1005633DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100563458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100563464);
}

uint64_t sub_100563464(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MultipleGiftActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EB390;
  if (!qword_1009EB390)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultipleGiftActionItem);
  return result;
}

uint64_t sub_100563514(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_10072D1D0;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100563594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t);
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83[2];
  _QWORD *v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for MAsset.OfferType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v76 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_10004CFD4(&qword_1009E0130);
  __chkstk_darwin(v81);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E0138);
  __chkstk_darwin(v7);
  v80 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - v10;
  __chkstk_darwin(v12);
  v82 = (uint64_t)&v69 - v13;
  v14 = type metadata accessor for MultipleGiftActionItem(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ContextActionSource(0);
  v74 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v75 = (char *)&v69 - v21;
  v22 = v0 + 5;
  v23 = v0[8];
  v24 = v0[9];
  v73 = v22;
  sub_10003F198(v22, v23);
  ContextActionDataProtocol.selectionMode.getter(&v85, v23, v24);
  if (v88 == 1)
  {
    sub_1001EB7C0((uint64_t)&v85);
LABEL_25:
    v51 = 0;
    return v51 & 1;
  }
  v72 = v19;
  sub_100022840(&v85, (uint64_t)&v89);
  sub_100022840(&v89, (uint64_t)&v85);
  v25 = v86;
  v26 = v87;
  sub_10003F198(&v85, v86);
  v27 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v25, v26);
  v28 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRelease(v27);
  if (v28 < 2)
  {
    _s5Books15CurrentPageViewVwxx_0(&v85);
    goto LABEL_25;
  }
  v70 = v17;
  v71 = v16;
  v29 = v86;
  v30 = v87;
  sub_10003F198(&v85, v86);
  result = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v29, v30);
  v32 = _swiftEmptyArrayStorage;
  v84 = _swiftEmptyArrayStorage;
  v79 = *(_QWORD *)(result + 16);
  if (!v79)
  {
LABEL_27:
    swift_bridgeObjectRelease(result);
    *(_QWORD *)&v89 = v32;
    v52 = sub_10004CFD4(&qword_1009EB3F0);
    v53 = sub_100030B34((unint64_t *)&unk_1009EB3F8, &qword_1009EB3F0, (uint64_t)&protocol conformance descriptor for [A]);
    v51 = Collection.isNotEmpty.getter(v52, v53);
    swift_release(v32);
    v54 = *(_QWORD *)(v1 + 64);
    v55 = *(_QWORD *)(v1 + 72);
    sub_10003F198(v73, v54);
    v56 = v54;
    v57 = v75;
    dispatch thunk of ContextActionDataProtocol.source.getter(v56, v55);
    v58 = v74;
    v59 = *(void (**)(char *, _QWORD, uint64_t))(v74 + 104);
    v60 = v72;
    v61 = v70;
    v59(v72, enum case for ContextActionSource.unifiedProductItem(_:), v70);
    v62 = static ContextActionSource.== infix(_:_:)(v57, v60);
    v63 = *(void (**)(char *, uint64_t))(v58 + 8);
    v63(v60, v61);
    v63(v57, v61);
    v64 = v71;
    sub_10002CD84(v1, (uint64_t)v71, type metadata accessor for MultipleGiftActionItem);
    if ((v62 & 1) != 0)
    {
      sub_10002C8F0((uint64_t)v64, type metadata accessor for MultipleGiftActionItem);
    }
    else
    {
      v65 = v57;
      v66 = v64[8];
      v67 = v64[9];
      sub_10003F198(v64 + 5, v66);
      dispatch thunk of ContextActionDataProtocol.source.getter(v66, v67);
      v59(v60, enum case for ContextActionSource.productPage(_:), v61);
      v68 = static ContextActionSource.== infix(_:_:)(v65, v60);
      v63(v60, v61);
      v63(v65, v61);
      sub_10002C8F0((uint64_t)v64, type metadata accessor for MultipleGiftActionItem);
      v51 &= v68;
    }
    _s5Books15CurrentPageViewVwxx_0(&v85);
    return v51 & 1;
  }
  v69 = v1;
  v33 = 0;
  v34 = result + 32;
  v77 = enum case for MAsset.OfferType.buy(_:);
  v35 = v82;
  v78 = result;
  while (v33 < *(_QWORD *)(result + 16))
  {
    sub_10002E418(v34, (uint64_t)&v89);
    v36 = v90;
    v37 = v91;
    sub_10003F198(&v89, v90);
    v38 = ContentInfo.storeData.getter(v36, *(_QWORD *)(v37 + 8));
    if (v38)
    {
      v39 = (void *)v38;
      MAsset.offerType.getter();

    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v35, 1, 1, v2);
    }
    v40 = (uint64_t)v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v11, v77, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    v41 = (uint64_t)&v6[*(int *)(v81 + 48)];
    sub_10000B5E4(v35, (uint64_t)v6, &qword_1009E0138);
    sub_10000B5E4((uint64_t)v11, v41, &qword_1009E0138);
    v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v42((uint64_t)v6, 1, v2) == 1)
    {
      if (v42(v41, 1, v2) == 1)
      {
        sub_100010960((uint64_t)v6, &qword_1009E0138);
        sub_100010960((uint64_t)v11, &qword_1009E0138);
        sub_100010960(v82, &qword_1009E0138);
LABEL_19:
        sub_100022840(&v89, (uint64_t)v83);
        v48 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
        {
          sub_100366C8C(0, v48[2] + 1, 1);
          v48 = v84;
        }
        v50 = v48[2];
        v49 = v48[3];
        if (v50 >= v49 >> 1)
        {
          sub_100366C8C(v49 > 1, v50 + 1, 1);
          v48 = v84;
        }
        v48[2] = v50 + 1;
        sub_100022840(v83, (uint64_t)&v48[5 * v50 + 4]);
        v35 = v82;
        goto LABEL_9;
      }
      goto LABEL_7;
    }
    sub_10000B5E4((uint64_t)v6, v40, &qword_1009E0138);
    if (v42(v41, 1, v2) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v40, v2);
LABEL_7:
      sub_100010960((uint64_t)v6, &qword_1009E0130);
      sub_100010960((uint64_t)v11, &qword_1009E0138);
      v35 = v82;
      sub_100010960(v82, &qword_1009E0138);
      goto LABEL_8;
    }
    v43 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v76, v41, v2);
    v44 = sub_100008DB0((unint64_t *)&qword_1009E0140, (uint64_t (*)(uint64_t))&type metadata accessor for MAsset.OfferType, (uint64_t)&protocol conformance descriptor for MAsset.OfferType);
    v45 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v43, v2, v44);
    v46 = v40;
    v47 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v47(v46, v2);
    v47((uint64_t)v43, v2);
    sub_100010960((uint64_t)v6, &qword_1009E0138);
    sub_100010960((uint64_t)v11, &qword_1009E0138);
    v35 = v82;
    sub_100010960(v82, &qword_1009E0138);
    if ((v45 & 1) != 0)
      goto LABEL_19;
LABEL_8:
    _s5Books15CurrentPageViewVwxx_0(&v89);
LABEL_9:
    ++v33;
    v34 += 40;
    result = v78;
    if (v79 == v33)
    {
      v32 = v84;
      v1 = v69;
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_100563D10()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *result;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44[2];
  char v45;
  __int128 v46[2];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  v2 = v0 + 5;
  v3 = v0[8];
  v4 = v1[9];
  sub_10003F198(v2, v3);
  ContextActionDataProtocol.selectionMode.getter(v44, v3, v4);
  if ((v45 & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)v44);
    return _swiftEmptyArrayStorage;
  }
  sub_100022840(v44, (uint64_t)v46);
  sub_100022840(v46, (uint64_t)v47);
  *(_QWORD *)&v44[0] = _swiftEmptyArrayStorage;
  v6 = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v46[0] = _swiftEmptyDictionarySingleton;
  v7 = v48;
  v8 = v49;
  sub_10003F198(v47, v48);
  v9 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v7, v8);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
LABEL_26:
    swift_bridgeObjectRelease(v9);
    v35 = v48;
    v36 = v49;
    sub_10003F198(v47, v48);
    v37 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v35, v36);
    v38 = v37;
    v39 = *(_QWORD *)(v37 + 16);
    if (v39)
    {
      v40 = (_QWORD *)(v37 + 32);
      do
      {
        sub_100564028(v40, v1, v47, (uint64_t *)v46, (_QWORD **)v44);
        v40 += 5;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease(v38);
      v6 = *(_QWORD **)&v46[0];
    }
    else
    {
      swift_bridgeObjectRelease(v37);
    }
    v5 = *(_QWORD *)&v44[0];
    swift_bridgeObjectRelease(v6);
    _s5Books15CurrentPageViewVwxx_0(v47);
    return (_QWORD *)v5;
  }
  v42 = v9;
  v43 = v1;
  v11 = (_QWORD *)(v9 + 32);
  while (1)
  {
    v12 = v11[3];
    v13 = v11[4];
    sub_10003F198(v11, v12);
    v14 = AssetInfo.editionKind.getter(v12, v13);
    if (!v15)
      goto LABEL_7;
    v16 = v14;
    v17 = v15;
    v18 = _swiftEmptyDictionarySingleton[2];
    if (v18)
    {
      v19 = sub_10004CE80(v14, v15);
      if ((v20 & 1) != 0)
        v18 = *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v19);
      else
        v18 = 0;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v24 = sub_10004CE80(v16, v17);
    v25 = _swiftEmptyDictionarySingleton[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      goto LABEL_34;
    v28 = v23;
    if (_swiftEmptyDictionarySingleton[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        sub_1002C0448();
        if ((v28 & 1) == 0)
          goto LABEL_21;
      }
    }
    else
    {
      sub_100025834(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_10004CE80(v16, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_36;
      v24 = v29;
      if ((v28 & 1) == 0)
      {
LABEL_21:
        _swiftEmptyDictionarySingleton[(v24 >> 6) + 8] |= 1 << v24;
        v31 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v24);
        *v31 = v16;
        v31[1] = v17;
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v24) = v21;
        v32 = _swiftEmptyDictionarySingleton[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_35;
        _swiftEmptyDictionarySingleton[2] = v34;
        swift_bridgeObjectRetain(v17);
        goto LABEL_6;
      }
    }
    *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v24) = v21;
LABEL_6:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_7:
    v11 += 5;
    if (!--v10)
    {
      *(_QWORD *)&v46[0] = _swiftEmptyDictionarySingleton;
      v9 = v42;
      v1 = v43;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100564028(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t *a4, _QWORD **a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  __n128 v44;
  _BOOL8 v45;
  _QWORD *v46;
  void *v47;
  id v48;
  id v49;
  char *v50;
  objc_class *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  _QWORD *v58;
  void *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  id v67;
  id v68;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD **v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;

  v75 = a5;
  v76 = a1;
  v77 = a3;
  v78 = a4;
  v73 = type metadata accessor for GiftActionItem(0);
  __chkstk_darwin(v73);
  v74 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v86 = (char *)&v73 - v9;
  v10 = type metadata accessor for MenuCoverImageProvider(0);
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  __chkstk_darwin(v10);
  v80 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v79 = (char *)&v73 - v13;
  v14 = type metadata accessor for ContextActionSource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418((uint64_t)a1, (uint64_t)&v83);
  v18 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel.Asset(0));
  v19 = ContextActionDataModel.Asset.init(assetInfo:)(&v83);
  v20 = a2[8];
  v21 = a2[9];
  sub_10003F198(a2 + 5, v20);
  v22 = dispatch thunk of ContextActionDataProtocol.sourceView.getter(v20, v21);
  v23 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel(0));
  v24 = (void *)ContextActionDataModel.init(asset:sourceView:)(v19, v22);
  v25 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for ContextActionSource.sendGiftActionItem(_:), v14);
  v26 = ContextActionSource.key.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v84 = &type metadata for String;
  *(_QWORD *)&v83 = v26;
  *((_QWORD *)&v83 + 1) = v28;
  dispatch thunk of ContextActionDataModel.originatingLocation.setter(&v83);
  v29 = v77[3];
  v30 = v77[4];
  sub_10003F198(v77, v29);
  v31 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v29, v30);
  dispatch thunk of ContextActionDataModel.presentationRefID.setter(v31);
  v32 = a2[8];
  v33 = a2[9];
  v77 = a2;
  sub_10003F198(a2 + 5, v32);
  v34 = dispatch thunk of ContextActionDataProtocol.shouldReportFigaro.getter(v32, v33);
  dispatch thunk of ContextActionDataModel.shouldReportFigaro.setter(v34 & 1);
  v35 = v76[3];
  v36 = v76[4];
  sub_10003F198(v76, v35);
  v37 = AssetInfo.editionKind.getter(v35, v36);
  if (v38)
    v39 = v38;
  else
    v39 = 0xE000000000000000;
  v40 = *v78;
  if (!*(_QWORD *)(*v78 + 16))
    goto LABEL_9;
  if (!v38)
    v37 = 0;
  v41 = sub_10004CE80(v37, v39);
  if ((v42 & 1) != 0)
  {
    v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
    v44 = swift_bridgeObjectRelease(v39);
    v45 = v43 > 1;
  }
  else
  {
LABEL_9:
    v44 = swift_bridgeObjectRelease(v39);
    v45 = 0;
  }
  v46 = v86;
  dispatch thunk of ContextActionDataModel.actionItemNeedsDifferentiation.setter(v45, v44);
  v47 = (void *)objc_opt_self(BKLibraryManager);
  v48 = v24;
  v49 = objc_msgSend(v47, "defaultManager");
  v50 = v79;
  MenuCoverImageProvider.init()();
  v51 = (objc_class *)type metadata accessor for ContextActionData();
  v52 = objc_allocWithZone(v51);
  v53 = (uint64_t)v80;
  v54 = v81;
  v55 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v80, v50, v82);
  v56 = v49;
  v57 = sub_1003830F4(v48, (uint64_t)v56, v53, v52);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v55);

  if (v57)
  {
    v46[8] = v51;
    v46[9] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
    v46[5] = v57;
    v58 = v77;
    sub_10002E418((uint64_t)v77, (uint64_t)v46);
    v59 = (void *)v58[10];
    sub_10002E418((uint64_t)(v58 + 11), (uint64_t)(v46 + 11));
    v60 = (_QWORD *)v73;
    v61 = (char *)v46 + *(int *)(v73 + 32);
    v62 = enum case for ContextActionType.gift(_:);
    v63 = type metadata accessor for ContextActionType(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v61, v62, v63);
    v46[10] = v59;
    v64 = v74;
    sub_10002CD84((uint64_t)v46, v74, type metadata accessor for GiftActionItem);
    v65 = v75;
    v66 = *v75;
    v67 = v59;
    v68 = v57;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
    *v65 = v66;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v66 = sub_1005B1048(0, v66[2] + 1, 1, v66);
      *v75 = v66;
    }
    v71 = v66[2];
    v70 = v66[3];
    if (v71 >= v70 >> 1)
    {
      v66 = sub_1005B1048((_QWORD *)(v70 > 1), v71 + 1, 1, v66);
      *v75 = v66;
    }
    v84 = v60;
    v85 = sub_100008DB0((unint64_t *)&unk_1009CED00, type metadata accessor for GiftActionItem, (uint64_t)&unk_100720A98);
    v72 = sub_1000257F8(&v83);
    sub_10002CD84(v64, (uint64_t)v72, type metadata accessor for GiftActionItem);
    v66[2] = v71 + 1;
    sub_100022840(&v83, (uint64_t)&v66[5 * v71 + 4]);
    sub_10002C8F0(v64, type metadata accessor for GiftActionItem);

    sub_10002C8F0((uint64_t)v46, type metadata accessor for GiftActionItem);
  }
  else
  {

  }
}

uint64_t sub_100564560@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  _BYTE v16[16];
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  _BYTE v20[24];
  ValueMetadata *v21;
  unint64_t v22;

  v3 = sub_10004CFD4(&qword_1009DC9F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = v1;
  v17 = v1;
  v7 = sub_10004CFD4(&qword_1009DCA00);
  v8 = sub_10004CFD4(&qword_1009DCA08);
  v9 = sub_100030B34(&qword_1009DCA10, &qword_1009DCA00, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v10 = sub_100355EDC(&qword_1009DCA18, &qword_1009DCA08, (uint64_t)&protocol witness table for AnyView, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  Menu.init(content:label:)(sub_1005649F8, v18, sub_100564A00, v16, v7, v8, v9, v10);
  KeyPath = swift_getKeyPath(&unk_10072D288);
  v21 = &type metadata for GiftActionItemIconProvider;
  v22 = sub_100564A10();
  v12 = sub_10004CFD4(&qword_1009DCA20);
  a1[3] = v12;
  a1[4] = sub_100355E30();
  v13 = sub_1000257F8(a1);
  v14 = (_QWORD *)((char *)v13 + *(int *)(v12 + 36));
  sub_10000B5E4((uint64_t)v20, (uint64_t)(v14 + 1), &qword_1009DCA48);
  *v14 = KeyPath;
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v4 + 32))(v13, v6, v3);
  return sub_100010960((uint64_t)v20, &qword_1009DCA48);
}

uint64_t sub_100564704()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = sub_100563D10();
  KeyPath = swift_getKeyPath(&unk_10072D2B8);
  v1 = sub_10004CFD4(&qword_1009DC9E8);
  v2 = sub_100030B34((unint64_t *)&unk_1009DCA60, &qword_1009DC9E8, (uint64_t)&protocol conformance descriptor for [A]);
  return ForEach<>.init(_:id:content:)(&v4, KeyPath, sub_100354364, 0, v1, &type metadata for AnyView, v2, &protocol witness table for AnyHashable, &protocol witness table for AnyView);
}

uint64_t sub_1005647B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  _QWORD v5[4];
  _BYTE v6[16];
  uint64_t v7;

  v7 = a1;
  v5[2] = a1;
  v1 = sub_10004CFD4(&qword_1009DCA50);
  v2 = sub_100355EDC(&qword_1009DCA58, &qword_1009DCA50, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol conformance descriptor for <A> A?);
  return Label.init(title:icon:)(sub_100564A54, v6, sub_100564A5C, v5, &type metadata for Text, v1, &protocol witness table for Text, v2, v3);
}

uint64_t sub_100564858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = type metadata accessor for MultipleGiftActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009DE030, type metadata accessor for MultipleGiftActionItem, (uint64_t)&unk_10072D1E8);
  v11[0] = ContextActionItem.title.getter(v2, v3);
  v11[1] = v4;
  v5 = sub_1001F2108();
  result = Text.init<A>(_:)(v11, &type metadata for String, v5, v6);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_1005648E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for MultipleGiftActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009DE030, type metadata accessor for MultipleGiftActionItem, (uint64_t)&unk_10072D1E8);
  result = ContextActionItem.image.getter(v2, v3);
  if (result)
    result = Image.init(uiImage:)(result);
  *a1 = result;
  return result;
}

uint64_t sub_10056495C@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.multipleGift(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6 + 40);
  sub_100022840(a2, a6);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_1005649F8()
{
  return sub_100564704();
}

uint64_t sub_100564A00()
{
  uint64_t v0;

  return sub_1005647B8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100564A10()
{
  unint64_t result;

  result = qword_1009EB3E8;
  if (!qword_1009EB3E8)
  {
    result = swift_getWitnessTable(&unk_10072D2FC, &type metadata for GiftActionItemIconProvider);
    atomic_store(result, (unint64_t *)&qword_1009EB3E8);
  }
  return result;
}

uint64_t sub_100564A54@<X0>(uint64_t a1@<X8>)
{
  return sub_100564858(a1);
}

uint64_t sub_100564A5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005648E8(a1);
}

uint64_t sub_100564A68()
{
  uint64_t v0;

  return sub_100564A9C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, (uint64_t)_swiftEmptyDictionarySingleton);
}

ValueMetadata *type metadata accessor for GiftActionItemIconProvider()
{
  return &type metadata for GiftActionItemIconProvider;
}

uint64_t sub_100564A8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876B7C, 1);
}

uint64_t sub_100564A9C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_100564AB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  uint64_t (*v49)();
  _QWORD *v50;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1
    && (v11 = objc_msgSend(a1, "image", v12)) != 0
    && (v15 = v11, v16 = objc_msgSend(v11, "CGImage"), v15, v16))
  {
    v20 = static os_log_type_t.debug.getter(v11, v17, v18, v19);
    if (qword_1009CDD68 != -1)
      swift_once(&qword_1009CDD68, sub_100270CA0);
    v21 = (id)qword_1009D5C90;
    os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v21, "got cover image from BCCacheManager", 35, 2, _swiftEmptyArrayStorage);

    v22 = sub_100059BB4();
    v23 = (void *)static OS_dispatch_queue.main.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_100910378, 40, 7);
    v24[2] = a2;
    v24[3] = a3;
    v24[4] = v16;
    v49 = sub_100565134;
    v50 = v24;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_1000147F0;
    v48 = &unk_100910390;
    v25 = _Block_copy(&aBlock);
    v26 = v50;
    swift_retain(a3);
    v27 = v16;
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v28);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v29 = sub_100008E8C();
    v30 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v31 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v30, v31, v6, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v8, v25);
    _Block_release(v25);

  }
  else
  {
    v32 = static os_log_type_t.error.getter(v11);
    if (qword_1009CDD68 != -1)
      swift_once(&qword_1009CDD68, sub_100270CA0);
    v33 = (id)qword_1009D5C90;
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "could not fetch cover image", 27, 2, _swiftEmptyArrayStorage);

    v34 = sub_100059BB4();
    v23 = (void *)static OS_dispatch_queue.main.getter(v34);
    v35 = swift_allocObject(&unk_100910328, 32, 7);
    *(_QWORD *)(v35 + 16) = a2;
    *(_QWORD *)(v35 + 24) = a3;
    v49 = sub_100565100;
    v50 = (_QWORD *)v35;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_1000147F0;
    v48 = &unk_100910340;
    v36 = _Block_copy(&aBlock);
    v37 = v50;
    swift_retain(a3);
    swift_release(v37);
    static DispatchQoS.unspecified.getter(v38);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v39 = sub_100008E8C();
    v40 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v41 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v6, v39);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v8, v36);
    _Block_release(v36);
  }

  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

uint64_t sub_100564EB4(void (*a1)(uint64_t, uint64_t))
{
  unint64_t v2;
  uint64_t v3;

  v2 = sub_100565160();
  v3 = swift_allocError(&type metadata for CoverCacheServiceError, v2, 0, 0);
  a1(v3, 1);
  return swift_errorRelease(v3);
}

uint64_t type metadata accessor for CoverCacheService()
{
  return objc_opt_self(_TtC5Books17CoverCacheService);
}

void sub_100564F2C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  NSString v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v11 = objc_allocWithZone((Class)BICDescribedImage);
  swift_bridgeObjectRetain(a4);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "initWithIdentifier:", v12, swift_bridgeObjectRelease(a4).n128_f64[0]);

  objc_msgSend(v13, "setImageSize:", a1, a2);
  objc_msgSend(v13, "setProcessingOptions:", 2);
  objc_msgSend(v13, "setPriority:", 5);
  objc_msgSend(v13, "setRequestOptions:", 2);
  v14 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
  v15 = swift_allocObject(&unk_1009102D8, 32, 7);
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  v18[4] = sub_1004957A0;
  v19 = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1004D7C0C;
  v18[3] = &unk_1009102F0;
  v16 = _Block_copy(v18);
  v17 = v19;
  swift_retain(a6);
  objc_msgSend(v14, "fetchCGImageFor:forRequest:completion:", v13, v13, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

}

uint64_t sub_1005650DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100565100()
{
  uint64_t v0;

  return sub_100564EB4(*(void (**)(uint64_t, uint64_t))(v0 + 16));
}

uint64_t sub_100565108()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100565134()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), 0);
}

unint64_t sub_100565160()
{
  unint64_t result;

  result = qword_1009EB4A8;
  if (!qword_1009EB4A8)
  {
    result = swift_getWitnessTable(&unk_100714070, &type metadata for CoverCacheServiceError);
    atomic_store(result, (unint64_t *)&qword_1009EB4A8);
  }
  return result;
}

unint64_t sub_1005651BC()
{
  unint64_t result;

  result = qword_1009EB4B0;
  if (!qword_1009EB4B0)
  {
    result = swift_getWitnessTable(&unk_10072D400, &type metadata for OpenSpecificBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EB4B0);
  }
  return result;
}

unint64_t sub_100565204()
{
  unint64_t result;

  result = qword_1009EB4B8;
  if (!qword_1009EB4B8)
  {
    result = swift_getWitnessTable(&unk_10072D428, &type metadata for OpenSpecificBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EB4B8);
  }
  return result;
}

uint64_t sub_100565248(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876C2C, 1);
}

uint64_t sub_100565258(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876C04, 1);
}

uint64_t sub_100565268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EC30);
  sub_100048F64(v10, (uint64_t)qword_100A1EC30);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D2F80);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Open Book' AppIntent.", 32, 2);
}

__n128 sub_1005653DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[2];
  char v10;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;

  IntentParameter.wrappedValue.getter(v9);
  v2 = v9[1];
  v3 = v10;
  v4 = v14;
  result = v11;
  v6 = v12;
  v7 = v13;
  v8 = v15;
  *(_QWORD *)a1 = v9[0];
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_100565444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[24] = a2;
  v3[25] = a3;
  v3[23] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[26] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[27] = v5;
  v3[28] = v6;
  return swift_task_switch(sub_1005654B4, v5, v6);
}

uint64_t sub_1005654B4()
{
  _QWORD *v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter(v0 + 14);
  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(dword_1009E5084);
  v0[29] = v1;
  *v1 = v0;
  v1[1] = sub_100565528;
  return sub_10047105C((uint64_t)(v0 + 2));
}

uint64_t sub_100565528()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  _QWORD *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 216);
    v5 = *(_QWORD *)(v2 + 224);
    v6 = sub_10056560C;
  }
  else
  {
    sub_100279C98((_QWORD *)(v2 + 16));

    swift_unknownObjectRelease(*(_QWORD *)(v2 + 120));
    *(_QWORD *)(v2 + 176) = *(_QWORD *)(v2 + 136);
    sub_1001FC120((_QWORD *)(v2 + 176));
    *(_QWORD *)(v2 + 168) = *(_QWORD *)(v2 + 144);
    v7 = (_QWORD *)(v2 + 168);
    sub_1001FC120(v7);
    v4 = v7[6];
    v5 = v7[7];
    v6 = sub_1005655CC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1005655CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release(*(_QWORD *)(v0 + 208));
  static IntentResult.result<>()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10056560C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 208);
  sub_100279C98((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 136);
  sub_1001FC120((_QWORD *)(v0 + 160));
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 144);
  sub_1001FC120((_QWORD *)(v0 + 152));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100565684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE840 != -1)
    swift_once(&qword_1009CE840, sub_100565268);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EC30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1005656F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009EB4E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EB4F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10072D468);
  v12 = sub_10004CFD4(&qword_1009EB4F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_10056585C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EB4E4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_100565444(a1, v5, v4);
}

uint64_t sub_1005658C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100565948();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1005658E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100565DB8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSpecificBookIntent()
{
  return &type metadata for OpenSpecificBookIntent;
}

uint64_t sub_10056591C()
{
  return sub_100030B34(&qword_1009EB4C8, &qword_1009EB4D0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100565948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v51 = *(_QWORD *)(v0 - 8);
  v52 = v0;
  __chkstk_darwin(v0);
  v50 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v48 = (char *)&v44 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v46 = (char *)&v44 - v23;
  v47 = sub_10004CFD4(&qword_1009D91F8);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x206F74206B6F6F42, 0xEC0000006E65704FLL);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v26(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Open Book' parameter that specifies which book to open.", 56, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x80000001007D2F10);
  static Locale.current.getter(v27);
  v26(v11, v25, v8);
  v28 = v45;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the parameter of the specific book title to choose in the Open Book Intent", 89, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v28, 0, 1, v18);
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007B59D0);
  static Locale.current.getter(v29);
  v26(v11, v25, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Open Specific Book' prompt when running with no book selected.", 63, 2);
  v30 = v48;
  IntentDialog.init(_:)(v21);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v30, 0, 1, v31);
  v33 = v49;
  v32(v49, 1, 1, v31);
  v34 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, enum case for InputConnectionBehavior.default(_:), v52);
  v35 = sub_1001F8840();
  v36 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v46, v28, &v53, v30, v33, v34, v35);
  sub_10004CFD4(&qword_1009D2100);
  v37 = type metadata accessor for AppDependencyManager(0);
  v53 = 0u;
  v54 = 0u;
  *(_QWORD *)&v55 = 0;
  v42 = static AppDependencyManager.shared.getter(v37, v38, v39, v40, v41);
  AppDependency.__allocating_init(key:manager:)(&v53, v42);
  return v36;
}

unint64_t sub_100565DB8()
{
  unint64_t result;

  result = qword_1009EB4D8;
  if (!qword_1009EB4D8)
  {
    result = swift_getWitnessTable(&unk_10072D370, &type metadata for OpenSpecificBookIntent);
    atomic_store(result, &qword_1009EB4D8);
  }
  return result;
}

uint64_t sub_100565DFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_100565F28()
{
  qword_1009EB500 = 0x4052C00000000000;
}

id sub_100565F48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  char *v12;
  char v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;
  id result;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;
  _OWORD v30[2];
  __int128 v31;
  uint64_t v32;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKGoalPickerViewController_containerView]);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKGoalPickerViewController_titleView]);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKGoalPickerViewController_picker]);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKGoalPickerViewController_titleLabel]);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKGoalPickerViewController_doneButton]);
  v11 = OBJC_IVAR___BKGoalPickerViewController_onFinalized;
  *(_QWORD *)&v5[OBJC_IVAR___BKGoalPickerViewController_onFinalized] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKGoalPickerViewController_separatorView] = 0;
  v12 = v5;
  v13 = ReadingGoals.Goal.init(rawValue:)(a1);
  LOBYTE(a1) = (v13 == 2) | v13 & 1;
  v12[OBJC_IVAR___BKGoalPickerViewController_goalType] = a1;
  *(_QWORD *)&v12[OBJC_IVAR___BKGoalPickerViewController_eventHandler] = a3;
  swift_unknownObjectRetain(a3);
  sub_100568214(a1, a2, v30);
  v14 = &v12[OBJC_IVAR___BKGoalPickerViewController_model];
  v15 = v30[1];
  *(_OWORD *)v14 = v30[0];
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v31;
  v16 = *((_QWORD *)&v31 + 1);
  *((_QWORD *)v14 + 6) = v32;
  *(_QWORD *)&v12[OBJC_IVAR___BKGoalPickerViewController_selectedRow] = v16;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel] = v17;
  *(_QWORD *)&v12[OBJC_IVAR___BKGoalPickerViewController_sourceViewHorizontalSizeClass] = 0;
  v18 = *(void **)&v5[v11];
  *(_QWORD *)&v5[v11] = a4;
  v19 = a4;

  v20 = String._bridgeToObjectiveC()();
  v29.receiver = v12;
  v29.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v29, "initWithNibName:bundle:", v20, 0);

  v22 = v21;
  objc_msgSend(v22, "setTransitioningDelegate:", v22);
  v23 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v22, "backgroundTapped:");
  objc_msgSend(v23, "setDelegate:", v22);
  result = objc_msgSend(v22, "view");
  if (result)
  {
    v25 = result;
    objc_msgSend(result, "addGestureRecognizer:", v23);

    sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
    v26 = v22;
    v27 = static UITraitCollection.bc_allAPITraits.getter();
    v28 = UIViewController.registerForTraitChanges(_:action:)(v27, "_traitCollectionDidChangeWithSender:previousTraitCollection:");

    swift_unknownObjectRelease(v28);
    swift_bridgeObjectRelease(v27);

    swift_unknownObjectRelease(a3);
    return v26;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10056623C(uint64_t a1, uint64_t a2, uint64_t a3, JSValue a4)
{
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::Int v16;
  double result;
  Swift::OpaquePointer_optional v18;

  v8 = (objc_class *)type metadata accessor for GoalPickerViewController();
  v9 = objc_allocWithZone(v8);
  swift_unknownObjectRetain(a3);
  v10 = sub_100565F48(a1, a2, a3, 0);
  v11 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v12 = sub_10004CFD4(&qword_1009D4B80);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v13 + 56) = v8;
  *(_QWORD *)(v13 + 32) = v10;
  v14 = v10;
  v15._countAndFlagsBits = 0x80000001007D3180;
  v18.value._rawValue = (void *)v13;
  v18.is_nil = 78;
  v15._object = (void *)87;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(a4, v18, v15, v16);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_100566440()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t inited;
  NSString *v51;
  unint64_t v52;
  id v53;
  NSString v54;
  Class isa;
  id v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjCClassFromMetadata;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  NSString v72;
  char *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  double v78;
  double v79;
  double v80;
  double v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  id v88;
  char *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char v98[72];
  objc_super v99;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v96 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v94 = (char *)&v87 - v6;
  v97 = type metadata accessor for String.LocalizationValue(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v87 - v11;
  v99.receiver = v0;
  v99.super_class = ObjectType;
  objc_msgSendSuper2(&v99, "viewDidLoad", v10);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_containerView]);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_19;
  }
  v14 = (void *)Strong;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "systemBackgroundColor");
  objc_msgSend(v14, "setBackgroundColor:", v16);

  v17 = &v0[OBJC_IVAR___BKGoalPickerViewController_titleView];
  v18 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_titleView]);
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v19 = (void *)v18;
  v20 = objc_msgSend(v15, "secondarySystemBackgroundColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  v21 = &v0[OBJC_IVAR___BKGoalPickerViewController_doneButton];
  v22 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_doneButton]);
  if (!v22)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = (void *)v22;
  v24 = objc_msgSend(v15, "labelColor");
  objc_msgSend(v23, "setTitleColor:forState:", v24, 0);

  v25 = &v0[OBJC_IVAR___BKGoalPickerViewController_picker];
  v26 = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_picker]);
  if (!v26)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v27 = v26;
  objc_msgSend(v26, "setDelegate:", v0);

  v28 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = v28;
  v93 = v21;
  objc_msgSend(v28, "setDataSource:", v0);

  v30 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = v30;
  v92 = v3;
  objc_msgSend(v30, "selectRow:inComponent:animated:", *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_model + 40], *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_model + 48], 0);

  sub_1005689BC(v0[OBJC_IVAR___BKGoalPickerViewController_goalType]);
  v33 = v32;
  v34 = objc_msgSend((id)objc_opt_self(TUIFontSpec), "defaultFontSpec");
  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "fontSpecWithDesign:", UIFontDescriptorSystemDesignSerif);
  if (!v36)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v37 = v36;

  v38 = objc_msgSend(v37, "fontSpecWithPointSize:", 18.0);
  if (!v38)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v39 = v38;
  v91 = v2;

  v40 = objc_msgSend(v39, "fontSpecWithWeight:", UIFontWeightSemibold);
  if (!v40)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v41 = v40;

  v42 = v41;
  v43 = objc_msgSend(v0, "traitCollection");
  v44 = objc_msgSend(v42, "mappedSpecIfNeededWithTraitCollection:", v43);

  if (!v44)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  v45 = objc_msgSend(v44, "font");
  if (!v45)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v46 = v45;
  v88 = v44;
  v89 = v17;
  v90 = v15;
  v47 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_titleLabel]);
  if (!v47)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v48 = (void *)v47;
  v49 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
  inited = swift_initStackObject(v49, v98);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v46;
  v51 = NSFontAttributeName;
  v87 = v46;
  v52 = sub_1001DA774(inited);
  v53 = objc_allocWithZone((Class)NSAttributedString);
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  type metadata accessor for Key(0);
  sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v56 = objc_msgSend(v53, "initWithString:attributes:", v54, isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

  objc_msgSend(v48, "setAttributedText:", v56);
  v57 = v12;
  v58 = String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v59 = v94;
  static Locale.current.getter(v58);
  v60 = v95;
  v61 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v8, v57, v97);
  v62 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v62);
  v64 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v65 = v91;
  v66 = v92;
  v67 = v96;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v96, v59, v91);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v64, v67, "Title for done button", 21, 2);
  v69 = v68;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v65);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
  v70 = swift_unknownObjectWeakLoadStrong(v93);
  if (!v70)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v71 = (void *)v70;
  v72 = String._bridgeToObjectiveC()();
  objc_msgSend(v71, "setTitle:forState:", v72, 0, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v73 = v89;
  v74 = (void *)swift_unknownObjectWeakLoadStrong(v89);
  v75 = v90;
  v76 = v88;
  if (!v74)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v77 = v74;
  objc_msgSend(v74, "frame");
  v79 = v78;
  v81 = v80;

  v82 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v82, "setFrame:", 0.0, v81 + -0.5, v79, 0.5);
  v83 = objc_msgSend(v75, "separatorColor");
  objc_msgSend(v82, "setBackgroundColor:", v83);

  objc_msgSend(v82, "setHidden:", 1);
  v84 = (void *)swift_unknownObjectWeakLoadStrong(v73);
  if (v84)
  {
    v85 = v84;
    objc_msgSend(v84, "addSubview:", v82);

    v86 = *(void **)&v0[OBJC_IVAR___BKGoalPickerViewController_separatorView];
    *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_separatorView] = v82;

    return;
  }
LABEL_33:
  __break(1u);
}

void sub_100566C38()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *Strong;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  v3 = (void *)objc_opt_self(UIColor);
  if (v2 == (id)1)
  {
    v4 = objc_msgSend(v3, "blackColor");
    v9 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.02);

  }
  else
  {
    v9 = objc_msgSend(v3, "secondarySystemBackgroundColor");
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_titleView]);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "setBackgroundColor:", v9);

    v7 = *(void **)&v0[OBJC_IVAR___BKGoalPickerViewController_separatorView];
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v8, "setHidden:", v2 != (id)1);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100566DDC(char a1)
{
  char *v1;
  char *v3;
  void *Strong;
  void *v5;
  void *v6;
  void *v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1 & 1);
  if (*(_QWORD *)&v1[OBJC_IVAR___BKGoalPickerViewController_sourceViewHorizontalSizeClass] == 2)
  {
    v3 = &v1[OBJC_IVAR___BKGoalPickerViewController_doneButton];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR___BKGoalPickerViewController_doneButton]);
    if (Strong)
    {
      v5 = Strong;
      objc_msgSend(Strong, "setHidden:", 1);

      v6 = (void *)swift_unknownObjectWeakLoadStrong(v3);
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "setUserInteractionEnabled:", 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100566ED0()
{
  char *v0;
  double v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  id v11;
  char *v12;
  void *Strong;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  objc_super v32;

  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, "viewWillLayoutSubviews");
  if (qword_1009CE848 != -1)
    swift_once(&qword_1009CE848, sub_100565F28);
  v1 = *(double *)&qword_1009EB500;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = v2;
  objc_msgSend(v2, "frame");
  v5 = v4;

  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = v6;
  objc_msgSend(v6, "frame");
  v9 = v8;

  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v11 = objc_msgSend(v10, "userInterfaceLayoutDirection");

  v12 = &v0[OBJC_IVAR___BKGoalPickerViewController_picker];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKGoalPickerViewController_picker]);
  if (!Strong)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = Strong;
  v15 = v1 * 0.5;
  v16 = v5 * 0.5 - v15;
  v17 = 0.0;
  if (v11 == (id)1)
    v17 = v16;
  v18 = v9 * 0.5 - v17;
  objc_msgSend(Strong, "frame");
  v20 = v19;

  v21 = OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel], "setFrame:", v15 + v18, v20 * 0.5 + -12.0, v16, 24.0);
  v22 = *(void **)&v0[v21];
  v23 = (void *)objc_opt_self(UIFont);
  v24 = v22;
  v25 = objc_msgSend(v23, "boldSystemFontOfSize:", 15.0);
  objc_msgSend(v24, "setFont:", v25);

  v26 = *(void **)&v0[v21];
  v27 = (void *)objc_opt_self(UIColor);
  v28 = v26;
  v29 = objc_msgSend(v27, "clearColor");
  objc_msgSend(v28, "setBackgroundColor:", v29);

  objc_msgSend(*(id *)&v0[v21], "setTextAlignment:", 0);
  v30 = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v0[v21]);

    sub_100567178();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100567178()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  _QWORD v29[5];
  uint64_t v30;

  v1 = &v0[OBJC_IVAR___BKGoalPickerViewController_model];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_model + 8];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_model + 16];
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10070CCA0;
  v6 = *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_selectedRow];
  v7 = *(_QWORD *)v1;
  *(_QWORD *)(v5 + 56) = &type metadata for Int;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v6 >= *(_QWORD *)(v7 + 16))
  {
LABEL_15:
    __break(1u);
    return;
  }
  v8 = v5;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v7 + 8 * v6 + 32);
  v9 = swift_bridgeObjectRetain(v3);
  v10 = static String.localizedStringWithFormat(_:_:)(v2, v3, v8, v9);
  v12 = v11;
  swift_bridgeObjectRelease(v3);
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v14 = OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel;
  v15 = objc_msgSend(*(id *)&v0[OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel], "text", v13);
  if (!v15)
  {
    swift_bridgeObjectRelease(v12);
    goto LABEL_11;
  }
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  if (v10 != v17 || v12 != v19)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v17, v19, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v19);
    if ((v21 & 1) != 0)
      return;
LABEL_11:
    v22 = (void *)objc_opt_self(UIView);
    v23 = *(void **)&v0[v14];
    v24 = swift_allocObject(&unk_100910578, 24, 7);
    *(_QWORD *)(v24 + 16) = v0;
    v29[4] = sub_10056820C;
    v30 = v24;
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 1107296256;
    v29[2] = sub_1000147F0;
    v29[3] = &unk_100910590;
    v25 = _Block_copy(v29);
    v26 = v30;
    v27 = v23;
    v28 = v0;
    swift_release(v26);
    objc_msgSend(v22, "transitionWithView:duration:options:animations:completion:", v27, 5242880, v25, 0, 0.25);
    _Block_release(v25);

    return;
  }
  swift_bridgeObjectRelease_n(v12, 2);
}

void sub_1005674D4(char a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::Int v18;
  Swift::OpaquePointer_optional v19;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___BKGoalPickerViewController_picker);
  if (!Strong)
    goto LABEL_21;
  v4 = Strong;
  v5 = (unint64_t)objc_msgSend(Strong, "selectedRowInComponent:", 0);

  if ((*(_BYTE *)(v1 + OBJC_IVAR___BKGoalPickerViewController_goalType) & 1) != 0)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___BKGoalPickerViewController_model);
      if (v5 < *(_QWORD *)(v6 + 16))
      {
        v7 = *(_QWORD *)(v6 + 8 * v5 + 32);
        if ((unsigned __int128)(v7 * (__int128)60) >> 64 == (60 * v7) >> 63)
        {
          objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKGoalPickerViewController_eventHandler), "changeDailyGoal::", (a1 & 1) == 0, (double)(60 * v7));
          if ((a1 & 1) == 0)
            return;
          goto LABEL_11;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_16;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___BKGoalPickerViewController_model);
  if (v5 >= *(_QWORD *)(v8 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKGoalPickerViewController_eventHandler), "changeBooksPerYearGoal::", *(_QWORD *)(v8 + 8 * v5 + 32), (a1 & 1) == 0);
  if ((a1 & 1) == 0)
    return;
LABEL_11:
  v9 = *(_QWORD *)(v1 + OBJC_IVAR___BKGoalPickerViewController_model);
  if (v5 >= *(_QWORD *)(v9 + 16))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v10 = *(void **)(v1 + OBJC_IVAR___BKGoalPickerViewController_onFinalized);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 8 * v5 + 32);
    v12 = (void *)objc_opt_self(JSABridge);
    v13 = v10;
    v14 = objc_msgSend(v12, "sharedInstance");
    v15 = sub_10004CFD4(&qword_1009D4B80);
    v16 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v16 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v16 + 56) = &type metadata for Int;
    *(_QWORD *)(v16 + 32) = v11;
    v17._countAndFlagsBits = 0x80000001007D3180;
    v19.value._rawValue = (void *)v16;
    v19.is_nil = 78;
    v17._object = (void *)233;
    JSABridge.enqueueValueCall(_:arguments:f:l:)((JSValue)v13, v19, v17, v18);

    swift_bridgeObjectRelease(v16);
  }
}

void sub_1005676E4(uint64_t a1)
{
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v2 = *(void **)(a1 + OBJC_IVAR___BKGoalPickerViewController_pickerRowTitleLabel);
  v3 = (uint64_t *)(a1 + OBJC_IVAR___BKGoalPickerViewController_model);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR___BKGoalPickerViewController_model + 8);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___BKGoalPickerViewController_model + 16);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR___BKGoalPickerViewController_selectedRow);
  v9 = *v3;
  *(_QWORD *)(v7 + 56) = &type metadata for Int;
  *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < *(_QWORD *)(v9 + 16))
  {
    v10 = v7;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v9 + 8 * v8 + 32);
    v11 = v2;
    v12 = swift_bridgeObjectRetain(v4);
    static String.localizedStringWithFormat(_:_:)(v5, v4, v10, v12);
    v14 = v13;
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v10);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for GoalPickerViewController()
{
  return objc_opt_self(BKGoalPickerViewController);
}

void sub_1005679C4(void *a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t *v8;
  uint64_t i;
  uint64_t v10;
  unint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  void *v24;
  _BYTE v25[32];

  v3 = objc_msgSend(a1, "accessibilityElements");
  if (!v3)
    return;
  v4 = v3;
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, (char *)&type metadata for Any + 8);

  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease(v5);
    return;
  }
  v7 = (uint64_t *)(v2 + OBJC_IVAR___BKGoalPickerViewController_model);
  v8 = (unint64_t *)&unk_1009EB660;
  v22 = v5;
  for (i = v5 + 32; ; i += 32)
  {
    sub_10004CD0C(i, (uint64_t)v25);
    v10 = sub_100009E04(0, v8, UIAccessibilityElement_ptr);
    if ((swift_dynamicCast(&v24, v25, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
      goto LABEL_4;
    v11 = v8;
    v12 = v24;
    v13 = v7[3];
    v14 = v7[4];
    v15 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_10070CCA0;
    v17 = *v7;
    *(_QWORD *)(v16 + 56) = &type metadata for Int;
    *(_QWORD *)(v16 + 64) = &protocol witness table for Int;
    if ((a2 & 0x8000000000000000) != 0)
      break;
    if (*(_QWORD *)(v17 + 16) <= a2)
      goto LABEL_13;
    v18 = v16;
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 8 * a2 + 32);
    swift_bridgeObjectRetain(v14);
    String.init(format:_:)(v13, v14, v18);
    v20 = v19;
    swift_bridgeObjectRelease(v14);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setAccessibilityValue:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

    v8 = v11;
LABEL_4:
    if (!--v6)
    {
      swift_bridgeObjectRelease(v22);
      return;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

id sub_100567D8C(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v3;
  id v6;
  id v7;
  id v8;

  v6 = objc_msgSend(a3, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  *(_QWORD *)(v3 + OBJC_IVAR___BKGoalPickerViewController_sourceViewHorizontalSizeClass) = v7;
  if (v7 == (id)1)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GoalPickerModalPresentationController()), "initWithPresentedViewController:presentingViewController:", a1, a2);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIPopoverPresentationController), "initWithPresentedViewController:presentingViewController:", a1, a2);
  objc_msgSend(v8, "setDelegate:", v3);
  return v8;
}

uint64_t destroy for GoalPickerViewController.Model(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for GoalPickerViewController.Model(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = a2[4];
  *(_QWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t *assignWithCopy for GoalPickerViewController.Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t *assignWithTake for GoalPickerViewController.Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  v7 = a2[4];
  v8 = a1[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease(v8);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GoalPickerViewController.Model(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GoalPickerViewController.Model(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalPickerViewController.Model()
{
  return &type metadata for GoalPickerViewController.Model;
}

uint64_t sub_1005681E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10056820C()
{
  uint64_t v0;

  sub_1005676E4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100568214@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjCClassFromMetadata;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v59 = type metadata accessor for Locale(0);
  v56 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v53 - v9;
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - v16;
  if ((a1 & 1) != 0)
  {
    v58 = sub_100427A44((_QWORD *)1, 1440);
    v34 = sub_1004EF65C(a2 / 60, (uint64_t)v58);
    if ((v35 & 1) != 0)
      v36 = 0;
    else
      v36 = v34;
    v57 = v36;
    v37 = String.LocalizationValue.init(stringLiteral:)(0x7961642F6E696DLL, 0xE700000000000000);
    static Locale.current.getter(v37);
    v53 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v53(v14, v17, v11);
    v38 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
    v40 = (void *)objc_opt_self(NSBundle);
    v41 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
    static Locale.current.getter(v41);
    v42 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Goals_Picker_Minute_Row_Title", 29, 2, v14, 0, 0, v41, v7, "Label for minutes per day in reading goal picker", 48, 2);
    v54 = v43;
    v55 = v42;
    v28 = *(void (**)(char *, uint64_t))(v56 + 8);
    v28(v10, v59);
    v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v17, v11);
    v44 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007D3380);
    static Locale.current.getter(v44);
    v53(v14, v17, v11);
    v45 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
    static Locale.current.getter(v45);
    LOWORD(v52) = 2;
    v32 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Accessibility_Goals_Picker_Minute_Row_Title", 43, 2, v14, 0, 0, v45, v7, "AX label for minutes per day in reading goal picker", 51, v52);
  }
  else
  {
    v58 = sub_100427A44((_QWORD *)1, 365);
    v18 = sub_1004EF65C(a2, (uint64_t)v58);
    if ((v19 & 1) != 0)
      v20 = 0;
    else
      v20 = v18;
    v57 = v20;
    v21 = String.LocalizationValue.init(stringLiteral:)(0x65792F736B6F6F62, 0xEA00000000007261);
    static Locale.current.getter(v21);
    v53 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v53(v14, v17, v11);
    v22 = type metadata accessor for BundleFinder();
    v23 = swift_getObjCClassFromMetadata(v22);
    v24 = (void *)objc_opt_self(NSBundle);
    v25 = objc_msgSend(v24, "bundleForClass:", v23);
    static Locale.current.getter(v25);
    v26 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Goals_Picker_Book_Row_Title", 27, 2, v14, 0, 0, v25, v7, "Label for finished books per year in reading goal picker", 56, 2);
    v54 = v27;
    v55 = v26;
    v28 = *(void (**)(char *, uint64_t))(v56 + 8);
    v28(v10, v59);
    v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v17, v11);
    v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D3470);
    static Locale.current.getter(v30);
    v53(v14, v17, v11);
    v31 = objc_msgSend(v24, "bundleForClass:", v23);
    static Locale.current.getter(v31);
    LOWORD(v51) = 2;
    v32 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Accessibility_Goals_Picker_Book_Row_Title", 41, 2, v14, 0, 0, v31, v7, "AX label for finished books per year in reading goal picker", 59, v51);
  }
  v46 = v32;
  v47 = v33;
  v28(v10, v59);
  result = ((uint64_t (*)(char *, uint64_t))v29)(v17, v11);
  v49 = v55;
  *a3 = v58;
  a3[1] = v49;
  a3[2] = v54;
  a3[3] = v46;
  v50 = v57;
  a3[4] = v47;
  a3[5] = v50;
  a3[6] = 0;
  return result;
}

uint64_t sub_1005686D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1009105C8, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_100568D30;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1009105E0;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  swift_unknownObjectRetain(a3);
  v19 = a4;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v23 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

void sub_1005688E4()
{
  char *v0;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKGoalPickerViewController_containerView], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKGoalPickerViewController_titleView], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKGoalPickerViewController_picker], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKGoalPickerViewController_titleLabel], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKGoalPickerViewController_doneButton], 0);
  *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_onFinalized] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKGoalPickerViewController_separatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/GoalPickerViewController.swift", 36, 2, 92, 0);
  __break(1u);
}

uint64_t sub_1005689BC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  _BYTE v27[16];

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v27[-v7];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v27[-v14];
  if ((a1 & 1) != 0)
  {
    v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D3210);
    static Locale.current.getter(v21);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v15, v9);
    v22 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v24, v5, "Title for picker when changing Daily Reading goal", 49, 2);
  }
  else
  {
    v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007D3270);
    static Locale.current.getter(v16);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v15, v9);
    v17 = type metadata accessor for BundleFinder();
    v18 = swift_getObjCClassFromMetadata(v17);
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v18);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "Title for picker when changing Books goal", 41, 2);
  }
  v25 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v25;
}

uint64_t sub_100568C3C(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  sub_1005679C4(a1, a2);
  result = objc_opt_self(NSNumberFormatter);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKGoalPickerViewController_model);
    if (*(_QWORD *)(v5 + 16) > a2)
    {
      v6 = (void *)result;
      v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)(v5 + 8 * a2 + 32));
      v8 = objc_msgSend(v6, "localizedStringFromNumber:numberStyle:", v7, 0);

      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      return v9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100568D04()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_100568D30()
{
  uint64_t v0;
  JSValue v1;

  v1.super.isa = *(Class *)(v0 + 40);
  return sub_10056623C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
}

void sub_100568D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v1 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v1);
  v2 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v2);
  v3 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  __chkstk_darwin(v3);
  v4 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v4);
  v5 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v5);
  v6 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100569F34(v0, (uint64_t)v8);
  v9 = (char *)sub_100568EEC + 4 * word_10072D4E0[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

uint64_t sub_100568EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;

  sub_10002C960(v2, v0, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
  *(_QWORD *)(v3 - 96) = 0;
  *(_QWORD *)(v3 - 88) = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 - 88));
  *(_QWORD *)(v3 - 96) = 0xD000000000000017;
  *(_QWORD *)(v3 - 88) = 0x80000001007D35F0;
  *(_QWORD *)(v3 - 112) = 0;
  *(_QWORD *)(v3 - 104) = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v4 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 112);
  *(_QWORD *)(v3 - 104) = v4;
  v5._countAndFlagsBits = 0xD000000000000035;
  v5._object = (void *)0x80000001007D3610;
  String.append(_:)(v5);
  v6._countAndFlagsBits = LocationMovement.Direction.description.getter(*(unsigned __int8 *)(v0 + *(int *)(v1 + 24)));
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 0x6E6974736564202CLL;
  v8._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v8);
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v10 = sub_100569F78();
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v9, v10);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = *(_QWORD *)(v3 - 112);
  v15 = *(void **)(v3 - 104);
  v14._object = v15;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 41;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = *(_QWORD *)(v3 - 96);
  sub_10002C8F0(v0, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
  return v17;
}

unint64_t sub_10056943C()
{
  return 0xD000000000000010;
}

uint64_t sub_10056946C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  unint64_t v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  _QWORD v22[2];

  v0 = 7104878;
  v1 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - v5;
  v22[0] = 91;
  v22[1] = 0xE100000000000000;
  sub_100261BA8((char *)v22 - v5);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7) == 1)
  {
    sub_100523120((uint64_t)v6);
    v10 = (void *)0xE300000000000000;
    v11 = 7104878;
  }
  else
  {
    v12 = sub_100569F78();
    v11 = dispatch thunk of CustomStringConvertible.description.getter(v7, v12);
    v10 = v13;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v14._countAndFlagsBits = v11;
  v14._object = v10;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v10);
  v15._countAndFlagsBits = 8236;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  sub_100261EA4(v3);
  if (v9(v3, 1, v7) == 1)
  {
    sub_100523120((uint64_t)v3);
    v16 = (void *)0xE300000000000000;
  }
  else
  {
    v17 = sub_100569F78();
    v0 = dispatch thunk of CustomStringConvertible.description.getter(v7, v17);
    v16 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
  }
  v19._countAndFlagsBits = v0;
  v19._object = v16;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v16);
  v20._countAndFlagsBits = 93;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  return v22[0];
}

uint64_t sub_10056963C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;

  v32 = a3;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = type metadata accessor for Optional(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  v31 = v8;
  __chkstk_darwin(v7);
  v34 = (char *)&v29 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = type metadata accessor for Optional(0, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - v13;
  v35 = 91;
  v36 = 0xE100000000000000;
  v33 = v3;
  sub_100261D28(a1, (char *)&v29 - v13);
  v15 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
  {
    v16 = (void *)0xE300000000000000;
    v17 = 7104878;
  }
  else
  {
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v10, a2);
    v16 = v18;
    v12 = v15;
    v11 = v10;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v19._countAndFlagsBits = v17;
  v19._object = v16;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v16);
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21 = v34;
  sub_100262020(a1, v34);
  v22 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v6) == 1)
  {
    v23 = (void *)0xE300000000000000;
    v6 = v30;
    v22 = v31;
    v24 = 7104878;
  }
  else
  {
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v32);
    v23 = v25;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v6);
  v26._countAndFlagsBits = v24;
  v26._object = v23;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v23);
  v27._countAndFlagsBits = 93;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  return v35;
}

uint64_t sub_100569838(uint64_t a1, uint64_t a2)
{
  return sub_10056963C(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

uint64_t sub_100569844()
{
  uint64_t v0;
  Swift::String v1;
  int *v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  Swift::String v20;

  _StringGuts.grow(_:)(119);
  v1._countAndFlagsBits = 0xD000000000000028;
  v1._object = (void *)0x80000001007D36A0;
  String.append(_:)(v1);
  v2 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v3._countAndFlagsBits = LocationMovement.Direction.description.getter(*(unsigned __int8 *)(v0 + v2[6]));
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._object = (void *)0x80000001007D36D0;
  v5._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v5);
  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = sub_100569F78();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0xD000000000000017;
  v10._object = (void *)0x80000001007D36F0;
  String.append(_:)(v10);
  if (*(_QWORD *)(v0 + v2[8]))
    v11 = 0x3E776569763CLL;
  else
    v11 = 7104878;
  if (*(_QWORD *)(v0 + v2[8]))
    v12 = 0xE600000000000000;
  else
    v12 = 0xE300000000000000;
  v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v12);
  v14._object = (void *)0xEC000000203A7974;
  v14._countAndFlagsBits = 0x69636F6C6576202CLL;
  String.append(_:)(v14);
  v15._countAndFlagsBits = Double.description.getter(*(double *)(v0 + v2[9]));
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0x6572676F7270202CLL;
  v17._object = (void *)0xEC000000203A7373;
  String.append(_:)(v17);
  v18._countAndFlagsBits = Double.description.getter(*(double *)(v0 + v2[10]));
  v19 = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19);
  v20._countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  return 0;
}

uint64_t sub_100569A40()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;

  _StringGuts.grow(_:)(73);
  v1._object = (void *)0x80000001007D3610;
  v1._countAndFlagsBits = 0xD000000000000035;
  String.append(_:)(v1);
  v2 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  v3._countAndFlagsBits = LocationMovement.Direction.description.getter(*(unsigned __int8 *)(v0 + *(int *)(v2 + 24)));
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0x6E6974736564202CLL;
  v5._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v5);
  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = sub_100569F78();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0;
}

uint64_t sub_100569B4C()
{
  Swift::String v0;
  Swift::String v1;
  void *object;
  Swift::String v3;

  v0._countAndFlagsBits = 0x727574286E727554;
  v0._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v0);
  v1._countAndFlagsBits = sub_100569844();
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_100569BCC()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(90);
  v1._object = (void *)0x80000001007D3590;
  v1._countAndFlagsBits = 0xD000000000000038;
  String.append(_:)(v1);
  v2 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  v3._countAndFlagsBits = sub_10056946C();
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0x6C736E617274202CLL;
  v5._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v5);
  Double.write<A>(to:)(v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + *(int *)(v2 + 28)));
  v6._countAndFlagsBits = 0x69636F6C6576202CLL;
  v6._object = (void *)0xEC000000203A7974;
  String.append(_:)(v6);
  Double.write<A>(to:)(v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + *(int *)(v2 + 32)));
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v9[0];
}

uint64_t sub_100569D0C()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  unint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(99);
  v1._object = (void *)0x80000001007D3650;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  v2 = type metadata accessor for SpreadPaginationEntity(0);
  v3 = sub_100569F78();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0xD000000000000028;
  v6._object = (void *)0x80000001007D3670;
  String.append(_:)(v6);
  v7 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v8._countAndFlagsBits = sub_10056946C();
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0x6C736E617274202CLL;
  v10._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v10);
  Double.write<A>(to:)(v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + *(int *)(v7 + 36)));
  v11._countAndFlagsBits = 0x69636F6C6576202CLL;
  v11._object = (void *)0xEC000000203A7974;
  String.append(_:)(v11);
  Double.write<A>(to:)(v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + *(int *)(v7 + 40)));
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return v14[0];
}

uint64_t sub_100569EA4()
{
  Swift::String v0;
  Swift::String v1;
  void *object;
  Swift::String v3;

  _StringGuts.grow(_:)(19);
  v0._object = (void *)0x80000001007D3530;
  v0._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v0);
  v1._countAndFlagsBits = sub_100569844();
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_100569F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr1008F7311C5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100569F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1BA0;
  if (!qword_1009F1BA0)
  {
    v1 = type metadata accessor for SpreadPaginationEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SpreadPaginationEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1BA0);
  }
  return result;
}

uint64_t sub_100569FC0()
{
  uint64_t result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000015, 0x80000001007D37E0);
  qword_100A1EC48 = result;
  return result;
}

uint64_t sub_10056A038()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1EC50);
  sub_100048F64(v0, (uint64_t)qword_100A1EC50);
  if (qword_1009CE850 != -1)
    swift_once(&qword_1009CE850, sub_100569FC0);
  return Logger.init(_:)((id)qword_100A1EC48);
}

uint64_t sub_10056A0B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2[33] = a1;
  v2[34] = v1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009EB720);
  v2[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StoreBookTaste(0);
  v2[36] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[37] = v5;
  v2[38] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StoreBookTasteInfo(0);
  v2[39] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[40] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[41] = swift_task_alloc(v8);
  v2[42] = swift_task_alloc(v8);
  return swift_task_switch(sub_10056A174, 0, 0);
}

uint64_t sub_10056A174()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  Class isa;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;

  v1 = v0[33];
  if (!v1)
  {
    v18 = v0 + 2;
    v19 = *(void **)(v0[34] + 16);
    v0[7] = v0 + 30;
    v0[2] = v0;
    v0[3] = sub_10056AABC;
    v20 = swift_continuation_init(v0 + 2, 1);
    v0[23] = _NSConcreteStackBlock;
    v21 = v0 + 23;
    v21[1] = 0x40000000;
    v21[2] = sub_10056B218;
    v21[3] = &unk_100910618;
    v21[4] = v20;
    objc_msgSend(v19, "fetchAssetDetailsIncludingDeleted:completion:", 0, v21);
    return swift_continuation_await(v18);
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
LABEL_13:
    v18 = v0 + 10;
    v22 = *(void **)(v0[34] + 16);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v0[43] = isa;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v0[15] = v0 + 28;
    v0[10] = v0;
    v0[11] = sub_10056A434;
    v24 = swift_continuation_init(v0 + 10, 1);
    v0[18] = _NSConcreteStackBlock;
    v25 = v0 + 18;
    v25[1] = 0x40000000;
    v25[2] = sub_10056B218;
    v25[3] = &unk_100910630;
    v25[4] = v24;
    objc_msgSend(v22, "assetDetailsForAssetIDs:completion:", isa, v25);
    return swift_continuation_await(v18);
  }
  swift_bridgeObjectRetain(v1);
  sub_100045E44(0, v2, 0);
  result = sub_1005171E0(v1);
  v4 = result;
  v6 = v5;
  v8 = v7 & 1;
  v27 = v1 + 56;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v1 + 32))
  {
    if (((*(_QWORD *)(v27 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      goto LABEL_16;
    if (*(_DWORD *)(v1 + 36) != (_DWORD)v6)
      goto LABEL_17;
    v28 = v8;
    v0[32] = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v4);
    v9 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v11 = v10;
    v12 = v1;
    v14 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
      sub_100045E44(v13 > 1, v14 + 1, 1);
    _swiftEmptyArrayStorage[2] = v14 + 1;
    v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = v9;
    v15[5] = v11;
    result = sub_100517284(v4, v6, v28 & 1, v12);
    v4 = result;
    v6 = v16;
    v8 = v17 & 1;
    --v2;
    v1 = v12;
    if (!v2)
    {
      sub_10030A650(result, v16, v8);
      swift_bridgeObjectRelease(v12);
      v0 = v26;
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10056A434()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 352) = v1;
  if (v1)
    v2 = sub_10056B13C;
  else
    v2 = sub_10056A494;
  return swift_task_switch(v2, 0, 0);
}

id sub_10056A494()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  __n128 v13;
  id v14;
  void *v15;
  unsigned int v17;
  id result;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  char v27;
  char v28;
  unsigned __int8 v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  unsigned __int8 v45;
  unint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD v68[3];

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(void **)(v0 + 232);

  if (!v1)
  {
    if (qword_1009CE858 != -1)
      swift_once(&qword_1009CE858, sub_10056A038);
    v51 = type metadata accessor for Logger(0);
    v52 = sub_100048F64(v51, (uint64_t)qword_100A1EC50);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.error.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Error retrieving reviews from manager", v55, 2u);
      swift_slowDealloc(v55, -1, -1);
    }

    v3 = sub_1001DFD90((uint64_t)_swiftEmptyArrayStorage);
LABEL_89:
    v58 = *(_QWORD *)(v0 + 328);
    v59 = *(_QWORD *)(v0 + 304);
    v60 = *(_QWORD *)(v0 + 280);
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    return (id)(*(uint64_t (**)(unint64_t))(v0 + 8))(v3);
  }
  v3 = sub_1001DFD90((uint64_t)_swiftEmptyArrayStorage);
  v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v1 >> 62)
  {
LABEL_83:
    if (v1 >= 0)
      v57 = v4;
    else
      v57 = v1;
    swift_bridgeObjectRetain_n(v1, 2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v57);
    swift_bridgeObjectRelease(v1);
    if (v5)
      goto LABEL_4;
    goto LABEL_87;
  }
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  if (!v5)
  {
LABEL_87:
    v56 = v1;
LABEL_88:
    swift_bridgeObjectRelease_n(v56, 2);
    goto LABEL_89;
  }
LABEL_4:
  v6 = 0;
  v64 = *(_QWORD *)(v0 + 320);
  v65 = v1;
  v7 = *(_QWORD *)(v0 + 296);
  v67 = v1 & 0xC000000000000001;
  v62 = v1 + 32;
  v61 = enum case for StoreBookTaste.neutral(_:);
  v63 = v7;
  v66 = v5;
  while (1)
  {
    if (v67)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v65);
    else
      v14 = *(id *)(v62 + 8 * v6);
    v15 = v14;
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v17 = objc_msgSend(v14, "taste");
    v1 = (uint64_t)v15;
    result = objc_msgSend(v15, "assetID");
    if (!result)
      break;
    v19 = result;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v22 = v21;

    v4 = HIBYTE(v22) & 0xF;
    v23 = v20 & 0xFFFFFFFFFFFFLL;
    if ((v22 & 0x2000000000000000) != 0)
      v24 = HIBYTE(v22) & 0xF;
    else
      v24 = v20 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      if ((v22 & 0x1000000000000000) != 0)
      {
        v26 = sub_1003277FC(v20, v22, 10);
        v28 = v50;
        goto LABEL_49;
      }
      if ((v22 & 0x2000000000000000) == 0)
      {
        if ((v20 & 0x1000000000000000) != 0)
          v25 = (unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v25 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v20, v22);
        v26 = (uint64_t)sub_1003276EC(v25, v23, 10);
        v28 = v27 & 1;
LABEL_49:
        v35 = swift_bridgeObjectRelease(v22);
        if ((v28 & 1) == 0)
        {
          v37 = *(_QWORD *)(v0 + 280);
          v36 = *(_QWORD *)(v0 + 288);
          StoreBookTaste.init(rawValue:)(v17 & 3, v35);
          v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v37, 1, v36);
          v39 = *(_QWORD *)(v0 + 304);
          v41 = *(_QWORD *)(v0 + 280);
          v40 = *(_QWORD *)(v0 + 288);
          if (v38 == 1)
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v39, v61, v40);
            sub_10056B324(v41);
          }
          else
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v39, *(_QWORD *)(v0 + 280), v40);
          }
          v9 = *(_QWORD *)(v0 + 328);
          v8 = *(_QWORD *)(v0 + 336);
          v10 = (v17 >> 2) & 1;
          v11 = *(_QWORD *)(v0 + 312);
          StoreBookTasteInfo.init(taste:explicitlyDeclined:)(*(_QWORD *)(v0 + 304), v10);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v9, v8, v11);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
          v68[0] = v3;
          sub_1002C4C18(v9, v26, isUniquelyReferenced_nonNull_native);
          v3 = v68[0];
          v13 = swift_bridgeObjectRelease(0x8000000000000000);
          (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v8, v11, v13);
          v7 = v63;
        }
        goto LABEL_7;
      }
      v68[0] = v20;
      v68[1] = v22 & 0xFFFFFFFFFFFFFFLL;
      if (v20 == 43)
      {
        if (!v4)
          goto LABEL_82;
        if (v4 == 1 || (BYTE1(v20) - 48) > 9u)
          goto LABEL_45;
        v26 = (BYTE1(v20) - 48);
        if (v4 == 2)
          goto LABEL_48;
        if ((BYTE2(v20) - 48) <= 9u)
        {
          v26 = 10 * (BYTE1(v20) - 48) + (BYTE2(v20) - 48);
          v32 = v4 - 3;
          if (v32)
          {
            v33 = (unsigned __int8 *)v68 + 3;
            while (1)
            {
              v34 = *v33 - 48;
              if (v34 > 9)
                goto LABEL_45;
              if (!is_mul_ok(v26, 0xAuLL))
                goto LABEL_45;
              v30 = __CFADD__(10 * v26, v34);
              v26 = 10 * v26 + v34;
              if (v30)
                goto LABEL_45;
              v28 = 0;
              ++v33;
              if (!--v32)
                goto LABEL_49;
            }
          }
          goto LABEL_48;
        }
      }
      else if (v20 == 45)
      {
        if (!v4)
          goto LABEL_81;
        if (v4 != 1)
        {
          v29 = BYTE1(v20) - 48;
          if ((BYTE1(v20) - 48) <= 9u)
          {
            v26 = 0;
            v30 = v29 == 0;
            v31 = -(uint64_t)v29;
            if (!v30)
              goto LABEL_46;
            if (v4 == 2)
            {
              v28 = 0;
              v26 = v31;
              goto LABEL_49;
            }
            v45 = BYTE2(v20) - 48;
            if ((BYTE2(v20) - 48) <= 9u && is_mul_ok(v31, 0xAuLL))
            {
              v46 = 10 * v31;
              v26 = v46 - v45;
              if (v46 >= v45)
              {
                v47 = v4 - 3;
                if (v47)
                {
                  v48 = (unsigned __int8 *)v68 + 3;
                  while (1)
                  {
                    v49 = *v48 - 48;
                    if (v49 > 9)
                      goto LABEL_45;
                    if (!is_mul_ok(v26, 0xAuLL))
                      goto LABEL_45;
                    v30 = 10 * v26 >= (unint64_t)v49;
                    v26 = 10 * v26 - v49;
                    if (!v30)
                      goto LABEL_45;
                    v28 = 0;
                    ++v48;
                    if (!--v47)
                      goto LABEL_49;
                  }
                }
LABEL_48:
                v28 = 0;
                goto LABEL_49;
              }
            }
          }
        }
      }
      else if (v4 && (v20 - 48) <= 9u)
      {
        v26 = (v20 - 48);
        if (v4 == 1)
          goto LABEL_48;
        if ((BYTE1(v20) - 48) <= 9u)
        {
          v26 = 10 * (v20 - 48) + (BYTE1(v20) - 48);
          v42 = v4 - 2;
          if (v42)
          {
            v43 = (unsigned __int8 *)v68 + 2;
            while (1)
            {
              v44 = *v43 - 48;
              if (v44 > 9)
                goto LABEL_45;
              if (!is_mul_ok(v26, 0xAuLL))
                goto LABEL_45;
              v30 = __CFADD__(10 * v26, v44);
              v26 = 10 * v26 + v44;
              if (v30)
                goto LABEL_45;
              v28 = 0;
              ++v43;
              if (!--v42)
                goto LABEL_49;
            }
          }
          goto LABEL_48;
        }
      }
LABEL_45:
      v26 = 0;
LABEL_46:
      v28 = 1;
      goto LABEL_49;
    }
    swift_bridgeObjectRelease(v22);
LABEL_7:

    if (v6 == v66)
    {
      v56 = v65;
      goto LABEL_88;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10056AABC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 360) = v1;
  if (v1)
    v2 = sub_10056B1AC;
  else
    v2 = sub_10056AB1C;
  return swift_task_switch(v2, 0, 0);
}

id sub_10056AB1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  __n128 v12;
  id v13;
  void *v14;
  unsigned int v16;
  id result;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  char v26;
  char v27;
  unsigned __int8 v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  unsigned __int8 v44;
  unint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v67[3];

  v1 = *(_QWORD *)(v0 + 240);

  if (!v1)
  {
    if (qword_1009CE858 != -1)
      swift_once(&qword_1009CE858, sub_10056A038);
    v50 = type metadata accessor for Logger(0);
    v51 = sub_100048F64(v50, (uint64_t)qword_100A1EC50);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Error retrieving reviews from manager", v54, 2u);
      swift_slowDealloc(v54, -1, -1);
    }

    v2 = sub_1001DFD90((uint64_t)_swiftEmptyArrayStorage);
LABEL_89:
    v57 = *(_QWORD *)(v0 + 328);
    v58 = *(_QWORD *)(v0 + 304);
    v59 = *(_QWORD *)(v0 + 280);
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    return (id)(*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
  }
  v2 = sub_1001DFD90((uint64_t)_swiftEmptyArrayStorage);
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v1 >> 62)
  {
LABEL_83:
    if (v1 >= 0)
      v56 = v3;
    else
      v56 = v1;
    swift_bridgeObjectRetain_n(v1, 2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v1);
    if (v4)
      goto LABEL_4;
    goto LABEL_87;
  }
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  if (!v4)
  {
LABEL_87:
    v55 = v1;
LABEL_88:
    swift_bridgeObjectRelease_n(v55, 2);
    goto LABEL_89;
  }
LABEL_4:
  v5 = 0;
  v63 = *(_QWORD *)(v0 + 320);
  v64 = v1;
  v6 = *(_QWORD *)(v0 + 296);
  v66 = v1 & 0xC000000000000001;
  v61 = v1 + 32;
  v60 = enum case for StoreBookTaste.neutral(_:);
  v62 = v6;
  v65 = v4;
  while (1)
  {
    if (v66)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v64);
    else
      v13 = *(id *)(v61 + 8 * v5);
    v14 = v13;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v16 = objc_msgSend(v13, "taste");
    v1 = (uint64_t)v14;
    result = objc_msgSend(v14, "assetID");
    if (!result)
      break;
    v18 = result;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v21 = v20;

    v3 = HIBYTE(v21) & 0xF;
    v22 = v19 & 0xFFFFFFFFFFFFLL;
    if ((v21 & 0x2000000000000000) != 0)
      v23 = HIBYTE(v21) & 0xF;
    else
      v23 = v19 & 0xFFFFFFFFFFFFLL;
    if (v23)
    {
      if ((v21 & 0x1000000000000000) != 0)
      {
        v25 = sub_1003277FC(v19, v21, 10);
        v27 = v49;
        goto LABEL_49;
      }
      if ((v21 & 0x2000000000000000) == 0)
      {
        if ((v19 & 0x1000000000000000) != 0)
          v24 = (unsigned __int8 *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v24 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v19, v21);
        v25 = (uint64_t)sub_1003276EC(v24, v22, 10);
        v27 = v26 & 1;
LABEL_49:
        v34 = swift_bridgeObjectRelease(v21);
        if ((v27 & 1) == 0)
        {
          v36 = *(_QWORD *)(v0 + 280);
          v35 = *(_QWORD *)(v0 + 288);
          StoreBookTaste.init(rawValue:)(v16 & 3, v34);
          v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v36, 1, v35);
          v38 = *(_QWORD *)(v0 + 304);
          v40 = *(_QWORD *)(v0 + 280);
          v39 = *(_QWORD *)(v0 + 288);
          if (v37 == 1)
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v38, v60, v39);
            sub_10056B324(v40);
          }
          else
          {
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v38, *(_QWORD *)(v0 + 280), v39);
          }
          v8 = *(_QWORD *)(v0 + 328);
          v7 = *(_QWORD *)(v0 + 336);
          v9 = (v16 >> 2) & 1;
          v10 = *(_QWORD *)(v0 + 312);
          StoreBookTasteInfo.init(taste:explicitlyDeclined:)(*(_QWORD *)(v0 + 304), v9);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v8, v7, v10);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
          v67[0] = v2;
          sub_1002C4C18(v8, v25, isUniquelyReferenced_nonNull_native);
          v2 = v67[0];
          v12 = swift_bridgeObjectRelease(0x8000000000000000);
          (*(void (**)(uint64_t, uint64_t, __n128))(v63 + 8))(v7, v10, v12);
          v6 = v62;
        }
        goto LABEL_7;
      }
      v67[0] = v19;
      v67[1] = v21 & 0xFFFFFFFFFFFFFFLL;
      if (v19 == 43)
      {
        if (!v3)
          goto LABEL_82;
        if (v3 == 1 || (BYTE1(v19) - 48) > 9u)
          goto LABEL_45;
        v25 = (BYTE1(v19) - 48);
        if (v3 == 2)
          goto LABEL_48;
        if ((BYTE2(v19) - 48) <= 9u)
        {
          v25 = 10 * (BYTE1(v19) - 48) + (BYTE2(v19) - 48);
          v31 = v3 - 3;
          if (v31)
          {
            v32 = (unsigned __int8 *)v67 + 3;
            while (1)
            {
              v33 = *v32 - 48;
              if (v33 > 9)
                goto LABEL_45;
              if (!is_mul_ok(v25, 0xAuLL))
                goto LABEL_45;
              v29 = __CFADD__(10 * v25, v33);
              v25 = 10 * v25 + v33;
              if (v29)
                goto LABEL_45;
              v27 = 0;
              ++v32;
              if (!--v31)
                goto LABEL_49;
            }
          }
          goto LABEL_48;
        }
      }
      else if (v19 == 45)
      {
        if (!v3)
          goto LABEL_81;
        if (v3 != 1)
        {
          v28 = BYTE1(v19) - 48;
          if ((BYTE1(v19) - 48) <= 9u)
          {
            v25 = 0;
            v29 = v28 == 0;
            v30 = -(uint64_t)v28;
            if (!v29)
              goto LABEL_46;
            if (v3 == 2)
            {
              v27 = 0;
              v25 = v30;
              goto LABEL_49;
            }
            v44 = BYTE2(v19) - 48;
            if ((BYTE2(v19) - 48) <= 9u && is_mul_ok(v30, 0xAuLL))
            {
              v45 = 10 * v30;
              v25 = v45 - v44;
              if (v45 >= v44)
              {
                v46 = v3 - 3;
                if (v46)
                {
                  v47 = (unsigned __int8 *)v67 + 3;
                  while (1)
                  {
                    v48 = *v47 - 48;
                    if (v48 > 9)
                      goto LABEL_45;
                    if (!is_mul_ok(v25, 0xAuLL))
                      goto LABEL_45;
                    v29 = 10 * v25 >= (unint64_t)v48;
                    v25 = 10 * v25 - v48;
                    if (!v29)
                      goto LABEL_45;
                    v27 = 0;
                    ++v47;
                    if (!--v46)
                      goto LABEL_49;
                  }
                }
LABEL_48:
                v27 = 0;
                goto LABEL_49;
              }
            }
          }
        }
      }
      else if (v3 && (v19 - 48) <= 9u)
      {
        v25 = (v19 - 48);
        if (v3 == 1)
          goto LABEL_48;
        if ((BYTE1(v19) - 48) <= 9u)
        {
          v25 = 10 * (v19 - 48) + (BYTE1(v19) - 48);
          v41 = v3 - 2;
          if (v41)
          {
            v42 = (unsigned __int8 *)v67 + 2;
            while (1)
            {
              v43 = *v42 - 48;
              if (v43 > 9)
                goto LABEL_45;
              if (!is_mul_ok(v25, 0xAuLL))
                goto LABEL_45;
              v29 = __CFADD__(10 * v25, v43);
              v25 = 10 * v25 + v43;
              if (v29)
                goto LABEL_45;
              v27 = 0;
              ++v42;
              if (!--v41)
                goto LABEL_49;
            }
          }
          goto LABEL_48;
        }
      }
LABEL_45:
      v25 = 0;
LABEL_46:
      v27 = 1;
      goto LABEL_49;
    }
    swift_bridgeObjectRelease(v21);
LABEL_7:

    if (v5 == v65)
    {
      v55 = v64;
      goto LABEL_88;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10056B13C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v1 + 344);
  swift_willThrow(a1);

  v3 = *(_QWORD *)(v1 + 328);
  v4 = *(_QWORD *)(v1 + 304);
  v5 = *(_QWORD *)(v1 + 280);
  swift_task_dealloc(*(_QWORD *)(v1 + 336));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10056B1AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_willThrow(a1);
  v2 = *(_QWORD *)(v1 + 328);
  v3 = *(_QWORD *)(v1 + 304);
  v4 = *(_QWORD *)(v1 + 280);
  swift_task_dealloc(*(_QWORD *)(v1 + 336));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10056B218(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = a4;
    v9 = a4;
    return swift_continuation_throwingResumeWithError(v4, v7);
  }
  else
  {
    if (a2)
    {
      v13 = sub_100009E04(0, (unint64_t *)&unk_1009EB730, BCMutableAssetDetail_ptr);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = *(uint64_t **)(*(_QWORD *)(v4 + 64) + 40);
    *v15 = v14;
    v15[1] = (uint64_t)a3;
    v16 = a3;
    return swift_continuation_throwingResume(v4);
  }
}

uint64_t sub_10056B2D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EB71C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return sub_10056A0B8(a1);
}

uint64_t sub_10056B324(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009EB720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10056B364(uint64_t a1)
{
  sub_10056B38C(a1, (double *)&UIFontWeightMedium, &qword_1009EB740);
}

void sub_10056B378(uint64_t a1)
{
  sub_10056B38C(a1, (double *)&UIFontWeightBold, &qword_1009EB748);
}

void sub_10056B38C(uint64_t a1, double *a2, _QWORD *a3)
{
  void *v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  id v11;

  v5 = (void *)objc_opt_self(UIFontDescriptor);
  v6 = *a2;
  v7 = objc_msgSend(v5, "_preferredFontDescriptorWithTextStyle:weight:", UIFontTextStyleCallout, *a2);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "pointSize");
    if (v9 <= 29.0)
      v10 = v9;
    else
      v10 = 29.0;
    v11 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v8, v10);

  }
  else
  {
    sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
    v11 = (id)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCallout, v6);
  }
  *a3 = v11;
}

void sub_10056B474()
{
  qword_1009EB750 = 0x402C000000000000;
}

BOOL sub_10056B484(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return sub_100572958((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_10056B4CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D8918);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = sub_10004CFD4(&qword_1009EB7A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  *(_QWORD *)v15 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v17 = sub_10004CFD4(&qword_1009EB7A8);
  sub_10056B6D4(v2, (uint64_t)&v15[*(int *)(v17 + 44)]);
  v18 = enum case for ContentSizeCategory.large(_:);
  v19 = type metadata accessor for ContentSizeCategory(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v9, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v6, &qword_1009D8918);
  sub_10000B5E4((uint64_t)v15, (uint64_t)v12, &qword_1009EB7A0);
  KeyPath = swift_getKeyPath(&unk_10072D7D0);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009EB7B0);
  v23 = (uint64_t *)(a1 + *(int *)(v22 + 40));
  *v23 = KeyPath;
  v24 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  sub_100025B3C((uint64_t)v6, a1, &qword_1009D8918);
  sub_100025B3C((uint64_t)v12, a1 + *(int *)(v22 + 36), &qword_1009EB7A0);
  sub_100010960((uint64_t)v9, &qword_1009D8918);
  return sub_100010960((uint64_t)v15, &qword_1009EB7A0);
}

uint64_t sub_10056B6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void (**v89)(double *@<X8>);
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char **v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _OWORD v175[3];
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  __int128 v184;

  v169 = a2;
  v149 = sub_10004CFD4(&qword_1009EB7C0);
  v148 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v160 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_10004CFD4(&qword_1009EB7C8);
  __chkstk_darwin(v167);
  v147 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v150 = (uint64_t)&v147 - v6;
  v171 = sub_10004CFD4(&qword_1009EB7D0);
  __chkstk_darwin(v171);
  v172 = (uint64_t)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_10004CFD4(&qword_1009EB7D8);
  __chkstk_darwin(v164);
  v165 = (uint64_t)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_10004CFD4(&qword_1009EB7E0);
  __chkstk_darwin(v174);
  v166 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for PlainListStyle(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_10004CFD4(&qword_1009EB7E8);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_10004CFD4(&qword_1009EB7F0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EB7F8);
  __chkstk_darwin(v13);
  v161 = (char **)((char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v163 = sub_10004CFD4(&qword_1009EB800);
  __chkstk_darwin(v163);
  v162 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009EB808);
  __chkstk_darwin(v16);
  v168 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v170 = (char *)&v147 - v19;
  v20 = sub_10004CFD4(&qword_1009EB810);
  __chkstk_darwin(v20);
  v22 = (uint64_t)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009EB818);
  __chkstk_darwin(v23);
  v25 = (char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10004CFD4(&qword_1009EB820);
  __chkstk_darwin(v26);
  v28 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_10004CFD4(&qword_1009EB828);
  __chkstk_darwin(v173);
  v30 = (char *)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v147 - v32;
  v34 = sub_10056C440(v22);
  v35 = static Edge.Set.horizontal.getter(v34);
  v36 = EdgeInsets.init(_all:)(5.0);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_10000B5E4(v22, (uint64_t)v25, &qword_1009EB810);
  v43 = &v25[*(int *)(v23 + 36)];
  *v43 = v35;
  *((double *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  v44 = sub_100010960(v22, &qword_1009EB810);
  v45 = static Edge.Set.top.getter(v44);
  v46 = EdgeInsets.init(_all:)(5.0);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_10000B5E4((uint64_t)v25, (uint64_t)v28, &qword_1009EB818);
  v53 = &v28[*(int *)(v26 + 36)];
  *v53 = v45;
  *((double *)v53 + 1) = v46;
  *((_QWORD *)v53 + 2) = v48;
  *((_QWORD *)v53 + 3) = v50;
  *((_QWORD *)v53 + 4) = v52;
  v53[40] = 0;
  v54 = sub_100010960((uint64_t)v25, &qword_1009EB818);
  v55 = static Edge.Set.bottom.getter(v54);
  v56 = EdgeInsets.init(_all:)(-2.0);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  sub_10000B5E4((uint64_t)v28, (uint64_t)v30, &qword_1009EB820);
  v63 = &v30[*(int *)(v173 + 36)];
  *v63 = v55;
  *((double *)v63 + 1) = v56;
  *((_QWORD *)v63 + 2) = v58;
  *((_QWORD *)v63 + 3) = v60;
  *((_QWORD *)v63 + 4) = v62;
  v63[40] = 0;
  sub_100010960((uint64_t)v28, &qword_1009EB820);
  sub_100025B3C((uint64_t)v30, (uint64_t)v33, &qword_1009EB828);
  v64 = *(_QWORD *)(a1 + 48);
  v65 = swift_retain(v64);
  LOBYTE(v22) = dispatch thunk of SearchViewModel.hasResultsOrIsSearching.getter(v65);
  swift_release(v64);
  if ((v22 & 1) == 0)
  {
    v101 = v160;
    v162 = v33;
    v173 = (uint64_t)v30;
    v98 = (uint64_t)v170;
    v102 = v171;
    v103 = v174;
    v104 = v172;
    v105 = swift_retain(v64);
    v106 = dispatch thunk of SearchViewModel.searchText.getter(v105);
    v108 = v107;
    swift_release(v64);
    swift_bridgeObjectRelease(v108);
    if ((v108 & 0x2000000000000000) != 0)
      v109 = HIBYTE(v108) & 0xF;
    else
      v109 = v106 & 0xFFFFFFFFFFFFLL;
    sub_100506A48(a1, (uint64_t)v175);
    if (v109)
    {
      v110 = sub_100506A84(v175);
      v99 = v169;
      v100 = (uint64_t)v168;
    }
    else
    {
      v111 = a1;
      v112 = v176;
      v113 = swift_retain(v176);
      v114 = dispatch thunk of SearchViewModel.hasRecents.getter(v113);
      swift_release(v112);
      v110 = sub_100506A84(v175);
      v99 = v169;
      v100 = (uint64_t)v168;
      if ((v114 & 1) != 0)
      {
        v161 = &v147;
        __chkstk_darwin(v110);
        v146 = v111;
        v116 = static Axis.Set.vertical.getter(v115);
        v117 = sub_10004CFD4(&qword_1009EB898);
        v118 = sub_10056EAA0();
        v119 = v101;
        v120 = ScrollView.init(_:showsIndicators:content:)(v116, 1, sub_10056EA98, &v145, v117, v118);
        v161 = (char **)static Color.clear.getter(v120);
        LOBYTE(v116) = static Edge.Set.all.getter(v121);
        v122 = v148;
        v123 = (uint64_t)v147;
        v124 = v149;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v147, v119, v149);
        v125 = v123 + *(int *)(v167 + 36);
        *(_QWORD *)v125 = v161;
        *(_BYTE *)(v125 + 8) = v116;
        (*(void (**)(char *, uint64_t))(v122 + 8))(v119, v124);
        v126 = v150;
        sub_100025B3C(v123, v150, &qword_1009EB7C8);
        v127 = v165;
        sub_10000B5E4(v126, v165, &qword_1009EB7C8);
        swift_storeEnumTagMultiPayload(v127, v164, 1);
        v128 = sub_10056E8AC();
        v129 = sub_10056E9FC();
        v130 = (uint64_t)v166;
        _ConditionalContent<>.init(storage:)(v127, v163, v167, v128, v129);
        sub_10000B5E4(v130, v104, &qword_1009EB7E0);
        swift_storeEnumTagMultiPayload(v104, v102, 0);
        v131 = sub_10004CFD4(&qword_1009EB830);
        v132 = sub_10056E840();
        v133 = sub_1001E7624();
        _ConditionalContent<>.init(storage:)(v104, v174, v131, v132, v133);
        sub_100010960(v130, &qword_1009EB7E0);
        sub_100010960(v126, &qword_1009EB7C8);
LABEL_11:
        v30 = (char *)v173;
        v33 = v162;
        goto LABEL_12;
      }
    }
    v134 = static Alignment.center.getter(v110);
    _FrameLayout.init(width:height:alignment:)(&v180, 0, 1, 0x4020000000000000, 0, v134, v135);
    v136 = v180;
    v137 = v181;
    v138 = v182;
    v139 = v183;
    *(_QWORD *)v104 = 0;
    *(_BYTE *)(v104 + 8) = 1;
    *(_QWORD *)(v104 + 16) = v136;
    *(_BYTE *)(v104 + 24) = v137;
    *(_QWORD *)(v104 + 32) = v138;
    *(_BYTE *)(v104 + 40) = v139;
    *(_OWORD *)(v104 + 48) = v184;
    swift_storeEnumTagMultiPayload(v104, v102, 1);
    v140 = sub_10004CFD4(&qword_1009EB830);
    v141 = sub_10056E840();
    v142 = sub_1001E7624();
    _ConditionalContent<>.init(storage:)(v104, v103, v140, v141, v142);
    goto LABEL_11;
  }
  __chkstk_darwin(v66);
  v146 = a1;
  v67 = sub_10004CFD4(&qword_1009EB8C8);
  v68 = sub_100030B34(&qword_1009EB8D0, &qword_1009EB8C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v69 = v151;
  v70 = List<>.init(content:)(sub_10056EB90, &v145, v67, v68);
  v71 = v154;
  PlainListStyle.init()(v70);
  v72 = sub_100030B34(&qword_1009EB850, &qword_1009EB7E8, (uint64_t)&protocol conformance descriptor for List<A, B>);
  v73 = v157;
  v74 = v153;
  v75 = v156;
  View.listStyle<A>(_:)(v71, v153, v156, v72, &protocol witness table for PlainListStyle);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v71, v75);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v69, v74);
  sub_10056D7A0();
  v77 = v76;
  v79 = static Alignment.center.getter(v78);
  v80 = (uint64_t)v161;
  v82 = sub_1005F2FC4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v161, v77, 0, 0.0, 1, v79, v81);
  (*(void (**)(char *, uint64_t, double))(v158 + 8))(v73, v159, v82);
  sub_100506A48(a1, (uint64_t)v175);
  v83 = swift_allocObject(&unk_100910778, 120, 7);
  v84 = v178;
  *(_OWORD *)(v83 + 80) = v177;
  *(_OWORD *)(v83 + 96) = v84;
  *(_QWORD *)(v83 + 112) = v179;
  v85 = v175[1];
  *(_OWORD *)(v83 + 16) = v175[0];
  *(_OWORD *)(v83 + 32) = v85;
  v86 = v176;
  *(_OWORD *)(v83 + 48) = v175[2];
  *(_OWORD *)(v83 + 64) = v86;
  v87 = (uint64_t)v162;
  sub_10000B5E4(v80, (uint64_t)v162, &qword_1009EB7F8);
  v88 = v163;
  v89 = (void (**)(double *@<X8>))(v87 + *(int *)(v163 + 36));
  *v89 = sub_10056DBEC;
  v89[1] = 0;
  v89[2] = (void (*)(double *@<X8>))sub_10056EB9C;
  v89[3] = (void (*)(double *@<X8>))v83;
  sub_100010960(v80, &qword_1009EB7F8);
  v90 = v165;
  sub_10000B5E4(v87, v165, &qword_1009EB800);
  swift_storeEnumTagMultiPayload(v90, v164, 0);
  v91 = sub_10056E8AC();
  v92 = sub_10056E9FC();
  v93 = (uint64_t)v166;
  _ConditionalContent<>.init(storage:)(v90, v88, v167, v91, v92);
  v94 = v172;
  sub_10000B5E4(v93, v172, &qword_1009EB7E0);
  swift_storeEnumTagMultiPayload(v94, v171, 0);
  v95 = sub_10004CFD4(&qword_1009EB830);
  v96 = sub_10056E840();
  v97 = sub_1001E7624();
  v98 = (uint64_t)v170;
  _ConditionalContent<>.init(storage:)(v94, v174, v95, v96, v97);
  sub_100010960(v93, &qword_1009EB7E0);
  sub_100010960(v87, &qword_1009EB800);
  v99 = v169;
  v100 = (uint64_t)v168;
LABEL_12:
  sub_10000B5E4((uint64_t)v33, (uint64_t)v30, &qword_1009EB828);
  sub_10000B5E4(v98, v100, &qword_1009EB808);
  sub_10000B5E4((uint64_t)v30, v99, &qword_1009EB828);
  v143 = sub_10004CFD4(&qword_1009EB890);
  sub_10000B5E4(v100, v99 + *(int *)(v143 + 48), &qword_1009EB808);
  sub_100010960(v98, &qword_1009EB808);
  sub_100010960((uint64_t)v33, &qword_1009EB828);
  sub_100010960(v100, &qword_1009EB808);
  return sub_100010960((uint64_t)v30, &qword_1009EB828);
}

uint64_t sub_10056C440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t (**v34)();
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[5];

  v2 = v1;
  v45 = a1;
  v43 = type metadata accessor for PopoverSearchBar(0);
  __chkstk_darwin(v43);
  v4 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_10004CFD4((uint64_t *)&unk_1009EB9C0);
  __chkstk_darwin(v44);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v2 + 48);
  v9 = type metadata accessor for SearchViewModel(0);
  v10 = sub_100008DB0((unint64_t *)&qword_1009EFDC0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchViewModel, (uint64_t)&protocol conformance descriptor for SearchViewModel);
  v11 = ObservedObject.projectedValue.getter(v7, v8, v9, v10);
  KeyPath = swift_getKeyPath(&unk_10072D820);
  ObservedObject.Wrapper.subscript.getter(v53, KeyPath, v11, v10);
  swift_release(KeyPath);
  swift_release(v11);
  v13 = v53[0];
  v14 = v53[1];
  v15 = v53[2];
  v16 = v53[3];
  v17 = *(_QWORD *)(v2 + 48);
  swift_retain(v17);
  v42 = dispatch thunk of SearchViewModel.responderState.getter(v18);
  swift_release(v17);
  if (qword_1009CE790 != -1)
    swift_once(&qword_1009CE790, sub_100507260);
  v19 = qword_100A1EBA8;
  v20 = qword_100A1EBB0;
  sub_100506A48(v2, (uint64_t)&v46);
  v21 = swift_allocObject(&unk_100910930, 120, 7);
  v22 = v51;
  *(_OWORD *)(v21 + 80) = v50;
  *(_OWORD *)(v21 + 96) = v22;
  *(_QWORD *)(v21 + 112) = v52;
  v23 = v47;
  *(_OWORD *)(v21 + 16) = v46;
  *(_OWORD *)(v21 + 32) = v23;
  v24 = v49;
  *(_OWORD *)(v21 + 48) = v48;
  *(_OWORD *)(v21 + 64) = v24;
  *v4 = v13;
  v4[1] = v14;
  v4[2] = v15;
  v4[3] = v16;
  v25 = type metadata accessor for SearchBarResponderState(0);
  v26 = sub_100008DB0((unint64_t *)&unk_1009EB9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchBarResponderState, (uint64_t)&protocol conformance descriptor for SearchBarResponderState);
  swift_bridgeObjectRetain(v20);
  v4[4] = ObservedObject.init(wrappedValue:)(v42, v25, v26);
  v4[5] = v27;
  v4[6] = v19;
  v4[7] = v20;
  v4[8] = sub_100572930;
  v4[9] = v21;
  v28 = (_QWORD *)((char *)v4 + *(int *)(v43 + 32));
  *v28 = swift_getKeyPath(&unk_10072D850);
  v29 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  sub_100506A48(v2, (uint64_t)&v46);
  v30 = swift_allocObject(&unk_100910958, 120, 7);
  v31 = v51;
  *(_OWORD *)(v30 + 80) = v50;
  *(_OWORD *)(v30 + 96) = v31;
  *(_QWORD *)(v30 + 112) = v52;
  v32 = v47;
  *(_OWORD *)(v30 + 16) = v46;
  *(_OWORD *)(v30 + 32) = v32;
  v33 = v49;
  *(_OWORD *)(v30 + 48) = v48;
  *(_OWORD *)(v30 + 64) = v33;
  sub_10002CD84((uint64_t)v4, (uint64_t)v6, type metadata accessor for PopoverSearchBar);
  v34 = (uint64_t (**)())&v6[*(int *)(v44 + 36)];
  *v34 = sub_100572944;
  v34[1] = (uint64_t (*)())v30;
  v34[2] = 0;
  v34[3] = 0;
  sub_10002C8F0((uint64_t)v4, type metadata accessor for PopoverSearchBar);
  sub_100506A48(v2, (uint64_t)&v46);
  v35 = swift_allocObject(&unk_100910980, 120, 7);
  v36 = v51;
  *(_OWORD *)(v35 + 80) = v50;
  *(_OWORD *)(v35 + 96) = v36;
  *(_QWORD *)(v35 + 112) = v52;
  v37 = v47;
  *(_OWORD *)(v35 + 16) = v46;
  *(_OWORD *)(v35 + 32) = v37;
  v38 = v49;
  *(_OWORD *)(v35 + 48) = v48;
  *(_OWORD *)(v35 + 64) = v38;
  v39 = v45;
  sub_10000B5E4((uint64_t)v6, v45, (uint64_t *)&unk_1009EB9C0);
  v40 = (_QWORD *)(v39 + *(int *)(sub_10004CFD4(&qword_1009EB810) + 36));
  *v40 = 0;
  v40[1] = 0;
  v40[2] = sub_100572950;
  v40[3] = v35;
  return sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009EB9C0);
}

uint64_t sub_10056C7C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = dispatch thunk of SearchViewModel.searchText.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10056C7EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return dispatch thunk of SearchViewModel.searchText.setter(v1, v2);
}

double sub_10056C828(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v2 = a1[3];
  v3 = a1[4];
  sub_10003F198(a1, v2);
  dispatch thunk of SearchEventHandling.didTapSearch()(v2, v3);
  v4 = a1[6];
  swift_retain(v4);
  v6 = dispatch thunk of SearchViewModel.responderState.getter(v5);
  swift_release(v4);
  dispatch thunk of SearchBarResponderState.resignFirstResponder.setter(1);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10056C894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = swift_retain(v1);
  v3 = dispatch thunk of SearchViewModel.focusSearchFieldOnAppear.getter(v2);
  result = swift_release(v1);
  if ((v3 & 1) != 0)
  {
    v5 = swift_retain(v1);
    v6 = dispatch thunk of SearchViewModel.responderState.getter(v5);
    swift_release(v1);
    dispatch thunk of SearchBarResponderState.becomeFirstResponder.setter(1);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_10056C900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = swift_retain(v1);
  v3 = dispatch thunk of SearchViewModel.responderState.getter(v2);
  swift_release(v1);
  dispatch thunk of SearchBarResponderState.resignFirstResponder.setter(1);
  return swift_release(v3);
}

double sub_10056C944@<D0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  int v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  __n128 v59;
  void (*v60)(char *, char *, uint64_t, __n128);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(double *);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  void (*v79)(char *, uint64_t, double);
  void (*v80)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t (*v87)();
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(double *);
  uint64_t v102;
  uint64_t (*v103)@<X0>(_QWORD *@<X8>);
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;

  v89 = a2;
  v91 = sub_10004CFD4(&qword_1009EB8F8);
  v99 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v100 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (char *)&v85 - v5;
  v90 = sub_10004CFD4(&qword_1009EB900);
  v98 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v95 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v85 - v8;
  v10 = *(_QWORD *)(a1 + 48);
  v11 = swift_retain(v10);
  v12 = dispatch thunk of SearchViewModel.searchPage.getter(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = ~v17;
  swift_release(v10);
  if (v19)
  {
    sub_100506A48(a1, (uint64_t)&v106);
    v20 = swift_allocObject(&unk_100910818, 145, 7);
    v21 = v111;
    *(_OWORD *)(v20 + 80) = v110;
    *(_OWORD *)(v20 + 96) = v21;
    v22 = v112;
    v23 = v107;
    *(_OWORD *)(v20 + 16) = v106;
    *(_OWORD *)(v20 + 32) = v23;
    v24 = v109;
    *(_OWORD *)(v20 + 48) = v108;
    *(_OWORD *)(v20 + 64) = v24;
    *(_QWORD *)(v20 + 112) = v22;
    *(_QWORD *)(v20 + 120) = v12;
    *(_QWORD *)(v20 + 128) = v14;
    *(_QWORD *)(v20 + 136) = v16;
    v94 = v20;
    *(_BYTE *)(v20 + 144) = v18 & 1;
    sub_100506A48(a1, (uint64_t)&v106);
    v25 = swift_allocObject(&unk_100910840, 120, 7);
    v26 = v111;
    *(_OWORD *)(v25 + 80) = v110;
    *(_OWORD *)(v25 + 96) = v26;
    *(_QWORD *)(v25 + 112) = v112;
    v27 = v107;
    *(_OWORD *)(v25 + 16) = v106;
    *(_OWORD *)(v25 + 32) = v27;
    v28 = v109;
    *(_OWORD *)(v25 + 48) = v108;
    *(_OWORD *)(v25 + 64) = v28;
    v105 = v25;
    v97 = v12;
    v92 = v14;
    v93 = v16;
    v29 = sub_10057251C(v12, v14, v16, v18 & 1);
    *(_QWORD *)&v106 = static Color.clear.getter(v29);
    v30 = AnyView.init<A>(_:)(&v106, &type metadata for Color, &protocol witness table for Color);
    v10 = *(_QWORD *)(a1 + 48);
    v101 = sub_10057263C;
    v102 = v30;
    v103 = sub_10057450C;
    v104 = v18 & 1;
    v31 = sub_1005725CC;
  }
  else
  {
    v97 = 0;
    v92 = 0;
    v93 = 0;
    v104 = 0;
    v31 = 0;
    v94 = 0;
    v102 = 0;
    v103 = 0;
    v101 = 0;
    v105 = 0;
  }
  v32 = swift_retain(v10);
  v33 = dispatch thunk of SearchViewModel.searchResults.getter(v32);
  swift_release(v10);
  v113 = v33;
  sub_100506A48(a1, (uint64_t)&v106);
  v34 = swift_allocObject(&unk_1009107A0, 120, 7);
  v35 = v111;
  *(_OWORD *)(v34 + 80) = v110;
  *(_OWORD *)(v34 + 96) = v35;
  *(_QWORD *)(v34 + 112) = v112;
  v36 = v107;
  *(_OWORD *)(v34 + 16) = v106;
  *(_OWORD *)(v34 + 32) = v36;
  v37 = v109;
  *(_OWORD *)(v34 + 48) = v108;
  *(_OWORD *)(v34 + 64) = v37;
  v38 = sub_10004CFD4(&qword_1009EB908);
  v39 = type metadata accessor for UUID(0);
  v40 = sub_10004CFD4(&qword_1009EB910);
  v41 = sub_100030B34(&qword_1009EB918, &qword_1009EB908, (uint64_t)&protocol conformance descriptor for [A]);
  v42 = sub_100572208();
  v43 = sub_100008DB0(&qword_1009EB950, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultEntity, (uint64_t)&protocol conformance descriptor for SearchResultEntity);
  ForEach<>.init(_:content:)(&v113, sub_100572200, v34, v38, v39, v40, v41, v42, v43);
  v44 = *(_QWORD *)(a1 + 48);
  swift_retain(v44);
  LOBYTE(v38) = dispatch thunk of SearchViewModel.loadingTitle.getter(v45);
  swift_release(v44);
  v46 = swift_retain(v44);
  v47 = dispatch thunk of SearchViewModel.loadingDetail.getter(v46);
  LOBYTE(v39) = v48;
  swift_release(v44);
  sub_10002E418(a1, (uint64_t)&v106);
  v49 = swift_allocObject(&unk_1009107C8, 56, 7);
  sub_100022840(&v106, v49 + 16);
  sub_100506A48(a1, (uint64_t)&v106);
  v50 = swift_allocObject(&unk_1009107F0, 120, 7);
  v51 = v111;
  *(_OWORD *)(v50 + 80) = v110;
  *(_OWORD *)(v50 + 96) = v51;
  *(_QWORD *)(v50 + 112) = v112;
  v52 = v107;
  *(_OWORD *)(v50 + 16) = v106;
  *(_OWORD *)(v50 + 32) = v52;
  v53 = v109;
  *(_OWORD *)(v50 + 48) = v108;
  *(_OWORD *)(v50 + 64) = v53;
  *(_QWORD *)&v106 = static Color.clear.getter(v50);
  v54 = AnyView.init<A>(_:)(&v106, &type metadata for Color, &protocol witness table for Color);
  LOBYTE(v106) = v38;
  *((_QWORD *)&v106 + 1) = v47;
  LOBYTE(v107) = v39 & 1;
  *((_QWORD *)&v107 + 1) = sub_100572360;
  *(_QWORD *)&v108 = v49;
  *((_QWORD *)&v108 + 1) = sub_10057450C;
  *(_QWORD *)&v109 = 0;
  *((_QWORD *)&v109 + 1) = sub_100572370;
  *(_QWORD *)&v110 = v50;
  *((_QWORD *)&v110 + 1) = v54;
  v55 = static VerticalEdge.Set.bottom.getter(v54);
  v56 = sub_10004CFD4(&qword_1009EB958);
  v57 = sub_100572378();
  v58 = v96;
  View.listRowSeparator(_:edges:)(2, v55, v56, v57);
  swift_release(v54);
  swift_release(v50);
  v59 = swift_release(v49);
  v60 = *(void (**)(char *, char *, uint64_t, __n128))(v98 + 16);
  v61 = v95;
  v62 = v90;
  v60(v95, v9, v90, v59);
  v86 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  v63 = v91;
  v86(v100, v58, v91);
  v88 = v9;
  v64 = v89;
  v65 = v92;
  *(_QWORD *)v89 = v97;
  *((_QWORD *)v64 + 1) = v65;
  v66 = v104;
  *((_QWORD *)v64 + 2) = v93;
  *((_QWORD *)v64 + 3) = v66;
  v87 = v31;
  v67 = v94;
  *((_QWORD *)v64 + 4) = v31;
  *((_QWORD *)v64 + 5) = v67;
  v68 = v102;
  *((_QWORD *)v64 + 6) = v103;
  *((_QWORD *)v64 + 7) = 0;
  v69 = v101;
  v102 = v68;
  v70 = v105;
  *((_QWORD *)v64 + 8) = v101;
  *((_QWORD *)v64 + 9) = v70;
  v105 = v70;
  *((_QWORD *)v64 + 10) = v68;
  v71 = sub_10004CFD4(&qword_1009EB980);
  ((void (*)(char *, char *, uint64_t))v60)(&v64[*(int *)(v71 + 48)], v61, v62);
  v72 = v100;
  v86(&v64[*(int *)(v71 + 64)], v100, v63);
  v83 = v70;
  v84 = v68;
  v82 = (uint64_t)v69;
  v73 = v97;
  v74 = v92;
  v75 = v93;
  v76 = (uint64_t)v87;
  v77 = v94;
  v78 = sub_1005724C4(v97, v92, v93, v104, (uint64_t)v87, v94, (uint64_t)v103, 0, v82, v83, v84);
  v79 = *(void (**)(char *, uint64_t, double))(v99 + 8);
  v79(v96, v63, v78);
  v80 = *(void (**)(char *, uint64_t))(v98 + 8);
  v80(v88, v62);
  ((void (*)(char *, uint64_t))v79)(v72, v63);
  v80(v95, v62);
  return sub_100572528(v73, v74, v75, v104, v76, v77, (uint64_t)v103, 0, (uint64_t)v101, v105, v102);
}

void sub_10056D06C(double *a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD v21[4];
  char v22;

  v2 = *(_QWORD *)(a2 + 56);
  v3 = *a1 + 2.0;
  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  swift_retain(v8);
  swift_bridgeObjectRetain(v5);
  v9 = sub_10004CFD4(&qword_1009EB8F0);
  State.wrappedValue.getter(v21);
  v15 = v2;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v10 = v3;
  v11 = 0;
  v12 = v21[2];
  v13 = v21[3];
  v14 = v22;
  State.wrappedValue.setter(&v10, v9);
  swift_release(v8);
  swift_bridgeObjectRelease(v5);
}

uint64_t sub_10056D158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v58 = a3;
  v5 = type metadata accessor for SearchResultEntity(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - v9;
  v54 = type metadata accessor for ResultListResultView(0);
  __chkstk_darwin(v54);
  v53 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10004CFD4(&qword_1009EB930);
  __chkstk_darwin(v57);
  v55 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EB988);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v49 - v17;
  v51 = a2;
  v19 = *(_QWORD *)(a2 + 48);
  v20 = swift_retain(v19);
  v56 = v18;
  dispatch thunk of SearchViewModel.alignedPassage(for:)(a1, v20);
  v21 = swift_release(v19);
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v23 = v10;
  v50 = a1;
  v22(v10, a1, v5, v21);
  sub_10000B5E4((uint64_t)v18, (uint64_t)v15, &qword_1009EB988);
  sub_100506A48(a2, (uint64_t)&v59);
  v24 = v52;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v52, a1, v5);
  v25 = *(unsigned __int8 *)(v6 + 80);
  v26 = (v25 + 120) & ~v25;
  v27 = v26 + v7;
  v49 = v26 + v7;
  v28 = v25 | 7;
  v29 = swift_allocObject(&unk_100910868, v27, v25 | 7);
  v30 = v64;
  *(_OWORD *)(v29 + 80) = v63;
  *(_OWORD *)(v29 + 96) = v30;
  *(_QWORD *)(v29 + 112) = v65;
  v31 = v60;
  *(_OWORD *)(v29 + 16) = v59;
  *(_OWORD *)(v29 + 32) = v31;
  v32 = v62;
  *(_OWORD *)(v29 + 48) = v61;
  *(_OWORD *)(v29 + 64) = v32;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v33(v29 + v26, v24, v5);
  v34 = (uint64_t)v53;
  v35 = v23;
  v33((uint64_t)v53, v23, v5);
  v36 = v54;
  sub_100025B3C((uint64_t)v15, v34 + *(int *)(v54 + 20), &qword_1009EB988);
  v37 = (uint64_t (**)())(v34 + *(int *)(v36 + 24));
  *v37 = sub_100572648;
  v37[1] = (uint64_t (*)())v29;
  sub_100506A48(v51, (uint64_t)&v59);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v35, v50, v5);
  v38 = swift_allocObject(&unk_100910890, v49, v28);
  v39 = v64;
  *(_OWORD *)(v38 + 80) = v63;
  *(_OWORD *)(v38 + 96) = v39;
  *(_QWORD *)(v38 + 112) = v65;
  v40 = v60;
  *(_OWORD *)(v38 + 16) = v59;
  *(_OWORD *)(v38 + 32) = v40;
  v41 = v62;
  *(_OWORD *)(v38 + 48) = v61;
  *(_OWORD *)(v38 + 64) = v41;
  v33(v38 + v26, v35, v5);
  v42 = v55;
  sub_10002CD84(v34, v55, type metadata accessor for ResultListResultView);
  v43 = (_QWORD *)(v42 + *(int *)(v57 + 36));
  *v43 = sub_1003E8B78;
  v43[1] = 0;
  v43[2] = sub_100572738;
  v43[3] = v38;
  v44 = sub_10002C8F0(v34, type metadata accessor for ResultListResultView);
  v45 = static Color.clear.getter(v44);
  *(_QWORD *)&v59 = v45;
  swift_retain(v45);
  v46 = AnyView.init<A>(_:)(&v59, &type metadata for Color, &protocol witness table for Color);
  v47 = v58;
  sub_10000B5E4(v42, v58, &qword_1009EB930);
  swift_release(v45);
  *(_QWORD *)(v47 + *(int *)(sub_10004CFD4(&qword_1009EB910) + 36)) = v46;
  sub_100010960(v42, &qword_1009EB930);
  return sub_100010960((uint64_t)v56, &qword_1009EB988);
}

void sub_10056D52C(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v19 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  SearchResultEntity.id.getter(v8);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_BYTE *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_BYTE *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v25 = v9;
  v26 = v10;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  swift_retain(v14);
  swift_bridgeObjectRetain(v11);
  v15 = sub_10004CFD4(&qword_1009EB8F0);
  State.wrappedValue.getter(&v31);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
  v25 = v33;
  v33 = 0x8000000000000000;
  sub_1002C4C3C((uint64_t)v6, isUniquelyReferenced_nonNull_native, v7 + 2.0);
  v17 = v33;
  v33 = v25;
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v19, v18);
  v25 = v9;
  v26 = v10;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  v20 = v31;
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  State.wrappedValue.setter(&v20, v15);
  swift_release(v14);
  swift_bridgeObjectRelease(v11);
}

double sub_10056D6B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v2 = *a1;
  v3 = *(_QWORD *)(a2 + 56);
  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  swift_retain(v8);
  swift_bridgeObjectRetain(v5);
  v9 = sub_10004CFD4(&qword_1009EB8F0);
  State.wrappedValue.getter(&v22);
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  v11 = v22;
  v12 = v23;
  v13 = v24;
  v14 = v2;
  v15 = 0;
  State.wrappedValue.setter(&v11, v9);
  swift_release(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_10056D7A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  int v20;
  unsigned __int8 v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;

  v53 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SearchResultEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EB8E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - v11;
  v13 = *(_QWORD *)(v0 + 48);
  v14 = swift_retain(v13);
  v49 = dispatch thunk of SearchViewModel.searchPage.getter(v14);
  v16 = v15;
  v48 = v17;
  v19 = v18;
  v20 = ~v18;
  v50 = v13;
  swift_release(v13);
  v21 = v19;
  v22 = v51;
  sub_10056EBA4(v49, v16, v48, v21);
  v23 = 0.0;
  if (v20)
  {
    v24 = *(_BYTE *)(v22 + 64);
    v25 = *(_QWORD *)(v22 + 72);
    v26 = *(_QWORD *)(v22 + 80);
    v27 = *(_BYTE *)(v22 + 88);
    v28 = *(_QWORD *)(v22 + 96);
    v62 = *(_QWORD *)(v22 + 56);
    v63 = v24;
    v64 = v25;
    v65 = v26;
    v66 = v27;
    v67 = v28;
    sub_10004CFD4(&qword_1009EB8F0);
    State.wrappedValue.getter(&v54);
    swift_bridgeObjectRelease(v56);
  }
  v29 = v50;
  v30 = swift_retain(v50);
  v31 = dispatch thunk of SearchViewModel.searchResults.getter(v30);
  swift_release(v29);
  sub_100506A48(v22, (uint64_t)&v62);
  v32 = *(_QWORD *)(v31 + 16);
  v33 = swift_bridgeObjectRetain(v31);
  v34 = 0;
  while (1)
  {
    if (v34 == v32)
    {
      v36 = 1;
      v34 = v32;
      goto LABEL_9;
    }
    if (v34 >= *(_QWORD *)(v31 + 16))
      break;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v4 + 16))(v12, v31+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v34, v3, v33);
    v36 = 0;
    ++v34;
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v12, v36, 1, v3, v33);
    sub_100025B3C((uint64_t)v12, (uint64_t)v9, &qword_1009EB8E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      swift_bridgeObjectRelease_n(v31, 2);
      sub_100506A84(&v62);
      v42 = *(_BYTE *)(v51 + 64);
      v43 = *(_QWORD *)(v51 + 72);
      v44 = *(_QWORD *)(v51 + 80);
      v45 = *(_BYTE *)(v51 + 88);
      v46 = *(_QWORD *)(v51 + 96);
      v62 = *(_QWORD *)(v51 + 56);
      v63 = v42;
      v64 = v43;
      v65 = v44;
      v66 = v45;
      v67 = v46;
      sub_10004CFD4(&qword_1009EB8F0);
      State.wrappedValue.getter(&v54);
      swift_bridgeObjectRelease(v56);
      return;
    }
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    SearchResultEntity.id.getter(v37);
    v54 = v68;
    v55 = v69;
    v56 = v70;
    v57 = v71;
    v58 = v72;
    v59 = v73;
    sub_10004CFD4(&qword_1009EB8F0);
    State.wrappedValue.getter(&v60);
    v38 = v61;
    v39 = 3.0;
    if (*(_QWORD *)(v61 + 16))
    {
      v40 = sub_1002BB75C((uint64_t)v2);
      if ((v41 & 1) != 0)
        v39 = *(double *)(*(_QWORD *)(v38 + 56) + 8 * v40);
    }
    v35 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v2, v53, v35);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v23 = v23 + v39;
  }
  __break(1u);
}

void sub_10056DBEC(double *a1@<X8>)
{
  *a1 = GeometryProxy.size.getter();
}

void sub_10056DC14(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_10004CFD4(&qword_1009EB8D8);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  if (qword_1009CE870 != -1)
    swift_once(&qword_1009CE870, sub_10056B474);
  v8 = *(double *)&qword_1009EB750;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = qword_1009CE860;
  swift_retain(v9);
  if (v10 != -1)
    swift_once(&qword_1009CE860, sub_10056B364);
  v11 = qword_1009CE868;
  v12 = (id)qword_1009EB740;
  if (v11 != -1)
    swift_once(&qword_1009CE868, sub_10056B378);
  SearchResultLayoutManager.Configuration.init(width:maximumLines:font:boldFont:)(2, v12, (id)qword_1009EB748, v7 - (v8 + v8));
  v13 = type metadata accessor for SearchResultLayoutManager.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  dispatch thunk of SearchViewModel.layoutManagerConfiguration.setter(v6);
  swift_release(v9);
}

uint64_t sub_10056DD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v4 = sub_10004CFD4(&qword_1009EB8C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EB8B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v11 = sub_10004CFD4(&qword_1009EB990);
  sub_10056DF50(a1, (uint64_t (**)())&v6[*(int *)(v11 + 44)]);
  v13 = static Edge.Set.horizontal.getter(v12);
  if (qword_1009CE870 != -1)
    swift_once(&qword_1009CE870, sub_10056B474);
  v14 = EdgeInsets.init(_all:)(*(double *)&qword_1009EB750);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_10000B5E4((uint64_t)v6, (uint64_t)v9, &qword_1009EB8C0);
  v21 = &v9[*(int *)(v7 + 36)];
  *v21 = v13;
  *((double *)v21 + 1) = v14;
  *((_QWORD *)v21 + 2) = v16;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v20;
  v21[40] = 0;
  v22 = sub_100010960((uint64_t)v6, &qword_1009EB8C0);
  v23 = static Edge.Set.bottom.getter(v22);
  v24 = EdgeInsets.init(_all:)(6.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_10000B5E4((uint64_t)v9, a2, &qword_1009EB8B0);
  v31 = a2 + *(int *)(sub_10004CFD4(&qword_1009EB898) + 36);
  *(_BYTE *)v31 = v23;
  *(double *)(v31 + 8) = v24;
  *(_QWORD *)(v31 + 16) = v26;
  *(_QWORD *)(v31 + 24) = v28;
  *(_QWORD *)(v31 + 32) = v30;
  *(_BYTE *)(v31 + 40) = 0;
  return sub_100010960((uint64_t)v9, &qword_1009EB8B0);
}

double sub_10056DF50@<D0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, __n128);
  __n128 v29;
  double result;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009EB998);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  sub_100506A48(a1, (uint64_t)&v32);
  v11 = swift_allocObject(&unk_1009108B8, 120, 7);
  v12 = v37;
  *(_OWORD *)(v11 + 80) = v36;
  *(_OWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 112) = v38;
  v13 = v33;
  *(_OWORD *)(v11 + 16) = v32;
  *(_OWORD *)(v11 + 32) = v13;
  v14 = v35;
  *(_OWORD *)(v11 + 48) = v34;
  *(_OWORD *)(v11 + 64) = v14;
  v15 = *(_QWORD *)(a1 + 48);
  v16 = swift_retain(v15);
  v17 = dispatch thunk of SearchViewModel.recentSearchTexts.getter(v16);
  swift_release(v15);
  v31 = v17;
  KeyPath = swift_getKeyPath(&unk_10072D808);
  sub_100506A48(a1, (uint64_t)&v32);
  v19 = swift_allocObject(&unk_1009108E0, 120, 7);
  v20 = v37;
  *(_OWORD *)(v19 + 80) = v36;
  *(_OWORD *)(v19 + 96) = v20;
  *(_QWORD *)(v19 + 112) = v38;
  v21 = v33;
  *(_OWORD *)(v19 + 16) = v32;
  *(_OWORD *)(v19 + 32) = v21;
  v22 = v35;
  *(_OWORD *)(v19 + 48) = v34;
  *(_OWORD *)(v19 + 64) = v22;
  v23 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v24 = sub_100030B34(&qword_1009EB9A8, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v25 = sub_1005727D8();
  ForEach<>.init(_:id:content:)(&v31, KeyPath, sub_1005727D0, v19, v23, &type metadata for RecentListItemView, v24, &protocol witness table for String, v25);
  v26 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v26(v7, v10, v4);
  *a2 = sub_10057277C;
  a2[1] = (uint64_t (*)())v11;
  v27 = sub_10004CFD4(&qword_1009EB9B8);
  v26((char *)a2 + *(int *)(v27 + 48), v7, v4);
  v28 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v29 = swift_retain(v11);
  v28(v10, v4, v29);
  ((void (*)(char *, uint64_t))v28)(v7, v4);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_10056E19C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[6];
  uint64_t v13;

  v5 = *a1;
  v4 = a1[1];
  sub_100506A48(a2, (uint64_t)v12);
  v6 = swift_allocObject(&unk_100910908, 136, 7);
  v7 = v12[5];
  *(_OWORD *)(v6 + 80) = v12[4];
  *(_OWORD *)(v6 + 96) = v7;
  v8 = v13;
  v9 = v12[1];
  *(_OWORD *)(v6 + 16) = v12[0];
  *(_OWORD *)(v6 + 32) = v9;
  v10 = v12[3];
  *(_OWORD *)(v6 + 48) = v12[2];
  *(_OWORD *)(v6 + 64) = v10;
  *(_QWORD *)(v6 + 112) = v8;
  *(_QWORD *)(v6 + 120) = v5;
  *(_QWORD *)(v6 + 128) = v4;
  *a3 = v5;
  a3[1] = v4;
  a3[2] = sub_100572860;
  a3[3] = v6;
  return swift_bridgeObjectRetain_n(v4, 2);
}

uint64_t type metadata accessor for PopoverSearchBar.Coordinator()
{
  return objc_opt_self(_TtCV5BooksP33_86D993C5768548B01F8EDC3BAEFB8CB116PopoverSearchBar11Coordinator);
}

uint64_t initializeWithCopy for SearchPopoverView.ResultListHeightInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SearchPopoverView.ResultListHeightInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithTake for SearchPopoverView.ResultListHeightInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchPopoverView.ResultListHeightInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchPopoverView.ResultListHeightInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchPopoverView.ResultListHeightInfo()
{
  return &type metadata for SearchPopoverView.ResultListHeightInfo;
}

double destroy for SearchPopoverView(_QWORD *a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0(a1);
  swift_release(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  *(_QWORD *)&result = swift_release(a1[12]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SearchPopoverView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain(v5);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for SearchPopoverView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1001EAB00((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain(v11);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for SearchPopoverView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v5);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchPopoverView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchPopoverView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchPopoverView()
{
  return &type metadata for SearchPopoverView;
}

uint64_t sub_10056E828(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876E4C, 1);
}

unint64_t sub_10056E840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB838;
  if (!qword_1009EB838)
  {
    v1 = sub_100030B74(&qword_1009EB7E0);
    sub_10056E8AC();
    sub_10056E9FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB838);
  }
  return result;
}

unint64_t sub_10056E8AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB840;
  if (!qword_1009EB840)
  {
    v1 = sub_100030B74(&qword_1009EB800);
    sub_10056E930();
    sub_100030B34(&qword_1009EB858, &qword_1009EB860, (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB840);
  }
  return result;
}

unint64_t sub_10056E930()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009EB848;
  if (!qword_1009EB848)
  {
    v1 = sub_100030B74(&qword_1009EB7F8);
    v2[0] = sub_100030B74(&qword_1009EB7E8);
    v2[1] = type metadata accessor for PlainListStyle(255);
    v2[2] = sub_100030B34(&qword_1009EB850, &qword_1009EB7E8, (uint64_t)&protocol conformance descriptor for List<A, B>);
    v2[3] = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB848);
  }
  return result;
}

unint64_t sub_10056E9FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB868;
  if (!qword_1009EB868)
  {
    v1 = sub_100030B74(&qword_1009EB7C8);
    sub_100030B34((unint64_t *)&unk_1009EB870, &qword_1009EB7C0, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB868);
  }
  return result;
}

uint64_t sub_10056EA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10056DD80(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10056EAA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB8A0;
  if (!qword_1009EB8A0)
  {
    v1 = sub_100030B74(&qword_1009EB898);
    sub_10056EB0C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB8A0);
  }
  return result;
}

unint64_t sub_10056EB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB8A8;
  if (!qword_1009EB8A8)
  {
    v1 = sub_100030B74(&qword_1009EB8B0);
    sub_100030B34(&qword_1009EB8B8, &qword_1009EB8C0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB8A8);
  }
  return result;
}

double sub_10056EB90@<D0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10056C944(*(_QWORD *)(v1 + 16), a1);
}

void sub_10056EB9C(double *a1)
{
  uint64_t v1;

  sub_10056DC14(a1, v1 + 16);
}

uint64_t sub_10056EBA4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_10056EBBC(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_10056EBBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  else
    return swift_bridgeObjectRelease(a3);
}

uint64_t sub_10056EBC8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)(uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 aBlock;
  uint64_t (*v60)(uint64_t);
  void *v61;
  uint64_t (*v62)();
  uint64_t v63;
  _QWORD v64[2];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  __chkstk_darwin(v4);
  v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PopoverSearchBar(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EBC98);
  UIViewRepresentableContext.coordinator.getter(&aBlock, v13);
  v14 = (char *)aBlock;
  sub_10002CD84(v1, (uint64_t)v12, type metadata accessor for PopoverSearchBar);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v52 = v16 + v11;
  v53 = v15 | 7;
  v17 = swift_allocObject(&unk_100910BB0, v16 + v11, v15 | 7);
  sub_1005741B4((uint64_t)v12, v17 + v16);
  v18 = (uint64_t (**)(uint64_t, uint64_t))&v14[OBJC_IVAR____TtCV5BooksP33_86D993C5768548B01F8EDC3BAEFB8CB116PopoverSearchBar11Coordinator_textDidChange];
  v19 = *(_QWORD *)&v14[OBJC_IVAR____TtCV5BooksP33_86D993C5768548B01F8EDC3BAEFB8CB116PopoverSearchBar11Coordinator_textDidChange
                      + 8];
  *v18 = sub_1005741F8;
  v18[1] = (uint64_t (*)(uint64_t, uint64_t))v17;

  swift_release(v19);
  UIViewRepresentableContext.coordinator.getter(&aBlock, v13);
  v20 = (void *)aBlock;
  v21 = *(_QWORD *)(v2 + 72);
  v22 = (_QWORD *)(aBlock
                 + OBJC_IVAR____TtCV5BooksP33_86D993C5768548B01F8EDC3BAEFB8CB116PopoverSearchBar11Coordinator_searchButtonClicked);
  v23 = *(_QWORD *)(aBlock
                  + OBJC_IVAR____TtCV5BooksP33_86D993C5768548B01F8EDC3BAEFB8CB116PopoverSearchBar11Coordinator_searchButtonClicked
                  + 8);
  *v22 = *(_QWORD *)(v2 + 64);
  v22[1] = v21;
  swift_retain(v21);

  swift_release(v23);
  v24 = *(uint64_t (**)(uint64_t))(v2 + 16);
  v25 = *(void **)(v2 + 24);
  aBlock = *(_OWORD *)v2;
  v60 = v24;
  v61 = v25;
  v26 = sub_10004CFD4(&qword_1009EBCA0);
  Binding.wrappedValue.getter(v64, v26);
  v27 = v64[1];
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setText:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v29 = objc_msgSend(a1, "searchTextField");
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setPlaceholder:", v30);

  v31 = *(_QWORD *)(v2 + 40);
  swift_retain(v31);
  LOBYTE(v29) = dispatch thunk of SearchBarResponderState.becomeFirstResponder.getter(v32);
  *(_QWORD *)&v33 = swift_release(v31).n128_u64[0];
  if ((v29 & 1) != 0)
    objc_msgSend(a1, "becomeFirstResponder", v33);
  swift_retain(v31);
  v35 = dispatch thunk of SearchBarResponderState.resignFirstResponder.getter(v34);
  *(_QWORD *)&v36 = swift_release(v31).n128_u64[0];
  if ((v35 & 1) != 0)
    objc_msgSend(a1, "resignFirstResponder", v36);
  v37 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v38 = (void *)static OS_dispatch_queue.main.getter(v37);
  sub_10002CD84(v2, (uint64_t)v12, type metadata accessor for PopoverSearchBar);
  v39 = (v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_100910BD8, v39 + 8, v53);
  sub_1005741B4((uint64_t)v12, v40 + v16);
  *(_QWORD *)(v40 + v39) = a1;
  v62 = sub_100574338;
  v63 = v40;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v60 = sub_1000147F0;
  v61 = &unk_100910BF0;
  v41 = _Block_copy(&aBlock);
  v42 = v63;
  v43 = a1;
  swift_release(v42);
  static DispatchQoS.unspecified.getter(v44);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v45 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v47 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v48 = v56;
  v49 = v58;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v46, v47, v58, v45);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v48, v41);
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v8, v55);
}

uint64_t sub_10056F008(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *((_QWORD *)a3 + 2);
  v4 = *((_QWORD *)a3 + 3);
  v8 = *a3;
  v9 = v3;
  v10 = v4;
  v7[0] = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain(a2);
  v5 = sub_10004CFD4(&qword_1009EBCA0);
  return Binding.wrappedValue.setter(v7, v5);
}

uint64_t sub_10056F060(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = swift_retain(v3);
  v5 = dispatch thunk of SearchBarResponderState.becomeFirstResponder.getter(v4);
  swift_release(v3);
  if ((v5 & 1) != 0)
  {
    swift_retain(v3);
    dispatch thunk of SearchBarResponderState.becomeFirstResponder.setter(0);
    swift_release(v3);
  }
  v6 = swift_retain(v3);
  v7 = dispatch thunk of SearchBarResponderState.resignFirstResponder.getter(v6);
  swift_release(v3);
  if ((v7 & 1) != 0)
  {
    swift_retain(v3);
    dispatch thunk of SearchBarResponderState.resignFirstResponder.setter(0);
    swift_release(v3);
  }
  v8 = objc_msgSend(a2, "isFirstResponder");
  v9 = swift_retain(v3);
  v10 = dispatch thunk of SearchBarResponderState.isFirstResponder.getter(v9) & 1;
  result = swift_release(v3);
  if (v8 != v10)
  {
    swift_retain(v3);
    dispatch thunk of SearchBarResponderState.isFirstResponder.setter(objc_msgSend(a2, "isFirstResponder"));
    return swift_release(v3);
  }
  return result;
}

id sub_10056F15C()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UISearchBar), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = sub_10004CFD4(&qword_1009EBC98);
  UIViewRepresentableContext.coordinator.getter(&v4, v1);
  v2 = v4;
  objc_msgSend(v0, "setDelegate:", v4);

  objc_msgSend(v0, "setSearchBarStyle:", 2);
  return v0;
}

id sub_10056F1F8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PopoverSearchBar.Coordinator()), "init");
  *a1 = result;
  return result;
}

uint64_t sub_10056F230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008DB0(&qword_1009EBCA8, type metadata accessor for PopoverSearchBar, (uint64_t)&unk_10072D998);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10056F298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008DB0(&qword_1009EBCA8, type metadata accessor for PopoverSearchBar, (uint64_t)&unk_10072D998);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10056F300(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009EBCA8, type metadata accessor for PopoverSearchBar, (uint64_t)&unk_10072D998);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_10056F33C()
{
  qword_1009EB758 = 0x4008000000000000;
}

double sub_10056F34C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  __n128 v56;
  double result;
  uint64_t *v58;
  unint64_t v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v63 = a1;
  v64 = a2;
  v58 = a3;
  v3 = type metadata accessor for PlainButtonStyle(0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D8460);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  __chkstk_darwin(v5);
  v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_10004CFD4((uint64_t *)&unk_1009EBC40);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v73 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v71 = (char *)&v58 - v9;
  if (qword_1009CE770 != -1)
    swift_once(&qword_1009CE770, sub_100506B28);
  v10 = unk_100A1EB70;
  v75 = qword_100A1EB68;
  v76 = unk_100A1EB70;
  v11 = sub_1001F2108();
  v12 = swift_bridgeObjectRetain(v10);
  v59 = v11;
  v13 = Text.init<A>(_:)(&v75, &type metadata for String, v11, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Font.body.getter(v13);
  v21 = Text.font(_:)(v20, v13, v15, v19, v17);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_release(v20);
  v28 = v25 & 1;
  sub_1001F5B28(v13, v15, v19);
  swift_bridgeObjectRelease(v17);
  v29 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v30 = Text.foregroundColor(_:)(v29, v21, v23, v28, v27);
  v61 = v31;
  v62 = v32;
  v34 = v33;
  swift_release(v29);
  sub_1001F5B28(v21, v23, v28);
  swift_bridgeObjectRelease(v27);
  KeyPath = swift_getKeyPath(&unk_10072DBB8);
  if (qword_1009CE778 != -1)
    swift_once(&qword_1009CE778, sub_100506CFC);
  v35 = v34 & 1;
  v75 = qword_100A1EB78;
  v76 = unk_100A1EB80;
  swift_bridgeObjectRetain(unk_100A1EB80);
  v36 = v64;
  swift_retain(v64);
  v37 = v65;
  v38 = Button<>.init<A>(_:action:)(&v75, v63, v36, &type metadata for String, v59);
  v39 = v68;
  PlainButtonStyle.init()(v38);
  v40 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  v41 = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v42 = v73;
  v43 = v67;
  v44 = v70;
  View.buttonStyle<A>(_:)(v39, v67, v70, v40, v41);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v44);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v43);
  v46 = v71;
  v45 = v72;
  v47 = v74;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v42, v74);
  v48 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v48(v42, v46, v47);
  v49 = v58;
  *v58 = v30;
  v70 = v30;
  v51 = v61;
  v50 = v62;
  v49[1] = v61;
  *((_BYTE *)v49 + 16) = v34 & 1;
  v52 = KeyPath;
  v49[3] = v50;
  v49[4] = v52;
  v49[5] = 1;
  *((_BYTE *)v49 + 48) = 0;
  v49[7] = 0x4020000000000000;
  *((_BYTE *)v49 + 64) = 0;
  v53 = sub_10004CFD4(&qword_1009EBC50);
  v48((char *)v49 + *(int *)(v53 + 64), v42, v47);
  v54 = v70;
  LOBYTE(v48) = v35;
  sub_1001F596C(v70, v51, v35);
  v55 = *(void (**)(char *, uint64_t, __n128))(v45 + 8);
  swift_bridgeObjectRetain(v50);
  v56 = swift_retain(v52);
  v55(v46, v47, v56);
  ((void (*)(char *, uint64_t))v55)(v42, v47);
  sub_1001F5B28(v54, v51, (char)v48);
  swift_release(v52);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v50).n128_u64[0];
  return result;
}

uint64_t sub_10056F780@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = sub_10004CFD4(&qword_1009EBC28);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  *(_QWORD *)v6 = static VerticalAlignment.firstTextBaseline.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v9 = sub_10004CFD4(&qword_1009EBC30);
  sub_10056F34C(v8, v7, (uint64_t *)&v6[*(int *)(v9 + 44)]);
  v11 = static Edge.Set.vertical.getter(v10);
  if (qword_1009CE878 != -1)
    swift_once(&qword_1009CE878, sub_10056F33C);
  v12 = EdgeInsets.init(_all:)(*(double *)&qword_1009EB758);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10000B5E4((uint64_t)v6, a1, &qword_1009EBC28);
  v19 = a1 + *(int *)(sub_10004CFD4(&qword_1009EBC38) + 36);
  *(_BYTE *)v19 = v11;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_100010960((uint64_t)v6, &qword_1009EBC28);
}

void sub_10056F8B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  uint64_t v20;
  double v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];
  _BYTE v43[208];
  char v44;
  _BYTE v45[7];
  _BYTE v46[7];

  *(_OWORD *)a5 = xmmword_10072D6D0;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  LOBYTE(v31) = 0;
  swift_retain(a4);
  State.init(wrappedValue:)(v43, &v31, &type metadata for Bool);
  v8 = *(_QWORD *)&v43[8];
  *(_BYTE *)(a5 + 32) = v43[0];
  *(_QWORD *)(a5 + 40) = v8;
  type metadata accessor for CGRect(0);
  v31 = 0u;
  v32 = 0u;
  State.init(wrappedValue:)(v43, &v31, v9);
  v10 = *(_QWORD *)&v43[32];
  v11 = *(_OWORD *)&v43[16];
  *(_OWORD *)(a5 + 48) = *(_OWORD *)v43;
  *(_OWORD *)(a5 + 64) = v11;
  *(_QWORD *)(a5 + 80) = v10;
  v12 = sub_10004CFD4(&qword_1009EBC20);
  v13 = (_QWORD *)(a5 + *(int *)(v12 + 52));
  *v13 = swift_getKeyPath(&unk_10072D850);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v13, v14, 0);
  v15 = *(int *)(v12 + 56);
  v17 = static VerticalAlignment.firstTextBaseline.getter(v16);
  v18 = sub_10056FB0C(a1, a2, (uint64_t)&v31);
  *(_OWORD *)&v43[151] = v40;
  *(_OWORD *)&v43[167] = v41;
  *(_OWORD *)&v43[183] = v42[0];
  *(_OWORD *)&v43[192] = *(_OWORD *)((char *)v42 + 9);
  *(_OWORD *)&v43[87] = v36;
  *(_OWORD *)&v43[103] = v37;
  *(_OWORD *)&v43[119] = v38;
  *(_OWORD *)&v43[135] = v39;
  *(_OWORD *)&v43[23] = v32;
  *(_OWORD *)&v43[39] = v33;
  *(_OWORD *)&v43[55] = v34;
  *(_OWORD *)&v43[71] = v35;
  v44 = 0;
  *(_OWORD *)&v43[7] = v31;
  v19 = static Edge.Set.vertical.getter(v18);
  if (qword_1009CE878 != -1)
    swift_once(&qword_1009CE878, sub_10056F33C);
  v20 = a5 + v15;
  v21 = EdgeInsets.init(_all:)(*(double *)&qword_1009EB758);
  v22 = *(_OWORD *)&v43[128];
  *(_OWORD *)(v20 + 161) = *(_OWORD *)&v43[144];
  v23 = *(_OWORD *)&v43[176];
  *(_OWORD *)(v20 + 177) = *(_OWORD *)&v43[160];
  *(_OWORD *)(v20 + 193) = v23;
  *(_OWORD *)(v20 + 209) = *(_OWORD *)&v43[192];
  v24 = *(_OWORD *)&v43[64];
  *(_OWORD *)(v20 + 97) = *(_OWORD *)&v43[80];
  v25 = *(_OWORD *)&v43[112];
  *(_OWORD *)(v20 + 113) = *(_OWORD *)&v43[96];
  *(_OWORD *)(v20 + 129) = v25;
  *(_OWORD *)(v20 + 145) = v22;
  v26 = *(_OWORD *)v43;
  *(_OWORD *)(v20 + 33) = *(_OWORD *)&v43[16];
  v27 = *(_OWORD *)&v43[48];
  *(_OWORD *)(v20 + 49) = *(_OWORD *)&v43[32];
  *(_OWORD *)(v20 + 65) = v27;
  *(_OWORD *)(v20 + 81) = v24;
  *(_QWORD *)v20 = v17;
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 0;
  *(_OWORD *)(v20 + 17) = v26;
  *(_DWORD *)(v20 + 225) = *(_DWORD *)v46;
  *(_DWORD *)(v20 + 228) = *(_DWORD *)&v46[3];
  *(_BYTE *)(v20 + 232) = v19;
  *(_DWORD *)(v20 + 233) = *(_DWORD *)v45;
  *(_DWORD *)(v20 + 236) = *(_DWORD *)&v45[3];
  *(double *)(v20 + 240) = v21;
  *(_QWORD *)(v20 + 248) = v28;
  *(_QWORD *)(v20 + 256) = v29;
  *(_QWORD *)(v20 + 264) = v30;
  *(_BYTE *)(v20 + 272) = 0;
}

uint64_t *sub_10056FB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _BYTE v74[7];
  _BYTE v75[7];
  char v76;
  _BYTE v77[7];
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  char v88;
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _BYTE v100[7];
  uint64_t v101;
  char v102;
  _BYTE v103[7];
  uint64_t v104;
  uint64_t v105;
  char v106;
  _BYTE v107[7];
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;

  v56 = Image.init(systemName:)(0x697966696E67616DLL, 0xEF7373616C67676ELL);
  v55 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  KeyPath = swift_getKeyPath(&unk_10072DC18);
  v6 = static Font.callout.getter();
  static Font.Weight.medium.getter(v6);
  v59 = Font.weight(_:)(v6);
  swift_release(v6);
  v58 = swift_getKeyPath(&unk_10072DC48);
  v7 = static Alignment.center.getter(v58);
  v9 = _FrameLayout.init(width:height:alignment:)(&v67, 0x4030000000000000, 0, 0, 1, v7, v8);
  v57 = v67;
  v10 = v68;
  v60 = v69;
  v11 = v70;
  v62 = v72;
  v63 = v71;
  v61 = static Edge.Set.trailing.getter(v9);
  v12 = EdgeInsets.init(_all:)(4.0);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v78 = v10;
  v76 = v11;
  v73 = 0;
  v93 = a1;
  v94 = a2;
  v19 = sub_1001F2108();
  v20 = swift_bridgeObjectRetain(a2);
  v21 = Text.init<A>(_:)(&v93, &type metadata for String, v19, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  v28 = static Font.body.getter(v21);
  static Font.Weight.medium.getter(v28);
  v29 = Font.weight(_:)(v28);
  swift_release(v28);
  v30 = Text.font(_:)(v29, v21, v23, v27, v25);
  v32 = v31;
  LOBYTE(v28) = v33;
  v35 = v34;
  swift_release(v29);
  LOBYTE(v29) = v28 & 1;
  sub_1001F5B28(v21, v23, v27);
  swift_bridgeObjectRelease(v25);
  v37 = static Color.primary.getter(v36);
  v38 = Text.foregroundColor(_:)(v37, v30, v32, v28 & 1, v35);
  v40 = v39;
  LOBYTE(v23) = v41;
  v53 = v42;
  swift_release(v37);
  LOBYTE(v37) = v23 & 1;
  sub_1001F5B28(v30, v32, v29);
  swift_bridgeObjectRelease(v35);
  v43 = swift_getKeyPath(&unk_10072DBB8);
  LODWORD(v66) = *(_DWORD *)v77;
  *(_DWORD *)((char *)&v66 + 3) = *(_DWORD *)&v77[3];
  LODWORD(v65) = *(_DWORD *)v75;
  *(_DWORD *)((char *)&v65 + 3) = *(_DWORD *)&v75[3];
  LODWORD(v64) = *(_DWORD *)v74;
  *(_DWORD *)((char *)&v64 + 3) = *(_DWORD *)&v74[3];
  DWORD1(v82) = *(_DWORD *)&v77[3];
  v51 = v78;
  v52 = v76;
  *(_DWORD *)((char *)&v82 + 1) = *(_DWORD *)v77;
  DWORD1(v83) = *(_DWORD *)&v75[3];
  LOBYTE(v30) = v73;
  *(_QWORD *)&v79 = v56;
  *((_QWORD *)&v79 + 1) = KeyPath;
  *(_QWORD *)&v80 = v55;
  *((_QWORD *)&v80 + 1) = v58;
  *(_QWORD *)&v81 = v59;
  *((_QWORD *)&v81 + 1) = v57;
  LOBYTE(v82) = v78;
  *((_QWORD *)&v82 + 1) = v60;
  LOBYTE(v83) = v76;
  *(_DWORD *)((char *)&v83 + 1) = *(_DWORD *)v75;
  *((_QWORD *)&v83 + 1) = v63;
  *(_QWORD *)&v84 = v62;
  BYTE8(v84) = v61;
  HIDWORD(v84) = *(_DWORD *)&v74[3];
  *(_DWORD *)((char *)&v84 + 9) = *(_DWORD *)v74;
  *(double *)&v85 = v12;
  *((_QWORD *)&v85 + 1) = v14;
  *(_QWORD *)&v86 = v16;
  *((_QWORD *)&v86 + 1) = v18;
  v87 = v73;
  v44 = v84;
  v45 = v85;
  v46 = v86;
  *(_BYTE *)(a3 + 128) = v73;
  *(_OWORD *)(a3 + 96) = v45;
  *(_OWORD *)(a3 + 112) = v46;
  v47 = v79;
  v48 = v82;
  *(_OWORD *)(a3 + 64) = v83;
  *(_OWORD *)(a3 + 80) = v44;
  v49 = v80;
  *(_OWORD *)(a3 + 32) = v81;
  *(_OWORD *)(a3 + 48) = v48;
  *(_OWORD *)a3 = v47;
  *(_OWORD *)(a3 + 16) = v49;
  v92 = v37;
  v90 = 0;
  v88 = 1;
  *(_DWORD *)(a3 + 153) = *(_DWORD *)v91;
  *(_DWORD *)(a3 + 156) = *(_DWORD *)&v91[3];
  *(_DWORD *)(a3 + 185) = *(_DWORD *)v89;
  *(_DWORD *)(a3 + 188) = *(_DWORD *)&v89[3];
  *(_QWORD *)(a3 + 136) = v38;
  *(_QWORD *)(a3 + 144) = v40;
  *(_BYTE *)(a3 + 152) = v37;
  *(_QWORD *)(a3 + 160) = v53;
  *(_QWORD *)(a3 + 168) = v43;
  *(_QWORD *)(a3 + 176) = 1;
  *(_BYTE *)(a3 + 184) = 0;
  *(_QWORD *)(a3 + 192) = 0;
  *(_BYTE *)(a3 + 200) = 1;
  sub_100573F9C((uint64_t *)&v79);
  sub_1001F596C(v38, v40, v37);
  swift_bridgeObjectRetain(v53);
  swift_retain(v43);
  sub_1001F5B28(v38, v40, v37);
  swift_release(v43);
  swift_bridgeObjectRelease(v53);
  v93 = v56;
  v94 = KeyPath;
  v95 = v55;
  v96 = v58;
  v97 = v59;
  v98 = v57;
  v99 = v51;
  *(_DWORD *)v100 = v66;
  *(_DWORD *)&v100[3] = *(_DWORD *)((char *)&v66 + 3);
  v101 = v60;
  v102 = v52;
  *(_DWORD *)v103 = v65;
  *(_DWORD *)&v103[3] = *(_DWORD *)((char *)&v65 + 3);
  v104 = v63;
  v105 = v62;
  v106 = v61;
  *(_DWORD *)&v107[3] = *(_DWORD *)((char *)&v64 + 3);
  *(_DWORD *)v107 = v64;
  v108 = v12;
  v109 = v14;
  v110 = v16;
  v111 = v18;
  v112 = v30;
  return sub_100573FFC(&v93);
}

void sub_10056FF70(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_10056F8B4(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_10056FF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;

  v133 = a2;
  v140 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v140);
  v144 = (uint64_t *)((char *)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v143 = type metadata accessor for Image.Scale(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v137 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10004CFD4(&qword_1009EBC70);
  __chkstk_darwin(v139);
  v132 = (uint64_t)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v141 = (char *)&v130 - v7;
  __chkstk_darwin(v8);
  v145 = (uint64_t)&v130 - v9;
  v10 = Image.init(systemName:)(0x69616C702E636F64, 0xED0000747865746ELL);
  v11 = Text.init(_:)(v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v19 = Text.foregroundColor(_:)(v18, v11, v13, v17, v15);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v18);
  v26 = v23 & 1;
  sub_1001F5B28(v11, v13, v17);
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v15).n128_u64[0];
  v28 = static Text.+ infix(_:_:)(v19, v21, v26, v25, 32, 0xE100000000000000, 0, _swiftEmptyArrayStorage, v27);
  v30 = v29;
  LODWORD(v135) = v31;
  v33 = v32;
  sub_1001F5B28(v19, v21, v26);
  swift_bridgeObjectRelease(v25);
  v34 = *(_QWORD *)a1;
  v35 = *(_QWORD *)(a1 + 8);
  v36 = *(unsigned __int8 *)(a1 + 24);
  v131 = *(_QWORD *)a1;
  v138 = v36;
  v136 = v30;
  if (v36 == 1)
  {
    v35 = sub_100507A8C(v34, v35);
    v38 = v37;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(a1 + 16);
  if (v38)
  {
    v150 = v35;
    v151 = v38;
    v39 = sub_1001F15BC();
    swift_bridgeObjectRetain(v38);
    if ((Collection.isNotEmpty.getter(&type metadata for String, v39) & 1) != 0)
      goto LABEL_7;
    sub_10056EBBC(v34, v35, v38, 0);
  }
  v150 = v34;
  v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v42 = v41;
  v35 = sub_100507A8C(v40, v41);
  v38 = v43;
  swift_bridgeObjectRelease(v42);
LABEL_7:
  v44 = v135;
  v150 = v35;
  v151 = v38;
  v130 = sub_1001F2108();
  v46 = Text.init<A>(_:)(&v150, &type metadata for String, v130, v45);
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  v53 = v44 & 1;
  v54 = v136;
  v134 = static Text.+ infix(_:_:)(v28, v136, v44 & 1, v33, v46, v47, v52, v49, v55);
  v56 = v33;
  v58 = v57;
  v135 = v59;
  v61 = v60 & 1;
  sub_1001F5B28(v46, v48, v52);
  swift_bridgeObjectRelease(v50);
  sub_1001F5B28(v28, v54, v53);
  v62 = swift_bridgeObjectRelease(v56);
  v63 = static Font.headline.getter(v62);
  v64 = v134;
  v65 = v135;
  v66 = Text.font(_:)(v63, v134, v58, v61, v135);
  v68 = v67;
  LOBYTE(v52) = v69;
  v71 = v70;
  swift_release(v63);
  v72 = v52 & 1;
  sub_1001F5B28(v64, v58, v61);
  swift_bridgeObjectRelease(v65);
  v74 = static Color.primary.getter(v73);
  v75 = Text.foregroundColor(_:)(v74, v66, v68, v72, v71);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  swift_release(v74);
  v79 &= 1u;
  sub_1001F5B28(v66, v68, v72);
  swift_bridgeObjectRelease(v71);
  KeyPath = swift_getKeyPath(&unk_10072DBB8);
  v83 = v142;
  v84 = v137;
  v85 = v143;
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v137, enum case for Image.Scale.small(_:), v143);
  v86 = swift_getKeyPath(&unk_10072DC78);
  v87 = v144;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)v144 + *(int *)(v140 + 28), v84, v85);
  *v87 = v86;
  v88 = (uint64_t)v141;
  sub_10000B5E4((uint64_t)v87, (uint64_t)&v141[*(int *)(v139 + 36)], &qword_1009D38F8);
  *(_QWORD *)v88 = v75;
  *(_QWORD *)(v88 + 8) = v77;
  *(_BYTE *)(v88 + 16) = v79;
  *(_QWORD *)(v88 + 24) = v81;
  *(_QWORD *)(v88 + 32) = KeyPath;
  *(_QWORD *)(v88 + 40) = 2;
  *(_BYTE *)(v88 + 48) = 0;
  swift_bridgeObjectRetain(v81);
  swift_retain(KeyPath);
  sub_1001F596C(v75, v77, v79);
  sub_100010960((uint64_t)v87, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
  sub_1001F5B28(v75, v77, v79);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v81);
  sub_100025B3C(v88, v145, &qword_1009EBC70);
  if (v138)
  {
    v146 = xmmword_100720B80;
    v147 = 0u;
    v148 = 0u;
    v149 = 1;
    v89 = sub_10004CFD4(&qword_1009EBC78);
    v90 = sub_100030B34(&qword_1009EBC80, &qword_1009EBC78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v146, v89, &type metadata for Spacer, v90, &protocol witness table for Spacer);
  }
  else
  {
    v150 = v131;
    v150 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v151 = v91;
    v93 = Text.init<A>(_:)(&v150, &type metadata for String, v130, v92);
    v95 = v94;
    v97 = v96;
    v99 = v98 & 1;
    v100 = static Font.body.getter(v93);
    v101 = Text.font(_:)(v100, v93, v95, v99, v97);
    v103 = v102;
    v105 = v104;
    v107 = v106;
    swift_release(v100);
    LOBYTE(v100) = v105 & 1;
    sub_1001F5B28(v93, v95, v99);
    swift_bridgeObjectRelease(v97);
    v108 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
    v109 = Text.foregroundColor(_:)(v108, v101, v103, v105 & 1, v107);
    v111 = v110;
    v113 = v112;
    v115 = v114;
    swift_release(v108);
    sub_1001F5B28(v101, v103, v100);
    swift_bridgeObjectRelease(v107);
    sub_1001F596C(v109, v111, v113 & 1);
    swift_bridgeObjectRetain(v115);
    sub_1001F596C(v109, v111, v113 & 1);
    swift_bridgeObjectRetain(v115);
    sub_1001F5B28(v109, v111, v113 & 1);
    swift_bridgeObjectRelease(v115);
    v146 = xmmword_10072D6E0;
    *(_QWORD *)&v147 = v109;
    *((_QWORD *)&v147 + 1) = v111;
    *(_QWORD *)&v148 = v113 & 1;
    *((_QWORD *)&v148 + 1) = v115;
    v149 = 0;
    v116 = sub_10004CFD4(&qword_1009EBC78);
    v117 = sub_100030B34(&qword_1009EBC80, &qword_1009EBC78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v146, v116, &type metadata for Spacer, v117, &protocol witness table for Spacer);
    sub_1001F5B28(v109, v111, v113 & 1);
    swift_bridgeObjectRelease(v115);
  }
  v118 = v151;
  v144 = (uint64_t *)v150;
  v119 = v152;
  v120 = v153;
  v121 = v154;
  v122 = v155;
  v123 = v156;
  v124 = v133;
  v125 = v132;
  v126 = v145;
  sub_10000B5E4(v145, v132, &qword_1009EBC70);
  sub_10000B5E4(v125, v124, &qword_1009EBC70);
  v127 = v124 + *(int *)(sub_10004CFD4((uint64_t *)&unk_1009EBC88) + 48);
  v128 = (uint64_t)v144;
  *(_QWORD *)v127 = v144;
  *(_QWORD *)(v127 + 8) = v118;
  *(_QWORD *)(v127 + 16) = v119;
  *(_QWORD *)(v127 + 24) = v120;
  *(_QWORD *)(v127 + 32) = v121;
  *(_QWORD *)(v127 + 40) = v122;
  *(_BYTE *)(v127 + 48) = v123;
  sub_100574064(v128, v118, v119, v120, v121, v122, v123);
  sub_100010960(v126, &qword_1009EBC70);
  sub_1005740A0(v128, v118, v119, v120, v121, v122, v123);
  return sub_100010960(v125, &qword_1009EBC70);
}

uint64_t sub_100570834@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  _OWORD v8[3];

  v2 = v1[2];
  v8[1] = v1[1];
  v8[2] = v2;
  v8[0] = *v1;
  v3 = *((_QWORD *)&v2 + 1);
  *a1 = v2;
  v4 = (char *)a1 + *(int *)(sub_10004CFD4(&qword_1009EBC58) + 36);
  *(_QWORD *)&v5 = swift_retain(v3).n128_u64[0];
  *(_QWORD *)v4 = static VerticalAlignment.firstTextBaseline.getter(v5);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009EBC60);
  return sub_10056FF7C((uint64_t)v8, (uint64_t)&v4[*(int *)(v6 + 44)]);
}

uint64_t sub_1005708B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _DWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  unsigned __int8 v61;
  __int128 v62;
  _OWORD v63[9];
  _QWORD v64[2];
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _BYTE v73[31];
  _OWORD v74[8];
  uint64_t v75;
  _OWORD v76[9];
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _OWORD v85[3];

  v2 = sub_10004CFD4((uint64_t *)&unk_1009EBB40);
  __chkstk_darwin(v2);
  v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v49 - v11;
  v58 = static VerticalAlignment.firstTextBaseline.getter(v10);
  sub_100570CF8((uint64_t)v74);
  *(_OWORD *)((char *)&v76[6] + 7) = v74[6];
  *(_OWORD *)((char *)&v76[5] + 7) = v74[5];
  *(_OWORD *)((char *)&v76[2] + 7) = v74[2];
  *(_OWORD *)((char *)&v76[1] + 7) = v74[1];
  *(_OWORD *)((char *)&v76[7] + 7) = v74[7];
  *(_OWORD *)((char *)&v76[3] + 7) = v74[3];
  v77 = 0;
  *(_QWORD *)((char *)&v76[8] + 7) = v75;
  *(_OWORD *)((char *)&v76[4] + 7) = v74[4];
  *(_OWORD *)((char *)v76 + 7) = v74[0];
  v57 = 0;
  v84 = v76[6];
  v85[0] = v76[7];
  *(_OWORD *)((char *)v85 + 15) = *(_OWORD *)((char *)&v76[7] + 15);
  v80 = v76[2];
  v81 = v76[3];
  v82 = v76[4];
  v83 = v76[5];
  v78 = v76[0];
  v79 = v76[1];
  sub_100571044((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v4, (uint64_t *)&unk_1009EBB40);
    v59 = 0.0;
    v60 = 0;
    v55 = 0;
    v56 = 0;
    v13 = 0;
    v53 = 0;
    KeyPath = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v51 = 0;
    v52 = 0;
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
    v18 = Text.init(_:)(v8);
    v20 = v19;
    v22 = v21;
    v24 = v23 & 1;
    v25 = static Color.primary.getter(v18);
    v60 = Text.foregroundColor(_:)(v25, v18, v20, v24, v22);
    v55 = v27;
    v56 = v26;
    LODWORD(v51) = v28;
    swift_release(v25);
    sub_1001F5B28(v18, v20, v24);
    swift_bridgeObjectRelease(v22);
    KeyPath = swift_getKeyPath(&unk_10072DBB8);
    LOBYTE(v18) = static Edge.Set.top.getter(KeyPath);
    v59 = EdgeInsets.init(_all:)(3.0);
    v52 = v30;
    v53 = v29;
    LOBYTE(v64[0]) = v51 & 1;
    LOBYTE(v62) = 0;
    v61 = 0;
    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    v51 = v32;
    v31(v12, v5);
    v13 = LOBYTE(v64[0]);
    v15 = v62;
    v16 = v18;
    v14 = 2;
    v17 = v61;
  }
  *(_OWORD *)((char *)&v63[6] + 1) = v84;
  *(_OWORD *)((char *)&v63[5] + 1) = v83;
  *(_OWORD *)((char *)&v63[2] + 1) = v80;
  *(_OWORD *)((char *)&v63[1] + 1) = v79;
  *(_OWORD *)((char *)&v63[7] + 1) = v85[0];
  v63[8] = *(_OWORD *)((char *)v85 + 15);
  *(_OWORD *)((char *)&v63[3] + 1) = v81;
  v62 = (unint64_t)v58;
  LOBYTE(v63[0]) = v57;
  *(_OWORD *)((char *)&v63[4] + 1) = v82;
  *(_OWORD *)((char *)v63 + 1) = v78;
  v33 = v63[6];
  *(_OWORD *)(a1 + 96) = v63[5];
  *(_OWORD *)(a1 + 112) = v33;
  v34 = v63[8];
  *(_OWORD *)(a1 + 128) = v63[7];
  *(_OWORD *)(a1 + 144) = v34;
  v35 = v63[2];
  *(_OWORD *)(a1 + 32) = v63[1];
  *(_OWORD *)(a1 + 48) = v35;
  v36 = v63[4];
  *(_OWORD *)(a1 + 64) = v63[3];
  *(_OWORD *)(a1 + 80) = v36;
  v37 = v63[0];
  *(_OWORD *)a1 = v62;
  *(_OWORD *)(a1 + 16) = v37;
  v38 = v59;
  v39 = v56;
  *(_QWORD *)(a1 + 160) = v60;
  *(_QWORD *)(a1 + 168) = v39;
  v40 = v55;
  *(_QWORD *)(a1 + 176) = v13;
  *(_QWORD *)(a1 + 184) = v40;
  v41 = v53;
  *(_QWORD *)(a1 + 192) = KeyPath;
  *(_QWORD *)(a1 + 200) = v14;
  *(_QWORD *)(a1 + 208) = v15;
  *(_QWORD *)(a1 + 216) = v16;
  *(double *)(a1 + 224) = v38;
  *(_QWORD *)(a1 + 232) = v41;
  v59 = v38;
  v42 = v51;
  *(_QWORD *)(a1 + 240) = v52;
  *(_QWORD *)(a1 + 248) = v42;
  *(_BYTE *)(a1 + 256) = v17;
  v43 = v13;
  v50 = v13;
  v49[1] = v17;
  sub_100573DAC((uint64_t)&v62);
  v45 = v55;
  v44 = v56;
  v46 = v43;
  v47 = KeyPath;
  sub_1002F5060(v60, v56, v46, v55, KeyPath);
  sub_1002F509C(v60, v44, v50, v45, v47);
  v71 = v83;
  v72 = v84;
  *(_OWORD *)v73 = v85[0];
  *(_OWORD *)&v73[15] = *(_OWORD *)((char *)v85 + 15);
  v67 = v79;
  v68 = v80;
  v69 = v81;
  v70 = v82;
  v64[0] = v58;
  v64[1] = 0;
  v65 = v57;
  v66 = v78;
  return sub_100573E34((uint64_t)v64);
}

double sub_100570CF8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  double result;
  unint64_t v56;
  char v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[7];
  char v65;
  _BYTE v66[7];
  char v67;
  _BYTE v68[7];
  char v69;
  _BYTE v70[7];
  char v71;
  char v72;

  v62 = SearchResultEntity.chapter.getter();
  v63 = v2;
  v56 = sub_1001F2108();
  v4 = Text.init<A>(_:)(&v62, &type metadata for String, v56, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v12 = static Font.headline.getter(v11);
  v13 = Text.font(_:)(v12, v4, v6, v10, v8);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release(v12);
  v20 = v17 & 1;
  sub_1001F5B28(v4, v6, v10);
  swift_bridgeObjectRelease(v8);
  v22 = static Color.primary.getter(v21);
  v23 = Text.foregroundColor(_:)(v22, v13, v15, v20, v19);
  v59 = v24;
  v60 = v23;
  LOBYTE(v10) = v25;
  v61 = v26;
  swift_release(v22);
  v57 = v10 & 1;
  sub_1001F5B28(v13, v15, v20);
  swift_bridgeObjectRelease(v19);
  KeyPath = swift_getKeyPath(&unk_10072DBB8);
  v62 = SearchResultEntity.pageName.getter();
  v63 = v27;
  v29 = Text.init<A>(_:)(&v62, &type metadata for String, v56, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v36 = static Font.body.getter(v29);
  v37 = Text.font(_:)(v36, v29, v31, v35, v33);
  v39 = v38;
  LOBYTE(v10) = v40;
  v42 = v41;
  swift_release(v36);
  v43 = v10 & 1;
  sub_1001F5B28(v29, v31, v35);
  swift_bridgeObjectRelease(v33);
  v44 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v45 = Text.foregroundColor(_:)(v44, v37, v39, v43, v42);
  v47 = v46;
  LOBYTE(v36) = v48;
  v50 = v49;
  swift_release(v44);
  LOBYTE(v36) = v36 & 1;
  sub_1001F5B28(v37, v39, v43);
  swift_bridgeObjectRelease(v42);
  v51 = swift_getKeyPath(&unk_10072DBB8);
  v72 = v57;
  v71 = 0;
  v69 = 0;
  v67 = v36;
  v65 = 0;
  *(_DWORD *)(a1 + 17) = v62;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v62 + 3);
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v70;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v70[3];
  v52 = *(_DWORD *)v68;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v68[3];
  *(_DWORD *)(a1 + 65) = v52;
  v53 = *(_DWORD *)v66;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v66[3];
  *(_DWORD *)(a1 + 89) = v53;
  v54 = *(_DWORD *)v64;
  *(_DWORD *)(a1 + 124) = *(_DWORD *)&v64[3];
  *(_DWORD *)(a1 + 121) = v54;
  *(_QWORD *)a1 = v60;
  *(_QWORD *)(a1 + 8) = v59;
  *(_BYTE *)(a1 + 16) = v57;
  *(_QWORD *)(a1 + 24) = v61;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_QWORD *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0x4020000000000000;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v47;
  *(_BYTE *)(a1 + 88) = v36;
  *(_QWORD *)(a1 + 96) = v50;
  *(_QWORD *)(a1 + 104) = v51;
  *(_QWORD *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0x3FF0000000000000;
  sub_1001F596C(v60, v59, v57);
  swift_bridgeObjectRetain(v61);
  swift_retain(KeyPath);
  sub_1001F596C(v45, v47, v36);
  swift_bridgeObjectRetain(v50);
  swift_retain(v51);
  sub_1001F5B28(v45, v47, v36);
  swift_release(v51);
  swift_bridgeObjectRelease(v50);
  sub_1001F5B28(v60, v59, v57);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v61).n128_u64[0];
  return result;
}

uint64_t sub_100571044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  UIFont v13;
  NSAttributedString v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_10004CFD4(&qword_1009EB988);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SearchPassage(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ResultListResultView(0);
  sub_10000B5E4(v1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_1009EB988);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100010960((uint64_t)v5, &qword_1009EB988);
    v11 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    if (qword_1009CE860 != -1)
      swift_once(&qword_1009CE860, sub_10056B364);
    v13.super.isa = (Class)qword_1009EB740;
    if (qword_1009CE868 != -1)
      swift_once(&qword_1009CE868, sub_10056B378);
    v14.super.isa = SearchPassage.attributedText(font:boldFont:)(v13, (UIFont)qword_1009EB748).super.isa;
    AttributedString.init(_:)(v14.super.isa);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v15 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
}

void *sub_100571214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE __src[264];
  _BYTE v11[264];

  v4 = (uint64_t *)(v2 + *(int *)(a1 + 24));
  v6 = *v4;
  v5 = v4[1];
  swift_retain(v5);
  v8 = static HorizontalAlignment.leading.getter(v7);
  sub_1005708B4((uint64_t)__src);
  memcpy(&v11[7], __src, 0x101uLL);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  return memcpy((void *)(a2 + 33), v11, 0x108uLL);
}

uint64_t sub_1005712A8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  v1 = sub_10004CFD4(&qword_1009EBB50);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009EBB58);
  v5.n128_f64[0] = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static SearchViewModel.LoadingTitle.== infix(_:_:)(*v0, 0, v5);
  if ((v8 & 1) != 0)
  {
    v9 = static Alignment.center.getter(v8);
    _FrameLayout.init(width:height:alignment:)(&v23, 0, 1, 0x3FF0000000000000, 0, v9, v10);
    v11 = v23;
    v12 = v24;
    v13 = v25;
    v14 = v26;
    *(_QWORD *)v7 = 0;
    v7[8] = 1;
    *((_QWORD *)v7 + 2) = v11;
    v7[24] = v12;
    *((_QWORD *)v7 + 4) = v13;
    v7[40] = v14;
    *((_OWORD *)v7 + 3) = v27;
    swift_storeEnumTagMultiPayload(v7, v4, 0);
    v15 = sub_10004CFD4(&qword_1009EB830);
    v16 = sub_1001E7624();
    v17 = sub_100030B34(&qword_1009EBB68, &qword_1009EBB50, (uint64_t)&unk_10072AF18);
    return _ConditionalContent<>.init(storage:)(v7, v15, v1, v16, v17);
  }
  else
  {
    *(_QWORD *)v3 = static VerticalAlignment.center.getter(v8);
    *((_QWORD *)v3 + 1) = 0;
    v3[16] = 1;
    v19 = sub_10004CFD4(&qword_1009EBB60);
    sub_1005714D4(v0, &v3[*(int *)(v19 + 44)]);
    sub_10000B5E4((uint64_t)v3, (uint64_t)v7, &qword_1009EBB50);
    swift_storeEnumTagMultiPayload(v7, v4, 1);
    v20 = sub_10004CFD4(&qword_1009EB830);
    v21 = sub_1001E7624();
    v22 = sub_100030B34(&qword_1009EBB68, &qword_1009EBB50, (uint64_t)&unk_10072AF18);
    _ConditionalContent<>.init(storage:)(v7, v20, v1, v21, v22);
    return sub_100010960((uint64_t)v3, &qword_1009EBB50);
  }
}

uint64_t sub_1005714D4@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v43 = a2;
  v42 = sub_10004CFD4(&qword_1009EBB70);
  __chkstk_darwin(v42);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10004CFD4(&qword_1009EBB78);
  __chkstk_darwin(v41);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EBB80);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009EBB88);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EBB90);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009EBB98);
  __chkstk_darwin(v16);
  v40 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v38 - v20;
  v22 = *a1;
  if ((v22 - 2) < 2)
  {
    *(_QWORD *)v4 = static HorizontalAlignment.center.getter(v19);
    *((_QWORD *)v4 + 1) = 0x4010000000000000;
    v4[16] = 0;
    v23 = sub_10004CFD4(&qword_1009EBBA0);
    sub_100571BA0(a1, (uint64_t *)&v4[*(int *)(v23 + 44)]);
    sub_10000B5E4((uint64_t)v4, (uint64_t)v6, &qword_1009EBB70);
    swift_storeEnumTagMultiPayload(v6, v41, 1);
    v24 = sub_100573EC4();
    v25 = sub_100030B34(&qword_1009EBBB8, &qword_1009EBB70, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v6, v10, v42, v24, v25);
    sub_100010960((uint64_t)v4, &qword_1009EBB70);
    v26 = (uint64_t)v21;
LABEL_5:
    v33 = v40;
    sub_10000B5E4(v26, v40, &qword_1009EBB98);
    v34 = v43;
    *v43 = 0;
    *((_BYTE *)v34 + 8) = 1;
    v35 = sub_10004CFD4(&qword_1009EBBC0);
    sub_10000B5E4(v33, (uint64_t)v34 + *(int *)(v35 + 48), &qword_1009EBB98);
    v36 = (char *)v34 + *(int *)(v35 + 64);
    *(_QWORD *)v36 = 0;
    v36[8] = 1;
    sub_100010960(v26, &qword_1009EBB98);
    return sub_100010960(v33, &qword_1009EBB98);
  }
  v39 = (char *)&v38 - v20;
  v27 = (uint64_t)v12;
  v28 = v41;
  if (v22 == 1)
  {
    *(_QWORD *)v15 = static VerticalAlignment.center.getter(v19);
    *((_QWORD *)v15 + 1) = 0x4010000000000000;
    v15[16] = 0;
    v29 = sub_10004CFD4((uint64_t *)&unk_1009EBBC8);
    sub_10057194C((uint64_t)&v15[*(int *)(v29 + 44)]);
    sub_10000B5E4((uint64_t)v15, (uint64_t)v9, &qword_1009EBB90);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v30 = sub_100030B34(&qword_1009EBBB0, &qword_1009EBB90, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, &type metadata for Never, v13, &protocol witness table for Never, v30);
    sub_10000B5E4(v27, (uint64_t)v6, &qword_1009EBB88);
    swift_storeEnumTagMultiPayload(v6, v28, 0);
    v31 = sub_100573EC4();
    v32 = sub_100030B34(&qword_1009EBBB8, &qword_1009EBB70, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v26 = (uint64_t)v39;
    _ConditionalContent<>.init(storage:)(v6, v10, v42, v31, v32);
    sub_100010960(v27, &qword_1009EBB88);
    sub_100010960((uint64_t)v15, &qword_1009EBB90);
    goto LABEL_5;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x6168636165726E55, 0xEB00000000656C62, "Books/SearchPopoverView.swift", 29, 2, 426, 0);
  __break(1u);
  return result;
}

uint64_t sub_10057194C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, __n128);
  __n128 v41;
  __n128 v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[2];

  v44 = a1;
  v47 = sub_10004CFD4(&qword_1009D8400);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - v3;
  ProgressView<>.init<>()(v5);
  if (qword_1009CE780 != -1)
    swift_once(&qword_1009CE780, sub_100506EC0);
  v6 = unk_100A1EB90;
  v48[0] = qword_100A1EB88;
  v48[1] = unk_100A1EB90;
  v7 = sub_1001F2108();
  v8 = swift_bridgeObjectRetain(v6);
  v9 = Text.init<A>(_:)(v48, &type metadata for String, v7, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v17 = static Font.subheadline.getter(v16);
  v18 = Text.font(_:)(v17, v9, v11, v15, v13);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release(v17);
  v25 = v22 & 1;
  sub_1001F5B28(v9, v11, v15);
  swift_bridgeObjectRelease(v13);
  v26 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v27 = Text.foregroundColor(_:)(v26, v18, v20, v25, v24);
  v29 = v28;
  LOBYTE(v17) = v30;
  v32 = v31;
  swift_release(v26);
  LOBYTE(v26) = v17 & 1;
  sub_1001F5B28(v18, v20, v25);
  v33 = swift_bridgeObjectRelease(v24);
  v35 = v45;
  v34 = v46;
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v45 + 16);
  v37 = v47;
  v36(v46, v4, v47, v33);
  v38 = v44;
  ((void (*)(uint64_t, char *, uint64_t))v36)(v44, v34, v37);
  v39 = v38 + *(int *)(sub_10004CFD4((uint64_t *)&unk_1009EBBD8) + 48);
  *(_QWORD *)v39 = v27;
  *(_QWORD *)(v39 + 8) = v29;
  *(_BYTE *)(v39 + 16) = v26;
  *(_QWORD *)(v39 + 24) = v32;
  sub_1001F596C(v27, v29, v26);
  v40 = *(void (**)(char *, uint64_t, __n128))(v35 + 8);
  v41 = swift_bridgeObjectRetain(v32);
  v40(v4, v37, v41);
  sub_1001F5B28(v27, v29, v26);
  v42 = swift_bridgeObjectRelease(v32);
  return ((uint64_t (*)(char *, uint64_t, __n128))v40)(v34, v37, v42);
}

double sub_100571BA0@<D0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BOOL8 v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t KeyPath;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  double result;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  _QWORD v94[2];
  _BYTE v95[16];
  unint64_t v96;
  char v97;

  v89 = a1;
  v93 = a2;
  v3 = type metadata accessor for ControlSize(0);
  v87 = *(_QWORD *)(v3 - 8);
  v88 = v3;
  __chkstk_darwin(v3);
  v86 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for BorderlessButtonStyle(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10004CFD4(&qword_1009D8460);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EBBE8);
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  __chkstk_darwin(v7);
  v83 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EBBF0);
  v10 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  v91 = v10;
  __chkstk_darwin(v9);
  v82 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009EBBF8);
  __chkstk_darwin(v12);
  v92 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v75 - v15;
  sub_100573F48((uint64_t)(a1 + 8), (uint64_t)v95);
  sub_100573F48((uint64_t)v95, (uint64_t)&v96);
  if (v97)
    v17 = v96 > 1;
  else
    v17 = v96;
  v94[0] = sub_10050769C(v17);
  v94[1] = v18;
  v19 = sub_1001F2108();
  v21 = Text.init<A>(_:)(v94, &type metadata for String, v19, v20);
  v23 = v22;
  v25 = v24;
  v42 = v26 & 1;
  v28 = static Font.subheadline.getter(v27);
  v29 = Text.font(_:)(v28, v21, v23, v42, v25);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  swift_release(v28);
  v36 = v33 & 1;
  sub_1001F5B28(v21, v23, v42);
  swift_bridgeObjectRelease(v25);
  v37 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v38 = Text.foregroundColor(_:)(v37, v29, v31, v36, v35);
  v40 = v39;
  LODWORD(v42) = v41;
  v44 = v43;
  swift_release(v37);
  v45 = v29;
  v46 = v89;
  sub_1001F5B28(v45, v31, v36);
  v47 = swift_bridgeObjectRelease(v35);
  if ((static SearchViewModel.LoadingTitle.== infix(_:_:)(*v46, 2, v47) & 1) != 0)
  {
    v48 = *((_QWORD *)v46 + 3);
    v49 = *((_QWORD *)v46 + 4);
    swift_retain(v49);
    v50 = v76;
    v51 = Button.init(action:label:)(v48, v49, sub_10057212C, 0, &type metadata for Text, &protocol witness table for Text);
    v52 = v79;
    BorderlessButtonStyle.init()(v51);
    v53 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
    v54 = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v89 = v44;
    v55 = v83;
    v75 = v38;
    v56 = v78;
    v57 = v81;
    View.buttonStyle<A>(_:)(v52, v78, v81, v53, v54);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v57);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v56);
    v59 = v86;
    v58 = v87;
    v60 = v88;
    (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, enum case for ControlSize.small(_:), v88);
    KeyPath = swift_getKeyPath(&unk_10072DBE8);
    LODWORD(v81) = v42;
    v42 = v90;
    v62 = v82;
    v63 = (uint64_t *)&v82[*(int *)(v90 + 36)];
    v64 = sub_10004CFD4(&qword_1009D85F8);
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))((char *)v63 + *(int *)(v64 + 28), v59, v60);
    *v63 = KeyPath;
    v66 = v84;
    v65 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v62, v55, v85);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
    v67 = v55;
    v44 = v89;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
    v68 = (uint64_t)v62;
    v38 = v75;
    sub_100025B3C(v68, (uint64_t)v16, &qword_1009EBBF0);
    v69 = 0;
    v70 = v42;
    LOBYTE(v42) = v81;
  }
  else
  {
    v69 = 1;
    v70 = v90;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v16, v69, 1, v70);
  v71 = v92;
  sub_10000B5E4((uint64_t)v16, v92, &qword_1009EBBF8);
  v72 = v93;
  *v93 = v38;
  v72[1] = v40;
  *((_BYTE *)v72 + 16) = v42 & 1;
  v72[3] = (uint64_t)v44;
  v73 = sub_10004CFD4((uint64_t *)&unk_1009EBC00);
  sub_10000B5E4(v71, (uint64_t)v72 + *(int *)(v73 + 48), &qword_1009EBBF8);
  sub_1001F596C(v38, v40, v42 & 1);
  swift_bridgeObjectRetain(v44);
  sub_100010960((uint64_t)v16, &qword_1009EBBF8);
  sub_100010960(v71, &qword_1009EBBF8);
  sub_1001F5B28(v38, v40, v42 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v44).n128_u64[0];
  return result;
}

uint64_t sub_10057212C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  __n128 v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  if (qword_1009CE788 != -1)
    swift_once(&qword_1009CE788, sub_100507090);
  v2 = unk_100A1EBA0;
  v9[0] = qword_100A1EB98;
  v9[1] = unk_100A1EBA0;
  v3 = sub_1001F2108();
  v4 = swift_bridgeObjectRetain(v2);
  result = Text.init<A>(_:)(v9, &type metadata for String, v3, v4);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_1005721C4()
{
  return sub_1005712A8();
}

uint64_t sub_100572200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10056D158(a1, v2 + 16, a2);
}

unint64_t sub_100572208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB920;
  if (!qword_1009EB920)
  {
    v1 = sub_100030B74(&qword_1009EB910);
    sub_10057228C();
    sub_100030B34((unint64_t *)&qword_1009EB940, &qword_1009D77C8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB920);
  }
  return result;
}

unint64_t sub_10057228C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB928;
  if (!qword_1009EB928)
  {
    v1 = sub_100030B74(&qword_1009EB930);
    sub_100008DB0(&qword_1009EB938, type metadata accessor for ResultListResultView, (uint64_t)&unk_10072DB68);
    sub_100030B34(&qword_1009EB858, &qword_1009EB860, (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB928);
  }
  return result;
}

uint64_t type metadata accessor for ResultListResultView(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EBA38, (uint64_t)&nominal type descriptor for ResultListResultView);
}

uint64_t sub_10057233C()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100572360()
{
  return sub_100572788((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchEventHandling.didTapLoadingRow());
}

double sub_100572370(uint64_t *a1)
{
  uint64_t v1;

  return sub_10056D6B8(a1, v1 + 16);
}

unint64_t sub_100572378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB960;
  if (!qword_1009EB960)
  {
    v1 = sub_100030B74(&qword_1009EB958);
    sub_1005723FC();
    sub_100030B34((unint64_t *)&qword_1009EB940, &qword_1009D77C8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB960);
  }
  return result;
}

unint64_t sub_1005723FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB968;
  if (!qword_1009EB968)
  {
    v1 = sub_100030B74(&qword_1009EB970);
    sub_100572480();
    sub_100030B34(&qword_1009EB858, &qword_1009EB860, (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB968);
  }
  return result;
}

unint64_t sub_100572480()
{
  unint64_t result;

  result = qword_1009EB978;
  if (!qword_1009EB978)
  {
    result = swift_getWitnessTable(&unk_10072DB18, &type metadata for ResultListFooterView);
    atomic_store(result, (unint64_t *)&qword_1009EB978);
  }
  return result;
}

double sub_1005724C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a5)
  {
    sub_10057251C(a1, a2, a3, a4 & 1);
    swift_retain(a11);
    swift_retain(a6);
    swift_retain(a8);
    *(_QWORD *)&result = swift_retain(a10).n128_u64[0];
  }
  return result;
}

uint64_t sub_10057251C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return swift_bridgeObjectRetain(a3);
}

double sub_100572528(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a5)
  {
    sub_10056EBBC(a1, a2, a3, a4 & 1);
    swift_release(a10);
    swift_release(a8);
    swift_release(a6);
    *(_QWORD *)&result = swift_release(a11).n128_u64[0];
  }
  return result;
}

uint64_t sub_100572580()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 112));
  sub_10056EBBC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  return swift_deallocObject(v0, 145, 7);
}

uint64_t sub_1005725CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(unsigned __int8 *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v5);
  return dispatch thunk of SearchEventHandling.didSelect(page:)(v1, v2, v3, v4, v5, v6);
}

void sub_10057263C(double *a1)
{
  uint64_t v1;

  sub_10056D06C(a1, v1 + 16);
}

uint64_t sub_100572648()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchResultEntity(0) - 8) + 80);
  v2 = (char *)v0 + ((v1 + 120) & ~v1);
  v3 = v0[5];
  v4 = v0[6];
  sub_10003F198(v0 + 2, v3);
  return dispatch thunk of SearchEventHandling.didSelect(result:)(v2, v3, v4);
}

uint64_t sub_1005726AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for SearchResultEntity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 120) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v0 + 2);
  swift_release(*((_QWORD *)v0 + 8));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 11));
  v7 = swift_release(*((_QWORD *)v0 + 14));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100572738(double *a1)
{
  uint64_t v1;

  type metadata accessor for SearchResultEntity(0);
  sub_10056D52C(a1, v1 + 16);
}

uint64_t sub_10057277C()
{
  return sub_100572788((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchEventHandling.didTapClearRecentSearches());
}

uint64_t sub_100572788(uint64_t (*a1)(uint64_t, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  sub_10003F198(v1 + 2, v3);
  return a1(v3, v4);
}

uint64_t sub_1005727D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10056E19C(a1, v2 + 16, a2);
}

unint64_t sub_1005727D8()
{
  unint64_t result;

  result = qword_1009EB9B0;
  if (!qword_1009EB9B0)
  {
    result = swift_getWitnessTable(&unk_10072DAC8, &type metadata for RecentListItemView);
    atomic_store(result, (unint64_t *)&qword_1009EB9B0);
  }
  return result;
}

uint64_t sub_10057281C()
{
  _QWORD *v0;

  _s5Books15CurrentPageViewVwxx_0(v0 + 2);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[11]);
  swift_release(v0[14]);
  swift_bridgeObjectRelease(v0[16]);
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_100572860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[5];
  v4 = v0[6];
  sub_10003F198(v0 + 2, v3);
  return dispatch thunk of SearchEventHandling.didSelect(recentSearch:)(v1, v2, v3, v4);
}

uint64_t type metadata accessor for PopoverSearchBar(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009EBAE0, (uint64_t)&nominal type descriptor for PopoverSearchBar);
}

uint64_t sub_1005728C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = dispatch thunk of SearchViewModel.searchText.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1005728F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return dispatch thunk of SearchViewModel.searchText.setter(v1, v2);
}

double sub_100572930()
{
  uint64_t v0;

  return sub_10056C828((_QWORD *)(v0 + 16));
}

uint64_t sub_100572944()
{
  uint64_t v0;

  return sub_10056C894(v0 + 16);
}

uint64_t sub_100572950()
{
  uint64_t v0;

  return sub_10056C900(v0 + 16);
}

BOOL sub_100572958(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  sub_1006696D8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
  if ((v5 & 1) != 0)
  {
    v6 = *(_BYTE *)(a2 + 32);
    if ((*(_BYTE *)(a1 + 32) & 1) == 0)
    {
      if (*(double *)(a1 + 24) != *(double *)(a2 + 24))
        v6 = 1;
      return (v6 & 1) == 0;
    }
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t destroy for RecentListItemView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for RecentListItemView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for RecentListItemView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for RecentListItemView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for RecentListItemView()
{
  return &type metadata for RecentListItemView;
}

ValueMetadata *type metadata accessor for RecentListHeaderView()
{
  return &type metadata for RecentListHeaderView;
}

ValueMetadata *type metadata accessor for ResultListFooterView()
{
  return &type metadata for ResultListFooterView;
}

uint64_t *sub_100572B30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for SearchResultEntity(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SearchPassage(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10004CFD4(&qword_1009EB988);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v14 = v17[1];
    *v16 = *v17;
    v16[1] = v14;
  }
  swift_retain(v14);
  return a1;
}

uint64_t sub_100572C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for SearchPassage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_100572CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for SearchPassage(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009EB988);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  return a1;
}

uint64_t sub_100572DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for SearchPassage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009EB988);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  v20 = v17[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

uint64_t sub_100572F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for SearchPassage(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009EB988);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10057302C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for SearchResultEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for SearchPassage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009EB988);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = *(_QWORD *)(a1 + v16 + 8);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_100573174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100573180);
}

uint64_t sub_100573180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for SearchResultEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009EB988);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10057322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100573238);
}

uint64_t sub_100573238(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for SearchResultEntity(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10004CFD4(&qword_1009EB988);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1005732E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for SearchResultEntity(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10026B338(319, (unint64_t *)&unk_1009EBA48, (uint64_t (*)(uint64_t))&type metadata accessor for SearchPassage, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

double destroy for ResultListPageView(uint64_t a1)
{
  double result;

  sub_10056EBBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ResultListPageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_10057251C(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for ResultListPageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_10057251C(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_10056EBBC(v8, v9, v10, v11);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for ResultListPageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_10056EBBC(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v10);
  return a1;
}

ValueMetadata *type metadata accessor for ResultListPageView()
{
  return &type metadata for ResultListPageView;
}

uint64_t sub_100573518(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v7 = a2[1];
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v6;
    v9 = a2[3];
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v8;
    v11 = a2[5];
    v10 = a2[6];
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v10;
    v12 = a2[9];
    v23 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 56) = v23;
    v13 = *(int *)(a3 + 32);
    v14 = (uint64_t *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    *(_QWORD *)(a1 + 72) = v12;
    swift_retain(v5);
    swift_retain(v7);
    swift_bridgeObjectRetain(v9);
    swift_retain(v11);
    swift_bridgeObjectRetain(v23);
    swift_retain(v12);
    v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      v21 = *v15;
      *v14 = *v15;
      swift_retain(v21);
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

double sub_10057365C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_release(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_release(a1[9]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005736FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = a2[6];
  v8 = a2[9];
  v17 = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 56) = v17;
  v9 = *(int *)(a3 + 32);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)((char *)a2 + v9);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  swift_bridgeObjectRetain(v17);
  swift_retain(v8);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v11;
    *v10 = *v11;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t *sub_100573814(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[2] = a2[2];
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[4] = a2[4];
  v12 = a2[5];
  v13 = a1[5];
  a1[5] = v12;
  swift_retain(v12);
  swift_release(v13);
  a1[6] = a2[6];
  v14 = a2[7];
  v15 = a1[7];
  a1[7] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a2[9];
  v17 = a1[9];
  a1[8] = a2[8];
  a1[9] = v16;
  swift_retain(v16);
  swift_release(v17);
  if (a1 != a2)
  {
    v18 = *(int *)(a3 + 32);
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_100010960((uint64_t)a1 + v18, (uint64_t *)&unk_1009D8200);
    v21 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      v24 = *v20;
      *v19 = *v20;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

_OWORD *sub_100573978(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_100573A30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_release(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a1[9];
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  swift_release(v14);
  if (a1 != a2)
  {
    v15 = *(int *)(a3 + 32);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    sub_100010960((uint64_t)a1 + v15, (uint64_t *)&unk_1009D8200);
    v18 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100573B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100573B5C);
}

uint64_t sub_100573B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100573BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100573BE8);
}

uint64_t sub_100573BE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_100573C60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = " ";
  v4[1] = &unk_10072D930;
  v4[2] = &unk_10072D930;
  v4[3] = (char *)&value witness table for () + 64;
  sub_10026B338(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_100573D04()
{
  return sub_100030B34(&qword_1009EBB30, (uint64_t *)&unk_1009EB7B0, (uint64_t)&unk_10071AA30);
}

uint64_t sub_100573D30()
{
  return sub_100008DB0(&qword_1009EBB38, type metadata accessor for PopoverSearchBar, (uint64_t)&unk_10072D948);
}

uint64_t sub_100573D5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876F14, 1);
}

uint64_t sub_100573D6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876EEC, 1);
}

uint64_t sub_100573D7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876EC4, 1);
}

uint64_t sub_100573D8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876E9C, 1);
}

uint64_t sub_100573D9C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876E74, 1);
}

uint64_t sub_100573DAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_BYTE *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 128);
  sub_1001F596C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  sub_1001F596C(v4, v5, v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t sub_100573E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_BYTE *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 128);
  sub_1001F5B28(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_1001F5B28(v4, v5, v6);
  swift_release(v8);
  swift_bridgeObjectRelease(v7);
  return a1;
}

unint64_t sub_100573EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EBBA8;
  if (!qword_1009EBBA8)
  {
    v1 = sub_100030B74(&qword_1009EBB88);
    sub_100030B34(&qword_1009EBBB0, &qword_1009EBB90, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EBBA8);
  }
  return result;
}

uint64_t sub_100573F48(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for SearchViewModel.LoadingDetail - 1) + 32))(a2, a1);
  return a2;
}

uint64_t *sub_100573F9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_retain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *sub_100573FFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[4];
  swift_release(a1[3]);
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);
  swift_release(v5);
  return a1;
}

double sub_100574064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  double result;

  if ((a7 & 1) == 0)
  {
    sub_1001F596C(a3, a4, a5 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a6).n128_u64[0];
  }
  return result;
}

double sub_1005740A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  double result;

  if ((a7 & 1) == 0)
  {
    sub_1001F5B28(a3, a4, a5 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005740DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PopoverSearchBar(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 72));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1005741B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PopoverSearchBar(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005741F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverSearchBar(0) - 8) + 80);
  return sub_10056F008(a1, a2, (__int128 *)(v2 + ((v5 + 16) & ~v5)));
}

uint64_t sub_100574244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for PopoverSearchBar(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 72));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;

  return swift_deallocObject(v0, v10, v3 | 7);
}

uint64_t sub_100574338()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for PopoverSearchBar(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10056F060(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100574378()
{
  return sub_100030B34(&qword_1009EBCB0, &qword_1009EBCB8, (uint64_t)&unk_100717448);
}

unint64_t sub_1005743A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EBCC0;
  if (!qword_1009EBCC0)
  {
    v1 = sub_100030B74(&qword_1009EBCC8);
    sub_1001E7624();
    sub_100030B34(&qword_1009EBB68, &qword_1009EBB50, (uint64_t)&unk_10072AF18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EBCC0);
  }
  return result;
}

uint64_t sub_10057442C()
{
  return sub_100030B34(&qword_1009EBCD0, &qword_1009EBC20, (uint64_t)&unk_1007299D8);
}

unint64_t sub_10057445C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EBCD8;
  if (!qword_1009EBCD8)
  {
    v1 = sub_100030B74(&qword_1009EBC38);
    sub_100030B34(&qword_1009EBCE0, &qword_1009EBC28, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EBCD8);
  }
  return result;
}

uint64_t sub_1005744E0()
{
  return sub_100030B34(&qword_1009EBCE8, &qword_1009EBC58, (uint64_t)&unk_100717448);
}

void sub_100574510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_1005B1FE0(0, v8[2] + 1, 1, v8);
    v16 = v8[2];
    v15 = v8[3];
    if (v16 >= v15 >> 1)
      v8 = sub_1005B1FE0((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
    v8[2] = v16 + 1;
    v8[v16 + 4] = v14;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v6)
      goto LABEL_27;
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v6)
        goto LABEL_27;
      v12 = *(_QWORD *)(v2 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v6)
          goto LABEL_27;
        v12 = *(_QWORD *)(v2 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v6)
            goto LABEL_27;
          v12 = *(_QWORD *)(v2 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v5 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v6)
      goto LABEL_27;
    v12 = *(_QWORD *)(v2 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1005746E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v9 - 1) & v9)
  {
    v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v13 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_100043ED0(0, v7[2] + 1, 1, v7);
    v15 = v7[2];
    v14 = v7[3];
    if (v15 >= v14 >> 1)
      v7 = sub_100043ED0((_QWORD *)(v14 > 1), v15 + 1, 1, v7);
    v7[2] = v15 + 1;
    v16 = &v7[2 * v15];
    v16[4] = v11;
    v16[5] = v13;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v5)
      goto LABEL_27;
    v9 = *(_QWORD *)(v17 + 8 * v8);
    ++v6;
    if (!v9)
    {
      v6 = v8 + 1;
      if (v8 + 1 >= v5)
        goto LABEL_27;
      v9 = *(_QWORD *)(v17 + 8 * v6);
      if (!v9)
      {
        v6 = v8 + 2;
        if (v8 + 2 >= v5)
          goto LABEL_27;
        v9 = *(_QWORD *)(v17 + 8 * v6);
        if (!v9)
        {
          v6 = v8 + 3;
          if (v8 + 3 >= v5)
            goto LABEL_27;
          v9 = *(_QWORD *)(v17 + 8 * v6);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    ;
  }
  v10 = v8 + 4;
  if (v10 >= v5)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v9 = *(_QWORD *)(v17 + 8 * v10);
  if (v9)
  {
    v6 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v6 >= v5)
      goto LABEL_27;
    v9 = *(_QWORD *)(v17 + 8 * v6);
    ++v10;
    if (v9)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1005748F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  v25 = _swiftEmptyArrayStorage;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_23:
    v14 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v16 = MGenre.parentId.getter(v15);
    if (v17)
    {
      v18 = v16;
      v19 = v17;
      if (*(_QWORD *)(*(_QWORD *)a2 + 16))
      {
        swift_bridgeObjectRetain(v17);
        sub_10004CE80(v18, v19);
        v21 = v20;

        swift_bridgeObjectRelease(v19);
        if ((v21 & 1) == 0)
          goto LABEL_28;
        swift_bridgeObjectRelease(v19);
      }
      else
      {

LABEL_28:
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
          v25 = sub_100043ED0(0, v25[2] + 1, 1, v25);
        v23 = v25[2];
        v22 = v25[3];
        if (v23 >= v22 >> 1)
          v25 = sub_100043ED0((_QWORD *)(v22 > 1), v23 + 1, 1, v25);
        v25[2] = v23 + 1;
        v24 = &v25[2 * v23];
        v24[4] = v18;
        v24[5] = v19;
      }
    }
    else
    {

    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v11 >= v7)
    goto LABEL_33;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_22;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_33;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_33;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 3;
  if (v11 + 3 >= v7)
    goto LABEL_33;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_22:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_33:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_33;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_100574B3C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1EC68);
  sub_100048F64(v0, (uint64_t)qword_100A1EC68);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000017, 0x800000010072DCA0);
}

id sub_100574BB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v14;

  v0 = sub_10004CFD4(&qword_1009DD570);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1007133E0;
  v2 = (void *)BFMCatalogRequestRelationshipAuthors;
  v3 = (void *)BFMCatalogRequestRelationshipGenres;
  *(_QWORD *)(v1 + 32) = BFMCatalogRequestRelationshipAuthors;
  *(_QWORD *)(v1 + 40) = v3;
  v4 = (void *)BFMCatalogRequestRelationshipMappedBooks;
  v5 = (void *)BFMCatalogRequestRelationshipMappedAudiobooks;
  *(_QWORD *)(v1 + 48) = BFMCatalogRequestRelationshipMappedBooks;
  *(_QWORD *)(v1 + 56) = v5;
  v6 = (void *)BFMCatalogRequestRelationshipBookSeries;
  v7 = BFMCatalogRequestRelationshipAudiobookSeries;
  v14 = (id)BFMCatalogRequestRelationshipAudiobookSeries;
  *(_QWORD *)(v1 + 64) = BFMCatalogRequestRelationshipBookSeries;
  *(_QWORD *)(v1 + 72) = v7;
  qword_100A1EC80 = v1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return v14;
}

void sub_100574C7C()
{
  qword_100A1EC88 = (uint64_t)_swiftEmptyArrayStorage;
}

unint64_t sub_100574C90()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;

  v0 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v0, &v6);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0xD000000000000026;
  *(_QWORD *)(inited + 40) = 0x80000001007D3920;
  v2 = BFMCatalogRequestRelationshipMappedSeries;
  *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(BFMCatalogRequestRelationshipMappedSeries);
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 64) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 72) = 0x80000001007D3950;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  *(_QWORD *)(inited + 88) = v4;
  result = sub_1000316DC(inited);
  qword_100A1EC90 = result;
  return result;
}

void sub_100574D44()
{
  qword_100A1EC98 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

uint64_t sub_100574D58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  v2[131] = v1;
  v2[130] = a1;
  v4 = type metadata accessor for MRequestMetadata(0);
  v2[132] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[133] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[134] = swift_task_alloc(v6);
  v2[135] = swift_task_alloc(v6);
  v2[109] = _swiftEmptyArrayStorage;
  v2[124] = _swiftEmptyArrayStorage;
  v7 = (_QWORD *)swift_task_alloc(dword_1009EBDCC);
  v2[136] = v7;
  *v7 = v2;
  v7[1] = sub_100574DFC;
  return sub_10057643C(a1);
}

uint64_t sub_100574DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 1088);
  *(_QWORD *)(*v2 + 1096) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100576210;
  }
  else
  {
    *(_QWORD *)(v4 + 1104) = a1;
    v6 = sub_100574E70;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100574E70()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __n128 v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;

  v2 = v0 + 109;
  v3 = v0[138];
  v4 = v0[130];
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v0 + 109;
  *(_QWORD *)(v5 + 24) = v0 + 124;
  sub_10057D410(v3, (void (*)(uint64_t, char *))sub_10057A1F4);
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v5);
  v6 = v0[109];
  v7 = v0[124];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v4);
  v9 = sub_1003ACD10(v8);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v6);
  v11 = sub_1003ACD10(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRetain(v7);
  v13 = sub_1003ACD10(v12);
  swift_bridgeObjectRelease(v7);
  v14 = sub_100576A30(v13, v11);
  v15 = v14;
  if (*(_QWORD *)(v14 + 16) <= *(_QWORD *)(v9 + 16) >> 3)
    sub_10057B87C(v14);
  else
    v9 = (uint64_t)sub_10057BE5C(v14, v9);
  swift_bridgeObjectRelease(v15);
  v16 = sub_100427B14(v9);
  swift_bridgeObjectRelease(v9);
  v17 = *(_QWORD *)(v6 + 16);
  v18 = *(_QWORD *)(v7 + 16);
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v2 = v0 + 2;
    v1 = v0 + 121;
    if (qword_1009CE880 == -1)
      goto LABEL_6;
  }
  swift_once(&qword_1009CE880, sub_100574B3C);
LABEL_6:
  v20 = type metadata accessor for Logger(0);
  v0[139] = sub_100048F64(v20, (uint64_t)qword_100A1EC68);
  swift_retain(v16);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v52 = v0 + 130;
    v53 = v1;
    v24 = v19;
    v25 = v0 + 128;
    v26 = v0 + 129;
    v54 = v0;
    v27 = v2;
    v28 = swift_slowAlloc(22, -1);
    *(_DWORD *)v28 = 134218240;
    *v25 = v16[2];
    v29 = v25;
    v19 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v29, v26, v28 + 4, v28 + 12);
    swift_release(v16);
    *(_WORD *)(v28 + 12) = 2048;
    *v26 = v24;
    v1 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v26, v52, v28 + 14, v28 + 22);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchMetadata(untyped): routing: untyped: %ld typed: %ld", (uint8_t *)v28, 0x16u);
    v30 = v28;
    v2 = v27;
    v0 = v54;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    swift_release(v16);
  }

  v31 = v0[131];
  v32 = (_QWORD *)swift_allocObject(&unk_100910D28, 48, 7);
  v0[140] = v32;
  v32[2] = v19;
  v32[3] = v31;
  v32[4] = v6;
  v32[5] = v7;
  swift_retain(v31);
  swift_retain(v32);
  v33 = sub_100030B74(&qword_1009EBDE0);
  swift_asyncLet_begin(v2, 0, v33, &unk_1009EBDD8, v32, v1);
  v34 = v16[2];
  if (v34)
  {
    v35 = v0;
    v36 = v0 + 115;
    v37 = v16;
    swift_retain(v16);
    v38 = 0;
    v39 = _swiftEmptyArrayStorage;
    do
    {
      *v36 = v37[v38 + 4];
      v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v42 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
        v39 = sub_100043ED0(0, v39[2] + 1, 1, v39);
      v44 = v39[2];
      v43 = v39[3];
      if (v44 >= v43 >> 1)
        v39 = sub_100043ED0((_QWORD *)(v43 > 1), v44 + 1, 1, v39);
      v35[144] = v39;
      ++v38;
      v39[2] = v44 + 1;
      v45 = &v39[2 * v44];
      v45[4] = v40;
      v45[5] = v42;
    }
    while (v34 != v38);
    v46 = v35;
    swift_release_n(v37, 2);
    v35[141] = OBJC_IVAR____TtC5Books23MediaAPIMetadataService_catalogService;
    if (qword_1009CE888 != -1)
      swift_once(&qword_1009CE888, sub_100574BB8);
    v47 = qword_100A1EC80;
    if (qword_1009CE898 != -1)
      swift_once(&qword_1009CE898, sub_100574C90);
    v48 = qword_100A1EC90;
    MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 98);
    v49 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
    v46[142] = v49;
    *v49 = v46;
    v49[1] = sub_100575378;
    return MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(v39, v47, 0, v48, 150, v46[135]);
  }
  else
  {
    v51 = swift_release(v16);
    v0[154] = _swiftEmptyDictionarySingleton;
    return swift_asyncLet_get_throwing(v2, v1, sub_100576054, v0 + 98, v51);
  }
}

uint64_t sub_100575378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 1136);
  *(_QWORD *)(*(_QWORD *)v2 + 1144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[135];
    v7 = v4[133];
    v8 = v4[132];
    v9 = swift_bridgeObjectRelease(v4[144]);
    (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v8, v9);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    v10 = sub_100576268;
  }
  else
  {
    v11 = v4[135];
    v12 = v4[133];
    v13 = v4[132];
    v4[145] = a1;
    v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v4[146] = v14;
    v14(v11, v13);
    v10 = sub_100575434;
  }
  return swift_task_switch(v10, 0, 0);
}

uint64_t sub_100575434()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0 + 103;
  v2 = v0[145];
  v3 = v0[144];
  v0[103] = v2;
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v3 + 16);
  v0[147] = v5;
  if (v4 == v5)
  {
    v6 = v0 + 95;
    v7 = v0[143];
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRetain(v3);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = v0[147];
      v57 = v0[144];
      v12 = swift_slowAlloc(32, -1);
      *(_DWORD *)v12 = 134218496;
      v0[123] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 123, v0 + 124, v12 + 4, v12 + 12);
      *(_WORD *)(v12 + 12) = 2048;
      swift_beginAccess(v0 + 103, v0 + 87, 0, 0);
      v0[125] = *(_QWORD *)(v0[103] + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 125, v0 + 126, v12 + 14, v12 + 22);
      *(_WORD *)(v12 + 22) = 2048;
      v0[126] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 126, v0 + 127, v12 + 24, v12 + 32);
      swift_bridgeObjectRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "fetchMetadata(untyped): requested: %ld fetched: %ld of %ld", (uint8_t *)v12, 0x20u);
      v13 = v12;
      v6 = v0 + 95;
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease(v0[144]);
    }
    v20 = v0 + 2;
    v21 = v0 + 121;

    v22 = v0[147];
    swift_beginAccess(v0 + 103, v6, 0, 0);
    v23 = v0[144];
    if (*(_QWORD *)(v0[103] + 16) == v22)
    {
      swift_bridgeObjectRelease(v0[144]);
    }
    else
    {
      v29 = sub_10003455C(v0[144]);
      swift_bridgeObjectRelease(v23);
      v30 = swift_bridgeObjectRetain(*v1);
      v31 = sub_1003A8DC4(v30);
      v32 = v31;
      if (*(_QWORD *)(v31 + 16) <= *(_QWORD *)(v29 + 16) >> 3)
      {
        v58 = v29;
        sub_1000299B4(v31);
        swift_bridgeObjectRelease(v32);
        v33 = (unint64_t *)v29;
      }
      else
      {
        v33 = sub_10057B9F4(v31, v29);
        swift_bridgeObjectRelease(v32);
      }
      swift_bridgeObjectRetain(v33);
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.error.getter(v41);
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(12, -1);
        v44 = swift_slowAlloc(32, -1);
        v58 = v44;
        *(_DWORD *)v43 = 136315138;
        v45 = swift_bridgeObjectRetain(v33);
        v47 = Set.description.getter(v46, &type metadata for String, &protocol witness table for String, v45);
        v49 = v48;
        swift_bridgeObjectRelease(v33);
        v50 = v47;
        v20 = v0 + 2;
        v0[122] = sub_100040F58(v50, v49, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 122, v0 + 123, v43 + 4, v43 + 12);
        v51 = v49;
        v21 = v0 + 121;
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease_n(v33, 2);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "fetchMetadata(untyped): Failed to get some metadata. missingIDs: %s", v43, 0xCu);
        swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v33, 2);
      }

    }
    v52 = v0[103];
    swift_bridgeObjectRetain(v52);
    sub_10057DD18(v53);
    v55 = v54;
    v0[153] = v7;
    swift_bridgeObjectRelease(v52);
    v56 = swift_bridgeObjectRelease(v0[103]);
    if (v7)
    {
      return swift_asyncLet_finish(v20, v21, sub_100575FDC, v0 + 110);
    }
    else
    {
      v0[154] = v55;
      return swift_asyncLet_get_throwing(v20, v21, sub_100576054, v0 + 98, v56);
    }
  }
  else
  {
    swift_bridgeObjectRetain(v3);
    v15 = sub_10003455C(v14);
    swift_bridgeObjectRelease(v3);
    v16 = swift_bridgeObjectRetain(*v1);
    v17 = sub_1003A8DC4(v16);
    v18 = v17;
    if (*(_QWORD *)(v17 + 16) <= *(_QWORD *)(v15 + 16) >> 3)
    {
      v58 = v15;
      sub_1000299B4(v17);
      swift_bridgeObjectRelease(v18);
      v19 = (unint64_t *)v15;
    }
    else
    {
      v19 = sub_10057B9F4(v17, v15);
      swift_bridgeObjectRelease(v18);
    }
    v24 = sub_100427630((uint64_t)v19);
    v0[148] = v24;
    swift_bridgeObjectRelease(v19);
    swift_retain(v24);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v28 = 134217984;
      v0[127] = v24[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 127, v0 + 128, v28 + 4, v28 + 12);
      swift_release(v24);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "fetchMetadata(untyped): retrying: %ld", v28, 0xCu);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release(v24);
    }

    v34 = qword_100A1EC90;
    swift_bridgeObjectRetain(qword_100A1EC90);
    v35 = sub_1000316DC((uint64_t)&off_1008F0F00);
    v36 = sub_1005782F4(v35, v34);
    v0[149] = v36;
    v37 = qword_100A1EC80;
    MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 112);
    v38 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
    v0[150] = v38;
    *v38 = v0;
    v38[1] = sub_100575A70;
    return MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(v24, v37, 0, v36, 150, v0[134]);
  }
}

uint64_t sub_100575A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, __n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 1200);
  *(_QWORD *)(*(_QWORD *)v2 + 1208) = v1;
  swift_task_dealloc(v5);
  v6 = v4[149];
  v7 = v4[148];
  v8 = (void (*)(uint64_t, uint64_t, __n128))v4[146];
  if (v1)
  {
    v9 = v4[144];
    v10 = v4[134];
    v11 = v4[132];
    swift_bridgeObjectRelease(v6);
    swift_release(v7);
    v12 = swift_bridgeObjectRelease(v9);
    v8(v10, v11, v12);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    v13 = sub_1005762F8;
  }
  else
  {
    v14 = v4[134];
    v15 = v4[132];
    v4[152] = a1;
    ((void (*)(uint64_t, uint64_t))v8)(v14, v15);
    swift_bridgeObjectRelease(v6);
    swift_release(v7);
    v13 = sub_100575B50;
  }
  return swift_task_switch(v13, 0, 0);
}

void sub_100575B50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40[2];

  v1 = v0[152];
  v2 = v0[151];
  v3 = v0[103];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  v40[0] = v3;
  v0[103] = 0x8000000000000000;
  sub_10057B558(v1, (uint64_t)sub_10057D070, 0, isUniquelyReferenced_nonNull_native, v40, (void (*)(void))sub_1002C1924, (void (*)(void))sub_10037CEBC);
  v5 = v0[103];
  v0[103] = v40[0];
  swift_bridgeObjectRelease(v5);
  if (!v2)
  {
    v6 = v0 + 95;
    v7 = v0[144];
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRetain(v7);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = v0[147];
      v39 = v0[144];
      v12 = swift_slowAlloc(32, -1);
      *(_DWORD *)v12 = 134218496;
      v0[123] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 123, v0 + 124, v12 + 4, v12 + 12);
      *(_WORD *)(v12 + 12) = 2048;
      swift_beginAccess(v0 + 103, v0 + 87, 0, 0);
      v0[125] = *(_QWORD *)(v0[103] + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 125, v0 + 126, v12 + 14, v12 + 22);
      *(_WORD *)(v12 + 22) = 2048;
      v0[126] = v11;
      v6 = v0 + 95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 126, v0 + 127, v12 + 24, v12 + 32);
      swift_bridgeObjectRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "fetchMetadata(untyped): requested: %ld fetched: %ld of %ld", (uint8_t *)v12, 0x20u);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease(v0[144]);
    }
    v13 = v0 + 2;
    v14 = v0 + 121;

    v15 = v0[147];
    swift_beginAccess(v0 + 103, v6, 0, 0);
    v16 = v0[144];
    if (*(_QWORD *)(v0[103] + 16) == v15)
    {
      swift_bridgeObjectRelease(v0[144]);
    }
    else
    {
      v17 = sub_10003455C(v0[144]);
      swift_bridgeObjectRelease(v16);
      v18 = swift_bridgeObjectRetain(v0[103]);
      v19 = sub_1003A8DC4(v18);
      v20 = v19;
      if (*(_QWORD *)(v19 + 16) <= *(_QWORD *)(v17 + 16) >> 3)
      {
        v40[0] = v17;
        sub_1000299B4(v19);
        swift_bridgeObjectRelease(v20);
        v21 = (unint64_t *)v40[0];
      }
      else
      {
        v21 = sub_10057B9F4(v19, v17);
        swift_bridgeObjectRelease(v20);
      }
      swift_bridgeObjectRetain(v21);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v40[0] = v26;
        *(_DWORD *)v25 = 136315138;
        v27 = swift_bridgeObjectRetain(v21);
        v29 = Set.description.getter(v28, &type metadata for String, &protocol witness table for String, v27);
        v31 = v30;
        swift_bridgeObjectRelease(v21);
        v32 = v29;
        v13 = v0 + 2;
        v0[122] = sub_100040F58(v32, v31, v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 122, v0 + 123, v25 + 4, v25 + 12);
        v33 = v31;
        v14 = v0 + 121;
        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease_n(v21, 2);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "fetchMetadata(untyped): Failed to get some metadata. missingIDs: %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v21, 2);
      }

    }
    v34 = v0[103];
    swift_bridgeObjectRetain(v34);
    sub_10057DD18(v35);
    v37 = v36;
    v0[153] = 0;
    swift_bridgeObjectRelease(v34);
    v38 = swift_bridgeObjectRelease(v0[103]);
    v0[154] = v37;
    swift_asyncLet_get_throwing(v13, v14, sub_100576054, v0 + 98, v38);
  }
}

uint64_t sub_100575FDC()
{
  return swift_task_switch(sub_100575FF0, 0, 0);
}

uint64_t sub_100575FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1120);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 992));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 872));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 1072);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576054()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1240) = v0;
  if (!v0)
    return swift_task_switch(sub_1005760D4, 0, 0);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 1232));
  return swift_asyncLet_finish(v1 + 16, v1 + 968, sub_1005763C4, v1 + 656);
}

void sub_1005760D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[121];
  if (v1)
  {
    v2 = v0[155];
    v3 = v0[154];
    swift_bridgeObjectRetain(v0[121]);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
    v7 = v3;
    sub_10057AE4C(v1, (uint64_t)sub_10057C988, 0, isUniquelyReferenced_nonNull_native, &v7, v5);
    if (v2)
    {
      swift_bridgeObjectRelease(0x8000000000000000);
      return;
    }
    v6 = v7;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    v6 = v0[154];
  }
  v0[156] = v6;
  swift_asyncLet_finish(v0 + 2, v0 + 121, sub_100576188, v0 + 90);
}

uint64_t sub_100576188()
{
  return swift_task_switch(sub_10057619C, 0, 0);
}

uint64_t sub_10057619C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1120);
  v2 = *(_QWORD *)(v0 + 1080);
  v3 = *(_QWORD *)(v0 + 1072);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 992));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 872));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1248));
}

uint64_t sub_100576210()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v1 = *(_QWORD *)(v0 + 1072);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576268()
{
  uint64_t v0;

  return swift_asyncLet_finish(v0 + 16, v0 + 968, sub_100576280, v0 + 928);
}

uint64_t sub_100576280()
{
  return swift_task_switch(sub_100576294, 0, 0);
}

uint64_t sub_100576294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1120);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 992));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 872));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 1072);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005762F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 824));
  return swift_asyncLet_finish(v0 + 16, v0 + 968, sub_10057634C, v0 + 832);
}

uint64_t sub_10057634C()
{
  return swift_task_switch(sub_100576360, 0, 0);
}

uint64_t sub_100576360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1120);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 992));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 872));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 1072);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005763C4()
{
  return swift_task_switch(sub_1005763D8, 0, 0);
}

uint64_t sub_1005763D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1120);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 992));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 872));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 1072);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10057643C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10057649C, 0, 0);
}

uint64_t sub_10057649C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t);
  _QWORD *v18;

  v2 = v1[4];
  v3 = *(_QWORD *)(v2 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v5 = v1 + 2;
    sub_100045E44(0, *(_QWORD *)(v2 + 16), 0);
    v4 = v18;
    v6 = (uint64_t *)(v2 + 32);
    do
    {
      v7 = *v6++;
      *v5 = v7;
      a1 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v8 = a1;
      v10 = v9;
      v12 = v18[2];
      v11 = v18[3];
      if (v12 >= v11 >> 1)
        a1 = sub_100045E44(v11 > 1, v12 + 1, 1);
      v18[2] = v12 + 1;
      v13 = &v18[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      --v3;
    }
    while (v3);
    v1 = v16;
  }
  v1[9] = v4;
  static TaskPriority.userInitiated.getter(a1);
  v17 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v14 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  v1[10] = v14;
  *v14 = v1;
  v14[1] = sub_1005765EC;
  return v17(v1[8]);
}

uint64_t sub_1005765EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  *(_QWORD *)(*(_QWORD *)v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[9];
    (*(void (**)(_QWORD, _QWORD))(v4[7] + 8))(v4[8], v4[6]);
    swift_bridgeObjectRelease(v6);
    v7 = sub_1005767EC;
  }
  else
  {
    v9 = v4[7];
    v8 = v4[8];
    v10 = v4[6];
    v4[12] = a1;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v7 = sub_100576688;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100576688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[12];
  v2 = v0[9];
  v3 = swift_task_alloc(32);
  v0[13] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[14] = v4;
  v5 = sub_10004CFD4(&qword_1009EBE38);
  *v4 = v0;
  v4[1] = sub_10057673C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 3, 0, 0, 0xD000000000000014, 0x80000001007D3990, sub_10057E9B4, v3, v5);
}

uint64_t sub_10057673C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1005767A4, 0, 0);
}

uint64_t sub_1005767A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);

  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1005767EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576820(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  int v13;
  _QWORD *v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v8 = type metadata accessor for Book.MediaType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a2, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == enum case for Book.MediaType.ebook(_:))
  {
    v14 = (_QWORD *)*a3;
    result = swift_isUniquelyReferenced_nonNull_native(*a3);
    *a3 = (uint64_t)v14;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1005B1FE0(0, v14[2] + 1, 1, v14);
      v14 = (_QWORD *)result;
      *a3 = result;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      result = (uint64_t)sub_1005B1FE0((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      v14 = (_QWORD *)result;
    }
    v14[2] = v17 + 1;
    v14[v17 + 4] = a1;
    *a3 = (uint64_t)v14;
  }
  else if (v13 == enum case for Book.MediaType.audiobook(_:))
  {
    v18 = (_QWORD *)*a4;
    result = swift_isUniquelyReferenced_nonNull_native(*a4);
    *a4 = (uint64_t)v18;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1005B1FE0(0, v18[2] + 1, 1, v18);
      v18 = (_QWORD *)result;
      *a4 = result;
    }
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
    {
      result = (uint64_t)sub_1005B1FE0((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
      v18 = (_QWORD *)result;
    }
    v18[2] = v20 + 1;
    v18[v20 + 4] = a1;
    *a4 = (uint64_t)v18;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x80000001007D3970, "Books/MediaAPIMetadataService.swift", 35, 2, 74, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100576A30(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_10060C008(&v14, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100576B88(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[3];

  v3 = 0;
  v17[2] = a2;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_1000345F0(v17, v12, v13);
    swift_bridgeObjectRelease(v17[1]);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100576D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch(sub_100576D24, 0, 0);
}

uint64_t sub_100576D24()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(uint64_t *)(v0 + 24) < 1)
  {
    **(_QWORD **)(v0 + 16) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1009EBE2C);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_100576DA0;
    return sub_100576E34(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_100576DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch(sub_100576E1C, 0, 0);
}

uint64_t sub_100576E1C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v4 = type metadata accessor for MRequestMetadata(0);
  v3[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[23] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v6);
  v3[25] = swift_task_alloc(v6);
  return swift_task_switch(sub_100576EA8, 0, 0);
}

uint64_t sub_100576EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v31;

  v1 = v0[19];
  v2 = *(_QWORD *)(v1 + 16);
  v0[26] = v2;
  if (v2)
  {
    v3 = v0 + 14;
    v4 = (uint64_t *)(v1 + 32);
    swift_bridgeObjectRetain(v1);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v6 = *v4++;
      *v3 = v6;
      v7 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_100043ED0(0, v5[2] + 1, 1, v5);
      v11 = v5[2];
      v10 = v5[3];
      if (v11 >= v10 >> 1)
        v5 = sub_100043ED0((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
      v5[2] = v11 + 1;
      v12 = &v5[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      --v2;
    }
    while (v2);
    v0 = v31;
    swift_bridgeObjectRelease(v31[19]);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v0[27] = v5;
  v13 = v0[20];
  v14 = *(_QWORD *)(v13 + 16);
  v0[28] = v14;
  if (v14)
  {
    v15 = v0 + 9;
    v16 = (uint64_t *)(v13 + 32);
    swift_bridgeObjectRetain(v13);
    v17 = _swiftEmptyArrayStorage;
    do
    {
      v18 = *v16++;
      *v15 = v18;
      v19 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v21 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = sub_100043ED0(0, v17[2] + 1, 1, v17);
      v23 = v17[2];
      v22 = v17[3];
      if (v23 >= v22 >> 1)
        v17 = sub_100043ED0((_QWORD *)(v22 > 1), v23 + 1, 1, v17);
      v17[2] = v23 + 1;
      v24 = &v17[2 * v23];
      v24[4] = v19;
      v24[5] = v21;
      --v14;
    }
    while (v14);
    v0 = v31;
    swift_bridgeObjectRelease(v31[20]);
  }
  else
  {
    v17 = _swiftEmptyArrayStorage;
  }
  v25 = OBJC_IVAR____TtC5Books23MediaAPIMetadataService_catalogService;
  v0[29] = v17;
  v0[30] = v25;
  v26 = qword_1009CE888;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v17);
  if (v26 != -1)
    swift_once(&qword_1009CE888, sub_100574BB8);
  v27 = qword_100A1EC80;
  if (qword_1009CE898 != -1)
    swift_once(&qword_1009CE898, sub_100574C90);
  v28 = qword_100A1EC90;
  MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 143);
  v29 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  v0[31] = v29;
  *v29 = v0;
  v29[1] = sub_100577190;
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v5, v17, v27, 0, v28, 150, v0[25]);
}

uint64_t sub_100577190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  void (*v12)(uint64_t, uint64_t);

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_QWORD *)(*(_QWORD *)v2 + 256) = v1;
  swift_task_dealloc(v5);
  v7 = v4[29];
  v8 = v4[27];
  v9 = v4[25];
  v10 = v4[22];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v10);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease_n(v8, 2);
    v11 = sub_100578274;
  }
  else
  {
    v4[33] = a1;
    v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v4[34] = v12;
    v12(v9, v10);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    v11 = sub_10057725C;
  }
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_10057725C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_log_type_t type;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[2];

  v3 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 64) = v3;
  v4 = (_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 216);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + 232) + 16);
  v8 = __OFADD__(v6, v7);
  v9 = v6 + v7;
  if (v8)
  {
    __break(1u);
LABEL_36:
    swift_once(&qword_1009CE880, sub_100574B3C);
    goto LABEL_4;
  }
  v2 = v1 + 136;
  if (*(_QWORD *)(v3 + 16) != v9)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 216));
    v25 = sub_10003455C(v24);
    swift_bridgeObjectRelease(v5);
    v26 = swift_bridgeObjectRetain(*v4);
    v27 = sub_1003A8DC4(v26);
    v28 = v27;
    if (*(_QWORD *)(v27 + 16) <= *(_QWORD *)(v25 + 16) >> 3)
    {
      v90[0] = v25;
      sub_1000299B4(v27);
      swift_bridgeObjectRelease(v28);
      v29 = (unint64_t *)v25;
    }
    else
    {
      v29 = sub_10057B9F4(v27, v25);
      swift_bridgeObjectRelease(v28);
    }
    v34 = *(_QWORD *)(v1 + 232);
    v32 = sub_100427630((uint64_t)v29);
    *(_QWORD *)(v1 + 280) = v32;
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRetain(v34);
    v36 = sub_10003455C(v35);
    swift_bridgeObjectRelease(v34);
    v37 = swift_bridgeObjectRetain(*(_QWORD *)(v1 + 64));
    v38 = sub_1003A8DC4(v37);
    v39 = v38;
    if (*(_QWORD *)(v38 + 16) <= *(_QWORD *)(v36 + 16) >> 3)
    {
      v90[0] = v36;
      sub_1000299B4(v38);
    }
    else
    {
      v36 = (uint64_t)sub_10057B9F4(v38, v36);
    }
    swift_bridgeObjectRelease(v39);
    v13 = (uint64_t)sub_100427630(v36);
    *(_QWORD *)(v1 + 288) = v13;
    swift_bridgeObjectRelease(v36);
    if (qword_1009CE880 == -1)
      goto LABEL_18;
    goto LABEL_38;
  }
  v89 = v1 + 96;
  v0 = *(_QWORD *)(v1 + 256);
  if (qword_1009CE880 != -1)
    goto LABEL_36;
LABEL_4:
  v11 = *(_QWORD *)(v1 + 152);
  v10 = *(_QWORD *)(v1 + 160);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048F64(v12, (uint64_t)qword_100A1EC68);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v10);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v85 = v2;
    v86 = v0;
    v17 = *(_QWORD *)(v1 + 224);
    v18 = *(_QWORD *)(v1 + 208);
    v19 = swift_slowAlloc(42, -1);
    *(_DWORD *)v19 = 134218752;
    *(_QWORD *)(v1 + 96) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, v1 + 104, v19 + 4, v19 + 12);
    *(_WORD *)(v19 + 12) = 2048;
    *(_QWORD *)(v1 + 104) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 104, v1 + 112, v19 + 14, v19 + 22);
    *(_WORD *)(v19 + 22) = 2048;
    swift_beginAccess(v1 + 64, v1 + 16, 0, 0);
    *(_QWORD *)(v1 + 120) = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 16);
    result = UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 128, v19 + 24, v19 + 32);
    *(_WORD *)(v19 + 32) = 2048;
    v21 = v18 + v17;
    if (__OFADD__(v18, v17))
    {
      __break(1u);
      return result;
    }
    v23 = *(_QWORD *)(v1 + 152);
    v22 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v1 + 128) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 128, v85, v19 + 34, v19 + 42);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "fetchMetadata(typed): requested books: %ld audiobooks: %ld fetched: %ld of %ld", (uint8_t *)v19, 0x2Au);
    swift_slowDealloc(v19, -1, -1);
    v0 = v86;
  }
  else
  {
    v30 = *(_QWORD *)(v1 + 160);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 152));
    swift_bridgeObjectRelease(v30);
  }
  v2 = v1 + 40;

  v31 = *(_QWORD *)(v1 + 224);
  v32 = *(_QWORD **)(v1 + 208);
  swift_beginAccess(v1 + 64, v1 + 40, 0, 0);
  if (__OFADD__(v32, v31))
  {
    __break(1u);
LABEL_38:
    swift_once(&qword_1009CE880, sub_100574B3C);
LABEL_18:
    v40 = type metadata accessor for Logger(0);
    sub_100048F64(v40, (uint64_t)qword_100A1EC68);
    swift_retain(v32);
    swift_retain(v13);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc(22, -1);
      *(_DWORD *)v44 = 134218240;
      *(_QWORD *)(v1 + 136) = v32[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v1 + 144, v44 + 4, v44 + 12);
      swift_release(v32);
      *(_WORD *)(v44 + 12) = 2048;
      *(_QWORD *)(v1 + 144) = *(_QWORD *)(v13 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v44 + 14, v44 + 22);
      swift_release(v13);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "fetchMetadata(typed): retrying: books: %ld audiobooks: %ld", (uint8_t *)v44, 0x16u);
      swift_slowDealloc(v44, -1, -1);
    }
    else
    {
      swift_release(v32);
      swift_release(v13);
    }

    v45 = qword_100A1EC90;
    swift_bridgeObjectRetain(qword_100A1EC90);
    v46 = sub_1000316DC((uint64_t)&off_1008F0F40);
    v47 = sub_1005782F4(v46, v45);
    *(_QWORD *)(v1 + 296) = v47;
    v48 = qword_100A1EC80;
    MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 159);
    v49 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)[1]);
    *(_QWORD *)(v1 + 304) = v49;
    *v49 = v1;
    v49[1] = sub_100577B5C;
    return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v32, v13, v48, 0, v47, 150, *(_QWORD *)(v1 + 192));
  }
  if (*(_QWORD **)(*v4 + 16) == (_QWORD *)((char *)v32 + v31))
  {
    v33 = *(_QWORD *)(v1 + 232);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 216));
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v50 = *(_QWORD *)(v1 + 216);
    v51 = sub_10003455C(v50);
    swift_bridgeObjectRelease(v50);
    v52 = swift_bridgeObjectRetain(*(_QWORD *)(v1 + 64));
    v53 = sub_1003A8DC4(v52);
    v54 = v53;
    if (*(_QWORD *)(v53 + 16) <= *(_QWORD *)(v51 + 16) >> 3)
    {
      v90[0] = v51;
      sub_1000299B4(v53);
      swift_bridgeObjectRelease(v54);
      v55 = (unint64_t *)v51;
    }
    else
    {
      v55 = sub_10057B9F4(v53, v51);
      swift_bridgeObjectRelease(v54);
    }
    v56 = *(_QWORD *)(v1 + 232);
    v57 = sub_10003455C(v56);
    swift_bridgeObjectRelease(v56);
    v58 = swift_bridgeObjectRetain(*(_QWORD *)(v1 + 64));
    v59 = sub_1003A8DC4(v58);
    v60 = v59;
    if (*(_QWORD *)(v59 + 16) <= *(_QWORD *)(v57 + 16) >> 3)
    {
      v90[0] = v57;
      sub_1000299B4(v59);
      swift_bridgeObjectRelease(v60);
      v61 = (unint64_t *)v57;
    }
    else
    {
      v61 = sub_10057B9F4(v59, v57);
      swift_bridgeObjectRelease(v60);
    }
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v61);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc(22, -1);
      v88 = swift_slowAlloc(64, -1);
      v90[0] = v88;
      *(_DWORD *)v65 = 136315394;
      type = v64;
      v66 = swift_bridgeObjectRetain(v55);
      v68 = Set.description.getter(v67, &type metadata for String, &protocol witness table for String, v66);
      v70 = v69;
      swift_bridgeObjectRelease(v55);
      *(_QWORD *)(v1 + 80) = sub_100040F58(v68, v70, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v65 + 4, v65 + 12);
      swift_bridgeObjectRelease(v70);
      swift_bridgeObjectRelease_n(v55, 2);
      *(_WORD *)(v65 + 12) = 2080;
      v71 = swift_bridgeObjectRetain(v61);
      v73 = Set.description.getter(v72, &type metadata for String, &protocol witness table for String, v71);
      v75 = v74;
      swift_bridgeObjectRelease(v61);
      *(_QWORD *)(v1 + 88) = sub_100040F58(v73, v75, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 88, v89, v65 + 14, v65 + 22);
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease_n(v61, 2);
      _os_log_impl((void *)&_mh_execute_header, v63, type, "fetchMetadata(typed): Failed to get genre info. missingBookIDs: %s missingAudiobookIDs: %s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v88, -1, -1);
      swift_slowDealloc(v65, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v55, 2);
      swift_bridgeObjectRelease_n(v61, 2);
    }

  }
  v76 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain(v76);
  sub_1004EE67C(v77);
  v79 = v78;
  swift_bridgeObjectRelease(v76);
  sub_10057DD18(v79);
  if (v0)
  {
    swift_bridgeObjectRelease(v79);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 64));
    v81 = *(_QWORD *)(v1 + 192);
    swift_task_dealloc(*(_QWORD *)(v1 + 200));
    swift_task_dealloc(v81);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v82 = v80;
    v84 = *(_QWORD *)(v1 + 192);
    v83 = *(_QWORD *)(v1 + 200);
    swift_bridgeObjectRelease(v79);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 64));
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v82);
  }
}

uint64_t sub_100577B5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 304);
  *(_QWORD *)(*(_QWORD *)v2 + 312) = v1;
  swift_task_dealloc(v5);
  v6 = v4[36];
  v7 = v4[37];
  v8 = (void (*)(uint64_t, uint64_t))v4[34];
  v9 = v4[35];
  if (v1)
  {
    v10 = v4[29];
    v11 = v4[27];
    v8(v4[24], v4[22]);
    swift_bridgeObjectRelease(v7);
    swift_release(v6);
    swift_release(v9);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    v12 = sub_1005782B0;
  }
  else
  {
    v13 = v4[24];
    v14 = v4[22];
    v4[40] = a1;
    v8(v13, v14);
    swift_bridgeObjectRelease(v7);
    swift_release(v6);
    swift_release(v9);
    v12 = sub_100577C40;
  }
  return swift_task_switch(v12, 0, 0);
}

void sub_100577C40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v2 = (_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 320);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v1);
  v59[0] = v1;
  *(_QWORD *)(v0 + 64) = 0x8000000000000000;
  sub_10057B558(v3, (uint64_t)sub_10057D070, 0, isUniquelyReferenced_nonNull_native, v59, (void (*)(void))sub_1002C1930, (void (*)(void))sub_10037CEC8);
  if (v4)
  {
    swift_bridgeObjectRelease(*v2);
    return;
  }
  v6 = v0 + 96;
  v7 = *v2;
  *v2 = v59[0];
  swift_bridgeObjectRelease(v7);
  if (qword_1009CE880 != -1)
    swift_once(&qword_1009CE880, sub_100574B3C);
  v9 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 160);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_100A1EC68);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 208);
    v16 = swift_slowAlloc(42, -1);
    *(_DWORD *)v16 = 134218752;
    *(_QWORD *)(v0 + 96) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v16 + 4, v16 + 12);
    *(_WORD *)(v16 + 12) = 2048;
    *(_QWORD *)(v0 + 104) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v16 + 14, v16 + 22);
    *(_WORD *)(v16 + 22) = 2048;
    swift_beginAccess(v0 + 64, v0 + 16, 0, 0);
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v16 + 24, v16 + 32);
    *(_WORD *)(v16 + 32) = 2048;
    v17 = v15 + v14;
    if (__OFADD__(v15, v14))
    {
LABEL_24:
      __break(1u);
      return;
    }
    v19 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 128) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v16 + 34, v16 + 42);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "fetchMetadata(typed): requested books: %ld audiobooks: %ld fetched: %ld of %ld", (uint8_t *)v16, 0x2Au);
    swift_slowDealloc(v16, -1, -1);
    v6 = v0 + 96;
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
    swift_bridgeObjectRelease(v20);
  }

  v21 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 208);
  swift_beginAccess(v0 + 64, v0 + 40, 0, 0);
  if (__OFADD__(v22, v21))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (*(_QWORD *)(*v2 + 16) == v22 + v21)
  {
    v23 = *(_QWORD *)(v0 + 232);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    v25 = sub_10003455C(v24);
    swift_bridgeObjectRelease(v24);
    v26 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 64));
    v27 = sub_1003A8DC4(v26);
    v28 = v27;
    if (*(_QWORD *)(v27 + 16) <= *(_QWORD *)(v25 + 16) >> 3)
    {
      v59[0] = v25;
      sub_1000299B4(v27);
      swift_bridgeObjectRelease(v28);
      v29 = (unint64_t *)v59[0];
    }
    else
    {
      v29 = sub_10057B9F4(v27, v25);
      swift_bridgeObjectRelease(v28);
    }
    v30 = *(_QWORD *)(v0 + 232);
    v31 = sub_10003455C(v30);
    swift_bridgeObjectRelease(v30);
    v32 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 64));
    v33 = sub_1003A8DC4(v32);
    v34 = v33;
    if (*(_QWORD *)(v33 + 16) <= *(_QWORD *)(v31 + 16) >> 3)
    {
      v59[0] = v31;
      sub_1000299B4(v33);
      swift_bridgeObjectRelease(v34);
      v35 = (unint64_t *)v59[0];
    }
    else
    {
      v35 = sub_10057B9F4(v33, v31);
      swift_bridgeObjectRelease(v34);
    }
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v35);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      *(_DWORD *)v39 = 136315394;
      v59[0] = v58;
      v40 = swift_bridgeObjectRetain(v29);
      v42 = Set.description.getter(v41, &type metadata for String, &protocol witness table for String, v40);
      v44 = v43;
      swift_bridgeObjectRelease(v29);
      *(_QWORD *)(v0 + 80) = sub_100040F58(v42, v44, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease_n(v29, 2);
      *(_WORD *)(v39 + 12) = 2080;
      v45 = swift_bridgeObjectRetain(v35);
      v47 = Set.description.getter(v46, &type metadata for String, &protocol witness table for String, v45);
      v49 = v48;
      swift_bridgeObjectRelease(v35);
      *(_QWORD *)(v0 + 88) = sub_100040F58(v47, v49, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v6, v39 + 14, v39 + 22);
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease_n(v35, 2);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "fetchMetadata(typed): Failed to get genre info. missingBookIDs: %s missingAudiobookIDs: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v29, 2);
      swift_bridgeObjectRelease_n(v35, 2);
    }

  }
  v50 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(v50);
  sub_1004EE67C(v51);
  v53 = v52;
  swift_bridgeObjectRelease(v50);
  sub_10057DD18(v53);
  v55 = v54;
  v57 = *(_QWORD *)(v0 + 192);
  v56 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  (*(void (**)(uint64_t))(v0 + 8))(v55);
}

uint64_t sub_100578274()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005782B0()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005782F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_10057B20C(a1, (uint64_t)sub_10057D074, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2)
    swift_bridgeObjectRelease(v6);
  return v6;
}

uint64_t sub_100578370(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for MRequestMetadata(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005783D0, 0, 0);
}

uint64_t sub_1005783D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_1005746E0(*(_QWORD *)(v0 + 40));
  v2 = v1;
  v3 = sub_10003455C(v1);
  swift_bridgeObjectRelease(v2);
  *(_QWORD *)(v0 + 16) = _swiftEmptyDictionarySingleton;
  if (*(_QWORD *)(v3 + 16))
  {
    *(_QWORD *)(v0 + 80) = OBJC_IVAR____TtC5Books23MediaAPIMetadataService_catalogService;
    v4 = sub_100427630(v3);
    *(_QWORD *)(v0 + 88) = v4;
    swift_bridgeObjectRelease(v3);
    if (qword_1009CE890 != -1)
      swift_once(&qword_1009CE890, sub_100574C7C);
    v5 = qword_100A1EC88;
    if (qword_1009CE8A0 != -1)
      swift_once(&qword_1009CE8A0, sub_100574D44);
    v6 = qword_100A1EC98;
    MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 187);
    v7 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(genreIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_1005785EC;
    return MCatalogService.fetch(genreIDs:relationships:views:additionalParameters:batchSize:metadata:)(v4, v5, 0, v6, 150, *(_QWORD *)(v0 + 72));
  }
  else
  {
    swift_bridgeObjectRelease(v3);
    v9 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
    v11 = sub_100427BF8(v10);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    v12 = sub_10057DB7C((uint64_t)v11);
    swift_release(v11);
    *(_QWORD *)(v0 + 32) = v12;
    v13 = sub_10004CFD4(&qword_1009EBE50);
    v14 = sub_10057EA80();
    v15 = Sequence.hashedUniquely<A>(by:)(sub_100578BD0, 0, v13, &type metadata for UInt64, v14, &protocol witness table for UInt64);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
  }
}

uint64_t sub_1005785EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc(v4);
  v5 = v3[11];
  (*(void (**)(_QWORD, _QWORD))(v3[8] + 8))(v3[9], v3[7]);
  swift_release(v5);
  if (v1)
    v6 = sub_100578B90;
  else
    v6 = sub_10057867C;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10057867C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int64_t v53;
  _QWORD *v54;

  v1 = v0[13];
  swift_bridgeObjectRetain(v1);
  v2 = v0 + 2;
  v3 = (_QWORD *)v0[2];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  v50 = (uint64_t)(v0 + 2);
  v51 = v0;
  v0[3] = v3;
  v5 = v0 + 3;
  *v2 = 0x8000000000000000;
  v52 = v1 + 64;
  v6 = -1;
  v7 = -1 << *(_BYTE *)(v1 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(v1 + 64);
  v53 = (unint64_t)(63 - v7) >> 6;
  v54 = v5;
  swift_bridgeObjectRetain(v1);
  v9 = 0;
  if (v8)
    goto LABEL_6;
LABEL_7:
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once(&qword_1009CE890, sub_100574C7C);
    goto LABEL_35;
  }
  if (v14 < v53)
  {
    v15 = *(_QWORD *)(v52 + 8 * v14);
    ++v9;
    if (v15)
      goto LABEL_22;
    v9 = v14 + 1;
    if (v14 + 1 >= v53)
      goto LABEL_33;
    v15 = *(_QWORD *)(v52 + 8 * v9);
    if (v15)
      goto LABEL_22;
    v9 = v14 + 2;
    if (v14 + 2 >= v53)
      goto LABEL_33;
    v15 = *(_QWORD *)(v52 + 8 * v9);
    if (v15)
      goto LABEL_22;
    v9 = v14 + 3;
    if (v14 + 3 >= v53)
      goto LABEL_33;
    v15 = *(_QWORD *)(v52 + 8 * v9);
    if (v15)
    {
LABEL_22:
      v8 = (v15 - 1) & v15;
      for (i = __clz(__rbit64(v15)) + (v9 << 6); ; i = v12 | (v9 << 6))
      {
        v17 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
        v19 = *v17;
        v18 = v17[1];
        v20 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
        swift_bridgeObjectRetain(v18);
        v21 = v20;
        v23 = sub_10004CE80(v19, v18);
        v24 = v3[2];
        v25 = (v22 & 1) == 0;
        v26 = v24 + v25;
        if (__OFADD__(v24, v25))
          break;
        v27 = v22;
        if (v3[3] >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1002C193C();
        }
        else
        {
          sub_10037CED4(v26, isUniquelyReferenced_nonNull_native & 1);
          v28 = sub_10004CE80(v19, v18);
          if ((v27 & 1) != (v29 & 1))
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          v23 = v28;
        }
        v3 = (_QWORD *)*v54;
        if ((v27 & 1) != 0)
        {
          v10 = *(id *)(v3[7] + 8 * v23);

          swift_bridgeObjectRelease(v18);
          v11 = v3[7];

          *(_QWORD *)(v11 + 8 * v23) = v10;
          isUniquelyReferenced_nonNull_native = 1;
          if (!v8)
            goto LABEL_7;
        }
        else
        {
          v3[(v23 >> 6) + 8] |= 1 << v23;
          v30 = (uint64_t *)(v3[6] + 16 * v23);
          *v30 = v19;
          v30[1] = v18;
          *(_QWORD *)(v3[7] + 8 * v23) = v21;
          v31 = v3[2];
          v32 = __OFADD__(v31, 1);
          v33 = v31 + 1;
          if (v32)
            goto LABEL_41;
          v3[2] = v33;
          isUniquelyReferenced_nonNull_native = 1;
          if (!v8)
            goto LABEL_7;
        }
LABEL_6:
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v16 = v14 + 4;
    if (v16 < v53)
    {
      v15 = *(_QWORD *)(v52 + 8 * v16);
      if (!v15)
      {
        while (1)
        {
          v9 = v16 + 1;
          if (__OFADD__(v16, 1))
            goto LABEL_43;
          if (v9 >= v53)
            goto LABEL_33;
          v15 = *(_QWORD *)(v52 + 8 * v9);
          ++v16;
          if (v15)
            goto LABEL_22;
        }
      }
      v9 = v16;
      goto LABEL_22;
    }
  }
LABEL_33:
  isUniquelyReferenced_nonNull_native = (uint64_t)v51;
  v34 = v51[13];
  swift_bridgeObjectRelease(v34);
  swift_release(v34);
  v51[2] = v3;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1005748F4(v34, v50);
  v36 = v35;
  swift_bridgeObjectRelease(v34);
  v37 = sub_10003455C(v36);
  swift_bridgeObjectRelease(v36);
  if (!*(_QWORD *)(v37 + 16))
  {
    swift_bridgeObjectRelease(v37);
    v42 = v51[2];
    v43 = v51[9];
    swift_bridgeObjectRetain(v42);
    v45 = sub_100427BF8(v44);
    swift_bridgeObjectRelease(v42);
    v46 = sub_10057DB7C((uint64_t)v45);
    swift_release(v45);
    v51[4] = v46;
    v47 = sub_10004CFD4(&qword_1009EBE50);
    v48 = sub_10057EA80();
    v49 = Sequence.hashedUniquely<A>(by:)(sub_100578BD0, 0, v47, &type metadata for UInt64, v48, &protocol witness table for UInt64);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v42);
    swift_task_dealloc(v43);
    return ((uint64_t (*)(uint64_t))v51[1])(v49);
  }
  v8 = (unint64_t)sub_100427630(v37);
  v51[11] = v8;
  swift_bridgeObjectRelease(v37);
  if (qword_1009CE890 != -1)
    goto LABEL_44;
LABEL_35:
  v38 = qword_100A1EC88;
  if (qword_1009CE8A0 != -1)
    swift_once(&qword_1009CE8A0, sub_100574D44);
  v39 = qword_100A1EC98;
  MRequestMetadata.init(_:_:)(0xD000000000000023, 0x80000001007D38F0, 187);
  v40 = (uint64_t *)swift_task_alloc(async function pointer to MCatalogService.fetch(genreIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 96) = v40;
  *v40 = isUniquelyReferenced_nonNull_native;
  v40[1] = (uint64_t)sub_1005785EC;
  return MCatalogService.fetch(genreIDs:relationships:views:additionalParameters:batchSize:metadata:)(v8, v38, 0, v39, 150, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72));
}

uint64_t sub_100578B90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100578BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Book.Metadata.GenreTreeNode.genreID.getter();
  *a1 = result;
  return result;
}

void sub_100578BF8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v6 = sub_10004CFD4(&qword_1009EBE40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(&unk_100910D50, v11 + v8, v10 | 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10057EA3C;
  v17 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_100910D68;
  v13 = _Block_copy(aBlock);
  v14 = v17;
  v15 = a2;
  swift_bridgeObjectRetain(a3);
  objc_msgSend(v15, "performBackgroundReadOnlyBlock:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
}

uint64_t sub_100578D44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  BOOL v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned __int8 v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t);
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  unsigned int v76;
  unsigned __int8 v77;
  unint64_t v78;
  uint64_t v79;
  unsigned __int8 *v80;
  unsigned int v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unsigned int v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  unsigned int v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[4];

  v89 = a4;
  v6 = type metadata accessor for Book.MediaType(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  __chkstk_darwin(v6);
  v92 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v91 = (char *)&v86 - v9;
  __chkstk_darwin(v10);
  v97 = (char *)&v86 - v11;
  __chkstk_darwin(v12);
  v96 = (char *)&v86 - v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a2, "libraryAssetsWithAssetIDs:inManagedObjectContext:", isa, a1);

  v16 = sub_100033F5C();
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if ((unint64_t)v17 >> 62)
  {
LABEL_93:
    if (v17 < 0)
      v83 = v17;
    else
      v83 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease(v17);
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
LABEL_3:
      v19 = 0;
      v20 = 0;
      v21 = v17 & 0xC000000000000001;
      v98 = v17 + 32;
      v99 = v17 & 0xFFFFFFFFFFFFFF8;
      v87 = (char *)v103 + 2;
      v88 = (char *)v103 + 3;
      v90 = enum case for Book.MediaType.audiobook(_:);
      v22 = _swiftEmptyDictionarySingleton;
      v95 = enum case for Book.MediaType.ebook(_:);
      v93 = v18;
      v94 = v17 & 0xC000000000000001;
      while (1)
      {
        if (v21)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
        }
        else
        {
          if (v19 >= *(_QWORD *)(v99 + 16))
            goto LABEL_88;
          v23 = *(id *)(v98 + 8 * v19);
        }
        v24 = v23;
        v25 = __OFADD__(v19++, 1);
        if (v25)
        {
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
          goto LABEL_93;
        }
        v26 = objc_msgSend(v23, "assetID");
        if (!v26)
          goto LABEL_4;
        v27 = v26;
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v30 = v29;

        v31 = HIBYTE(v30) & 0xF;
        v32 = v28 & 0xFFFFFFFFFFFFLL;
        if ((v30 & 0x2000000000000000) != 0)
          v33 = HIBYTE(v30) & 0xF;
        else
          v33 = v28 & 0xFFFFFFFFFFFFLL;
        if (!v33)
        {

          swift_bridgeObjectRelease(v30);
          goto LABEL_5;
        }
        if ((v30 & 0x1000000000000000) != 0)
        {
          v35 = sub_1003277FC(v28, v30, 10);
          v37 = v82;
          goto LABEL_48;
        }
        if ((v30 & 0x2000000000000000) == 0)
        {
          if ((v28 & 0x1000000000000000) != 0)
            v34 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v34 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v28, v30);
          v35 = (unint64_t)sub_1003276EC(v34, v32, 10);
          v37 = v36 & 1;
          goto LABEL_48;
        }
        v103[0] = v28;
        v103[1] = v30 & 0xFFFFFFFFFFFFFFLL;
        if (v28 == 43)
          break;
        if (v28 != 45)
        {
          if (v31 && (v28 - 48) <= 9u)
          {
            v35 = (v28 - 48);
            if (v31 == 1)
              goto LABEL_47;
            if ((BYTE1(v28) - 48) <= 9u)
            {
              v35 = 10 * (v28 - 48) + (BYTE1(v28) - 48);
              v74 = v31 - 2;
              if (!v74)
                goto LABEL_47;
              v75 = (unsigned __int8 *)v87;
              while (1)
              {
                v76 = *v75 - 48;
                if (v76 > 9)
                  break;
                if (!is_mul_ok(v35, 0xAuLL))
                  break;
                v39 = __CFADD__(10 * v35, v76);
                v35 = 10 * v35 + v76;
                if (v39)
                  break;
                v37 = 0;
                ++v75;
                if (!--v74)
                  goto LABEL_48;
              }
            }
          }
          goto LABEL_44;
        }
        if (!v31)
          goto LABEL_91;
        if (v31 == 1)
          goto LABEL_44;
        v38 = BYTE1(v28) - 48;
        if ((BYTE1(v28) - 48) > 9u)
          goto LABEL_44;
        v35 = 0;
        v39 = v38 == 0;
        v40 = -(uint64_t)v38;
        if (!v39)
          goto LABEL_45;
        if (v31 != 2)
        {
          v77 = BYTE2(v28) - 48;
          if ((BYTE2(v28) - 48) <= 9u && is_mul_ok(v40, 0xAuLL))
          {
            v78 = 10 * v40;
            v35 = v78 - v77;
            if (v78 >= v77)
            {
              v79 = v31 - 3;
              if (!v79)
              {
LABEL_47:
                v37 = 0;
                goto LABEL_48;
              }
              v80 = (unsigned __int8 *)v88;
              while (1)
              {
                v81 = *v80 - 48;
                if (v81 > 9)
                  break;
                if (!is_mul_ok(v35, 0xAuLL))
                  break;
                v39 = 10 * v35 >= v81;
                v35 = 10 * v35 - v81;
                if (!v39)
                  break;
                v37 = 0;
                ++v80;
                if (!--v79)
                  goto LABEL_48;
              }
            }
          }
          goto LABEL_44;
        }
        v37 = 0;
        v35 = v40;
LABEL_48:
        *(_QWORD *)&v44 = swift_bridgeObjectRelease(v30).n128_u64[0];
        if ((v37 & 1) == 0)
        {
          if (objc_msgSend(v24, "isBook", v44))
          {
            v102 = v20;
            v45 = v17;
            v46 = v100;
            v47 = v96;
            v48 = v35;
            v49 = v101;
            (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v96, v95, v101);
            v17 = *(_QWORD *)(v46 + 32);
            ((void (*)(char *, char *, uint64_t))v17)(v97, v47, v49);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
            v103[0] = v22;
            v52 = sub_1002C8328(v48);
            v53 = v22[2];
            v54 = (v51 & 1) == 0;
            v55 = v53 + v54;
            if (__OFADD__(v53, v54))
              goto LABEL_89;
            v56 = v51;
            if (v22[3] >= v55)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v59 = (_QWORD *)v103[0];
                if ((v51 & 1) == 0)
                  goto LABEL_54;
              }
              else
              {
                sub_1002C1AF0();
                v59 = (_QWORD *)v103[0];
                if ((v56 & 1) == 0)
                  goto LABEL_54;
              }
            }
            else
            {
              sub_10037CEE0(v55, isUniquelyReferenced_nonNull_native);
              v57 = sub_1002C8328(v48);
              if ((v56 & 1) != (v58 & 1))
              {
                result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
                __break(1u);
                return result;
              }
              v52 = v57;
              v59 = (_QWORD *)v103[0];
              if ((v56 & 1) == 0)
              {
LABEL_54:
                v59[(v52 >> 6) + 8] |= 1 << v52;
                *(_QWORD *)(v59[6] + 8 * v52) = v48;
                ((void (*)(unint64_t, char *, uint64_t))v17)(v59[7] + *(_QWORD *)(v100 + 72) * v52, v97, v101);
                v60 = v59[2];
                v25 = __OFADD__(v60, 1);
                v61 = v60 + 1;
                if (v25)
                  goto LABEL_92;
                v59[2] = v61;
                goto LABEL_61;
              }
            }
            (*(void (**)(unint64_t, char *, uint64_t))(v100 + 40))(v59[7] + *(_QWORD *)(v100 + 72) * v52, v97, v101);
LABEL_61:
            v22 = (_QWORD *)v103[0];

            swift_bridgeObjectRelease(0x8000000000000000);
            v17 = v45;
            v18 = v93;
            v21 = v94;
            v20 = v102;
            goto LABEL_5;
          }
          if (objc_msgSend(v24, "isAudiobook"))
          {
            v62 = v100;
            v63 = *(void (**)(char *, _QWORD, uint64_t))(v100 + 104);
            v64 = v91;
            v102 = v20;
            v65 = v18;
            v66 = v21;
            v67 = v17;
            v68 = v35;
            v69 = v101;
            v63(v91, v90, v101);
            v70 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
            v71 = (uint64_t)v92;
            v70(v92, v64, v69);
            v72 = swift_isUniquelyReferenced_nonNull_native(v22);
            v103[0] = v22;
            v73 = v68;
            v17 = v67;
            v21 = v66;
            v18 = v65;
            v20 = v102;
            sub_1002C4F10(v71, v73, v72);
            v22 = (_QWORD *)v103[0];

            swift_bridgeObjectRelease(0x8000000000000000);
            goto LABEL_5;
          }
        }
LABEL_4:

LABEL_5:
        if (v19 == v18)
        {
          swift_bridgeObjectRelease(v17);
          goto LABEL_98;
        }
      }
      if (!v31)
        goto LABEL_90;
      if (v31 != 1 && (BYTE1(v28) - 48) <= 9u)
      {
        v35 = (BYTE1(v28) - 48);
        if (v31 == 2)
          goto LABEL_47;
        if ((BYTE2(v28) - 48) <= 9u)
        {
          v35 = 10 * (BYTE1(v28) - 48) + (BYTE2(v28) - 48);
          v41 = v31 - 3;
          if (!v41)
            goto LABEL_47;
          v42 = (unsigned __int8 *)v88;
          while (1)
          {
            v43 = *v42 - 48;
            if (v43 > 9)
              break;
            if (!is_mul_ok(v35, 0xAuLL))
              break;
            v39 = __CFADD__(10 * v35, v43);
            v35 = 10 * v35 + v43;
            if (v39)
              break;
            v37 = 0;
            ++v42;
            if (!--v41)
              goto LABEL_48;
          }
        }
      }
LABEL_44:
      v35 = 0;
LABEL_45:
      v37 = 1;
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease(v17);
  v22 = _swiftEmptyDictionarySingleton;
LABEL_98:
  v103[0] = v22;
  v84 = sub_10004CFD4(&qword_1009EBE40);
  return CheckedContinuation.resume(returning:)(v103, v84);
}

uint64_t sub_1005794BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  void *v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned __int8 v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  unsigned __int8 v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD v50[3];

  v2 = type metadata accessor for Book.MediaType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for Book.MediaType.ebook(_:))
  {
    v8 = (uint64_t *)&BFMCatalogRequestRelationshipMappedAudiobooks;
  }
  else
  {
    if (v7 != enum case for Book.MediaType.audiobook(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v12 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        goto LABEL_9;
LABEL_81:
      if (v12 < 0)
        v45 = v12;
      else
        v45 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v12, 2);
      v13 = _CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v12);
      if (v13)
        goto LABEL_10;
LABEL_85:
      v15 = _swiftEmptyArrayStorage;
LABEL_86:
      swift_bridgeObjectRelease_n(v12, 2);
      return (uint64_t)v15;
    }
    v8 = (uint64_t *)&BFMCatalogRequestRelationshipMappedBooks;
  }
  v9 = *v8;
  v10 = type metadata accessor for MAsset(0);
  v11 = MResource.resources<A>(for:)(v9, v10);
  if (v11)
    v12 = v11;
  else
    v12 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v12 >> 62)
    goto LABEL_81;
LABEL_9:
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v12);
  if (!v13)
    goto LABEL_85;
LABEL_10:
  v14 = 0;
  v47 = (char *)v50 + 2;
  v48 = (char *)v50 + 3;
  v49 = v12 + 32;
  v15 = _swiftEmptyArrayStorage;
  while (1)
  {
    result = (v12 & 0xC000000000000001) != 0
           ? specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12)
           : (uint64_t)*(id *)(v49 + 8 * v14);
    v17 = (void *)result;
    if (__OFADD__(v14++, 1))
      break;
    result = MResource.id.getter(result);
    v20 = v19;
    v21 = HIBYTE(v19) & 0xF;
    v22 = result & 0xFFFFFFFFFFFFLL;
    if ((v20 & 0x2000000000000000) != 0)
      v23 = v21;
    else
      v23 = result & 0xFFFFFFFFFFFFLL;
    if (v23)
    {
      if ((v20 & 0x1000000000000000) != 0)
      {
        v25 = sub_1003277FC(result, v20, 10);
        v27 = v44;
        goto LABEL_53;
      }
      if ((v20 & 0x2000000000000000) == 0)
      {
        if ((result & 0x1000000000000000) != 0)
          v24 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v24 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v20);
        v25 = (unint64_t)sub_1003276EC(v24, v22, 10);
        v27 = v26 & 1;
LABEL_53:

        swift_bridgeObjectRelease(v20);
        if ((v27 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
            v15 = sub_1005B1FE0(0, v15[2] + 1, 1, v15);
          v35 = v15[2];
          v34 = v15[3];
          if (v35 >= v34 >> 1)
            v15 = sub_1005B1FE0((_QWORD *)(v34 > 1), v35 + 1, 1, v15);
          v15[2] = v35 + 1;
          v15[v35 + 4] = v25;
        }
        goto LABEL_12;
      }
      v50[0] = result;
      v50[1] = v20 & 0xFFFFFFFFFFFFFFLL;
      if (result == 43)
      {
        if (!v21)
          goto LABEL_89;
        if (v21 == 1 || (BYTE1(result) - 48) > 9u)
          goto LABEL_49;
        v25 = (BYTE1(result) - 48);
        if (v21 == 2)
          goto LABEL_52;
        if ((BYTE2(result) - 48) <= 9u)
        {
          v25 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          v31 = v21 - 3;
          if (v31)
          {
            v32 = (unsigned __int8 *)v48;
            while (1)
            {
              v33 = *v32 - 48;
              if (v33 > 9)
                goto LABEL_49;
              if (!is_mul_ok(v25, 0xAuLL))
                goto LABEL_49;
              v29 = __CFADD__(10 * v25, v33);
              v25 = 10 * v25 + v33;
              if (v29)
                goto LABEL_49;
              v27 = 0;
              ++v32;
              if (!--v31)
                goto LABEL_53;
            }
          }
          goto LABEL_52;
        }
      }
      else if (result == 45)
      {
        if (!v21)
          goto LABEL_88;
        if (v21 != 1)
        {
          v28 = BYTE1(result) - 48;
          if ((BYTE1(result) - 48) <= 9u)
          {
            v25 = 0;
            v29 = v28 == 0;
            v30 = -(uint64_t)v28;
            if (!v29)
              goto LABEL_50;
            if (v21 == 2)
            {
              v27 = 0;
              v25 = v30;
              goto LABEL_53;
            }
            v39 = BYTE2(result) - 48;
            if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v30, 0xAuLL))
            {
              v40 = 10 * v30;
              v25 = v40 - v39;
              if (v40 >= v39)
              {
                v41 = v21 - 3;
                if (v41)
                {
                  v42 = (unsigned __int8 *)v48;
                  while (1)
                  {
                    v43 = *v42 - 48;
                    if (v43 > 9)
                      goto LABEL_49;
                    if (!is_mul_ok(v25, 0xAuLL))
                      goto LABEL_49;
                    v29 = 10 * v25 >= v43;
                    v25 = 10 * v25 - v43;
                    if (!v29)
                      goto LABEL_49;
                    v27 = 0;
                    ++v42;
                    if (!--v41)
                      goto LABEL_53;
                  }
                }
LABEL_52:
                v27 = 0;
                goto LABEL_53;
              }
            }
          }
        }
      }
      else if (v21 && (result - 48) <= 9u)
      {
        v25 = (result - 48);
        if (v21 == 1)
          goto LABEL_52;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v25 = 10 * (result - 48) + (BYTE1(result) - 48);
          v36 = v21 - 2;
          if (v36)
          {
            v37 = (unsigned __int8 *)v47;
            while (1)
            {
              v38 = *v37 - 48;
              if (v38 > 9)
                goto LABEL_49;
              if (!is_mul_ok(v25, 0xAuLL))
                goto LABEL_49;
              v29 = __CFADD__(10 * v25, v38);
              v25 = 10 * v25 + v38;
              if (v29)
                goto LABEL_49;
              v27 = 0;
              ++v37;
              if (!--v36)
                goto LABEL_53;
            }
          }
          goto LABEL_52;
        }
      }
LABEL_49:
      v25 = 0;
LABEL_50:
      v27 = 1;
      goto LABEL_53;
    }

    swift_bridgeObjectRelease(v20);
LABEL_12:
    if (v14 == v13)
      goto LABEL_86;
  }
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
  return result;
}

void *sub_1005799C4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unint64_t v20;
  char v21;
  unsigned __int8 v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned __int8 v32;
  unint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];

  v1 = type metadata accessor for MBook(0);
  if (swift_dynamicCastClass(v0, v1) || (v2 = type metadata accessor for MAudiobook(), swift_dynamicCastClass(v0, v2)))
  {
    v3 = v0;
    v4 = MAsset.authors.getter();

    if (v4)
      v5 = v4;
    else
      v5 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v5 >> 62)
      goto LABEL_82;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    v43 = v5;
    while (v6)
    {
      v7 = 0;
      v8 = v5 & 0xC000000000000001;
      v42 = v5 + 32;
      v9 = _swiftEmptyArrayStorage;
      while (1)
      {
        v10 = v8 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v43) : *(id *)(v42 + 8 * v7);
        v11 = v10;
        if (__OFADD__(v7++, 1))
          break;
        v13 = MResource.id.getter(v10);
        v15 = v14;
        v16 = HIBYTE(v14) & 0xF;
        v17 = v13 & 0xFFFFFFFFFFFFLL;
        if ((v15 & 0x2000000000000000) != 0)
          v18 = v16;
        else
          v18 = v13 & 0xFFFFFFFFFFFFLL;
        if (v18)
        {
          if ((v15 & 0x1000000000000000) != 0)
          {
            v20 = sub_1003277FC(v13, v15, 10);
            v5 = v37;
            goto LABEL_51;
          }
          if ((v15 & 0x2000000000000000) == 0)
          {
            if ((v13 & 0x1000000000000000) != 0)
              v19 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v19 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v13, v15);
            v20 = (unint64_t)sub_1003276EC(v19, v17, 10);
            v5 = v21 & 1;
LABEL_51:

            swift_bridgeObjectRelease(v15);
            if ((v5 & 1) == 0)
            {
              if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
                v9 = sub_1005B1FE0(0, v9[2] + 1, 1, v9);
              v5 = v9[2];
              v28 = v9[3];
              if (v5 >= v28 >> 1)
                v9 = sub_1005B1FE0((_QWORD *)(v28 > 1), v5 + 1, 1, v9);
              v9[2] = v5 + 1;
              v9[v5 + 4] = v20;
            }
            goto LABEL_10;
          }
          v44[0] = v13;
          v44[1] = v15 & 0xFFFFFFFFFFFFFFLL;
          if (v13 == 43)
          {
            if (!v16)
              goto LABEL_81;
            if (v16 == 1 || (BYTE1(v13) - 48) > 9u)
              goto LABEL_47;
            v20 = (BYTE1(v13) - 48);
            if (v16 == 2)
              goto LABEL_50;
            if ((BYTE2(v13) - 48) <= 9u)
            {
              v20 = 10 * (BYTE1(v13) - 48) + (BYTE2(v13) - 48);
              v25 = v16 - 3;
              if (v25)
              {
                v26 = (unsigned __int8 *)v44 + 3;
                while (1)
                {
                  v27 = *v26 - 48;
                  if (v27 > 9)
                    goto LABEL_47;
                  if (!is_mul_ok(v20, 0xAuLL))
                    goto LABEL_47;
                  v23 = __CFADD__(10 * v20, v27);
                  v20 = 10 * v20 + v27;
                  if (v23)
                    goto LABEL_47;
                  v5 = 0;
                  ++v26;
                  if (!--v25)
                    goto LABEL_51;
                }
              }
              goto LABEL_50;
            }
          }
          else if (v13 == 45)
          {
            if (!v16)
              goto LABEL_80;
            if (v16 != 1)
            {
              v22 = BYTE1(v13) - 48;
              if ((BYTE1(v13) - 48) <= 9u)
              {
                v20 = 0;
                v23 = v22 == 0;
                v24 = -(uint64_t)v22;
                if (!v23)
                  goto LABEL_48;
                if (v16 == 2)
                {
                  v5 = 0;
                  v20 = v24;
                  goto LABEL_51;
                }
                v32 = BYTE2(v13) - 48;
                if ((BYTE2(v13) - 48) <= 9u && is_mul_ok(v24, 0xAuLL))
                {
                  v33 = 10 * v24;
                  v20 = v33 - v32;
                  if (v33 >= v32)
                  {
                    v34 = v16 - 3;
                    if (v34)
                    {
                      v35 = (unsigned __int8 *)v44 + 3;
                      while (1)
                      {
                        v36 = *v35 - 48;
                        if (v36 > 9)
                          goto LABEL_47;
                        if (!is_mul_ok(v20, 0xAuLL))
                          goto LABEL_47;
                        v23 = 10 * v20 >= v36;
                        v20 = 10 * v20 - v36;
                        if (!v23)
                          goto LABEL_47;
                        v5 = 0;
                        ++v35;
                        if (!--v34)
                          goto LABEL_51;
                      }
                    }
LABEL_50:
                    v5 = 0;
                    goto LABEL_51;
                  }
                }
              }
            }
          }
          else if (v16 && (v13 - 48) <= 9u)
          {
            v20 = (v13 - 48);
            if (v16 == 1)
              goto LABEL_50;
            if ((BYTE1(v13) - 48) <= 9u)
            {
              v20 = 10 * (v13 - 48) + (BYTE1(v13) - 48);
              v29 = v16 - 2;
              if (v29)
              {
                v30 = (unsigned __int8 *)v44 + 2;
                while (1)
                {
                  v31 = *v30 - 48;
                  if (v31 > 9)
                    goto LABEL_47;
                  if (!is_mul_ok(v20, 0xAuLL))
                    goto LABEL_47;
                  v23 = __CFADD__(10 * v20, v31);
                  v20 = 10 * v20 + v31;
                  if (v23)
                    goto LABEL_47;
                  v5 = 0;
                  ++v30;
                  if (!--v29)
                    goto LABEL_51;
                }
              }
              goto LABEL_50;
            }
          }
LABEL_47:
          v20 = 0;
LABEL_48:
          v5 = 1;
          goto LABEL_51;
        }

        swift_bridgeObjectRelease(v15);
LABEL_10:
        if (v7 == v6)
          goto LABEL_87;
      }
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      if (v5 < 0)
        v40 = v5;
      else
        v40 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v5, 2);
      v6 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease(v5);
      v43 = v5;
    }
    v9 = _swiftEmptyArrayStorage;
LABEL_87:
    swift_bridgeObjectRelease_n(v43, 2);
    v0 = (void *)sub_1003ACD10((uint64_t)v9);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v38 = sub_10057E968();
    v39 = swift_allocError(&type metadata for MediaAPIMetadataService.Errors, v38, 0, 0);
    swift_willThrow(v39);
  }
  return v0;
}

uint64_t sub_100579E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  double v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  double v19;

  if ((sub_10032442C(a1, a2) & 1) != 0)
  {
    v8 = type metadata accessor for Book.Metadata.GenreTreeNode(0, v7);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v10 = a4;
    v11 = 1;
  }
  else
  {
    if (*(_QWORD *)(a3 + 16))
    {
      v12 = sub_1002C8328(a1);
      v13 = _swiftEmptyArrayStorage;
      if ((v14 & 1) != 0)
      {
        do
        {
          v15 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12);
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_1005B1FE0(0, v13[2] + 1, 1, v13);
          v17 = v13[2];
          v16 = v13[3];
          if (v17 >= v16 >> 1)
            v13 = sub_1005B1FE0((_QWORD *)(v16 > 1), v17 + 1, 1, v13);
          v13[2] = v17 + 1;
          v13[v17 + 4] = v15;
          if (!*(_QWORD *)(a3 + 16))
            break;
          v12 = sub_1002C8328(v15);
        }
        while ((v18 & 1) != 0);
      }
    }
    else
    {
      v13 = _swiftEmptyArrayStorage;
    }
    v19 = Book.Metadata.GenreTreeNode.init(genreID:path:)(a1, v13);
    v8 = type metadata accessor for Book.Metadata.GenreTreeNode(0, v19);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v10 = a4;
    v11 = 0;
  }
  return v9(v10, v11, 1, v8);
}

uint64_t sub_100579FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books23MediaAPIMetadataService_catalogService;
  v2 = type metadata accessor for MCatalogService(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23MediaAPIMetadataService_libraryManagerResolver));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10057A038()
{
  return type metadata accessor for MediaAPIMetadataService(0);
}

uint64_t type metadata accessor for MediaAPIMetadataService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EBD18;
  if (!qword_1009EBD18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediaAPIMetadataService);
  return result;
}

uint64_t sub_10057A07C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for MCatalogService(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10057A0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009EBE2C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100326424;
  return sub_100576E34(a1, a2);
}

uint64_t sub_10057A154(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EBDC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100574D58(a1);
}

uint64_t sub_10057A1A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EBE4C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100578370(a1);
}

uint64_t sub_10057A1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100576820(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_10057A1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  v11 = *(_QWORD *)(*v2 + 40);
  v12 = sub_10057EACC(&qword_1009D7AE8, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v31 = a1;
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v29 = v3;
    v30 = a2;
    v16 = ~v14;
    v17 = *(_QWORD *)(v7 + 72);
    v32 = v7;
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18(v9, *(_QWORD *)(v10 + 48) + v17 * v15, v6);
      v19 = sub_10057EACC((unint64_t *)&unk_1009D7AF0, (uint64_t)&protocol conformance descriptor for UUID);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v31, v6, v19);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
      if ((v20 & 1) != 0)
        break;
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        v21 = swift_bridgeObjectRelease(v10);
        v22 = 1;
        a2 = v30;
        v7 = v32;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v22, 1, v6, v21);
      }
    }
    swift_bridgeObjectRelease(v10);
    v23 = v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
    v25 = *v23;
    v33 = *v23;
    *v23 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10060F5DC();
      v25 = v33;
    }
    v7 = v32;
    a2 = v30;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 32))(v30, *(_QWORD *)(v25 + 48) + v17 * v15, v6);
    sub_10057A898(v15);
    v26 = *v23;
    *v23 = v33;
    v21 = swift_bridgeObjectRelease(v26);
    v22 = 0;
  }
  else
  {
    v21 = swift_bridgeObjectRelease(v10);
    v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v22, 1, v6, v21);
}

uint64_t sub_10057A42C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      sub_10057A710(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease(v4);
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  type metadata accessor for BKTapActionView();
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14, a1);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17, a1);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v23 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10060F5F0();
    v20 = v23;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_10057AB28(v13);
  v21 = *v2;
  *v2 = v23;
  swift_bridgeObjectRelease(v21);
  return v9;
}

uint64_t sub_10057A5F0(uint64_t a1)
{
  return sub_10057A5FC(a1, (void (*)(void))sub_10060F5D0);
}

uint64_t sub_10057A5FC(uint64_t a1, void (*a2)(void))
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = v2;
  v6 = *v4;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v4 + 40), a1);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a1)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  v13 = *v4;
  v17 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    v13 = v17;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v9);
  sub_10057ACC8(v9);
  v15 = *v4;
  *v4 = v17;
  swift_bridgeObjectRelease(v15);
  return v14;
}

void sub_10057A710(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  Swift::Int v18;

  v3 = v2;
  swift_bridgeObjectRelease(*v3);
  v6 = __CocoaSet.count.getter(a1);
  v7 = swift_unknownObjectRetain(a1);
  v8 = sub_10060CE0C(v7, v6);
  v18 = v8;
  v9 = *(_QWORD *)(v8 + 40);
  swift_retain(v8);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    type metadata accessor for BKTapActionView();
    v13 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
    v14 = static NSObject.== infix(_:_:)(v13, a2);

    if ((v14 & 1) != 0)
    {
LABEL_6:
      swift_release(v8);
      v8 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v12);
      sub_10057AB28(v12);
      if ((static NSObject.== infix(_:_:)(a2, v8) & 1) != 0)
      {
        *v3 = v18;
        return;
      }
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
        v17 = static NSObject.== infix(_:_:)(v16, a2);

        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v8);
    __break(1u);
  }
  swift_release(v8);
  __break(1u);
}

void sub_10057A898(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v30 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v32 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      do
      {
        v13 = v7;
        v14 = v12;
        v15 = v12 * v9;
        v31(v5, *(_QWORD *)(v6 + 48) + v12 * v9, v3);
        v16 = *(_QWORD *)(v6 + 40);
        v17 = sub_10057EACC(&qword_1009D7AE8, (uint64_t)&protocol conformance descriptor for UUID);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(v16, v3, v17);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v3);
        v19 = v18 & v10;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 < v32 || a1 < (uint64_t)v19)
          {
LABEL_4:
            v7 = v13;
            v12 = v14;
            goto LABEL_5;
          }
        }
        else if (v19 < v32 && a1 < (uint64_t)v19)
        {
          goto LABEL_4;
        }
        v22 = *(_QWORD *)(v6 + 48);
        v23 = v14 * a1;
        v24 = v22 + v14 * a1;
        v25 = v22 + v15;
        v7 = v13;
        if (v14 * a1 < v15 || (v12 = v14, v24 >= v25 + v14))
        {
          swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v3);
          goto LABEL_21;
        }
        a1 = v9;
        if (v23 != v15)
        {
          swift_arrayInitWithTakeBackToFront(v24, v25);
LABEL_21:
          v12 = v14;
          a1 = v9;
        }
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v6);
    v1 = v30;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v26 = *v1;
  v27 = *(_QWORD *)(*v1 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
}

unint64_t sub_10057AB28(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10057ACC8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(v3);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), *v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_10057AE4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(unint64_t, char *, uint64_t);
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);

  v11 = type metadata accessor for Book.Metadata(0, a6);
  v57 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin(v11);
  v55 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v54 = (char *)&v52 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  v18 = sub_10004CFD4(&qword_1009EBE08);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = -1 << *(_BYTE *)(a1 + 32);
  v22 = ~v21;
  v23 = *(_QWORD *)(a1 + 64);
  v24 = -v21;
  v58 = a1;
  v59 = a1 + 64;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v60 = v22;
  v61 = 0;
  v62 = v25 & v23;
  v63 = a2;
  v64 = a3;
  v53 = a1;
  swift_bridgeObjectRetain(a1);
  v52 = a3;
  swift_retain(a3);
  sub_10057CA00((uint64_t)v20);
  v26 = sub_10004CFD4(&qword_1009EBE00);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
  {
LABEL_5:
    swift_release(v52);
    swift_bridgeObjectRelease(v53);
    sub_100299C3C(v58);
    swift_release(v64);
    return;
  }
  v65 = (void (*)(char *, char *, uint64_t))v57[4];
  v56 = v20;
  while (1)
  {
    v36 = *v20;
    v37 = v17;
    v65(v17, (char *)v20 + *(int *)(v26 + 48), v11);
    v38 = (_QWORD *)*a5;
    v40 = sub_1002C8328(v36);
    v41 = v38[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
      break;
    v44 = v39;
    if (v38[3] >= v43)
    {
      if ((a4 & 1) != 0)
      {
        v47 = (_QWORD *)*a5;
        if ((v39 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1002C1910();
        v47 = (_QWORD *)*a5;
        if ((v44 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_10037CEA8(v43, a4 & 1);
      v45 = sub_1002C8328(v36);
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_22;
      v40 = v45;
      v47 = (_QWORD *)*a5;
      if ((v44 & 1) != 0)
      {
LABEL_7:
        v27 = v47[7];
        v28 = a5;
        v29 = v57;
        v30 = v57[9] * v40;
        v31 = (void (*)(char *, unint64_t, uint64_t))v57[2];
        v32 = v55;
        v31(v55, v27 + v30, v11);
        v33 = v54;
        v31(v54, (unint64_t)v32, v11);
        v34 = (void (*)(char *, uint64_t))v29[1];
        v34(v32, v11);
        v17 = v37;
        v34(v37, v11);
        v35 = (void (*)(unint64_t, char *, uint64_t))v29[5];
        a5 = v28;
        v35(*(_QWORD *)(*v28 + 56) + v30, v33, v11);
        goto LABEL_8;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    *(_QWORD *)(v47[6] + 8 * v40) = v36;
    v48 = v47[7] + v57[9] * v40;
    v17 = v37;
    v65((char *)v48, v37, v11);
    v49 = v47[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_21;
    v47[2] = v51;
LABEL_8:
    v20 = v56;
    sub_10057CA00((uint64_t)v56);
    v26 = sub_10004CFD4(&qword_1009EBE00);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
  __break(1u);
}

void sub_10057B20C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  char v58;
  _QWORD *v59;
  uint64_t *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  v9 = sub_10057CD48();
  if (!v10)
    goto LABEL_23;
  v13 = v9;
  v14 = v10;
  v15 = v12;
  v64 = v11;
  v16 = (_QWORD *)*a5;
  v18 = sub_10004CE80(v9, v10);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      v25 = (_QWORD *)*a5;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1002BF910();
      v25 = (_QWORD *)*a5;
      if ((v22 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v25[(v18 >> 6) + 8] |= 1 << v18;
    v30 = (uint64_t *)(v25[6] + 16 * v18);
    *v30 = v13;
    v30[1] = v14;
    v31 = (_QWORD *)(v25[7] + 16 * v18);
    *v31 = v64;
    v31[1] = v15;
    v32 = v25[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v25[2] = v34;
LABEL_13:
    v35 = sub_10057CD48();
    if (v36)
    {
      v39 = v35;
      v40 = v36;
      v41 = v37;
      v42 = v38;
      do
      {
        v51 = (_QWORD *)*a5;
        v52 = sub_10004CE80(v39, v40);
        v54 = v51[2];
        v55 = (v53 & 1) == 0;
        v33 = __OFADD__(v54, v55);
        v56 = v54 + v55;
        if (v33)
          goto LABEL_24;
        v57 = v53;
        if (v51[3] < v56)
        {
          sub_10037A44C(v56, 1);
          v52 = sub_10004CE80(v39, v40);
          if ((v57 & 1) != (v58 & 1))
            goto LABEL_26;
        }
        v59 = (_QWORD *)*a5;
        if ((v57 & 1) != 0)
        {
          v43 = 16 * v52;
          v44 = (uint64_t *)(v59[7] + 16 * v52);
          v46 = *v44;
          v45 = v44[1];
          swift_bridgeObjectRetain(v45);
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(v42);
          v47 = (_QWORD *)(v59[7] + v43);
          swift_bridgeObjectRelease(v47[1]);
          *v47 = v46;
          v47[1] = v45;
        }
        else
        {
          v59[(v52 >> 6) + 8] |= 1 << v52;
          v60 = (uint64_t *)(v59[6] + 16 * v52);
          *v60 = v39;
          v60[1] = v40;
          v61 = (_QWORD *)(v59[7] + 16 * v52);
          *v61 = v41;
          v61[1] = v42;
          v62 = v59[2];
          v33 = __OFADD__(v62, 1);
          v63 = v62 + 1;
          if (v33)
            goto LABEL_25;
          v59[2] = v63;
        }
        v39 = sub_10057CD48();
        v40 = v48;
        v41 = v49;
        v42 = v50;
      }
      while (v48);
    }
LABEL_23:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_100299C3C(a1);
    swift_release(a3);
    return;
  }
  sub_10037A44C(v21, a4 & 1);
  v23 = sub_10004CE80(v13, v14);
  if ((v22 & 1) == (v24 & 1))
  {
    v18 = v23;
    v25 = (_QWORD *)*a5;
    if ((v22 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v26 = (uint64_t *)(v25[7] + 16 * v18);
    v28 = *v26;
    v27 = v26[1];
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v15);
    v29 = (_QWORD *)(v25[7] + 16 * v18);
    swift_bridgeObjectRelease(v29[1]);
    *v29 = v28;
    v29[1] = v27;
    goto LABEL_13;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10057B558(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void);
  void *v58;

  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_10057CEE4();
  if (!v14)
    goto LABEL_23;
  v16 = v13;
  v17 = v14;
  v57 = a6;
  v58 = v15;
  v18 = (_QWORD *)*a5;
  v20 = sub_10004CE80(v13, v14);
  v21 = v18[2];
  v22 = (v19 & 1) == 0;
  if (__OFADD__(v21, v22))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = v19;
  if (v18[3] >= v21 + v22)
  {
    if ((a4 & 1) != 0)
    {
      v26 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      v57();
      v26 = (_QWORD *)*a5;
      if ((v23 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v26[(v20 >> 6) + 8] |= 1 << v20;
    v29 = (uint64_t *)(v26[6] + 16 * v20);
    *v29 = v16;
    v29[1] = v17;
    *(_QWORD *)(v26[7] + 8 * v20) = v58;
    v30 = v26[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v26[2] = v32;
LABEL_13:
    sub_10057CEE4();
    if (v34)
    {
      v36 = v33;
      v37 = v34;
      v38 = v35;
      do
      {
        v45 = (_QWORD *)*a5;
        v46 = sub_10004CE80(v36, v37);
        v48 = v45[2];
        v49 = (v47 & 1) == 0;
        v31 = __OFADD__(v48, v49);
        v50 = v48 + v49;
        if (v31)
          goto LABEL_24;
        v51 = v47;
        if (v45[3] < v50)
        {
          ((void (*)(uint64_t, uint64_t))a7)(v50, 1);
          v46 = sub_10004CE80(v36, v37);
          if ((v51 & 1) != (v52 & 1))
            goto LABEL_26;
        }
        v53 = (_QWORD *)*a5;
        if ((v51 & 1) != 0)
        {
          v39 = 8 * v46;
          v40 = *(id *)(v53[7] + 8 * v46);
          swift_bridgeObjectRelease(v37);

          v41 = v53[7];
          *(_QWORD *)(v41 + v39) = v40;
        }
        else
        {
          v53[(v46 >> 6) + 8] |= 1 << v46;
          v54 = (uint64_t *)(v53[6] + 16 * v46);
          *v54 = v36;
          v54[1] = v37;
          *(_QWORD *)(v53[7] + 8 * v46) = v38;
          v55 = v53[2];
          v31 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v31)
            goto LABEL_25;
          v53[2] = v56;
        }
        sub_10057CEE4();
        v36 = v42;
        v37 = v43;
        v38 = v44;
      }
      while (v43);
    }
LABEL_23:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_100299C3C(a1);
    swift_release(a3);
    return;
  }
  a7();
  v24 = sub_10004CE80(v16, v17);
  if ((v23 & 1) == (v25 & 1))
  {
    v20 = v24;
    v26 = (_QWORD *)*a5;
    if ((v23 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v27 = *(id *)(v26[7] + 8 * v20);
    swift_bridgeObjectRelease(v17);

    v28 = v26[7];
    *(_QWORD *)(v28 + 8 * v20) = v27;
    goto LABEL_13;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10057B87C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_10057A5FC(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10), (void (*)(void))sub_10060F79C);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

unint64_t *sub_10057B9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  size_t v35;
  unint64_t *v36;
  void *v37;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD v42[9];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v41 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v39 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v40 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain(a1);
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v40)
          goto LABEL_47;
        v13 = *(_QWORD *)(v41 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v40)
            goto LABEL_47;
          v13 = *(_QWORD *)(v41 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v40)
              goto LABEL_47;
            v13 = *(_QWORD *)(v41 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v40)
                goto LABEL_47;
              v13 = *(_QWORD *)(v41 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v40)
                {
LABEL_47:
                  sub_100299C3C(a1);
                  return (unint64_t *)v2;
                }
                v13 = *(_QWORD *)(v41 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v40)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v41 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      Hasher.init(_seed:)(v42, *(_QWORD *)(v2 + 40));
      swift_bridgeObjectRetain(v17);
      String.hash(into:)(v42, v18, v17);
      v19 = Hasher._finalize()();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease(v17);
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = v23[1];
    v25 = *v23 == v18 && v24 == v17;
    if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v24, v18, v17, 0) & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease(v17);
      v43 = a1;
      v44 = v41;
      v45 = v39;
      v46 = v9;
      v47 = v7;
    }
    else
    {
      v26 = ~v20;
      do
      {
        v21 = (v21 + 1) & v26;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v27 = (_QWORD *)(v22 + 16 * v21);
        v28 = v27[1];
        v29 = *v27 == v18 && v28 == v17;
      }
      while (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v27, v28, v18, v17, 0) & 1) == 0);
      v43 = a1;
      v44 = v41;
      v45 = v39;
      v46 = v9;
      v47 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease(v17);
    }
    v31 = *(_BYTE *)(v2 + 32);
    v32 = v31 & 0x3F;
    v33 = (1 << v31) + 63;
    v34 = v33 >> 6;
    v35 = 8 * (v33 >> 6);
    if (v32 < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v33 >> 6), 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v35);
      v36 = sub_10057C1F8((unint64_t *)((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0)), v34, v2, v21, &v43);
      swift_release(v2);
      sub_100299C3C(v43);
    }
    else
    {
      v37 = (void *)swift_slowAlloc(v35, -1);
      memcpy(v37, (const void *)(v2 + 56), v35);
      v36 = sub_10057C1F8((unint64_t *)v37, v34, v2, v21, &v43);
      swift_release(v2);
      sub_100299C3C(v43);
      swift_slowDealloc(v37, -1, -1);
    }
    return v36;
  }
  else
  {
    swift_release(a2);
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void *sub_10057BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33[0] = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10)
            goto LABEL_33;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_33;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_33;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_33;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain(a1);
                    sub_100299C3C(v31);
                    return (void *)v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_33;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_36:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        v19 = static Hasher._hash(seed:_:)(*(_QWORD *)(v2 + 40), v18);
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v34[0] = a1;
    v34[1] = v6;
    v34[2] = v33[0];
    v34[3] = v4;
    v34[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain(a1);
    if (v23 < 0x81
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v24, 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      v27 = (char *)v33 - v26;
      memcpy((char *)v33 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_10057C4EC((uint64_t)v27, v23, v2, v21, v34);
      swift_release(v2);
      sub_100299C3C(v34[0]);
      return (void *)v28;
    }
    else
    {
      v29 = (void *)swift_slowAlloc(v24, -1);
      memcpy(v29, (const void *)(v2 + 56), v24);
      v30 = sub_10057C4EC((uint64_t)v29, v23, v2, v21, v34);
      swift_release(v2);
      sub_100299C3C(v34[0]);
      swift_slowDealloc(v29, -1, -1);
      return (void *)v30;
    }
  }
  else
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
}

unint64_t *sub_10057C1F8(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t i;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  int64_t v38;
  uint64_t v40;
  unint64_t *v41;
  _QWORD v42[9];
  uint64_t v43;

  v7 = *(_QWORD *)(a3 + 16);
  v41 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v43 = a3 + 56;
  while (2)
  {
    v40 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v38 = v9 + 6;
                while (v14 != v38)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v38++);
                  if (v17)
                  {
                    v13 = v38 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain(a3);
                return (unint64_t *)sub_1000647E8(v41, a2, v40, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)(v42, *(_QWORD *)(a3 + 40));
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v42, v21, v20);
        v22 = Hasher._finalize()();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v43 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = v28[1];
        v30 = *v28 == v21 && v29 == v20;
        if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0) & 1) != 0)
          break;
        v32 = ~v23;
        for (i = v24 + 1; ; i = v34 + 1)
        {
          v34 = i & v32;
          if (((*(_QWORD *)(v43 + (((i & v32) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v32)) & 1) == 0)
            break;
          v35 = (_QWORD *)(v27 + 16 * v34);
          v36 = v35[1];
          v37 = *v35 == v21 && v36 == v20;
          if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v35, v36, v21, v20, 0) & 1) != 0)
          {
            result = (unint64_t *)swift_bridgeObjectRelease(v20);
            v25 = v34 >> 6;
            v26 = 1 << v34;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = (unint64_t *)swift_bridgeObjectRelease(v20);
      }
      result = (unint64_t *)swift_bridgeObjectRelease(v20);
LABEL_23:
      v31 = v41[v25];
      v41[v25] = v31 & ~v26;
    }
    while ((v26 & v31) == 0);
    v8 = v40 - 1;
    if (__OFSUB__(v40, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v40 != 1)
      continue;
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10057C4EC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;
  int64_t v32;

  v8 = (unint64_t *)result;
  v9 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v11 = a3 + 56;
  while (1)
  {
    v16 = a5[3];
    v17 = a5[4];
    if (!v17)
      break;
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_16:
    v26 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    result = static Hasher._hash(seed:_:)(*(_QWORD *)(a3 + 40), v26);
    v27 = -1 << *(_BYTE *)(a3 + 32);
    v28 = result & ~v27;
    v12 = v28 >> 6;
    v13 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v29 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        v14 = v12;
        v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1))
            goto LABEL_35;
          if (!v10)
            return (uint64_t)&_swiftEmptySetSingleton;
        }
      }
      else
      {
        for (i = v28 + 1; ; i = v31 + 1)
        {
          v31 = i & ~v27;
          if (((*(_QWORD *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
            break;
          if (*(_QWORD *)(v29 + 8 * v31) == v26)
          {
            v12 = v31 >> 6;
            v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    v21 = (unint64_t)(a5[2] + 64) >> 6;
    v22 = a5[3];
    if (v20 >= v21)
      goto LABEL_33;
    v23 = a5[1];
    v24 = *(_QWORD *)(v23 + 8 * v20);
    if (v24)
      goto LABEL_15;
    v25 = v16 + 2;
    v22 = v16 + 1;
    if (v16 + 2 >= v21)
      goto LABEL_33;
    v24 = *(_QWORD *)(v23 + 8 * v25);
    if (!v24)
    {
      v22 = v16 + 2;
      if (v16 + 3 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * (v16 + 3));
      if (v24)
      {
        v20 = v16 + 3;
        goto LABEL_15;
      }
      v25 = v16 + 4;
      v22 = v16 + 3;
      if (v16 + 4 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (!v24)
      {
        v20 = v16 + 5;
        v22 = v16 + 4;
        if (v16 + 5 >= v21)
          goto LABEL_33;
        v24 = *(_QWORD *)(v23 + 8 * v20);
        if (!v24)
        {
          v22 = v21 - 1;
          v32 = v16 + 6;
          while (v21 != v32)
          {
            v24 = *(_QWORD *)(v23 + 8 * v32++);
            if (v24)
            {
              v20 = v32 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v22;
          a5[4] = 0;
          swift_retain(a3);
          return sub_10057C744(v8, a2, v10, a3);
        }
        goto LABEL_15;
      }
    }
    v20 = v25;
LABEL_15:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    v16 = v20;
    goto LABEL_16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_10057C744(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (uint64_t)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10004CFD4(&qword_1009EBDE8);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = a1[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = a1[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = static Hasher._hash(seed:_:)(v9[5], v18);
    v19 = -1 << *((_BYTE *)v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(v9[6] + 8 * v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = a1[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = a1[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10057C988@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(sub_10004CFD4(&qword_1009EBDF8) + 48);
  v5 = (char *)a2 + *(int *)(sub_10004CFD4(&qword_1009EBE00) + 48);
  v6 = *a1;
  v8 = type metadata accessor for Book.Metadata(0, v7);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v4, v8);
  *a2 = v6;
  return result;
}

void sub_10057CA00(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;

  v44 = a1;
  v2 = sub_10004CFD4(&qword_1009EBDF8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EBE10);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v39 - v11;
  v14 = *v1;
  v13 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v1[4];
  v39 = v5;
  if (v17)
  {
    v41 = v16;
    v42 = v13;
    v18 = v2;
    v40 = v8;
    v19 = v3;
    v20 = (v17 - 1) & v17;
    v43 = v15;
    v21 = __clz(__rbit64(v17)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v14 + 56);
    v23 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v21);
    v24 = type metadata accessor for Book.Metadata(0, v10);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v22 + *(_QWORD *)(v25 + 72) * v21;
    v2 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(&v12[*(int *)(v18 + 48)], v26, v24);
    v27 = 0;
    *(_QWORD *)v12 = v23;
    v3 = v19;
    v8 = v40;
    v16 = v41;
    v13 = v42;
    goto LABEL_4;
  }
  v34 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return;
  }
  v35 = (unint64_t)(v16 + 64) >> 6;
  if (v34 >= v35)
  {
    v43 = v15;
    v20 = 0;
    v27 = 1;
    goto LABEL_4;
  }
  v36 = *(_QWORD *)(v13 + 8 * v34);
  if (v36)
  {
LABEL_11:
    v41 = v16;
    v42 = v13;
    v18 = v2;
    v40 = v8;
    v19 = v3;
    v20 = (v36 - 1) & v36;
    v21 = __clz(__rbit64(v36)) + (v34 << 6);
    v43 = v34;
    goto LABEL_3;
  }
  v37 = v15 + 2;
  if (v15 + 2 >= v35)
    goto LABEL_27;
  v36 = *(_QWORD *)(v13 + 8 * v37);
  if (v36)
  {
LABEL_15:
    v34 = v37;
    goto LABEL_11;
  }
  if (v15 + 3 >= v35)
    goto LABEL_28;
  v36 = *(_QWORD *)(v13 + 8 * (v15 + 3));
  if (v36)
  {
    v34 = v15 + 3;
    goto LABEL_11;
  }
  v37 = v15 + 4;
  if (v15 + 4 < v35)
  {
    v36 = *(_QWORD *)(v13 + 8 * v37);
    if (v36)
      goto LABEL_15;
    v34 = v15 + 5;
    if (v15 + 5 < v35)
    {
      v36 = *(_QWORD *)(v13 + 8 * v34);
      if (v36)
        goto LABEL_11;
      v34 = v35 - 1;
      v38 = v15 + 6;
      while (v35 != v38)
      {
        v36 = *(_QWORD *)(v13 + 8 * v38++);
        if (v36)
        {
          v34 = v38 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v20 = 0;
      v27 = 1;
      v43 = v34;
      goto LABEL_4;
    }
LABEL_28:
    v20 = 0;
    v27 = 1;
    v43 = v37;
    goto LABEL_4;
  }
  v20 = 0;
  v27 = 1;
  v43 = v15 + 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, v27, 1, v2);
  *v1 = v14;
  v1[1] = v13;
  v28 = v43;
  v1[2] = v16;
  v1[3] = v28;
  v1[4] = v20;
  v29 = (void (*)(uint64_t))v1[5];
  sub_100025B3C((uint64_t)v12, (uint64_t)v8, &qword_1009EBE10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    v30 = sub_10004CFD4(&qword_1009EBE00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v44, 1, 1, v30);
  }
  else
  {
    v31 = (uint64_t)v39;
    sub_100025B3C((uint64_t)v8, (uint64_t)v39, &qword_1009EBDF8);
    v32 = v44;
    v29(v31);
    sub_100010960(v31, &qword_1009EBDF8);
    v33 = sub_10004CFD4(&qword_1009EBE00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
}

uint64_t sub_10057CD48()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v13);
    v14(&v22, v23);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v10);
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_10057CEE4()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain(v9);
    v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease(v9);
    return;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_10057D074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRetain(v4);
}

id sub_10057D0A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain(v2);
  return v4;
}

void sub_10057D0E0(uint64_t a1, void (*a2)(_QWORD, _QWORD, __n128))
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  int64_t v38;

  v4 = sub_10004CFD4(&qword_1009EBE20);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Book.Metadata.GenreTreeNode(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v36 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v35 = (char *)&v31 - v12;
  v13 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 64);
  v38 = (unint64_t)(v14 + 63) >> 6;
  v17 = swift_bridgeObjectRetain(a1);
  v18 = 0;
  v37 = (char *)_swiftEmptyArrayStorage;
  v33 = a1 + 64;
  if (!v16)
    goto LABEL_7;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    a2(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i), *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i), v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100010960((uint64_t)v7, &qword_1009EBE20);
      if (v16)
        goto LABEL_4;
    }
    else
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v24(v35, v7, v8);
      v34 = v24;
      v24(v36, v35, v8);
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
        v37 = (char *)sub_1005B2248(0, *((_QWORD *)v37 + 2) + 1, 1, (unint64_t)v37);
      v26 = *((_QWORD *)v37 + 2);
      v25 = *((_QWORD *)v37 + 3);
      v27 = v26 + 1;
      v13 = v33;
      if (v26 >= v25 >> 1)
      {
        v31 = *((_QWORD *)v37 + 2);
        v32 = v26 + 1;
        v30 = (char *)sub_1005B2248(v25 > 1, v26 + 1, 1, (unint64_t)v37);
        v26 = v31;
        v27 = v32;
        v37 = v30;
      }
      v28 = v36;
      v29 = v37;
      *((_QWORD *)v37 + 2) = v27;
      v34(&v29[((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v26], v28, v8);
      if (v16)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v38)
      goto LABEL_29;
    v22 = *(_QWORD *)(v13 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_29;
      v22 = *(_QWORD *)(v13 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_29;
        v22 = *(_QWORD *)(v13 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v38)
            goto LABEL_29;
          v22 = *(_QWORD *)(v13 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v38)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v22 = *(_QWORD *)(v13 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v38)
      goto LABEL_29;
    v22 = *(_QWORD *)(v13 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_10057D410(uint64_t a1, void (*a2)(uint64_t, char *))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(uint64_t, char *);

  v25 = a2;
  v3 = sub_10004CFD4(&qword_1009EBE30);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v24 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v10);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v15 = type metadata accessor for Book.MediaType(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = v13 + *(_QWORD *)(v16 + 72) * v12;
    v18 = (char *)v5 + *(int *)(v3 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v17, v15);
    *v5 = v14;
    v25(v14, v18);
    sub_100010960((uint64_t)v5, &qword_1009EBE30);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10057D640()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10057D674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = swift_task_alloc(dword_1009EBDD4);
  v7 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_10000AE34;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v4;
  return swift_task_switch(sub_100576D24, 0, 0);
}

void sub_10057D6F0(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  char v12;
  unsigned __int8 v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  unsigned __int8 v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43[2];
  uint64_t v44;
  uint64_t v45;

  v2 = *a2;
  v3 = MResource.id.getter(a1);
  v5 = v4;
  v6 = HIBYTE(v4) & 0xF;
  v7 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v8 = v6;
  else
    v8 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_62;
  }
  if ((v5 & 0x1000000000000000) != 0)
  {
    v10 = sub_1003277FC(v3, v5, 10);
    v12 = v42;
    goto LABEL_37;
  }
  if ((v5 & 0x2000000000000000) != 0)
  {
    v43[0] = v3;
    v43[1] = v5 & 0xFFFFFFFFFFFFFFLL;
    if (v3 == 43)
    {
      if (v6)
      {
        if (v6 != 1 && (BYTE1(v3) - 48) <= 9u)
        {
          v10 = (BYTE1(v3) - 48);
          if (v6 == 2)
            goto LABEL_36;
          if ((BYTE2(v3) - 48) <= 9u)
          {
            v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
            v16 = v6 - 3;
            if (v16)
            {
              v17 = (unsigned __int8 *)v43 + 3;
              while (1)
              {
                v18 = *v17 - 48;
                if (v18 > 9)
                  goto LABEL_33;
                if (!is_mul_ok(v10, 0xAuLL))
                  goto LABEL_33;
                v14 = __CFADD__(10 * v10, v18);
                v10 = 10 * v10 + v18;
                if (v14)
                  goto LABEL_33;
                v12 = 0;
                ++v17;
                if (!--v16)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
        goto LABEL_33;
      }
    }
    else
    {
      if (v3 != 45)
      {
        if (v6 && (v3 - 48) <= 9u)
        {
          v10 = (v3 - 48);
          if (v6 == 1)
            goto LABEL_36;
          if ((BYTE1(v3) - 48) <= 9u)
          {
            v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
            v25 = v6 - 2;
            if (v25)
            {
              v26 = (unsigned __int8 *)v43 + 2;
              while (1)
              {
                v27 = *v26 - 48;
                if (v27 > 9)
                  goto LABEL_33;
                if (!is_mul_ok(v10, 0xAuLL))
                  goto LABEL_33;
                v14 = __CFADD__(10 * v10, v27);
                v10 = 10 * v10 + v27;
                if (v14)
                  goto LABEL_33;
                v12 = 0;
                ++v26;
                if (!--v25)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
LABEL_33:
        v10 = 0;
LABEL_34:
        v12 = 1;
        goto LABEL_37;
      }
      if (v6)
      {
        if (v6 != 1)
        {
          v13 = BYTE1(v3) - 48;
          if ((BYTE1(v3) - 48) <= 9u)
          {
            v10 = 0;
            v14 = v13 == 0;
            v15 = -(uint64_t)v13;
            if (!v14)
              goto LABEL_34;
            if (v6 == 2)
            {
              v12 = 0;
              v10 = v15;
              goto LABEL_37;
            }
            v28 = BYTE2(v3) - 48;
            if ((BYTE2(v3) - 48) <= 9u && is_mul_ok(v15, 0xAuLL))
            {
              v29 = 10 * v15;
              v10 = v29 - v28;
              if (v29 >= v28)
              {
                v30 = v6 - 3;
                if (v30)
                {
                  v31 = (unsigned __int8 *)v43 + 3;
                  while (1)
                  {
                    v32 = *v31 - 48;
                    if (v32 > 9)
                      goto LABEL_33;
                    if (!is_mul_ok(v10, 0xAuLL))
                      goto LABEL_33;
                    v14 = 10 * v10 >= (unint64_t)v32;
                    v10 = 10 * v10 - v32;
                    if (!v14)
                      goto LABEL_33;
                    v12 = 0;
                    ++v31;
                    if (!--v30)
                      goto LABEL_37;
                  }
                }
LABEL_36:
                v12 = 0;
                goto LABEL_37;
              }
            }
          }
        }
        goto LABEL_33;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  if ((v3 & 0x1000000000000000) != 0)
    v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v3, v5);
  v10 = (uint64_t)sub_1003276EC(v9, v7, 10);
  v12 = v11 & 1;
LABEL_37:
  v19 = swift_bridgeObjectRelease(v5);
  if ((v12 & 1) == 0)
  {
    v20 = MGenre.parentId.getter(v19);
    if (v21)
    {
      v22 = sub_1003248D4(v20, v21);
      v24 = v23 & 1;
    }
    else
    {
      v22 = 0;
      v24 = 1;
    }
    sub_1004EFB58(v22, v24, v10);
    return;
  }
LABEL_62:
  if (qword_1009CE880 != -1)
    swift_once(&qword_1009CE880, sub_100574B3C);
  v33 = type metadata accessor for Logger(0);
  sub_100048F64(v33, (uint64_t)qword_100A1EC68);
  v34 = v2;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v43[0] = v38;
    *(_DWORD *)v37 = 136315138;
    v39 = MResource.id.getter(v38);
    v41 = v40;
    v44 = sub_100040F58(v39, v40, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v37 + 4, v37 + 12);

    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "failed to make genre ID for %s", v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10057DB7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  _QWORD *v18;

  v18 = _swiftEmptyDictionarySingleton;
  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v8))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v17 = v4;
      sub_10057D6F0((uint64_t)&v18, &v17);

      ++v3;
      if (v6 == v2)
      {
        swift_bridgeObjectRelease(a1);
        v7 = v18;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_11:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  v7 = _swiftEmptyDictionarySingleton;
LABEL_16:
  swift_bridgeObjectRetain(v7);
  sub_100574510(v9);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v12 = sub_1003ACD10(v11);
  swift_bridgeObjectRelease(v11);
  __chkstk_darwin(v13);
  sub_10057D0E0((uint64_t)v7, (void (*)(_QWORD, _QWORD, __n128))sub_10057E9AC);
  v15 = v14;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v12);
  return v15;
}

void sub_10057DD18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  id v64;
  id v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t v82;
  uint64_t v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  void *v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _BOOL8 v117;
  __n128 v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  id v124;
  __n128 v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  _BYTE v129[12];
  unsigned int v130;
  __n128 v131;
  uint64_t v132;
  int v133;
  _BYTE *v134;
  char *v135;
  uint64_t *v136;
  unsigned int v137;
  uint64_t v138;
  NSObject *v139;
  unint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  __n128 v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154[2];
  _QWORD *v155;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8A28);
  __chkstk_darwin(v2);
  v134 = &v129[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Book.MediaType(0);
  v148 = *(_QWORD *)(v4 - 8);
  v149 = v4;
  __chkstk_darwin(v4);
  v144 = &v129[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v147 = &v129[-v7];
  v155 = _swiftEmptyDictionarySingleton;
  v8 = *(_QWORD *)(a1 + 64);
  v150 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v151 = (unint64_t)(v9 + 63) >> 6;
  v138 = BFMCatalogRequestRelationshipGenres;
  v137 = enum case for Book.MediaType.ebook(_:);
  v130 = enum case for Book.MediaType.audiobook(_:);
  v136 = v154;
  v152 = a1;
  v12 = swift_bridgeObjectRetain(a1);
  v13 = 0;
  v12.n128_u64[0] = 136315138;
  v145 = v12;
  v135 = (char *)&type metadata for Any + 8;
  v12.n128_u64[0] = 136315650;
  v131 = v12;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v13 << 6);
LABEL_18:
    v19 = (uint64_t *)(*(_QWORD *)(v152 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(void **)(*(_QWORD *)(v152 + 56) + 8 * v15);
    v23 = type metadata accessor for MAsset(0);
    v24 = swift_dynamicCastClass(v22, v23);
    if (v24)
    {
      v25 = (void *)v24;
      swift_bridgeObjectRetain_n(v21, 2);
      v26 = v22;
      v27 = sub_1003248D4(v20, v21);
      if ((v28 & 1) != 0)
      {
        if (qword_1009CE880 != -1)
          swift_once(&qword_1009CE880, sub_100574B3C);
        v73 = type metadata accessor for Logger(0);
        sub_100048F64(v73, (uint64_t)qword_100A1EC68);
        swift_bridgeObjectRetain(v21);
        v75 = Logger.logObject.getter(v74);
        v76 = static os_log_type_t.error.getter(v75);
        if (os_log_type_enabled(v75, v76))
        {
          v77 = swift_slowAlloc(12, -1);
          v78 = v11;
          v79 = swift_slowAlloc(32, -1);
          v154[0] = v79;
          *(_DWORD *)v77 = v145.n128_u32[0];
          swift_bridgeObjectRetain(v21);
          *(_QWORD *)(v77 + 4) = sub_100040F58(v20, v21, v154);
          swift_bridgeObjectRelease_n(v21, 3);
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "_extractMetadata: Invalid adamID: %s", (uint8_t *)v77, 0xCu);
          swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
          v80 = v79;
          v11 = v78;
          swift_slowDealloc(v80, -1, -1);
          swift_slowDealloc(v77, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v21, 2);
        }
      }
      else
      {
        v29 = v27;
        v30 = type metadata accessor for MGenre(0);
        v31 = MResource.resources<A>(for:)(v138, v30);
        if (v31)
        {
          v32 = v31;
          v33 = type metadata accessor for MBook(0);
          v34 = swift_dynamicCastClass(v25, v33);
          v35 = v137;
          if (!v34)
          {
            v36 = type metadata accessor for MAudiobook(0, v137);
            v37 = swift_dynamicCastClass(v25, v36);
            v35 = v130;
            if (!v37)
            {
              v126 = sub_10057E968();
              v127 = swift_allocError(&type metadata for MediaAPIMetadataService.Errors, v126, 0, 0);
              swift_willThrow(v127);
              swift_release(v152);
              swift_bridgeObjectRelease(v21);

              swift_bridgeObjectRelease(v32);
              goto LABEL_67;
            }
          }
          v143 = v29;
          v38 = (uint64_t)v147;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v148 + 104))(v147, v35, v149);
          v142 = sub_1005794BC(v38);
          if (qword_1009CE880 != -1)
            swift_once(&qword_1009CE880, sub_100574B3C);
          v39 = type metadata accessor for Logger(0);
          sub_100048F64(v39, (uint64_t)qword_100A1EC68);
          v40 = v26;
          swift_bridgeObjectRetain_n(v32, 2);
          v41 = v40;
          swift_bridgeObjectRetain(v21);
          v43 = Logger.logObject.getter(v42);
          v44 = static os_log_type_t.info.getter(v43);
          if (os_log_type_enabled(v43, (os_log_type_t)v44))
          {
            v133 = v44;
            v139 = v43;
            v140 = v11;
            v45 = swift_slowAlloc(32, -1);
            v132 = swift_slowAlloc(64, -1);
            v154[0] = v132;
            *(_DWORD *)v45 = v131.n128_u32[0];
            swift_bridgeObjectRetain(v21);
            v153 = sub_100040F58(v20, v21, v154);
            v46 = v41;
            v47 = v136;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v136, v45 + 4, v45 + 12);
            v48 = swift_bridgeObjectRelease_n(v21, 3);
            *(_WORD *)(v45 + 12) = 2080;
            v49 = MAsset.name.getter(v48);
            v51 = v50;
            v153 = sub_100040F58(v49, v50, v154);
            v52 = v47;
            v41 = v46;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v52, v45 + 14, v45 + 22);

            swift_bridgeObjectRelease(v51);
            *(_WORD *)(v45 + 22) = 2048;
            if ((unint64_t)v32 >> 62)
            {
              if (v32 >= 0)
                v123 = v32 & 0xFFFFFFFFFFFFFF8;
              else
                v123 = v32;
              swift_bridgeObjectRetain(v32);
              v53 = _CocoaArrayWrapper.endIndex.getter(v123);
              swift_bridgeObjectRelease(v32);
            }
            else
            {
              v53 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            v54 = v139;
            v55 = v133;
            swift_bridgeObjectRelease(v32);
            v153 = v53;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v136, v45 + 24, v45 + 32);
            swift_bridgeObjectRelease(v32);
            _os_log_impl((void *)&_mh_execute_header, v54, v55, "_extractMetadata: adamID: %s name: %s genres: %ld", (uint8_t *)v45, 0x20u);
            v56 = v132;
            swift_arrayDestroy(v132, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v56, -1, -1);
            swift_slowDealloc(v45, -1, -1);

            v11 = v140;
          }
          else
          {

            swift_bridgeObjectRelease_n(v21, 2);
            swift_bridgeObjectRelease_n(v32, 2);
          }
          v91 = sub_10057DB7C(v32);
          v92 = swift_bridgeObjectRelease(v32);
          v93 = (void *)MAsset.seriesResource.getter(v92);
          v140 = v91;
          v141 = v41;
          if (v93)
          {
            v94 = v93;
            v95 = MResource.id.getter(v94);
            v97 = v96;

            v98 = sub_1003248D4(v95, v97);
            LODWORD(v95) = v99 & 1;
            v100 = v94;
            v101 = MSeries.mappedSeries.getter();
            LODWORD(v139) = v95;
            if (v101)
            {
              v102 = v101;
              v103 = MSparseResource.id.getter();
              v105 = sub_1003248D4(v103, v104);
              v106 = v11;
              v108 = v107;
              swift_release(v102);

              v109 = v108 & 1;
              v11 = v106;
            }
            else
            {

              v105 = 0;
              v109 = 1;
            }
          }
          else
          {
            v105 = 0;
            v98 = 0;
            v109 = 1;
            LODWORD(v139) = 1;
          }
          v110 = v143;
          v111 = v146;
          v112 = sub_1005799C4();
          v146 = v111;
          if (v111)
          {
            v124 = v141;

            swift_bridgeObjectRelease(v140);
            v125 = swift_bridgeObjectRelease(v142);
            (*(void (**)(_BYTE *, uint64_t, __n128))(v148 + 8))(v147, v149, v125);
            swift_release(v152);
LABEL_67:
            swift_bridgeObjectRelease(v155);
            return;
          }
          v113 = v112;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v148 + 16))(v144, v147, v149);
          v114 = *(_QWORD *)(v142 + 16);
          v115 = v11;
          if (v114)
            v116 = *(_QWORD *)(v142 + 32);
          else
            v116 = 0;
          v117 = v114 == 0;
          v118 = swift_bridgeObjectRelease(v142);
          LOBYTE(v128) = v109;
          v119 = (uint64_t)v134;
          v120 = Book.Metadata.init(authorIDs:mediaType:leafGenres:mappedAssetID:seriesID:mappedSeriesID:)(v113, v144, v140, v116, v117, v98, v139, v105, v118, v128);
          v121 = type metadata accessor for Book.Metadata(0, v120);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v119, 0, 1, v121);
          sub_1004EF980(v119, v110);
          v122 = v141;

          (*(void (**)(_BYTE *, uint64_t))(v148 + 8))(v147, v149);
          v11 = v115;
        }
        else
        {
          swift_bridgeObjectRelease(v21);
          if (qword_1009CE880 != -1)
            swift_once(&qword_1009CE880, sub_100574B3C);
          v81 = type metadata accessor for Logger(0);
          sub_100048F64(v81, (uint64_t)qword_100A1EC68);
          v60 = v26;
          v61 = Logger.logObject.getter(v60);
          v82 = static os_log_type_t.error.getter(v61);
          if (!os_log_type_enabled(v61, v82))
          {

            goto LABEL_53;
          }
          v83 = swift_slowAlloc(12, -1);
          v143 = swift_slowAlloc(32, -1);
          v154[0] = v143;
          *(_DWORD *)v83 = v145.n128_u32[0];
          v64 = v60;
          v84 = objc_msgSend(v25, "description");
          v85 = v11;
          v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
          v88 = v87;

          v89 = v86;
          v11 = v85;
          *(_QWORD *)(v83 + 4) = sub_100040F58(v89, v88, v154);

          swift_bridgeObjectRelease(v88);
          _os_log_impl((void *)&_mh_execute_header, v61, v82, "_extractMetadata: Genre resources not found. asset: %s", (uint8_t *)v83, 0xCu);
          v90 = v143;
          swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v90, -1, -1);
          swift_slowDealloc(v83, -1, -1);

LABEL_42:
        }
      }
    }
    else
    {
      v57 = qword_1009CE880;
      v58 = v22;
      if (v57 != -1)
        swift_once(&qword_1009CE880, sub_100574B3C);
      v59 = type metadata accessor for Logger(0);
      sub_100048F64(v59, (uint64_t)qword_100A1EC68);
      v60 = v58;
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.error.getter(v61);
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc(12, -1);
        v143 = swift_slowAlloc(32, -1);
        v154[0] = v143;
        *(_DWORD *)v63 = v145.n128_u32[0];
        v64 = v60;
        v65 = objc_msgSend(v64, "description");
        v66 = v13;
        v67 = v11;
        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
        v70 = v69;

        v71 = v68;
        v11 = v67;
        v13 = v66;
        *(_QWORD *)(v63 + 4) = sub_100040F58(v71, v70, v154);

        swift_bridgeObjectRelease(v70);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "_extractMetadata: Expected MAsset. resource: %s", (uint8_t *)v63, 0xCu);
        v72 = v143;
        swift_arrayDestroy(v143, 1, v135);
        swift_slowDealloc(v72, -1, -1);
        swift_slowDealloc(v63, -1, -1);
        goto LABEL_42;
      }

LABEL_53:
    }
  }
  if (!__OFADD__(v13++, 1))
  {
    if (v13 >= v151)
      goto LABEL_64;
    v17 = *(_QWORD *)(v150 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v151)
        goto LABEL_64;
      v17 = *(_QWORD *)(v150 + 8 * v18);
      if (!v17)
      {
        v18 = v13 + 2;
        if (v13 + 2 >= v151)
          goto LABEL_64;
        v17 = *(_QWORD *)(v150 + 8 * v18);
        if (!v17)
        {
          v18 = v13 + 3;
          if (v13 + 3 >= v151)
          {
LABEL_64:
            swift_release(v152);
            return;
          }
          v17 = *(_QWORD *)(v150 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_69;
              if (v13 >= v151)
                goto LABEL_64;
              v17 = *(_QWORD *)(v150 + 8 * v13);
              ++v18;
              if (v17)
                goto LABEL_17;
            }
          }
        }
      }
      v13 = v18;
    }
LABEL_17:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_18;
  }
  __break(1u);
LABEL_69:
  __break(1u);
}

unint64_t sub_10057E968()
{
  unint64_t result;

  result = qword_1009EBE18;
  if (!qword_1009EBE18)
  {
    result = swift_getWitnessTable(&unk_10072DDA0, &type metadata for MediaAPIMetadataService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EBE18);
  }
  return result;
}

uint64_t sub_10057E9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100579E94(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_10057E9B4(uint64_t a1)
{
  uint64_t v1;

  sub_100578BF8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10057E9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_10004CFD4(&qword_1009EBE40);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10057EA3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009EBE40) - 8) + 80);
  return sub_100578D44(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

unint64_t sub_10057EA80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EBE58;
  if (!qword_1009EBE58)
  {
    v1 = sub_100030B74(&qword_1009EBE50);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009EBE58);
  }
  return result;
}

uint64_t sub_10057EACC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaAPIMetadataService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10057EB4C + 4 * byte_10072DCB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10057EB6C + 4 * byte_10072DCB5[v4]))();
}

_BYTE *sub_10057EB4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10057EB6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10057EB74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10057EB7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10057EB84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10057EB8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaAPIMetadataService.Errors()
{
  return &type metadata for MediaAPIMetadataService.Errors;
}

unint64_t sub_10057EBAC()
{
  unint64_t result;

  result = qword_1009EBE60;
  if (!qword_1009EBE60)
  {
    result = swift_getWitnessTable(&unk_10072DD78, &type metadata for MediaAPIMetadataService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EBE60);
  }
  return result;
}

uint64_t sub_10057ED10(const void *a1)
{
  uint64_t v1;
  void *v2;
  const void *v3;

  v2 = _Block_copy(a1);
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, uint64_t, _QWORD))v2 + 2))(v2, 1, 0);
    _Block_release(v3);
  }
  return sub_10057EFB4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t type metadata accessor for PriceTrackingServiceFactory()
{
  return objc_opt_self(_TtC5Books27PriceTrackingServiceFactory);
}

id sub_10057ED80@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PriceTrackingService()), "init");
  *a1 = result;
  return result;
}

void sub_10057EDB8(uint64_t *a1, void *a2)
{
  sub_10057EDD0(*a1, a2);
}

_UNKNOWN **sub_10057EDC0()
{
  return &protocol witness table for PriceTrackingService;
}

void sub_10057EDD0(uint64_t a1, id a2)
{
  id v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v3 = objc_msgSend(a2, "priceTracker");
  v4 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  sub_1005C5F08(v4, (uint64_t)v3);
  v5 = (uint64_t *)(a1 + OBJC_IVAR___BKPriceTrackingService__addToWTRDelegate);
  swift_beginAccess(a1 + OBJC_IVAR___BKPriceTrackingService__addToWTRDelegate, v11, 0, 0);
  v6 = *v5;
  v7 = v5[1];
  v8 = (void *)v5[2];
  v9 = v8;
  swift_bridgeObjectRetain(v7);
  v10 = (id)sub_10057EFBC(v6, v7, (uint64_t)v8);

  swift_bridgeObjectRelease(v7);
  objc_msgSend((id)objc_opt_self(BSUINoticeViewController), "setAddToWTRDelegate:", v10);

  MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
  swift_release(v3);

}

uint64_t sub_10057EF1C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10057EF48()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1009EBF34);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  return ((uint64_t (*)(const void *))((char *)&dword_1009EBF30 + dword_1009EBF30))(v2);
}

uint64_t sub_10057EFB4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10057EFBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  if (!a3)
  {
    v6 = qword_1009CDD98;
    swift_bridgeObjectRetain(a2);
    if (v6 != -1)
      swift_once(&qword_1009CDD98, sub_100289C70);
    v7 = type metadata accessor for Logger(0);
    sub_100048F64(v7, (uint64_t)qword_100A1E410);
    swift_bridgeObjectRetain(a2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136446210;
      swift_bridgeObjectRetain(a2);
      v14 = sub_100040F58(a1, a2, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[get] Missing value for %{public}s! Did you forget to call setupService()?", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
  return a3;
}

_QWORD *sub_10057F170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  id v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, uint64_t, uint64_t);
  unsigned int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(char *, char *, uint64_t);

  v94 = type metadata accessor for Locale(0);
  v90 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v91 = (char *)&v83 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v83 - v3;
  v89 = type metadata accessor for String.LocalizationValue(0);
  v84 = *(void (**)(char *, uint64_t))(v89 - 8);
  v5 = v84;
  __chkstk_darwin(v89);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v83 - v10;
  v12 = type metadata accessor for Color.RGBColorSpace(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  __chkstk_darwin(v12);
  v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v17 = enum case for Color.RGBColorSpace.sRGB(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v86 = enum case for Color.RGBColorSpace.sRGB(_:);
  v87 = v14;
  v18(v16, enum case for Color.RGBColorSpace.sRGB(_:), v14);
  v85 = v18;
  v0[3] = Color.init(_:white:opacity:)(v16, 1.0, 0.5);
  v0[4] = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v18(v16, v17, v14);
  v0[5] = Color.init(_:white:opacity:)(v16, 0.0, 0.5);
  v0[6] = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v0[7] = 0x4000000000000000;
  v0[28] = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v19 = String.LocalizationValue.init(stringLiteral:)(1145128274, 0xE400000000000000);
  static Locale.current.getter(v19);
  v96 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v5 + 2);
  v20 = v7;
  v88 = v7;
  v96(v7, v11, v89);
  v21 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v93 = ObjCClassFromMetadata;
  v92 = (id)objc_opt_self(NSBundle);
  v23 = objc_msgSend(v92, "bundleForClass:", ObjCClassFromMetadata);
  v24 = v90;
  v25 = v91;
  v95 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v26 = v94;
  v95(v91, v4, v94);
  v27 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v23, v25, "Title for Buy / Read button", 27, 2);
  v29 = v28;
  v90 = *(_QWORD *)(v24 + 8);
  ((void (*)(char *, uint64_t))v90)(v4, v26);
  v30 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
  v31 = v89;
  v30(v11, v89);
  v83 = v11;
  v84 = v30;
  v0[23] = v27;
  v0[24] = v29;
  v32 = v11;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x4E455453494CLL, 0xE600000000000000);
  v34 = v4;
  static Locale.current.getter(v33);
  v35 = v88;
  v96(v88, v32, v31);
  v36 = objc_msgSend(v92, "bundleForClass:", v93);
  v37 = v25;
  v38 = v25;
  v39 = v34;
  v40 = v34;
  v41 = v94;
  v95(v38, v39, v94);
  v42 = String.init(localized:table:bundle:locale:comment:)(v35, 0, 0, v36, v37, "Title for Read button for audiobook", 35, 2);
  v44 = v43;
  ((void (*)(char *, uint64_t))v90)(v40, v41);
  v45 = v83;
  v46 = v31;
  v30(v83, v31);
  v0[25] = v42;
  v0[26] = v44;
  v47 = v86;
  v48 = v87;
  v49 = v85;
  v85(v16, v86, v87);
  v0[10] = Color.init(_:red:green:blue:opacity:)(v16, 0.2117647, 0.580392, 0.3843137, 1.0);
  v49(v16, v47, v48);
  v0[8] = Color.init(_:red:green:blue:opacity:)(v16, 0.2117647, 0.580392, 0.3843137, 1.0);
  v0[9] = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v50 = String.LocalizationValue.init(stringLiteral:)(5854530, 0xE300000000000000);
  v51 = v40;
  static Locale.current.getter(v50);
  v52 = v88;
  v53 = v46;
  v96(v88, v45, v46);
  v54 = v92;
  v55 = v93;
  v56 = objc_msgSend(v92, "bundleForClass:", v93);
  v57 = v91;
  v58 = v94;
  v95(v91, v51, v94);
  v59 = String.init(localized:table:bundle:locale:comment:)(v52, 0, 0, v56, v57, "Title for Buy button when a store book for no store info", 56, 2);
  v61 = v60;
  v62 = (void (*)(char *, uint64_t))v90;
  ((void (*)(char *, uint64_t))v90)(v51, v58);
  v63 = v84;
  v64 = ((uint64_t (*)(char *, uint64_t))v84)(v45, v53);
  v0[11] = v59;
  v0[12] = v61;
  v65 = static Color.orange.getter(v64);
  v0[15] = v65;
  v0[13] = static Color.orange.getter(v65);
  v0[14] = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v66 = String.LocalizationValue.init(stringLiteral:)(0x4544524F2D455250, 0xE900000000000052);
  static Locale.current.getter(v66);
  v67 = v88;
  v96(v88, v45, v53);
  v68 = objc_msgSend(v54, "bundleForClass:", v55);
  v69 = v91;
  v70 = v94;
  v95(v91, v51, v94);
  v71 = v67;
  v72 = String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, v68, v69, "Title for a book that can be Pre-ordered button", 47, 2);
  v74 = v73;
  v62(v51, v70);
  v75 = v89;
  v63(v45, v89);
  v0[16] = v72;
  v0[17] = v74;
  v76 = (void *)objc_opt_self(UIColor);
  v0[20] = Color.init(_:)(objc_msgSend(v76, "tertiaryLabelColor"));
  v0[18] = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v0[19] = Color.init(_:)(objc_msgSend(v76, "tertiaryLabelColor"));
  v77 = String.LocalizationValue.init(stringLiteral:)(0x4544524F2D455250, 0xEB00000000444552);
  static Locale.current.getter(v77);
  v96(v71, v45, v75);
  v78 = objc_msgSend(v92, "bundleForClass:", v93);
  v95(v69, v51, v70);
  v79 = String.init(localized:table:bundle:locale:comment:)(v71, 0, 0, v78, v69, "Title for Pre-order button", 26, 2);
  v81 = v80;
  ((void (*)(char *, uint64_t))v90)(v51, v70);
  v63(v45, v75);
  v0[21] = v79;
  v0[22] = v81;
  v0[27] = 0x4059000000000000;
  return v0;
}

_QWORD *BuyButtonStyle.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_bridgeObjectRelease(v0[17]);
  swift_release(v0[18]);
  swift_release(v0[19]);
  swift_release(v0[20]);
  swift_bridgeObjectRelease(v0[22]);
  swift_bridgeObjectRelease(v0[24]);
  swift_bridgeObjectRelease(v0[26]);
  swift_release(v0[28]);
  return v0;
}

uint64_t BuyButtonStyle.__deallocating_deinit()
{
  uint64_t v0;

  BuyButtonStyle.deinit();
  return swift_deallocClassInstance(v0, 232, 7);
}

uint64_t type metadata accessor for BuyButtonStyle()
{
  return objc_opt_self(_TtC5Books14BuyButtonStyle);
}

unint64_t sub_10057F948()
{
  return 0xD000000000000017;
}

uint64_t sub_10057F964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100589574(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_10057F98C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10057F998(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10058C1BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10057F9C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10058C1BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10057F9E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v5 = sub_10004CFD4(&qword_1009EC4D0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_10058C1BC();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BookRecommendationConfiguration.CodingKeys, &type metadata for BookRecommendationConfiguration.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Books15CurrentPageViewVwxx_0(a1);
  v14 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5, v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = _s5Books15CurrentPageViewVwxx_0(a1);
  *a2 = v14;
  return result;
}

uint64_t sub_10057FAF8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_10004CFD4(&qword_1009EC4E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  sub_10003F198(a1, v8);
  v10 = sub_10058C1BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BookRecommendationConfiguration.CodingKeys, &type metadata for BookRecommendationConfiguration.CodingKeys, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v11, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int sub_10057FBE0()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 2;
  else
    v2 = 1;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10057FC2C()
{
  _BYTE *v0;
  Swift::UInt v1;

  if (*v0)
    v1 = 2;
  else
    v1 = 1;
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10057FC60(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 2;
  else
    v3 = 1;
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_10057FCA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_10057FCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10006910C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10057FD0C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;

  v3 = v1;
  v5 = sub_10004CFD4(&qword_1009EC4E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_1000691F0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SuggestionsConfiguration.CodingKeys, &type metadata for SuggestionsConfiguration.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v24) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v24, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    LOBYTE(v24) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v24, v5);
    LOBYTE(v24) = *((_BYTE *)v3 + 32);
    v25 = 2;
    v16 = sub_10058C200();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v24, &v25, v5, &type metadata for SuggestionsConfiguration.MediaType, v16);
    v17 = *((unsigned __int8 *)v3 + 33);
    LOBYTE(v24) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v24, v5);
    v18 = *((unsigned __int8 *)v3 + 34);
    LOBYTE(v24) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v18, &v24, v5);
    v19 = *((unsigned __int8 *)v3 + 35);
    LOBYTE(v24) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v19, &v24, v5);
    v24 = v3[5];
    v25 = 6;
    v20 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v21 = sub_100065220(&qword_1009EC4F8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v24, &v25, v5, v20, v21);
    v22 = v3[6];
    LOBYTE(v24) = 7;
    KeyedEncodingContainer.encode(_:forKey:)(v22, &v24, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10057FF64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10057FFA0 + 4 * byte_10072DF08[a1]))(0x6E656D7461657274, 0xEB00000000444974);
}

uint64_t sub_10057FFA0()
{
  return 0x444965726F7473;
}

unint64_t sub_10057FFB8()
{
  return 0xD000000000000012;
}

unint64_t sub_100580074()
{
  return 0xD000000000000017;
}

unint64_t sub_100580090()
{
  return 0xD00000000000001BLL;
}

void sub_1005800AC()
{
  JUMPOUT(0x1005800C0);
}

uint64_t sub_1005800CC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _BYTE v37[8];
  _BYTE v38[8];
  _BYTE v39[8];

  v3 = v1;
  v5 = sub_10004CFD4(&qword_1009EC500);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_10058C088();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CollectionRecommendationsConfiguration.CodingKeys, &type metadata for CollectionRecommendationsConfiguration.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v36) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v36, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    LOBYTE(v36) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v36, v5);
    v16 = *((unsigned __int8 *)v3 + 32);
    LOBYTE(v36) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, &v36, v5);
    v17 = *((unsigned __int8 *)v3 + 33);
    LOBYTE(v36) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v36, v5);
    v18 = *((unsigned __int8 *)v3 + 34);
    LOBYTE(v36) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v18, &v36, v5);
    v36 = v3[5];
    v35 = 5;
    v19 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v20 = sub_100065220(&qword_1009EC4F8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v36, &v35, v5, v19, v20);
    v21 = v3[6];
    v22 = *((unsigned __int8 *)v3 + 56);
    LOBYTE(v36) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, &v36, v5);
    v23 = v3[8];
    v24 = *((unsigned __int8 *)v3 + 72);
    LOBYTE(v36) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23, v24, &v36, v5);
    sub_100025B3C((uint64_t)(v3 + 10), (uint64_t)v39, &qword_1009EC508);
    sub_100025B3C((uint64_t)v39, (uint64_t)&v36, &qword_1009EC508);
    v35 = 8;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v36, &v35, v5, v19, v20);
    v25 = v3[11];
    v26 = *((unsigned __int8 *)v3 + 96);
    LOBYTE(v36) = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, &v36, v5);
    sub_100025B3C((uint64_t)(v3 + 13), (uint64_t)v38, &qword_1009EC510);
    sub_100025B3C((uint64_t)v38, (uint64_t)&v36, &qword_1009EC510);
    v35 = 10;
    v27 = sub_10004CFD4(&qword_1009EC338);
    v28 = sub_10058C244(&qword_1009EC518, (uint64_t)&protocol witness table for String, (uint64_t)&protocol witness table for Int, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v36, &v35, v5, v27, v28);
    sub_100025B3C((uint64_t)(v3 + 14), (uint64_t)v37, &qword_1009EC520);
    sub_100025B3C((uint64_t)v37, (uint64_t)&v36, &qword_1009EC520);
    v35 = 11;
    v29 = sub_10004CFD4(&qword_1009EC348);
    v30 = sub_10058C2A8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v36, &v35, v5, v29, v30);
    v31 = v3[15];
    v32 = *((unsigned __int8 *)v3 + 128);
    LOBYTE(v36) = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v31, v32, &v36, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005804C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005895F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1005804E4(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1005804F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000691F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100580518(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000691F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100580540(_QWORD *a1)
{
  return sub_10057FD0C(a1);
}

uint64_t sub_100580580()
{
  unsigned __int8 *v0;

  return sub_10057FF64(*v0);
}

uint64_t sub_100580588@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100589960(a1, a2);
  *a3 = result;
  return result;
}

void sub_1005805AC(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1005805B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10058C088();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005805E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10058C088();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100580608@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[8];
  char v9;

  sub_100589EAC(a1, (uint64_t)v8);
  if (!v2)
  {
    v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_BYTE *)(a2 + 128) = v9;
    v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100580670(_QWORD *a1)
{
  return sub_1005800CC(a1);
}

uint64_t sub_1005806C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  Swift::String v13;

  v4 = a1 == 1802465122 && a2 == (void *)0xE400000000000000;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 1802465122, 0xE400000000000000, 0) & 1) != 0)
  {
    v7 = (unsigned int *)&enum case for CollectionRecommendationType.book(_:);
  }
  else if (a1 == 0x736B6F6F62 && a2 == (void *)0xE500000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x736B6F6F62, 0xE500000000000000, 0) & 1) != 0)
  {
    v7 = (unsigned int *)&enum case for CollectionRecommendationType.books(_:);
  }
  else
  {
    if ((a1 != 0x736569726573 || a2 != (void *)0xE600000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x736569726573, 0xE600000000000000, 0) & 1) == 0)
    {
      swift_bridgeObjectRetain(a2);
      v13._countAndFlagsBits = a1;
      v13._object = a2;
      v12 = (char *)sub_100580830
          + 4
          * byte_10072DF15[_s5Books28PersonalRecommendationIntentV10CollectionO8rawValueAESgSS_tcfC_0(v13)];
      __asm { BR              X10 }
    }
    v7 = (unsigned int *)&enum case for CollectionRecommendationType.series(_:);
  }
  v8 = *v7;
  v9 = type metadata accessor for CollectionRecommendationType(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a3, v8, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
}

void sub_100580830()
{
  type metadata accessor for CollectionRecommendationType(0);
  JUMPOUT(0x1005807F0);
}

void sub_100580854()
{
  JUMPOUT(0x1005807B4);
}

void sub_100580860()
{
  JUMPOUT(0x1005807B4);
}

void sub_10058086C()
{
  JUMPOUT(0x1005807B4);
}

void sub_100580878()
{
  JUMPOUT(0x1005807B4);
}

void sub_100580884(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___collectionRecommendationService;
  swift_beginAccess(v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___collectionRecommendationService, v10, 0, 0);
  sub_10000B5E4(v3, (uint64_t)&v8, &qword_1009EC470);
  if (v9)
  {
    sub_100022840(&v8, a1);
  }
  else
  {
    sub_100010960((uint64_t)&v8, &qword_1009EC470);
    v4 = sub_100059BB4();
    v5 = (void *)static OS_dispatch_queue.main.getter(v4);
    v6 = sub_10004CFD4(&qword_1009EC478);
    OS_dispatch_queue.syncValue<A>(_:)(&v8, sub_10058099C, 0, v6);

    if (v9)
    {
      sub_100022840(&v8, a1);
      sub_10002E418(a1, (uint64_t)&v8);
      swift_beginAccess(v3, v7, 33, 0);
      sub_10000B558((uint64_t)&v8, v3, &qword_1009EC470);
      swift_endAccess(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10058099C()
{
  return sub_100015988(&qword_1009EC478);
}

void sub_1005809A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___postHydrationFilteringService;
  swift_beginAccess(v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___postHydrationFilteringService, v10, 0, 0);
  sub_10000B5E4(v3, (uint64_t)&v8, &qword_1009EC460);
  if (v9)
  {
    sub_100022840(&v8, a1);
  }
  else
  {
    sub_100010960((uint64_t)&v8, &qword_1009EC460);
    v4 = sub_100059BB4();
    v5 = (void *)static OS_dispatch_queue.main.getter(v4);
    v6 = sub_10004CFD4(&qword_1009EC468);
    OS_dispatch_queue.syncValue<A>(_:)(&v8, sub_100580AC0, 0, v6);

    if (v9)
    {
      sub_100022840(&v8, a1);
      sub_10002E418(a1, (uint64_t)&v8);
      swift_beginAccess(v3, v7, 33, 0);
      sub_10000B558((uint64_t)&v8, v3, &qword_1009EC460);
      swift_endAccess(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100580AC0()
{
  return sub_100015988(&qword_1009EC468);
}

uint64_t sub_100580ACC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;

  v49 = a2;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Book.MediaType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collection(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v16 = sub_10058A6CC();
  if ((v17 & 1) != 0)
  {
    v46 = v6;
    v47 = v5;
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100048F64(v31, (uint64_t)qword_1009EC298);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to get hydrated books fetch limit from JS, fall back to use default value for booksYouMightLike", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v8, enum case for Book.MediaType.ebook(_:), v47);
    BooksYouMightLikeOptions.init(mediaType:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, &_swiftEmptySetSingleton, 5);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.booksYouMightLike(_:), v9);
    v36 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v37 = *(unsigned __int8 *)(v10 + 80);
    v38 = (v37 + 40) & ~v37;
    v39 = (v11 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100911070, v39 + 8, v37 | 7);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    v40 = v48;
    *((_QWORD *)v27 + 4) = v48;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v38], v12, v9);
    v41 = v49;
    *(_QWORD *)&v27[v39] = v49;
    v42 = v40;
    v43 = v41;
    v30 = &unk_1009EC450;
  }
  else
  {
    v18 = v16;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Book.MediaType.ebook(_:), v5);
    BooksYouMightLikeOptions.init(mediaType:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, &_swiftEmptySetSingleton, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.booksYouMightLike(_:), v9);
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v20 = *(unsigned __int8 *)(v10 + 80);
    v21 = (v20 + 40) & ~v20;
    v22 = v20 | 7;
    v23 = v11 + v21 + 7;
    v25 = v48;
    v24 = v49;
    v26 = v23 & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100911098, (v23 & 0xFFFFFFFFFFFFFFF8) + 8, v22);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    *((_QWORD *)v27 + 4) = v25;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v21], v12, v9);
    *(_QWORD *)&v27[v26] = v24;
    v28 = v25;
    v29 = v24;
    v30 = &unk_1009EC458;
  }
  v44 = sub_10053DC20((uint64_t)v4, (uint64_t)v30, (uint64_t)v27);
  swift_release(v44);
  sub_100010960((uint64_t)v4, &qword_1009D3150);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_100580EB4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;

  v49 = a2;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Book.MediaType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collection(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v16 = sub_10058A6CC();
  if ((v17 & 1) != 0)
  {
    v46 = v6;
    v47 = v5;
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100048F64(v31, (uint64_t)qword_1009EC298);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to get hydrated books fetch limit from JS, fall back to use default value for audiobooksYouMightLike", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v8, enum case for Book.MediaType.audiobook(_:), v47);
    BooksYouMightLikeOptions.init(mediaType:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, &_swiftEmptySetSingleton, 5);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.booksYouMightLike(_:), v9);
    v36 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v37 = *(unsigned __int8 *)(v10 + 80);
    v38 = (v37 + 40) & ~v37;
    v39 = (v11 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100911020, v39 + 8, v37 | 7);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    v40 = v48;
    *((_QWORD *)v27 + 4) = v48;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v38], v12, v9);
    v41 = v49;
    *(_QWORD *)&v27[v39] = v49;
    v42 = v40;
    v43 = v41;
    v30 = &unk_1009EC440;
  }
  else
  {
    v18 = v16;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Book.MediaType.audiobook(_:), v5);
    BooksYouMightLikeOptions.init(mediaType:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, &_swiftEmptySetSingleton, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.booksYouMightLike(_:), v9);
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v20 = *(unsigned __int8 *)(v10 + 80);
    v21 = (v20 + 40) & ~v20;
    v22 = v20 | 7;
    v23 = v11 + v21 + 7;
    v25 = v48;
    v24 = v49;
    v26 = v23 & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100911048, (v23 & 0xFFFFFFFFFFFFFFF8) + 8, v22);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    *((_QWORD *)v27 + 4) = v25;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v21], v12, v9);
    *(_QWORD *)&v27[v26] = v24;
    v28 = v25;
    v29 = v24;
    v30 = &unk_1009EC448;
  }
  v44 = sub_10053DC20((uint64_t)v4, (uint64_t)v30, (uint64_t)v27);
  swift_release(v44);
  sub_100010960((uint64_t)v4, &qword_1009D3150);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_10058129C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;

  v49 = a2;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Book.MediaType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collection(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v16 = sub_10058A6CC();
  if ((v17 & 1) != 0)
  {
    v46 = v6;
    v47 = v5;
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100048F64(v31, (uint64_t)qword_1009EC298);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to get hydrated books fetch limit from JS, fall back to use default value for moreFromYourAuthors", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v8, enum case for Book.MediaType.ebook(_:), v47);
    MoreFromYourAuthorsOptions.init(mediaType:seedBooks:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, 0, &_swiftEmptySetSingleton, 5);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.moreFromYourAuthors(_:), v9);
    v36 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v37 = *(unsigned __int8 *)(v10 + 80);
    v38 = (v37 + 40) & ~v37;
    v39 = (v11 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100910FD0, v39 + 8, v37 | 7);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    v40 = v48;
    *((_QWORD *)v27 + 4) = v48;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v38], v12, v9);
    v41 = v49;
    *(_QWORD *)&v27[v39] = v49;
    v42 = v40;
    v43 = v41;
    v30 = &unk_1009EC428;
  }
  else
  {
    v18 = v16;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Book.MediaType.ebook(_:), v5);
    MoreFromYourAuthorsOptions.init(mediaType:seedBooks:excludedStoreIDs:hydratedBooksFetchLimit:)(v8, 0, &_swiftEmptySetSingleton, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for Collection.moreFromYourAuthors(_:), v9);
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v20 = *(unsigned __int8 *)(v10 + 80);
    v21 = (v20 + 40) & ~v20;
    v22 = v20 | 7;
    v23 = v11 + v21 + 7;
    v25 = v48;
    v24 = v49;
    v26 = v23 & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_100910FF8, (v23 & 0xFFFFFFFFFFFFFFF8) + 8, v22);
    *((_QWORD *)v27 + 2) = 0;
    *((_QWORD *)v27 + 3) = 0;
    *((_QWORD *)v27 + 4) = v25;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v21], v12, v9);
    *(_QWORD *)&v27[v26] = v24;
    v28 = v25;
    v29 = v24;
    v30 = &unk_1009EC430;
  }
  v44 = sub_10053DC20((uint64_t)v4, (uint64_t)v30, (uint64_t)v27);
  swift_release(v44);
  sub_100010960((uint64_t)v4, &qword_1009D3150);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_100581708(uint64_t a1, objc_class *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  Swift::String v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  Class isa;
  id v29;
  objc_class *v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void *v35;
  JSValue v36;
  Swift::OpaquePointer_optional v37;

  v36.super.isa = a2;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CollectionRecommendationRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_10004CFD4(&qword_1009EC380);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - v16;
  sub_1005819D4((uint64_t)&v33 - v16);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v14, &qword_1009EC380);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v14, &qword_1009EC380);
    v18 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v19._countAndFlagsBits = 0x80000001007D3DC0;
    v37.value._rawValue = 0;
    v37.is_nil = 108;
    v19._object = (void *)243;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(v36, v37, v19, v20);

  }
  else
  {
    v34 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v34(v11, v14, v5);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    v22 = *(unsigned __int8 *)(v6 + 80);
    v23 = (v22 + 40) & ~v22;
    v24 = (v7 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = (char *)swift_allocObject(&unk_100910F80, v24 + 8, v22 | 7);
    *((_QWORD *)v25 + 2) = 0;
    *((_QWORD *)v25 + 3) = 0;
    v26 = v34;
    v27 = v35;
    *((_QWORD *)v25 + 4) = v35;
    v26(&v25[v23], v8, v5);
    isa = v36.super.isa;
    *(JSValue *)&v25[v24] = v36;
    v29 = v27;
    v30 = isa;
    v31 = sub_10053DC20((uint64_t)v4, (uint64_t)&unk_1009EC390, (uint64_t)v25);
    swift_release(v31);
    sub_100010960((uint64_t)v4, &qword_1009D3150);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return sub_100010960((uint64_t)v17, &qword_1009EC380);
}

uint64_t sub_1005819D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  void (*v55)(char *, char *, uint64_t);
  uint8_t *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  void *v96;
  BOOL v97;
  char *v98;
  __n128 v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  __n128 v110;
  void (*v111)(double (*)(void), uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  double (*v118)(void);
  uint64_t v119;
  char v120;
  char *v121;
  _QWORD *v122;
  uint64_t v123;
  char v124;
  unint64_t v125;
  uint64_t v126;
  _BOOL8 v127;
  uint64_t v128;
  char v129;
  unint64_t v130;
  char v131;
  _QWORD *v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  __n128 v136;
  void (*v137)(uint64_t, uint64_t, __n128);
  BOOL v138;
  BOOL v139;
  Swift::String v140;
  Swift::Int v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  double (*v152)(void);
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v160;
  uint64_t v161;
  __n128 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  double (*v174)(void);
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  __n128 v183;
  char *v184;
  __int128 v185;
  __n128 v186;
  char *v187;
  char *v188;
  uint64_t v189;
  __n128 v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  uint64_t v205;
  unsigned int v206;
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  unsigned int v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  double (*v231)(uint64_t, char *, uint64_t);
  void *v232;
  uint64_t v233;
  _QWORD *v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  double (*v244)(void);
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  char v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  char v265;

  v223 = a1;
  v1 = sub_10004CFD4(&qword_1009EC308);
  __chkstk_darwin(v1);
  v219 = (char *)&v200 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009EC310);
  v4 = __chkstk_darwin(v3);
  v218 = (char *)&v200 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ClusteringOptions(0, v4);
  __chkstk_darwin(v6);
  v217 = (char *)&v200 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StoreInfo(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v200 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UserInfo(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v200 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ClusteringOptions.MediaType(0);
  v245 = *(_QWORD *)(v14 - 8);
  v246 = v14;
  __chkstk_darwin(v14);
  v244 = (double (*)(void))((char *)&v200 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v243 = (char *)&v200 - v17;
  v227 = type metadata accessor for CollectionRecommendationOptions(0);
  v237 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v236 = (char *)&v200 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v229 = (char *)&v200 - v20;
  v21 = sub_10004CFD4(&qword_1009EC318);
  __chkstk_darwin(v21);
  v230 = (char *)&v200 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CollectionRecommendationType(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v238 = (char *)&v200 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v235 = (char *)&v200 - v27;
  v28 = type metadata accessor for SaleOptions(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v216 = (char *)&v200 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v222 = (char *)&v200 - v32;
  v33 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v257 = 0;
  v35 = objc_msgSend(v33, "dataWithJSONObject:options:error:", isa, 0, &v257);

  v36 = (id)v257;
  if (!v35)
  {
    v58 = v36;
    v59 = _convertNSErrorToError(_:)(v36);

    swift_willThrow(v60);
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v61 = type metadata accessor for Logger(0);
    sub_100048F64(v61, (uint64_t)qword_1009EC298);
    swift_errorRetain(v59);
    v62 = swift_errorRetain(v59);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v65 = 138412290;
      swift_errorRetain(v59);
      v67 = _swift_stdlib_bridgeErrorToNSError(v59);
      *(_QWORD *)&v257 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, (char *)&v257 + 8, v65 + 4, v65 + 12);
      *v66 = v67;
      swift_errorRelease(v59);
      swift_errorRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Failed to convert provided configuration dictionary to JSON: %@", v65, 0xCu);
      v68 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v66, 1, v68);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      swift_errorRelease(v59);
    }
    else
    {
      swift_errorRelease(v59);
      swift_errorRelease(v59);
      swift_errorRelease(v59);

    }
    v87 = v223;
    v84 = type metadata accessor for CollectionRecommendationRequest(0);
    v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56);
    v86 = v87;
    goto LABEL_23;
  }
  v215 = v29;
  v212 = v13;
  v213 = v10;
  v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v39 = v38;

  v40 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v41 = sub_10006CE24(v37, v39);
  v42 = JSONDecoder.init()(v41);
  v43 = sub_100589368();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for CollectionRecommendationsConfiguration, v37, v39, &type metadata for CollectionRecommendationsConfiguration, v43);
  v214 = v37;
  v210 = v28;
  v211 = v39;
  swift_release(v42);
  v263 = v254;
  v264 = v255;
  v265 = v256;
  v259 = v250;
  v260 = v251;
  v261 = v252;
  v262 = v253;
  v257 = v248;
  v258 = v249;
  sub_100582F04((uint64_t)&v257);
  if (BYTE8(v260))
    v69 = 5;
  else
    v69 = v260;
  v70 = v261;
  if (BYTE8(v261))
    v70 = 100;
  v209 = v70;
  v71 = (void (*)(char *, uint64_t))*((_QWORD *)&v263 + 1);
  v57 = v227;
  v226 = v24;
  if (*((_QWORD *)&v263 + 1))
  {
    v72 = v264;
    if ((_QWORD)v264)
    {
      *(_QWORD *)&v248 = *((_QWORD *)&v263 + 1);
      swift_bridgeObjectRetain(*((_QWORD *)&v263 + 1));
      swift_bridgeObjectRetain(v72);
      v73 = sub_10004CFD4(&qword_1009EC338);
      v74 = sub_100030B34(&qword_1009EC340, &qword_1009EC338, (uint64_t)&protocol conformance descriptor for [A : B]);
      if ((Collection.isNotEmpty.getter(v73, v74) & 1) != 0
        || (*(_QWORD *)&v248 = v72,
            v75 = sub_10004CFD4(&qword_1009EC348),
            v76 = sub_100030B34(&qword_1009EC350, &qword_1009EC348, (uint64_t)&protocol conformance descriptor for [A : B]), (Collection.isNotEmpty.getter(v75, v76) & 1) != 0))
      {
        v77 = swift_bridgeObjectRetain(v71);
        v78 = sub_1003A8DC4(v77);
        swift_bridgeObjectRetain(v72);
        sub_100576B88(v79, v78);
        v81 = v80;
        swift_bridgeObjectRetain(v71);
        swift_bridgeObjectRetain(v72);
        sub_1005893AC((uint64_t)_swiftEmptyDictionarySingleton, v81, v71, v72);
        v83 = v82;
        swift_bridgeObjectRelease(v81);
        swift_bridgeObjectRelease_n(v71, 2);
        swift_bridgeObjectRelease_n(v72, 2);
LABEL_83:
        v182 = v257;
        v183 = swift_bridgeObjectRetain(*((_QWORD *)&v257 + 1));
        v184 = v212;
        UserInfo.init(treatmentID:)(v182, *((_QWORD *)&v182 + 1), v183);
        v185 = v258;
        v186 = swift_bridgeObjectRetain(*((_QWORD *)&v258 + 1));
        v187 = v213;
        StoreInfo.init(countryCode:)(v185, *((_QWORD *)&v185 + 1), v186);
        v188 = v216;
        v189 = v210;
        (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v216, v222, v210);
        LODWORD(v247) = BYTE2(v259);
        v190 = swift_bridgeObjectRetain(v83);
        v191 = v217;
        ClusteringOptions.init(minBooksCount:maxBooksCount:optionsByCollectionRecommendationType:wildcardMaximumCount:)(v69, v209, v83, *((_QWORD *)&v185 + 1), v190);
        v192 = type metadata accessor for MediaTypeMethod(0);
        v193 = v218;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 56))(v218, 1, 1, v192);
        v194 = type metadata accessor for SeedBasedRecommendationSource(0);
        v195 = v219;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 56))(v219, 1, 1, v194);
        v196 = v223;
        CollectionRecommendationRequest.init(userInfo:storeInfo:allGenresAllowed:allowedSales:explicitAllowed:excludedStoreIDs:clusteringOptions:optionsByCollectionRecommendationType:overrideMediaTypeMethod:overrideBookCandidateLimit:overrideBookCandidateLimitPerSeedBook:overrideSeedBasedRecommendationSource:)(v184, v187, 0, v188, v247, &_swiftEmptySetSingleton, v191, v83, v193, 0, 1, 0, 1, v195);
        v197 = v214;
        v198 = v211;
        sub_10005EE1C(v214, v211);
        sub_10058ABA4(&v257);
        sub_10005EE1C(v197, v198);
        (*(void (**)(char *, uint64_t))(v215 + 8))(v222, v189);
        v84 = type metadata accessor for CollectionRecommendationRequest(0);
        v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56);
        v86 = v196;
        v88 = 0;
        return v85(v86, v88, 1, v84);
      }
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v72);
    }
  }
  v89 = v262;
  if (!(_QWORD)v262)
  {
    v144 = sub_10004CFD4(&qword_1009EC328);
    v145 = sub_10004CFD4(&qword_1009D05B8);
    v146 = *(_QWORD *)(v145 - 8);
    v147 = *(_QWORD *)(v146 + 72);
    v148 = *(unsigned __int8 *)(v146 + 80);
    v149 = (v148 + 32) & ~v148;
    v150 = swift_allocObject(v144, v149 - v147 + 8 * v147, v148 | 7);
    v247 = v150;
    *(_OWORD *)(v150 + 16) = xmmword_100723930;
    v207 = v69;
    v151 = v150 + v149;
    v152 = *(double (**)(void))(v226 + 104);
    v153.n128_f64[0] = ((double (*)(uint64_t, _QWORD, uint64_t))v152)(v150 + v149, enum case for CollectionRecommendationType.book(_:), v23);
    v154 = static ClusteringOptions.MediaType.allCases.getter(v153);
    v155 = sub_1003ACCEC(v154);
    swift_bridgeObjectRelease(v154);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v155);
    v156.n128_f64[0] = v152();
    v157 = static ClusteringOptions.MediaType.allCases.getter(v156);
    v158 = sub_1003ACCEC(v157);
    swift_bridgeObjectRelease(v157);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v158);
    v159.n128_f64[0] = v152();
    v160 = static ClusteringOptions.MediaType.allCases.getter(v159);
    v161 = sub_1003ACCEC(v160);
    swift_bridgeObjectRelease(v160);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v161);
    v244 = v152;
    v162.n128_f64[0] = v152();
    v163 = static ClusteringOptions.MediaType.allCases.getter(v162);
    v164 = sub_1003ACCEC(v163);
    swift_bridgeObjectRelease(v163);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v164);
    v243 = (char *)(v151 + 4 * v147 + *(int *)(v145 + 48));
    v152();
    v165 = sub_10004CFD4(&qword_1009EC330);
    v166 = v245;
    v167 = *(unsigned __int8 *)(v245 + 80);
    v168 = (v167 + 32) & ~v167;
    v169 = swift_allocObject(v165, v168 + *(_QWORD *)(v245 + 72), v167 | 7);
    *(_OWORD *)(v169 + 16) = xmmword_10070CCA0;
    v170 = v169 + v168;
    v171 = v169 + v168;
    v172 = v246;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v166 + 104))(v171, enum case for ClusteringOptions.MediaType.ebook(_:), v246);
    v173 = sub_1001E136C(v169);
    swift_setDeallocating(v169);
    swift_arrayDestroy(v170, 1, v172);
    swift_deallocClassInstance(v169, 32, 7);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v173);
    v174 = v244;
    v175.n128_f64[0] = v244();
    v176 = static ClusteringOptions.MediaType.allCases.getter(v175);
    v177 = sub_1003ACCEC(v176);
    swift_bridgeObjectRelease(v176);
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v177);
    v178.n128_f64[0] = v174();
    v179 = static ClusteringOptions.MediaType.allCases.getter(v178);
    v180 = sub_1003ACCEC(v179);
    swift_bridgeObjectRelease(v179);
    v181 = v180;
    v69 = v207;
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v181);
    v83 = sub_1001DB3C4(v247);
    goto LABEL_83;
  }
  v225 = *(_QWORD *)(v262 + 16);
  if (!v225)
  {
    swift_bridgeObjectRetain(v262);
    v234 = _swiftEmptyDictionarySingleton;
LABEL_82:
    swift_bridgeObjectRelease(v89);
    v83 = (unint64_t)v234;
    goto LABEL_83;
  }
  v207 = v69;
  v224 = v262 + 32;
  v204 = enum case for CollectionRecommendationType.mangaYouMightLike(_:);
  v203 = enum case for CollectionRecommendationType.moreFromYourAuthors(_:);
  v202 = enum case for CollectionRecommendationType.booksYouMightLike(_:);
  v201 = enum case for CollectionRecommendationType.booksBySuggestedAuthors(_:);
  v206 = enum case for CollectionRecommendationType.series(_:);
  v208 = enum case for CollectionRecommendationType.books(_:);
  v221 = enum case for CollectionRecommendationType.book(_:);
  v205 = v262;
  swift_bridgeObjectRetain_n(v262, 2);
  v90 = 0;
  v234 = _swiftEmptyDictionarySingleton;
  v91 = v246;
  v92 = v243;
  v93 = v226;
  v220 = v23;
  while (1)
  {
    v94 = (uint64_t *)(v224 + 16 * v90);
    v95 = *v94;
    v96 = (void *)v94[1];
    v97 = *v94 == 1802465122 && v96 == (void *)0xE400000000000000;
    if (v97
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, 1802465122, 0xE400000000000000, 0) & 1) != 0)
    {
      v98 = v230;
      (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v230, v221, v23);
    }
    else
    {
      v138 = v95 == 0x736B6F6F62 && v96 == (void *)0xE500000000000000;
      if (v138
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, 0x736B6F6F62, 0xE500000000000000, 0) & 1) != 0)
      {
        v98 = v230;
        (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v230, v208, v23);
      }
      else
      {
        v139 = v95 == 0x736569726573 && v96 == (void *)0xE600000000000000;
        if (!v139
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, 0x736569726573, 0xE600000000000000, 0) & 1) == 0)
        {
          swift_bridgeObjectRetain_n(v96, 2);
          v140._countAndFlagsBits = v95;
          v140._object = v96;
          v141 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0F80, v140);
          v142 = swift_bridgeObjectRelease(v96);
          switch(v141)
          {
            case 0:
              v98 = v230;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v93 + 104))(v230, v201, v23, v142);
              goto LABEL_35;
            case 1:
              v98 = v230;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v93 + 104))(v230, v202, v23, v142);
              goto LABEL_35;
            case 3:
              v98 = v230;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v93 + 104))(v230, v204, v23, v142);
              goto LABEL_35;
            case 4:
              v98 = v230;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v93 + 104))(v230, v203, v23, v142);
              goto LABEL_35;
            default:
              v143 = (uint64_t)v230;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v93 + 56))(v230, 1, 1, v23, v142);
              sub_100010960(v143, &qword_1009EC318);
              goto LABEL_58;
          }
        }
        v98 = v230;
        (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v230, v206, v23);
      }
    }
    v99 = swift_bridgeObjectRetain(v96);
LABEL_35:
    v232 = v96;
    v233 = v90;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v93 + 56))(v98, 0, 1, v23, v99);
    v100 = v235;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v235, v98, v23);
    v231 = *(double (**)(uint64_t, char *, uint64_t))(v93 + 16);
    v101.n128_f64[0] = v231((uint64_t)v238, v100, v23);
    v102 = static ClusteringOptions.MediaType.allCases.getter(v101);
    v103 = *(_QWORD *)(v102 + 16);
    v241 = sub_100008DB0(&qword_1009D05D0, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
    v104 = Set.init(minimumCapacity:)(v103, v91, v241);
    v240 = *(_QWORD *)(v102 + 16);
    if (v240)
    {
      v105 = 0;
      v106 = *(unsigned __int8 *)(v245 + 80);
      v228 = v102;
      v239 = v102 + ((v106 + 32) & ~v106);
      v247 = *(_QWORD *)(v245 + 72);
      v107 = *(void (**)(char *, uint64_t, uint64_t))(v245 + 16);
      do
      {
        v242 = v105;
        v107(v92, v239 + v247 * v105, v91);
        v112 = *(_QWORD *)(v104 + 40);
        swift_bridgeObjectRetain(v104);
        v113 = dispatch thunk of Hashable._rawHashValue(seed:)(v112, v91, v241);
        v114 = -1 << *(_BYTE *)(v104 + 32);
        v115 = v113 & ~v114;
        if (((*(_QWORD *)(v104 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8)) >> v115) & 1) != 0)
        {
          v116 = ~v114;
          while (1)
          {
            v117 = v246;
            v118 = v244;
            v107((char *)v244, *(_QWORD *)(v104 + 48) + v115 * v247, v246);
            v119 = sub_100008DB0(&qword_1009D05D8, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
            v120 = dispatch thunk of static Equatable.== infix(_:_:)(v118, v92, v117, v119);
            v111 = *(void (**)(double (*)(void), uint64_t))(v245 + 8);
            v111(v118, v117);
            if ((v120 & 1) != 0)
              break;
            v115 = (v115 + 1) & v116;
            v92 = v243;
            if (((*(_QWORD *)(v104 + 56 + ((v115 >> 3) & 0xFFFFFFFFFFFFF8)) >> v115) & 1) == 0)
              goto LABEL_37;
          }
          v110 = swift_bridgeObjectRelease(v104);
          v91 = v246;
          v92 = v243;
        }
        else
        {
LABEL_37:
          swift_bridgeObjectRelease(v104);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v104);
          v109 = (uint64_t)v244;
          v91 = v246;
          v107((char *)v244, (uint64_t)v92, v246);
          *(_QWORD *)&v248 = v104;
          sub_10060ED2C(v109, v115, isUniquelyReferenced_nonNull_native);
          v104 = v248;
          v110 = swift_bridgeObjectRelease(0x8000000000000000);
          v111 = *(void (**)(double (*)(void), uint64_t))(v245 + 8);
        }
        ((void (*)(char *, uint64_t, __n128))v111)(v92, v91, v110);
        v105 = v242 + 1;
      }
      while (v242 + 1 != v240);
      swift_bridgeObjectRelease(v228);
      v23 = v220;
      v57 = v227;
    }
    else
    {
      swift_bridgeObjectRelease(v102);
    }
    v121 = v229;
    CollectionRecommendationOptions.init(maxCount:mediaTypes:)(1, 0, v104);
    v55 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
    v55(v236, v121, v57);
    v122 = v234;
    v123 = swift_isUniquelyReferenced_nonNull_native(v234);
    *(_QWORD *)&v248 = v122;
    v125 = sub_1002BBDE4((uint64_t)v238);
    v126 = v122[2];
    v127 = (v124 & 1) == 0;
    v128 = v126 + v127;
    if (__OFADD__(v126, v127))
      break;
    if (v122[3] < v128)
    {
      v129 = v124;
      sub_10037D198(v128, v123);
      v130 = sub_1002BBDE4((uint64_t)v238);
      if ((v129 & 1) != (v131 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v23);
        __break(1u);
        JUMPOUT(0x100582EF0);
      }
      v125 = v130;
      goto LABEL_51;
    }
    if ((v123 & 1) == 0)
    {
      v129 = v124;
      sub_1002C1C90();
LABEL_51:
      v124 = v129;
    }
    v93 = v226;
    v132 = (_QWORD *)v248;
    if ((v124 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v237 + 40))(*(_QWORD *)(v248 + 56) + *(_QWORD *)(v237 + 72) * v125, v236, v57);
    }
    else
    {
      *(_QWORD *)(v248 + 8 * (v125 >> 6) + 64) |= 1 << v125;
      v231(v132[6] + *(_QWORD *)(v93 + 72) * v125, v238, v23);
      v55((char *)(v132[7] + *(_QWORD *)(v237 + 72) * v125), v236, v57);
      v133 = v132[2];
      v134 = __OFADD__(v133, 1);
      v135 = v133 + 1;
      if (v134)
        goto LABEL_86;
      v132[2] = v135;
    }
    v234 = (_QWORD *)v248;
    v136 = swift_bridgeObjectRelease(0x8000000000000000);
    v137 = *(void (**)(uint64_t, uint64_t, __n128))(v93 + 8);
    v137((uint64_t)v238, v23, v136);
    ((void (*)(char *, uint64_t))v137)(v235, v23);
    v96 = v232;
    v90 = v233;
LABEL_58:
    ++v90;
    swift_bridgeObjectRelease(v96);
    if (v90 == v225)
    {
      v89 = v205;
      swift_bridgeObjectRelease(v205);
      v69 = v207;
      goto LABEL_82;
    }
  }
  __break(1u);
LABEL_86:
  __break(1u);
  swift_once(&qword_1009CE8A8, sub_100009F10);
  v44 = type metadata accessor for Logger(0);
  sub_100048F64(v44, (uint64_t)qword_1009EC298);
  swift_errorRetain(v125);
  v45 = swift_errorRetain(v125);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.error.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = (unint64_t)v55;
    v50 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v48 = 138412290;
    swift_errorRetain(v125);
    v51 = _swift_stdlib_bridgeErrorToNSError(v125);
    *(_QWORD *)&v257 = v51;
    v52 = v214;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, (char *)&v257 + 8, v48 + 4, v48 + 12);
    *v50 = v51;
    swift_errorRelease(v125);
    swift_errorRelease(v125);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to deserialize JSON into configuration object: %@", v48, 0xCu);
    v53 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v50, 1, v53);
    v54 = v50;
    v55 = (void (*)(char *, char *, uint64_t))v49;
    swift_slowDealloc(v54, -1, -1);
    v56 = v48;
    v57 = v52;
    swift_slowDealloc(v56, -1, -1);
    sub_10005EE1C(v52, v49);

  }
  else
  {
    sub_10005EE1C(v57, (unint64_t)v55);

    swift_errorRelease(v125);
    swift_errorRelease(v125);
  }
  swift_errorRelease(v125);
  sub_10005EE1C(v57, (unint64_t)v55);
  v84 = type metadata accessor for CollectionRecommendationRequest(0);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56);
  v86 = v223;
LABEL_23:
  v88 = 1;
  return v85(v86, v88, 1, v84);
}

double sub_100582F04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  _QWORD *v30;
  double result;
  uint64_t v32;
  _QWORD *v33;

  v2 = type metadata accessor for SaleOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - v14;
  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    v16 = _swiftEmptyArrayStorage;
    if ((*(_BYTE *)(a1 + 33) & 1) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  static SaleOptions.free.getter(v13);
  v17 = sub_1000646D0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  v20 = v17;
  if (v19 >= v18 >> 1)
    v20 = sub_1000646D0(v18 > 1, v19 + 1, 1, v17);
  *(_QWORD *)(v20 + 16) = v19 + 1;
  v21 = v15;
  v16 = (_QWORD *)v20;
  v13 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v19, v21, v2);
  if ((*(_BYTE *)(a1 + 33) & 1) != 0)
  {
LABEL_7:
    static SaleOptions.paid.getter(v13);
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = (_QWORD *)sub_1000646D0(0, v16[2] + 1, 1, (unint64_t)v16);
    v23 = v16[2];
    v22 = v16[3];
    if (v23 >= v22 >> 1)
      v16 = (_QWORD *)sub_1000646D0(v22 > 1, v23 + 1, 1, (unint64_t)v16);
    v16[2] = v23 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v23, v11, v2);
  }
LABEL_12:
  v24 = sub_100008DB0(&qword_1009EC370, (uint64_t (*)(uint64_t))&type metadata accessor for SaleOptions, (uint64_t)&protocol conformance descriptor for SaleOptions);
  dispatch thunk of SetAlgebra.init()(v2, v24);
  v25 = v16[2];
  if (v25)
  {
    v26 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v33 = v16;
    v27 = (char *)v16 + v26;
    v28 = *(_QWORD *)(v3 + 72);
    v29 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    do
    {
      v29(v5, v27, v2);
      dispatch thunk of SetAlgebra.insert(_:)(v8, v5, v2, v24);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v27 += v28;
      --v25;
    }
    while (v25);
    v30 = v33;
  }
  else
  {
    v30 = v16;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v30).n128_u64[0];
  return result;
}

uint64_t sub_1005831B8(uint64_t a1, uint64_t *a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  __n128 v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  __n128 v37;
  int v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t, __n128);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t, __n128);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  char *v88;
  _QWORD *v89;

  v86 = a3;
  v85 = a4;
  v83 = a1;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009E8A60);
  __chkstk_darwin(v5);
  v82 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EC358);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for ClusteringOptions.MediaType(0);
  v79 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v88 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v87 = (char *)&v74 - v12;
  v13 = sub_10004CFD4(&qword_1009EC318);
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CollectionRecommendationType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v74 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v74 - v24;
  v27 = *a2;
  v26 = (void *)a2[1];
  sub_1005806C0(v27, v26, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_100010960((uint64_t)v15, &qword_1009EC318);
  v80 = (uint64_t)v26;
  v81 = v27;
  v76 = v19;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v15, v16);
  v30 = v86;
  v31 = v25;
  v32 = v84;
  v33 = v22;
  if (*((_QWORD *)v86 + 2))
  {
    v34 = v80;
    swift_bridgeObjectRetain(v80);
    v35 = sub_10004CE80(v81, v34);
    if ((v36 & 1) != 0)
    {
      v74 = *(_QWORD *)(*((_QWORD *)v30 + 7) + 8 * v35);
      v37 = swift_bridgeObjectRelease(v34);
      v75 = *(void (**)(char *, char *, uint64_t, __n128))(v17 + 16);
      v75(v33, v25, v16, v37);
      v38 = 0;
      goto LABEL_8;
    }
    v29 = swift_bridgeObjectRelease(v34);
  }
  v75 = *(void (**)(char *, char *, uint64_t, __n128))(v17 + 16);
  v75(v33, v25, v16, v29);
  v74 = sub_100583720();
  v38 = v39 & 1;
LABEL_8:
  v40 = v81;
  v41 = *(void (**)(char *, uint64_t))(v17 + 8);
  v41(v33, v16);
  v42 = v85;
  v43 = *(_QWORD *)(v85 + 16);
  v77 = v31;
  v78 = v16;
  v86 = v41;
  LODWORD(v81) = v38;
  if (v43)
  {
    v44 = v80;
    swift_bridgeObjectRetain(v80);
    v45 = sub_10004CE80(v40, v44);
    if ((v46 & 1) != 0)
    {
      v47 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v45);
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRelease(v44);
      v48 = *(_QWORD *)(v47 + 16);
      if (v48)
      {
        swift_bridgeObjectRetain(v47);
        v85 = v47;
        v49 = (_QWORD *)(v47 + 40);
        v50 = _swiftEmptyArrayStorage;
        v51 = v88;
        v52 = v79;
        do
        {
          v53 = *(v49 - 1);
          v54 = *v49;
          v55 = swift_bridgeObjectRetain(*v49);
          ClusteringOptions.MediaType.init(rawValue:)(v53, v54, v55);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v9, 1, v32) == 1)
          {
            sub_100010960((uint64_t)v9, &qword_1009EC358);
          }
          else
          {
            v56 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
            v57 = v87;
            v56(v87, v9, v32);
            v56(v51, v57, v32);
            if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
              v50 = (_QWORD *)sub_1005B225C(0, v50[2] + 1, 1, (unint64_t)v50);
            v59 = v50[2];
            v58 = v50[3];
            if (v59 >= v58 >> 1)
              v50 = (_QWORD *)sub_1005B225C(v58 > 1, v59 + 1, 1, (unint64_t)v50);
            v50[2] = v59 + 1;
            v60 = (unint64_t)v50
                + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))
                + *(_QWORD *)(v52 + 72) * v59;
            v51 = v88;
            v56((char *)v60, v88, v32);
          }
          v49 += 2;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease_n(v85, 2);
        goto LABEL_25;
      }
      v61 = v47;
    }
    else
    {
      v61 = v44;
    }
    swift_bridgeObjectRelease(v61);
  }
  v50 = _swiftEmptyArrayStorage;
LABEL_25:
  v62 = (uint64_t)v82;
  v64 = (void (*)(uint64_t, char *, uint64_t, __n128))v75;
  v63 = (uint64_t)v76;
  v65 = v74;
  v89 = v50;
  v66 = sub_10004CFD4(&qword_1009EC360);
  v67 = sub_100030B34(&qword_1009EC368, &qword_1009EC360, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v66, v67) & 1) == 0)
  {
    v68 = swift_bridgeObjectRelease(v50);
    v50 = (_QWORD *)static ClusteringOptions.MediaType.allCases.getter(v68);
  }
  v69 = sub_1003ACCEC((uint64_t)v50);
  v70 = swift_bridgeObjectRelease(v50);
  v72 = v77;
  v71 = v78;
  v64(v63, v77, v78, v70);
  CollectionRecommendationOptions.init(maxCount:mediaTypes:)(v65, v81, v69);
  v73 = type metadata accessor for CollectionRecommendationOptions(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v62, 0, 1, v73);
  sub_1004EFC24(v62, v63);
  return ((uint64_t (*)(char *, uint64_t))v86)(v72, v71);
}

uint64_t sub_100583720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for CollectionRecommendationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for CollectionRecommendationType.book(_:))
    return 8;
  if (v6 == enum case for CollectionRecommendationType.books(_:)
    || v6 == enum case for CollectionRecommendationType.booksBasedOnSeed(_:)
    || v6 == enum case for CollectionRecommendationType.booksByAuthor(_:)
    || v6 == enum case for CollectionRecommendationType.booksBySuggestedAuthors(_:)
    || v6 == enum case for CollectionRecommendationType.booksInGenre(_:)
    || v6 == enum case for CollectionRecommendationType.booksYouMightLike(_:)
    || v6 == enum case for CollectionRecommendationType.mangaYouMightLike(_:)
    || v6 == enum case for CollectionRecommendationType.moreFromYourAuthors(_:))
  {
    return 1;
  }
  if (v6 == enum case for CollectionRecommendationType.series(_:))
    return 8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

double sub_100583988(uint64_t a1, char *a2, uint64_t a3, JSValue a4)
{
  Class isa;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  Swift::String v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  objc_class *v30;
  objc_class *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  _QWORD *v37;
  Swift::OpaquePointer_optional v38;

  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = _swiftEmptyArrayStorage;
  v12 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_18:
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (v13)
    {
LABEL_3:
      v33 = a2;
      v34 = a3;
      v35 = isa;
      isa = a4.super.isa;
      a4.super.isa = (Class)4;
      do
      {
        v14 = (char *)a4.super.isa - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          a3 = specialized _ArrayBuffer._getElementSlowPath(_:)((char *)a4.super.isa - 4, a1);
          v15 = __OFADD__(v14, 1);
          a2 = (char *)a4.super.isa - 3;
          if (v15)
            goto LABEL_17;
        }
        else
        {
          a3 = *(_QWORD *)(a1 + 8 * (uint64_t)a4.super.isa);
          swift_unknownObjectRetain(a3);
          v15 = __OFADD__(v14, 1);
          a2 = (char *)a4.super.isa - 3;
          if (v15)
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v36 = a3;
        sub_100583D18((unint64_t *)&v37, &v36);
        swift_unknownObjectRelease(a3);
        ++a4.super.isa;
      }
      while (a2 != (char *)v13);
      swift_bridgeObjectRelease(a1);
      v16 = v37;
      a4.super.isa = isa;
      a3 = v34;
      isa = v35;
      a2 = v33;
      v17 = v37[2];
      if (v12)
        goto LABEL_23;
      goto LABEL_11;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v13)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(a1);
  v16 = _swiftEmptyArrayStorage;
  v17 = _swiftEmptyArrayStorage[2];
  if (v12)
  {
LABEL_23:
    if (a1 < 0)
      v26 = a1;
    else
      v26 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a1);
    if (v17 != v27)
      goto LABEL_12;
LABEL_27:
    v28 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 1, 1, v28);
    v29 = (_QWORD *)swift_allocObject(&unk_100910F58, 80, 7);
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = isa;
    v29[5] = v16;
    v29[6] = a2;
    v29[7] = a3;
    v29[8] = a1;
    v29[9] = a4.super.isa;
    swift_bridgeObjectRetain(a3);
    v30 = a4.super.isa;
    swift_bridgeObjectRetain(a1);
    v31 = isa;
    v32 = sub_10030C02C((uint64_t)v11, (uint64_t)&unk_1009EC2F8, (uint64_t)v29);
    *(_QWORD *)&result = swift_release(v32).n128_u64[0];
    return result;
  }
LABEL_11:
  if (v17 == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_27;
LABEL_12:
  swift_bridgeObjectRelease(v16);
  if (qword_1009CE8A8 != -1)
    swift_once(&qword_1009CE8A8, sub_100009F10);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100048F64(v18, (uint64_t)qword_1009EC298);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to decode array of resource objects", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v35 = (objc_class *)objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v23._countAndFlagsBits = 0x80000001007D3DC0;
  v38.value._rawValue = 0;
  v38.is_nil = 108;
  v23._object = (void *)408;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(a4, v38, v23, (Swift::Int)v35);

  return result;
}

void sub_100583D18(unint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  BOOL v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned __int8 v63;
  unint64_t v64;
  uint64_t v65;
  unsigned __int8 *v66;
  unsigned int v67;
  char v68;
  _BYTE v69[4];
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;

  v5 = sub_10004CFD4(&qword_1009EC300);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (unint64_t *)&v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for PostHydrationFilteringCandidateMetadata(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v69[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81[0] = *a2;
  swift_unknownObjectRetain(v81[0]);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  if ((swift_dynamicCast(&v82, v81, (char *)&type metadata for Swift.AnyObject + 8, v14, 6) & 1) == 0)
    return;
  v80 = v5;
  v15 = v82;
  sub_1005842CC(v82);
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v15);
  type metadata accessor for MResource(0, v18);
  v19 = type metadata accessor for MAsset(0);
  v20 = static MResource.from<A>(response:)(v17, v19);
  if (v2)
  {
    swift_errorRelease(v2);
    swift_bridgeObjectRelease(v17);
    return;
  }
  v21 = (void *)v20;
  v78 = v6;
  v79 = a1;
  swift_bridgeObjectRelease(v17);
  v22 = v21;
  v23 = MResource.id.getter(v22);
  v25 = v24;

  v26 = HIBYTE(v25) & 0xF;
  v27 = v23 & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0)
    v28 = HIBYTE(v25) & 0xF;
  else
    v28 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v28)
  {

    swift_bridgeObjectRelease(v25);
    return;
  }
  if ((v25 & 0x1000000000000000) != 0)
  {
    v30 = sub_1003277FC(v23, v25, 10);
    v32 = v68;
    goto LABEL_40;
  }
  if ((v25 & 0x2000000000000000) != 0)
  {
    v81[0] = v23;
    v81[1] = v25 & 0xFFFFFFFFFFFFFFLL;
    if (v23 == 43)
    {
      if (v26)
      {
        if (v26 != 1 && (BYTE1(v23) - 48) <= 9u)
        {
          v30 = (BYTE1(v23) - 48);
          if (v26 == 2)
            goto LABEL_39;
          if ((BYTE2(v23) - 48) <= 9u)
          {
            v30 = 10 * (BYTE1(v23) - 48) + (BYTE2(v23) - 48);
            v36 = v26 - 3;
            if (v36)
            {
              v37 = (unsigned __int8 *)v81 + 3;
              while (1)
              {
                v38 = *v37 - 48;
                if (v38 > 9)
                  goto LABEL_36;
                if (!is_mul_ok(v30, 0xAuLL))
                  goto LABEL_36;
                v34 = __CFADD__(10 * v30, v38);
                v30 = 10 * v30 + v38;
                if (v34)
                  goto LABEL_36;
                v32 = 0;
                ++v37;
                if (!--v36)
                  goto LABEL_40;
              }
            }
            goto LABEL_39;
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (v23 != 45)
      {
        if (v26 && (v23 - 48) <= 9u)
        {
          v30 = (v23 - 48);
          if (v26 == 1)
            goto LABEL_39;
          if ((BYTE1(v23) - 48) <= 9u)
          {
            v30 = 10 * (v23 - 48) + (BYTE1(v23) - 48);
            v60 = v26 - 2;
            if (v60)
            {
              v61 = (unsigned __int8 *)v81 + 2;
              while (1)
              {
                v62 = *v61 - 48;
                if (v62 > 9)
                  goto LABEL_36;
                if (!is_mul_ok(v30, 0xAuLL))
                  goto LABEL_36;
                v34 = __CFADD__(10 * v30, v62);
                v30 = 10 * v30 + v62;
                if (v34)
                  goto LABEL_36;
                v32 = 0;
                ++v61;
                if (!--v60)
                  goto LABEL_40;
              }
            }
            goto LABEL_39;
          }
        }
LABEL_36:
        v30 = 0;
LABEL_37:
        v32 = 1;
        goto LABEL_40;
      }
      if (v26)
      {
        if (v26 != 1)
        {
          v33 = BYTE1(v23) - 48;
          if ((BYTE1(v23) - 48) <= 9u)
          {
            v30 = 0;
            v34 = v33 == 0;
            v35 = -(uint64_t)v33;
            if (!v34)
              goto LABEL_37;
            if (v26 == 2)
            {
              v32 = 0;
              v30 = v35;
              goto LABEL_40;
            }
            v63 = BYTE2(v23) - 48;
            if ((BYTE2(v23) - 48) <= 9u && is_mul_ok(v35, 0xAuLL))
            {
              v64 = 10 * v35;
              v30 = v64 - v63;
              if (v64 >= v63)
              {
                v65 = v26 - 3;
                if (v65)
                {
                  v66 = (unsigned __int8 *)v81 + 3;
                  while (1)
                  {
                    v67 = *v66 - 48;
                    if (v67 > 9)
                      goto LABEL_36;
                    if (!is_mul_ok(v30, 0xAuLL))
                      goto LABEL_36;
                    v34 = 10 * v30 >= v67;
                    v30 = 10 * v30 - v67;
                    if (!v34)
                      goto LABEL_36;
                    v32 = 0;
                    ++v66;
                    if (!--v65)
                      goto LABEL_40;
                  }
                }
LABEL_39:
                v32 = 0;
                goto LABEL_40;
              }
            }
          }
        }
        goto LABEL_36;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  if ((v23 & 0x1000000000000000) != 0)
    v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v29 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v23, v25);
  v30 = (unint64_t)sub_1003276EC(v29, v27, 10);
  v32 = v31 & 1;
LABEL_40:
  v39 = swift_bridgeObjectRelease(v25);
  if ((v32 & 1) != 0)
  {

  }
  else
  {
    v77 = v30;
    v40 = MAsset.name.getter(v39);
    v75 = v41;
    v76 = v40;
    v42 = MAsset.artistName.getter();
    v73 = v43;
    v74 = v42;
    v44 = MAsset.locale.getter();
    v71 = v45;
    v72 = v44;
    v70 = objc_msgSend(v22, "isPreorder");
    v46 = objc_msgSend(v22, "artworkURL");
    if (v46)
    {
      v47 = v46;
      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v50 = v49;

    }
    else
    {
      v48 = 0;
      v50 = 0;
    }
    v51 = MAsset.sequenceNumber.getter();
    PostHydrationFilteringCandidateMetadata.init(title:author:locale:isPreorder:artworkURL:seriesSequenceNumber:)(v76, v75, v74, v73, v72, v71, v70, v48, v50, v51, v53, v52 | ((HIDWORD(v52) & 1) << 32));
    v54 = (char *)v9 + *(int *)(v80 + 48);
    *v9 = v77;
    (*(void (**)(char *, _BYTE *, uint64_t))(v11 + 32))(v54, v13, v10);
    v55 = v79;
    v56 = *v79;
    if ((swift_isUniquelyReferenced_nonNull_native(*v79) & 1) == 0)
      v56 = sub_1005B2270(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
    v57 = v78;
    v59 = *(_QWORD *)(v56 + 16);
    v58 = *(_QWORD *)(v56 + 24);
    if (v59 >= v58 >> 1)
      v56 = sub_1005B2270(v58 > 1, v59 + 1, 1, v56);
    *(_QWORD *)(v56 + 16) = v59 + 1;
    sub_100025B3C((uint64_t)v9, v56+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v59, &qword_1009EC300);

    *v55 = v56;
  }
}

void sub_1005842CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t inited;
  void (*v11)(_BYTE *, _QWORD, uint64_t);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t i;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  unint64_t v40;
  char v41;
  char v42;
  char v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  _BYTE v59[12];
  int v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[40];
  char v71[68];

  v2 = type metadata accessor for MResource.Keys(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v59[-v7];
  v9 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v9, v71);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0x657079745FLL;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v11 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104);
  v11(v8, enum case for MResource.Keys.type(_:), v2);
  v12 = swift_bridgeObjectRetain(a1);
  v13 = MResource.Keys.rawValue.getter(v12);
  v15 = v14;
  v16 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v16(v8, v2);
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v15;
  *(_QWORD *)(inited + 64) = 0x666572685FLL;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  v11(v5, enum case for MResource.Keys.href(_:), v2);
  v18 = MResource.Keys.rawValue.getter(v17);
  v20 = v19;
  v16(v5, v2);
  *(_QWORD *)(inited + 80) = v18;
  *(_QWORD *)(inited + 88) = v20;
  v21 = sub_1000316DC(inited);
  v60 = 0;
  v22 = 0;
  v23 = *(_QWORD *)(v21 + 64);
  v62 = v21 + 64;
  v24 = 1 << *(_BYTE *)(v21 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v63 = (unint64_t)(v24 + 63) >> 6;
  v61 = a1;
  if ((v25 & v23) != 0)
    goto LABEL_8;
LABEL_27:
  v44 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_52:
    __break(1u);
    return;
  }
  if (v44 < v63)
  {
    v45 = *(_QWORD *)(v62 + 8 * v44);
    ++v22;
    if (v45)
      goto LABEL_40;
    v22 = v44 + 1;
    if (v44 + 1 >= v63)
      goto LABEL_49;
    v45 = *(_QWORD *)(v62 + 8 * v22);
    if (v45)
      goto LABEL_40;
    v22 = v44 + 2;
    if (v44 + 2 >= v63)
      goto LABEL_49;
    v45 = *(_QWORD *)(v62 + 8 * v22);
    if (v45)
    {
LABEL_40:
      v26 = (v45 - 1) & v45;
      for (i = __clz(__rbit64(v45)) + (v22 << 6); ; i = v28 | (v22 << 6))
      {
        v47 = 16 * i;
        v48 = (uint64_t *)(*(_QWORD *)(v21 + 48) + v47);
        v49 = *v48;
        v50 = v48[1];
        v51 = (uint64_t *)(*(_QWORD *)(v21 + 56) + v47);
        v52 = *v51;
        v53 = v51[1];
        *(_QWORD *)&v68 = *v48;
        *((_QWORD *)&v68 + 1) = v50;
        swift_bridgeObjectRetain_n(v50, 2);
        swift_bridgeObjectRetain(v53);
        AnyHashable.init<A>(_:)(&v68, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(a1 + 16) && (v54 = sub_1000561E8((uint64_t)v70), (v55 & 1) != 0))
        {
          sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v54, (uint64_t)&v68);
        }
        else
        {
          v69 = 0u;
          v68 = 0u;
        }
        sub_1000569AC((uint64_t)v70);
        v56 = *((_QWORD *)&v69 + 1);
        sub_100010960((uint64_t)&v68, (uint64_t *)&unk_1009D04E0);
        if (!v56)
          goto LABEL_7;
        *(_QWORD *)&v68 = v52;
        *((_QWORD *)&v68 + 1) = v53;
        swift_bridgeObjectRetain(v53);
        AnyHashable.init<A>(_:)(&v68, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(a1 + 16) && (v57 = sub_1000561E8((uint64_t)v70), (v58 & 1) != 0))
        {
          sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v57, (uint64_t)&v68);
        }
        else
        {
          v69 = 0u;
          v68 = 0u;
        }
        sub_1000569AC((uint64_t)v70);
        v27 = *((_QWORD *)&v69 + 1);
        sub_100010960((uint64_t)&v68, (uint64_t *)&unk_1009D04E0);
        if (!v27)
        {
          *(_QWORD *)&v68 = v52;
          *((_QWORD *)&v68 + 1) = v53;
          AnyHashable.init<A>(_:)(&v68, &type metadata for String, &protocol witness table for String);
          *(_QWORD *)&v66 = v49;
          *((_QWORD *)&v66 + 1) = v50;
          swift_bridgeObjectRetain(v50);
          AnyHashable.init<A>(_:)(&v66, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(a1 + 16) && (v30 = sub_1000561E8((uint64_t)&v68), (v31 & 1) != 0))
          {
            sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v66);
          }
          else
          {
            v67 = 0u;
            v66 = 0u;
          }
          sub_1000569AC((uint64_t)&v68);
          if (*((_QWORD *)&v67 + 1))
          {
            sub_10004CFC4(&v66, v65);
            v32 = v61;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v61);
            v64 = v32;
            sub_1002C436C(v65, (uint64_t)v70, isUniquelyReferenced_nonNull_native);
            v34 = v64;
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_1000569AC((uint64_t)v70);
          }
          else
          {
            sub_100010960((uint64_t)&v66, (uint64_t *)&unk_1009D04E0);
            v35 = v61;
            swift_bridgeObjectRetain(v61);
            v36 = sub_1000561E8((uint64_t)v70);
            v38 = v37;
            swift_bridgeObjectRelease(v35);
            if ((v38 & 1) != 0)
            {
              v39 = swift_isUniquelyReferenced_nonNull_native(v35);
              v64 = v35;
              if ((v39 & 1) == 0)
              {
                sub_1002C0614();
                v35 = v64;
              }
              sub_1000569AC(*(_QWORD *)(v35 + 48) + 40 * v36);
              sub_10004CFC4((_OWORD *)(*(_QWORD *)(v35 + 56) + 32 * v36), v65);
              v61 = v35;
              sub_1002BE75C(v36, v35);
              swift_bridgeObjectRelease(0x8000000000000000);
            }
            else
            {
              memset(v65, 0, sizeof(v65));
            }
            sub_1000569AC((uint64_t)v70);
            sub_100010960((uint64_t)v65, (uint64_t *)&unk_1009D04E0);
            v34 = v61;
          }
          *(_QWORD *)&v68 = v49;
          *((_QWORD *)&v68 + 1) = v50;
          AnyHashable.init<A>(_:)(&v68, &type metadata for String, &protocol witness table for String);
          swift_bridgeObjectRetain(v34);
          v40 = sub_1000561E8((uint64_t)v70);
          v42 = v41;
          swift_bridgeObjectRelease(v34);
          if ((v42 & 1) != 0)
          {
            v43 = swift_isUniquelyReferenced_nonNull_native(v34);
            *(_QWORD *)&v66 = v34;
            if ((v43 & 1) == 0)
            {
              sub_1002C0614();
              v34 = v66;
            }
            sub_1000569AC(*(_QWORD *)(v34 + 48) + 40 * v40);
            sub_10004CFC4((_OWORD *)(*(_QWORD *)(v34 + 56) + 32 * v40), &v68);
            v61 = v34;
            sub_1002BE75C(v40, v34);
            swift_bridgeObjectRelease(0x8000000000000000);
          }
          else
          {
            v61 = v34;
            v69 = 0u;
            v68 = 0u;
          }
          sub_1000569AC((uint64_t)v70);
          sub_100010960((uint64_t)&v68, (uint64_t *)&unk_1009D04E0);
          v60 = 1;
          if (!v26)
            goto LABEL_27;
        }
        else
        {
LABEL_7:
          swift_bridgeObjectRelease(v53);
          swift_bridgeObjectRelease(v50);
          if (!v26)
            goto LABEL_27;
        }
LABEL_8:
        v28 = __clz(__rbit64(v26));
        v26 &= v26 - 1;
      }
    }
    v46 = v44 + 3;
    if (v46 < v63)
    {
      v45 = *(_QWORD *)(v62 + 8 * v46);
      if (v45)
      {
        v22 = v46;
        goto LABEL_40;
      }
      while (1)
      {
        v22 = v46 + 1;
        if (__OFADD__(v46, 1))
          goto LABEL_52;
        if (v22 >= v63)
          break;
        v45 = *(_QWORD *)(v62 + 8 * v22);
        ++v46;
        if (v45)
          goto LABEL_40;
      }
    }
  }
LABEL_49:
  swift_release(v21);
  if ((v60 & 1) == 0)
  {
    swift_bridgeObjectRelease(v61);
    swift_bridgeObjectRetain(a1);
  }
}

uint64_t sub_1005849F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[12] = a8;
  v8[13] = v10;
  v8[10] = a6;
  v8[11] = a7;
  v8[8] = a4;
  v8[9] = a5;
  return swift_task_switch(sub_100584A1C, 0, 0);
}

uint64_t sub_100584A1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1005809A8((uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of BookRecommendationPostHydrationFilteringServiceType.storeIDsOfDuplicateAssets(fromCandidates:collectionType:)[1]);
  v0[14] = v3;
  *v3 = v0;
  v3[1] = sub_100584AA4;
  return dispatch thunk of BookRecommendationPostHydrationFilteringServiceType.storeIDsOfDuplicateAssets(fromCandidates:collectionType:)(v0[9], v0[10], v0[11], v1, v2);
}

uint64_t sub_100584AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 112);
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100584C28;
  }
  else
  {
    *(_QWORD *)(v4 + 128) = a1;
    v6 = sub_100584B18;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100584B18()
{
  uint64_t v0;
  _QWORD *v1;
  JSValue v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::Int v11;
  Swift::OpaquePointer_optional v13;

  v1 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2.super.isa = *(Class *)(v0 + 104);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRetain(v3);
  v5 = sub_1005891C4(v4, v1);
  swift_bridgeObjectRelease(v1);
  v6 = sub_10036633C((uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v8 = sub_10004CFD4(&qword_1009D4B80);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v9 + 56) = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
  *(_QWORD *)(v9 + 32) = v6;
  v10._countAndFlagsBits = 0x80000001007D3DC0;
  v13.value._rawValue = (void *)v9;
  v13.is_nil = 108;
  v10._object = (void *)427;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v2, v13, v10, v11);
  swift_bridgeObjectRelease(v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100584C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  JSValue v13;
  id v14;
  Swift::String v15;
  Swift::Int v16;
  Swift::OpaquePointer_optional v18;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (qword_1009CE8A8 != -1)
    swift_once(&qword_1009CE8A8, sub_100009F10);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009EC298);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 56) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to deduplicate assets.  Error=%@", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_errorRelease(v7);
  }
  v12 = *(_QWORD *)(v0 + 120);
  v13.super.isa = *(Class *)(v0 + 104);

  v14 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v15._countAndFlagsBits = 0x80000001007D3DC0;
  v18.value._rawValue = 0;
  v18.is_nil = 108;
  v15._object = (void *)430;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v13, v18, v15, v16);

  swift_errorRelease(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100584E48(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int8 *v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  unsigned __int8 v35;
  unint64_t v36;
  unint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[5];
  __int128 v45;
  __int128 v46;

  v4 = type metadata accessor for MResource.Keys(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = *a1;
  swift_unknownObjectRetain(v44[0]);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  if ((swift_dynamicCast(&v45, v44, (char *)&type metadata for Swift.AnyObject + 8, v8, 6) & 1) == 0)
    goto LABEL_67;
  v9 = v45;
  v10.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for MResource.Keys.id(_:), v4);
  v11 = MResource.Keys.rawValue.getter(v10);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v42 = v11;
  v43 = v13;
  AnyHashable.init<A>(_:)(&v42, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v9 + 16) && (v14 = sub_1000561E8((uint64_t)v44), (v15 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v9 + 56) + 32 * v14, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  swift_bridgeObjectRelease(v9);
  sub_1000569AC((uint64_t)v44);
  if (!*((_QWORD *)&v46 + 1))
  {
    sub_100010960((uint64_t)&v45, (uint64_t *)&unk_1009D04E0);
    goto LABEL_67;
  }
  if ((swift_dynamicCast(&v42, &v45, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_67:
    v31 = 1;
    return v31 & 1;
  }
  result = v42;
  v17 = v43;
  v18 = HIBYTE(v43) & 0xF;
  v19 = v42 & 0xFFFFFFFFFFFFLL;
  if ((v43 & 0x2000000000000000) != 0)
    v20 = HIBYTE(v43) & 0xF;
  else
    v20 = v42 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRelease(v43);
    goto LABEL_67;
  }
  if ((v43 & 0x1000000000000000) != 0)
  {
    v22 = sub_1003277FC(v42, v43, 10);
    v24 = v40;
    goto LABEL_45;
  }
  if ((v43 & 0x2000000000000000) == 0)
  {
    if ((v42 & 0x1000000000000000) != 0)
      v21 = (unsigned __int8 *)((v43 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v21 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v42, v43);
    v22 = (unint64_t)sub_1003276EC(v21, v19, 10);
    v24 = v23 & 1;
LABEL_45:
    swift_bridgeObjectRelease(v17);
    if ((v24 & 1) == 0)
    {
      v31 = sub_10032442C(v22, a2) ^ 1;
      return v31 & 1;
    }
    goto LABEL_67;
  }
  v44[0] = v42;
  v44[1] = v43 & 0xFFFFFFFFFFFFFFLL;
  if (v42 == 43)
  {
    if (v18)
    {
      if (v18 != 1 && (BYTE1(v42) - 48) <= 9u)
      {
        v22 = (BYTE1(v42) - 48);
        if (v18 == 2)
          goto LABEL_44;
        if ((BYTE2(v42) - 48) <= 9u)
        {
          v22 = 10 * (BYTE1(v42) - 48) + (BYTE2(v42) - 48);
          v28 = v18 - 3;
          if (v28)
          {
            v29 = (unsigned __int8 *)v44 + 3;
            while (1)
            {
              v30 = *v29 - 48;
              if (v30 > 9)
                goto LABEL_41;
              if (!is_mul_ok(v22, 0xAuLL))
                goto LABEL_41;
              v26 = __CFADD__(10 * v22, v30);
              v22 = 10 * v22 + v30;
              if (v26)
                goto LABEL_41;
              v24 = 0;
              ++v29;
              if (!--v28)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_41;
    }
  }
  else
  {
    if (v42 != 45)
    {
      if (v18 && (v42 - 48) <= 9u)
      {
        v22 = (v42 - 48);
        if (v18 == 1)
          goto LABEL_44;
        if ((BYTE1(v42) - 48) <= 9u)
        {
          v22 = 10 * (v42 - 48) + (BYTE1(v42) - 48);
          v32 = v18 - 2;
          if (v32)
          {
            v33 = (unsigned __int8 *)v44 + 2;
            while (1)
            {
              v34 = *v33 - 48;
              if (v34 > 9)
                goto LABEL_41;
              if (!is_mul_ok(v22, 0xAuLL))
                goto LABEL_41;
              v26 = __CFADD__(10 * v22, v34);
              v22 = 10 * v22 + v34;
              if (v26)
                goto LABEL_41;
              v24 = 0;
              ++v33;
              if (!--v32)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
LABEL_41:
      v22 = 0;
LABEL_42:
      v24 = 1;
      goto LABEL_45;
    }
    if (v18)
    {
      if (v18 != 1)
      {
        v25 = BYTE1(v42) - 48;
        if ((BYTE1(v42) - 48) <= 9u)
        {
          v22 = 0;
          v26 = v25 == 0;
          v27 = -(uint64_t)v25;
          if (!v26)
            goto LABEL_42;
          if (v18 == 2)
          {
            v24 = 0;
            v22 = v27;
            goto LABEL_45;
          }
          v35 = BYTE2(v42) - 48;
          if ((BYTE2(v42) - 48) <= 9u && is_mul_ok(v27, 0xAuLL))
          {
            v36 = 10 * v27;
            v22 = v36 - v35;
            if (v36 >= v35)
            {
              v37 = v18 - 3;
              if (v37)
              {
                v38 = (unsigned __int8 *)v44 + 3;
                while (1)
                {
                  v39 = *v38 - 48;
                  if (v39 > 9)
                    goto LABEL_41;
                  if (!is_mul_ok(v22, 0xAuLL))
                    goto LABEL_41;
                  v26 = 10 * v22 >= v39;
                  v22 = 10 * v22 - v39;
                  if (!v26)
                    goto LABEL_41;
                  v24 = 0;
                  ++v38;
                  if (!--v37)
                    goto LABEL_45;
                }
              }
LABEL_44:
              v24 = 0;
              goto LABEL_45;
            }
          }
        }
      }
      goto LABEL_41;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005852B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = sub_10004CFD4(&qword_1009E4720);
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EC420);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collection(0);
  v6[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[14] = v10;
  v6[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookRecommendationRequest(0);
  v6[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[17] = v12;
  v6[18] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100585388, 0, 0);
}

uint64_t sub_100585388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[12];
  v4 = v0[13];
  v5 = v0[11];
  v6 = v0[9];
  sub_100010D6C((uint64_t)(v0 + 2));
  v7 = v0[5];
  v12 = v0[6];
  sub_10003F198(v0 + 2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v6, v4);
  v8 = type metadata accessor for CollectionSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = type metadata accessor for Scorer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  BookRecommendationRequest.init(collection:allowNegativeScores:overrideSource:overrideScorer:)(v2, 0, v3, v5);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of BookRecommendationServiceType.fetchRecommendations(for:)[1]);
  v0[19] = v10;
  *v10 = v0;
  v10[1] = sub_1005854B0;
  return dispatch thunk of BookRecommendationServiceType.fetchRecommendations(for:)(v0[18], v7, v12);
}

uint64_t sub_1005854B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 160) = v1;
  swift_task_dealloc(v5);
  v7 = v4[18];
  v8 = v4[16];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    v9 = sub_1005856C0;
  }
  else
  {
    v4[21] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    v9 = sub_100585540;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100585540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  JSValue v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  Swift::Int v14;
  uint64_t v16;
  Swift::OpaquePointer_optional v17;

  v1 = *(_QWORD *)(v0 + 168);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v2 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = JSONEncoder.init()();
  if (v1)
  {
    swift_bridgeObjectRetain(v1);
    v5 = sub_100589040(v4);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 88);
  v9.super.isa = *(Class *)(v0 + 80);
  v10 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v11 = sub_10004CFD4(&qword_1009D4B80);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v12 + 56) = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
  *(_QWORD *)(v12 + 32) = v5;
  v13._countAndFlagsBits = 0x80000001007D3DC0;
  v17.value._rawValue = (void *)v12;
  v17.is_nil = 108;
  v13._object = (void *)490;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v9, v17, v13, v14);
  swift_bridgeObjectRelease(v12);

  swift_release(v3);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005856C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  JSValue v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::Int v23;
  Swift::OpaquePointer_optional v25;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (qword_1009CE8A8 != -1)
    swift_once(&qword_1009CE8A8, sub_100009F10);
  v1 = *(_QWORD *)(v0 + 160);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009EC298);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 56) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch recommendations. error: %@)", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 160));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v12 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = JSONEncoder.init()();
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 96);
  v18.super.isa = *(Class *)(v0 + 80);
  v19 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v20 = sub_10004CFD4(&qword_1009D4B80);
  v21 = swift_allocObject(v20, 64, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v21 + 56) = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
  *(_QWORD *)(v21 + 32) = _swiftEmptyArrayStorage;
  v22._countAndFlagsBits = 0x80000001007D3DC0;
  v25.value._rawValue = (void *)v21;
  v25.is_nil = 108;
  v22._object = (void *)490;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v18, v25, v22, v23);
  swift_bridgeObjectRelease(v21);

  swift_release(v13);
  swift_bridgeObjectRelease(0);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100585994@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  _OWORD v44[2];
  __int128 v45;
  _QWORD *v46;
  uint64_t v47;

  v42 = a1;
  v2 = type metadata accessor for Book(0);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScoredBook.book.getter(v3);
  v39 = sub_100585D70();
  v7 = v6;
  v9 = v8;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v10, &v47);
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)&v45 = Book.storeID.getter(COERCE_DOUBLE(3));
  *(_QWORD *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x73656372756F73;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  v13 = Book.sources.getter();
  v14 = sub_10004CFD4(&qword_1009EC3C0);
  *(_QWORD *)(inited + 96) = v13;
  *(_QWORD *)(inited + 120) = v14;
  *(_QWORD *)(inited + 128) = 0x65726F6373;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  v15 = ScoredBook.score.getter(v14);
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(double *)(inited + 144) = v15;
  v16 = sub_10003FB0C(inited);
  if (v9)
  {
    *(_QWORD *)&v45 = v9;
    v17 = sub_10004CFD4(&qword_1009EC3D0);
    v18 = sub_10058B73C();
    v19 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v45, v17, v18);
    if (v1)
    {
      swift_errorRelease(v1);
      swift_bridgeObjectRelease(v9);
      if (!v7)
        goto LABEL_11;
      goto LABEL_10;
    }
    v21 = v19;
    v22 = v20;
    swift_bridgeObjectRelease(v9);
    v23 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v45 = 0;
    v25 = objc_msgSend(v23, "JSONObjectWithData:options:error:", isa, 0, &v45);

    v26 = v45;
    if (!v25)
    {
      v35 = (id)v45;
      v36 = _convertNSErrorToError(_:)(v26);

      swift_willThrow(v37);
      sub_10005EE1C(v21, v22);
      swift_errorRelease(v36);
      if (!v7)
        goto LABEL_11;
      goto LABEL_10;
    }
    v27 = (id)v45;
    _bridgeAnyObjectToAny(_:)(v25);
    swift_unknownObjectRelease(v25);
    v28 = sub_10004CFD4(&qword_1009D3090);
    if ((swift_dynamicCast(v44, &v45, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v46 = (_QWORD *)v28;
      *(_QWORD *)&v45 = *(_QWORD *)&v44[0];
      sub_10004CFC4(&v45, v44);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
      v43 = v16;
      sub_1002C3A2C(v44, 0x746E65746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      v16 = v43;
      swift_bridgeObjectRelease(0x8000000000000000);
    }
    sub_10005EE1C(v21, v22);
  }
  if (v7)
  {
LABEL_10:
    v46 = &type metadata for String;
    *(_QWORD *)&v45 = v39;
    *((_QWORD *)&v45 + 1) = v7;
    sub_10004CFC4(&v45, v44);
    v30 = swift_isUniquelyReferenced_nonNull_native(v16);
    v43 = v16;
    sub_1002C3A2C(v44, 1684957547, 0xE400000000000000, v30);
    v16 = v43;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
LABEL_11:
  v31 = sub_10004CFD4(&qword_1009D3090);
  v32 = v41;
  v33 = v42;
  v42[3] = v31;
  *v33 = v16;
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v5, v32);
}

uint64_t sub_100585D70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  int v11;
  void (*v13)(char *, uint64_t);
  uint64_t v14;

  v0 = sub_10004CFD4(&qword_1009D30B8);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Book.Content(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - v9;
  Book.content.getter(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v2, &qword_1009D30B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v2, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    if (v11 == enum case for Book.Content.ebook(_:))
    {
      (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      return 0x6B6F6F6265;
    }
    if (v11 == enum case for Book.Content.audiobook(_:))
    {
      (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      return 0x6F6F626F69647561;
    }
    v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v10, v3);
    v13(v6, v3);
  }
  return 0;
}

uint64_t sub_100585F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return swift_task_switch(sub_100585F84, 0, 0);
}

uint64_t sub_100585F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_100580884((uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of CollectionRecommendationServiceType.fetchRecommendations(for:)[1]);
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_100586008;
  return dispatch thunk of CollectionRecommendationServiceType.fetchRecommendations(for:)(v0[9], v1, v2);
}

uint64_t sub_100586008(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1005861C8;
  }
  else
  {
    *(_QWORD *)(v4 + 104) = a1;
    v6 = sub_10058607C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10058607C()
{
  uint64_t v0;
  uint64_t v1;
  JSValue v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::Int v11;
  __n128 v12;
  __int128 v14;
  Swift::OpaquePointer_optional v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2.super.isa = *(Class *)(v0 + 80);
  v14 = *(_OWORD *)(v0 + 64);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v3 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = JSONEncoder.init()();
  v5 = swift_task_alloc(48);
  *(_OWORD *)(v5 + 16) = v14;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_1003A3288((void (*)(__int128 *__return_ptr, uint64_t, __n128))sub_10058ACBC, v5, v1);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v5);
  v7 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v8 = sub_10004CFD4(&qword_1009D4B80);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v9 + 56) = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
  *(_QWORD *)(v9 + 32) = v6;
  v10._countAndFlagsBits = 0x80000001007D3DC0;
  v15.value._rawValue = (void *)v9;
  v15.is_nil = 108;
  v10._object = (void *)580;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v2, v15, v10, v11);
  swift_bridgeObjectRelease(v9);

  v12 = swift_release(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
}

uint64_t sub_1005861C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  JSValue v12;
  id v13;
  Swift::String v14;
  Swift::Int v15;
  Swift::OpaquePointer_optional v17;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (qword_1009CE8A8 != -1)
    swift_once(&qword_1009CE8A8, sub_100009F10);
  v1 = *(_QWORD *)(v0 + 96);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009EC298);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 96);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 56) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch recommendations. error: %@)", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v12.super.isa = *(Class *)(v0 + 80);
  v13 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v14._countAndFlagsBits = 0x80000001007D3DC0;
  v17.value._rawValue = 0;
  v17.is_nil = 108;
  v14._object = (void *)508;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v12, v17, v14, v15);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005863F4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  unint64_t v77;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int v85;
  const char *v86;
  unint64_t v87;
  _QWORD *v88;
  int v89;
  uint64_t v90;
  __n128 v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  __n128 v113;
  uint64_t v114;
  char *v115;
  double v116;
  uint64_t v117;
  _QWORD *v118;
  char v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t *v122;
  __n128 v123;
  char *v124;
  _QWORD *v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  char *v145;
  int v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t *v151;
  __n128 v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t inited;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  char *v170;
  int v171;
  unint64_t v172;
  unint64_t v173;
  __n128 v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  char *v192;
  int v193;
  unint64_t v194;
  unint64_t v195;
  __n128 v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  char *v214;
  int v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t *v220;
  int v221;
  __n128 v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t *v228;
  _QWORD *v229;
  unint64_t v230;
  uint64_t v231;
  unint64_t *v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t *v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  id v259;
  char *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  unint64_t v277;
  _OWORD v278[2];
  __int128 v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;

  v275 = a5;
  v265 = a4;
  v274 = a3;
  v259 = a2;
  v6 = type metadata accessor for ScoredSeries(0);
  v242 = *(_QWORD *)(v6 - 8);
  v243 = v6;
  __chkstk_darwin(v6);
  v241 = (char *)&v239 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EC398);
  v263 = *(_QWORD *)(v8 - 8);
  v264 = v8;
  __chkstk_darwin(v8);
  v246 = (char *)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v249 = (char *)&v239 - v11;
  __chkstk_darwin(v12);
  v251 = (char *)&v239 - v13;
  __chkstk_darwin(v14);
  v255 = (char *)&v239 - v15;
  __chkstk_darwin(v16);
  v258 = (char *)&v239 - v17;
  __chkstk_darwin(v18);
  v262 = (char *)&v239 - v19;
  v270 = type metadata accessor for CollectionSource(0);
  v272 = *(_QWORD *)(v270 - 8);
  __chkstk_darwin(v270);
  v244 = (char *)&v239 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v247 = (char *)&v239 - v22;
  __chkstk_darwin(v23);
  v245 = (char *)&v239 - v24;
  __chkstk_darwin(v25);
  v250 = (char *)&v239 - v26;
  __chkstk_darwin(v27);
  v248 = (char *)&v239 - v28;
  __chkstk_darwin(v29);
  v252 = (char *)&v239 - v30;
  __chkstk_darwin(v31);
  v253 = (char *)&v239 - v32;
  __chkstk_darwin(v33);
  v254 = (char *)&v239 - v34;
  __chkstk_darwin(v35);
  v256 = (char *)&v239 - v36;
  __chkstk_darwin(v37);
  v257 = (char *)&v239 - v38;
  __chkstk_darwin(v39);
  v260 = (char *)&v239 - v40;
  __chkstk_darwin(v41);
  v266 = (char *)&v239 - v42;
  v261 = type metadata accessor for ScoredBook(0);
  v268 = *(_QWORD *)(v261 - 8);
  __chkstk_darwin(v261);
  v267 = (char *)&v239 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = type metadata accessor for CollectionRecommendation(0);
  v271 = *(_QWORD *)(v273 - 8);
  __chkstk_darwin(v273);
  v269 = (char *)&v239 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for CollectionRecommendationType(0);
  v46 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v48 = (char *)&v239 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10004CFD4(&qword_1009E02F0);
  v50 = __chkstk_darwin(v49);
  v52 = (char *)&v239 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = CollectionRecommendation.mediaTypes.getter(v50);
  sub_1003A368C(v53, (uint64_t)v52);
  swift_bridgeObjectRelease(v53);
  v54 = type metadata accessor for Book.MediaType(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48))(v52, 1, v54);
  if ((_DWORD)v56 == 1)
  {
    sub_100010960((uint64_t)v52, &qword_1009E02F0);
LABEL_9:
    v88 = v275;
    *(_OWORD *)v275 = 0u;
    *((_OWORD *)v88 + 1) = 0u;
    return;
  }
  v240 = Book.MediaType.rawValue.getter(v56);
  v57 = a1;
  v59 = v58;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
  v61 = CollectionRecommendation.mediaTypes.getter(v60);
  CollectionRecommendation.collectionRecommendationType.getter();
  v62 = sub_10058ACD8(v61, (uint64_t)v48);
  v64 = v63;
  v65 = swift_bridgeObjectRelease(v61);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v48, v45, v65);
  if (!v64)
  {
    swift_bridgeObjectRelease(v59);
    goto LABEL_9;
  }
  v66 = v57;
  v67 = v64;
  v68 = v59;
  v69 = v271;
  v70 = v269;
  v71 = v273;
  (*(void (**)(char *, uint64_t, uint64_t))(v271 + 16))(v269, v66, v273);
  v72 = (*(uint64_t (**)(char *, uint64_t))(v69 + 88))(v70, v71);
  if (v72 == enum case for CollectionRecommendation.book(_:))
  {
    v73 = v69;
    v74 = 0xD000000000000013;
    v75 = swift_bridgeObjectRelease(v67);
    (*(void (**)(char *, uint64_t, __n128))(v73 + 96))(v70, v71, v75);
    v76 = v261;
    (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v267, v70, v261);
    v77 = sub_1005887AC(v265, v240, v68);
    swift_bridgeObjectRelease(v68);
    v280 = &type metadata for String;
    *(_QWORD *)&v279 = 1802465122;
    *((_QWORD *)&v279 + 1) = 0xE400000000000000;
    sub_10004CFC4(&v279, v278);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v77);
    v277 = v77;
    sub_1002C3A2C(v278, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    v79 = v277;
    v80 = swift_bridgeObjectRelease(0x8000000000000000);
    v81 = v266;
    CollectionRecommendation.source.getter(v80);
    v82 = v272;
    v83 = v260;
    v84 = v270;
    (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v260, v81, v270);
    v85 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v83, v84);
    if (v85 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v86 = "appleMediaDiscovery";
LABEL_7:
      v87 = (unint64_t)(v86 - 32) | 0x8000000000000000;
LABEL_23:
      (*(void (**)(char *, uint64_t))(v82 + 8))(v266, v84);
      v280 = &type metadata for String;
      *(_QWORD *)&v279 = v74;
      *((_QWORD *)&v279 + 1) = v87;
      sub_10004CFC4(&v279, v278);
      v119 = swift_isUniquelyReferenced_nonNull_native(v79);
      v277 = v79;
      sub_1002C3A2C(v278, 0x656372756F73, 0xE600000000000000, v119);
      v120 = v277;
      swift_bridgeObjectRelease(0x8000000000000000);
      v121 = sub_10004CFD4(&qword_1009D3090);
      v122 = v275;
      v275[3] = v121;
      *v122 = v120;
      (*(void (**)(char *, uint64_t))(v268 + 8))(v267, v76);
      return;
    }
    if (v85 == enum case for CollectionSource.mediaAPI(_:))
    {
      v74 = 1768972653;
LABEL_15:
      v87 = 0xE400000000000000;
      goto LABEL_23;
    }
    if (v85 == enum case for CollectionSource.bookHistory(_:))
    {
      v74 = 7365743;
      v87 = 0xE300000000000000;
      goto LABEL_23;
    }
    if (v85 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
    {
      v74 = 0xD000000000000022;
      v86 = "bookHistoryThenAppleMediaDiscovery";
      goto LABEL_7;
    }
    if (v85 == enum case for CollectionSource.tabi(_:))
    {
      v74 = 1768055156;
      goto LABEL_15;
    }
    goto LABEL_94;
  }
  v89 = v72;
  v90 = v270;
  if (v72 == enum case for CollectionRecommendation.books(_:))
  {
    v274 = v66;
    v91 = swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v91);
    v92 = v70;
    v94 = v262;
    v93 = v263;
    v95 = v264;
    (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v262, v92, v264);
    v96 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v97 = swift_allocObject(v96, 224, 7);
    *(_OWORD *)(v97 + 16) = xmmword_1007147F0;
    *(_QWORD *)(v97 + 32) = 1701869940;
    *(_QWORD *)(v97 + 40) = 0xE400000000000000;
    *(_QWORD *)(v97 + 48) = 0x736B6F6F62;
    *(_QWORD *)(v97 + 56) = 0xE500000000000000;
    *(_QWORD *)(v97 + 72) = &type metadata for String;
    *(_QWORD *)(v97 + 80) = 1684957547;
    *(_QWORD *)(v97 + 88) = 0xE400000000000000;
    *(_QWORD *)(v97 + 96) = v62;
    *(_QWORD *)(v97 + 104) = v67;
    *(_QWORD *)(v97 + 120) = &type metadata for String;
    *(_QWORD *)(v97 + 128) = 0x736B6F6F62;
    *(_QWORD *)(v97 + 136) = 0xE500000000000000;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v258, v94, v95);
    v98 = sub_100030B34(&qword_1009EC3A8, &qword_1009EC398, (uint64_t)&protocol conformance descriptor for NonEmpty<A>);
    v99 = dispatch thunk of Sequence._copyToContiguousArray()(v95, v98);
    v100 = v259;
    v101 = v90;
    v102 = v265;
    swift_retain(v265);
    v103 = v276;
    v104 = sub_100588E4C(v99, v102);
    v276 = v103;
    swift_release(v99);

    v105 = v101;
    swift_release(v102);
    v106 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(v97 + 144) = v104;
    *(_QWORD *)(v97 + 168) = v106;
    *(_QWORD *)(v97 + 176) = 0x656372756F73;
    *(_QWORD *)(v97 + 184) = 0xE600000000000000;
    v107 = v257;
    ((void (*)(void))CollectionRecommendation.source.getter)();
    v108 = v272;
    v109 = v256;
    (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v256, v107, v105);
    v110 = (*(uint64_t (**)(char *, uint64_t))(v108 + 88))(v109, v105);
    if (v110 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v111 = 0x80000001007B1E00;
      v112 = 0xD000000000000013;
LABEL_36:
      (*(void (**)(char *, uint64_t))(v272 + 8))(v107, v105);
      *(_QWORD *)(v97 + 216) = &type metadata for String;
      *(_QWORD *)(v97 + 192) = v112;
      *(_QWORD *)(v97 + 200) = v111;
      v149 = sub_10003FB0C(v97);
      v150 = sub_10004CFD4(&qword_1009D3090);
      v151 = v275;
      v275[3] = v150;
      *v151 = v149;
      (*(void (**)(char *, uint64_t))(v263 + 8))(v262, v264);
      return;
    }
    if (v110 == enum case for CollectionSource.mediaAPI(_:))
    {
      v112 = 1768972653;
LABEL_20:
      v111 = 0xE400000000000000;
      goto LABEL_36;
    }
    if (v110 == enum case for CollectionSource.bookHistory(_:))
    {
      v112 = 7365743;
      v111 = 0xE300000000000000;
      goto LABEL_36;
    }
    if (v110 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
    {
      v112 = 0xD000000000000022;
      v111 = 0x80000001007B1E30;
      goto LABEL_36;
    }
    if (v110 == enum case for CollectionSource.tabi(_:))
    {
      v112 = 1768055156;
      goto LABEL_20;
    }
LABEL_94:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x80000001007D3E90, "Books/BookRecommendationProvider.swift", 38, 2, 712, 0);
    __break(1u);
    return;
  }
  if (v72 == enum case for CollectionRecommendation.booksBasedOnSeed(_:))
  {
    swift_bridgeObjectRelease(v68);
    v113 = swift_bridgeObjectRelease(v67);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v113);
    v114 = sub_10004CFD4(&qword_1009EC3B8);
    v115 = &v70[*(int *)(v114 + 48)];
    *(_QWORD *)&v116 = swift_bridgeObjectRelease(*(_QWORD *)&v70[*(int *)(v114 + 64)]).n128_u64[0];
    v117 = type metadata accessor for SeedBook(0, v116);
    v118 = v275;
    *(_OWORD *)v275 = 0u;
    *((_OWORD *)v118 + 1) = 0u;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v115, v117);
LABEL_26:
    (*(void (**)(char *, uint64_t))(v263 + 8))(v70, v264);
    return;
  }
  if (v72 == enum case for CollectionRecommendation.booksByAuthor(_:))
  {
LABEL_25:
    swift_bridgeObjectRelease(v68);
    v123 = swift_bridgeObjectRelease(v67);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v123);
    v124 = &v70[*(int *)(sub_10004CFD4(&qword_1009EC3B0) + 64)];
    v125 = v275;
    *(_OWORD *)v275 = 0u;
    *((_OWORD *)v125 + 1) = 0u;
    (*(void (**)(char *, uint64_t))(v272 + 8))(v124, v90);
    goto LABEL_26;
  }
  if (v72 == enum case for CollectionRecommendation.booksBySuggestedAuthors(_:))
  {
    v126 = swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v126);
    v127 = &v70[*(int *)(sub_10004CFD4(&qword_1009EC3A0) + 48)];
    v129 = v263;
    v128 = v264;
    v130 = *(void (**)(char *, char *, uint64_t))(v263 + 32);
    v274 = v62;
    v131 = v255;
    v130(v255, v70, v264);
    v132 = v272;
    v133 = v254;
    (*(void (**)(char *, char *, uint64_t))(v272 + 32))(v254, v127, v90);
    v134 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v135 = swift_allocObject(v134, 224, 7);
    *(_OWORD *)(v135 + 16) = xmmword_1007147F0;
    *(_QWORD *)(v135 + 32) = 1701869940;
    *(_QWORD *)(v135 + 40) = 0xE400000000000000;
    *(_QWORD *)(v135 + 48) = 0xD00000000000001ALL;
    *(_QWORD *)(v135 + 56) = 0x80000001007B1D40;
    *(_QWORD *)(v135 + 72) = &type metadata for String;
    *(_QWORD *)(v135 + 80) = 1684957547;
    v136 = v274;
    *(_QWORD *)(v135 + 88) = 0xE400000000000000;
    *(_QWORD *)(v135 + 96) = v136;
    *(_QWORD *)(v135 + 104) = v67;
    *(_QWORD *)(v135 + 120) = &type metadata for String;
    *(_QWORD *)(v135 + 128) = 0x736B6F6F62;
    *(_QWORD *)(v135 + 136) = 0xE500000000000000;
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v258, v131, v128);
    v137 = sub_100030B34(&qword_1009EC3A8, &qword_1009EC398, (uint64_t)&protocol conformance descriptor for NonEmpty<A>);
    v138 = dispatch thunk of Sequence._copyToContiguousArray()(v128, v137);
    v139 = v259;
    v140 = v90;
    v141 = v265;
    swift_retain(v265);
    v142 = v276;
    v143 = sub_100588E4C(v138, v141);
    v276 = v142;
    swift_release(v138);

    swift_release(v141);
    v144 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(v135 + 144) = v143;
    *(_QWORD *)(v135 + 168) = v144;
    *(_QWORD *)(v135 + 176) = 0x656372756F73;
    *(_QWORD *)(v135 + 184) = 0xE600000000000000;
    v145 = v253;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v253, v133, v140);
    v146 = (*(uint64_t (**)(char *, uint64_t))(v132 + 88))(v145, v140);
    if (v146 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v147 = 0x80000001007B1E00;
      v148 = 0xD000000000000013;
    }
    else
    {
      if (v146 == enum case for CollectionSource.mediaAPI(_:))
      {
        v148 = 1768972653;
      }
      else
      {
        if (v146 == enum case for CollectionSource.bookHistory(_:))
        {
          v148 = 7365743;
          v147 = 0xE300000000000000;
          goto LABEL_60;
        }
        if (v146 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
        {
          v148 = 0xD000000000000022;
          v147 = 0x80000001007B1E30;
          goto LABEL_60;
        }
        if (v146 != enum case for CollectionSource.tabi(_:))
          goto LABEL_94;
        v148 = 1768055156;
      }
      v147 = 0xE400000000000000;
    }
LABEL_60:
    *(_QWORD *)(v135 + 216) = &type metadata for String;
    *(_QWORD *)(v135 + 192) = v148;
    *(_QWORD *)(v135 + 200) = v147;
    v218 = sub_10003FB0C(v135);
    v219 = sub_10004CFD4(&qword_1009D3090);
    v220 = v275;
    v275[3] = v219;
    *v220 = v218;
    (*(void (**)(char *, uint64_t))(v272 + 8))(v254, v140);
    (*(void (**)(char *, uint64_t))(v263 + 8))(v255, v264);
    return;
  }
  if (v72 == enum case for CollectionRecommendation.booksInGenre(_:))
    goto LABEL_25;
  if (v72 == enum case for CollectionRecommendation.booksYouMightLike(_:))
  {
    v152 = swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v152);
    v153 = &v70[*(int *)(sub_10004CFD4(&qword_1009EC3A0) + 48)];
    v154 = v70;
    v156 = v263;
    v155 = v264;
    v157 = v62;
    v158 = v251;
    (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v251, v154, v264);
    v159 = v272;
    (*(void (**)(char *, char *, uint64_t))(v272 + 32))(v252, v153, v90);
    v160 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    inited = swift_initStackObject(v160, &v281);
    *(_OWORD *)(inited + 16) = xmmword_1007147F0;
    *(_QWORD *)(inited + 32) = 1701869940;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    *(_QWORD *)(inited + 48) = 0xD000000000000014;
    *(_QWORD *)(inited + 56) = 0x80000001007B1D60;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 1684957547;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    *(_QWORD *)(inited + 96) = v157;
    *(_QWORD *)(inited + 104) = v67;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 128) = 0x736B6F6F62;
    *(_QWORD *)(inited + 136) = 0xE500000000000000;
    (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v258, v158, v155);
    v162 = sub_100030B34(&qword_1009EC3A8, &qword_1009EC398, (uint64_t)&protocol conformance descriptor for NonEmpty<A>);
    v163 = dispatch thunk of Sequence._copyToContiguousArray()(v155, v162);
    v164 = v259;
    v165 = v90;
    v166 = v265;
    swift_retain(v265);
    v167 = v276;
    v168 = sub_100588E4C(v163, v166);
    v276 = v167;
    swift_release(v163);

    swift_release(v166);
    v169 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(inited + 144) = v168;
    *(_QWORD *)(inited + 168) = v169;
    *(_QWORD *)(inited + 176) = 0x656372756F73;
    *(_QWORD *)(inited + 184) = 0xE600000000000000;
    v170 = v248;
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v248, v252, v165);
    v171 = (*(uint64_t (**)(char *, uint64_t))(v159 + 88))(v170, v165);
    if (v171 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v172 = 0x80000001007B1E00;
      v173 = 0xD000000000000013;
LABEL_85:
      *(_QWORD *)(inited + 216) = &type metadata for String;
      *(_QWORD *)(inited + 192) = v173;
      *(_QWORD *)(inited + 200) = v172;
      v233 = sub_10003FB0C(inited);
      v234 = sub_10004CFD4(&qword_1009D3090);
      v235 = v275;
      v275[3] = v234;
      *v235 = v233;
      (*(void (**)(char *, uint64_t))(v272 + 8))(v252, v165);
      (*(void (**)(char *, uint64_t))(v263 + 8))(v251, v264);
      return;
    }
    if (v171 == enum case for CollectionSource.mediaAPI(_:))
    {
      v173 = 1768972653;
    }
    else
    {
      if (v171 == enum case for CollectionSource.bookHistory(_:))
      {
        v173 = 7365743;
        v172 = 0xE300000000000000;
        goto LABEL_85;
      }
      if (v171 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
      {
        v173 = 0xD000000000000022;
        v172 = 0x80000001007B1E30;
        goto LABEL_85;
      }
      if (v171 != enum case for CollectionSource.tabi(_:))
        goto LABEL_94;
      v173 = 1768055156;
    }
    v172 = 0xE400000000000000;
    goto LABEL_85;
  }
  if (v72 == enum case for CollectionRecommendation.mangaYouMightLike(_:))
  {
    v174 = swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v174);
    v175 = &v70[*(int *)(sub_10004CFD4(&qword_1009EC3A0) + 48)];
    v176 = v70;
    v178 = v263;
    v177 = v264;
    v179 = v62;
    v180 = v249;
    (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v249, v176, v264);
    v181 = v272;
    (*(void (**)(char *, char *, uint64_t))(v272 + 32))(v250, v175, v90);
    v182 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v183 = swift_initStackObject(v182, &v282);
    *(_OWORD *)(v183 + 16) = xmmword_1007147F0;
    *(_QWORD *)(v183 + 32) = 1701869940;
    *(_QWORD *)(v183 + 40) = 0xE400000000000000;
    *(_QWORD *)(v183 + 48) = 0xD000000000000014;
    *(_QWORD *)(v183 + 56) = 0x80000001007B1D80;
    *(_QWORD *)(v183 + 72) = &type metadata for String;
    *(_QWORD *)(v183 + 80) = 1684957547;
    *(_QWORD *)(v183 + 88) = 0xE400000000000000;
    *(_QWORD *)(v183 + 96) = v179;
    *(_QWORD *)(v183 + 104) = v67;
    *(_QWORD *)(v183 + 120) = &type metadata for String;
    *(_QWORD *)(v183 + 128) = 0x736B6F6F62;
    *(_QWORD *)(v183 + 136) = 0xE500000000000000;
    (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v258, v180, v177);
    v184 = sub_100030B34(&qword_1009EC3A8, &qword_1009EC398, (uint64_t)&protocol conformance descriptor for NonEmpty<A>);
    v185 = dispatch thunk of Sequence._copyToContiguousArray()(v177, v184);
    v186 = v259;
    v187 = v90;
    v188 = v265;
    swift_retain(v265);
    v189 = v276;
    v190 = sub_100588E4C(v185, v188);
    v276 = v189;
    swift_release(v185);

    swift_release(v188);
    v191 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(v183 + 144) = v190;
    *(_QWORD *)(v183 + 168) = v191;
    *(_QWORD *)(v183 + 176) = 0x656372756F73;
    *(_QWORD *)(v183 + 184) = 0xE600000000000000;
    v192 = v245;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v245, v250, v187);
    v193 = (*(uint64_t (**)(char *, uint64_t))(v181 + 88))(v192, v187);
    if (v193 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v194 = 0x80000001007B1E00;
      v195 = 0xD000000000000013;
    }
    else
    {
      if (v193 == enum case for CollectionSource.mediaAPI(_:))
      {
        v195 = 1768972653;
      }
      else
      {
        if (v193 == enum case for CollectionSource.bookHistory(_:))
        {
          v195 = 7365743;
          v194 = 0xE300000000000000;
          goto LABEL_81;
        }
        if (v193 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
        {
          v195 = 0xD000000000000022;
          v194 = 0x80000001007B1E30;
          goto LABEL_81;
        }
        if (v193 != enum case for CollectionSource.tabi(_:))
          goto LABEL_94;
        v195 = 1768055156;
      }
      v194 = 0xE400000000000000;
    }
LABEL_81:
    *(_QWORD *)(v183 + 216) = &type metadata for String;
    *(_QWORD *)(v183 + 192) = v195;
    *(_QWORD *)(v183 + 200) = v194;
    v230 = sub_10003FB0C(v183);
    v231 = sub_10004CFD4(&qword_1009D3090);
    v232 = v275;
    v275[3] = v231;
    *v232 = v230;
    (*(void (**)(char *, uint64_t))(v272 + 8))(v250, v187);
    (*(void (**)(char *, uint64_t))(v263 + 8))(v249, v264);
    return;
  }
  if (v72 == enum case for CollectionRecommendation.moreFromYourAuthors(_:))
  {
    v196 = swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t, __n128))(v69 + 96))(v70, v273, v196);
    v197 = &v70[*(int *)(sub_10004CFD4(&qword_1009EC3A0) + 48)];
    v198 = v70;
    v200 = v263;
    v199 = v264;
    v201 = v62;
    v202 = v246;
    (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v246, v198, v264);
    v203 = v272;
    (*(void (**)(char *, char *, uint64_t))(v272 + 32))(v247, v197, v90);
    v204 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v205 = swift_initStackObject(v204, &v283);
    *(_OWORD *)(v205 + 16) = xmmword_1007147F0;
    *(_QWORD *)(v205 + 32) = 1701869940;
    *(_QWORD *)(v205 + 40) = 0xE400000000000000;
    *(_QWORD *)(v205 + 48) = 0xD000000000000016;
    *(_QWORD *)(v205 + 56) = 0x80000001007B1DA0;
    *(_QWORD *)(v205 + 72) = &type metadata for String;
    *(_QWORD *)(v205 + 80) = 1684957547;
    *(_QWORD *)(v205 + 88) = 0xE400000000000000;
    *(_QWORD *)(v205 + 96) = v201;
    *(_QWORD *)(v205 + 104) = v67;
    *(_QWORD *)(v205 + 120) = &type metadata for String;
    *(_QWORD *)(v205 + 128) = 0x736B6F6F62;
    *(_QWORD *)(v205 + 136) = 0xE500000000000000;
    (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v258, v202, v199);
    v206 = sub_100030B34(&qword_1009EC3A8, &qword_1009EC398, (uint64_t)&protocol conformance descriptor for NonEmpty<A>);
    v207 = dispatch thunk of Sequence._copyToContiguousArray()(v199, v206);
    v208 = v259;
    v209 = v90;
    v210 = v265;
    swift_retain(v265);
    v211 = v276;
    v212 = sub_100588E4C(v207, v210);
    v276 = v211;
    swift_release(v207);

    swift_release(v210);
    v213 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(v205 + 144) = v212;
    *(_QWORD *)(v205 + 168) = v213;
    *(_QWORD *)(v205 + 176) = 0x656372756F73;
    *(_QWORD *)(v205 + 184) = 0xE600000000000000;
    v214 = v244;
    (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v244, v247, v209);
    v215 = (*(uint64_t (**)(char *, uint64_t))(v203 + 88))(v214, v209);
    if (v215 == enum case for CollectionSource.appleMediaDiscovery(_:))
    {
      v216 = 0x80000001007B1E00;
      v217 = 0xD000000000000013;
    }
    else if (v215 == enum case for CollectionSource.mediaAPI(_:))
    {
      v217 = 1768972653;
      v216 = 0xE400000000000000;
    }
    else if (v215 == enum case for CollectionSource.bookHistory(_:))
    {
      v217 = 7365743;
      v216 = 0xE300000000000000;
    }
    else
    {
      if (v215 == enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:))
      {
        v217 = 0xD000000000000022;
        v216 = 0x80000001007B1E30;
      }
      else
      {
        if (v215 != enum case for CollectionSource.tabi(_:))
          goto LABEL_94;
        v217 = 1768055156;
        v216 = 0xE400000000000000;
      }
      v209 = v270;
    }
    *(_QWORD *)(v205 + 216) = &type metadata for String;
    *(_QWORD *)(v205 + 192) = v217;
    *(_QWORD *)(v205 + 200) = v216;
    v236 = sub_10003FB0C(v205);
    v237 = sub_10004CFD4(&qword_1009D3090);
    v238 = v275;
    v275[3] = v237;
    *v238 = v236;
    (*(void (**)(char *, uint64_t))(v272 + 8))(v247, v209);
    (*(void (**)(char *, uint64_t))(v263 + 8))(v246, v264);
    return;
  }
  v221 = enum case for CollectionRecommendation.series(_:);
  swift_bridgeObjectRelease(v68);
  v222 = swift_bridgeObjectRelease(v67);
  if (v89 == v221)
  {
    (*(void (**)(char *, uint64_t, __n128))(v271 + 96))(v70, v273, v222);
    v224 = v241;
    v223 = v242;
    v225 = v243;
    (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v241, v70, v243);
    v226 = sub_10058B08C(v265);
    v227 = sub_10004CFD4(&qword_1009D3090);
    v228 = v275;
    v275[3] = v227;
    *v228 = v226;
    (*(void (**)(char *, uint64_t))(v223 + 8))(v224, v225);
  }
  else
  {
    v229 = v275;
    *(_OWORD *)v275 = 0u;
    *((_OWORD *)v229 + 1) = 0u;
    (*(void (**)(char *, uint64_t))(v271 + 8))(v70, v273);
  }
}

uint64_t sub_100587C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v5 = sub_10004CFD4(&qword_1009D30B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Book.Content(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v19 - v14;
  Book.content.getter(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100010960((uint64_t)v7, &qword_1009D30B8);
    swift_bridgeObjectRetain(a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v16 == enum case for Book.Content.ebook(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      return 0x6B6F6F6265;
    }
    else if (v16 == enum case for Book.Content.audiobook(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      return 0x6F6F626F69647561;
    }
    else
    {
      v17 = *(void (**)(char *, uint64_t))(v9 + 8);
      v17(v15, v8);
      v17(v11, v8);
      return 0;
    }
  }
  return a2;
}

id sub_100587E70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookRecommendationProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100587F04()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100587F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1009EC2F4);
  v5 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1001FC2C4;
  *(_OWORD *)(v4 + 96) = v6;
  *(_QWORD *)(v4 + 80) = v2;
  *(_QWORD *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  return swift_task_switch(sub_100584A1C, 0, 0);
}

uint64_t sub_100587FC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unint64_t i;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v2 = type metadata accessor for Methodology(0);
  v41 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v37 = (char *)&v33 - v5;
  sub_10004CFD4(&qword_1009EC3E8);
  result = static _DictionaryStorage.copy(original:)(a1);
  v7 = result;
  v8 = 0;
  v39 = result;
  v40 = a1;
  v11 = *(_QWORD *)(a1 + 64);
  v10 = a1 + 64;
  v9 = v11;
  v12 = 1 << *(_BYTE *)(v10 - 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v9;
  v34 = v10;
  v35 = (unint64_t)(v12 + 63) >> 6;
  v36 = result + 64;
  v16 = v37;
  v15 = v38;
  if ((v13 & v9) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v42 = v8;
  for (i = v17 | (v8 << 6); ; i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    v24 = v40;
    v23 = v41;
    v25 = *(_QWORD *)(v41 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v16, *(_QWORD *)(v40 + 48) + v25, v2);
    v26 = *(char **)(*(_QWORD *)(v24 + 56) + 8 * i);
    v45 = v26;
    v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v27(v15, v16, v2);
    swift_bridgeObjectRetain(v26);
    v28 = v43;
    sub_100654874(&v45, &v44);
    v43 = v28;
    if (v28)
    {
      v7 = v39;
      v32 = swift_release(v39);
      (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v15, v2, v32);
      swift_bridgeObjectRelease(v45);
      return v7;
    }
    v29 = swift_bridgeObjectRelease(v26);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v7 = v39;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t, __n128))v27)(*(_QWORD *)(v39 + 48) + v25, v15, v2, v29);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * i) = v44;
    v30 = *(_QWORD *)(v7 + 16);
    v19 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(_QWORD *)(v7 + 16) = v31;
    v8 = v42;
    if (v14)
      goto LABEL_4;
LABEL_5:
    v19 = __OFADD__(v8, 1);
    v20 = v8 + 1;
    if (v19)
      goto LABEL_27;
    if (v20 >= v35)
      return v7;
    v21 = *(_QWORD *)(v34 + 8 * v20);
    if (!v21)
      break;
LABEL_15:
    v14 = (v21 - 1) & v21;
    v42 = v20;
  }
  v22 = v20 + 1;
  if (v20 + 1 >= v35)
    return v7;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v20 + 2;
  if (v20 + 2 >= v35)
    return v7;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v20 + 3;
  if (v20 + 3 >= v35)
    return v7;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_14:
    v20 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    v20 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v20 >= v35)
      return v7;
    v21 = *(_QWORD *)(v34 + 8 * v20);
    ++v22;
    if (v21)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1005882B0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t i;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  void (*v74)(char *, char *, uint64_t);
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  unint64_t v83;
  char *v84;

  v2 = sub_10004CFD4(&qword_1009EC400);
  v3 = __chkstk_darwin(v2);
  v80 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Book.Metadata(0, v3);
  v6 = __chkstk_darwin(v5);
  v79 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SeedBook(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v78 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - v12;
  v14 = type metadata accessor for Methodology(0);
  v69 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v68 = (char *)&v61 - v18;
  sub_10004CFD4(&qword_1009EC3E8);
  result = static _DictionaryStorage.copy(original:)(a1);
  v20 = (_QWORD *)result;
  v21 = 0;
  v70 = a1;
  v24 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v22 = v24;
  v25 = 1 << *(_BYTE *)(v23 - 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v22;
  v64 = v23;
  v65 = (unint64_t)(v25 + 63) >> 6;
  v66 = result + 64;
  v67 = (_QWORD *)result;
  v77 = v13;
  v63 = v14;
  v62 = v16;
  if (!v27)
    goto LABEL_5;
LABEL_4:
  v72 = (v27 - 1) & v27;
  v73 = v21;
  for (i = __clz(__rbit64(v27)) | (v21 << 6); ; i = __clz(__rbit64(v30)) + (v31 << 6))
  {
    v34 = v69;
    v33 = v70;
    v35 = *(_QWORD *)(v70 + 48);
    v75 = *(_QWORD *)(v69 + 72) * i;
    v36 = v68;
    (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v68, v35 + v75, v14);
    v37 = *(_QWORD *)(v33 + 56);
    v76 = i;
    v38 = *(_QWORD *)(v37 + 8 * i);
    v74 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v74(v16, v36, v14);
    v40 = *(_QWORD *)(v38 + 16);
    if (v40)
    {
      v84 = (char *)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v38);
      sub_100366F58(0, v40, 0);
      v41 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v71 = v38;
      v83 = v41;
      v42 = v38 + v41;
      v43 = *(_QWORD *)(v9 + 72);
      v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v82 = v43;
      do
      {
        v44 = v78;
        v45 = v81(v78, v42, v8);
        v46 = SeedBook.storeID.getter(v45);
        v47 = v9;
        v48 = v8;
        v49 = v79;
        v50 = SeedBook.metadata.getter();
        v51 = v80;
        SeedBook.positiveAffinitySource.getter(v50);
        v52 = v49;
        v8 = v48;
        v9 = v47;
        SeedBook.init(storeID:metadata:positiveAffinitySource:)(v46, v52, v51);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v8);
        v53 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
        {
          sub_100366F58(0, *((_QWORD *)v53 + 2) + 1, 1);
          v53 = v84;
        }
        v55 = *((_QWORD *)v53 + 2);
        v54 = *((_QWORD *)v53 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_100366F58(v54 > 1, v55 + 1, 1);
          v53 = v84;
        }
        *((_QWORD *)v53 + 2) = v55 + 1;
        v56 = v82;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v53[v83 + v55 * v82], v77, v8);
        v84 = v53;
        v42 += v56;
        --v40;
      }
      while (v40);
      v39 = swift_bridgeObjectRelease(v71);
      v14 = v63;
      v16 = v62;
    }
    else
    {
      v53 = (char *)_swiftEmptyArrayStorage;
    }
    v57 = v76;
    v20 = v67;
    *(_QWORD *)(v66 + ((v76 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v76;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t, __n128))v74)(v20[6] + v75, v16, v14, v39);
    *(_QWORD *)(v20[7] + 8 * v57) = v53;
    v58 = v20[2];
    v59 = __OFADD__(v58, 1);
    v60 = v58 + 1;
    if (v59)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v20[2] = v60;
    v27 = v72;
    v21 = v73;
    if (v72)
      goto LABEL_4;
LABEL_5:
    v29 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_33;
    if (v29 >= v65)
      return (uint64_t)v20;
    v30 = *(_QWORD *)(v64 + 8 * v29);
    v31 = v21 + 1;
    if (!v30)
    {
      v31 = v21 + 2;
      if (v21 + 2 >= v65)
        return (uint64_t)v20;
      v30 = *(_QWORD *)(v64 + 8 * v31);
      if (!v30)
      {
        v31 = v21 + 3;
        if (v21 + 3 >= v65)
          return (uint64_t)v20;
        v30 = *(_QWORD *)(v64 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_18:
    v72 = (v30 - 1) & v30;
    v73 = v31;
  }
  v32 = v21 + 4;
  if (v21 + 4 >= v65)
    return (uint64_t)v20;
  v30 = *(_QWORD *)(v64 + 8 * v32);
  if (v30)
  {
    v31 = v21 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v65)
      return (uint64_t)v20;
    v30 = *(_QWORD *)(v64 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_1005887AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  Class isa;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  Class v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char v59;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _OWORD v77[2];
  __int128 v78;
  _QWORD *v79;
  uint64_t v80;

  v6 = sub_10004CFD4(&qword_1009D30C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Book.Rationale(0);
  v72 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v70 = (char *)&v68 - v11;
  v12 = type metadata accessor for Book(0);
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScoredBook.book.getter(v13);
  v71 = sub_100587C58((uint64_t)v15, a2, a3);
  v17 = v16;
  v19 = v18;
  v20 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v20, &v80);
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)&v78 = Book.storeID.getter();
  *(_QWORD *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  *(_QWORD *)(inited + 56) = v22;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x73656372756F73;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  v23 = Book.sources.getter();
  v24 = sub_10004CFD4(&qword_1009EC3C0);
  *(_QWORD *)(inited + 96) = v23;
  *(_QWORD *)(inited + 120) = v24;
  *(_QWORD *)(inited + 128) = 0x65726F6373;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  v25 = ScoredBook.score.getter();
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(double *)(inited + 144) = v25;
  v26 = sub_10003FB0C(inited);
  if (v19)
  {
    *(_QWORD *)&v78 = v19;
    v28 = sub_10004CFD4(&qword_1009EC3D0);
    v29 = sub_10058B73C();
    v68 = a1;
    v32 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v78, v28, v29);
    v34 = v33;
    swift_bridgeObjectRelease(v19);
    v35 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v78 = 0;
    v37 = objc_msgSend(v35, "JSONObjectWithData:options:error:", isa, 0, &v78);

    v38 = v78;
    if (v37)
    {
      v39 = (id)v78;
      _bridgeAnyObjectToAny(_:)(v37);
      swift_unknownObjectRelease(v37);
      v40 = sub_10004CFD4(&qword_1009D3090);
      if ((swift_dynamicCast(v77, &v78, (char *)&type metadata for Any + 8, v40, 6) & 1) != 0)
      {
        v79 = (_QWORD *)v40;
        *(_QWORD *)&v78 = *(_QWORD *)&v77[0];
        sub_10004CFC4(&v78, v77);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
        v76 = v26;
        sub_1002C3A2C(v77, 0x746E65746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
        v26 = v76;
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      sub_10005EE1C(v32, v34);
    }
    else
    {
      v61 = (id)v78;
      v62 = _convertNSErrorToError(_:)(v38);

      swift_willThrow(v63);
      sub_10005EE1C(v32, v34);
      swift_errorRelease(v62);
    }
    v30 = v75;
    v31 = v72;
    if (v17)
      goto LABEL_10;
  }
  else
  {
    v30 = v75;
    v31 = v72;
    if (v17)
    {
LABEL_10:
      v79 = &type metadata for String;
      *(_QWORD *)&v78 = v71;
      *((_QWORD *)&v78 + 1) = v17;
      sub_10004CFC4(&v78, v77);
      v42 = swift_isUniquelyReferenced_nonNull_native(v26);
      v76 = v26;
      sub_1002C3A2C(v77, 1684957547, 0xE400000000000000, v42);
      v26 = v76;
      v27 = swift_bridgeObjectRelease(0x8000000000000000);
    }
  }
  Book.rationale.getter(v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30) == 1)
  {
    sub_100010960((uint64_t)v8, &qword_1009D30C0);
  }
  else
  {
    v43 = Book.Rationale.seedBooksByMethodology.getter();
    v44 = sub_100587FC8(v43);
    v45 = swift_bridgeObjectRelease(v43);
    Book.Rationale.conditionalScore.getter(v45);
    v46 = v69;
    Book.Rationale.init(conditionalScore:seedBooksByMethodology:)(v44);
    v47 = *(void (**)(char *, uint64_t))(v31 + 8);
    v47(v8, v30);
    v48 = v70;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v70, v46, v30);
    v49 = sub_100008DB0(&qword_1009EC3C8, (uint64_t (*)(uint64_t))&type metadata accessor for Book.Rationale, (uint64_t)&protocol conformance descriptor for Book.Rationale);
    v50 = dispatch thunk of JSONEncoder.encode<A>(_:)(v48, v30, v49);
    v52 = v51;
    v53 = (void *)objc_opt_self(NSJSONSerialization);
    v54 = Data._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v78 = 0;
    v55 = objc_msgSend(v53, "JSONObjectWithData:options:error:", v54, 0, &v78);

    v56 = v78;
    if (v55)
    {
      v57 = (id)v78;
      _bridgeAnyObjectToAny(_:)(v55);
      swift_unknownObjectRelease(v55);
      v58 = sub_10004CFD4(&qword_1009D3090);
      if ((swift_dynamicCast(v77, &v78, (char *)&type metadata for Any + 8, v58, 6) & 1) != 0)
      {
        v79 = (_QWORD *)v58;
        *(_QWORD *)&v78 = *(_QWORD *)&v77[0];
        sub_10004CFC4(&v78, v77);
        v59 = swift_isUniquelyReferenced_nonNull_native(v26);
        v76 = v26;
        sub_1002C3A2C(v77, 0x6C616E6F69746172, 0xE900000000000065, v59);
        v26 = v76;
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      sub_10005EE1C(v50, v52);
    }
    else
    {
      v64 = (id)v78;
      v65 = _convertNSErrorToError(_:)(v56);

      swift_willThrow(v66);
      sub_10005EE1C(v50, v52);
      v67 = v65;
      v30 = v75;
      swift_errorRelease(v67);
    }
    v47(v48, v30);
  }
  (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v74);
  return v26;
}

_QWORD *sub_100588E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v30 = a2;
  v4 = type metadata accessor for Book.MediaType(0);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Book(0);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v25 = v2;
    v31 = _swiftEmptyArrayStorage;
    sub_10003F1DC(0, v10, 0);
    v12 = *(_QWORD *)(type metadata accessor for ScoredBook(0) - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v15 = *(_QWORD *)(v12 + 72);
    do
    {
      v16 = ScoredBook.book.getter(v13);
      Book.mediaType.getter(v16);
      v17 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v27);
      v18 = Book.MediaType.rawValue.getter(v17);
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      v21 = sub_1005887AC(v30, v18, v20);
      swift_bridgeObjectRelease(v20);
      v11 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
      {
        sub_10003F1DC(0, v11[2] + 1, 1);
        v11 = v31;
      }
      v23 = v11[2];
      v22 = v11[3];
      if (v23 >= v22 >> 1)
      {
        sub_10003F1DC(v22 > 1, v23 + 1, 1);
        v11 = v31;
      }
      v11[2] = v23 + 1;
      v11[v23 + 4] = v21;
      v14 += v15;
      --v10;
    }
    while (v10);
  }
  return v11;
}

_QWORD *sub_100589040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(type metadata accessor for ScoredBook(0) - 8);
  v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain(a1);
  v7 = _swiftEmptyArrayStorage;
  do
  {
    sub_100585994((unint64_t *)&v11);
    if (v1)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a1);
      return v7;
    }
    if (v12)
    {
      sub_10004CFC4(&v11, v13);
      sub_10004CFC4(v13, &v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_1005B0474(0, v7[2] + 1, 1, v7);
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v7 = sub_1005B0474((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
      v7[2] = v9 + 1;
      sub_10004CFC4(&v11, &v7[4 * v9 + 4]);
    }
    else
    {
      sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
    }
    v5 += v6;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(a1);
  return v7;
}

_QWORD *sub_1005891C4(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = a1;
  v21 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_18;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v6 = 0;
    v7 = v4 & 0xC000000000000001;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    v18 = i;
    v19 = v4;
    while (1)
    {
      if (v7)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
        v10 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease(v4);
          swift_unknownObjectRelease(v9);
          swift_release(v21);
          return a2;
        }
        goto LABEL_9;
      }
      if (v6 >= *(_QWORD *)(v8 + 16))
        break;
      v9 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_unknownObjectRetain(v9);
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_14;
LABEL_9:
      v20 = v9;
      v11 = sub_100584E48(&v20, (uint64_t)a2);
      if (v2)
        goto LABEL_15;
      if ((v11 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v12 = v8;
        v13 = v21[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = v13;
        v8 = v12;
        v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v9);
        specialized ContiguousArray._endMutation()(v15);
        i = v18;
        v4 = v19;
      }
      else
      {
        swift_unknownObjectRelease(v9);
      }
      ++v6;
      if (v10 == i)
      {
        a2 = v21;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_18:
    if (v4 < 0)
      v16 = v4;
    else
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  a2 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return a2;
}

unint64_t sub_100589368()
{
  unint64_t result;

  result = qword_1009EC320;
  if (!qword_1009EC320)
  {
    result = swift_getWitnessTable(&unk_10072E0A0, &type metadata for CollectionRecommendationsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1009EC320);
  }
  return result;
}

void sub_1005893AC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];
  uint64_t v23;

  v23 = a1;
  v8 = a2 + 56;
  v9 = 1 << *(_BYTE *)(a2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v13 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain(v20);
    sub_1005831B8((uint64_t)&v23, v22, a3, a4);
    if (v4)
    {
      v21 = v23;
      swift_release(a2);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v21);
      return;
    }
    swift_bridgeObjectRelease(v20);
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v11 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v12)
  {
LABEL_26:
    swift_release(a2);
    return;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100589574(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001007CA860)
  {
    swift_bridgeObjectRelease(0x80000001007CA860);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x80000001007CA860, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_1005895F8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  if (a1 == 0x6E656D7461657274 && a2 == 0xEB00000000444974)
  {
    v5 = 0xEB00000000444974;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E656D7461657274, 0xEB00000000444974, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x444965726F7473 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x444965726F7473, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    v8 = 0xE900000000000065;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x707954616964656DLL, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000012)
  {
    v9 = 0x80000001007D3EB0;
    if (a2 == 0x80000001007D3EB0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3EB0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD000000000000012)
  {
    v10 = 0x80000001007D3ED0;
    if (a2 == 0x80000001007D3ED0)
      goto LABEL_30;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3ED0, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_30:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xEF6465776F6C6C41)
  {
    v11 = 0xEF6465776F6C6C41;
LABEL_36:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xEF6465776F6C6C41, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_36;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001007D3EF0)
  {
    v12 = 0x80000001007D3EF0;
LABEL_42:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001007D3EF0, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_42;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001007D3F10)
  {
    swift_bridgeObjectRelease(0x80000001007D3F10);
    return 7;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3F10, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_100589960(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;

  if (a1 == 0x6E656D7461657274 && a2 == 0xEB00000000444974)
  {
    v5 = 0xEB00000000444974;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E656D7461657274, 0xEB00000000444974, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x444965726F7473 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x444965726F7473, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000012)
  {
    v8 = 0x80000001007D3EB0;
    if (a2 == 0x80000001007D3EB0)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3EB0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD000000000000012)
  {
    v9 = 0x80000001007D3ED0;
    if (a2 == 0x80000001007D3ED0)
      goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3ED0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xEF6465776F6C6C41)
  {
    v10 = 0xEF6465776F6C6C41;
LABEL_30:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xEF6465776F6C6C41, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_30;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001007D3EF0)
  {
    v11 = 0x80000001007D3EF0;
LABEL_36:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001007D3EF0, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_36;
  }
  if (a1 == 0x736B6F6F426E696DLL && a2 == 0xE800000000000000)
  {
    v12 = 0xE800000000000000;
LABEL_42:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736B6F6F426E696DLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_42;
  }
  if (a1 == 0x736B6F6F4278616DLL && a2 == 0xE800000000000000)
  {
    v13 = 0xE800000000000000;
LABEL_48:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736B6F6F4278616DLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_48;
  }
  if (a1 == 0x697463656C6C6F63 && a2 == 0xEF73657079546E6FLL)
  {
    v14 = 0xEF73657079546E6FLL;
LABEL_54:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697463656C6C6F63, 0xEF73657079546E6FLL, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_54;
  }
  if (a1 == 0xD000000000000012)
  {
    v15 = 0x80000001007D3F10;
    if (a2 == 0x80000001007D3F10)
      goto LABEL_59;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001007D3F10, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_59:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x80000001007D3F30)
  {
    v16 = 0x80000001007D3F30;
LABEL_65:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x80000001007D3F30, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_65;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001007D3F50)
  {
    v17 = 0x80000001007D3F50;
LABEL_71:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x80000001007D3F50, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_71;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000001007D3F70)
  {
    swift_bridgeObjectRelease(0x80000001007D3F70);
    return 12;
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001007D3F70, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v18 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_100589EAC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  _QWORD v66[4];
  char v67;
  char v68;
  char v69;
  int v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _BYTE v75[7];
  uint64_t v76;
  char v77;
  _BYTE v78[7];
  uint64_t v79;
  uint64_t v80;
  char v81;
  _BYTE v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  char v88;
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  char v92;
  _BYTE v93[7];
  char v94;
  int v95;
  char v96;
  _QWORD *v97;

  v5 = sub_10004CFD4(&qword_1009EC490);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v97 = a1;
  sub_10003F198(a1, v9);
  v11 = sub_10058C088();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CollectionRecommendationsConfiguration.CodingKeys, &type metadata for CollectionRecommendationsConfiguration.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Books15CurrentPageViewVwxx_0(v97);
  }
  else
  {
    v12 = v6;
    LOBYTE(v66[0]) = 0;
    v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v66, v5);
    v15 = v14;
    LOBYTE(v66[0]) = 1;
    v16 = swift_bridgeObjectRetain(v14);
    v54 = KeyedDecodingContainer.decode(_:forKey:)(v66, v5, v16);
    v55 = v13;
    LOBYTE(v66[0]) = 2;
    v18 = v17;
    swift_bridgeObjectRetain(v17);
    v19 = KeyedDecodingContainer.decode(_:forKey:)(v66, v5);
    v56 = v18;
    v53 = v19;
    LOBYTE(v66[0]) = 3;
    LODWORD(v18) = KeyedDecodingContainer.decode(_:forKey:)(v66, v5);
    LOBYTE(v66[0]) = 4;
    v50 = KeyedDecodingContainer.decode(_:forKey:)(v66, v5);
    v51 = v18;
    v20 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    LOBYTE(v57) = 5;
    v52 = sub_100065220(&qword_1009EC4A0, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v57, v5, v20);
    v49 = v20;
    v21 = v66[0];
    LOBYTE(v66[0]) = 6;
    v22 = v21;
    swift_bridgeObjectRetain(v21);
    v47 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v66, v5);
    v48 = v22;
    v46 = v23;
    v94 = v23 & 1;
    LOBYTE(v66[0]) = 7;
    v45 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v66, v5);
    v44 = v24;
    v92 = v24 & 1;
    LOBYTE(v57) = 8;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v49, &v57, v5, v49);
    v25 = v66[0];
    LOBYTE(v66[0]) = 9;
    v52 = v25;
    swift_bridgeObjectRetain(v25);
    v43 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v66, v5);
    LODWORD(v49) = v26;
    v90 = v26 & 1;
    v27 = sub_10004CFD4(&qword_1009EC338);
    LOBYTE(v57) = 10;
    sub_10058C244(&qword_1009EC4A8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol witness table for Int, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v27, &v57, v5, v27);
    v28 = v66[0];
    v29 = sub_10004CFD4(&qword_1009EC348);
    LOBYTE(v57) = 11;
    sub_10058C0CC();
    v42 = v28;
    swift_bridgeObjectRetain(v28);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v29, &v57, v5, v29);
    v30 = v66[0];
    v87 = 12;
    swift_bridgeObjectRetain(v66[0]);
    v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v87, v5);
    LOBYTE(v29) = v31;
    v53 &= 1u;
    v50 &= 1u;
    v51 &= 1u;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v5);
    v32 = v29 & 1;
    v88 = v29 & 1;
    v33 = v56;
    *(_QWORD *)&v57 = v55;
    *((_QWORD *)&v57 + 1) = v15;
    *(_QWORD *)&v58 = v54;
    *((_QWORD *)&v58 + 1) = v56;
    LOBYTE(v59) = v53;
    BYTE1(v59) = v51;
    BYTE2(v59) = v50;
    v34 = v48;
    *((_QWORD *)&v59 + 1) = v48;
    *(_QWORD *)&v60 = v47;
    BYTE8(v60) = v46 & 1;
    *(_QWORD *)&v61 = v45;
    BYTE8(v61) = v44 & 1;
    v35 = v52;
    v36 = v42;
    *(_QWORD *)&v62 = v52;
    *((_QWORD *)&v62 + 1) = v43;
    LOBYTE(v63) = v49 & 1;
    *((_QWORD *)&v63 + 1) = v42;
    *(_QWORD *)&v64 = v30;
    *((_QWORD *)&v64 + 1) = v41;
    v65 = v32;
    sub_10058C14C(&v57);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v30);
    _s5Books15CurrentPageViewVwxx_0(v97);
    v66[0] = v55;
    v66[1] = v15;
    v66[2] = v54;
    v66[3] = v33;
    v67 = v53;
    v68 = v51;
    v69 = v50;
    v70 = v95;
    v71 = v96;
    v72 = v34;
    v73 = v47;
    v74 = v94;
    *(_DWORD *)v75 = *(_DWORD *)v93;
    *(_DWORD *)&v75[3] = *(_DWORD *)&v93[3];
    v76 = v45;
    v77 = v92;
    *(_DWORD *)v78 = *(_DWORD *)v91;
    *(_DWORD *)&v78[3] = *(_DWORD *)&v91[3];
    v79 = v35;
    v80 = v43;
    v81 = v90;
    *(_DWORD *)v82 = *(_DWORD *)v89;
    *(_DWORD *)&v82[3] = *(_DWORD *)&v89[3];
    v83 = v36;
    v84 = v30;
    v85 = v41;
    v86 = v88;
    sub_10058ABA4(v66);
    v37 = v64;
    *(_OWORD *)(a2 + 96) = v63;
    *(_OWORD *)(a2 + 112) = v37;
    *(_BYTE *)(a2 + 128) = v65;
    v38 = v60;
    *(_OWORD *)(a2 + 32) = v59;
    *(_OWORD *)(a2 + 48) = v38;
    v39 = v62;
    *(_OWORD *)(a2 + 64) = v61;
    *(_OWORD *)(a2 + 80) = v39;
    v40 = v58;
    *(_OWORD *)a2 = v57;
    *(_OWORD *)(a2 + 16) = v40;
  }
}

id sub_10058A6CC()
{
  void *v0;
  Class isa;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  id v23;
  uint64_t v24;

  v0 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v23 = 0;
  v2 = objc_msgSend(v0, "dataWithJSONObject:options:error:", isa, 0, &v23);

  v3 = v23;
  if (v2)
  {
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v7 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v8 = sub_10006CE24(v4, v6);
    v9 = JSONDecoder.init()(v8);
    v10 = sub_10058B93C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for BookRecommendationConfiguration, v4, v6, &type metadata for BookRecommendationConfiguration, v10);
    sub_10005EE1C(v4, v6);
    swift_release(v9);
    sub_10005EE1C(v4, v6);
    return v23;
  }
  else
  {
    v11 = v3;
    v12 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v13);
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v14 = type metadata accessor for Logger(0);
    sub_100048F64(v14, (uint64_t)qword_1009EC298);
    swift_errorRetain(v12);
    v15 = swift_errorRetain(v12);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v18 = 138412290;
      swift_errorRetain(v12);
      v20 = (void *)_swift_stdlib_bridgeErrorToNSError(v12);
      v23 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v18 + 4, v18 + 12);
      *v19 = v20;
      swift_errorRelease(v12);
      swift_errorRelease(v12);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to convert provided configuration dictionary to JSON: %@", v18, 0xCu);
      v21 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v19, 1, v21);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      swift_errorRelease(v12);
    }
    else
    {
      swift_errorRelease(v12);
      swift_errorRelease(v12);
      swift_errorRelease(v12);

    }
    return 0;
  }
}

_QWORD *sub_10058ABA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[10];
  v5 = a1[13];
  v6 = a1[14];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_10058AC14()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for CollectionRecommendationRequest);
}

uint64_t sub_10058AC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(type metadata accessor for CollectionRecommendationRequest(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v7 = (_QWORD *)swift_task_alloc(dword_1009EC38C);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1001FC2C4;
  v7[9] = v5;
  v7[10] = v6;
  v7[8] = v4;
  return swift_task_switch(sub_100585F84, 0, 0);
}

void sub_10058ACBC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1005863F4(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_10058ACD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  char v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a1;
  v3 = sub_10004CFD4(&qword_1009E02F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v48 = (uint64_t)&v46 - v7;
  v8 = type metadata accessor for Book.MediaType(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v47 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClusteringOptions.MediaType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009E8A60);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CollectionRecommendationOptions(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = CollectionRecommendationRequest.optionsByCollectionRecommendationType.getter(v19);
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_1002BBDE4(a2), (v24 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v16, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v18 + 72) * v23, v17);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v25, 1, v17);
  v26 = swift_bridgeObjectRelease(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48))(v16, 1, v17, v26) != 1)
  {
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
    v32 = CollectionRecommendationOptions.mediaTypes.getter(v31);
    v33 = enum case for ClusteringOptions.MediaType.mixed(_:);
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v34(v13, enum case for ClusteringOptions.MediaType.mixed(_:), v10);
    v35 = sub_1003244F8((uint64_t)v13, v32);
    v36 = swift_bridgeObjectRelease(v32);
    v37 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
    v37(v13, v10, v36);
    if ((v35 & 1) != 0)
    {
      v38 = v34(v13, v33, v10);
      v39 = ClusteringOptions.MediaType.rawValue.getter(v38);
      ((void (*)(char *, uint64_t))v37)(v13, v10);
    }
    else
    {
      v40 = v48;
      sub_1003A368C(v49, v48);
      v42 = v50;
      v41 = v51;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v40, 1, v51) == 1)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
        v30 = v40;
        goto LABEL_13;
      }
      v43 = v47;
      v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 32))(v47, v40, v41);
      v39 = Book.MediaType.rawValue.getter(v44);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    return v39;
  }
  sub_100010960((uint64_t)v16, (uint64_t *)&unk_1009E8A60);
  sub_1003A368C(v49, (uint64_t)v5);
  v28 = v50;
  v27 = v51;
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v5, 1, v51);
  if ((_DWORD)v29 == 1)
  {
    v30 = (uint64_t)v5;
LABEL_13:
    sub_100010960(v30, &qword_1009E02F0);
    return 0;
  }
  v39 = Book.MediaType.rawValue.getter(v29);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v27);
  return v39;
}

unint64_t sub_10058B08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  double v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  char *v45;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  Class isa;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _OWORD v87[2];
  __int128 v88;
  uint64_t v89;
  uint64_t v90;

  v80 = a1;
  v1 = type metadata accessor for Book(0);
  v78 = *(_QWORD *)(v1 - 8);
  v79 = v1;
  __chkstk_darwin(v1);
  v75 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v77 = (uint64_t)&v68 - v4;
  v76 = type metadata accessor for ScoredBook(0);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v73 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v72 = (char *)&v68 - v7;
  v8 = sub_10004CFD4(&qword_1009EC3F0);
  v9 = __chkstk_darwin(v8);
  v83 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Series.Rationale(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  v81 = v11;
  v82 = v12;
  __chkstk_darwin(v11);
  v70 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v71 = (char *)&v68 - v15;
  v16 = type metadata accessor for Book.MediaType(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Series(0, v18);
  v22 = *(_QWORD *)(v21 - 8);
  v84 = v21;
  v85 = v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScoredSeries.series.getter(v23);
  v26 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v26, &v90);
  *(_OWORD *)(inited + 16) = xmmword_10071B8B0;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = 0x736569726573;
  *(_QWORD *)(inited + 56) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 25705;
  *(_QWORD *)(inited + 88) = 0xE200000000000000;
  *(_QWORD *)&v88 = Series.storeID.getter();
  *(_QWORD *)(inited + 96) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  *(_QWORD *)(inited + 104) = v28;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 0x65726F6373;
  *(_QWORD *)(inited + 136) = 0xE500000000000000;
  *(double *)(inited + 144) = ScoredSeries.score.getter();
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(_QWORD *)(inited + 176) = 1684957547;
  *(_QWORD *)(inited + 184) = 0xE400000000000000;
  v29 = v25;
  *(_QWORD *)&v88 = 0;
  *((_QWORD *)&v88 + 1) = 0xE000000000000000;
  Series.mediaType.getter();
  _print_unlocked<A, B>(_:_:)(v20, &v88, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v30 = v16;
  v31 = v81;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v30);
  v32 = *((_QWORD *)&v88 + 1);
  *(_QWORD *)(inited + 192) = v88;
  *(_QWORD *)(inited + 200) = v32;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = 0x656372756F73;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 232) = 0xE600000000000000;
  *(_QWORD *)(inited + 240) = 7365743;
  *(_QWORD *)(inited + 248) = 0xE300000000000000;
  v33 = sub_10003FB0C(inited);
  v34 = (uint64_t)v83;
  Series.rationale.getter();
  v35 = v82;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v34, 1, v31) == 1)
  {
    sub_100010960(v34, &qword_1009EC3F0);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v84);
    return v33;
  }
  v68 = v33;
  v69 = v29;
  v36 = Series.Rationale.seedBooksByMethodology.getter();
  v37 = sub_1005882B0(v36);
  v38 = swift_bridgeObjectRelease(v36);
  v39 = v73;
  v40 = Series.Rationale.targetBook.getter(v38);
  v41 = v75;
  ScoredBook.book.getter(v40);
  v42 = v77;
  sub_100654B34(v77);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v41, v79);
  v44 = ScoredBook.score.getter(v43);
  v45 = v72;
  ScoredBook.init(book:score:)(v42, v44);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v76);
  v46 = v70;
  Series.Rationale.init(targetBook:seedBooksByMethodology:)(v45, v37);
  v47 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v47(v34, v31);
  v48 = v71;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v71, v46, v31);
  v49 = sub_100008DB0(&qword_1009EC3F8, (uint64_t (*)(uint64_t))&type metadata accessor for Series.Rationale, (uint64_t)&protocol conformance descriptor for Series.Rationale);
  v50 = dispatch thunk of JSONEncoder.encode<A>(_:)(v48, v31, v49);
  v52 = v51;
  v53 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v88 = 0;
  v55 = objc_msgSend(v53, "JSONObjectWithData:options:error:", isa, 0, &v88);

  v56 = v88;
  if (!v55)
  {
    v61 = (id)v88;
    v62 = _convertNSErrorToError(_:)(v56);

    swift_willThrow(v63);
    sub_10005EE1C(v50, v52);
    swift_errorRelease(v62);
LABEL_9:
    v65 = v84;
    v64 = v85;
    v66 = v69;
    v47((uint64_t)v48, v31);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v65);
    return v68;
  }
  v57 = (id)v88;
  _bridgeAnyObjectToAny(_:)(v55);
  swift_unknownObjectRelease(v55);
  v58 = sub_10004CFD4(&qword_1009D3090);
  if ((swift_dynamicCast(v87, &v88, (char *)&type metadata for Any + 8, v58, 6) & 1) == 0)
  {
    sub_10005EE1C(v50, v52);
    goto LABEL_9;
  }
  v89 = v58;
  *(_QWORD *)&v88 = *(_QWORD *)&v87[0];
  sub_10004CFC4(&v88, v87);
  v59 = v68;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v68);
  v86 = v59;
  sub_1002C3A2C(v87, 0x6C616E6F69746172, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  v33 = v86;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10005EE1C(v50, v52);
  v47((uint64_t)v48, v31);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v69, v84);
  return v33;
}

unint64_t sub_10058B73C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EC3D8;
  if (!qword_1009EC3D8)
  {
    v1 = sub_100030B74(&qword_1009EC3D0);
    sub_100008DB0(&qword_1009EC3E0, (uint64_t (*)(uint64_t))&type metadata accessor for JSON, (uint64_t)&protocol conformance descriptor for JSON);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1009EC3D8);
  }
  return result;
}

uint64_t sub_10058B7C0()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B7CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for Collection(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1009EC414);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1001FC2C4;
  return sub_1005852B4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10058B878()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B884(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for Collection(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1009EC414);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000AE34;
  return sub_1005852B4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10058B930()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

unint64_t sub_10058B93C()
{
  unint64_t result;

  result = qword_1009EC438;
  if (!qword_1009EC438)
  {
    result = swift_getWitnessTable(&unk_10072E050, &type metadata for BookRecommendationConfiguration);
    atomic_store(result, (unint64_t *)&qword_1009EC438);
  }
  return result;
}

uint64_t sub_10058B980()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B98C()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B998()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B9A4()
{
  return sub_10058B9B0((uint64_t (*)(_QWORD))&type metadata accessor for Collection);
}

uint64_t sub_10058B9B0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v7 + 8, v6);
}

ValueMetadata *type metadata accessor for BookRecommendationConfiguration()
{
  return &type metadata for BookRecommendationConfiguration;
}

uint64_t initializeWithCopy for SuggestionsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  v6 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for SuggestionsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for SuggestionsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionsConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SuggestionsConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionsConfiguration()
{
  return &type metadata for SuggestionsConfiguration;
}

uint64_t destroy for CollectionRecommendationsConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[13]);
  return swift_bridgeObjectRelease(a1[14]);
}

uint64_t initializeWithCopy for CollectionRecommendationsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for CollectionRecommendationsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  LOBYTE(v10) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v11);
  v13 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v13;
  v14 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v14);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v18;
  return a1;
}

__n128 initializeWithTake for CollectionRecommendationsConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CollectionRecommendationsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  v10 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationsConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionRecommendationsConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationsConfiguration()
{
  return &type metadata for CollectionRecommendationsConfiguration;
}

unint64_t sub_10058C088()
{
  unint64_t result;

  result = qword_1009EC498;
  if (!qword_1009EC498)
  {
    result = swift_getWitnessTable(&unk_10072E498, &type metadata for CollectionRecommendationsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC498);
  }
  return result;
}

unint64_t sub_10058C0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EC4B0;
  if (!qword_1009EC4B0)
  {
    v1 = sub_100030B74(&qword_1009EC348);
    sub_100065220(&qword_1009EC4A0, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1009EC4B0);
  }
  return result;
}

_QWORD *sub_10058C14C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[10];
  v6 = a1[13];
  swift_bridgeObjectRetain(a1[14]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

unint64_t sub_10058C1BC()
{
  unint64_t result;

  result = qword_1009EC4D8;
  if (!qword_1009EC4D8)
  {
    result = swift_getWitnessTable(&unk_10072E3D0, &type metadata for BookRecommendationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC4D8);
  }
  return result;
}

unint64_t sub_10058C200()
{
  unint64_t result;

  result = qword_1009EC4F0;
  if (!qword_1009EC4F0)
  {
    result = swift_getWitnessTable(&unk_10072E3A8, &type metadata for SuggestionsConfiguration.MediaType);
    atomic_store(result, (unint64_t *)&qword_1009EC4F0);
  }
  return result;
}

uint64_t sub_10058C244(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100030B74(&qword_1009EC338);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10058C2A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EC528;
  if (!qword_1009EC528)
  {
    v1 = sub_100030B74(&qword_1009EC348);
    sub_100065220(&qword_1009EC4F8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1009EC528);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BookRecommendationConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10058C368 + 4 * byte_10072DF1B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10058C388 + 4 * byte_10072DF20[v4]))();
}

_BYTE *sub_10058C368(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10058C388(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10058C390(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10058C398(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10058C3A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10058C3A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BookRecommendationConfiguration.CodingKeys()
{
  return &type metadata for BookRecommendationConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationsConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionRecommendationsConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_10058C4A0 + 4 * byte_10072DF34[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_10058C4D4 + 4 * byte_10072DF2F[v4]))();
}

uint64_t sub_10058C4D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C4DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058C4E4);
  return result;
}

uint64_t sub_10058C4F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058C4F8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_10058C4FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationsConfiguration.CodingKeys()
{
  return &type metadata for CollectionRecommendationsConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SuggestionsConfiguration.MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10058C56C + 4 * byte_10072DF3E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10058C5A0 + 4 * byte_10072DF39[v4]))();
}

uint64_t sub_10058C5A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C5A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058C5B0);
  return result;
}

uint64_t sub_10058C5BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058C5C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10058C5C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C5D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionsConfiguration.MediaType()
{
  return &type metadata for SuggestionsConfiguration.MediaType;
}

unint64_t sub_10058C5F0()
{
  unint64_t result;

  result = qword_1009EC530;
  if (!qword_1009EC530)
  {
    result = swift_getWitnessTable(&unk_10072E158, &type metadata for SuggestionsConfiguration.MediaType);
    atomic_store(result, (unint64_t *)&qword_1009EC530);
  }
  return result;
}

unint64_t sub_10058C638()
{
  unint64_t result;

  result = qword_1009EC538;
  if (!qword_1009EC538)
  {
    result = swift_getWitnessTable(&unk_10072E210, &type metadata for CollectionRecommendationsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC538);
  }
  return result;
}

unint64_t sub_10058C680()
{
  unint64_t result;

  result = qword_1009EC540;
  if (!qword_1009EC540)
  {
    result = swift_getWitnessTable(&unk_10072E2C8, &type metadata for SuggestionsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC540);
  }
  return result;
}

unint64_t sub_10058C6C8()
{
  unint64_t result;

  result = qword_1009EC548;
  if (!qword_1009EC548)
  {
    result = swift_getWitnessTable(&unk_10072E380, &type metadata for BookRecommendationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC548);
  }
  return result;
}

unint64_t sub_10058C710()
{
  unint64_t result;

  result = qword_1009EC550;
  if (!qword_1009EC550)
  {
    result = swift_getWitnessTable(&unk_10072E2F0, &type metadata for BookRecommendationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC550);
  }
  return result;
}

unint64_t sub_10058C758()
{
  unint64_t result;

  result = qword_1009EC558;
  if (!qword_1009EC558)
  {
    result = swift_getWitnessTable(&unk_10072E318, &type metadata for BookRecommendationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC558);
  }
  return result;
}

unint64_t sub_10058C7A0()
{
  unint64_t result;

  result = qword_1009EC570;
  if (!qword_1009EC570)
  {
    result = swift_getWitnessTable(&unk_10072E180, &type metadata for CollectionRecommendationsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC570);
  }
  return result;
}

unint64_t sub_10058C7E8()
{
  unint64_t result;

  result = qword_1009EC578;
  if (!qword_1009EC578)
  {
    result = swift_getWitnessTable(&unk_10072E1A8, &type metadata for CollectionRecommendationsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC578);
  }
  return result;
}

void UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v7[4] = a2;
  v8 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000147F0;
  v7[3] = &unk_100911530;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a3);
  objc_msgSend(v3, "addAnimations:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t UIViewPropertyAnimator.UpdateReason.rawValue.getter(char a1)
{
  return (a1 & 1u) + 1;
}

uint64_t UIViewPropertyAnimator.UpdateReason.init(rawValue:)(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 2)
    v1 = 1;
  else
    v1 = 2;
  if (a1 == 1)
    return 0;
  else
    return v1;
}

unint64_t sub_10058C8EC()
{
  unint64_t result;

  result = qword_1009EC588;
  if (!qword_1009EC588)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UIViewPropertyAnimator.UpdateReason, &type metadata for UIViewPropertyAnimator.UpdateReason);
    atomic_store(result, (unint64_t *)&qword_1009EC588);
  }
  return result;
}

uint64_t _s12UpdateReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10058C97C + 4 * byte_10072E4ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10058C9B0 + 4 * byte_10072E4E8[v4]))();
}

uint64_t sub_10058C9B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C9B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058C9C0);
  return result;
}

uint64_t sub_10058C9CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058C9D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10058C9D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058C9E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIViewPropertyAnimator.UpdateReason()
{
  return &type metadata for UIViewPropertyAnimator.UpdateReason;
}

void sub_10058CA60(void *a1, void *a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  char v46;
  __n128 v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;

  v50 = a2;
  v51 = a1;
  v2 = sub_10004CFD4(&qword_1009EC590);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BookFontTable(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for BookThemeEntity(0);
  v10 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - v14;
  v16 = objc_msgSend((id)objc_opt_self(BCLightLevelController), "sharedInstance");
  if (v16)
  {
    v17 = v16;
    type metadata accessor for ThemeAppearanceManager(0);
    v18 = objc_allocWithZone((Class)type metadata accessor for LightLevelControllerWrapper());
    v19 = sub_10001AB7C(v17);
    v20 = sub_10058CDD0();
    static ThemeAppearanceManager.setupIfNeeded(lightLevelController:)(v19, v20);

    v22 = static ThemeAppearanceManager.shared.getter(v21);
    v23 = ThemeAppearanceManager.currentThemePersistence.getter();
    v25 = v24;
    ObjectType = swift_getObjectType();
    v27 = dispatch thunk of CurrentThemePersisting.themeType.getter(ObjectType, v25);
    v28 = swift_unknownObjectRelease(v23);
    v29 = ThemeAppearanceManager.themeVariant.getter(v28) & 1;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for BookFontTable.default(_:), v6);
    v30 = type metadata accessor for BookThemeEntity.Overrides(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
    BookThemeEntity.init(themeType:variant:fontTable:overrides:)(v27, v29, v9, v5);
    v32 = v51;
    if (v51)
    {
      v33 = (void *)BookThemeEntity.backgroundColor.getter(v31);
      objc_msgSend(v32, "setBackgroundColor:", v33);

    }
    v34 = BookThemeEntity.hasDarkBackground.getter(v31);
    v35 = v52;
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v52);
    if ((v34 & 1) != 0)
    {
      v37 = BookThemeEntity.variant.getter(v36);
      v38 = BookThemeVariant.rawValue.getter(v37 & 1);
      v40 = v39;
      v42 = BookThemeVariant.rawValue.getter(0);
      v43 = v41;
      if (v38 == v42 && v40 == v41)
      {
        v44 = swift_bridgeObjectRelease_n(v40, 2);
        v45 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
        v45(v12, v35, v44);
LABEL_10:
        v48 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
        objc_msgSend(v50, "setColor:", v48);
        swift_release(v22);

        ((void (*)(char *, uint64_t))v45)(v15, v35);
        return;
      }
      v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
      swift_bridgeObjectRelease(v40);
      v47 = swift_bridgeObjectRelease(v43);
      v45 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
      v45(v12, v35, v47);
      if ((v46 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      v45 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
      ((void (*)(char *, uint64_t))v45)(v12, v35);
    }
    ((void (*)(char *, uint64_t))v45)(v15, v35);
    swift_release(v22);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_10058CDD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9220;
  if (!qword_1009E9220)
  {
    v1 = type metadata accessor for LightLevelControllerWrapper();
    result = swift_getWitnessTable(&unk_10073422C, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9220);
  }
  return result;
}

uint64_t sub_10058CE18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[16] = a1;
  v2[17] = v1;
  v3 = sub_10004CFD4(&qword_1009E6990);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Genre(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScoredGenre(0);
  v2[20] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[21] = v6;
  v2[22] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E02F0);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Book.MediaType(0);
  v2[24] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[25] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v10);
  v2[27] = swift_task_alloc(v10);
  v11 = type metadata accessor for TaskPriority(0);
  v2[28] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[29] = v12;
  v2[30] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10058CF40, 0, 0);
}

uint64_t sub_10058CF40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC90 + dword_1009DAC90);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC94);
  *(_QWORD *)(v1 + 248) = v2;
  *v2 = v1;
  v2[1] = sub_10058CFB0;
  return v4(*(_QWORD *)(v1 + 240));
}

uint64_t sub_10058CFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 232);
  *(_QWORD *)(*(_QWORD *)v2 + 256) = v1;
  swift_task_dealloc(v5);
  v7 = v4[30];
  v8 = v4[28];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    v9 = sub_10058D448;
  }
  else
  {
    v4[33] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    v9 = sub_10058D040;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10058D040()
{
  _QWORD *v0;
  _QWORD *v1;
  void *ObjCClassFromMetadata;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v0[33]);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10058D0E4;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10058D4D0;
  v4[3] = &unk_100911640;
  v4[4] = v3;
  objc_msgSend(ObjCClassFromMetadata, "getODPTopGenre:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10058D0E4()
{
  return swift_task_switch(sub_10058D130, 0, 0);
}

uint64_t sub_10058D130()
{
  uint64_t v0;
  void *v1;
  double v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 120);
  if (!v1)
  {
    v9 = _swiftEmptyArrayStorage;
LABEL_13:
    v32 = *(_QWORD *)(v0 + 208);
    v33 = *(_QWORD *)(v0 + 216);
    v35 = *(_QWORD *)(v0 + 176);
    v34 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 144);
    v36 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v33);
    swift_task_dealloc(v32);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v9);
  }
  v2 = Double.init(truncating:)(*(_QWORD *)(v0 + 120));
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&v2 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    v10 = 0;
LABEL_11:
    v11 = sub_10058D568();
    v12 = swift_allocError(&type metadata for ODPGenreRecommendationService.Errors, v11, 0, 0);
    *v13 = v10;
    swift_willThrow(v12);

    v15 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = (unint64_t)objc_msgSend(v1, "longLongValue");
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = v4;
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 184);
    Configuration.mediaType(for:)(v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
    {
      sub_10058D5AC(*(_QWORD *)(v0 + 184));
      v10 = 1;
      goto LABEL_11;
    }
    v22 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 216);
    v23 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 168);
    v38 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 32))(v21, *(_QWORD *)(v0 + 184), v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v21, v23);
    v28 = type metadata accessor for Genre.Rationale(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    Genre.init(storeID:mediaType:sources:rationale:)(v5, v22, _swiftEmptyArrayStorage, v27);
    ScoredGenre.init(genre:score:)(v26);
    v29 = sub_10004CFD4((uint64_t *)&unk_1009DD5F8);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v9 = (_QWORD *)swift_allocObject(v29, v31 + *(_QWORD *)(v25 + 72), v30 | 7);
    *((_OWORD *)v9 + 1) = xmmword_10070CCA0;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))((char *)v9 + v31, v38, v39);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_13;
  }
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
}

uint64_t sub_10058D448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10058D4D0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_10058D5EC((uint64_t)&v6, v3);
  return swift_continuation_resume(v2);
}

uint64_t sub_10058D518(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EC644);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return sub_10058CE18(a1);
}

unint64_t sub_10058D568()
{
  unint64_t result;

  result = qword_1009EC648;
  if (!qword_1009EC648)
  {
    result = swift_getWitnessTable(&unk_10072E690, &type metadata for ODPGenreRecommendationService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EC648);
  }
  return result;
}

uint64_t sub_10058D5AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E02F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10058D5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EC650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ODPGenreRecommendationService.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10058D680 + 4 * byte_10072E5B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10058D6B4 + 4 * asc_10072E5B0[v4]))();
}

uint64_t sub_10058D6B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058D6BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058D6C4);
  return result;
}

uint64_t sub_10058D6D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058D6D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10058D6DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058D6E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODPGenreRecommendationService.Errors()
{
  return &type metadata for ODPGenreRecommendationService.Errors;
}

unint64_t sub_10058D704()
{
  unint64_t result;

  result = qword_1009EC658;
  if (!qword_1009EC658)
  {
    result = swift_getWitnessTable(&unk_10072E668, &type metadata for ODPGenreRecommendationService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EC658);
  }
  return result;
}

id sub_10058D748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSString v13;
  Class isa;
  id v15;
  _BYTE v18[72];

  v0 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  UIListContentConfiguration.text.getter(v4);
  if (v5)
    v6 = v5;
  else
    v6 = 0xE000000000000000;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
  inited = swift_initStackObject(v7, v18);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v9 = UIListContentConfiguration.textProperties.getter(NSForegroundColorAttributeName);
  v10 = UIListContentConfiguration.TextProperties.color.getter(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)(inited + 64) = sub_10058DE94();
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_1001DA774(inited);
  v12 = objc_allocWithZone((Class)NSAttributedString);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  type metadata accessor for Key(0);
  sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v12, "initWithString:attributes:", v13, isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  return v15;
}

uint64_t sub_10058D8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  void *v22;
  void *v23;
  id v24;
  void (*v25)(_QWORD *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD v35[3];
  uint64_t v36;
  void *v37;

  v33 = a2;
  v32 = type metadata accessor for UIListContentConfiguration(0);
  v4 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SidebarTextFieldContentConfiguration(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009EC660);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellConfigurationState(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418(a1, (uint64_t)v35);
  v18 = sub_10004CFD4(&qword_1009DF180);
  v19 = swift_dynamicCast(v13, v35, v18, v14, 6);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (!v19)
  {
    v20(v13, 1, 1, v14);
    goto LABEL_9;
  }
  v20(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_9:
    sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009EC660);
    return sub_1004AC764(v2, v33);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  sub_1004AC764(v2, (uint64_t)v9);
  v36 = v14;
  v37 = &protocol witness table for UICellConfigurationState;
  v21 = sub_1000257F8(v35);
  (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v21, v17, v14);
  UIListContentConfiguration.updated(for:)(v35);
  _s5Books15CurrentPageViewVwxx_0(v35);
  v22 = (void *)objc_opt_self(UIFont);
  v23 = (void *)UICellConfigurationState.traitCollection.getter(v22);
  v24 = objc_msgSend(v22, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleBody, v23);

  v25 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v35);
  UIListContentConfiguration.TextProperties.font.setter(v24);
  v25(v35, 0);
  v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v4 + 24))(v9, v6, v32);
  if (qword_1009CEA58 != -1)
    swift_once(&qword_1009CEA58, sub_100607858);
  dispatch thunk of UIConfigurationState.subscript.getter(v35, qword_100A1EF28, v14, &protocol witness table for UICellConfigurationState);
  if (!v36)
  {
    v27 = sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009EC670);
    goto LABEL_11;
  }
  v27 = swift_dynamicCast(&v34, v35, &type metadata for AnyHashable, &type metadata for Bool, 6);
  if ((v27 & 1) == 0)
  {
LABEL_11:
    v28 = 0;
    goto LABEL_12;
  }
  v28 = v34;
LABEL_12:
  v9[*(int *)(v7 + 24)] = v28;
  v30 = (void *)UICellConfigurationState.traitCollection.getter(v27);
  v31 = objc_msgSend(v30, "userInterfaceStyle");

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)&v9[*(int *)(v7 + 28)] = v31;
  sub_1004AC764((uint64_t)v9, v33);
  return sub_1004AC6E0((uint64_t)v9);
}

uint64_t type metadata accessor for SidebarTextFieldContentConfiguration(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EC6E8;
  if (!qword_1009EC6E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SidebarTextFieldContentConfiguration);
  return result;
}

char *sub_10058DCC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v7;

  __chkstk_darwin(a1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AC764(v1, (uint64_t)v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for SidebarTextFieldContentView());
  v5 = sub_1004AB4C8((uint64_t)v3);
  sub_100008DB0(&qword_1009EC730, (uint64_t (*)(uint64_t))type metadata accessor for SidebarTextFieldContentView, (uint64_t)&unk_100727FC4);
  return v5;
}

Swift::Int sub_10058DD64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UIListContentConfiguration(0);
  v1 = sub_100008DB0(&qword_1009EC738, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_10058DDD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UIListContentConfiguration(0);
  v3 = sub_100008DB0(&qword_1009EC738, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_10058DE28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UIListContentConfiguration(0);
  v2 = sub_100008DB0(&qword_1009EC738, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

unint64_t sub_10058DE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EC680;
  if (!qword_1009EC680)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009EC680);
  }
  return result;
}

_QWORD *sub_10058DED0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for UIListContentConfiguration(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_unknownObjectWeakCopyInit((char *)a1 + a3[5], (char *)a2 + a3[5]);
    v8 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10058DF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_unknownObjectWeakDestroy(a1 + *(int *)(a2 + 20));
}

uint64_t sub_10058DFB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  swift_unknownObjectWeakCopyInit(a1 + a3[5], a2 + a3[5]);
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10058E028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  swift_unknownObjectWeakCopyAssign(a1 + a3[5], a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10058E0A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  swift_unknownObjectWeakTakeInit(a1 + a3[5], a2 + a3[5]);
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10058E114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  swift_unknownObjectWeakTakeAssign(a1 + a3[5], a2 + a3[5]);
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10058E188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058E194);
}

uint64_t sub_10058E194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_10058E220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10058E22C);
}

uint64_t sub_10058E22C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_10058E2A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UIListContentConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10072E710;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10058E32C()
{
  return sub_100008DB0(&qword_1009EC728, type metadata accessor for SidebarTextFieldContentConfiguration, (uint64_t)&unk_10072E730);
}

id UIColor.mix(withColor:factor:)(void *a1, double a2)
{
  void *v2;
  double v4;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  if (a2 < 0.0)
    a2 = 0.0;
  v4 = fmin(a2, 1.0);
  v12 = 0.0;
  v13 = 0.0;
  v10 = 1.0;
  v11 = 0.0;
  v8 = 0.0;
  v9 = 0.0;
  v6 = 1.0;
  v7 = 0.0;
  objc_msgSend(v2, "getRed:green:blue:alpha:", &v13, &v12, &v11, &v10);
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v9, &v8, &v7, &v6);
  return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", (1.0 - v4) * v13 + v4 * v9, (1.0 - v4) * v12 + v4 * v8, (1.0 - v4) * v11 + v4 * v7, (1.0 - v4) * v10 + v4 * v6);
}

id static UIColor.toolbarTitleColor.getter()
{
  NSString v0;
  void *v1;
  id v2;

  v0 = String._bridgeToObjectiveC()();
  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "colorNamed:", v0);

  if (v2)
    return v2;
  else
    return objc_msgSend(v1, "labelColor");
}

uint64_t WidgetBookInfo.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

Swift::Void (__swiftcall *WidgetBookInfo.title.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

uint64_t WidgetBookInfo.progress.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WidgetBookInfo.progress.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

Swift::Void (__swiftcall *WidgetBookInfo.progress.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

uint64_t WidgetBookInfo.assetID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t WidgetBookInfo.assetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

Swift::Void (__swiftcall *WidgetBookInfo.assetID.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

void *WidgetBookInfo.cloudAssetType.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

void WidgetBookInfo.cloudAssetType.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
}

Swift::Void (__swiftcall *WidgetBookInfo.cloudAssetType.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

id WidgetBookInfo.assetType.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

void WidgetBookInfo.assetType.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

Swift::Void (__swiftcall *WidgetBookInfo.assetType.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

uint64_t WidgetBookInfo.coverURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t WidgetBookInfo.coverURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

Swift::Void (__swiftcall *WidgetBookInfo.coverURL.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

uint64_t WidgetBookInfo.isRTL.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

Swift::Void (__swiftcall *WidgetBookInfo.isRTL.modify())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

uint64_t destroy for WidgetBookInfo(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v8 = v5;
  v9 = v6;
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 48);
  v10 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = v10;

  v12 = *(void **)(a2 + 56);
  v13 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  v14 = v12;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for WidgetBookInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetBookInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetBookInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBookInfo()
{
  return &type metadata for WidgetBookInfo;
}

_QWORD *sub_10058EA14(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for BookContentHeaderStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[12];
    *(_WORD *)((char *)v4 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  }
  return v4;
}

uint64_t sub_10058EB08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for BookContentHeaderStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_WORD *sub_10058EB40(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for BookContentHeaderStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  return a1;
}

_BYTE *sub_10058EC08(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for BookContentHeaderStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  v10 = a3[11];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *v11 = *v12;
  v11[1] = v12[1];
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

_WORD *sub_10058ECF8(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for BookContentHeaderStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  return a1;
}

_BYTE *sub_10058EDC0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for BookContentHeaderStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v11] = a2[v11];
  v12 = a3[11];
  v13 = a3[12];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *v14 = *v15;
  v14[1] = v15[1];
  a1[v13] = a2[v13];
  v16 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v16] = a2[v16];
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

uint64_t sub_10058EEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058EEAC);
}

uint64_t sub_10058EEAC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for BookContentHeaderStyle(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t sub_10058EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10058EF34);
}

_BYTE *sub_10058EF34(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for BookContentHeaderStyle(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for BookReaderChromeState(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EC798;
  if (!qword_1009EC798)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderChromeState);
  return result;
}

uint64_t sub_10058EFE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_10072E818;
  v4[1] = &unk_10072E818;
  result = type metadata accessor for BookContentHeaderStyle(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10072E830;
    v4[4] = &unk_10072E818;
    v4[5] = &unk_10072E818;
    v4[6] = &unk_10072E818;
    v4[7] = &unk_10072E848;
    v4[8] = &unk_10072E818;
    v4[9] = &unk_10072E818;
    v4[10] = &unk_10072E818;
    v4[11] = &unk_10072E818;
    swift_initStructMetadata(a1, 256, 12, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10058F078(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int *v4;
  char v5;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  unsigned __int8 *v10;

  if (*a1 != *a2
    || a1[1] != a2[1]
    || (v4 = (int *)type metadata accessor for BookReaderChromeState(0),
        (static BookContentHeaderStyle.== infix(_:_:)(&a1[v4[6]], &a2[v4[6]]) & 1) == 0)
    || a1[v4[7]] != a2[v4[7]]
    || a1[v4[8]] != a2[v4[8]]
    || a1[v4[9]] != a2[v4[9]]
    || a1[v4[10]] != a2[v4[10]])
  {
LABEL_8:
    v5 = 0;
    return v5 & 1;
  }
  v5 = 0;
  v7 = v4[11];
  v8 = &a1[v7];
  v9 = a1[v7];
  v10 = &a2[v7];
  if (v9 == *v10 && ((v8[1] ^ v10[1]) & 1) == 0)
  {
    if (a1[v4[12]] == a2[v4[12]] && a1[v4[13]] == a2[v4[13]] && a1[v4[14]] == a2[v4[14]])
    {
      v5 = a1[v4[15]] ^ a2[v4[15]] ^ 1;
      return v5 & 1;
    }
    goto LABEL_8;
  }
  return v5 & 1;
}

uint64_t storeEnumTagSinglePayload for BookReaderChromeState.MenuButton(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10058F210 + 4 * byte_10072E7E5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10058F244 + 4 * asc_10072E7E0[v4]))();
}

uint64_t sub_10058F244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10058F24C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10058F254);
  return result;
}

uint64_t sub_10058F260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10058F268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10058F26C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10058F274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChromeState.MenuButton()
{
  return &type metadata for BookReaderChromeState.MenuButton;
}

uint64_t storeEnumTagSinglePayload for BookReaderChromeState.InfoBarMessageState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10058F2DC + 4 * byte_10072E7EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10058F310 + 4 * byte_10072E7EA[v4]))();
}

uint64_t sub_10058F310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058F318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10058F320);
  return result;
}

uint64_t sub_10058F32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10058F334);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10058F338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10058F340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChromeState.InfoBarMessageState()
{
  return &type metadata for BookReaderChromeState.InfoBarMessageState;
}

unint64_t sub_10058F360()
{
  unint64_t result;

  result = qword_1009EC7F8;
  if (!qword_1009EC7F8)
  {
    result = swift_getWitnessTable(&unk_10072E8F4, &type metadata for BookReaderChromeState.InfoBarMessageState);
    atomic_store(result, (unint64_t *)&qword_1009EC7F8);
  }
  return result;
}

uint64_t ReadingActivityService.willMarkAsset(_:finished:finishedDate:)(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + OBJC_IVAR___BKReadingActivityService_achievementsController);
  if (v5)
  {
    v9 = result;
    swift_retain(v5);
    dispatch thunk of ReadingAchievementsController.willMarkAsset(_:finished:finishedDate:)(v9, a2, a3 & 1, a4);
    return swift_release(v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id ReadingActivityService.dailyGoal.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_dailyGoal);
}

id ReadingActivityService.booksFinishedGoal.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_booksFinishedGoal);
}

id ReadingActivityService.finishedAssets.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssets);
}

id ReadingActivityService.finishedAssetsData.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetsData);
}

id ReadingActivityService.finishedAssetYear.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetYear);
}

id ReadingActivityService.finishedAssetAllTimeCount.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetAllTimeCount);
}

id ReadingActivityService.finishedAssetsAfterCurrentYearCount.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetsAfterCurrentYearCount);
}

id ReadingActivityService.finishedAssetsPriorToCurrentYearCount.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetsPriorToCurrentYearCount);
}

id ReadingActivityService.isDailyGoalCompleted.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_isDailyGoalCompleted);
}

id ReadingActivityService.readingTimeToday.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_readingTimeToday);
}

id ReadingActivityService.readingIndicatorTimeToday.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_readingIndicatorTimeToday);
}

id ReadingActivityService.readingHistory.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_readingHistory);
}

id ReadingActivityService.didSeeWelcomeExperience.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience);
}

id ReadingActivityService.allTimeRecordStreakData.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_allTimeRecordStreakData);
}

uint64_t ReadingActivityService.readingHistoryPublisher.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService_readingHistoryPublisher));
}

id ReadingActivityService.booksPerYear.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_booksPerYear);
}

id ReadingActivityService.timeReadPerMonth.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_timeReadPerMonth);
}

id ReadingActivityService.finishedAssetCountByYear.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BKReadingActivityService_finishedAssetCountByYear);
}

uint64_t ReadingActivityService.setupState.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState));
}

uint64_t ReadingActivityService.currentActiveAchievementSheetKind.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__currentActiveAchievementSheetKind);
}

uint64_t ReadingActivityService.enableCloudSync.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BKReadingActivityService_enableCloudSync);
  swift_beginAccess(v0 + OBJC_IVAR___BKReadingActivityService_enableCloudSync, v3, 0, 0);
  return *v1;
}

void ReadingActivityService.enableCloudSync.setter(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;
  void (*v6)(_QWORD, __n128);
  uint64_t v7;
  __n128 v8;
  _BYTE v9[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR___BKReadingActivityService_enableCloudSync);
  swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_enableCloudSync, v9, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
  {
    v6 = *(void (**)(_QWORD, __n128))(v1 + OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler);
    if (v6)
    {
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler + 8);
      v8 = swift_retain(v7);
      v6(a1 & 1, v8);
      sub_10002AD00((uint64_t)v6, v7);
    }
  }
}

void (*ReadingActivityService.enableCloudSync.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BKReadingActivityService_enableCloudSync;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_10058F758;
}

void sub_10058F758(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t, __n128);
  uint64_t v8;
  __n128 v9;

  v1 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = v1[3] + OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler;
    v7 = *(void (**)(uint64_t, __n128))v6;
    if (*(_QWORD *)v6)
    {
      v8 = *(_QWORD *)(v6 + 8);
      v9 = swift_retain(v8);
      v7(v4, v9);
      sub_10002AD00((uint64_t)v7, v8);
    }
  }
  free(v1);
}

void *ReadingActivityService.includePDFsDefaultsKey.unsafeMutableAddressor()
{
  return &static ReadingActivityService.includePDFsDefaultsKey;
}

unint64_t static ReadingActivityService.includePDFsDefaultsKey.getter()
{
  return 0xD000000000000028;
}

void ReadingActivityService.__allocating_init(serviceCenter:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  ReadingActivityService.init(serviceCenter:)(a1);
}

uint64_t ReadingActivityService.setupService(libraryManager:goalsModule:booksFinishedModule:historyModule:achievementsController:sessionEventProvider:cloudSyncStateHandler:notificationSuppressingEventHandler:analyticsSessionHosting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, void (*a12)(_QWORD, __n128), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char *v16;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v22 = a11[3];
  v21 = a11[4];
  v23 = sub_10003F198(a11, v22);
  return sub_100594D28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)v23, a12, a13, a14, a15, a16, v16, v22, v21);
}

uint64_t sub_10058F8EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;

  sub_100010960(a1, a3);
  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

Swift::Void __swiftcall ReadingActivityService.clearData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR___BKReadingActivityService_historyModule;
  swift_beginAccess(v2, v12, 0, 0);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_10002E418(v2 + 40, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    sub_10003F198(v9, v10);
    dispatch thunk of ReadingHistoryEventProcessor.clearData()(v3, v4);
    _s5Books15CurrentPageViewVwxx_0(v9);
    v5 = v1 + OBJC_IVAR___BKReadingActivityService_goalsModule;
    swift_beginAccess(v5, v8, 0, 0);
    if (*(_QWORD *)(v5 + 24))
    {
      sub_10002E418(v5 + 40, (uint64_t)v9);
      v6 = v10;
      v7 = v11;
      sub_10003F198(v9, v10);
      dispatch thunk of ReadingGoalsEventProcessor.clearData()(v6, v7);
      _s5Books15CurrentPageViewVwxx_0(v9);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10058FA44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009ECA0C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1001FC2C4;
  return sub_100595994();
}

void ReadingActivityService.fetchReadingGoalsCoachingEnabled(completion:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v5 = String._bridgeToObjectiveC()();
  v6 = swift_allocObject(&unk_1009119A8, 49, 7);
  *(_QWORD *)(v6 + 16) = 0xD00000000000002CLL;
  *(_QWORD *)(v6 + 24) = 0x80000001007D4100;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  *(_BYTE *)(v6 + 48) = 0;
  v9[4] = sub_100595874;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100010E84;
  v9[3] = &unk_1009119C0;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(a2);
  objc_msgSend(v4, "fetchMetadataBoolForKey:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

}

void sub_10058FB98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = *(void **)(v0 + OBJC_IVAR___BKReadingActivityService_engagementManager);
  if (v1)
  {
    v7 = v1;
    v2 = Achievement.key.getter();
    if ((static Achievement.Key.== infix(_:_:)(v2, 0) & 1) != 0)
    {
      v3 = *(id *)&v7[OBJC_IVAR___BKEngagementManager_eventController];
      v4 = 0x80000001007D4F10;
      v5 = 0xD000000000000010;
    }
    else
    {
      v6 = Achievement.key.getter();
      if ((static Achievement.Key.== infix(_:_:)(v6, 1) & 1) == 0)
      {
LABEL_8:

        return;
      }
      v3 = *(id *)&v7[OBJC_IVAR___BKEngagementManager_eventController];
      v5 = 0xD000000000000011;
      v4 = 0x80000001007D4EF0;
    }
    dispatch thunk of EngagementEventController.submitEvent(_:_:)(v5, v4, 0);

    goto LABEL_8;
  }
}

void ReadingActivityService.allTimeRecordStreak.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[3];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistory.State(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004CFD4(&qword_1009EC930);
  __chkstk_darwin(v6);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState);
  swift_retain(v9);
  dispatch thunk of ObservableContainer.value.getter(v26, v10);
  swift_release(v9);
  if (LOBYTE(v26[0]) == 2)
  {
    v11 = (_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_historyModule);
    swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_historyModule, v26, 0, 0);
    v12 = v11[3];
    if (v12)
    {
      v13 = v11[4];
      v14 = sub_10003F198(v11, v11[3]);
      v15 = *(_QWORD *)(v12 - 8);
      v16 = __chkstk_darwin(v14);
      v18 = (char *)&v26[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v15 + 16))(v18, v16);
      v19 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v12, v13);
      v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v12);
      dispatch thunk of ObservableContainer.value.getter(v5, v20);
      swift_release(v19);
      ReadingHistory.State.longestStreak.getter(v21);
      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
      v22 = type metadata accessor for ReadingHistory.Streak(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v22);
      if ((_DWORD)v24 == 1)
      {
        sub_100010960((uint64_t)v8, &qword_1009EC930);
      }
      else
      {
        ReadingHistory.Streak.length.getter(v24);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void ReadingActivityService.todayIsStreakDay.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistory.Day(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingHistory.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_QWORD *)((char *)&v25[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState);
  swift_retain(v10);
  dispatch thunk of ObservableContainer.value.getter(v25, v11);
  swift_release(v10);
  if (LOBYTE(v25[0]) == 2)
  {
    v12 = (_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_historyModule);
    swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_historyModule, v25, 0, 0);
    v13 = v12[3];
    if (v13)
    {
      v14 = v12[4];
      v15 = sub_10003F198(v12, v12[3]);
      v24 = (uint64_t)&v24;
      v16 = *(_QWORD *)(v13 - 8);
      v17 = __chkstk_darwin(v15);
      v19 = (char *)&v25[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v16 + 16))(v19, v17);
      v20 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v13, v14);
      v21 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v13);
      dispatch thunk of ObservableContainer.value.getter(v9, v21);
      swift_release(v20);
      ReadingHistory.State.today.getter(v22);
      v23 = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
      ReadingHistory.Day.isStreakDay.getter(v23);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t static ReadingActivityService.readingGoalsUserDefaultsKey()()
{
  return 0xD00000000000001DLL;
}

void ReadingActivityService.readingGoalsEnabled.setter()
{
  id v0;
  id v1;
  Class isa;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v1 = objc_msgSend(v0, "userDefaults");

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

}

void (*ReadingActivityService.readingGoalsEnabled.modify(_BYTE *a1))()
{
  *a1 = _s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0() & 1;
  return sub_10059030C;
}

void sub_10059030C()
{
  id v0;
  Class isa;
  NSString v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v3 = objc_msgSend(v0, "userDefaults");

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setValue:forKey:", isa, v2);

}

unint64_t static ReadingActivityService.readingGoalsNotificationUserDefaultsKey()()
{
  return 0xD000000000000029;
}

unint64_t static ReadingActivityService.readingGoalsCoachingEnabledUserDefaultsKey()()
{
  return 0xD00000000000002CLL;
}

void (*ReadingActivityService.fetchReadingGoalsNotificationEnabled.getter())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_1009119F8, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_100596830;
}

void sub_10059046C(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v2 = swift_allocObject(&unk_1009120E8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v4 = a1;
  v5 = String._bridgeToObjectiveC()();
  v6 = swift_allocObject(&unk_100912110, 49, 7);
  *(_QWORD *)(v6 + 16) = 0xD000000000000029;
  *(_QWORD *)(v6 + 24) = 0x80000001007D4150;
  *(_QWORD *)(v6 + 32) = sub_100597834;
  *(_QWORD *)(v6 + 40) = v2;
  *(_BYTE *)(v6 + 48) = 1;
  v9[4] = sub_100595874;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100010E84;
  v9[3] = &unk_100912128;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(v2);
  objc_msgSend(v3, "fetchMetadataBoolForKey:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_release(v2);

}

void ReadingActivityService.fetchReadingGoalsNotificationEnabled(completion:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v5 = String._bridgeToObjectiveC()();
  v6 = swift_allocObject(&unk_100911A20, 49, 7);
  *(_QWORD *)(v6 + 16) = 0xD000000000000029;
  *(_QWORD *)(v6 + 24) = 0x80000001007D4150;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  *(_BYTE *)(v6 + 48) = 1;
  v9[4] = sub_100595874;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100010E84;
  v9[3] = &unk_100911A38;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(a2);
  objc_msgSend(v4, "fetchMetadataBoolForKey:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

}

void ReadingActivityService.fetchValue(_:defaultValue:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  NSString v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v10 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v11 = String._bridgeToObjectiveC()();
  v12 = swift_allocObject(&unk_100911A70, 49, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a4;
  *(_QWORD *)(v12 + 40) = a5;
  *(_BYTE *)(v12 + 48) = a3;
  v15[4] = sub_100595874;
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100010E84;
  v15[3] = &unk_100911A88;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_bridgeObjectRetain(a2);
  swift_retain(a5);
  objc_msgSend(v10, "fetchMetadataBoolForKey:completion:", v11, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

}

void (*ReadingActivityService.updateReadingGoalsNotificationEnabled.getter())(char a1, void *a2)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100911AC0, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_100596840;
}

void sub_100590844(char a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v4 = swift_allocObject(&unk_100912070, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v6 = a2;
  v7 = String._bridgeToObjectiveC()();
  v8 = swift_allocObject(&unk_100912098, 49, 7);
  *(_QWORD *)(v8 + 16) = sub_1005977D0;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = 0xD000000000000029;
  *(_QWORD *)(v8 + 40) = 0x80000001007D4150;
  *(_BYTE *)(v8 + 48) = a1;
  v11[4] = sub_10059684C;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10000B65C;
  v11[3] = &unk_1009120B0;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain(v4);
  objc_msgSend(v5, "updateMetadataBool:forKey:completion:", a1 & 1, v7, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  swift_release(v4);

}

void ReadingActivityService.updateReadingGoalsNotificationEnabled(_:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  NSString v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v6 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v7 = String._bridgeToObjectiveC()();
  v8 = swift_allocObject(&unk_100911AE8, 49, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = 0xD000000000000029;
  *(_QWORD *)(v8 + 40) = 0x80000001007D4150;
  *(_BYTE *)(v8 + 48) = a1;
  v11[4] = sub_10059684C;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10000B65C;
  v11[3] = &unk_100911B00;
  v9 = _Block_copy(v11);
  v10 = v12;
  sub_10002ACF0(a2, a3);
  objc_msgSend(v6, "updateMetadataBool:forKey:completion:", a1 & 1, v7, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

}

void (*ReadingActivityService.fetchReadingGoalsCoachingEnabled.getter())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100911B38, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_100596850;
}

void sub_100590B20(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v2 = swift_allocObject(&unk_100911FF8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v4 = a1;
  v5 = String._bridgeToObjectiveC()();
  v6 = swift_allocObject(&unk_100912020, 49, 7);
  *(_QWORD *)(v6 + 16) = 0xD00000000000002CLL;
  *(_QWORD *)(v6 + 24) = 0x80000001007D4100;
  *(_QWORD *)(v6 + 32) = sub_1005977B0;
  *(_QWORD *)(v6 + 40) = v2;
  *(_BYTE *)(v6 + 48) = 0;
  v9[4] = sub_100595874;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100010E84;
  v9[3] = &unk_100912038;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(v2);
  objc_msgSend(v3, "fetchMetadataBoolForKey:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_release(v2);

}

id sub_100590C80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;

  v10 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v10 + 16) = a1;
  v15[4] = a4;
  v16 = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = a5;
  v15[3] = a6;
  v11 = _Block_copy(v15);
  v12 = v16;
  v13 = a1;
  swift_release(v12);
  return v11;
}

double (*ReadingActivityService.updateReadingGoalsCoachingEnabled.getter())(char a1, void *a2)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100911B60, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_100596858;
}

double sub_100590D5C(char a1, void *a2)
{
  uint64_t v4;
  id v5;
  double result;

  v4 = swift_allocObject(&unk_100911FD0, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = a2;
  ReadingActivityService.updateReadingGoalsCoachingEnabled(_:completion:)(a1, (uint64_t)sub_100597794, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_100590DC0(char a1, JSValue a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::Int v10;
  double result;
  Swift::OpaquePointer_optional v12;

  v6 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v7 = sub_10004CFD4(&qword_1009D4B80);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v8 + 56) = &type metadata for Bool;
  *(_BYTE *)(v8 + 32) = a1;
  v9._countAndFlagsBits = 0x80000001007D5010;
  v12.value._rawValue = (void *)v8;
  v12.is_nil = 110;
  v9._object = a3;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(a2, v12, v9, v10);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

void ReadingActivityService.updateReadingGoalsCoachingEnabled(_:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v6 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = swift_allocObject(&unk_100911BB0, 48, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  v8 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  swift_retain(v6);
  sub_10002ACF0(a2, a3);
  v9 = String._bridgeToObjectiveC()();
  v10 = swift_allocObject(&unk_100911BD8, 49, 7);
  *(_QWORD *)(v10 + 16) = sub_1005968B8;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = 0xD00000000000002CLL;
  *(_QWORD *)(v10 + 40) = 0x80000001007D4100;
  *(_BYTE *)(v10 + 48) = a1;
  v13[4] = sub_10059684C;
  v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10000B65C;
  v13[3] = &unk_100911BF0;
  v11 = _Block_copy(v13);
  v12 = v14;
  swift_retain(v7);
  objc_msgSend(v8, "updateMetadataBool:forKey:completion:", a1 & 1, v9, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  swift_release(v6);
  swift_release(v7);

}

void sub_10059101C(char a1, uint64_t a2, char a3, void (*a4)(_QWORD, __n128), uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE *v12;
  __n128 v13;
  _BYTE v14[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    if ((a1 & 1) != 0)
    {
      v12 = *(_BYTE **)(Strong + OBJC_IVAR___BKReadingActivityService_readingActivityDonor);
      if (!v12)
      {
        __break(1u);
        return;
      }
      v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApproved] = a3 & 1;
      objc_msgSend(v12, "propertyDidChange:propertyConfiguration:", v12, *(_QWORD *)&v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApprovedConfig]);
    }
    if (a4)
    {
      v13 = swift_retain(a5);
      a4(a1 & 1, v13);
      sub_10002AD00((uint64_t)a4, a5);
    }

  }
}

uint64_t sub_1005910EC(uint64_t result, void (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v8;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  unsigned int v23;
  _QWORD v24[3];
  _BYTE v25[8];

  if (a2)
  {
    v8 = result;
    if (result)
    {
      sub_10002ACF0((uint64_t)a2, a3);
      v12 = swift_errorRetain(v8);
      v23 = static os_log_type_t.error.getter(v12);
      sub_100009B88();
      v13 = (void *)static OS_os_log.readingActivity.getter();
      v14 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v15 = swift_allocObject(v14, 152, 7);
      *(_OWORD *)(v15 + 16) = xmmword_100712B60;
      *(_QWORD *)(v15 + 56) = &type metadata for String;
      v16 = sub_10002BE50();
      *(_QWORD *)(v15 + 64) = v16;
      *(_QWORD *)(v15 + 32) = a4;
      *(_QWORD *)(v15 + 40) = a5;
      *(_QWORD *)(v15 + 96) = &type metadata for Bool;
      *(_QWORD *)(v15 + 104) = &protocol witness table for Bool;
      *(_BYTE *)(v15 + 72) = a6 & 1;
      swift_getErrorValue(v8, v25, v24);
      v17 = v24[1];
      v18 = v24[2];
      swift_bridgeObjectRetain(a5);
      v19 = Error.localizedDescription.getter(v17, v18);
      *(_QWORD *)(v15 + 136) = &type metadata for String;
      *(_QWORD *)(v15 + 144) = v16;
      *(_QWORD *)(v15 + 112) = v19;
      *(_QWORD *)(v15 + 120) = v20;
      os_log(_:dso:log:_:_:)(v23, &_mh_execute_header, v13, "Unable to update %{public}@ to %{public}@ due to %{public}@", 59, 2, v15);

      v21 = swift_bridgeObjectRelease(v15);
      a2(0, v21);
      sub_10002AD00((uint64_t)a2, a3);
      return swift_errorRelease(v8);
    }
    else
    {
      v22 = swift_retain(a3);
      a2(1, v22);
      return sub_10002AD00((uint64_t)a2, a3);
    }
  }
  return result;
}

void sub_1005912DC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  _QWORD aBlock[3];
  void *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  _OWORD v13[2];

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience), "getValue"));
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_100025B3C((uint64_t)v13, (uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
  if (v9)
  {
    if ((swift_dynamicCast(&v12, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
      && (v12 & 1) == 0)
    {
      v3 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
      v4 = off_1009EC808;
      swift_bridgeObjectRetain(off_1009EC808);
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v4);
      v6 = swift_allocObject(&unk_100911B88, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v10 = sub_1000696FC;
      v11 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100010E84;
      v9 = &unk_100911DB8;
      v7 = _Block_copy(aBlock);
      objc_msgSend(v3, "fetchMetadataBoolForKey:completion:", v5, v7, swift_release(v11).n128_f64[0]);
      _Block_release(v7);

    }
  }
  else
  {
    sub_100010960((uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
  }
}

uint64_t ReadingActivityService.state(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3[49] = a2;
  v3[50] = v2;
  v3[48] = a1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009EC940);
  v3[51] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[52] = swift_task_alloc(v5);
  v3[53] = swift_task_alloc(v5);
  v6 = type metadata accessor for Calendar.Component(0);
  v3[54] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[55] = v7;
  v3[56] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  v3[57] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[58] = v9;
  v3[59] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[60] = swift_task_alloc(v10);
  v3[61] = swift_task_alloc(v10);
  v3[62] = swift_task_alloc(v10);
  v11 = type metadata accessor for Date(0);
  v3[63] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[64] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[65] = swift_task_alloc(v13);
  v3[66] = swift_task_alloc(v13);
  v3[67] = swift_task_alloc(v13);
  return swift_task_switch(sub_10059165C, 0, 0);
}

void sub_10059165C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[50] + OBJC_IVAR___BKReadingActivityService_booksFinishedModule;
  swift_beginAccess(v1, v0 + 45, 0, 0);
  if (*(_QWORD *)(v1 + 24))
  {
    sub_10002E418(v1 + 80, (uint64_t)(v0 + 7));
    v2 = v0[10];
    v3 = v0[11];
    sub_10003F198(v0 + 7, v2);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of BooksFinishedDataSource.fetchFinishedAssets(in:)[1]);
    v0[68] = v4;
    *v4 = v0;
    v4[1] = sub_100591710;
    dispatch thunk of BooksFinishedDataSource.fetchFinishedAssets(in:)(v0[49], v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100591710(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 544);
  *(_QWORD *)(v3 + 552) = a1;
  *(_QWORD *)(v3 + 560) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100591F74;
  else
    v5 = sub_100591780;
  return swift_task_switch(v5, 0, 0);
}

void sub_100591780()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, _QWORD, uint64_t);
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  _QWORD *v101;

  v1 = *(_QWORD *)(v0 + 560);
  v101 = *(_QWORD **)(v0 + 552);
  swift_bridgeObjectRetain(v101);
  sub_10059353C(&v101);
  if (v1)
  {
    swift_release(v101);
    return;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 552));
  v2 = v101;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 56));
  v3 = v2[2];
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v5 = (uint64_t)(v2 + 4);
    v98 = v2;
    swift_retain(v2);
    v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002E418(v5, v0 + 96);
      static ContentInfoUtilities.assetInfo(libraryAssetInfo:)(v0 + 96);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 96));
      if (*(_QWORD *)(v0 + 200))
      {
        sub_100022840((__int128 *)(v0 + 176), v0 + 136);
        sub_100022840((__int128 *)(v0 + 136), v0 + 216);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_1005B0B24(0, v6[2] + 1, 1, v6);
        v8 = v6[2];
        v7 = v6[3];
        if (v8 >= v7 >> 1)
          v6 = sub_1005B0B24((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
        v6[2] = v8 + 1;
        sub_100022840((__int128 *)(v0 + 216), (uint64_t)&v6[5 * v8 + 4]);
      }
      else
      {
        sub_100010960(v0 + 176, &qword_1009EC950);
      }
      v5 += 40;
      --v3;
    }
    while (v3);
    swift_release_n(v98, 2);
    v4 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_release(v2);
    v6 = _swiftEmptyArrayStorage;
  }
  v101 = _swiftEmptyArrayStorage;
  v9 = v6[2];
  swift_bridgeObjectRetain(v6);
  if (v9)
  {
    v10 = 0;
    v11 = (uint64_t)(v6 + 4);
    while (v10 < v6[2])
    {
      v12 = v4;
      sub_10002E418(v11, v0 + 16);
      v13 = *(_QWORD *)(v0 + 40);
      v14 = *(_QWORD *)(v0 + 48);
      sub_10003F198((_QWORD *)(v0 + 16), v13);
      if ((AssetInfo.isSideloaded.getter(v13, v14) & 1) != 0)
      {
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
        v4 = v12;
      }
      else
      {
        sub_100022840((__int128 *)(v0 + 16), v0 + 256);
        v15 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
        {
          sub_100366C8C(0, v12[2] + 1, 1);
          v15 = v101;
        }
        v17 = v15[2];
        v16 = v15[3];
        if (v17 >= v16 >> 1)
        {
          sub_100366C8C(v16 > 1, v17 + 1, 1);
          v15 = v101;
        }
        v15[2] = v17 + 1;
        sub_100022840((__int128 *)(v0 + 256), (uint64_t)&v15[5 * v17 + 4]);
        v4 = v15;
      }
      ++v10;
      v11 += 40;
      if (v9 == v10)
        goto LABEL_26;
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_26:
  v19 = *(_QWORD *)(v0 + 504);
  v18 = *(_QWORD *)(v0 + 512);
  v20 = *(_QWORD *)(v0 + 496);
  v21 = *(_QWORD *)(v0 + 472);
  v22 = *(_QWORD *)(v0 + 392);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v6).n128_u64[0];
  static Calendar.gregorian.getter(v23);
  Date.init(year:month:day:hour:minute:calendar:)(v22, 1, 1, 0, 0, v21);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v24(v20, 1, v19) == 1)
  {
    v25 = *(_QWORD *)(v0 + 496);
    swift_bridgeObjectRelease(v6);
    swift_release(v4);
    sub_100010960(v25, &qword_1009D7440);
    v26 = sub_1005968CC();
    v27 = swift_allocError(&type metadata for ReadingActivityService.YearlyHistoryProviderError, v26, 0, 0);
    *v28 = 0;
    swift_willThrow(v27);
LABEL_33:
    v57 = *(_QWORD *)(v0 + 528);
    v58 = *(_QWORD *)(v0 + 520);
    v60 = *(_QWORD *)(v0 + 488);
    v59 = *(_QWORD *)(v0 + 496);
    v62 = *(_QWORD *)(v0 + 472);
    v61 = *(_QWORD *)(v0 + 480);
    v63 = *(_QWORD *)(v0 + 448);
    v64 = *(_QWORD *)(v0 + 416);
    v65 = *(_QWORD *)(v0 + 424);
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v64);
    v66 = *(void (**)(void))(v0 + 8);
LABEL_36:
    v66();
    return;
  }
  v99 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v24;
  v29 = *(_QWORD *)(v0 + 528);
  v31 = *(_QWORD *)(v0 + 504);
  v30 = *(_QWORD *)(v0 + 512);
  v32 = *(_QWORD *)(v0 + 472);
  v92 = v4;
  v93 = *(_QWORD *)(v0 + 464);
  v33 = *(_QWORD *)(v0 + 448);
  v35 = *(_QWORD *)(v0 + 432);
  v34 = *(_QWORD *)(v0 + 440);
  v95 = *(_QWORD *)(v0 + 392);
  v97 = *(_QWORD *)(v0 + 456);
  v89 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v30 + 32);
  v36 = v89(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 496), v31);
  static Calendar.current.getter(v36);
  v37 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v33, enum case for Calendar.Component.year(_:), v35);
  static Date.now.getter(v37);
  v38 = Calendar.component(_:from:)(v33, v29);
  v39 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v39(v29, v31);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v32, v97);
  v91 = v39;
  if (v38 == v95)
  {
    v43 = *(_QWORD *)(v0 + 504);
    v42 = *(_QWORD *)(v0 + 512);
    v44 = *(_QWORD *)(v0 + 488);
    static Date.now.getter(v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v43);
  }
  else
  {
    v45 = *(_QWORD *)(v0 + 472);
    v46 = *(_QWORD *)(v0 + 392);
    static Calendar.gregorian.getter(v41);
    Date.init(year:month:day:hour:minute:calendar:)(v46, 12, 31, 0, 0, v45);
  }
  v47 = *(_QWORD *)(v0 + 504);
  v48 = *(_QWORD *)(v0 + 480);
  sub_10000B5E4(*(_QWORD *)(v0 + 488), v48, &qword_1009D7440);
  v49 = v99(v48, 1, v47);
  v50 = *(_QWORD *)(v0 + 536);
  if (v49 == 1)
  {
    v51 = *(_QWORD *)(v0 + 504);
    v52 = *(_QWORD *)(v0 + 480);
    v53 = *(_QWORD *)(v0 + 488);
    swift_bridgeObjectRelease(v6);
    swift_release(v92);
    sub_100010960(v52, &qword_1009D7440);
    v54 = sub_1005968CC();
    v55 = swift_allocError(&type metadata for ReadingActivityService.YearlyHistoryProviderError, v54, 0, 0);
    *v56 = 1;
    swift_willThrow(v55);
    sub_100010960(v53, &qword_1009D7440);
    v91(v50, v51);
    goto LABEL_33;
  }
  v67 = *(_QWORD *)(v0 + 520);
  v69 = *(_QWORD *)(v0 + 504);
  v68 = *(_QWORD *)(v0 + 512);
  v70 = *(_QWORD *)(v0 + 424);
  v72 = *(_QWORD *)(v0 + 400);
  v71 = *(_QWORD *)(v0 + 408);
  v89(v67, *(_QWORD *)(v0 + 480), v69);
  v96 = v71;
  v73 = v70 + *(int *)(v71 + 48);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
  v74(v70, v50, v69);
  v74(v73, v67, v69);
  v75 = v72 + OBJC_IVAR___BKReadingActivityService_historyModule;
  swift_beginAccess(v72 + OBJC_IVAR___BKReadingActivityService_historyModule, v0 + 336, 0, 0);
  if (*(_QWORD *)(v75 + 24))
  {
    v86 = *(_QWORD *)(v0 + 536);
    v87 = *(_QWORD *)(v0 + 528);
    v76 = *(_QWORD *)(v0 + 504);
    v84 = *(_QWORD *)(v0 + 520);
    v85 = *(_QWORD *)(v0 + 488);
    v88 = *(_QWORD *)(v0 + 496);
    v90 = *(_QWORD *)(v0 + 480);
    v94 = *(_QWORD *)(v0 + 472);
    v100 = *(_QWORD *)(v0 + 448);
    v77 = *(_QWORD *)(v0 + 416);
    v78 = *(_QWORD *)(v0 + 424);
    v83 = *(_QWORD *)(v0 + 392);
    sub_10002E418(v75 + 80, v0 + 296);
    v79 = *(_QWORD *)(v0 + 320);
    v82 = *(_QWORD *)(v0 + 328);
    sub_10003F198((_QWORD *)(v0 + 296), v79);
    v80 = v77 + *(int *)(v96 + 48);
    v74(v77, v78, v76);
    v74(v80, v73, v76);
    v81 = dispatch thunk of ReadingHistoryDataSourceReader.readingHistory(range:)(v77, v80, v79, *(_QWORD *)(v82 + 24));
    v91(v80, v76);
    v91(v77, v76);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 296));
    YearlyReadingHistoryState.init(year:allFinishedAssets:storeFinishedAssets:readingHistory:)(v83, v6, v92, v81);
    sub_100010960(v78, (uint64_t *)&unk_1009EC940);
    v91(v84, v76);
    sub_100010960(v85, &qword_1009D7440);
    v91(v86, v76);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v84);
    swift_task_dealloc(v88);
    swift_task_dealloc(v85);
    swift_task_dealloc(v90);
    swift_task_dealloc(v94);
    swift_task_dealloc(v100);
    swift_task_dealloc(v78);
    swift_task_dealloc(v77);
    v66 = *(void (**)(void))(v0 + 8);
    goto LABEL_36;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_100591F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 520);
  v4 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 536));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ReadingActivityService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ReadingActivityService", 28, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1005922D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009EC93C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ReadingActivityService.state(for:)(a1, a2);
}

Swift::Void __swiftcall ReadingActivityService.changeBooksPerYearGoal(_:_:)(Swift::Int a1, Swift::Bool a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = v2;
  v6 = static os_log_type_t.info.getter(a1);
  sub_100009B88();
  v7 = (void *)static OS_os_log.readingActivity.getter();
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v9 + 56) = &type metadata for Int;
  *(_QWORD *)(v9 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v9 + 32) = a1;
  os_log(_:dso:log:_:_:)(v6, &_mh_execute_header, v7, "Changing books per year goal to: %{public}d", 43, 2, v9);

  swift_bridgeObjectRelease(v9);
  if (a2)
  {
    v10 = *(void **)(v3 + OBJC_IVAR___BKReadingActivityService_booksFinishedGoal);
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v10, "updateValue:", isa);

  }
  else
  {
    v11 = v3 + OBJC_IVAR___BKReadingActivityService_goalsModule;
    swift_beginAccess(v3 + OBJC_IVAR___BKReadingActivityService_goalsModule, v18, 0, 0);
    if (*(_QWORD *)(v11 + 24))
    {
      sub_10002E418(v11 + 40, (uint64_t)v15);
      v12 = v16;
      v13 = v17;
      sub_10003F198(v15, v16);
      dispatch thunk of ReadingGoalsEventProcessor.changeBooksFinishedGoal(to:)(a1, v12, v13);
      _s5Books15CurrentPageViewVwxx_0(v15);
    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall ReadingActivityService.changeDailyGoal(_:_:)(Swift::Double a1, Swift::Bool a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Class isa;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v3 = v2;
  v37 = type metadata accessor for ReadingHistory.Day(0);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingHistory.State(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (id *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = static os_log_type_t.info.getter(v13);
  sub_100009B88();
  v15 = (void *)static OS_os_log.readingActivity.getter();
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v17 + 56) = &type metadata for Double;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Double;
  *(Swift::Double *)(v17 + 32) = a1;
  os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v15, "Changing daily goal to: %{public}.0f", 36, 2, v17);

  swift_bridgeObjectRelease(v17);
  if (a2)
  {
    v18 = *(void **)(v3 + OBJC_IVAR___BKReadingActivityService_dailyGoal);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v18, "updateValue:", isa);

    v36 = *(id *)(v3 + OBJC_IVAR___BKReadingActivityService_isDailyGoalCompleted);
    v20 = (_QWORD *)(v3 + OBJC_IVAR___BKReadingActivityService_historyModule);
    swift_beginAccess(v3 + OBJC_IVAR___BKReadingActivityService_historyModule, v38, 0, 0);
    v21 = v20[3];
    if (v21)
    {
      v22 = v20[4];
      v23 = sub_10003F198(v20, v20[3]);
      v24 = *(_QWORD *)(v21 - 8);
      v25 = __chkstk_darwin(v23);
      v27 = (char *)&v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v24 + 16))(v27, v25);
      v28 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v21, v22);
      v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v21);
      dispatch thunk of ObservableContainer.value.getter(v12, v29);
      swift_release(v28);
      ReadingHistory.State.today.getter(v30);
      v31 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
      ReadingHistory.Day.isStreakDay.getter(v31);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
      v32 = Bool._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v36, "updateValue:", v32);

      return;
    }
    __break(1u);
  }
  else
  {
    v33 = v3 + OBJC_IVAR___BKReadingActivityService_goalsModule;
    swift_beginAccess(v3 + OBJC_IVAR___BKReadingActivityService_goalsModule, v41, 0, 0);
    if (*(_QWORD *)(v33 + 24))
    {
      sub_10002E418(v33 + 40, (uint64_t)v38);
      v34 = v39;
      v35 = v40;
      sub_10003F198(v38, v39);
      dispatch thunk of ReadingGoalsEventProcessor.changeDailyGoal(to:)(v34, v35, a1);
      _s5Books15CurrentPageViewVwxx_0(v38);
      return;
    }
  }
  __break(1u);
}

Swift::Void __swiftcall ReadingActivityService.setCurrentBooksFinishedState(to:)(Swift::Int to)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = v1 + OBJC_IVAR___BKReadingActivityService_booksFinishedModule;
  swift_beginAccess(v3, v9, 0, 0);
  if (*(_QWORD *)(v3 + 24))
  {
    sub_10002E418(v3 + 40, (uint64_t)v6);
    v4 = v7;
    v5 = v8;
    sub_10003F198(v6, v7);
    dispatch thunk of BooksFinishedEventProcessor.setState(year:)(to, v4, v5);
    _s5Books15CurrentPageViewVwxx_0(v6);
  }
  else
  {
    __break(1u);
  }
}

void ReadingActivityService.setReadingHistory(beginning:ending:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v5 = v2 + OBJC_IVAR___BKReadingActivityService_historyModule;
  swift_beginAccess(v2 + OBJC_IVAR___BKReadingActivityService_historyModule, v11, 0, 0);
  if (*(_QWORD *)(v5 + 24))
  {
    sub_10002E418(v5 + 40, (uint64_t)v8);
    v6 = v9;
    v7 = v10;
    sub_10003F198(v8, v9);
    dispatch thunk of ReadingHistoryEventProcessor.setReadingHistory(beginning:ending:)(a1, a2, v6, v7);
    _s5Books15CurrentPageViewVwxx_0(v8);
  }
  else
  {
    __break(1u);
  }
}

void ReadingActivityService.setReadingHistoryForWeek(ending:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = v1 + OBJC_IVAR___BKReadingActivityService_historyModule;
  swift_beginAccess(v3, v9, 0, 0);
  if (*(_QWORD *)(v3 + 24))
  {
    sub_10002E418(v3 + 40, (uint64_t)v6);
    v4 = v7;
    v5 = v8;
    sub_10003F198(v6, v7);
    dispatch thunk of ReadingHistoryEventProcessor.setReadingHistoryForWeek(ending:)(a1, v4, v5);
    _s5Books15CurrentPageViewVwxx_0(v6);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ReadingActivityService.setCurrentActiveAchievementSheet(kind:)(Swift::Int kind)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService__currentActiveAchievementSheetKind) = kind;
}

Swift::Void __swiftcall ReadingActivityService.suppressNotifications()()
{
  sub_100592D98("Suppressing Reading Goals notifications", 39, 0);
}

Swift::Void __swiftcall ReadingActivityService.resumeNotifications()()
{
  sub_100592D98("Resuming Reading Goals notifications", 36, 1);
}

void sub_100592D98(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, __n128);
  uint64_t v11;
  __n128 v12;

  v7 = v3;
  v8 = static os_log_type_t.default.getter(a1);
  sub_100009B88();
  v9 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, a1, a2, 2, _swiftEmptyArrayStorage);

  v10 = *(void (**)(uint64_t, __n128))(v7
                                               + OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler);
  if (v10)
  {
    v11 = *(_QWORD *)(v7 + OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler + 8);
    v12 = swift_retain(v11);
    v10(a3, v12);
    sub_10002AD00((uint64_t)v10, v11);
  }
}

void ReadingActivityService.timeTracker(_:didBeginTrackingSession:trackerEventType:asset:readingFeatureFlags:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  sub_100596910(a2, a3, a4, a5);
}

void sub_100592EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  NSString v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Class isa;
  _QWORD v11[5];
  uint64_t v12;

  v3 = qword_1009EC800;
  v4 = off_1009EC808;
  v5 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  swift_bridgeObjectRetain(v4);
  v6 = String._bridgeToObjectiveC()();
  v7 = swift_allocObject(&unk_100911F80, 32, 7);
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  v11[4] = sub_100597768;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10000B65C;
  v11[3] = &unk_100911F98;
  v8 = _Block_copy(v11);
  objc_msgSend(v5, "updateMetadataBool:forKey:completion:", 1, v6, v8, swift_release(v12).n128_f64[0]);
  _Block_release(v8);

  v9 = *(void **)(a2 + OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience);
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v9, "updateValue:", isa);

}

uint64_t sub_100592FC8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[8];

  if (result)
  {
    v5 = result;
    v6 = swift_errorRetain(result);
    v7 = static os_log_type_t.error.getter(v6);
    sub_100009B88();
    v8 = (void *)static OS_os_log.readingActivity.getter();
    v9 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v10 = swift_allocObject(v9, 112, 7);
    *(_OWORD *)(v10 + 16) = xmmword_10070FC00;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    v11 = sub_10002BE50();
    *(_QWORD *)(v10 + 64) = v11;
    *(_QWORD *)(v10 + 32) = a2;
    *(_QWORD *)(v10 + 40) = a3;
    swift_getErrorValue(v5, v17, v16);
    v12 = v16[1];
    v13 = v16[2];
    swift_bridgeObjectRetain(a3);
    v14 = Error.localizedDescription.getter(v12, v13);
    *(_QWORD *)(v10 + 96) = &type metadata for String;
    *(_QWORD *)(v10 + 104) = v11;
    *(_QWORD *)(v10 + 72) = v14;
    *(_QWORD *)(v10 + 80) = v15;
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v8, "Unable to update for %{public}@ due to %{public}@", 49, 2, v10);

    swift_bridgeObjectRelease(v10);
    return swift_errorRelease(v5);
  }
  return result;
}

void ReadingActivityService.timeTracker(_:didEndTrackingSession:duration:trackerEventType:asset:readingFeatureFlags:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  sub_100597198(a2, a4, a5);
}

void ReadingActivityService.dynamicProgressChanged(_:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  Class isa;

  v3 = objc_msgSend(a1, "progress");
  v4 = objc_msgSend(v3, "integerValue");

  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * (_QWORD)v4 + 0x888888888888888, 2) <= 0x444444444444444uLL)
  {
    v5 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_readingIndicatorTimeToday);
    v6 = objc_msgSend(a1, "progress");
    objc_msgSend(v6, "integerValue");

    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v5, "updateValue:", isa);

  }
}

void sub_10059353C(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_100699634(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1005935A4(v4);
  *a1 = v2;
}

void sub_1005935A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  char *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  Swift::Int v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  char *v72;
  int v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  Swift::Int v78;
  Swift::Int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  Swift::Int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  BOOL v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  _QWORD *v172;
  char *v173;
  _QWORD *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  Swift::Int v179;
  uint64_t v180;
  char *v181;
  void (*v182)(char *, uint64_t);
  char *v183;
  char *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  _QWORD v196[3];
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v192 = (char *)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v194 = (char *)&v173 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v173 - v8;
  __chkstk_darwin(v10);
  v184 = (char *)&v173 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v173 - v13;
  __chkstk_darwin(v15);
  v177 = (char *)&v173 - v16;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v193 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v202 = (char *)&v173 - v21;
  __chkstk_darwin(v22);
  v183 = (char *)&v173 - v23;
  __chkstk_darwin(v24);
  v188 = (char *)&v173 - v25;
  __chkstk_darwin(v26);
  v176 = (char *)&v173 - v27;
  __chkstk_darwin(v28);
  v178 = (char *)&v173 - v29;
  v30 = a1[1];
  v179 = _minimumMergeRunLength(_:)(v30);
  if (v179 >= v30)
  {
    if (v30 < 0)
      goto LABEL_152;
    if (v30)
      sub_100594320(0, v30, 1, a1);
    return;
  }
  if (v30 >= 0)
    v31 = v30;
  else
    v31 = v30 + 1;
  if (v30 < -1)
    goto LABEL_160;
  v175 = v14;
  v195 = v18;
  v190 = v1;
  if (v30 < 2)
  {
    v36 = (char *)_swiftEmptyArrayStorage;
    v189 = (char *)&_swiftEmptyArrayStorage[4];
    v35 = v179;
    v174 = _swiftEmptyArrayStorage;
    if (v30 != 1)
    {
      v38 = _swiftEmptyArrayStorage[2];
LABEL_118:
      if (v38 >= 2)
      {
        v165 = *a1;
        do
        {
          v166 = v38 - 2;
          if (v38 < 2)
            goto LABEL_147;
          if (!v165)
            goto LABEL_159;
          v167 = *(_QWORD *)&v36[16 * v166 + 32];
          v168 = *(_QWORD *)&v36[16 * v38 + 24];
          v169 = v190;
          sub_10059463C(v165 + 40 * v167, (char *)(v165 + 40 * *(_QWORD *)&v36[16 * v38 + 16]), (char *)(v165 + 40 * v168), v189);
          v190 = v169;
          if (v169)
            break;
          if (v168 < v167)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
            v36 = sub_1006995F8((uint64_t)v36);
          if (v166 >= *((_QWORD *)v36 + 2))
            goto LABEL_149;
          v170 = &v36[16 * v166 + 32];
          *(_QWORD *)v170 = v167;
          *((_QWORD *)v170 + 1) = v168;
          v171 = *((_QWORD *)v36 + 2);
          if (v38 > v171)
            goto LABEL_150;
          memmove(&v36[16 * v38 + 16], &v36[16 * v38 + 32], 16 * (v171 - v38));
          *((_QWORD *)v36 + 2) = v171 - 1;
          v38 = v171 - 1;
        }
        while (v171 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease(v36);
      v172 = v174;
      v174[2] = 0;
      swift_bridgeObjectRelease(v172);
      return;
    }
  }
  else
  {
    v32 = v31 >> 1;
    v33 = sub_10004CFD4(&qword_1009D6FF0);
    v34 = static Array._allocateBufferUninitialized(minimumCapacity:)(v32, v33);
    *(_QWORD *)(v34 + 16) = v32;
    v174 = (_QWORD *)v34;
    v189 = (char *)(v34 + 32);
    v35 = v179;
  }
  v37 = 0;
  v36 = (char *)_swiftEmptyArrayStorage;
  v181 = v9;
  v186 = v17;
  while (1)
  {
    v39 = (uint64_t)v37;
    v40 = (Swift::Int)v37 + 1;
    v185 = v37;
    if ((uint64_t)v37 + 1 < v30)
    {
      v41 = *a1;
      sub_10002E418(*a1 + 40 * v40, (uint64_t)&v199);
      v180 = v41;
      sub_10002E418(v41 + 40 * v39, (uint64_t)v196);
      v42 = v197;
      v43 = v198;
      sub_10003F198(v196, v197);
      v44 = v42;
      v45 = (uint64_t)v177;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v44, v43);
      v46 = v195;
      v191 = *(uint64_t **)(v195 + 48);
      v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v45, 1, v17);
      if ((_DWORD)v47 == 1)
      {
        static Date.now.getter(v47);
        sub_100010960(v45, &qword_1009D7440);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v178, v45, v17);
      }
      v48 = v200;
      v49 = v201;
      sub_10003F198(&v199, v200);
      v50 = (uint64_t)v175;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v48, v49);
      v51 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v50, 1, v17);
      if ((_DWORD)v51 == 1)
      {
        v52 = v176;
        static Date.now.getter(v51);
        sub_100010960(v50, &qword_1009D7440);
        v53 = v195;
      }
      else
      {
        v53 = v195;
        v52 = v176;
        (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v176, v50, v17);
      }
      v54 = v178;
      LODWORD(v187) = static Date.> infix(_:_:)(v178, v52);
      v55 = *(void (**)(char *, uint64_t))(v53 + 8);
      v55(v52, v17);
      v182 = v55;
      v55(v54, v17);
      _s5Books15CurrentPageViewVwxx_0(v196);
      _s5Books15CurrentPageViewVwxx_0(&v199);
      v40 = v39 + 2;
      if (v39 + 2 < v30)
      {
        v56 = v180 + 40 * v39 + 40;
        while (1)
        {
          v57 = v30;
          v58 = v40;
          sub_10002E418(v56 + 40, (uint64_t)&v199);
          sub_10002E418(v56, (uint64_t)v196);
          v60 = v197;
          v59 = v198;
          sub_10003F198(v196, v197);
          v61 = v60;
          v62 = (uint64_t)v184;
          dispatch thunk of LibraryAssetInfo.dateFinished.getter(v61, v59);
          v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v62, 1, v17);
          if ((_DWORD)v63 == 1)
          {
            static Date.now.getter(v63);
            sub_100010960(v62, &qword_1009D7440);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v188, v62, v17);
          }
          v64 = v200;
          v65 = v201;
          sub_10003F198(&v199, v200);
          v66 = v64;
          v67 = (uint64_t)v181;
          dispatch thunk of LibraryAssetInfo.dateFinished.getter(v66, v65);
          v68 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v67, 1, v17);
          v69 = v183;
          if ((_DWORD)v68 == 1)
          {
            static Date.now.getter(v68);
            sub_100010960(v67, &qword_1009D7440);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v183, v67, v17);
          }
          v30 = v57;
          v70 = v188;
          v71 = static Date.> infix(_:_:)(v188, v69);
          v72 = v69;
          v73 = v71;
          v74 = v182;
          v182(v72, v17);
          v74(v70, v17);
          _s5Books15CurrentPageViewVwxx_0(v196);
          _s5Books15CurrentPageViewVwxx_0(&v199);
          if (((v187 ^ v73) & 1) != 0)
            break;
          v40 = v58 + 1;
          v56 += 40;
          if (v30 == v58 + 1)
          {
            v40 = v30;
            goto LABEL_34;
          }
        }
        v40 = v58;
LABEL_34:
        v39 = (uint64_t)v185;
      }
      v35 = v179;
      if ((v187 & 1) != 0)
      {
        if (v40 < v39)
          goto LABEL_153;
        if (v39 < v40)
        {
          v191 = (uint64_t *)v30;
          v173 = v36;
          v75 = 40 * v40 - 40;
          v76 = 40 * v39;
          v77 = v40;
          v78 = v39;
          do
          {
            if (v78 != --v77)
            {
              if (!v180)
                goto LABEL_158;
              v79 = v40;
              v80 = v180 + v76;
              v81 = v180 + v75;
              sub_100022840((__int128 *)(v180 + v76), (uint64_t)&v199);
              v82 = *(_QWORD *)(v81 + 32);
              v83 = *(_OWORD *)(v81 + 16);
              *(_OWORD *)v80 = *(_OWORD *)v81;
              *(_OWORD *)(v80 + 16) = v83;
              *(_QWORD *)(v80 + 32) = v82;
              sub_100022840(&v199, v81);
              v40 = v79;
              v39 = (uint64_t)v185;
            }
            ++v78;
            v75 -= 40;
            v76 += 40;
          }
          while (v78 < v77);
          v36 = v173;
          v35 = v179;
          v30 = (Swift::Int)v191;
        }
      }
    }
    if (v40 < v30)
    {
      if (__OFSUB__(v40, v39))
        goto LABEL_151;
      if (v40 - v39 < v35)
        break;
    }
LABEL_69:
    if (v40 < v39)
      goto LABEL_146;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
    v191 = (uint64_t *)v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v36 = sub_1006990C0(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
    v110 = *((_QWORD *)v36 + 2);
    v109 = *((_QWORD *)v36 + 3);
    v38 = v110 + 1;
    if (v110 >= v109 >> 1)
      v36 = sub_1006990C0((char *)(v109 > 1), v110 + 1, 1, v36);
    *((_QWORD *)v36 + 2) = v38;
    v111 = v36 + 32;
    v112 = &v36[16 * v110 + 32];
    v113 = v191;
    *(_QWORD *)v112 = v39;
    *((_QWORD *)v112 + 1) = v113;
    if (v110)
    {
      while (1)
      {
        v114 = v38 - 1;
        if (v38 >= 4)
        {
          v119 = &v111[16 * v38];
          v120 = *((_QWORD *)v119 - 8);
          v121 = *((_QWORD *)v119 - 7);
          v125 = __OFSUB__(v121, v120);
          v122 = v121 - v120;
          if (v125)
            goto LABEL_135;
          v124 = *((_QWORD *)v119 - 6);
          v123 = *((_QWORD *)v119 - 5);
          v125 = __OFSUB__(v123, v124);
          v117 = v123 - v124;
          v118 = v125;
          if (v125)
            goto LABEL_136;
          v126 = v38 - 2;
          v127 = &v111[16 * v38 - 32];
          v129 = *(_QWORD *)v127;
          v128 = *((_QWORD *)v127 + 1);
          v125 = __OFSUB__(v128, v129);
          v130 = v128 - v129;
          if (v125)
            goto LABEL_138;
          v125 = __OFADD__(v117, v130);
          v131 = v117 + v130;
          if (v125)
            goto LABEL_141;
          if (v131 >= v122)
          {
            v149 = &v111[16 * v114];
            v151 = *(_QWORD *)v149;
            v150 = *((_QWORD *)v149 + 1);
            v125 = __OFSUB__(v150, v151);
            v152 = v150 - v151;
            if (v125)
              goto LABEL_145;
            v142 = v117 < v152;
            goto LABEL_106;
          }
        }
        else
        {
          if (v38 != 3)
          {
            v143 = *((_QWORD *)v36 + 4);
            v144 = *((_QWORD *)v36 + 5);
            v125 = __OFSUB__(v144, v143);
            v136 = v144 - v143;
            v137 = v125;
            goto LABEL_100;
          }
          v116 = *((_QWORD *)v36 + 4);
          v115 = *((_QWORD *)v36 + 5);
          v125 = __OFSUB__(v115, v116);
          v117 = v115 - v116;
          v118 = v125;
        }
        if ((v118 & 1) != 0)
          goto LABEL_137;
        v126 = v38 - 2;
        v132 = &v111[16 * v38 - 32];
        v134 = *(_QWORD *)v132;
        v133 = *((_QWORD *)v132 + 1);
        v135 = __OFSUB__(v133, v134);
        v136 = v133 - v134;
        v137 = v135;
        if (v135)
          goto LABEL_140;
        v138 = &v111[16 * v114];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v125 = __OFSUB__(v139, v140);
        v141 = v139 - v140;
        if (v125)
          goto LABEL_143;
        if (__OFADD__(v136, v141))
          goto LABEL_144;
        if (v136 + v141 >= v117)
        {
          v142 = v117 < v141;
LABEL_106:
          if (v142)
            v114 = v126;
          goto LABEL_108;
        }
LABEL_100:
        if ((v137 & 1) != 0)
          goto LABEL_139;
        v145 = &v111[16 * v114];
        v147 = *(_QWORD *)v145;
        v146 = *((_QWORD *)v145 + 1);
        v125 = __OFSUB__(v146, v147);
        v148 = v146 - v147;
        if (v125)
          goto LABEL_142;
        if (v148 < v136)
          goto LABEL_14;
LABEL_108:
        v153 = v114 - 1;
        if (v114 - 1 >= v38)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        v154 = *a1;
        if (!*a1)
          goto LABEL_157;
        v155 = v36;
        v156 = a1;
        v157 = &v111[16 * v153];
        v158 = *(_QWORD *)v157;
        v159 = v111;
        v160 = v114;
        v161 = &v111[16 * v114];
        v162 = *((_QWORD *)v161 + 1);
        v163 = v190;
        sub_10059463C(v154 + 40 * *(_QWORD *)v157, (char *)(v154 + 40 * *(_QWORD *)v161), (char *)(v154 + 40 * v162), v189);
        v190 = v163;
        if (v163)
        {
          v36 = v155;
          goto LABEL_129;
        }
        if (v162 < v158)
          goto LABEL_132;
        if (v160 > *((_QWORD *)v155 + 2))
          goto LABEL_133;
        *(_QWORD *)v157 = v158;
        *(_QWORD *)&v159[16 * v153 + 8] = v162;
        v164 = *((_QWORD *)v155 + 2);
        if (v160 >= v164)
          goto LABEL_134;
        v36 = v155;
        v38 = v164 - 1;
        memmove(v161, v161 + 16, 16 * (v164 - 1 - v160));
        v111 = v159;
        *((_QWORD *)v155 + 2) = v164 - 1;
        v142 = v164 > 2;
        a1 = v156;
        v17 = v186;
        if (!v142)
          goto LABEL_14;
      }
    }
    v38 = 1;
LABEL_14:
    v30 = a1[1];
    v37 = v191;
    v35 = v179;
    if ((uint64_t)v191 >= v30)
      goto LABEL_118;
  }
  if (__OFADD__(v39, v35))
    goto LABEL_154;
  if (v39 + v35 >= v30)
    v84 = (void (*)(char *, uint64_t))v30;
  else
    v84 = (void (*)(char *, uint64_t))(v39 + v35);
  if ((uint64_t)v84 >= v39)
  {
    if ((void (*)(char *, uint64_t))v40 != v84)
    {
      v173 = v36;
      v85 = 40 * v40 - 40;
      v86 = v195;
      v191 = a1;
      v182 = v84;
      do
      {
        v87 = v39;
        v187 = v85;
        while (1)
        {
          v88 = v40;
          v89 = *a1 + v85;
          sub_10002E418(v89 + 40, (uint64_t)&v199);
          sub_10002E418(v89, (uint64_t)v196);
          v90 = v197;
          v91 = v198;
          sub_10003F198(v196, v197);
          v92 = v90;
          v93 = (uint64_t)v194;
          dispatch thunk of LibraryAssetInfo.dateFinished.getter(v92, v91);
          v94 = v86;
          v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
          v96 = v95(v93, 1, v17);
          if ((_DWORD)v96 == 1)
          {
            static Date.now.getter(v96);
            sub_100010960(v93, &qword_1009D7440);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v202, v93, v17);
          }
          v97 = (uint64_t)v192;
          v98 = v200;
          v99 = v201;
          sub_10003F198(&v199, v200);
          dispatch thunk of LibraryAssetInfo.dateFinished.getter(v98, v99);
          v100 = v95(v97, 1, v17);
          if ((_DWORD)v100 == 1)
          {
            v101 = v193;
            static Date.now.getter(v100);
            sub_100010960(v97, &qword_1009D7440);
            v86 = v195;
          }
          else
          {
            v86 = v195;
            v101 = v193;
            (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v193, v97, v17);
          }
          v102 = v202;
          v103 = static Date.> infix(_:_:)(v202, v101);
          v104 = *(void (**)(char *, uint64_t))(v86 + 8);
          v104(v101, v17);
          v104(v102, v17);
          _s5Books15CurrentPageViewVwxx_0(v196);
          _s5Books15CurrentPageViewVwxx_0(&v199);
          if ((v103 & 1) == 0)
            break;
          a1 = v191;
          v105 = *v191;
          if (!*v191)
            goto LABEL_156;
          v40 = v88;
          v106 = v105 + v85;
          sub_100022840((__int128 *)(v105 + v85 + 40), (uint64_t)&v199);
          v107 = *(_OWORD *)(v106 + 16);
          *(_OWORD *)(v106 + 40) = *(_OWORD *)v106;
          *(_OWORD *)(v106 + 56) = v107;
          *(_QWORD *)(v106 + 72) = *(_QWORD *)(v106 + 32);
          sub_100022840(&v199, v106);
          v85 -= 40;
          if (v88 == ++v87)
            goto LABEL_56;
        }
        a1 = v191;
        v40 = v88;
LABEL_56:
        ++v40;
        v85 = v187 + 40;
        v39 = (uint64_t)v185;
      }
      while ((void (*)(char *, uint64_t))v40 != v182);
      v40 = (Swift::Int)v182;
      v36 = v173;
    }
    goto LABEL_69;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100594320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v46 = a4;
  v41 = a1;
  v6 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v44 = (char *)&v39 - v10;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v53 = (char *)&v39 - v16;
  v45 = a3;
  v40 = a2;
  if (a3 != a2)
  {
    v17 = 40 * v45 - 40;
    v43 = v14;
LABEL_5:
    v18 = v41;
    v42 = v17;
    while (1)
    {
      v19 = v8;
      v20 = *v46 + v17;
      sub_10002E418(v20 + 40, (uint64_t)&v50);
      sub_10002E418(v20, (uint64_t)v47);
      v21 = v12;
      v23 = v48;
      v22 = v49;
      sub_10003F198(v47, v48);
      v24 = v44;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v23, v22);
      v25 = (uint64_t)v24;
      v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
      v27 = v26(v25, 1, v11);
      if ((_DWORD)v27 == 1)
      {
        static Date.now.getter(v27);
        sub_100010960(v25, &qword_1009D7440);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v53, v25, v11);
      }
      v28 = v51;
      v29 = v52;
      sub_10003F198(&v50, v51);
      v30 = v28;
      v8 = v19;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v30, v29);
      v31 = v26((uint64_t)v19, 1, v11);
      if ((_DWORD)v31 == 1)
      {
        v32 = v43;
        static Date.now.getter(v31);
        sub_100010960((uint64_t)v8, &qword_1009D7440);
        v12 = v21;
      }
      else
      {
        v12 = v21;
        v32 = v43;
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v43, v8, v11);
      }
      v33 = v53;
      v34 = static Date.> infix(_:_:)(v53, v32);
      v35 = *(void (**)(char *, uint64_t))(v12 + 8);
      v35(v32, v11);
      v35(v33, v11);
      _s5Books15CurrentPageViewVwxx_0(v47);
      _s5Books15CurrentPageViewVwxx_0(&v50);
      if ((v34 & 1) == 0)
      {
LABEL_4:
        v17 = v42 + 40;
        if (++v45 == v40)
          return;
        goto LABEL_5;
      }
      v36 = *v46;
      if (!*v46)
        break;
      v37 = v36 + v17;
      sub_100022840((__int128 *)(v36 + v17 + 40), (uint64_t)&v50);
      v38 = *(_OWORD *)(v37 + 16);
      *(_OWORD *)(v37 + 40) = *(_OWORD *)v37;
      *(_OWORD *)(v37 + 56) = v38;
      *(_QWORD *)(v37 + 72) = *(_QWORD *)(v37 + 32);
      sub_100022840(&v50, v37);
      v17 -= 40;
      if (v45 == ++v18)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_10059463C(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(_BYTE *, uint64_t);
  _OWORD *v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  unint64_t v76;
  unint64_t v77;
  __int128 v78;
  __int128 v79;
  char *v80;
  __int128 v81;
  __int128 v82;
  uint64_t result;
  _BYTE v84[16];
  char *v85;
  char *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;

  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  v90 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v89 = &v84[-v10];
  __chkstk_darwin(v11);
  v88 = &v84[-v12];
  __chkstk_darwin(v13);
  v87 = &v84[-v14];
  v15 = type metadata accessor for Date(0);
  v93 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v86 = &v84[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v92 = &v84[-v18];
  __chkstk_darwin(v19);
  v21 = &v84[-v20];
  __chkstk_darwin(v22);
  v25 = &v84[-v24];
  v26 = a2 - v23;
  v27 = (a2 - v23) / 40;
  v91 = a3;
  v28 = a3 - a2;
  v29 = v28 / 40;
  v102 = v23;
  v101 = a4;
  if (v27 >= v28 / 40)
  {
    if (v28 < -39)
      goto LABEL_54;
    v51 = v93;
    if (a4 != a2 || &a2[40 * v29] <= a4)
    {
      v52 = v23;
      memmove(a4, a2, 40 * v29);
      v23 = v52;
    }
    v53 = &a4[40 * v29];
    v100 = v53;
    v102 = a2;
    if (v28 < 40 || v23 >= a2)
      goto LABEL_53;
    v54 = (unint64_t)(v91 - 40);
    v91 = a4;
    v85 = v23;
    v55 = v92;
    while (1)
    {
      sub_10002E418((uint64_t)(v53 - 40), (uint64_t)v97);
      v58 = a2 - 40;
      sub_10002E418((uint64_t)(a2 - 40), (uint64_t)v94);
      v60 = v95;
      v59 = v96;
      sub_10003F198(v94, v95);
      v61 = v60;
      v62 = (uint64_t)v89;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v61, v59);
      v63 = v51;
      v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      v65 = v64(v62, 1, v15);
      if ((_DWORD)v65 == 1)
      {
        static Date.now.getter(v65);
        sub_100010960(v62, &qword_1009D7440);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v92, v62, v15);
      }
      v66 = v98;
      v67 = v99;
      sub_10003F198(v97, v98);
      v68 = v66;
      v69 = (uint64_t)v90;
      dispatch thunk of LibraryAssetInfo.dateFinished.getter(v68, v67);
      v70 = v64(v69, 1, v15);
      if ((_DWORD)v70 == 1)
      {
        v71 = v86;
        static Date.now.getter(v70);
        sub_100010960(v69, &qword_1009D7440);
        v72 = v93;
      }
      else
      {
        v72 = v93;
        v71 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v86, v69, v15);
      }
      v73 = (char *)(v54 + 40);
      v74 = static Date.> infix(_:_:)(v55, v71);
      v75 = *(void (**)(char *, uint64_t))(v72 + 8);
      v75(v71, v15);
      v75(v55, v15);
      _s5Books15CurrentPageViewVwxx_0(v94);
      _s5Books15CurrentPageViewVwxx_0(v97);
      if ((v74 & 1) != 0)
        break;
      v80 = v100;
      v53 = v100 - 40;
      v100 -= 40;
      v76 = (unint64_t)v85;
      v77 = (unint64_t)v91;
      if (v73 < v80 || v54 >= (unint64_t)v80)
      {
        v56 = *(_OWORD *)v53;
        v57 = *(_OWORD *)(v80 - 24);
        *(_QWORD *)(v54 + 32) = *((_QWORD *)v80 - 1);
        *(_OWORD *)v54 = v56;
        *(_OWORD *)(v54 + 16) = v57;
        v58 = a2;
        goto LABEL_35;
      }
      v51 = v93;
      if (v73 != v80)
      {
        v81 = *(_OWORD *)v53;
        v82 = *(_OWORD *)(v80 - 24);
        *(_QWORD *)(v54 + 32) = *((_QWORD *)v80 - 1);
        *(_OWORD *)v54 = v81;
        *(_OWORD *)(v54 + 16) = v82;
      }
      v58 = a2;
      if ((unint64_t)v53 <= v77)
        goto LABEL_53;
LABEL_36:
      v54 -= 40;
      a2 = v58;
      if ((unint64_t)v58 <= v76)
        goto LABEL_53;
    }
    v76 = (unint64_t)v85;
    v77 = (unint64_t)v91;
    if (v73 != a2 || v54 >= (unint64_t)a2)
    {
      v78 = *(_OWORD *)v58;
      v79 = *(_OWORD *)(a2 - 24);
      *(_QWORD *)(v54 + 32) = *((_QWORD *)a2 - 1);
      *(_OWORD *)v54 = v78;
      *(_OWORD *)(v54 + 16) = v79;
    }
    v102 -= 40;
    v53 = v100;
LABEL_35:
    v51 = v93;
    if ((unint64_t)v53 <= v77)
      goto LABEL_53;
    goto LABEL_36;
  }
  if (v26 >= -39)
  {
    if (a4 != v23 || &v23[40 * v27] <= a4)
      memmove(a4, v23, 40 * v27);
    v92 = &a4[40 * v27];
    v100 = v92;
    v30 = v93;
    if (v26 >= 40 && a2 < v91)
    {
      do
      {
        sub_10002E418((uint64_t)a2, (uint64_t)v97);
        sub_10002E418((uint64_t)a4, (uint64_t)v94);
        v31 = v95;
        v32 = v96;
        sub_10003F198(v94, v95);
        v33 = v31;
        v34 = (uint64_t)v87;
        dispatch thunk of LibraryAssetInfo.dateFinished.getter(v33, v32);
        v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
        v36 = v35(v34, 1, v15);
        if ((_DWORD)v36 == 1)
        {
          static Date.now.getter(v36);
          sub_100010960(v34, &qword_1009D7440);
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v30 + 32))(v25, v34, v15);
        }
        v37 = v98;
        v38 = v99;
        sub_10003F198(v97, v98);
        v39 = v37;
        v40 = (uint64_t)v88;
        dispatch thunk of LibraryAssetInfo.dateFinished.getter(v39, v38);
        v41 = v35(v40, 1, v15);
        if ((_DWORD)v41 == 1)
        {
          static Date.now.getter(v41);
          sub_100010960(v40, &qword_1009D7440);
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v30 + 32))(v21, v40, v15);
        }
        v42 = static Date.> infix(_:_:)(v25, v21);
        v43 = *(void (**)(_BYTE *, uint64_t))(v30 + 8);
        v43(v21, v15);
        v43(v25, v15);
        _s5Books15CurrentPageViewVwxx_0(v94);
        _s5Books15CurrentPageViewVwxx_0(v97);
        v44 = v102;
        if ((v42 & 1) != 0)
        {
          v45 = (unint64_t)(a2 + 40);
          if (v102 >= a2 && (unint64_t)v102 < v45 && v102 == a2)
          {
            v44 = a2;
          }
          else
          {
            v46 = *(_OWORD *)a2;
            v47 = *((_OWORD *)a2 + 1);
            *((_QWORD *)v102 + 4) = *((_QWORD *)a2 + 4);
            *v44 = v46;
            v44[1] = v47;
          }
        }
        else
        {
          v48 = v101 + 40;
          if (v102 != v101 || v102 >= v48)
          {
            v49 = *(_OWORD *)v101;
            v50 = *((_OWORD *)v101 + 1);
            *((_QWORD *)v102 + 4) = *((_QWORD *)v101 + 4);
            *v44 = v49;
            v44[1] = v50;
          }
          v101 = v48;
          v45 = (unint64_t)a2;
        }
        v102 = (char *)v44 + 40;
        a4 = v101;
        if (v101 >= v92)
          break;
        a2 = (char *)v45;
      }
      while (v45 < (unint64_t)v91);
    }
LABEL_53:
    sub_100699374((void **)&v102, (const void **)&v101, &v100);
    return 1;
  }
LABEL_54:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100594D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(_QWORD, __n128), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  NSString v86;
  uint64_t v87;
  void *v88;
  char *v89;
  __n128 v90;
  id v91;
  char *v92;
  void *v93;
  id v94;
  id v95;
  NSString v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  void (*v119)(_QWORD, __n128);
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  _BYTE *v128;
  _QWORD v129[5];
  _QWORD v130[5];
  _QWORD v131[5];
  _QWORD v132[5];
  _QWORD v133[5];
  _QWORD v134[5];
  id v135[3];
  void *v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  _QWORD v138[5];
  _QWORD v139[5];
  _QWORD v140[5];
  _QWORD v141[5];
  uint64_t v142;
  _BYTE v143[40];
  uint64_t v144;
  uint64_t v145;
  _BYTE v146[40];
  _BYTE v147[40];
  _BYTE v148[40];
  _QWORD v149[3];
  uint64_t v150;
  uint64_t v151;
  _BYTE v152[40];
  _BYTE v153[40];
  _QWORD v154[3];
  uint64_t v155;
  uint64_t v156;
  _BYTE v157[40];
  _BYTE v158[40];
  _QWORD v159[3];
  uint64_t v160;
  uint64_t v161;
  _BYTE v162[48];

  v120 = a8;
  v109 = a7;
  v123 = (_BYTE *)a6;
  v111 = (_BYTE *)a1;
  v125 = a18;
  v117 = a19;
  v116 = a16;
  v110 = a14;
  v124 = a13;
  v114 = a10;
  v108 = a9;
  v119 = a12;
  v23 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v23);
  v107 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10004CFD4(&qword_1009ECA90);
  __chkstk_darwin(v25);
  v113 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v115 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v30;
  (*(void (**)(double))(v30 + 16))(v28);
  sub_10002E418(a2, (uint64_t)v159);
  v118 = v162;
  sub_10002E418(a3, (uint64_t)v162);
  v126 = v157;
  v122 = v158;
  sub_10002E418(a4, (uint64_t)v154);
  sub_10002E418(a5, (uint64_t)v157);
  sub_10002E418((uint64_t)v123, (uint64_t)v158);
  sub_10002E418(v109, (uint64_t)v149);
  v123 = v152;
  sub_10002E418(v120, (uint64_t)v152);
  v112 = v153;
  sub_10002E418(v108, (uint64_t)v153);
  v120 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService__setupState];
  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  v31 = &a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler];
  v32 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler];
  v33 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler + 8];
  v34 = v124;
  *(_QWORD *)v31 = a12;
  *((_QWORD *)v31 + 1) = v34;
  sub_10002AD00(v32, v33);
  v35 = &a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler];
  v36 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler];
  v37 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler + 8];
  *(_QWORD *)v35 = v110;
  *((_QWORD *)v35 + 1) = a15;
  swift_retain(v34);
  sub_10002AD00(v36, v37);
  v38 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_libraryManager];
  v39 = v111;
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_libraryManager] = v111;
  swift_retain(a15);

  sub_10002E418((uint64_t)v159, (uint64_t)v146);
  sub_10002E418((uint64_t)v162, (uint64_t)v147);
  v40 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_goalsModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_goalsModule], v143, 33, 0);
  v41 = v39;
  sub_10000B558((uint64_t)v146, v40, &qword_1009ECAC8);
  swift_endAccess(v143);
  sub_10002E418((uint64_t)v149, (uint64_t)v146);
  sub_10002E418((uint64_t)v152, (uint64_t)v147);
  v111 = v148;
  sub_10002E418((uint64_t)v153, (uint64_t)v148);
  v42 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_historyModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_historyModule], v143, 33, 0);
  sub_10000B558((uint64_t)v146, v42, &qword_1009ECAD8);
  swift_endAccess(v143);
  sub_10002E418((uint64_t)v154, (uint64_t)v146);
  sub_10002E418((uint64_t)v126, (uint64_t)v147);
  v43 = (uint64_t)v122;
  sub_10002E418((uint64_t)v122, (uint64_t)v148);
  v44 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_booksFinishedModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_booksFinishedModule], v143, 33, 0);
  sub_10000B558((uint64_t)v146, v44, &qword_1009ECAD0);
  swift_endAccess(v143);
  v45 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_achievementsController];
  v46 = v114;
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_achievementsController] = v114;
  swift_release(v45);
  type metadata accessor for ReadingGoalsAnalytics(0);
  swift_retain(v46);
  v48 = static ReadingGoalsAnalytics.shared.getter(v47);
  v49 = v160;
  v50 = v161;
  sub_10003F198(v159, v160);
  v51 = v113;
  dispatch thunk of ReadingGoalsStateProvider.state.getter(v49, v50);
  v52 = type metadata accessor for ReadingGoals.State(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  dispatch thunk of ReadingGoalsAnalytics.goalsState.setter(v51);
  swift_release(v48);
  v54 = static ReadingGoalsAnalytics.shared.getter(v53);
  v55 = dispatch thunk of ReadingGoalsAnalytics.booksState.getter();
  swift_release(v54);
  sub_10002E418((uint64_t)v154, (uint64_t)v146);
  sub_10002E418((uint64_t)v126, (uint64_t)v147);
  sub_10002E418(v43, (uint64_t)v111);
  v128 = v146;
  Atomic.mutate(_:)(sub_1000696D4);
  swift_release(v55);
  v56 = sub_100010960((uint64_t)v146, &qword_1009ECAF0);
  v57 = static ReadingGoalsAnalytics.shared.getter(v56);
  v58 = dispatch thunk of ReadingGoalsAnalytics.historyState.getter();
  swift_release(v57);
  sub_10002E418((uint64_t)v149, (uint64_t)v143);
  sub_10002E418((uint64_t)v123, (uint64_t)&v144);
  v59 = (uint64_t)v112;
  sub_10002E418((uint64_t)v112, (uint64_t)&v145);
  v127 = v143;
  Atomic.mutate(_:)(sub_1000696F4);
  swift_release(v58);
  v60 = sub_100010960((uint64_t)v143, &qword_1009ECAF8);
  v61 = static ReadingGoalsAnalytics.shared.getter(v60);
  v62 = swift_unknownObjectRetain(v116);
  dispatch thunk of ReadingGoalsAnalytics.analyticsSessionHosting.setter(v62);
  swift_release(v61);
  v63 = v115;
  v65 = static ReadingGoalsAnalytics.shared.getter(v64);
  dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)(0);
  v66 = swift_release(v65);
  (*(void (**)(char *, uint64_t, __n128))(v117 + 8))(a17, v125, v66);
  v67 = v160;
  v68 = v161;
  sub_10003F198(v159, v160);
  dispatch thunk of ReadingGoalsStateProvider.observable.getter(v135, v67, v68);
  v69 = v136;
  v70 = v137;
  sub_10003F198(v135, (uint64_t)v136);
  v71 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16);
  swift_retain(v71);
  dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(a17, sub_1000696EC, v71, v69, v70);
  swift_release_n(v71, 2);
  _s5Books15CurrentPageViewVwxx_0(v135);
  v72 = v155;
  v73 = v156;
  sub_10003F198(v154, v155);
  v74 = dispatch thunk of BooksFinishedStateProvider.state.getter(v72, v73);
  v75 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v75 + 16);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(a17, sub_1000696DC, v75);
  swift_release(v74);
  swift_release(v75);
  v76 = v150;
  v77 = v151;
  sub_10003F198(v149, v150);
  v78 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v76, v77);
  v79 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v79 + 16);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(a17, sub_1000696E4, v79);
  swift_release(v78);
  swift_release(v79);
  v135[0] = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  KeyPath = swift_getKeyPath(&unk_10072EB68);
  v81 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v81 + 16);
  v82 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_1000696CC, v81, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v81);

  v83 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_clearDataObservation];
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_clearDataObservation] = v82;

  v84 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v85 = off_1009EC808;
  swift_bridgeObjectRetain(off_1009EC808);
  v86 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v85);
  v87 = swift_allocObject(&unk_100911B88, 24, 7);
  swift_unknownObjectWeakInit(v87 + 16);
  v137 = sub_1000696FC;
  v138[0] = v87;
  v135[0] = _NSConcreteStackBlock;
  v135[1] = (id)1107296256;
  v135[2] = sub_100010E84;
  v136 = &unk_100912150;
  v88 = _Block_copy(v135);
  objc_msgSend(v84, "fetchMetadataBoolForKey:completion:", v86, v88, swift_release(v138[0]).n128_f64[0]);
  _Block_release(v88);

  v89 = &a17[OBJC_IVAR___BKReadingActivityService_enableCloudSync];
  v90 = swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_enableCloudSync], &v142, 0, 0);
  v119(*v89, v90);
  sub_10002E418((uint64_t)v159, (uint64_t)v140);
  sub_10002E418((uint64_t)v118, (uint64_t)v141);
  sub_10002E418((uint64_t)v149, (uint64_t)v135);
  sub_10002E418((uint64_t)v123, (uint64_t)v138);
  sub_10002E418(v59, (uint64_t)v139);
  sub_10002E418((uint64_t)v154, (uint64_t)v132);
  sub_10002E418((uint64_t)v126, (uint64_t)v133);
  sub_10002E418((uint64_t)v122, (uint64_t)v134);
  sub_10002E418((uint64_t)v140, (uint64_t)v131);
  sub_10002E418((uint64_t)v135, (uint64_t)v130);
  sub_10002E418((uint64_t)v132, (uint64_t)v129);
  v91 = objc_allocWithZone((Class)type metadata accessor for ReadingActivityDonor());
  v92 = sub_1000200C8(0xD000000000000014, 0x80000001007D5100, v131, v130, v129);
  _s5Books15CurrentPageViewVwxx_0(v132);
  _s5Books15CurrentPageViewVwxx_0(v135);
  _s5Books15CurrentPageViewVwxx_0(v140);
  _s5Books15CurrentPageViewVwxx_0(v134);
  _s5Books15CurrentPageViewVwxx_0(v133);
  _s5Books15CurrentPageViewVwxx_0(v139);
  _s5Books15CurrentPageViewVwxx_0(v138);
  _s5Books15CurrentPageViewVwxx_0(v141);
  v93 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_readingActivityDonor];
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_readingActivityDonor] = v92;

  v94 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v95 = objc_msgSend(v94, "userDefaults");

  v96 = objc_msgSend((id)objc_opt_self(BDSReadingHistoryMigrationInfo), "dataHasBeenMovedUserDefaultsKey");
  if (!v96)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v99 = v98;
    v96 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v97 = swift_bridgeObjectRelease(v99).n128_u64[0];
  }
  v100 = objc_msgSend(v95, "BOOLForKey:", v96, v97);

  if ((v100 & 1) == 0)
  {
    v101 = type metadata accessor for TaskPriority(0);
    v102 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v107, 1, 1, v101);
    v103 = (_QWORD *)swift_allocObject(&unk_100912188, 40, 7);
    v103[2] = 0;
    v103[3] = 0;
    v103[4] = a17;
    v104 = a17;
    v105 = sub_10030C02C(v102, (uint64_t)&unk_1009ECB00, (uint64_t)v103);
    swift_release(v105);
  }
  MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
  sub_100010960((uint64_t)v149, &qword_1009ECAF8);
  sub_100010960((uint64_t)v154, &qword_1009ECAF0);
  sub_100010960((uint64_t)v159, &qword_1009ECB08);
  return (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v63, v125);
}

unint64_t sub_100595878()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[248];

  v0 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v0, v8);
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSInferMappingModelAutomaticallyOption);
  v7 = v2;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for Bool;
  *(_BYTE *)(inited + 72) = 1;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMigratePersistentStoresAutomaticallyOption);
  v7 = v3;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 1;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSPersistentHistoryTrackingKey);
  v7 = v4;
  AnyHashable.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 240) = &type metadata for Bool;
  *(_BYTE *)(inited + 216) = 1;
  return sub_1000560A8(inited);
}

uint64_t sub_100595994()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for NSPersistentStore.StoreType(0);
  v0[23] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[24] = v2;
  v0[25] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D23D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[26] = swift_task_alloc(v3);
  v0[27] = swift_task_alloc(v3);
  v4 = type metadata accessor for URL(0);
  v0[28] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v0[29] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[30] = swift_task_alloc(v6);
  v0[31] = swift_task_alloc(v6);
  return swift_task_switch(sub_100595A5C, 0, 0);
}

uint64_t sub_100595A5C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSDictionary v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSDictionary v24;
  uint64_t v25;
  NSString v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  NSString v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  id v89;

  v1 = (void *)objc_opt_self(NSUserDefaults);
  v2 = objc_msgSend(v1, "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "dictionaryForKey:", v3);

  if (v4)
  {
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v1, "standardUserDefaults");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "dictionaryForKey:", v7);

  if (v8)
  {
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v9 = 0;
  }
  v10 = (void *)objc_opt_self(BUAppGroup);
  *(_QWORD *)(v0 + 256) = v10;
  v11 = objc_msgSend(v10, "books");
  v12 = objc_msgSend(v11, "userDefaults");

  v13 = (void *)objc_opt_self(BDSReadingHistoryMigrationInfo);
  *(_QWORD *)(v0 + 264) = v13;
  v89 = v13;
  v14 = objc_msgSend(v13, "booksFinishedUserDefaultsKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  if (v5)
    v17.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v17.super.isa = 0;
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setValue:forKey:", v17.super.isa, v18);

  swift_unknownObjectRelease(v17.super.isa);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v16);

  v19 = objc_msgSend(v10, "books");
  v20 = objc_msgSend(v19, "userDefaults");

  v21 = objc_msgSend(v89, "streakDayUserDefaultsKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  if (v9)
    v24.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v24.super.isa = 0;
  v25 = *(_QWORD *)(v0 + 224);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setValue:forKey:", v24.super.isa, v26);

  swift_unknownObjectRelease(v24.super.isa);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v23);

  v27 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  *(_QWORD *)(v0 + 272) = v27;
  v28 = objc_msgSend(v27, "URLsForDirectory:inDomains:", 9, 1);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v25);

  v30 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 208);
  if (*(_QWORD *)(v29 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v31 + 16))(*(_QWORD *)(v0 + 208), v29 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), *(_QWORD *)(v0 + 224));
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v33(v32, 0, 1, v30);
  }
  else
  {
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v33(*(_QWORD *)(v0 + 208), 1, 1, v30);
  }
  v34 = *(_QWORD *)(v0 + 224);
  v35 = *(_QWORD *)(v0 + 232);
  v36 = *(_QWORD *)(v0 + 208);
  v37 = swift_bridgeObjectRelease(v29);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v35 + 48);
  if (v38(v36, 1, v34, v37) == 1)
  {
    v39 = *(_QWORD *)(v0 + 216);
    v40 = *(_QWORD *)(v0 + 224);
    sub_100010960(*(_QWORD *)(v0 + 208), (uint64_t *)&unk_1009D23D0);
    v33(v39, 1, 1, v40);
LABEL_19:
    v46 = sub_100010960(*(_QWORD *)(v0 + 216), (uint64_t *)&unk_1009D23D0);
    goto LABEL_20;
  }
  v41 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 232);
  v43 = *(_QWORD *)(v0 + 208);
  v44 = *(_QWORD *)(v0 + 216);
  URL.appendingPathComponent(_:)(0xD000000000000056, 0x80000001007D4BB0);
  v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  *(_QWORD *)(v0 + 280) = v45;
  v45(v43, v41);
  v33(v44, 0, 1, v41);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v38)(v44, 1, v41) == 1)
    goto LABEL_19;
  v63 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 32))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  URL.path.getter(v63);
  v65 = v64;
  v66 = String._bridgeToObjectiveC()();
  LODWORD(v65) = objc_msgSend(v27, "fileExistsAtPath:", v66, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v67 = *(_QWORD *)(v0 + 248);
  if ((_DWORD)v65)
  {
    v68 = *(_QWORD *)(v0 + 240);
    v88 = *(_QWORD *)(v0 + 200);
    v69 = objc_msgSend(v89, "readingHistoryFileURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v69);

    v71 = static os_log_type_t.default.getter(v70);
    *(_QWORD *)(v0 + 288) = sub_100009B88();
    v72 = (void *)static OS_os_log.readingActivity.getter();
    v73 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    *(_QWORD *)(v0 + 296) = v73;
    v74 = swift_allocObject(v73, 72, 7);
    *(_OWORD *)(v74 + 16) = xmmword_10070CCA0;
    v75 = URL.path.getter(v74);
    v77 = v76;
    *(_QWORD *)(v74 + 56) = &type metadata for String;
    v78 = sub_10002BE50();
    *(_QWORD *)(v0 + 304) = v78;
    *(_QWORD *)(v74 + 64) = v78;
    *(_QWORD *)(v74 + 32) = v75;
    *(_QWORD *)(v74 + 40) = v77;
    os_log(_:dso:log:_:_:)(v71, &_mh_execute_header, v72, "Moving reading history file to group container, %{public}@", 58, 2, v74);
    swift_bridgeObjectRelease(v74);

    sub_10004CFD4((uint64_t *)&unk_1009ECA10);
    v79 = (void *)static CRDTModelSyncManager.defaultDataSource.getter();
    v80 = objc_msgSend(v79, "persistentStoreCoordinator");

    v81 = sub_100595878();
    static NSPersistentStore.StoreType.sqlite.getter();
    NSPersistentStoreCoordinator.replacePersistentStore(at:destinationOptions:withPersistentStoreFrom:sourceOptions:type:)(v68, v81, v67, v81, v88);
    v82 = v0 + 16;
    v83 = *(_QWORD *)(v0 + 240);
    v84 = *(_QWORD *)(v0 + 224);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    swift_bridgeObjectRelease(v81);

    v45(v83, v84);
    v85 = objc_msgSend(objc_allocWithZone((Class)BDSReadingDataMigrationManagerClient), "init");
    *(_QWORD *)(v0 + 312) = v85;
    *(_QWORD *)(v0 + 56) = v0 + 328;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1005963D0;
    v86 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v87 = (_QWORD *)(v0 + 80);
    v87[1] = 0x40000000;
    v87[2] = sub_100542EA8;
    v87[3] = &unk_100911DA0;
    v87[4] = v86;
    objc_msgSend(v85, "mergeMovedReadingHistoryDataWithCompletionHandler:", v87);
    return swift_continuation_await(v82);
  }
  v46 = ((uint64_t (*)(_QWORD, _QWORD))v45)(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
LABEL_20:
  v48 = *(void **)(v0 + 256);
  v47 = *(void **)(v0 + 264);
  v49 = static os_log_type_t.default.getter(v46);
  sub_100009B88();
  v50 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v49, &_mh_execute_header, v50, "Migration done! Setting success key", 35, 2, _swiftEmptyArrayStorage);

  v51 = objc_msgSend(v48, "books");
  v52 = objc_msgSend(v51, "userDefaults");

  v53 = objc_msgSend(v47, "dataHasBeenMovedUserDefaultsKey");
  if (!v53)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v56 = v55;
    v53 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v56).n128_u64[0];
  }
  v57 = *(void **)(v0 + 272);
  objc_msgSend(v52, "setBool:forKey:", 1, v53, v54);

  v58 = *(_QWORD *)(v0 + 240);
  v60 = *(_QWORD *)(v0 + 208);
  v59 = *(_QWORD *)(v0 + 216);
  v61 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005963D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 320) = v1;
  if (v1)
    v2 = sub_100596600;
  else
    v2 = sub_100596430;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100596430(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  NSString v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(void **)(v1 + 312);
  if ((*(_BYTE *)(v1 + 328) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(v1 + 280))(*(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 224));

  }
  else
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 280);
    v5 = *(_QWORD *)(v1 + 248);
    v6 = *(_QWORD *)(v1 + 224);
    v7 = static os_log_type_t.error.getter(a1);
    v8 = (void *)static OS_os_log.readingActivity.getter();
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v8, "Daemon migration manager failed to receive signal that migration was done", 73, 2, _swiftEmptyArrayStorage);

    v3 = v4(v5, v6);
  }
  v10 = *(void **)(v1 + 256);
  v9 = *(void **)(v1 + 264);
  v11 = static os_log_type_t.default.getter(v3);
  sub_100009B88();
  v12 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v12, "Migration done! Setting success key", 35, 2, _swiftEmptyArrayStorage);

  v13 = objc_msgSend(v10, "books");
  v14 = objc_msgSend(v13, "userDefaults");

  v15 = objc_msgSend(v9, "dataHasBeenMovedUserDefaultsKey");
  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = v17;
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  v19 = *(void **)(v1 + 272);
  objc_msgSend(v14, "setBool:forKey:", 1, v15, v16);

  v20 = *(_QWORD *)(v1 + 240);
  v22 = *(_QWORD *)(v1 + 208);
  v21 = *(_QWORD *)(v1 + 216);
  v23 = *(_QWORD *)(v1 + 200);
  swift_task_dealloc(*(_QWORD *)(v1 + 248));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100596600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);

  v3 = *(void **)(v1 + 312);
  v2 = *(_QWORD *)(v1 + 320);
  v5 = *(_QWORD *)(v1 + 296);
  v4 = *(_QWORD *)(v1 + 304);
  v30 = *(_QWORD *)(v1 + 248);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 280);
  v6 = *(_QWORD *)(v1 + 224);
  swift_willThrow(a1);

  v8 = static os_log_type_t.error.getter(v7);
  v9 = (void *)static OS_os_log.readingActivity.getter();
  v10 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  swift_getErrorValue(v2, v1 + 168, v1 + 120);
  v11 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = v4;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Error when notifying Book Data Store that reading history data was moved: %{public}", 83, 2, v10);
  swift_bridgeObjectRelease(v10);

  swift_errorRelease(v2);
  v13 = v31(v30, v6);
  v15 = *(void **)(v1 + 256);
  v14 = *(void **)(v1 + 264);
  v16 = static os_log_type_t.default.getter(v13);
  sub_100009B88();
  v17 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v16, &_mh_execute_header, v17, "Migration done! Setting success key", 35, 2, _swiftEmptyArrayStorage);

  v18 = objc_msgSend(v15, "books");
  v19 = objc_msgSend(v18, "userDefaults");

  v20 = objc_msgSend(v14, "dataHasBeenMovedUserDefaultsKey");
  if (!v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v23 = v22;
    v20 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  v24 = *(void **)(v1 + 272);
  objc_msgSend(v19, "setBool:forKey:", 1, v20, v21, v30, v31);

  v25 = *(_QWORD *)(v1 + 240);
  v27 = *(_QWORD *)(v1 + 208);
  v26 = *(_QWORD *)(v1 + 216);
  v28 = *(_QWORD *)(v1 + 200);
  swift_task_dealloc(*(_QWORD *)(v1 + 248));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_100596830(void *a1)
{
  sub_10059046C(a1);
}

void sub_100596840(char a1, void *a2)
{
  sub_100590844(a1, a2);
}

void sub_100596850(void *a1)
{
  sub_100590B20(a1);
}

double sub_100596858(char a1, void *a2)
{
  return sub_100590D5C(a1, a2);
}

uint64_t sub_100596860()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100596884()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1005968B8(char a1)
{
  uint64_t v1;

  sub_10059101C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void (**)(_QWORD, __n128))(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_1005968CC()
{
  unint64_t result;

  result = qword_1009EC958;
  if (!qword_1009EC958)
  {
    result = swift_getWitnessTable(&unk_10072EAF4, &type metadata for ReadingActivityService.YearlyHistoryProviderError);
    atomic_store(result, (unint64_t *)&qword_1009EC958);
  }
  return result;
}

void sub_100596910(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  char *v4;
  char *v5;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  id v37;
  NSString v38;
  unsigned int v39;
  double v40;
  id v41;
  id v42;
  double v43;
  char *v44;
  void *v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  id v48;
  id v49;
  double v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  void *v54;
  void *v55;
  char *v56;
  id v57;
  id v58;
  char *v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  NSString v70;
  id v71;
  uint64_t v72;
  char v73[128];
  _QWORD aBlock[3];
  void *v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  char v78;
  _BYTE v79[40];
  char v80[40];

  v5 = v4;
  if ((a4 & 2) != 0)
  {
    v9 = *(void **)&v4[OBJC_IVAR___BKReadingActivityService_engagementManager];
    if (v9)
    {
      v10 = v9;
      sub_10030C30C((unsigned __int16)objc_msgSend(a3, "contentType") | 0x10000, 1);

    }
  }
  v11 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v12 = objc_msgSend(v11, "currentAudiobook");

  if (v12)
  {
    v14 = v5;
    v15 = a2;
    v16 = objc_msgSend(a3, "assetID");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v20 = objc_msgSend(v12, "assetID");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    if (v17 == v21 && v19 == v23)
    {
      swift_bridgeObjectRelease_n(v19, 2);
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      if ((v25 & 1) == 0)
      {
        swift_unknownObjectRelease(v12);
        a2 = v15;
        v5 = v14;
        goto LABEL_16;
      }
    }
    v5 = v14;
    v26 = *(_QWORD *)&v14[OBJC_IVAR___BKReadingActivityService_engagementManager];
    if (v26)
    {
      v27 = *(void **)(v26 + OBJC_IVAR___BKEngagementManager_eventController);
      v28 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
      inited = swift_initStackObject(v28, v73);
      *(_OWORD *)(inited + 16) = xmmword_10070FC00;
      *(_QWORD *)(inited + 32) = 1196651369;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      v30 = v27;
      *(_BYTE *)(inited + 48) = objc_msgSend(v12, "isSG");
      *(_QWORD *)(inited + 72) = &type metadata for Bool;
      *(_QWORD *)(inited + 80) = 0x746E657665;
      *(_QWORD *)(inited + 120) = &type metadata for String;
      *(_QWORD *)(inited + 88) = 0xE500000000000000;
      *(_QWORD *)(inited + 96) = 0x7472617473;
      *(_QWORD *)(inited + 104) = 0xE500000000000000;
      v31 = sub_10003FB0C(inited);
      dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000010, 0x80000001007D4F70, v31);

      swift_bridgeObjectRelease(v31);
      swift_unknownObjectRelease(v12);
    }
    else
    {
      swift_unknownObjectRelease(v12);
    }
    a2 = v15;
  }
LABEL_16:
  v32 = static os_log_type_t.default.getter(v13);
  sub_100009B88();
  v33 = (void *)static OS_os_log.readingActivity.getter();
  v34 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v35 = swift_allocObject(v34, 72, 7);
  *(_OWORD *)(v35 + 16) = xmmword_10070CCA0;
  v36 = _s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0();
  *(_QWORD *)(v35 + 56) = &type metadata for Bool;
  *(_QWORD *)(v35 + 64) = &protocol witness table for Bool;
  *(_BYTE *)(v35 + 32) = v36 & 1;
  os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Attempting to track reading session, goals enabled: %{public}d", 62, 2, v35);

  swift_bridgeObjectRelease(v35);
  if ((_s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0() & 1) == 0)
    return;
  if (objc_msgSend(a3, "contentType") == 3)
  {
    v37 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v37, "BOOLForKey:", v38);

    if (!v39)
      return;
  }
  v40 = 0.0;
  if (!a2)
  {
    v41 = objc_msgSend((id)objc_opt_self(BCJSConfiguration), "sharedInstance");
    v42 = objc_msgSend(v41, "timeThresholdForOpenEvent");

    objc_msgSend(v42, "doubleValue");
    v40 = v43;

  }
  v44 = &v5[OBJC_IVAR___BKReadingActivityService_historyModule];
  swift_beginAccess(&v5[OBJC_IVAR___BKReadingActivityService_historyModule], v80, 0, 0);
  if (!*((_QWORD *)v44 + 3))
  {
    __break(1u);
    goto LABEL_49;
  }
  sub_10002E418((uint64_t)(v44 + 40), (uint64_t)aBlock);
  v45 = v75;
  v46 = v76;
  sub_10003F198(aBlock, (uint64_t)v75);
  dispatch thunk of ReadingHistoryEventProcessor.sessionStarted(sessionID:delay:)(a1, v45, v46, v40);
  _s5Books15CurrentPageViewVwxx_0(aBlock);
  v47 = *(_QWORD *)&v5[OBJC_IVAR___BKReadingActivityService_achievementsController];
  if (!v47)
  {
LABEL_49:
    __break(1u);
    return;
  }
  swift_retain(*(_QWORD *)&v5[OBJC_IVAR___BKReadingActivityService_achievementsController]);
  dispatch thunk of ReadingAchievementsController.sessionStarted(sessionID:delay:)(a1, v40);
  v48 = objc_msgSend(*(id *)&v5[OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience], "getValue", swift_release(v47).n128_f64[0]);
  if (v48)
  {
    v49 = v48;
    _bridgeAnyObjectToAny(_:)(v48);
    swift_unknownObjectRelease(v49);
  }
  else
  {
    memset(v79, 0, 32);
  }
  sub_100025B3C((uint64_t)v79, (uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
  if (v75)
  {
    if ((swift_dynamicCast(&v78, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
      && (v78 & 1) == 0)
    {
      ReadingActivityService.timeReadToday.getter();
      v50 = 60.0 - v40;
      if (v50 - (double)v51 < 0.0)
        v52 = 0.0;
      else
        v52 = v50 - (double)v51;
      v53 = swift_allocObject(&unk_100911F30, 24, 7);
      *(_QWORD *)(v53 + 16) = v5;
      v76 = sub_10059773C;
      v77 = v53;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001EDBF0;
      v75 = &unk_100911F48;
      v54 = _Block_copy(aBlock);
      v55 = (void *)objc_opt_self(NSTimer);
      v56 = v5;
      v57 = objc_msgSend(v55, "timerWithTimeInterval:repeats:block:", 0, v54, v52);
      _Block_release(v54);
      swift_release(v77);
      v58 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      objc_msgSend(v58, "addTimer:forMode:", v57, NSRunLoopCommonModes);

      v59 = &v56[OBJC_IVAR___BKReadingActivityService_welcomeTimers];
      swift_beginAccess(v59, aBlock, 1, 0);
      if (!*(_QWORD *)v59)
      {
        *(_QWORD *)v59 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(0);
      }
      swift_beginAccess(v59, v79, 33, 0);
      if (*(_QWORD *)v59)
      {
        v60 = v57;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
        v62 = *(_QWORD *)((*(_QWORD *)v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v61 = *(_QWORD *)((*(_QWORD *)v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v62 >= v61 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
        v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
        specialized Array._endMutation()(v63);
        swift_endAccess(v79);

      }
      else
      {
        swift_endAccess(v79);

      }
    }
  }
  else
  {
    sub_100010960((uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
  }
  v64 = objc_msgSend((id)objc_opt_self(BSUITemplate), "manager");
  v65 = objc_msgSend(v64, "dynamicRegistry");

  type metadata accessor for ReadingTimeToday(0);
  static ReadingTimeToday.kind.getter();
  v67 = v66;
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v65, "progressProviderForKind:", v68);

  if (v69)
  {
    swift_unknownObjectRetain(v69);
    v70 = String._bridgeToObjectiveC()();
    v71 = objc_msgSend(v69, "dynamicProgressForKind:instance:parameters:", v70, 0, 0, swift_bridgeObjectRelease(v67).n128_f64[0]);
    swift_unknownObjectRelease(v69);

    if (v71)
    {
      objc_msgSend((id)swift_unknownObjectRetain(v71), "registerProgressObserver:", v5);

      swift_unknownObjectRelease(v71);
    }
    else
    {

    }
    swift_unknownObjectRelease(v69);
  }
  else
  {

    swift_bridgeObjectRelease(v67);
    v71 = 0;
  }
  v72 = *(_QWORD *)&v5[OBJC_IVAR___BKReadingActivityService_readingTimeTodayDynamicProgress];
  *(_QWORD *)&v5[OBJC_IVAR___BKReadingActivityService_readingTimeTodayDynamicProgress] = v71;
  swift_unknownObjectRelease(v72);
}

void sub_100597198(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  double v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[32];

  v4 = v3;
  v8 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v9 = objc_msgSend(v8, "currentAudiobook");

  if (v9)
  {
    v10 = objc_msgSend(a2, "assetID");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = objc_msgSend(v9, "assetID");
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    if (v11 == v15 && v13 == v17)
    {
      swift_bridgeObjectRelease_n(v13, 2);
    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v17, 0);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      if ((v19 & 1) == 0)
      {
LABEL_11:
        swift_unknownObjectRelease(v9);
        goto LABEL_12;
      }
    }
    v20 = *(_QWORD *)(v4 + OBJC_IVAR___BKReadingActivityService_engagementManager);
    if (v20)
    {
      v21 = *(void **)(v20 + OBJC_IVAR___BKEngagementManager_eventController);
      v22 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
      inited = swift_initStackObject(v22, &v42);
      *(_OWORD *)(inited + 16) = xmmword_10070FC00;
      *(_QWORD *)(inited + 32) = 1196651369;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      v24 = v21;
      *(_BYTE *)(inited + 48) = objc_msgSend(v9, "isSG");
      *(_QWORD *)(inited + 72) = &type metadata for Bool;
      *(_QWORD *)(inited + 80) = 0x746E657665;
      *(_QWORD *)(inited + 120) = &type metadata for String;
      *(_QWORD *)(inited + 88) = 0xE500000000000000;
      *(_QWORD *)(inited + 96) = 0x65736F6C63;
      *(_QWORD *)(inited + 104) = 0xE500000000000000;
      v25 = sub_10003FB0C(inited);
      dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000010, 0x80000001007D4F70, v25);

      swift_bridgeObjectRelease(v25);
    }
    goto LABEL_11;
  }
LABEL_12:
  v26 = (uint64_t *)(v4 + OBJC_IVAR___BKReadingActivityService_welcomeTimers);
  swift_beginAccess(v4 + OBJC_IVAR___BKReadingActivityService_welcomeTimers, v47, 0, 0);
  v27 = *v26;
  if (!v27)
    goto LABEL_26;
  if ((unint64_t)v27 >> 62)
  {
    if (v27 >= 0)
      v32 = v27 & 0xFFFFFFFFFFFFFF8;
    else
      v32 = v27;
    swift_bridgeObjectRetain_n(v27, 2);
    v28 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v28)
      goto LABEL_15;
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v27, 2);
    if (v28)
    {
LABEL_15:
      if (v28 < 1)
      {
        __break(1u);
        goto LABEL_35;
      }
      for (i = 0; i != v28; ++i)
      {
        if ((v27 & 0xC000000000000001) != 0)
          v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v27);
        else
          v30 = *(id *)(v27 + 8 * i + 32);
        v31 = v30;
        objc_msgSend(v30, "invalidate");

      }
    }
  }
  swift_bridgeObjectRelease_n(v27, 2);
LABEL_26:
  v33 = v4 + OBJC_IVAR___BKReadingActivityService_historyModule;
  swift_beginAccess(v4 + OBJC_IVAR___BKReadingActivityService_historyModule, v46, 0, 0);
  if (!*(_QWORD *)(v33 + 24))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_10002E418(v33 + 40, (uint64_t)v43);
  v34 = v44;
  v35 = v45;
  sub_10003F198(v43, v44);
  dispatch thunk of ReadingHistoryEventProcessor.sessionEnded(sessionID:)(a1, v34, v35);
  _s5Books15CurrentPageViewVwxx_0(v43);
  v36 = *(_QWORD *)(v4 + OBJC_IVAR___BKReadingActivityService_achievementsController);
  if (!v36)
  {
LABEL_36:
    __break(1u);
    return;
  }
  v37 = swift_retain(*(_QWORD *)(v4 + OBJC_IVAR___BKReadingActivityService_achievementsController));
  dispatch thunk of ReadingAchievementsController.sessionEnded(sessionID:)(a1, v37);
  *(_QWORD *)&v38 = swift_release(v36).n128_u64[0];
  v39 = *(void **)(v4 + OBJC_IVAR___BKReadingActivityService_readingTimeTodayDynamicProgress);
  if (v39)
    objc_msgSend(v39, "unregisterProgressObserver:", v4, v38);
  if ((a3 & 2) != 0)
  {
    v40 = *(void **)(v4 + OBJC_IVAR___BKReadingActivityService_engagementManager);
    if (v40)
    {
      v41 = v40;
      sub_10030C30C((unsigned __int16)objc_msgSend(a2, "contentType"), 1);

    }
  }
}

unint64_t sub_10059757C()
{
  unint64_t result;

  result = qword_1009EC960;
  if (!qword_1009EC960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ReadingActivityService.NotificationSuppressingEvent, &type metadata for ReadingActivityService.NotificationSuppressingEvent);
    atomic_store(result, (unint64_t *)&qword_1009EC960);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingActivityService.NotificationSuppressingEvent()
{
  return &type metadata for ReadingActivityService.NotificationSuppressingEvent;
}

uint64_t _s5Books22ReadingActivityServiceC28NotificationSuppressingEventOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100597620 + 4 * byte_10072E955[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100597654 + 4 * byte_10072E950[v4]))();
}

uint64_t sub_100597654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10059765C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100597664);
  return result;
}

uint64_t sub_100597670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100597678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10059767C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100597684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingActivityService.YearlyHistoryProviderError()
{
  return &type metadata for ReadingActivityService.YearlyHistoryProviderError;
}

unint64_t sub_1005976A4()
{
  unint64_t result;

  result = qword_1009EC9F8;
  if (!qword_1009EC9F8)
  {
    result = swift_getWitnessTable(&unk_10072EACC, &type metadata for ReadingActivityService.YearlyHistoryProviderError);
    atomic_store(result, &qword_1009EC9F8);
  }
  return result;
}

uint64_t sub_1005976EC(uint64_t a1)
{
  uint64_t v1;

  return sub_10058F8EC(a1, *(_QWORD *)(v1 + 16), &qword_1009CEEE0, (uint64_t (*)(_QWORD))&type metadata accessor for ReadingHistory.State);
}

uint64_t sub_100597714(uint64_t a1)
{
  uint64_t v1;

  return sub_10058F8EC(a1, *(_QWORD *)(v1 + 16), &qword_1009ECA60, (uint64_t (*)(_QWORD))&type metadata accessor for BooksFinished.State);
}

void sub_10059773C(uint64_t a1)
{
  uint64_t v1;

  sub_100592EA4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100597744()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100597768(uint64_t a1)
{
  uint64_t v1;

  return sub_100592FC8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100597770()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100597794(char a1)
{
  uint64_t v1;
  JSValue v2;

  v2.super.isa = *(Class *)(v1 + 16);
  return sub_100590DC0(a1, v2, (void *)0x1FE);
}

double sub_1005977B0(char a1)
{
  uint64_t v1;
  JSValue v2;

  v2.super.isa = *(Class *)(v1 + 16);
  return sub_100590DC0(a1, v2, (void *)0x1F3);
}

double sub_1005977D0(char a1)
{
  uint64_t v1;
  JSValue v2;

  v2.super.isa = *(Class *)(v1 + 16);
  return sub_100590DC0(a1, v2, (void *)0x1E7);
}

uint64_t sub_1005977F0()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100597824(uint64_t a1)
{
  uint64_t v1;

  return sub_1005910EC(a1, *(void (**)(uint64_t, __n128))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

double sub_100597834(char a1)
{
  uint64_t v1;
  JSValue v2;

  v2.super.isa = *(Class *)(v1 + 16);
  return sub_100590DC0(a1, v2, (void *)0x1DB);
}

uint64_t sub_10059785C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100597888()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1009ECA04);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  v2 = (_QWORD *)swift_task_alloc(dword_1009ECA0C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1001FC2C4;
  return sub_100595994();
}

uint64_t sub_100597994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  id v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v56[24];
  uint64_t v57;

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v56[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v56[-v7];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v56[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v56[-v14];
  switch(a1)
  {
    case 0:
      v16 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
      static Locale.current.getter(v16);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v17 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v19, v6, "Off", 3, 2);
      goto LABEL_14;
    case 1:
      v32 = String.LocalizationValue.init(stringLiteral:)(0x6574756E696D2035, 0xE900000000000073);
      static Locale.current.getter(v32);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v33 = type metadata accessor for BundleFinder();
      v34 = swift_getObjCClassFromMetadata(v33);
      v35 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v34);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v35, v6, "5 minutes", 9, 2);
      goto LABEL_14;
    case 2:
      v26 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203031, 0xEA00000000007365);
      static Locale.current.getter(v26);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v27 = type metadata accessor for BundleFinder();
      v28 = swift_getObjCClassFromMetadata(v27);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v28);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "10 minutes";
      goto LABEL_9;
    case 3:
      v29 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203531, 0xEA00000000007365);
      static Locale.current.getter(v29);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v30 = type metadata accessor for BundleFinder();
      v31 = swift_getObjCClassFromMetadata(v30);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v31);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "15 minutes";
      goto LABEL_9;
    case 4:
      v21 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203033, 0xEA00000000007365);
      static Locale.current.getter(v21);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v22 = type metadata accessor for BundleFinder();
      v23 = swift_getObjCClassFromMetadata(v22);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v23);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "30 minutes";
      goto LABEL_9;
    case 5:
      v40 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203534, 0xEA00000000007365);
      static Locale.current.getter(v40);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v41 = type metadata accessor for BundleFinder();
      v42 = swift_getObjCClassFromMetadata(v41);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v42);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "45 minutes";
LABEL_9:
      v43 = v13;
      v44 = v24;
      v45 = v6;
      v46 = 10;
      goto LABEL_13;
    case 6:
      v47 = String.LocalizationValue.init(stringLiteral:)(0x72756F682031, 0xE600000000000000);
      static Locale.current.getter(v47);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v48 = type metadata accessor for BundleFinder();
      v49 = swift_getObjCClassFromMetadata(v48);
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v49);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "1 hour";
      goto LABEL_12;
    case 7:
      v36 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C5A00);
      static Locale.current.getter(v36);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v37 = type metadata accessor for BundleFinder();
      v38 = swift_getObjCClassFromMetadata(v37);
      v39 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v38);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v39, v6, "When current chapter ends", 25, 2);
      goto LABEL_14;
    case 8:
      v51 = String.LocalizationValue.init(stringLiteral:)(0x6D6F74737543, 0xE600000000000000);
      static Locale.current.getter(v51);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v52 = type metadata accessor for BundleFinder();
      v53 = swift_getObjCClassFromMetadata(v52);
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v53);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v25 = "Custom";
LABEL_12:
      v43 = v13;
      v44 = v50;
      v45 = v6;
      v46 = 6;
LABEL_13:
      v20 = String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v44, v45, v25, v46, 2);
LABEL_14:
      v54 = v20;
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
      return v54;
    default:
      v57 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AudiobookNowPlayingSleepTimerOption, &v57, &type metadata for AudiobookNowPlayingSleepTimerOption, &type metadata for Int);
      __break(1u);
      JUMPOUT(0x100598094);
  }
}

unint64_t sub_1005980B8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100598300(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1005980E8(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFE20;
}

uint64_t sub_1005980F8()
{
  uint64_t v0;

  sub_1001FE9A0(v0 + 16);
  sub_1001FE9A0(v0 + 24);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for AudiobookPlayerExternalDelegates()
{
  return objc_opt_self(_TtC5Books32AudiobookPlayerExternalDelegates);
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingSleepTimerOption()
{
  return &type metadata for AudiobookNowPlayingSleepTimerOption;
}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlayingDownloadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005981A0 + 4 * byte_10072EB95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005981D4 + 4 * byte_10072EB90[v4]))();
}

uint64_t sub_1005981D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005981DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005981E4);
  return result;
}

uint64_t sub_1005981F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005981F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005981FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100598204(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingDownloadState()
{
  return &type metadata for AudiobookNowPlayingDownloadState;
}

unint64_t sub_100598224()
{
  unint64_t result;

  result = qword_1009ECBF0;
  if (!qword_1009ECBF0)
  {
    result = swift_getWitnessTable(&unk_10072EEAC, &type metadata for AudiobookNowPlayingDownloadState);
    atomic_store(result, (unint64_t *)&qword_1009ECBF0);
  }
  return result;
}

unint64_t sub_10059826C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ECBF8;
  if (!qword_1009ECBF8)
  {
    v1 = sub_100030B74(&qword_1009ECC00);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009ECBF8);
  }
  return result;
}

unint64_t sub_1005982BC()
{
  unint64_t result;

  result = qword_1009ECC08;
  if (!qword_1009ECC08)
  {
    result = swift_getWitnessTable(&unk_10072EF84, &type metadata for AudiobookNowPlayingSleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009ECC08);
  }
  return result;
}

unint64_t sub_100598300(unint64_t result)
{
  if (result > 8)
    return 0;
  return result;
}

uint64_t sub_100598310()
{
  return sub_1001EECBC((uint64_t)&unk_10072F588, (uint64_t)&unk_10072F5B0);
}

uint64_t sub_100598324()
{
  return sub_1001EECBC((uint64_t)&unk_10072F540, (uint64_t)&unk_10072F568);
}

unint64_t sub_10059833C()
{
  unint64_t result;

  result = qword_1009ECC10;
  if (!qword_1009ECC10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BuyButtonViewState, &type metadata for BuyButtonViewState);
    atomic_store(result, (unint64_t *)&qword_1009ECC10);
  }
  return result;
}

ValueMetadata *type metadata accessor for BuyButtonViewState()
{
  return &type metadata for BuyButtonViewState;
}

uint64_t sub_100598394()
{
  return sub_1001EF2E8((uint64_t)&unk_10072F4F8, (uint64_t)&unk_10072F520);
}

uint64_t sub_1005983A8()
{
  return sub_1001EF2E8((uint64_t)&unk_10072F4B0, (uint64_t)&unk_10072F4D8);
}

double sub_1005983BC()
{
  return sub_1001EED38((uint64_t)&unk_10072F468, (uint64_t)&unk_10072F490);
}

uint64_t sub_1005983D0()
{
  return sub_1001EECBC((uint64_t)&unk_10072F420, (uint64_t)&unk_10072F448);
}

uint64_t sub_1005983E4()
{
  return sub_1001EECBC((uint64_t)&unk_10072F3D8, (uint64_t)&unk_10072F400);
}

uint64_t sub_1005983F8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072F390);
  v2 = swift_getKeyPath(&unk_10072F3B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100598468()
{
  return sub_1001EEA54((uint64_t)&unk_10072F348, (uint64_t)&unk_10072F370);
}

uint64_t sub_10059847C()
{
  return sub_1001EEA54((uint64_t)&unk_10072F300, (uint64_t)&unk_10072F328);
}

uint64_t sub_100598490()
{
  return sub_1001EEA54((uint64_t)&unk_10072F2B8, (uint64_t)&unk_10072F2E0);
}

uint64_t sub_1005984A4()
{
  return sub_1001EEA54((uint64_t)&unk_10072F270, (uint64_t)&unk_10072F298);
}

double sub_1005984B8()
{
  return sub_1001EED38((uint64_t)&unk_10072F228, (uint64_t)&unk_10072F250);
}

uint64_t sub_1005984CC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072F1E0);
  v2 = swift_getKeyPath(&unk_10072F208);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10059853C()
{
  return sub_1001EECBC((uint64_t)&unk_10072F198, (uint64_t)&unk_10072F1C0);
}

double sub_100598550()
{
  return sub_1001EED38((uint64_t)&unk_10072F150, (uint64_t)&unk_10072F178);
}

uint64_t sub_100598564()
{
  return sub_1001EEA54((uint64_t)&unk_10072F108, (uint64_t)&unk_10072F130);
}

uint64_t sub_100598578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = sub_10004CFD4(&qword_1009ED128);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D19E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__compactPrice;
  v28 = 0;
  v29 = 0;
  v10 = sub_10004CFD4(&qword_1009D2A80);
  Published.init(initialValue:)(&v28, v10);
  v11 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v11(v9, v8, v5);
  v12 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__frameColor;
  v28 = 0;
  v13 = sub_10004CFD4(&qword_1009DD458);
  Published.init(initialValue:)(&v28, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v12, v4, v1);
  v14 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__imageName;
  v28 = 0;
  v29 = 0;
  Published.init(initialValue:)(&v28, v10);
  v11(v14, v8, v5);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__price, &v28, 33, 0);
  v26 = 0;
  v27 = 0xE000000000000000;
  Published.init(initialValue:)(&v26, &type metadata for String);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__viewState, &v28, 33, 0);
  LOBYTE(v26) = 0;
  Published.init(initialValue:)(&v26, &type metadata for BuyButtonViewState);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__downloadProgress, &v28, 33, 0);
  v26 = 0;
  Published.init(initialValue:)(&v26, &type metadata for CGFloat);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__enabled, &v28, 33, 0);
  LOBYTE(v26) = 0;
  Published.init(initialValue:)(&v26, &type metadata for Bool);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__kind, &v28, 33, 0);
  LOBYTE(v26) = 0;
  Published.init(initialValue:)(&v26, &type metadata for BuyButtonViewModel.Kind);
  v15 = swift_endAccess(&v28);
  v16 = static Color.clear.getter(v15);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__normalForegroundColor, &v28, 33, 0);
  v26 = v16;
  Published.init(initialValue:)(&v26, &type metadata for Color);
  v17 = swift_endAccess(&v28);
  v18 = static Color.clear.getter(v17);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__disabledForegroundColor, &v28, 33, 0);
  v26 = v18;
  Published.init(initialValue:)(&v26, &type metadata for Color);
  v19 = swift_endAccess(&v28);
  v20 = static Color.clear.getter(v19);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__normalBackgroundColor, &v28, 33, 0);
  v26 = v20;
  Published.init(initialValue:)(&v26, &type metadata for Color);
  v21 = swift_endAccess(&v28);
  v22 = static Color.clear.getter(v21);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__disabledBackgroundColor, &v28, 33, 0);
  v26 = v22;
  Published.init(initialValue:)(&v26, &type metadata for Color);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__frameWidth, &v28, 33, 0);
  v26 = 0;
  Published.init(initialValue:)(&v26, &type metadata for CGFloat);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__buttonCornerRadius, &v28, 33, 0);
  v26 = 0;
  Published.init(initialValue:)(&v26, &type metadata for CGFloat);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__bkaxAccessibilityLabel, &v28, 33, 0);
  v26 = 0;
  v27 = 0xE000000000000000;
  Published.init(initialValue:)(&v26, &type metadata for String);
  swift_endAccess(&v28);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__bkaxAccessibilityValue, &v28, 33, 0);
  v26 = 0;
  v27 = 0xE000000000000000;
  Published.init(initialValue:)(&v26, &type metadata for String);
  swift_endAccess(&v28);
  v23 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__progressColor, &v28, 33, 0);
  v26 = v23;
  Published.init(initialValue:)(&v26, &type metadata for Color);
  swift_endAccess(&v28);
  return v0;
}

uint64_t sub_100598A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v1 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__price;
  v2 = sub_10004CFD4(&qword_1009D19E0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__compactPrice;
  v5 = sub_10004CFD4(&qword_1009D19E8);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__kind;
  v8 = sub_10004CFD4(&qword_1009ED120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__viewState;
  v10 = sub_10004CFD4(&qword_1009E2E88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__downloadProgress;
  v12 = sub_10004CFD4(&qword_1009E0EC0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v3(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__bkaxAccessibilityValue, v2);
  v3(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__bkaxAccessibilityLabel, v2);
  v14 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__enabled;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__normalForegroundColor;
  v17 = sub_10004CFD4(&qword_1009E0EB8);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
  v18(v16, v17);
  v18(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__disabledForegroundColor, v17);
  v18(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__normalBackgroundColor, v17);
  v18(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__disabledBackgroundColor, v17);
  v13(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__frameWidth, v12);
  v19 = v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__frameColor;
  v20 = sub_10004CFD4(&qword_1009ED128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v6(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__imageName, v5);
  v13(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__buttonCornerRadius, v12);
  v18(v0 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__progressColor, v17);
  return v0;
}

uint64_t sub_100598CD8()
{
  uint64_t v0;

  sub_100598A80();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100598CFC()
{
  return type metadata accessor for BuyButtonViewModel(0);
}

uint64_t type metadata accessor for BuyButtonViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009ECCC8;
  if (!qword_1009ECCC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BuyButtonViewModel);
  return result;
}

void sub_100598D40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[17];

  sub_1001F1000(319, &qword_1009D1810, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v22[0] = v4;
    sub_1001F1044(319, (unint64_t *)&unk_1009D1800, &qword_1009D2A80);
    if (v6 <= 0x3F)
    {
      v7 = *(_QWORD *)(v5 - 8) + 64;
      v22[1] = v7;
      sub_1001F1000(319, &qword_1009ECCD8, (uint64_t)&type metadata for BuyButtonViewModel.Kind);
      if (v9 <= 0x3F)
      {
        v22[2] = *(_QWORD *)(v8 - 8) + 64;
        sub_1001F1000(319, &qword_1009ECCE0, (uint64_t)&type metadata for BuyButtonViewState);
        if (v11 <= 0x3F)
        {
          v22[3] = *(_QWORD *)(v10 - 8) + 64;
          sub_1001F1000(319, &qword_1009E0FB0, (uint64_t)&type metadata for CGFloat);
          if (v13 <= 0x3F)
          {
            v14 = *(_QWORD *)(v12 - 8) + 64;
            v22[4] = v14;
            v22[5] = v4;
            v22[6] = v4;
            sub_1001F1000(319, (unint64_t *)&qword_1009D1850, (uint64_t)&type metadata for Bool);
            if (v16 <= 0x3F)
            {
              v22[7] = *(_QWORD *)(v15 - 8) + 64;
              sub_1001F1000(319, &qword_1009E0FB8, (uint64_t)&type metadata for Color);
              if (v18 <= 0x3F)
              {
                v19 = *(_QWORD *)(v17 - 8) + 64;
                v22[8] = v19;
                v22[9] = v19;
                v22[10] = v19;
                v22[11] = v19;
                v22[12] = v14;
                sub_1001F1044(319, (unint64_t *)&unk_1009ECCE8, &qword_1009DD458);
                if (v21 <= 0x3F)
                {
                  v22[13] = *(_QWORD *)(v20 - 8) + 64;
                  v22[14] = v7;
                  v22[15] = v14;
                  v22[16] = v19;
                  swift_updateClassMetadata2(a1, 256, 17, v22, a1 + 80);
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t _s5Books18BuyButtonViewModelC4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100598F50 + 4 * byte_10072EFB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100598F84 + 4 * byte_10072EFB0[v4]))();
}

uint64_t sub_100598F84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100598F8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100598F94);
  return result;
}

uint64_t sub_100598FA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100598FA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100598FAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100598FB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BuyButtonViewModel.Kind()
{
  return &type metadata for BuyButtonViewModel.Kind;
}

unint64_t sub_100598FD4()
{
  unint64_t result;

  result = qword_1009ED118;
  if (!qword_1009ED118)
  {
    result = swift_getWitnessTable(&unk_10072F0A8, &type metadata for BuyButtonViewModel.Kind);
    atomic_store(result, (unint64_t *)&qword_1009ED118);
  }
  return result;
}

uint64_t sub_100599018@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for BuyButtonViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100599054@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F588, (uint64_t)&unk_10072F5B0, a2);
}

uint64_t sub_100599068(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F588, (uint64_t)&unk_10072F5B0);
}

uint64_t sub_10059907C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_10072F4B0, (uint64_t)&unk_10072F4D8, a2);
}

uint64_t sub_100599090(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1005991E0(a1, a2, a3, a4, (uint64_t)&unk_10072F4B0, (uint64_t)&unk_10072F4D8);
}

double sub_1005990A4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F468, (uint64_t)&unk_10072F490, a2);
}

uint64_t sub_1005990B8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F468, (uint64_t)&unk_10072F490);
}

uint64_t sub_1005990CC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072F390);
  v5 = swift_getKeyPath(&unk_10072F3B8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100599148(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072F390);
  v5 = swift_getKeyPath(&unk_10072F3B8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005991B8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_10072F4F8, (uint64_t)&unk_10072F520, a2);
}

uint64_t sub_1005991CC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1005991E0(a1, a2, a3, a4, (uint64_t)&unk_10072F4F8, (uint64_t)&unk_10072F520);
}

uint64_t sub_1005991E0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_10059924C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F348, (uint64_t)&unk_10072F370, a2);
}

uint64_t sub_100599260(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F348, (uint64_t)&unk_10072F370);
}

uint64_t sub_100599274@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F300, (uint64_t)&unk_10072F328, a2);
}

uint64_t sub_100599288(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F300, (uint64_t)&unk_10072F328);
}

uint64_t sub_10059929C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F2B8, (uint64_t)&unk_10072F2E0, a2);
}

uint64_t sub_1005992B0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F2B8, (uint64_t)&unk_10072F2E0);
}

uint64_t sub_1005992C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F270, (uint64_t)&unk_10072F298, a2);
}

uint64_t sub_1005992D8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F270, (uint64_t)&unk_10072F298);
}

double sub_1005992EC@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F228, (uint64_t)&unk_10072F250, a2);
}

uint64_t sub_100599300(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F228, (uint64_t)&unk_10072F250);
}

double sub_100599314@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F150, (uint64_t)&unk_10072F178, a2);
}

uint64_t sub_100599328(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F150, (uint64_t)&unk_10072F178);
}

uint64_t sub_10059933C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1005993B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F3D8, (uint64_t)&unk_10072F400, a2);
}

uint64_t sub_1005993C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F3D8, (uint64_t)&unk_10072F400);
}

uint64_t sub_1005993D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F420, (uint64_t)&unk_10072F448, a2);
}

uint64_t sub_1005993EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[2];

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(v11, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  v10 = v11[1];
  *a4 = v11[0];
  a4[1] = v10;
  return result;
}

uint64_t sub_100599464(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F420, (uint64_t)&unk_10072F448);
}

uint64_t sub_100599478(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v8 = *a1;
  v7 = a1[1];
  v9 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v11 = swift_getKeyPath(a6);
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, KeyPath, v11);
}

uint64_t sub_1005994F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F108, (uint64_t)&unk_10072F130, a2);
}

uint64_t sub_100599508@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F108, (uint64_t)&unk_10072F130, a2);
}

uint64_t sub_10059952C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F108, (uint64_t)&unk_10072F130);
}

uint64_t sub_100599540(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v7);
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1005995B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F108, (uint64_t)&unk_10072F130);
}

double sub_1005995D8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F150, (uint64_t)&unk_10072F178, a2);
}

uint64_t sub_1005995FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F150, (uint64_t)&unk_10072F178);
}

double sub_100599620@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_100599750(a1, (uint64_t)&unk_10072F540, (uint64_t)&unk_10072F568, a2);
}

uint64_t sub_100599634(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F540, (uint64_t)&unk_10072F568);
}

uint64_t sub_100599648@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072F1E0);
  v5 = swift_getKeyPath(&unk_10072F208);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005996C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072F1E0);
  v5 = swift_getKeyPath(&unk_10072F208);
  v7 = v2;
  swift_retain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_10059973C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_100599750(a1, (uint64_t)&unk_10072F198, (uint64_t)&unk_10072F1C0, a2);
}

double sub_100599750@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  __int128 v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  result = *(double *)&v10;
  *a4 = v10;
  return result;
}

double sub_1005997C8@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_100599750(a1, (uint64_t)&unk_10072F198, (uint64_t)&unk_10072F1C0, a2);
}

uint64_t sub_1005997EC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F198, (uint64_t)&unk_10072F1C0);
}

uint64_t sub_100599800(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F198, (uint64_t)&unk_10072F1C0);
}

double sub_10059982C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F228, (uint64_t)&unk_10072F250, a2);
}

uint64_t sub_100599850(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F228, (uint64_t)&unk_10072F250);
}

uint64_t sub_100599874@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F270, (uint64_t)&unk_10072F298, a2);
}

uint64_t sub_100599898(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F270, (uint64_t)&unk_10072F298);
}

uint64_t sub_1005998BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F2B8, (uint64_t)&unk_10072F2E0, a2);
}

uint64_t sub_1005998E0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F2B8, (uint64_t)&unk_10072F2E0);
}

uint64_t sub_100599904@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F300, (uint64_t)&unk_10072F328, a2);
}

uint64_t sub_100599928(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F300, (uint64_t)&unk_10072F328);
}

uint64_t sub_10059994C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_10072F348, (uint64_t)&unk_10072F370, a2);
}

uint64_t sub_100599970(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599540(a1, a2, a3, a4, (uint64_t)&unk_10072F348, (uint64_t)&unk_10072F370);
}

uint64_t sub_10059999C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F3D8, (uint64_t)&unk_10072F400, a2);
}

uint64_t sub_1005999C0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F3D8, (uint64_t)&unk_10072F400);
}

uint64_t sub_1005999E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F420, (uint64_t)&unk_10072F448, a2);
}

uint64_t sub_100599A08(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F420, (uint64_t)&unk_10072F448);
}

double sub_100599A2C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_10072F468, (uint64_t)&unk_10072F490, a2);
}

uint64_t sub_100599A50(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10059933C(a1, a2, a3, a4, (uint64_t)&unk_10072F468, (uint64_t)&unk_10072F490);
}

uint64_t sub_100599A74@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_10072F4B0, (uint64_t)&unk_10072F4D8, a2);
}

uint64_t sub_100599A98(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1005991E0(a1, a2, a3, a4, (uint64_t)&unk_10072F4B0, (uint64_t)&unk_10072F4D8);
}

uint64_t sub_100599ABC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_10072F4F8, (uint64_t)&unk_10072F520, a2);
}

uint64_t sub_100599AE0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1005991E0(a1, a2, a3, a4, (uint64_t)&unk_10072F4F8, (uint64_t)&unk_10072F520);
}

double sub_100599B04@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_100599750(a1, (uint64_t)&unk_10072F540, (uint64_t)&unk_10072F568, a2);
}

uint64_t sub_100599B28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F540, (uint64_t)&unk_10072F568);
}

uint64_t sub_100599B4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_10072F588, (uint64_t)&unk_10072F5B0, a2);
}

uint64_t sub_100599B70(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_10072F588, (uint64_t)&unk_10072F5B0);
}

id sub_100599B94@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKReadingGoalsShouldClearDataKey");
  *a2 = (_BYTE)result;
  return result;
}

id sub_100599BC4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKReadingGoalsShouldClearDataKey:", *a1);
}

Swift::Void __swiftcall NSUserDefaults.set(_:forKey:)(Swift::OpaquePointer_optional _, Swift::String forKey)
{
  void *v2;
  NSDictionary v3;
  id v4;

  if (_.value._rawValue)
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setValue:forKey:", v3.super.isa, v4);
  swift_unknownObjectRelease(v3.super.isa);

}

void sub_100599C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v37;
  char v38[24];

  v4 = type metadata accessor for Achievement(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - v9;
  a2 += 16;
  swift_beginAccess(a2, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = static os_log_type_t.default.getter(Strong);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.readingActivity.getter();
    v15 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_10070CCA0;
    v17 = _s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0();
    *(_QWORD *)(v16 + 56) = &type metadata for Bool;
    *(_QWORD *)(v16 + 64) = &protocol witness table for Bool;
    *(_BYTE *)(v16 + 32) = v17 & 1;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v14, "Attempting to send reading goals notification, goals enabled: %{public}d", 72, 2, v16);

    swift_bridgeObjectRelease(v16);
    if ((_s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0() & 1) == 0)
    {
LABEL_8:

      return;
    }
    v18 = *(_QWORD *)&v12[OBJC_IVAR___BKReadingActivityService__currentActiveAchievementSheetKind];
    sub_10059A6B0(a1, (uint64_t)v10);
    v19 = *(unsigned __int8 *)(v5 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = (v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_100912598, v21 + 8, v19 | 7);
    sub_10059A798((uint64_t)v10, v22 + v20);
    *(_QWORD *)(v22 + v21) = v18;
    v23 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
    v24 = String._bridgeToObjectiveC()();
    v25 = swift_allocObject(&unk_1009125C0, 49, 7);
    *(_QWORD *)(v25 + 16) = 0xD000000000000029;
    *(_QWORD *)(v25 + 24) = 0x80000001007D4150;
    *(_QWORD *)(v25 + 32) = sub_10059A7DC;
    *(_QWORD *)(v25 + 40) = v22;
    *(_BYTE *)(v25 + 48) = 1;
    aBlock[4] = sub_100069558;
    v37 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100010E84;
    aBlock[3] = &unk_1009125D8;
    v26 = _Block_copy(aBlock);
    v27 = v37;
    swift_retain(v22);
    swift_release(v27);
    objc_msgSend(v23, "fetchMetadataBoolForKey:completion:", v24, v26);
    _Block_release(v26);
    swift_release(v22);

    v29 = Achievement.key.getter(v28);
    LOBYTE(v22) = static Achievement.Key.== infix(_:_:)(v29, 0);
    v30 = sub_10059A6B0(a1, (uint64_t)v8);
    if ((v22 & 1) != 0)
    {
      sub_10036BA60((uint64_t)v8);
    }
    else
    {
      v31 = Achievement.key.getter(v30);
      v32 = static Achievement.Key.== infix(_:_:)(v31, 1);
      sub_10036BA60((uint64_t)v8);
      if ((v32 & 1) == 0)
      {
LABEL_7:
        ReadingHistoryController.handleAchievement(_:)(a1);
        goto LABEL_8;
      }
    }
    v33 = type metadata accessor for ReadingGoalsAnalytics(0);
    v34 = static ReadingGoalsAnalytics.shared.getter(v33);
    dispatch thunk of ReadingGoalsAnalytics.reportGoalReached(tracker:)(0);
    swift_release(v34);
    sub_10058FB98();
    goto LABEL_7;
  }
}

uint64_t sub_100599FB4(char a1)
{
  uint64_t v1;

  v1 = a1 & 1;
  type metadata accessor for AchievementsNotificationController();
  return static AchievementsNotificationController.handleNotificationSuppressingEvent(_:)(v1);
}

uint64_t sub_100599FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = a5;
  return swift_task_switch(sub_100599FFC, 0, 0);
}

uint64_t sub_100599FFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *ObjCClassFromMetadata;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = type metadata accessor for ReadingGoalsServiceClient(0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  v0[7] = v0 + 25;
  v0[2] = v0;
  v0[3] = sub_10059A0A4;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[18] = _NSConcreteStackBlock;
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_100912650;
  v5[4] = v4;
  objc_msgSend(ObjCClassFromMetadata, "clearLocalCachedDataWithCompletionHandler:", v5);
  return swift_continuation_await(v1);
}

uint64_t sub_10059A0A4()
{
  return swift_task_switch(sub_10059A0F0, 0, 0);
}

uint64_t sub_10059A0F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *ObjCClassFromMetadata;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 10;
  v2 = type metadata accessor for ReadingHistoryServiceClient(0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  v0[15] = v0 + 25;
  v0[10] = v0;
  v0[11] = sub_10059A198;
  v4 = swift_continuation_init(v0 + 10, 0);
  v0[18] = _NSConcreteStackBlock;
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_100912668;
  v5[4] = v4;
  objc_msgSend(ObjCClassFromMetadata, "clearDefaultsCachedDataWithCompletionHandler:", v5);
  return swift_continuation_await(v1);
}

uint64_t sub_10059A198()
{
  return swift_task_switch(sub_10059A1E4, 0, 0);
}

uint64_t sub_10059A1E4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 184);
  if (v1)
    v1(1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059A380()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 64, 7);
}

void sub_10059A3AC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;

  v4 = objc_allocWithZone((Class)type metadata accessor for ReadingActivityService());
  ReadingActivityService.init(serviceCenter:)(a1);
  *a2 = v5;
}

uint64_t sub_10059A3F0(char **a1, void *a2, uint64_t a3)
{
  return sub_10003CB4C(*a1, a2, a3);
}

void sub_10059A3F8(uint64_t a1)
{
  void **v1;
  void *v2;
  NSDictionary v3;
  id v4;

  v2 = *v1;
  if (a1)
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setDictionary:forKey:", v3.super.isa, v4);

}

id sub_10059A494(uint64_t a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  swift_getObjectType();
  return sub_10059A698(a1, v3);
}

id sub_10059A4C4(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, "removeSessionObserver:", a1);
}

uint64_t sub_10059A4D8()
{
  return CRDTModelSyncManager.model.getter();
}

uint64_t sub_10059A4F8()
{
  return CRDTModelSyncManager.enableCloudSync.getter() & 1;
}

uint64_t sub_10059A51C()
{
  return CRDTModelSyncManager.enableCloudSync.setter();
}

void (*sub_10059A53C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CRDTModelSyncManager.enableCloudSync.modify();
  return sub_100259864;
}

uint64_t sub_10059A584()
{
  return CRDTModelSyncManager.observable.getter();
}

uint64_t sub_10059A5A4()
{
  return CRDTModelSyncManager.sync(_:)();
}

_UNKNOWN **sub_10059A5C4()
{
  return &protocol witness table for ReadingActivityService;
}

uint64_t sub_10059A5D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10059A5F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10059A620(uint64_t a1)
{
  uint64_t v1;

  sub_100599C6C(a1, *(_QWORD *)(v1 + 16));
}

id sub_10059A628@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKReadingGoalsShouldClearDataKey");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10059A658(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKReadingGoalsShouldClearDataKey:", *a1);
}

uint64_t sub_10059A66C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

id sub_10059A698(uint64_t a1, id a2)
{
  return objc_msgSend(a2, "addSessionObserver:", a1);
}

uint64_t sub_10059A6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059A6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Achievement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = v0 + v4 + *(int *)(sub_10004CFD4(&qword_1009DD7F8) + 48);
    v7 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10059A798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059A7DC(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = type metadata accessor for Achievement(0);
  if ((a1 & 1) != 0)
  {
    v4 = *(_QWORD *)(result - 8);
    v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
    v7 = v1 + v5;
    type metadata accessor for AchievementsNotificationController();
    return static AchievementsNotificationController.notify(_:currentlyShowingSheetKind:)(v7, v6);
  }
  return result;
}

uint64_t sub_10059A848()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10059A874()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10059A8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1009ED23C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1001FC2C4;
  v4[23] = v2;
  v4[24] = v3;
  return swift_task_switch(sub_100599FFC, 0, 0);
}

uint64_t sub_10059A908()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10059A934()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1ECB0);
  sub_100048F64(v0, (uint64_t)qword_100A1ECB0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001DLL, 0x800000010072F7C0);
}

uint64_t sub_10059A9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for Book.MediaType(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v6);
  v3[9] = swift_task_alloc(v6);
  v7 = type metadata accessor for MRequestMetadata(0);
  v3[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[11] = v8;
  v3[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10059AA50, 0, 0);
}

uint64_t sub_10059AA50()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  char v12;
  unint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(int64_t, uint64_t, uint64_t);
  int v31;
  id *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;

  v3 = v1;
  v4 = v1[3];
  v5 = *(_QWORD *)(v4 + 16);
  v6 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5)
  {
    v43 = v1;
    v41 = v1 + 2;
    sub_100045E44(0, v5, 0);
    v7 = _swiftEmptyArrayStorage;
    v8 = sub_1005171E0(v4);
    v10 = v9;
    v12 = v11 & 1;
    v13 = v4 + 56;
    v42 = v4 + 56;
    v40 = v4;
    while ((v8 & 0x8000000000000000) == 0)
    {
      v13 = 1 << *(_BYTE *)(v4 + 32);
      if (v8 >= (uint64_t)v13)
        break;
      v13 = *(_QWORD *)(v42 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8;
      if ((v13 & 1) == 0)
        goto LABEL_21;
      v13 = *(unsigned int *)(v4 + 36);
      if ((_DWORD)v13 != (_DWORD)v10)
        goto LABEL_22;
      *v41 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v8);
      v6 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v2 = v14;
      v16 = _swiftEmptyArrayStorage[2];
      v15 = _swiftEmptyArrayStorage[3];
      v0 = v16 + 1;
      if (v16 >= v15 >> 1)
        sub_100045E44(v15 > 1, v16 + 1, 1);
      v17 = v43[3];
      _swiftEmptyArrayStorage[2] = v0;
      v18 = &_swiftEmptyArrayStorage[2 * v16];
      v18[4] = v6;
      v18[5] = v2;
      v19 = sub_100517284(v8, v10, v12 & 1, v17);
      v8 = v19;
      v10 = (_QWORD *)v20;
      v12 = v21 & 1;
      --v5;
      v4 = v40;
      if (!v5)
      {
        sub_10030A650(v19, v20, v21 & 1);
        v3 = v43;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    sub_100366E78(v13 > 1, (int64_t)v7, 1);
LABEL_18:
    v36 = v10;
    v10[14] = _swiftEmptyArrayStorage;
    v37 = v10[6];
    _swiftEmptyArrayStorage[2] = v7;
    _swiftEmptyArrayStorage[v6 + 4] = v2;
    swift_setDeallocating(v0);
    swift_arrayDestroy(v5, *(_QWORD *)(v0 + 16), v37);
    swift_deallocClassInstance(v0, 32, 7);
    MRequestMetadata.init(_:_:)(0xD000000000000029, 0x80000001007D5470, 33);
    v38 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(authorIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
    v36[15] = v38;
    *v38 = v36;
    v38[1] = sub_10059AE88;
    return MCatalogService.fetch(authorIDs:relationships:views:additionalParameters:batchSize:metadata:)(v43, _swiftEmptyArrayStorage, 0, 0, 150, v36[12]);
  }
LABEL_11:
  v43 = _swiftEmptyArrayStorage;
  v3[13] = _swiftEmptyArrayStorage;
  v22 = v3[8];
  v23 = v3[9];
  v25 = v3[6];
  v24 = v3[7];
  v26 = v3[4];
  v27 = sub_10004CFD4(&qword_1009ED310);
  v28 = *(unsigned __int8 *)(v24 + 80);
  v29 = (v28 + 32) & ~v28;
  v0 = swift_allocObject(v27, v29 + *(_QWORD *)(v24 + 72), v28 | 7);
  *(_OWORD *)(v0 + 16) = xmmword_10070CCA0;
  v5 = v0 + v29;
  v30 = *(void (**)(int64_t, uint64_t, uint64_t))(v24 + 16);
  v30(v5, v26, v25);
  sub_100366E78(0, 1, 0);
  v30(v23, v5, v25);
  v30(v22, v23, v25);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v22, v25);
  if (v31 == enum case for Book.MediaType.ebook(_:))
  {
    v32 = (id *)&BFMCatalogRequestRelationshipBooks;
    goto LABEL_15;
  }
  if (v31 == enum case for Book.MediaType.audiobook(_:))
  {
    v32 = (id *)&BFMCatalogRequestRelationshipAudiobooks;
LABEL_15:
    v33 = v3[9];
    v34 = v3[6];
    v10 = v3;
    v35 = *(void (**)(uint64_t, uint64_t))(v3[7] + 8);
    v2 = *v32;
    v35(v33, v34);
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_100366E78(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v6 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    v7 = (_QWORD *)(v6 + 1);
    if (v6 < v13 >> 1)
      goto LABEL_18;
    goto LABEL_23;
  }
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001007D54A0, "Books/MediaAPIBooksByAuthorsService.swift", 41, 2, 62, 0);
}

uint64_t sub_10059AE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v3[16] = a1;
  v3[17] = v1;
  swift_task_dealloc(v4);
  v6 = v3[13];
  v5 = v3[14];
  (*(void (**)(_QWORD, _QWORD))(v3[11] + 8))(v3[12], v3[10]);
  swift_release(v5);
  swift_bridgeObjectRelease(v6);
  if (v1)
    v7 = sub_10059B12C;
  else
    v7 = sub_10059AF20;
  return swift_task_switch(v7, 0, 0);
}

void sub_10059AF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = v1 + 64;
  v3 = *(_QWORD *)(v1 + 64);
  v22 = _swiftEmptyDictionarySingleton;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & v3;
  v8 = (unint64_t)(63 - v6) >> 6;
  swift_bridgeObjectRetain(v1);
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v23 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v15 = v23;
    sub_10059B7F8((uint64_t)&v22, &v23);
    if (v2)
    {
      v16 = *(_QWORD *)(v0 + 128);
      swift_bridgeObjectRelease(v22);

      swift_release(v16);
      return;
    }

    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v8)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_27;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_27;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_27;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v9 = v12 + 4;
            if (v12 + 4 >= v8)
              goto LABEL_27;
            v13 = *(_QWORD *)(v4 + 8 * v9);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_22:
    v7 = (v13 - 1) & v13;
  }
  v14 = v12 + 5;
  if (v14 >= v8)
  {
LABEL_27:
    v17 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 72);
    swift_release(v17);
    swift_bridgeObjectRelease(v17);
    v21 = v22;
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    (*(void (**)(_QWORD *))(v0 + 8))(v21);
    return;
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_27;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_10059B12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10059B174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  __n128 v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;

  v0 = sub_10004CFD4(&qword_1009DAC00);
  __chkstk_darwin(v0);
  v45 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Book(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v49 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (char *)&v43 - v6;
  v7 = type metadata accessor for Book.MediaType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Book.MediaType.allCases.getter(v9);
  v51 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(v12 + 16);
  v47 = v2;
  if (v13)
  {
    v43 = v12;
    v44 = v3;
    v14 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v15 = enum case for Book.MediaType.ebook(_:);
    LODWORD(v48) = enum case for Book.MediaType.audiobook(_:);
    v16 = *(_QWORD *)(v8 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v17(v11, v14, v7);
    while (1)
    {
      v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
      v25 = (void **)&BFMCatalogRequestRelationshipBooks;
      if (v23 != v15)
      {
        v25 = (void **)&BFMCatalogRequestRelationshipAudiobooks;
        if (v23 != (_DWORD)v48)
          break;
      }
      v18 = *v25;
      v19 = type metadata accessor for MResource(0, v24);
      v20 = v18;
      v21 = MResource.resources<A>(for:)(v20, v19);

      if (v21)
        v22 = (_QWORD *)v21;
      else
        v22 = _swiftEmptyArrayStorage;
      sub_100375E40((uint64_t)v22);
      v14 += v16;
      if (!--v13)
        goto LABEL_11;
      v17(v11, v14, v7);
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001007D54A0, "Books/MediaAPIBooksByAuthorsService.swift", 41, 2, 62, 0);
    __break(1u);
LABEL_11:
    swift_bridgeObjectRelease(v43);
    v26 = (uint64_t)v51;
    v2 = v47;
    v3 = v44;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v26 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v27 = (uint64_t)v45;
  if (!((unint64_t)v26 >> 62))
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
    if (v28)
      goto LABEL_15;
LABEL_32:
    swift_bridgeObjectRelease_n(v26, 2);
    return;
  }
  if (v26 < 0)
    v42 = v26;
  else
    v42 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v28 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v28)
    goto LABEL_32;
LABEL_15:
  if (v28 >= 1)
  {
    v29 = 0;
    v30 = _swiftEmptyArrayStorage;
    v48 = v26 & 0xC000000000000001;
    v50 = v26;
    do
    {
      if (v48)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v26);
      else
        v31 = *(id *)(v26 + 8 * v29 + 32);
      v32 = v31;
      v33 = dispatch thunk of MResource.underlyingJSON.getter();
      sub_1004EE91C(v33);
      v35 = v34;
      swift_bridgeObjectRelease(v33);
      sub_100324BB8(v35, v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v27, 0, 1, v2);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v27, 1, v2) == 1)
      {
        sub_10059BD4C(v27);
      }
      else
      {
        v36 = v3;
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
        v38 = v46;
        v37(v46, v27, v2);
        v37(v49, (uint64_t)v38, v2);
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
          v30 = (_QWORD *)sub_1005B1034(0, v30[2] + 1, 1, (unint64_t)v30);
        v40 = v30[2];
        v39 = v30[3];
        if (v40 >= v39 >> 1)
          v30 = (_QWORD *)sub_1005B1034(v39 > 1, v40 + 1, 1, (unint64_t)v30);
        v30[2] = v40 + 1;
        v41 = (unint64_t)v30
            + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
            + *(_QWORD *)(v36 + 72) * v40;
        v2 = v47;
        v37((char *)v41, (uint64_t)v49, v47);
        v3 = v36;
      }
      ++v29;
      v26 = v50;
    }
    while (v28 != v29);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_10059B698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books29MediaAPIBooksByAuthorsService_catalogService;
  v2 = type metadata accessor for MCatalogService(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10059B6E8()
{
  return type metadata accessor for MediaAPIBooksByAuthorsService(0);
}

uint64_t type metadata accessor for MediaAPIBooksByAuthorsService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009ED278;
  if (!qword_1009ED278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MediaAPIBooksByAuthorsService);
  return result;
}

uint64_t sub_10059B72C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for MCatalogService(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10059B798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009ED30C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100326424;
  return sub_10059A9B4(a1, a2);
}

void sub_10059B7F8(uint64_t a1, void **a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  char v47;
  uint64_t v48[2];
  uint64_t v49;
  uint64_t v50;

  v3 = sub_10004CFD4(&qword_1009E8A38);
  __chkstk_darwin(v3);
  v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  sub_10059B174();
  v8 = v7;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease(v7);
    return;
  }
  v9 = MResource.id.getter(v7);
  v11 = v10;
  v12 = HIBYTE(v10) & 0xF;
  v13 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = v12;
  else
    v14 = v9 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    if ((v11 & 0x1000000000000000) != 0)
    {
      v16 = sub_1003277FC(v9, v11, 10);
      v18 = v47;
      goto LABEL_39;
    }
    if ((v11 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0)
        v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v9, v11);
      v16 = (uint64_t)sub_1003276EC(v15, v13, 10);
      v18 = v17 & 1;
      goto LABEL_39;
    }
    v48[0] = v9;
    v48[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (v12)
      {
        if (v12 != 1 && (BYTE1(v9) - 48) <= 9u)
        {
          v16 = (BYTE1(v9) - 48);
          if (v12 == 2)
            goto LABEL_38;
          if ((BYTE2(v9) - 48) <= 9u)
          {
            v16 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
            v22 = v12 - 3;
            if (v22)
            {
              v23 = (unsigned __int8 *)v48 + 3;
              while (1)
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  goto LABEL_35;
                if (!is_mul_ok(v16, 0xAuLL))
                  goto LABEL_35;
                v20 = __CFADD__(10 * v16, v24);
                v16 = 10 * v16 + v24;
                if (v20)
                  goto LABEL_35;
                v18 = 0;
                ++v23;
                if (!--v22)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (v9 != 45)
      {
        if (v12 && (v9 - 48) <= 9u)
        {
          v16 = (v9 - 48);
          if (v12 == 1)
            goto LABEL_38;
          if ((BYTE1(v9) - 48) <= 9u)
          {
            v16 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
            v39 = v12 - 2;
            if (v39)
            {
              v40 = (unsigned __int8 *)v48 + 2;
              while (1)
              {
                v41 = *v40 - 48;
                if (v41 > 9)
                  goto LABEL_35;
                if (!is_mul_ok(v16, 0xAuLL))
                  goto LABEL_35;
                v20 = __CFADD__(10 * v16, v41);
                v16 = 10 * v16 + v41;
                if (v20)
                  goto LABEL_35;
                v18 = 0;
                ++v40;
                if (!--v39)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
LABEL_35:
        v16 = 0;
LABEL_36:
        v18 = 1;
        goto LABEL_39;
      }
      if (v12)
      {
        if (v12 != 1)
        {
          v19 = BYTE1(v9) - 48;
          if ((BYTE1(v9) - 48) <= 9u)
          {
            v16 = 0;
            v20 = v19 == 0;
            v21 = -(uint64_t)v19;
            if (!v20)
              goto LABEL_36;
            if (v12 == 2)
            {
              v18 = 0;
              v16 = v21;
LABEL_39:
              swift_bridgeObjectRelease(v11);
              if ((v18 & 1) == 0)
              {
                v48[0] = v8;
                v25 = sub_10004CFD4(&qword_1009ED318);
                v26 = sub_10059BD00();
                NonEmpty.init(_:)(v48, v25, v26);
                sub_1004EFDB0((uint64_t)v5, v16);
                return;
              }
              v27 = v8;
              goto LABEL_42;
            }
            v42 = BYTE2(v9) - 48;
            if ((BYTE2(v9) - 48) <= 9u && is_mul_ok(v21, 0xAuLL))
            {
              v43 = 10 * v21;
              v16 = v43 - v42;
              if (v43 >= v42)
              {
                v44 = v12 - 3;
                if (v44)
                {
                  v45 = (unsigned __int8 *)v48 + 3;
                  while (1)
                  {
                    v46 = *v45 - 48;
                    if (v46 > 9)
                      goto LABEL_35;
                    if (!is_mul_ok(v16, 0xAuLL))
                      goto LABEL_35;
                    v20 = 10 * v16 >= (unint64_t)v46;
                    v16 = 10 * v16 - v46;
                    if (!v20)
                      goto LABEL_35;
                    v18 = 0;
                    ++v45;
                    if (!--v44)
                      goto LABEL_39;
                  }
                }
LABEL_38:
                v18 = 0;
                goto LABEL_39;
              }
            }
          }
        }
        goto LABEL_35;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease(v8);
  v27 = v11;
LABEL_42:
  swift_bridgeObjectRelease(v27);
  if (qword_1009CE8B0 != -1)
    swift_once(&qword_1009CE8B0, sub_10059A934);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100048F64(v28, (uint64_t)qword_100A1ECB0);
  v30 = static os_log_type_t.error.getter(v29);
  v31 = v6;
  v32 = Logger.logObject.getter(v31);
  v33 = v30;
  if (os_log_type_enabled(v32, v30))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v48[0] = v35;
    *(_DWORD *)v34 = 136315138;
    v36 = MResource.id.getter(v35);
    v38 = v37;
    v49 = sub_100040F58(v36, v37, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v34 + 4, v34 + 12);

    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "failed to create author ID from %s", v34, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_10059BD00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED320;
  if (!qword_1009ED320)
  {
    v1 = sub_100030B74(&qword_1009ED318);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009ED320);
  }
  return result;
}

uint64_t sub_10059BD4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009DAC00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10059BD8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for MainToolbarInteractor()
{
  return objc_opt_self(_TtC5Books21MainToolbarInteractor);
}

void destroy for MainToolbarState(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

}

uint64_t initializeWithCopy for MainToolbarState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
  v4 = (void *)a2[4];
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t *assignWithCopy for MainToolbarState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = (uint64_t)v7;
  v8 = v7;

  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t *assignWithTake for MainToolbarState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  v5 = (void *)a1[4];
  a1[4] = a2[4];

  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainToolbarState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MainToolbarState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainToolbarState()
{
  return &type metadata for MainToolbarState;
}

uint64_t sub_10059C010(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return sub_10059C058((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_10059C058(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;

  if ((sub_100430A20(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) != 0
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16)
    || ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 25) ^ *(unsigned __int8 *)(a2 + 25)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 26) ^ *(unsigned __int8 *)(a2 + 26)) & 1) != 0)
  {
    goto LABEL_8;
  }
  v6 = *(void **)(a1 + 32);
  v7 = *(void **)(a2 + 32);
  if (v6)
  {
    if (v7)
    {
      sub_1001EDFE4();
      v8 = v7;
      v9 = v6;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
        goto LABEL_15;
    }
  }
  else if (!v7)
  {
LABEL_15:
    v4 = ((*(_BYTE *)(a1 + 40) & 1) == 0) ^ *(_BYTE *)(a2 + 40);
    return v4 & 1;
  }
LABEL_8:
  v4 = 0;
  return v4 & 1;
}

uint64_t property wrapper backing initializer of SearchBar.responderState(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for SearchBarResponderState(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009EB9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchBarResponderState, (uint64_t)&protocol conformance descriptor for SearchBarResponderState);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

Swift::Bool __swiftcall SearchBar.Coordinator.searchBar(_:shouldChangeTextIn:replacementText:)(UISearchBar _, _NSRange shouldChangeTextIn, Swift::String replacementText)
{
  uint64_t v3;

  *(_BYTE *)(v3 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_isEditing) = 1;
  return 1;
}

Swift::Void __swiftcall SearchBar.Coordinator.searchBar(_:textDidChange:)(UISearchBar _, Swift::String textDidChange)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6[2];
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator__text + 16);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator__text + 24);
  v6[1] = *(Swift::String *)(v2 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator__text);
  v7 = v4;
  v8 = v3;
  v6[0] = textDidChange;
  swift_bridgeObjectRetain(textDidChange._object);
  v5 = sub_10004CFD4(&qword_1009EBCA0);
  Binding.wrappedValue.setter(v6, v5);
}

Swift::Void __swiftcall SearchBar.Coordinator.searchBarTextDidEndEditing(_:)(UISearchBar a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_isEditing) = 0;
}

Swift::Void __swiftcall SearchBar.Coordinator.searchBarSearchButtonClicked(_:)(UISearchBar a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction + 8);
  v4 = swift_retain(v3);
  v2(v4);
  swift_release(v3);
}

void SearchBar.Coordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.Coordinator", 17, "init()", 6, 0);
  __break(1u);
}

id SearchBar.Coordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchBar.Coordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchBar.Coordinator()
{
  return objc_opt_self(_TtCV5Books9SearchBar11Coordinator);
}

id SearchBar.makeCoordinator()()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  _BYTE *v8;
  char *v9;
  _QWORD *v10;
  double v11;
  __int128 v13;
  objc_super v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0[1];
  v15 = *v0;
  v16 = v1;
  v2 = sub_10004CFD4(&qword_1009EBCA0);
  Binding.projectedValue.getter(v2);
  v13 = v17;
  v3 = v18;
  v4 = v19;
  v6 = *((_QWORD *)v0 + 9);
  v5 = *((_QWORD *)v0 + 10);
  v7 = (objc_class *)type metadata accessor for SearchBar.Coordinator();
  v8 = objc_allocWithZone(v7);
  v8[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_isEditing] = 0;
  v9 = &v8[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator__text];
  *(_OWORD *)v9 = v13;
  *((_QWORD *)v9 + 2) = v3;
  *((_QWORD *)v9 + 3) = v4;
  v10 = &v8[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction];
  *v10 = v6;
  v10[1] = v5;
  v14.receiver = v8;
  v14.super_class = v7;
  *(_QWORD *)&v11 = swift_retain(v5).n128_u64[0];
  return objc_msgSendSuper2(&v14, "init", v11);
}

id SearchBar.makeUIView(context:)()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UISearchBar), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = sub_10004CFD4(&qword_1009ED3F8);
  UIViewRepresentableContext.coordinator.getter(&v4, v1);
  v2 = v4;
  objc_msgSend(v0, "setDelegate:", v4);

  objc_msgSend(v0, "setSearchBarStyle:", 2);
  return v0;
}

void SearchBar.updateUIView(_:context:)(void *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 aBlock;
  __int128 v57;
  uint64_t (*v58)();
  uint64_t v59;
  __int128 v60;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009ED3F8);
  UIViewRepresentableContext.coordinator.getter(&aBlock, v10);
  v11 = *(_BYTE *)(aBlock + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_isEditing);

  if ((v11 & 1) == 0)
  {
    v12 = v2[1];
    aBlock = *v2;
    v57 = v12;
    v13 = sub_10004CFD4(&qword_1009EBCA0);
    Binding.wrappedValue.getter(&v60, v13);
    v14 = *((_QWORD *)&v60 + 1);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
  UIViewRepresentableContext.coordinator.getter(&aBlock, v10);
  v16 = (void *)aBlock;
  v17 = *((_QWORD *)v2 + 10);
  v18 = (_QWORD *)(aBlock + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction);
  v19 = *(_QWORD *)(aBlock + OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction + 8);
  *v18 = *((_QWORD *)v2 + 9);
  v18[1] = v17;
  swift_retain(v17);

  swift_release(v19);
  v60 = v2[2];
  v20 = *((_QWORD *)&v60 + 1);
  swift_retain(*((_QWORD *)&v60 + 1));
  LOBYTE(v19) = dispatch thunk of SearchBarResponderState.becomeFirstResponder.getter(v21);
  sub_100457BE0((uint64_t)&v60);
  if ((v19 & 1) != 0)
  {
    v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v23 = (void *)static OS_dispatch_queue.main.getter(v22);
    v24 = swift_allocObject(&unk_100912858, 112, 7);
    v25 = v2[3];
    *(_OWORD *)(v24 + 48) = v2[2];
    *(_OWORD *)(v24 + 64) = v25;
    *(_OWORD *)(v24 + 80) = v2[4];
    v26 = *((_QWORD *)v2 + 10);
    v27 = v2[1];
    *(_OWORD *)(v24 + 16) = *v2;
    *(_OWORD *)(v24 + 32) = v27;
    *(_QWORD *)(v24 + 96) = v26;
    *(_QWORD *)(v24 + 104) = a1;
    v58 = sub_10059D134;
    v59 = v24;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v57 = sub_1000147F0;
    *((_QWORD *)&v57 + 1) = &unk_100912870;
    v28 = _Block_copy(&aBlock);
    v29 = v59;
    sub_10059D0B0(v2);
    v30 = a1;
    swift_release(v29);
    static DispatchQoS.unspecified.getter(v31);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v32 = v4;
    v33 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v34 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v35 = sub_100065324();
    v36 = v34;
    v4 = v32;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v36, v35, v32, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v32);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v54);
  }
  swift_retain(v20);
  v38 = dispatch thunk of SearchBarResponderState.resignFirstResponder.getter(v37);
  sub_100457BE0((uint64_t)&v60);
  if ((v38 & 1) != 0)
  {
    v39 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v40 = (void *)static OS_dispatch_queue.main.getter(v39);
    v41 = swift_allocObject(&unk_100912808, 112, 7);
    v42 = v2[3];
    *(_OWORD *)(v41 + 48) = v2[2];
    *(_OWORD *)(v41 + 64) = v42;
    *(_OWORD *)(v41 + 80) = v2[4];
    v43 = *((_QWORD *)v2 + 10);
    v44 = v2[1];
    *(_OWORD *)(v41 + 16) = *v2;
    *(_OWORD *)(v41 + 32) = v44;
    *(_QWORD *)(v41 + 96) = v43;
    *(_QWORD *)(v41 + 104) = a1;
    v58 = sub_10059D084;
    v59 = v41;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v57 = sub_1000147F0;
    *((_QWORD *)&v57 + 1) = &unk_100912820;
    v45 = _Block_copy(&aBlock);
    v46 = v59;
    sub_10059D0B0(v2);
    v47 = a1;
    swift_release(v46);
    static DispatchQoS.unspecified.getter(v48);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v49 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v50 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v51 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v50, v51, v4, v49);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v54);
  }
  sub_10059CAF0(a1);
}

uint64_t sub_10059CA68(uint64_t a1, void *a2, void (*a3)(_QWORD, __n128), SEL *a4)
{
  uint64_t v7;
  __n128 v8;
  id v9;
  __int128 v11;

  v11 = *(_OWORD *)(a1 + 32);
  v7 = *((_QWORD *)&v11 + 1);
  v8 = swift_retain(*((_QWORD *)&v11 + 1));
  a3(0, v8);
  sub_100457BE0((uint64_t)&v11);
  objc_msgSend(a2, *a4, (_QWORD)v11);
  v9 = objc_msgSend(a2, "isFirstResponder", swift_retain(v7).n128_f64[0]);
  dispatch thunk of SearchBarResponderState.isFirstResponder.setter(v9);
  return sub_100457BE0((uint64_t)&v11);
}

void sub_10059CAF0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  id v24;
  __n128 v25;
  unsigned int v26;
  void (*v27)(char *, _QWORD, uint64_t, __n128);
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString *v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  NSString v49;
  Class isa;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD v60[2];
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, __n128);
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char v66[72];

  v2 = v1;
  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v65 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v60 - v8;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "clearColor");
  objc_msgSend(a1, "setBackgroundColor:", v11);

  v12 = objc_msgSend(a1, "searchTextField");
  v13 = (void *)objc_opt_self(UITraitCollection);
  v14 = v12;
  v15 = objc_msgSend(v13, "currentTraitCollection");
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  if (v16 == (id)1
    || (v17 = objc_msgSend(v13, "currentTraitCollection"),
        v18 = objc_msgSend(v17, "verticalSizeClass"),
        v17,
        v18 == (id)1))
  {
    sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    v19 = Color.init(_:)(objc_msgSend(v10, "secondarySystemBackgroundColor"));
    v20 = (void *)UIColor.init(_:)(v19);
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v14, "setBackgroundColor:", v20);

  v21 = v2[8];
  KeyPath = swift_getKeyPath("HZ.");
  v23 = swift_getKeyPath(&unk_10072FA30);
  v24 = v14;
  static Published.subscript.getter(v9, v21, KeyPath);
  swift_release(KeyPath);
  v25 = swift_release(v23);
  v26 = enum case for ColorScheme.light(_:);
  v27 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104);
  v28 = v65;
  v27(v65, enum case for ColorScheme.light(_:), v4, v25);
  LOBYTE(KeyPath) = static ColorScheme.== infix(_:_:)(v9, v28);
  v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v28, v4);
  v29(v9, v4);
  v61 = v4;
  v62 = v27;
  v64 = v21;
  v63 = v26;
  if ((KeyPath & 1) != 0)
    v30 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  else
    v30 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v31 = v30;
  v32 = sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
  v33 = (void *)UIColor.init(_:)(v31);
  objc_msgSend(v24, "setTextColor:", v33);

  v34 = v2[7];
  v60[1] = v2[6];
  v35 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
  inited = swift_initStackObject(v35, v66);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v37 = swift_getKeyPath("HZ.");
  v38 = swift_getKeyPath(&unk_10072FA30);
  v39 = v24;
  swift_bridgeObjectRetain(v34);
  v40 = NSForegroundColorAttributeName;
  static Published.subscript.getter(v9, v64, v37);
  swift_release(v37);
  v41 = swift_release(v38);
  v42 = v65;
  v43 = v61;
  v62(v65, v63, v61, v41);
  LOBYTE(v37) = static ColorScheme.== infix(_:_:)(v9, v42);
  v29(v42, v43);
  v29(v9, v43);
  if ((v37 & 1) != 0)
    v44 = 2358022399;
  else
    v44 = 2711725567;
  v45 = Color.init(rgbaHex:)(v44);
  v46 = UIColor.init(_:)(v45);
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 40) = v46;
  v47 = sub_1001DA774(inited);
  v48 = objc_allocWithZone((Class)NSAttributedString);
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  type metadata accessor for Key(0);
  sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(v48, "initWithString:attributes:", v49, isa, swift_bridgeObjectRelease(v47).n128_f64[0]);

  objc_msgSend(v39, "setAttributedPlaceholder:", v51);
  v52 = objc_msgSend(v39, "leftView");
  if (v52)
  {
    v53 = v52;
    v54 = swift_getKeyPath("HZ.");
    v55 = swift_getKeyPath(&unk_10072FA30);
    static Published.subscript.getter(v9, v64, v54);
    swift_release(v54);
    v56 = swift_release(v55);
    v62(v42, v63, v43, v56);
    LOBYTE(v54) = static ColorScheme.== infix(_:_:)(v9, v42);
    v29(v42, v43);
    v29(v9, v43);
    if ((v54 & 1) != 0)
      v57 = 2358022399;
    else
      v57 = 2711725567;
    v58 = Color.init(rgbaHex:)(v57);
    v59 = (void *)UIColor.init(_:)(v58);
    objc_msgSend(v53, "setTintColor:", v59);

  }
}

uint64_t sub_10059D084()
{
  uint64_t v0;

  return sub_10059CA68(v0 + 16, *(void **)(v0 + 104), (void (*)(_QWORD, __n128))&dispatch thunk of SearchBarResponderState.resignFirstResponder.setter, (SEL *)&selRef_resignFirstResponder);
}

_QWORD *sub_10059D0B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = (void *)a1[8];
  v7 = a1[10];
  swift_retain(*a1);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t sub_10059D134()
{
  uint64_t v0;

  return sub_10059CA68(v0 + 16, *(void **)(v0 + 104), (void (*)(_QWORD, __n128))&dispatch thunk of SearchBarResponderState.becomeFirstResponder.setter, (SEL *)&selRef_becomeFirstResponder);
}

unint64_t sub_10059D164()
{
  unint64_t result;

  result = qword_1009ED400;
  if (!qword_1009ED400)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchBar, &type metadata for SearchBar);
    atomic_store(result, (unint64_t *)&qword_1009ED400);
  }
  return result;
}

void sub_10059D1A8(void *a1)
{
  SearchBar.updateUIView(_:context:)(a1);
}

id sub_10059D1F0@<X0>(_QWORD *a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  _BYTE *v11;
  char *v12;
  _QWORD *v13;
  double v14;
  id result;
  __int128 v16;
  objc_super v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *((_QWORD *)v1 + 2);
  v4 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 9);
  v5 = *((_QWORD *)v1 + 10);
  v18 = *v1;
  v19 = v3;
  v20 = v4;
  v7 = sub_10004CFD4(&qword_1009EBCA0);
  Binding.projectedValue.getter(v7);
  v16 = v21;
  v8 = v22;
  v9 = v23;
  v10 = (objc_class *)type metadata accessor for SearchBar.Coordinator();
  v11 = objc_allocWithZone(v10);
  v11[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_isEditing] = 0;
  v12 = &v11[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator__text];
  *(_OWORD *)v12 = v16;
  *((_QWORD *)v12 + 2) = v8;
  *((_QWORD *)v12 + 3) = v9;
  v13 = &v11[OBJC_IVAR____TtCV5Books9SearchBar11Coordinator_searchAction];
  *v13 = v6;
  v13[1] = v5;
  v17.receiver = v11;
  v17.super_class = v10;
  *(_QWORD *)&v14 = swift_retain(v5).n128_u64[0];
  result = objc_msgSendSuper2(&v17, "init", v14);
  *a1 = result;
  return result;
}

uint64_t sub_10059D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10059D5FC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10059D310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10059D5FC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10059D360(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10059D5FC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t destroy for SearchBar(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));

  return swift_release(*(_QWORD *)(a1 + 80));
}

uint64_t initializeWithCopy for SearchBar(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v11;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  v8 = a2[10];
  v11 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 80) = v8;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  v9 = (id)v11;
  swift_retain(v8);
  return a1;
}

uint64_t *assignWithCopy for SearchBar(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_retain(v10);
  swift_release(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = (void *)a2[8];
  v15 = (void *)a1[8];
  a1[8] = (uint64_t)v14;
  v16 = v14;

  v18 = a2[9];
  v17 = a2[10];
  v19 = a1[10];
  a1[9] = v18;
  a1[10] = v17;
  swift_retain(v17);
  swift_release(v19);
  return a1;
}

uint64_t assignWithTake for SearchBar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  v9 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  v10 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v10);
  return a1;
}

ValueMetadata *type metadata accessor for SearchBar()
{
  return &type metadata for SearchBar;
}

unint64_t sub_10059D5FC()
{
  unint64_t result;

  result = qword_1009ED430[0];
  if (!qword_1009ED430[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchBar, &type metadata for SearchBar);
    atomic_store(result, qword_1009ED430);
  }
  return result;
}

uint64_t sub_10059D650(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Logger(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

void **sub_10059D6F4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  char *v16;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v9 + v12;
  v14 = ((v13 + ((v8 + 16) & ~v8)) & ~v12) + *(_QWORD *)(v11 + 64);
  v15 = (*(_DWORD *)(v11 + 80) | v7) & 0x100000;
  v16 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | (unint64_t)v7) > 7 || v15 != 0 || v14 > 0x18)
  {
    a1 = (void **)&v16[((v12 | v7) & 0xF8 ^ 0x1F8) & ((v12 | v7) + 16)];
    swift_retain(v16);
  }
  else
  {
    v19 = ~v12;
    v20 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = ((unint64_t)v20 + v8 + 8) & ~v8;
    v23 = ((unint64_t)v21 + v8 + 8) & ~v8;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v25 = v16;
    v24(v22, v23, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v22 + v13) & v19, (v23 + v13) & v19, v10);
  }
  return a1;
}

uint64_t sub_10059D82C(id *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (unint64_t)a1 + 15;

  v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))((v6 + v7 + *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80), v8);
}

void **sub_10059D8A4(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a2;
  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13 = v4;
  v12(v10, v11, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))((v14 + *(unsigned __int8 *)(v16 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

void **sub_10059D95C(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = (unint64_t)a1 + 15;
  v9 = v5;

  *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 8 + (v8 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v13 = (v11 + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 24))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

_QWORD *sub_10059DA20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 8) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))((v10 + *(unsigned __int8 *)(v12 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (v10 + *(unsigned __int8 *)(v12 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
  return a1;
}

void **sub_10059DAC8(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;

  v8 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  *v8 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v8 + v10 + 8) & ~v10;
  v12 = (v10 + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  (*(void (**)(uint64_t, unint64_t))(v9 + 40))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 40))((v13 + *(unsigned __int8 *)(v15 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (v13 + *(unsigned __int8 *)(v15 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), v14);
  return a1;
}

uint64_t sub_10059DB80(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = v8;
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v12)
    goto LABEL_27;
  v17 = ((v15 + v16 + ((v14 + 16) & ~v14)) & ~v16) + *(_QWORD *)(v9 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(_WORD *)((char *)a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if ((v11 & 0x80000000) != 0)
      {
        v25 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v14 + 8) & ~v14;
        if ((_DWORD)v7 == v12)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v25, v7, v5);
        else
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v25 + v15 + v16) & ~v16, v10, v13);
      }
      else
      {
        v24 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v24) = -1;
        return (v24 + 1);
      }
    }
  }
  v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((_BYTE *)a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = v17;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_10059DD64(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  if (v8 <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = v8;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = ((*(_QWORD *)(v7 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

uint64_t type metadata accessor for PageFramedAndBorderedView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageFramedAndBorderedView);
}

uint64_t assignWithCopy for PageFramedAndBorderedModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for PageFramedAndBorderedModifier(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for PageFramedAndBorderedModifier()
{
  return &type metadata for PageFramedAndBorderedModifier;
}

uint64_t sub_10059E070(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087854C, 1);
}

uint64_t sub_10059E080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[6];

  v51 = a2;
  v53 = a1;
  v59 = a3;
  v58 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v58);
  v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ColorScheme(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - v12;
  v52 = sub_10004CFD4(&qword_1009ED4B8);
  __chkstk_darwin(v52);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_10004CFD4(&qword_1009ED4C0);
  __chkstk_darwin(v54);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_10004CFD4(&qword_1009ED4C8);
  __chkstk_darwin(v56);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10004CFD4(&qword_1009ED4D0);
  __chkstk_darwin(v57);
  v55 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10072FBC8);
  v22 = swift_getKeyPath(&unk_10072FBF0);
  static Published.subscript.getter(v13, v51, KeyPath);
  swift_release(KeyPath);
  v23 = swift_release(v22);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, enum case for ColorScheme.light(_:), v7, v23);
  LOBYTE(v22) = static ColorScheme.== infix(_:_:)(v13, v10);
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v10, v7);
  v24(v13, v7);
  if ((v22 & 1) != 0)
    v25 = 1532714495;
  else
    v25 = 4025480447;
  v26 = Color.init(rgbaHex:)(v25);
  v27.n128_u64[0] = 1.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v60, 0, 0, _swiftEmptyArrayStorage, v27, 10.0, 0.0);
  v28 = *(double *)v60;
  v29 = v60[2];
  v30 = v60[3];
  v31 = v60[4];
  swift_retain(v26);
  v33 = static Alignment.center.getter(v32);
  v35 = v34;
  v36 = sub_10004CFD4(&qword_1009ED4D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v15, v53, v36);
  swift_release(v26);
  v37 = &v15[*(int *)(v52 + 36)];
  *(double *)v37 = v28 * 0.5;
  *((double *)v37 + 1) = v28;
  *((_QWORD *)v37 + 2) = v60[1];
  *((_QWORD *)v37 + 3) = v29;
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v31;
  *((_QWORD *)v37 + 6) = v26;
  *((_WORD *)v37 + 28) = 256;
  *((_QWORD *)v37 + 8) = v33;
  *((_QWORD *)v37 + 9) = v35;
  v38 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v38, "displayCornerRadius");
  v40 = v39;

  v41 = (char *)v6 + *(int *)(v58 + 20);
  v42 = enum case for RoundedCornerStyle.continuous(_:);
  v43 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  *v6 = v40;
  v6[1] = v40;
  v44 = (uint64_t)&v17[*(int *)(v54 + 36)];
  sub_10025BC3C((uint64_t)v6, v44);
  *(_WORD *)(v44 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4((uint64_t)v15, (uint64_t)v17, &qword_1009ED4B8);
  sub_10025BC80((uint64_t)v6);
  sub_100010960((uint64_t)v15, &qword_1009ED4B8);
  v45 = Color.init(rgbaHex:)(1010582527);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v19, &qword_1009ED4C0);
  v46 = &v19[*(int *)(v56 + 36)];
  *(_QWORD *)v46 = v45;
  *((double *)v46 + 1) = a4;
  *((_QWORD *)v46 + 2) = 0;
  *((_QWORD *)v46 + 3) = 0;
  sub_100010960((uint64_t)v17, &qword_1009ED4C0);
  LOBYTE(v45) = static Edge.Set.all.getter(v47);
  v48 = v55;
  sub_10000B5E4((uint64_t)v19, v55, &qword_1009ED4C8);
  *(_BYTE *)(v48 + *(int *)(v57 + 36)) = v45;
  sub_100010960((uint64_t)v19, &qword_1009ED4C8);
  return sub_10059E968(v48, v59);
}

uint64_t sub_10059E520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10059E080(a1, *(_QWORD *)v2, a2, *(double *)(v2 + 8));
}

uint64_t sub_10059E52C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100878518, 1);
}

uint64_t sub_10059E560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[2];

  v30 = a2;
  v4 = sub_100030B74(&qword_1009D6340);
  v5 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v9 = type metadata accessor for ZStack(0, v7, WitnessTable);
  v28 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = type metadata accessor for ModifiedContent(0, v9, &type metadata for PageFramedAndBorderedModifier);
  v29 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v18 = *(_QWORD *)(a1 + 24);
  v32 = v5;
  v33 = v18;
  v34 = v2;
  v20 = static Alignment.center.getter(v19);
  ZStack.init(alignment:content:)(v20, v21, sub_10059E944, v31, v7, WitnessTable);
  v22 = v2[1];
  v37[0] = *v2;
  v37[1] = v22;
  v23 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  View.modifier<A>(_:)(v37, v9, &type metadata for PageFramedAndBorderedModifier, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  v24 = sub_1003BFC78();
  v35 = v23;
  v36 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  sub_100344038((uint64_t)v14, v12, (uint64_t)v17);
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v14, v12);
  sub_100341C00((uint64_t)v17, v12, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v17, v12);
}

double sub_10059E784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  double result;
  _QWORD v24[2];
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v24 - v10;
  v13 = *v12;
  KeyPath = swift_getKeyPath(&unk_10072FB50);
  v15 = swift_getKeyPath(&unk_10072FB78);
  static Published.subscript.getter(v28, v13, KeyPath);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = v28[0];
  v17 = swift_getKeyPath(&unk_10072FB98);
  v19 = type metadata accessor for PageFramedAndBorderedView(0, a2, a3, v18);
  sub_100344038(a1 + *(int *)(v19 + 40), a2, (uint64_t)v11);
  v26 = v17;
  v27 = v16;
  v28[0] = (uint64_t)&v26;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, a2);
  v28[1] = (uint64_t)v8;
  swift_retain(v17);
  swift_retain(v16);
  v25[0] = sub_10004CFD4(&qword_1009D6340);
  v25[1] = a2;
  v24[0] = sub_10028105C();
  v24[1] = a3;
  sub_100341C18(v28, 2uLL, (uint64_t)v25);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v11, a2);
  swift_release(v16);
  v21 = swift_release(v17);
  ((void (*)(char *, uint64_t, __n128))v20)(v8, a2, v21);
  v22 = v27;
  swift_release(v26);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double sub_10059E944()
{
  uint64_t *v0;

  return sub_10059E784(v0[4], v0[2], v0[3]);
}

uint64_t sub_10059E968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009ED4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059E9B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = sub_100030B74(&qword_1009D6340);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v1, 0, 0);
  v4 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v4);
  v6 = type metadata accessor for ZStack(255, v4, WitnessTable);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for PageFramedAndBorderedModifier);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v6);
  sub_1003BFC78();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

uint64_t sub_10059EA74()
{
  return sub_1001F5558(&qword_1009ED4E0, &qword_1009ED4D0, (void (*)(void))sub_10059EAA8);
}

uint64_t sub_10059EAA8()
{
  return sub_1001F5558(&qword_1009ED4E8, &qword_1009ED4C8, (void (*)(void))sub_10059EACC);
}

unint64_t sub_10059EACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED4F0;
  if (!qword_1009ED4F0)
  {
    v1 = sub_100030B74(&qword_1009ED4C0);
    sub_10059EB50();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009ED4F0);
  }
  return result;
}

unint64_t sub_10059EB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED4F8;
  if (!qword_1009ED4F8)
  {
    v1 = sub_100030B74(&qword_1009ED4B8);
    sub_100030B34(&qword_1009ED500, &qword_1009ED4D8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34(&qword_1009ED508, &qword_1009F0EC0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009ED4F8);
  }
  return result;
}

uint64_t sub_10059EBEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  char v13;

  KeyPath = swift_getKeyPath(&unk_1007301E0);
  v4 = swift_getKeyPath(&unk_100730208);
  static Published.subscript.getter(v10, v1, KeyPath, v4);
  swift_release(KeyPath);
  result = swift_release(v4);
  v6 = v10[1];
  v7 = v11;
  v8 = v12;
  v9 = v13;
  *(_QWORD *)a1 = v10[0];
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_10059EC7C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730150);
  v2 = swift_getKeyPath(&unk_100730178);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10059ECEC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  KeyPath = swift_getKeyPath(&unk_100730108);
  v2 = swift_getKeyPath(&unk_100730130);
  static Published.subscript.getter(&v16, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v16;
  v4 = (uint64_t)_swiftEmptyArrayStorage;
  v16 = (uint64_t)_swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v3);
    v6 = v3 + 96;
    do
    {
      if (((*(unsigned __int8 *)(v6 + 2) << 16) & 0xC00000) == 0x400000)
      {
        v8 = *(_QWORD *)(v6 - 64);
        v9 = swift_retain(v8);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v11 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v10 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v11 >= v10 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v8);
        specialized Array._endMutation()(v7);
      }
      v6 += 72;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v3);
    v4 = v16;
  }
  result = swift_bridgeObjectRelease(v3);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
LABEL_19:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (v4 < 0)
    v14 = v4;
  else
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v15 = _CocoaArrayWrapper.endIndex.getter(v14);
  result = swift_bridgeObjectRelease(v4);
  if (!v15)
    goto LABEL_19;
LABEL_11:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(_QWORD *)(v4 + 32);
    swift_retain(v13);
LABEL_14:
    swift_bridgeObjectRelease(v4);
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10059EEAC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  KeyPath = swift_getKeyPath(&unk_100730108);
  v4 = swift_getKeyPath(&unk_100730130);
  static Published.subscript.getter(&v17, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v17;
  v6 = *(_QWORD *)(v17 + 16);
  if (v6)
  {
    v7 = a1;
    swift_bridgeObjectRetain(v17);
    v8 = (uint64_t *)(v5 + 48);
    v9 = _swiftEmptyArrayStorage;
    do
    {
      if (((*((unsigned __int8 *)v8 + 50) << 16) & 0xC00000) == 0 && *((unsigned __int8 *)v8 - 16) == v7)
      {
        v11 = *(v8 - 1);
        v12 = *v8;
        swift_bridgeObjectRetain(v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_1005B175C(0, v9[2] + 1, 1, v9);
        v14 = v9[2];
        v13 = v9[3];
        if (v14 >= v13 >> 1)
          v9 = sub_1005B175C((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
        v9[2] = v14 + 1;
        v10 = &v9[3 * v14];
        *((_BYTE *)v10 + 32) = v7;
        v10[5] = v11;
        *((_BYTE *)v10 + 48) = v12 & 1;
      }
      v8 += 9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v5);
  if (v9[2])
  {
    v15 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain(v9[5]);
  }
  else
  {
    v15 = 0;
  }
  swift_bridgeObjectRelease(v9);
  return v15;
}

void sub_10059F064(unsigned __int8 a1, _QWORD *a2, char a3)
{
  void (*v3)(uint64_t *, _QWORD);
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[4];

  KeyPath = swift_getKeyPath(&unk_100730108);
  v9 = swift_getKeyPath(&unk_100730130);
  static Published.subscript.getter(v54, v3, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = *(_QWORD *)(v54[0] + 16);
  if (!v10)
  {
LABEL_16:
    swift_bridgeObjectRelease(v54[0]);
    return;
  }
  v11 = 0;
  v12 = a1;
  v13 = 12;
  while (((*(unsigned __int8 *)(v54[0] + v13 * 8 + 2) << 16) & 0xC00000) != 0
       || *(unsigned __int8 *)(v54[0] + v13 * 8 - 64) != a1)
  {
    ++v11;
    v13 += 9;
    if (v10 == v11)
      goto LABEL_16;
  }
  v47 = a3;
  v48 = a2;
  swift_bridgeObjectRelease(v54[0]);
  v14 = (_QWORD *)swift_getKeyPath(&unk_100730108);
  v15 = swift_getKeyPath(&unk_100730130);
  static Published.subscript.getter(v54, v3, v14, v15);
  swift_release(v14);
  swift_release(v15);
  v16 = v54[0];
  if (v11 >= *(_QWORD *)(v54[0] + 16))
  {
    __break(1u);
LABEL_20:
    v14 = sub_1002C35D4(v14);
    *a2 = v14;
    goto LABEL_12;
  }
  v17 = *(_QWORD *)(v54[0] + v13 * 8 - 48);
  v18 = *(_QWORD *)(v54[0] + v13 * 8 - 32);
  v19 = *(_QWORD *)(v54[0] + v13 * 8 - 24);
  v20 = *(_QWORD *)(v54[0] + v13 * 8 - 16);
  v21 = *(unsigned __int16 *)(v54[0] + v13 * 8) | (*(unsigned __int8 *)(v54[0] + v13 * 8 + 2) << 16);
  v51 = *(_QWORD *)(v54[0] + v13 * 8 - 56);
  v52 = *(_QWORD *)(v54[0] + v13 * 8 - 64);
  v49 = *(_QWORD *)(v54[0] + v13 * 8 - 8);
  v50 = *(_QWORD *)(v54[0] + v13 * 8 - 40);
  sub_1004091F4(v52, v51, v17, v50, v18, v19, v20, v49, v21);
  swift_bridgeObjectRelease(v16);
  if ((v21 & 0xC00000) != 0)
  {
    sub_10040927C(v52, v51, v17, v50, v18, v19, v20, v49, v21);
    return;
  }
  sub_10040927C(v52, v51, v17, v50, v18, v19, v20, v49, v21);
  if (v47 == 2)
    a3 = v17;
  else
    a3 = v47;
  v16 = swift_getKeyPath(&unk_100730108);
  v9 = swift_getKeyPath(&unk_100730130);
  v4 = v48;
  swift_bridgeObjectRetain(v48);
  v3 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(v54, v3, v16, v9);
  a2 = v22;
  v14 = (_QWORD *)*v22;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
  *a2 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_20;
LABEL_12:
  if (v11 >= v14[2])
  {
    __break(1u);
  }
  else
  {
    v24 = &v14[v13];
    v25 = v14[v13 - 8];
    v26 = v14[v13 - 7];
    v27 = v14[v13 - 6];
    v28 = v14[v13 - 5];
    v29 = v14[v13 - 4];
    v30 = v14[v13 - 3];
    v31 = v14[v13 - 2];
    v32 = v14[v13 - 1];
    v33 = LOWORD(v14[v13]) | (BYTE2(v14[v13]) << 16);
    *(v24 - 8) = v12;
    *(v24 - 7) = v4;
    *(v24 - 6) = a3 & 1;
    *(_OWORD *)(v24 - 5) = 0u;
    *(_OWORD *)(v24 - 3) = 0u;
    *(_OWORD *)((char *)v24 - 13) = 0u;
    sub_10040927C(v25, v26, v27, v28, v29, v30, v31, v32, v33);
    v3(v54, 0);
    swift_release(v16);
    swift_release(v9);
    if (qword_1009CE4F0 == -1)
      goto LABEL_14;
  }
  swift_once(&qword_1009CE4F0, sub_100450628);
LABEL_14:
  v34 = type metadata accessor for Logger(0);
  sub_100048F64(v34, (uint64_t)qword_1009E40B0);
  v35 = swift_bridgeObjectRetain_n(v4, 2);
  v36 = Logger.logObject.getter(v35);
  v40 = static os_log_type_t.debug.getter(v36, v37, v38, v39);
  if (os_log_type_enabled(v36, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v42 = swift_slowAlloc(32, -1);
    v53 = v12;
    v54[0] = v42;
    *(_DWORD *)v41 = 134218242;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v41 + 4, v41 + 12);
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain(v4);
    v44 = Array.description.getter(v43, &type metadata for SidebarViewModel.Item);
    v46 = v45;
    swift_bridgeObjectRelease(v4);
    v53 = sub_100040F58(v44, v46, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v41 + 14, v41 + 22);
    swift_bridgeObjectRelease_n(v4, 2);
    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v36, v40, "🚨 replaceItemModels(section:items:) replaced section %ld's ItemModels with: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v4, 2);
  }
}

uint64_t sub_10059F4C8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730108);
  v2 = swift_getKeyPath(&unk_100730130);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_10059F538@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[5];
  char v12;

  KeyPath = swift_getKeyPath(&unk_1007300C0);
  v4 = swift_getKeyPath(&unk_1007300E8);
  static Published.subscript.getter(v11, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v12;
  result = *(double *)v11;
  v7 = v11[1];
  v8 = v11[2];
  v9 = v11[3];
  v10 = v11[4];
  *(_OWORD *)a1 = v11[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 80) = v5;
  return result;
}

uint64_t property wrapper backing initializer of SidebarViewModel.programmaticSelection(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[88];

  sub_100025B3C(a1, (uint64_t)v3, &qword_1009ED510);
  v1 = sub_10004CFD4(&qword_1009ED510);
  return Published.init(initialValue:)(v3, v1);
}

uint64_t property wrapper backing initializer of SidebarViewModel.modelObjects(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009ED518);
  return Published.init(initialValue:)(&v3, v1);
}

char *_s5Books16SidebarViewModelC13_modelObjects33_BE2F35C5CD231E1E00E5EBFF782FD36ELL7Combine9PublishedVySayAC4ItemOGGvpfi_0()
{
  uint64_t v0;
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  BOOL v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  __int16 v12;
  BOOL v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  char *result;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  __int16 v40;
  BOOL v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  __int16 v47;
  BOOL v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  unsigned __int8 v60;
  char v61;
  char v62;
  _OWORD v63[2];
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unsigned __int8 v67;
  char v68;
  char v69;
  _OWORD v70[2];
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  unsigned __int8 v74;
  char v75;
  char v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  _OWORD v86[2];
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  unsigned __int8 v90;
  char v91;
  char v92;
  _OWORD v93[2];
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  unsigned __int8 v97;
  char v98;
  char v99;

  v55 = sub_10004CFD4(&qword_1009DD5A0);
  v0 = swift_allocObject(v55, 248, 7);
  *(_OWORD *)(v0 + 16) = xmmword_100712B60;
  v1 = (void *)objc_opt_self(UIColor);
  sub_1005A1FA0(0, (uint64_t)objc_msgSend(v1, "bc_booksKeyColor"), 0, (uint64_t)v56);
  v2 = v56[1];
  v3 = v57;
  v4 = v59;
  v5 = v60;
  if (v61)
    v6 = 256;
  else
    v6 = 0;
  v7 = v62 != 0;
  *(_OWORD *)(v0 + 32) = v56[0];
  *(_OWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v0 + 72) = v58;
  *(_QWORD *)(v0 + 88) = v4;
  *(_WORD *)(v0 + 96) = v6 | v5;
  *(_BYTE *)(v0 + 98) = v7 | 0x80;
  sub_1005A1FA0(1, (uint64_t)objc_msgSend(v1, "bc_booksKeyColor"), 0, (uint64_t)v63);
  v8 = v63[1];
  v9 = v64;
  v10 = v66;
  v11 = v67;
  if (v68)
    v12 = 256;
  else
    v12 = 0;
  v13 = v69 != 0;
  *(_OWORD *)(v0 + 104) = v63[0];
  *(_OWORD *)(v0 + 120) = v8;
  *(_QWORD *)(v0 + 136) = v9;
  *(_OWORD *)(v0 + 144) = v65;
  *(_QWORD *)(v0 + 160) = v10;
  *(_WORD *)(v0 + 168) = v12 | v11;
  *(_BYTE *)(v0 + 170) = v13 | 0x80;
  sub_1005A1FA0(2, (uint64_t)objc_msgSend(v1, "bc_booksKeyColor"), 0, (uint64_t)v70);
  v14 = v70[1];
  v15 = v71;
  v16 = v73;
  v17 = v74;
  if (v75)
    v18 = 256;
  else
    v18 = 0;
  v19 = v76 != 0;
  *(_OWORD *)(v0 + 176) = v70[0];
  *(_OWORD *)(v0 + 192) = v14;
  *(_QWORD *)(v0 + 208) = v15;
  *(_OWORD *)(v0 + 216) = v72;
  *(_QWORD *)(v0 + 232) = v16;
  *(_WORD *)(v0 + 240) = v18 | v17;
  *(_BYTE *)(v0 + 242) = v19 | 0x80;
  v54 = v1;
  sub_1005A1FA0(4, (uint64_t)objc_msgSend(v1, "bc_booksKeyColor"), 0, (uint64_t)v77);
  v21 = v77[0];
  v20 = v77[1];
  v22 = v78;
  v23 = v79;
  v24 = v81;
  v25 = v80;
  v26 = v82;
  v27 = v83;
  v29 = *(_QWORD *)(v0 + 16);
  v28 = *(_QWORD *)(v0 + 24);
  v30 = v84;
  v31 = v85;
  if (v29 >= v28 >> 1)
  {
    v49 = (_QWORD *)v0;
    v53 = v78;
    v50 = v79;
    v52 = v81;
    v51 = sub_1005B058C((_QWORD *)(v28 > 1), v29 + 1, 1, v49);
    v24 = v52;
    v23 = v50;
    v22 = v53;
    v0 = (uint64_t)v51;
  }
  if (v30)
    v32 = 256;
  else
    v32 = 0;
  *(_QWORD *)(v0 + 16) = v29 + 1;
  v33 = v0 + 72 * v29;
  *(_QWORD *)(v33 + 32) = v21;
  *(_QWORD *)(v33 + 40) = v20;
  *(_QWORD *)(v33 + 48) = v22;
  *(_QWORD *)(v33 + 56) = v23;
  *(_QWORD *)(v33 + 64) = v25;
  *(_OWORD *)(v33 + 72) = v24;
  *(_QWORD *)(v33 + 88) = v26;
  *(_WORD *)(v33 + 96) = v32 | v27;
  *(_BYTE *)(v33 + 98) = (v31 != 0) | 0x80;
  v34 = swift_allocObject(v55, 104, 7);
  *(_OWORD *)(v34 + 16) = xmmword_10070CCA0;
  result = (char *)objc_msgSend(v54, "_monochromeCellImageTintColor");
  if (!result)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1005A1FA0(5, (uint64_t)result, 0, (uint64_t)v86);
  v36 = v86[1];
  v37 = v87;
  v38 = v89;
  v39 = v90;
  if (v91)
    v40 = 256;
  else
    v40 = 0;
  v41 = v92 != 0;
  *(_OWORD *)(v34 + 32) = v86[0];
  *(_OWORD *)(v34 + 48) = v36;
  *(_QWORD *)(v34 + 64) = v37;
  *(_OWORD *)(v34 + 72) = v88;
  *(_QWORD *)(v34 + 88) = v38;
  *(_WORD *)(v34 + 96) = v40 | v39;
  *(_BYTE *)(v34 + 98) = v41 | 0x80;
  v42 = swift_allocObject(v55, 104, 7);
  *(_OWORD *)(v42 + 16) = xmmword_10070CCA0;
  result = (char *)objc_msgSend(v54, "_monochromeCellImageTintColor");
  if (!result)
    goto LABEL_25;
  sub_1005A1FA0(13, (uint64_t)result, 0, (uint64_t)v93);
  v43 = v93[1];
  v44 = v94;
  v45 = v96;
  v46 = v97;
  if (v98)
    v47 = 256;
  else
    v47 = 0;
  v48 = v99 != 0;
  *(_OWORD *)(v42 + 32) = v93[0];
  *(_OWORD *)(v42 + 48) = v43;
  *(_QWORD *)(v42 + 64) = v44;
  *(_OWORD *)(v42 + 72) = v95;
  *(_QWORD *)(v42 + 88) = v45;
  *(_WORD *)(v42 + 96) = v47 | v46;
  *(_BYTE *)(v42 + 98) = v48 | 0xC0;
  result = (char *)swift_allocObject(v55, 248, 7);
  *((_OWORD *)result + 1) = xmmword_100712B60;
  *((_QWORD *)result + 4) = 1;
  *((_QWORD *)result + 5) = v0;
  *((_QWORD *)result + 6) = 1;
  *(_OWORD *)(result + 56) = 0u;
  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 83) = 0u;
  *((_QWORD *)result + 13) = 2;
  *((_QWORD *)result + 14) = v34;
  *(_OWORD *)(result + 120) = 0u;
  *(_OWORD *)(result + 136) = 0u;
  *(_OWORD *)(result + 152) = 0u;
  *(_DWORD *)(result + 167) = 0;
  *((_QWORD *)result + 22) = 3;
  *((_QWORD *)result + 23) = v42;
  *((_OWORD *)result + 12) = 0u;
  *((_OWORD *)result + 13) = 0u;
  *((_OWORD *)result + 14) = 0u;
  *(_DWORD *)(result + 239) = 0;
  return result;
}

uint64_t property wrapper backing initializer of SidebarViewModel.accountInfo(uint64_t a1)
{
  __int128 v1;
  _OWORD v3[2];
  char v4;

  v1 = *(_OWORD *)(a1 + 16);
  v3[0] = *(_OWORD *)a1;
  v3[1] = v1;
  v4 = *(_BYTE *)(a1 + 32);
  return Published.init(initialValue:)(v3, &type metadata for SidebarViewModel.AccountInfo);
}

uint64_t property wrapper backing initializer of SidebarViewModel.editMode(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for SidebarViewModel.EditMode);
}

uint64_t SidebarViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__programmaticSelection;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E5FD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__modelObjects;
  v4 = sub_10004CFD4(&qword_1009ED530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__accountInfo;
  v6 = sub_10004CFD4(&qword_1009ED540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__editMode;
  v8 = sub_10004CFD4(&qword_1009ED550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t SidebarViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__programmaticSelection;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E5FD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__modelObjects;
  v4 = sub_10004CFD4(&qword_1009ED530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__accountInfo;
  v6 = sub_10004CFD4(&qword_1009ED540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__editMode;
  v8 = sub_10004CFD4(&qword_1009ED550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10059FD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;

  v1 = sub_10004CFD4(&qword_1009ED550);
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009ED540);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009ED530);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009E5FD8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__programmaticSelection;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v31 = xmmword_10070CCB0;
  v32 = 0;
  v16 = sub_10004CFD4(&qword_1009ED510);
  Published.init(initialValue:)(&v27, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v17 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__modelObjects;
  *(_QWORD *)&v27 = _s5Books16SidebarViewModelC13_modelObjects33_BE2F35C5CD231E1E00E5EBFF782FD36ELL7Combine9PublishedVySayAC4ItemOGGvpfi_0();
  v18 = sub_10004CFD4(&qword_1009ED518);
  Published.init(initialValue:)(&v27, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  v19 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__accountInfo;
  v20 = objc_msgSend(objc_allocWithZone((Class)CNContact), "init");
  *(_QWORD *)&v27 = 0;
  *((_QWORD *)&v27 + 1) = 0xE000000000000000;
  LOBYTE(v28) = 0;
  *((_QWORD *)&v28 + 1) = v20;
  LOBYTE(v29) = 1;
  Published.init(initialValue:)(&v27, &type metadata for SidebarViewModel.AccountInfo);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v19, v6, v24);
  v21 = v0 + OBJC_IVAR____TtC5Books16SidebarViewModel__editMode;
  LOBYTE(v27) = 0;
  Published.init(initialValue:)(&v27, &type metadata for SidebarViewModel.EditMode);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v21, v3, v26);
  return v0;
}

uint64_t sub_10059FF70()
{
  return type metadata accessor for SidebarViewModel(0);
}

uint64_t type metadata accessor for SidebarViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009ED580, (uint64_t)&nominal type descriptor for SidebarViewModel);
}

void sub_10059FF8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  sub_1001F1044(319, &qword_1009ED590, &qword_1009ED510);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001F1044(319, &qword_1009ED598, &qword_1009ED518);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001F1000(319, &qword_1009ED5A0, (uint64_t)&type metadata for SidebarViewModel.AccountInfo);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001F1000(319, (unint64_t *)&unk_1009ED5A8, (uint64_t)&type metadata for SidebarViewModel.EditMode);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 4, v10, a1 + 80);
        }
      }
    }
  }
}

void destroy for SidebarViewModel.AccountInfo(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for SidebarViewModel.AccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for SidebarViewModel.AccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = v6;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SidebarViewModel.AccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SidebarViewModel.AccountInfo()
{
  return &type metadata for SidebarViewModel.AccountInfo;
}

uint64_t sub_1005A01CC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730198);
  v2 = swift_getKeyPath(&unk_1007301C0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005A023C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC5Books16SidebarViewModel16SearchFieldModel__text;
  v2 = sub_10004CFD4(&qword_1009D19E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCC5Books16SidebarViewModel16SearchFieldModel_placeholder + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005A02A4()
{
  return type metadata accessor for SidebarViewModel.SearchFieldModel(0);
}

uint64_t type metadata accessor for SidebarViewModel.SearchFieldModel(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009ED670, (uint64_t)&nominal type descriptor for SidebarViewModel.SearchFieldModel);
}

void sub_1005A02C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1001F1044(319, (unint64_t *)&unk_1009D1800, &qword_1009D2A80);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10072FCD8;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_1005A0348(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SidebarViewModel.HeaderModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SidebarViewModel.HeaderModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarViewModel.HeaderModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.HeaderModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.HeaderModel()
{
  return &type metadata for SidebarViewModel.HeaderModel;
}

uint64_t destroy for SidebarViewModel.ItemModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
}

uint64_t initializeWithCopy for SidebarViewModel.ItemModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v7 = *(void **)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v7;
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for SidebarViewModel.ItemModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a2 + 48);
  v11 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

__n128 initializeWithTake for SidebarViewModel.ItemModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SidebarViewModel.ItemModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarViewModel.ItemModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 67))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.ItemModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 67) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.ItemModel()
{
  return &type metadata for SidebarViewModel.ItemModel;
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1005A07F8 + 4 * byte_10072FC15[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1005A082C + 4 * byte_10072FC10[v4]))();
}

uint64_t sub_1005A082C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A0834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A083CLL);
  return result;
}

uint64_t sub_1005A0848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A0850);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1005A0854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A085C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.Section()
{
  return &type metadata for SidebarViewModel.Section;
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.EditMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005A08C4 + 4 * byte_10072FC1F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005A08F8 + 4 * byte_10072FC1A[v4]))();
}

uint64_t sub_1005A08F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A0900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A0908);
  return result;
}

uint64_t sub_1005A0914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A091CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005A0920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A0928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.EditMode()
{
  return &type metadata for SidebarViewModel.EditMode;
}

uint64_t initializeWithCopy for SidebarViewModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 66);
  v13 = *(unsigned __int16 *)(a2 + 64);
  sub_1004091F4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v13 | (v11 << 16));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 66) = v11;
  *(_WORD *)(a1 + 64) = v13;
  return a1;
}

uint64_t assignWithCopy for SidebarViewModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v22;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v22 = *(unsigned __int8 *)(a2 + 66);
  v11 = *(unsigned __int16 *)(a2 + 64);
  sub_1004091F4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11 | (v22 << 16));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_WORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 66) = v22;
  sub_10040927C(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for SidebarViewModel.Item(uint64_t a1, uint64_t a2)
{
  char v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int128 v14;
  __int128 v15;

  v3 = *(_BYTE *)(a2 + 66);
  v4 = *(_WORD *)(a2 + 64);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_WORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 66) = v3;
  sub_10040927C(v5, v7, v6, v8, v9, v10, v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarViewModel.Item(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1FFFFD && *(_BYTE *)(a1 + 67))
    return (*(_DWORD *)a1 + 2097149);
  v3 = ((*(unsigned __int8 *)(a1 + 66) >> 6) | (4
                                              * ((*(unsigned __int16 *)(a1 + 64) >> 2) & 0x3F80 | (*(_WORD *)(a1 + 64) >> 1) | (((*(unsigned __int8 *)(a1 + 66) >> 1) & 0x1F) << 14)))) ^ 0x1FFFFF;
  if (v3 >= 0x1FFFFC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x1FFFFC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 2097149;
    if (a3 >= 0x1FFFFD)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFD)
      *(_BYTE *)(result + 67) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 2) & 0x7FFFF) - (a2 << 19);
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 66) = (v3 >> 13) & 0xFE;
      *(_WORD *)(result + 64) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_1005A0C58(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 66) >> 6;
}

uint64_t sub_1005A0C64(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 64);
  result = a1 + 64;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x3F;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1005A0C80(uint64_t a1, int a2)
{
  uint64_t result;
  int v3;
  int v4;

  v3 = *(unsigned __int16 *)(a1 + 64);
  result = a1 + 64;
  v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x1010101 | (a2 << 22);
  *(_WORD *)result = v3 & 0x101;
  *(_BYTE *)(result + 2) = BYTE2(v4);
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.Item()
{
  return &type metadata for SidebarViewModel.Item;
}

void _s5Books16SidebarViewModelC4ItemOwxx_0(uint64_t a1)
{
  sub_10040927C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16));
}

uint64_t initializeWithCopy for SidebarViewModel.ProgrammaticSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  int v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(unsigned __int8 *)(a2 + 66);
  v14 = *(unsigned __int16 *)(a2 + 64);
  sub_1004091F4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14 | (v13 << 16));
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 66) = v13;
  *(_WORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for SidebarViewModel.ProgrammaticSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  int v23;

  v4 = *(_QWORD *)(a2 + 8);
  v22 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v23 = *(unsigned __int8 *)(a2 + 66);
  v11 = *(unsigned __int16 *)(a2 + 64);
  sub_1004091F4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11 | (v23 << 16));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_WORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 66) = v23;
  sub_10040927C(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for SidebarViewModel.ProgrammaticSelection(uint64_t a1, uint64_t a2)
{
  char v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_BYTE *)(a2 + 66);
  v5 = *(_WORD *)(a2 + 64);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_WORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 66) = v4;
  sub_10040927C(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarViewModel.ProgrammaticSelection(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1FFFFD && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 2097149);
  v3 = ((*(unsigned __int8 *)(a1 + 66) >> 6) | (4
                                              * ((*(unsigned __int16 *)(a1 + 64) >> 2) & 0x3F80 | (*(_WORD *)(a1 + 64) >> 1) | (((*(unsigned __int8 *)(a1 + 66) >> 1) & 0x1F) << 14)))) ^ 0x1FFFFF;
  if (v3 >= 0x1FFFFC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.ProgrammaticSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x1FFFFC)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 2097149;
    if (a3 >= 0x1FFFFD)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFD)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 2) & 0x7FFFF) - (a2 << 19);
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 66) = (v3 >> 13) & 0xFE;
      *(_WORD *)(result + 64) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarViewModel.ProgrammaticSelection()
{
  return &type metadata for SidebarViewModel.ProgrammaticSelection;
}

Swift::Int sub_1005A1054(uint64_t a1)
{
  Swift::UInt *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  Hasher._combine(_:)(*v1);
  return Hasher._finalize()();
}

unint64_t sub_1005A1090@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1005A2498(*a1);
  *a2 = result;
  return result;
}

void sub_1005A10B8(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFCE0;
}

uint64_t sub_1005A10C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1005A10F4 + 4 * byte_10072FC2C[*v0]))(0x686372616573, 0xE600000000000000);
}

uint64_t sub_1005A10F4()
{
  return 0x6F6F42656C707061;
}

uint64_t sub_1005A1110()
{
  return 0x7972617262696CLL;
}

uint64_t sub_1005A1128()
{
  return 0x697463656C6C6F63;
}

void sub_1005A1148()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1005A2A44(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

void sub_1005A1198()
{
  unsigned __int8 v0;

  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v0);
}

void sub_1005A1258()
{
  uint64_t v0;
  _QWORD v1[9];
  _BYTE v2[72];

  Hasher.init(_seed:)(v1, 0);
  sub_1005A2A44(v0, (uint64_t)v2);
  __asm { BR              X11 }
}

Swift::Int sub_1005A12B0()
{
  unsigned __int8 v1;

  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1005A138C()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1005A2A44(v0, (uint64_t)v1);
  sub_1005A1258();
}

void sub_1005A13C0()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1005A2A44(v0, (uint64_t)v1);
  sub_1005A1148();
}

void sub_1005A13FC(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;
  _QWORD v3[9];

  v2 = *(unsigned __int8 *)(v1 + 66);
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1005A1460()
{
  unsigned __int8 v0;

  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

void sub_1005A1558()
{
  __asm { BR              X10 }
}

uint64_t sub_1005A159C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain(v0);
  return v1;
}

uint64_t sub_1005A15BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)&loc_1005A15AC + 4 * byte_10072FC40[*v0]))();
}

void sub_1005A15D8()
{
  JUMPOUT(0x1005A15ACLL);
}

void sub_1005A15F4()
{
  JUMPOUT(0x1005A15ACLL);
}

void sub_1005A160C()
{
  JUMPOUT(0x1005A15ACLL);
}

uint64_t sub_1005A162C(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[72];
  _BYTE v6[72];

  sub_1005A2A44(a1, (uint64_t)v5);
  sub_1005A2A44(a2, (uint64_t)v6);
  sub_1005A1CAC((uint64_t)v5);
  return v3 & 1;
}

unint64_t sub_1005A1678()
{
  unint64_t result;

  result = qword_1009ED740;
  if (!qword_1009ED740)
  {
    result = swift_getWitnessTable(&unk_10072FD38, &type metadata for SidebarViewModel.Item);
    atomic_store(result, (unint64_t *)&qword_1009ED740);
  }
  return result;
}

unint64_t sub_1005A16C0()
{
  unint64_t result;

  result = qword_1009ED748;
  if (!qword_1009ED748)
  {
    result = swift_getWitnessTable(&unk_10072FE08, &type metadata for SidebarViewModel.EditMode);
    atomic_store(result, (unint64_t *)&qword_1009ED748);
  }
  return result;
}

unint64_t sub_1005A1708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED750;
  if (!qword_1009ED750)
  {
    v1 = sub_100030B74(&qword_1009ED758);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009ED750);
  }
  return result;
}

unint64_t sub_1005A1758()
{
  unint64_t result;

  result = qword_1009ED760;
  if (!qword_1009ED760)
  {
    result = swift_getWitnessTable(&unk_10072FF08, &type metadata for SidebarViewModel.Section);
    atomic_store(result, (unint64_t *)&qword_1009ED760);
  }
  return result;
}

Swift::Int sub_1005A179C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v4, v1, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

uint64_t sub_1005A17F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1005A1838(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1005A188C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v8[0] = v2;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)(a1 + 63);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v10[0] = v4;
  *(_DWORD *)((char *)v10 + 15) = *(_DWORD *)(a2 + 63);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1005A1BD8((uint64_t *)v7, (uint64_t)v9) & 1;
}

unint64_t sub_1005A18E8()
{
  unint64_t result;

  result = qword_1009ED768;
  if (!qword_1009ED768)
  {
    result = swift_getWitnessTable(&unk_10072FF30, &type metadata for SidebarViewModel.ItemModel);
    atomic_store(result, (unint64_t *)&qword_1009ED768);
  }
  return result;
}

unint64_t sub_1005A192C(uint64_t a1)
{
  unint64_t result;

  result = sub_1005A1950();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005A1950()
{
  unint64_t result;

  result = qword_1009ED770;
  if (!qword_1009ED770)
  {
    result = swift_getWitnessTable(&unk_10072FF58, &type metadata for SidebarViewModel.ItemModel);
    atomic_store(result, (unint64_t *)&qword_1009ED770);
  }
  return result;
}

unint64_t sub_1005A1998()
{
  unint64_t result;

  result = qword_1009ED778;
  if (!qword_1009ED778)
  {
    result = swift_getWitnessTable(&unk_10072FFB4, &type metadata for SidebarViewModel.HeaderModel);
    atomic_store(result, (unint64_t *)&qword_1009ED778);
  }
  return result;
}

unint64_t sub_1005A19DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1005A1A00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005A1A00()
{
  unint64_t result;

  result = qword_1009ED780;
  if (!qword_1009ED780)
  {
    result = swift_getWitnessTable(&unk_10072FFDC, &type metadata for SidebarViewModel.HeaderModel);
    atomic_store(result, (unint64_t *)&qword_1009ED780);
  }
  return result;
}

uint64_t sub_1005A1A44()
{
  return sub_1005A1A9C(&qword_1009ED788, (uint64_t)&unk_100730038);
}

uint64_t sub_1005A1A68(uint64_t a1)
{
  uint64_t result;

  result = sub_1005A1A9C((unint64_t *)&unk_1009ED790, (uint64_t)&unk_100730060);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005A1A9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SidebarViewModel.SearchFieldModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1005A1ADC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100730198);
  v5 = swift_getKeyPath(&unk_1007301C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1005A1B58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100730198);
  v6 = swift_getKeyPath(&unk_1007301C0);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1005A1BD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), v9 = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), v9 = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = *(_QWORD *)(a2 + 32), v19 = *(_QWORD *)(a2 + 40), v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), v9 = 0, (v20 & 1) != 0))
      {
        if (((*((unsigned __int8 *)a1 + 64) ^ *(unsigned __int8 *)(a2 + 64)) & 1) != 0
          || ((*((unsigned __int8 *)a1 + 65) ^ *(unsigned __int8 *)(a2 + 65)) & 1) != 0)
        {
          v9 = 0;
        }
        else
        {
          v9 = ((*((_BYTE *)a1 + 66) & 1) == 0) ^ *(_BYTE *)(a2 + 66);
        }
      }
    }
  }
  return v9 & 1;
}

void sub_1005A1CAC(uint64_t a1)
{
  _BYTE v1[80];

  sub_1005A2A44(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

BOOL sub_1005A1D00()
{
  uint64_t v0;
  int v1;
  int v2;
  _BYTE v4[136];
  __int16 v5;
  char v6;

  v5 = v1;
  v6 = BYTE2(v1) & 0x3F;
  v2 = v4[72];
  sub_1005A2A44(v0, (uint64_t)v4);
  return ((v4[66] << 16) & 0xC00000) == 0 && v2 == v4[0];
}

uint64_t sub_1005A1FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54[6];
  _BYTE v55[48];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[16];
  __int128 v70;
  _BYTE v71[24];

  v53 = a3;
  v52 = a2;
  v6 = sub_10004CFD4(&qword_1009E6050);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.MultiselectOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 0xFu && ((1 << a1) & 0xE01F) != 0)
  {
    v17 = 0;
    v49 = _swiftEmptyArrayStorage;
    goto LABEL_4;
  }
  v40 = RootBarItemsProvider.ItemKind.rawValue.getter(a1);
  if (v40 == 0x7972617262696CLL && v41 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
LABEL_24:
    v49 = _swiftEmptyArrayStorage;
    v17 = 1;
    goto LABEL_4;
  }
  v51 = v41;
  LODWORD(v50) = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, 0x7972617262696CLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v51);
  if ((v50 & 1) != 0)
    goto LABEL_24;
  v51 = sub_10004CFD4(&qword_1009E2318);
  v42 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
  v43 = *(_QWORD *)(v42 + 72);
  v44 = *(unsigned __int8 *)(v42 + 80);
  v50 = (v44 + 32) & ~v44;
  v45 = swift_allocObject(v51, v50 + v43, v44 | 7);
  *(_OWORD *)(v45 + 16) = xmmword_10070CCA0;
  v49 = (_QWORD *)v45;
  v51 = v45 + v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v13);
  v46 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v8, 1, 1, v46);
  UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v8, 0, 0);
  static UICellAccessory.multiselect(displayed:options:)(v16, v12);
  v47 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17 = 1;
  v47(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_4:
  v18 = sub_100414D80(a1);
  v20 = v19;
  sub_100047B64(a1, v54);
  sub_100025B3C((uint64_t)v54, (uint64_t)&v62, (uint64_t *)&unk_1009D7970);
  if (*((_QWORD *)&v62 + 1))
  {
    v65 = v62;
    v66 = v63;
    v67 = v64;
    v68 = v62;
    v50 = *((_QWORD *)&v63 + 1);
    v51 = v63;
    sub_100210D88((uint64_t)&v68);
    sub_100025B3C((uint64_t)&v67, (uint64_t)v69, &qword_1009D2A80);
    sub_100210D88((uint64_t)v69);
  }
  else
  {
    v50 = 0xE000000000000000;
    v51 = 0;
  }
  sub_100047804(a1, (uint64_t)v55);
  sub_100025B3C((uint64_t)v55, (uint64_t)&v56, (uint64_t *)&unk_1009D7970);
  if (*((_QWORD *)&v56 + 1))
  {
    v59 = v56;
    v60 = v57;
    v61 = v58;
    v22 = *((_QWORD *)&v57 + 1);
    v21 = v57;
    v70 = v56;
    sub_100210D88((uint64_t)&v70);
    sub_100025B3C((uint64_t)&v61, (uint64_t)v71, &qword_1009D2A80);
    sub_100210D88((uint64_t)v71);
    if (v17)
    {
LABEL_9:
      v23 = RootBarItemsProvider.ItemKind.rawValue.getter(a1);
      v25 = v24;
      if (v23 == 0x7972617262696CLL && v24 == 0xE700000000000000)
      {
        v26 = v20;
        v27 = v18;
        swift_bridgeObjectRelease(0xE700000000000000);
        v28 = 0;
      }
      else
      {
        v26 = v20;
        v27 = v18;
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, 0x7972617262696CLL, 0xE700000000000000, 0);
        swift_bridgeObjectRelease(v25);
        v28 = v29 ^ 1;
      }
      goto LABEL_15;
    }
  }
  else
  {
    v22 = 0xE400000000000000;
    v21 = 1802465122;
    if (v17)
      goto LABEL_9;
  }
  v26 = v20;
  v27 = v18;
  v28 = 0;
LABEL_15:
  v30 = RootBarItemsProvider.ItemKind.rawValue.getter(a1);
  v32 = v31;
  if (v30 == 0x656C6C6F4377656ELL && v31 == 0xED00006E6F697463)
  {
    result = swift_bridgeObjectRelease(0xED00006E6F697463);
    v34 = 1;
  }
  else
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, 0x656C6C6F4377656ELL, 0xED00006E6F697463, 0);
    result = swift_bridgeObjectRelease(v32);
  }
  v35 = v53;
  v37 = v51;
  v36 = v52;
  v38 = v49;
  v39 = v50;
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v26;
  *(_QWORD *)(a4 + 16) = v37;
  *(_QWORD *)(a4 + 24) = v39;
  *(_QWORD *)(a4 + 32) = v21;
  *(_QWORD *)(a4 + 40) = v22;
  *(_QWORD *)(a4 + 48) = v36;
  *(_QWORD *)(a4 + 56) = v38;
  *(_BYTE *)(a4 + 64) = v28 & 1;
  *(_BYTE *)(a4 + 65) = v35 & 1;
  *(_BYTE *)(a4 + 66) = v34 & 1;
  return result;
}

unint64_t sub_1005A2498(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

_QWORD *sub_1005A24A8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = sub_10004CFD4(&qword_1009E6050);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E6058);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xFE) != 2)
    return _swiftEmptyArrayStorage;
  v17 = sub_10004CFD4(&qword_1009E2318);
  v18 = type metadata accessor for UICellAccessory(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_10070CCA0;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for UICellAccessory.DisplayedState.always(_:), v13);
  v20 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  v21 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v8, 2, v4, 0);
  static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v16, v12, 0, 0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return (_QWORD *)v19;
}

void sub_1005A26E8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for Locale(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __asm { BR              X9 }
}

uint64_t sub_1005A27D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;

  v8 = String.LocalizationValue.init(stringLiteral:)(0x6F4220656C707041, 0xEB00000000736B6FLL);
  static Locale.current.getter(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v3, v2);
  v9 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1, v0);
  v12 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v11, v4, "Apple Books sidebar header", 26, 2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
  return v12;
}

uint64_t sub_1005A2A44(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(_DWORD *)(a2 + 63) = *(_DWORD *)(a1 + 63);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_1005A2A6C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16));
  return a1;
}

id sub_1005A2B14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Books21MainToolbarController____lazy_storage___toolbarView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books21MainToolbarController____lazy_storage___toolbarView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Books21MainToolbarController____lazy_storage___toolbarView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MainToolbarView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1005A2C2C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  Class isa;
  objc_super v58;

  v58.receiver = v0;
  v58.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v58, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setNavigationBarHidden:animated:", 1, 0);

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Books21MainToolbarController_mainContentViewController];
  objc_msgSend(v0, "addChildViewController:", v3);
  v4 = objc_msgSend(v3, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4;
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = v6;
  objc_msgSend(v6, "addSubview:", v5);

  objc_msgSend(v3, "didMoveToParentViewController:", v0);
  v8 = (char *)sub_1005A2B14();
  v9 = &v8[OBJC_IVAR____TtC5Books15MainToolbarView_delegate];
  *((_QWORD *)v9 + 1) = &off_100912FF8;
  swift_unknownObjectWeakAssign(v9, v0);

  v10 = sub_1005A2B14();
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v11 = objc_msgSend(v0, "view");
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  v13 = sub_1005A2B14();
  objc_msgSend(v12, "addSubview:", v13);

  v14 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v15 = swift_allocObject(v14, 88, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1007154A0;
  v16 = sub_1005A2B14();
  v17 = objc_msgSend(v16, "topAnchor");

  v18 = objc_msgSend(v0, "view");
  if (!v18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "topAnchor");

  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v15 + 32) = v21;
  v22 = sub_1005A2B14();
  v23 = objc_msgSend(v22, "leadingAnchor");

  v24 = objc_msgSend(v0, "view");
  if (!v24)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "leadingAnchor");

  v27 = objc_msgSend(v23, "constraintEqualToAnchor:", v26);
  *(_QWORD *)(v15 + 40) = v27;
  v28 = sub_1005A2B14();
  v29 = objc_msgSend(v28, "trailingAnchor");

  v30 = objc_msgSend(v0, "view");
  if (!v30)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "trailingAnchor");

  v33 = objc_msgSend(v29, "constraintEqualToAnchor:", v32);
  *(_QWORD *)(v15 + 48) = v33;
  v34 = objc_msgSend(v5, "topAnchor");
  v35 = objc_msgSend(v0, "view");
  if (!v35)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "topAnchor");

  v38 = objc_msgSend(v34, "constraintEqualToAnchor:", v37);
  *(_QWORD *)(v15 + 56) = v38;
  v39 = objc_msgSend(v5, "leadingAnchor");
  v40 = objc_msgSend(v0, "view");
  if (!v40)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "leadingAnchor");

  v43 = objc_msgSend(v39, "constraintEqualToAnchor:", v42);
  *(_QWORD *)(v15 + 64) = v43;
  v44 = objc_msgSend(v5, "trailingAnchor");
  v45 = objc_msgSend(v0, "view");
  if (!v45)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v46 = v45;
  v47 = objc_msgSend(v45, "trailingAnchor");

  v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);
  *(_QWORD *)(v15 + 72) = v48;
  v49 = objc_msgSend(v5, "bottomAnchor");
  v50 = objc_msgSend(v0, "view");
  if (v50)
  {
    v51 = v50;
    v52 = (void *)objc_opt_self(NSLayoutConstraint);
    v53 = objc_msgSend(v51, "bottomAnchor");

    v54 = objc_msgSend(v49, "constraintEqualToAnchor:", v53);
    *(_QWORD *)(v15 + 80) = v54;
    specialized Array._endMutation()(v55);
    v56 = v15;
    sub_10034132C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v52, "activateConstraints:", isa, swift_bridgeObjectRelease(v56).n128_f64[0]);

    return;
  }
LABEL_23:
  __break(1u);
}

id sub_1005A3220()
{
  char *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  void *v19;
  char *v20;
  double v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, "viewDidLayoutSubviews");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "window");

    if (v3)
    {
      v4 = sub_1005A2B14();
      v5 = sub_1005A2B14();
      objc_msgSend(v5, "bounds");
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      objc_msgSend(v4, "convertRect:toCoordinateSpace:", v3, v7, v9, v11, v13);
      v15 = v14;

      objc_msgSend(v3, "frame");
      v17 = v16;
      v18 = (char *)sub_1005A2B14();
      v19 = *(void **)&v18[OBJC_IVAR____TtC5Books15MainToolbarView_leadingStackViewConstraint];
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v20, "setActive:", 0);
        v21 = 100.0;
        if (v17 != v15)
          v21 = 12.0;
        objc_msgSend(v20, "setConstant:", v21);
        objc_msgSend(v20, "setActive:", 1);

        v3 = v18;
        v18 = v20;
      }

    }
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books21MainToolbarController_syncLayoutController], "flush");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MainToolbarController()
{
  return objc_opt_self(_TtC5Books21MainToolbarController);
}

uint64_t sub_1005A3540()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009ED810);
  sub_100048F64(v0, (uint64_t)qword_1009ED810);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000014, 0x80000001007D5830);
}

uint64_t sub_1005A35B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 32) = v3;
  return swift_bridgeObjectRetain(v2);
}

id sub_1005A35CC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  double v3;
  double v4;
  id v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = *((double *)v0 + 2);
  v4 = *((double *)v0 + 3);
  v5 = objc_allocWithZone((Class)type metadata accessor for MicaLayerView());
  swift_bridgeObjectRetain(v2);
  return sub_1005A36F8(v1, v2, 0, v3, v4);
}

double sub_1005A3628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005A4154(a1, a2, *(_BYTE *)(v2 + 32));
}

uint64_t sub_1005A3634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005A4220();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1005A3684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005A4220();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1005A36D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A4220();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_1005A36F8(uint64_t a1, unint64_t a2, char a3, double a4, double a5)
{
  char *v5;
  uint64_t *v10;
  void *v11;
  char *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  id result;
  void *v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double x;
  double y;
  double width;
  double height;
  CGFloat *v36;
  id v37;
  id v38;
  id v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  CGFloat v47;
  char *v48;
  id v49;
  objc_class *v50;
  objc_super v51;
  CGAffineTransform v52;
  uint64_t v53;
  objc_super v54;
  CGRect v55;
  CGRect v56;

  v10 = (uint64_t *)&v5[OBJC_IVAR____TtC5Books13MicaLayerView_mica];
  *v10 = a1;
  v10[1] = a2;
  *(double *)&v5[OBJC_IVAR____TtC5Books13MicaLayerView_onTimeEnd] = a4;
  *(double *)&v5[OBJC_IVAR____TtC5Books13MicaLayerView_offTimeEnd] = a5;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books13MicaLayerView_timeToStopPlayback] = 0;
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = v5;
  v13 = objc_msgSend(v11, "mainBundle", swift_bridgeObjectRetain(a2).n128_f64[0]);
  swift_bridgeObjectRetain(a2);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "pathForResource:ofType:", v14, v15);

  if (!v16)
    goto LABEL_7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = objc_allocWithZone((Class)TUIMicaPlayer);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  v21 = objc_msgSend(v19, "initWithPath:retinaScale:", v20, 2.0);

  if (!v21)
  {
LABEL_7:
    if (qword_1009CE8B8 != -1)
      swift_once(&qword_1009CE8B8, sub_1005A3540);
    v42 = type metadata accessor for Logger(0);
    sub_100048F64(v42, (uint64_t)qword_1009ED810);
    swift_bridgeObjectRetain(a2);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = COERCE_DOUBLE(swift_slowAlloc(32, -1));
      v52.a = v47;
      *(_DWORD *)v46 = 136315138;
      swift_bridgeObjectRetain(a2);
      v53 = sub_100040F58(a1, a2, (uint64_t *)&v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v46 + 4, v46 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "failed loading %s", v46, 0xCu);
      swift_arrayDestroy(*(_QWORD *)&v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(*(_QWORD *)&v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v48 = &v12[OBJC_IVAR____TtC5Books13MicaLayerView_micaSize];
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v49 = objc_msgSend(objc_allocWithZone((Class)TUIMicaPlayer), "init");
    *(_QWORD *)&v12[OBJC_IVAR____TtC5Books13MicaLayerView_player] = v49;
    v12[OBJC_IVAR____TtC5Books13MicaLayerView_isOn] = 0;

    v50 = (objc_class *)type metadata accessor for MicaLayerView();
    v54.receiver = v12;
    v54.super_class = v50;
    return objc_msgSendSuper2(&v54, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }
  result = objc_msgSend(v21, "rootLayer");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "bounds");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    CGAffineTransformMakeScale(&v52, 0.5, 0.5);
    v55.origin.x = v25;
    v55.origin.y = v27;
    v55.size.width = v29;
    v55.size.height = v31;
    v56 = CGRectApplyAffineTransform(v55, &v52);
    x = v56.origin.x;
    y = v56.origin.y;
    width = v56.size.width;
    height = v56.size.height;
    v36 = (CGFloat *)&v12[OBJC_IVAR____TtC5Books13MicaLayerView_micaSize];
    *v36 = v56.size.width;
    v36[1] = v56.size.height;
    *(_QWORD *)&v12[OBJC_IVAR____TtC5Books13MicaLayerView_player] = v21;
    v12[OBJC_IVAR____TtC5Books13MicaLayerView_isOn] = a3 & 1;
    v37 = v21;

    if ((a3 & 1) != 0)
      objc_msgSend(v37, "setPlaybackTime:", a4);
    swift_bridgeObjectRelease(a2);
    v51.receiver = v12;
    v51.super_class = (Class)type metadata accessor for MicaLayerView();
    v38 = objc_msgSendSuper2(&v51, "initWithFrame:", x, y, width, height);
    objc_msgSend(v37, "setDelegate:", v38);
    v39 = objc_msgSend(v38, "layer");
    objc_msgSend(v37, "addToLayer:onTop:gravity:", v39, 1, kCAGravityCenter);

    LODWORD(v40) = 1144750080;
    objc_msgSend(v38, "setContentHuggingPriority:forAxis:", 1, v40);
    LODWORD(v41) = 1144750080;
    objc_msgSend(v38, "setContentHuggingPriority:forAxis:", 0, v41);

    return v38;
  }
  __break(1u);
  return result;
}

id sub_1005A3CA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MicaLayerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MicaLayerView()
{
  return objc_opt_self(_TtC5Books13MicaLayerView);
}

id sub_1005A3D34(void *a1)
{
  uint64_t v1;
  void *v3;
  id result;
  BOOL v5;
  double v6;
  double v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books13MicaLayerView_player);
  result = objc_msgSend(v3, "isPlaying");
  if ((_DWORD)result)
    v5 = a1 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    result = objc_msgSend(a1, "playbackTime");
    if (*(double *)(v1 + OBJC_IVAR____TtC5Books13MicaLayerView_timeToStopPlayback) <= v6)
    {
      objc_msgSend(v3, "pause");
      result = objc_msgSend(v3, "playbackTime");
      if (*(double *)(v1 + OBJC_IVAR____TtC5Books13MicaLayerView_offTimeEnd) <= v7)
        return objc_msgSend(v3, "setPlaybackTime:", 0.0);
    }
  }
  return result;
}

uint64_t initializeWithCopy for MicaViewConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for MicaViewConfig(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for MicaViewConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for MicaViewConfig()
{
  return &type metadata for MicaViewConfig;
}

ValueMetadata *type metadata accessor for MicaView()
{
  return &type metadata for MicaView;
}

uint64_t sub_1005A3F4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100878848, 1);
}

uint64_t _s5Books8MicaViewVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s5Books8MicaViewVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s5Books8MicaViewVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for MicaMaskView()
{
  return &type metadata for MicaMaskView;
}

unint64_t sub_1005A4054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED8E8;
  if (!qword_1009ED8E8)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009ED8F0);
    sub_1002810E0();
    sub_1005A40C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009ED8E8);
  }
  return result;
}

unint64_t sub_1005A40C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ED900;
  if (!qword_1009ED900)
  {
    v1 = sub_100030B74(&qword_1009ED908);
    result = swift_getWitnessTable(&protocol conformance descriptor for _MaskEffect<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009ED900);
  }
  return result;
}

unint64_t sub_1005A4110()
{
  unint64_t result;

  result = qword_1009ED910;
  if (!qword_1009ED910)
  {
    result = swift_getWitnessTable(&unk_1007302F4, &type metadata for MicaMaskView);
    atomic_store(result, (unint64_t *)&qword_1009ED910);
  }
  return result;
}

double sub_1005A4154(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  void *v6;
  unsigned __int8 v7;
  uint64_t *v8;
  double result;

  v3 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Books13MicaLayerView_isOn);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Books13MicaLayerView_isOn) = a3;
  if (v3 != (a3 & 1))
  {
    v6 = *(void **)(a1 + OBJC_IVAR____TtC5Books13MicaLayerView_player);
    v7 = objc_msgSend(v6, "isPlaying");
    if ((a3 & 1) != 0)
    {
      if ((v7 & 1) != 0)
        objc_msgSend(v6, "setPlaybackTime:", 0.0);
      else
        objc_msgSend(v6, "play");
      v8 = &OBJC_IVAR____TtC5Books13MicaLayerView_onTimeEnd;
    }
    else
    {
      if ((v7 & 1) == 0)
        objc_msgSend(v6, "play");
      v8 = &OBJC_IVAR____TtC5Books13MicaLayerView_offTimeEnd;
    }
    result = *(double *)(a1 + *v8);
    *(double *)(a1 + OBJC_IVAR____TtC5Books13MicaLayerView_timeToStopPlayback) = result;
  }
  return result;
}

unint64_t sub_1005A4220()
{
  unint64_t result;

  result = qword_1009ED920;
  if (!qword_1009ED920)
  {
    result = swift_getWitnessTable(&unk_100730344, &type metadata for MicaMaskView);
    atomic_store(result, (unint64_t *)&qword_1009ED920);
  }
  return result;
}

uint64_t sub_1005A4264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1005A4308()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void *v34;
  void *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D5D90);
  v30 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  static ReadingHistory.UserDefaults.sessionStartOffset.getter();
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v4, "integerForKey:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  objc_msgSend(v1, "setReadingSessionCurrentStartOffset:", v8);
  type metadata accessor for Defaults(0);
  LOBYTE(v7) = static Defaults.hotReloadEnabled.getter();
  v9 = (objc_class *)type metadata accessor for DebugBoolDefaultSwitch();
  v10 = objc_allocWithZone(v9);
  v35 = sub_1005A4738;
  v36 = 0;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004DCB4;
  v34 = &unk_100913428;
  v11 = _Block_copy(&aBlock);
  v12 = objc_msgSend(v10, "initWithInitialValue:synchronize:action:", v7 & 1, v11, 0, swift_release(v36).n128_f64[0]);
  _Block_release(v11);
  objc_msgSend(v1, "setHotReloadModeSwitch:", v12);

  LOBYTE(v12) = static Defaults.launchWithBundleJS.getter();
  v13 = objc_allocWithZone(v9);
  v35 = sub_1005A47D4;
  v36 = 0;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004DCB4;
  v34 = &unk_100913450;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(v13, "initWithInitialValue:synchronize:action:", v12 & 1, v14, 0, swift_release(v36).n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(v1, "setLaunchWithBundleJSSwitch:", v15);

  LOBYTE(v15) = static Defaults.allowUnsignedJetpack.getter();
  v16 = objc_allocWithZone(v9);
  v35 = sub_1005A4804;
  v36 = 0;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004DCB4;
  v34 = &unk_100913478;
  v17 = _Block_copy(&aBlock);
  v18 = objc_msgSend(v16, "initWithInitialValue:synchronize:action:", v15 & 1, v17, 0, swift_release(v36).n128_f64[0]);
  _Block_release(v17);
  objc_msgSend(v1, "setAllowUnsignedJetpackSwitch:", v18);

  LOBYTE(v4) = static Defaults.loadBundledJetPackFromJSRoot.getter();
  v19 = objc_allocWithZone(v9);
  v35 = sub_1005A4834;
  v36 = 0;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004DCB4;
  v34 = &unk_1009134A0;
  v20 = _Block_copy(&aBlock);
  v21 = objc_msgSend(v19, "initWithInitialValue:synchronize:action:", v4 & 1, v20, 0, swift_release(v36).n128_f64[0]);
  _Block_release(v20);
  objc_msgSend(v1, "setLoadBundledJetPackFromJSRootSwitch:", v21);

  if (qword_1009CDD78 != -1)
    swift_once(&qword_1009CDD78, sub_100270F50);
  v22 = sub_100048F64(v2, (uint64_t)qword_1009D5CC8);
  v23 = v29;
  v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v29, v22, v2);
  UserDefault.wrappedValue.getter(&aBlock, v2);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v2);
  v25 = aBlock;
  v26 = objc_allocWithZone(v9);
  v35 = sub_1005A4864;
  v36 = 0;
  aBlock = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_10004DCB4;
  v34 = &unk_1009134C8;
  v27 = _Block_copy(&aBlock);
  v28 = objc_msgSend(v26, "initWithInitialValue:synchronize:action:", v25, v27, 0, swift_release(v36).n128_f64[0]);
  _Block_release(v27);
  objc_msgSend(v1, "setDontShowDisabledSwitch:", v28);

}

void sub_1005A4738(uint64_t a1)
{
  id v2;

  type metadata accessor for Defaults(0);
  static Defaults.hotReloadEnabled.setter(a1);
  if (objc_msgSend((id)objc_opt_self(JSADevice), "isInternalBuild"))
  {
    type metadata accessor for HotReloadController(0);
    v2 = (id)static HotReloadController.shared.getter();
    if ((a1 & 1) != 0)
      dispatch thunk of HotReloadController.start(completion:)(0, 0);
    else
      dispatch thunk of HotReloadController.stop(completion:)(0, 0);

  }
}

uint64_t sub_1005A47D4(uint64_t a1)
{
  type metadata accessor for Defaults(0);
  return static Defaults.launchWithBundleJS.setter(a1);
}

uint64_t sub_1005A4804(uint64_t a1)
{
  type metadata accessor for Defaults(0);
  return static Defaults.allowUnsignedJetpack.setter(a1);
}

uint64_t sub_1005A4834(uint64_t a1)
{
  type metadata accessor for Defaults(0);
  return static Defaults.loadBundledJetPackFromJSRoot.setter(a1);
}

uint64_t sub_1005A4864(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = sub_10004CFD4(&qword_1009D5D90);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CDD78 != -1)
    swift_once(&qword_1009CDD78, sub_100270F50);
  v6 = sub_100048F64(v2, (uint64_t)qword_1009D5CC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v9 = a1 & 1;
  UserDefault.wrappedValue.setter(&v9, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1005A4974()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id result;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  id v27;
  void *v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  id v47;
  uint64_t v48;
  Swift::String v49;
  void *object;
  Swift::String v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSString v58;
  void *v59;
  double v60;
  id v61;
  uint64_t v62;
  NSString v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  char *v68;
  id v69;
  void (*v70)(uint64_t, char *, uint64_t);
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t aBlock;
  unint64_t v80;
  void (*v81)(uint64_t, void *);
  void *v82;
  void (*v83)(int);
  uint64_t v84;
  uint64_t v85;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009DE3E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v77 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v73 = v6;
  v74 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v75 = v1;
  v76 = (char *)&v67 - v9;
  result = objc_msgSend(v1, "tableView", v8);
  if (!result)
    goto LABEL_46;
  v11 = result;
  v12 = objc_msgSend(result, "indexPathForSelectedRow");

  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v4, 1, 1, v5);
    return (id)sub_100010960((uint64_t)v4, (uint64_t *)&unk_1009DE3E0);
  }
  v13 = v74;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v14 = v77;
  v15 = *(_QWORD *)(v77 + 32);
  ((void (*)(char *, char *, uint64_t))v15)(v4, v13, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v5) == 1)
    return (id)sub_100010960((uint64_t)v4, (uint64_t *)&unk_1009DE3E0);
  v16 = v76;
  v17.n128_f64[0] = ((double (*)(char *, char *, uint64_t))v15)(v76, v4, v5);
  v18 = IndexPath.row.getter(v17);
  v19 = objc_msgSend(v75, "sections");
  v20 = sub_100009E04(0, (unint64_t *)&unk_1009ED950, &off_1008E51E8);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = (char *)*(id *)(v21 + 8 * v18 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_38;
  }
  v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v21);
LABEL_8:
  v16 = v23;
  v24 = objc_msgSend(v23, "entries", swift_bridgeObjectRelease(v21).n128_f64[0]);
  v25 = sub_100009E04(0, (unint64_t *)&qword_1009D57C8, off_1008E51E0);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  v22 = IndexPath.row.getter(v26);
  v70 = (void (*)(uint64_t, char *, uint64_t))v15;
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v27 = *(id *)(v21 + 8 * v22 + 32);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_38:
  v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v21);
LABEL_12:
  v28 = v27;
  *(_QWORD *)&v29 = swift_bridgeObjectRelease(v21).n128_u64[0];
  v67 = v28;
  v30 = objc_msgSend(v28, "title", v29);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v71 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v33, 0, 1);

  v34 = objc_msgSend(v75, "sessionStartOffsets");
  v35 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

  if ((unint64_t)v15 >> 62)
  {
LABEL_41:
    if (v15 < 0)
      v66 = v15;
    else
      v66 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v36 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v15);
    goto LABEL_14;
  }
  v36 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  v72 = v5;
  v68 = v16;
  if (!v36)
  {
    swift_bridgeObjectRelease(v15);
    v38 = _swiftEmptyArrayStorage;
    v44 = _swiftEmptyArrayStorage[2];
    if (!v44)
    {
LABEL_34:
      swift_bridgeObjectRelease(v38);
      v63 = String._bridgeToObjectiveC()();
      v64 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v63, 1, 0);

      v65 = v71;
      objc_msgSend(v71, "addAction:", v64);

      objc_msgSend(v75, "presentViewController:animated:completion:", v65, 1, 0);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v76, v72);
    }
LABEL_29:
    v69 = (id)objc_opt_self(UIAlertAction);
    v45 = v38 + 4;
    v46 = v74;
    v47 = v75;
    v48 = v72;
    do
    {
      v62 = *v45;
      v78 = v45 + 1;
      if (v62)
      {
        aBlock = 45;
        v80 = 0xE100000000000000;
        v85 = v62 / 60;
        v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v49._object;
        String.append(_:)(v49);
        swift_bridgeObjectRelease(object);
        v51._countAndFlagsBits = 1852402976;
        v51._object = (void *)0xE400000000000000;
        String.append(_:)(v51);
        v52 = v80;
      }
      else
      {
        v52 = 0xE900000000000074;
      }
      v53 = v77;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v46, v76, v48);
      v54 = *(unsigned __int8 *)(v53 + 80);
      v55 = (v54 + 32) & ~v54;
      v56 = swift_allocObject(&unk_1009133E8, v55 + v73, v54 | 7);
      *(_QWORD *)(v56 + 16) = v47;
      *(_QWORD *)(v56 + 24) = v62;
      v70(v56 + v55, v46, v48);
      v57 = v47;
      v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v52);
      v83 = sub_1005A6B08;
      v84 = v56;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v80 = 1107296256;
      v81 = sub_1001EDBF0;
      v82 = &unk_100913400;
      v59 = _Block_copy(&aBlock);
      *(_QWORD *)&v60 = swift_release(v84).n128_u64[0];
      v61 = objc_msgSend(v69, "actionWithTitle:style:handler:", v58, 0, v59, v60);
      _Block_release(v59);

      objc_msgSend(v71, "addAction:", v61);
      --v44;
      v45 = v78;
    }
    while (v44);
    goto LABEL_34;
  }
  aBlock = (uint64_t)_swiftEmptyArrayStorage;
  result = (id)sub_100366AFC(0, v36 & ~(v36 >> 63), 0);
  if ((v36 & 0x8000000000000000) == 0)
  {
    v37 = 0;
    v38 = (_QWORD *)aBlock;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v15);
      else
        v39 = *(id *)(v15 + 8 * v37 + 32);
      v40 = v39;
      v41 = objc_msgSend(v39, "integerValue");

      aBlock = (uint64_t)v38;
      v43 = v38[2];
      v42 = v38[3];
      if (v43 >= v42 >> 1)
      {
        sub_100366AFC(v42 > 1, v43 + 1, 1);
        v38 = (_QWORD *)aBlock;
      }
      ++v37;
      v38[2] = v43 + 1;
      v38[v43 + 4] = v41;
    }
    while (v36 != v37);
    swift_bridgeObjectRelease(v15);
    v44 = v38[2];
    if (!v44)
      goto LABEL_34;
    goto LABEL_29;
  }
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

void sub_1005A50E8(int a1, id a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;

  objc_msgSend(a2, "setReadingSessionCurrentStartOffset:");
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = objc_msgSend(a2, "readingSessionCurrentStartOffset");
  static ReadingHistory.UserDefaults.sessionStartOffset.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setInteger:forKey:", v7, v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = objc_msgSend(a2, "tableView");
  if (v11)
  {
    v12 = v11;
    v13 = sub_10004CFD4(&qword_1009DE368);
    v14 = type metadata accessor for IndexPath(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned __int8 *)(v15 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(v13, v17 + *(_QWORD *)(v15 + 72), v16 | 7);
    *(_OWORD *)(v18 + 16) = xmmword_10070CCA0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v18 + v17, a4, v14);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 100, swift_bridgeObjectRelease(v18).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1005A5310(double a1)
{
  void *v1;
  id v3;
  objc_class *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t done;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  _QWORD v23[5];
  uint64_t v24;
  objc_super v25;

  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 1);
  v4 = (objc_class *)type metadata accessor for EditDatePickerHeaderViewController();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR____TtC5Books34EditDatePickerHeaderViewController_titleString];
  *(_QWORD *)v6 = 0x206F742065746144;
  *((_QWORD *)v6 + 1) = 0xEF3A6F7420646461;
  v7 = &v5[OBJC_IVAR____TtC5Books34EditDatePickerHeaderViewController_imageName];
  *(_QWORD *)v7 = 0x7261646E656C6163;
  *((_QWORD *)v7 + 1) = 0xE800000000000000;
  v25.receiver = v5;
  v25.super_class = v4;
  v8 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v3, "_setHeaderContentViewController:", v8);
  v9 = type metadata accessor for EditDatePickerViewController(0);
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  objc_msgSend(v3, "setContentViewController:", v10);
  done = type metadata accessor for EditDatePickerDoneActionViewController();
  v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(done)), "init");
  v13 = (void *)objc_opt_self(UIAlertAction);
  v14 = swift_allocObject(&unk_100913398, 32, 7);
  *(_QWORD *)(v14 + 16) = v10;
  *(double *)(v14 + 24) = a1;
  v23[4] = sub_1005A6A88;
  v24 = v14;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10000B65C;
  v23[3] = &unk_1009133B0;
  v15 = _Block_copy(v23);
  v16 = v24;
  v17 = v12;
  v18 = v10;
  v19 = objc_msgSend(v13, "_actionWithContentViewController:style:handler:", v17, 0, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);

  if (v19)
    objc_msgSend(v3, "addAction:", v19);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v13, "actionWithTitle:style:handler:", v20, 1, 0);

  v22 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
  objc_msgSend(v21, "_setTitleTextColor:", v22);

  objc_msgSend(v3, "addAction:", v21);
  objc_msgSend(v1, "presentViewController:animated:completion:", v3, 1, 0);

}

uint64_t sub_1005A5610(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v24;
  Class isa;
  _OWORD v26[2];

  v5 = sub_10004CFD4(&qword_1009ED930);
  __chkstk_darwin(v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Notification(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                              + OBJC_IVAR____TtC5Books28EditDatePickerViewController_datePicker), "date", v18));
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

  ReadingHistory.Notification.AddFakeSession.init(date:duration:)(v15, a1);
  v22 = sub_100008DB0(&qword_1009ED940, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.Notification.AddFakeSession, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.AddFakeSession);
  memset(v26, 0, sizeof(v26));
  Notificationable.toNotification(object:)(v26, v16, v22);
  sub_100010960((uint64_t)v26, (uint64_t *)&unk_1009D04E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    return sub_100010960((uint64_t)v7, &qword_1009ED930);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v24 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    isa = Notification._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "postNotification:", isa);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

void sub_1005A593C()
{
  void *v0;
  NSString v1;
  id v2;
  NSString v3;
  void *v4;
  void *v5;
  id v6;
  NSString v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  void **v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v1, 1);

  v3 = String._bridgeToObjectiveC()();
  v16 = sub_1005A5BA8;
  v17 = 0;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1001EDBF0;
  v15 = &unk_100913338;
  v4 = _Block_copy(&v12);
  swift_release(v17);
  v5 = (void *)objc_opt_self(UIAlertAction);
  v6 = objc_msgSend(v5, "actionWithTitle:style:handler:", v3, 0, v4);
  _Block_release(v4);

  objc_msgSend(v2, "addAction:", v6);
  v7 = String._bridgeToObjectiveC()();
  v16 = sub_1005A5BB0;
  v17 = 0;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1001EDBF0;
  v15 = &unk_100913360;
  v8 = _Block_copy(&v12);
  v9 = objc_msgSend(v5, "actionWithTitle:style:handler:", v7, 0, v8, swift_release(v17).n128_f64[0]);
  _Block_release(v8);

  objc_msgSend(v2, "addAction:", v9);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v5, "actionWithTitle:style:handler:", v10, 1, 0);

  objc_msgSend(v2, "addAction:", v11);
  objc_msgSend(v0, "presentViewController:animated:completion:", v2, 1, 0);

}

uint64_t sub_1005A5BA8(uint64_t a1)
{
  return sub_1005A5BB8(a1, 0);
}

uint64_t sub_1005A5BB0(uint64_t a1)
{
  return sub_1005A5BB8(a1, 1);
}

uint64_t sub_1005A5BB8(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  type metadata accessor for RCDataContainer(0);
  v3 = (void *)static RCDataContainer.default.getter();
  v8[3] = &type metadata for Bool;
  LOBYTE(v8[0]) = a2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyReadingNowWtrSimpleModeEnabled);
  v6 = v5;
  RCDataContainer.setOverride(_:for:)(v8, v4, v5);
  swift_bridgeObjectRelease(v6);

  return _s5Books15CurrentPageViewVwxx_0(v8);
}

void sub_1005A5C70()
{
  void *v0;
  NSString v1;
  NSString v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  void **v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void *v20;
  uint64_t v21;

  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v1, v2, 1);

  v20 = sub_1005A5F60;
  v21 = 0;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_1001EDBF0;
  v19 = &unk_100913298;
  v4 = _Block_copy(&v16);
  objc_msgSend(v3, "addTextFieldWithConfigurationHandler:", v4);
  _Block_release(v4);
  v5 = swift_allocObject(&unk_1009132D0, 24, 7);
  *(_QWORD *)(v5 + 16) = v3;
  v6 = v3;
  v7 = String._bridgeToObjectiveC()();
  v20 = sub_1005A6878;
  v21 = v5;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_1001EDBF0;
  v19 = &unk_1009132E8;
  v8 = _Block_copy(&v16);
  swift_release(v21);
  v9 = (void *)objc_opt_self(UIAlertAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);
  _Block_release(v8);

  objc_msgSend(v6, "addAction:", v10);
  v11 = String._bridgeToObjectiveC()();
  v20 = sub_1005A6578;
  v21 = 0;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_1001EDBF0;
  v19 = &unk_100913310;
  v12 = _Block_copy(&v16);
  v13 = objc_msgSend(v9, "actionWithTitle:style:handler:", v11, 2, v12, swift_release(v21).n128_f64[0]);
  _Block_release(v12);

  objc_msgSend(v6, "addAction:", v13);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, 0);

  objc_msgSend(v6, "addAction:", v15);
  objc_msgSend(v0, "presentViewController:animated:completion:", v6, 1, 0);

}

void sub_1005A5F60(void *a1)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  NSString v6;
  id v7;
  _OWORD v8[2];
  _OWORD v9[2];

  objc_msgSend(a1, "setKeyboardType:", 4);
  objc_msgSend(a1, "setClearButtonMode:", 1);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
    sub_10004CFC4(v8, v9);
    *(_QWORD *)&v8[0] = 0;
    *((_QWORD *)&v8[0] + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v9, v8, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v5 = *((_QWORD *)&v8[0] + 1);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v6, swift_bridgeObjectRelease(v5).n128_f64[0]);

    _s5Books15CurrentPageViewVwxx_0(v9);
  }
  else
  {
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setPlaceholder:", v7);

  }
}

void sub_1005A610C(int a1, id a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  Class isa;
  NSString v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[3];

  v2 = objc_msgSend(a2, "textFields");
  if (!v2)
    return;
  v3 = v2;
  v4 = sub_100009E04(0, &qword_1009D57D0, UITextField_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!(v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_67:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if ((v5 & 0x8000000000000000) != 0)
    v36 = v5;
  else
    v36 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v5);
  if (!v37)
    goto LABEL_67;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_70:
      swift_bridgeObjectRelease(v5);
      v29 = 1;
      goto LABEL_52;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "text", swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (!v8)
    return;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v5 = v10;

  v11 = HIBYTE(v5) & 0xF;
  v12 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v5) & 0xF;
  else
    v13 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v13)
    goto LABEL_70;
  if ((v5 & 0x1000000000000000) != 0)
  {
    sub_100327700(v9, v5, 10);
    v16 = v38;
    goto LABEL_51;
  }
  if ((v5 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0)
      v14 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v14 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v9, v5);
    sub_1003276D8(v14, v12, 10);
    v16 = v15 & 1;
    goto LABEL_51;
  }
  v39[0] = v9;
  v39[1] = v5 & 0xFFFFFFFFFFFFFFLL;
  if (v9 == 43)
  {
    if (!v11)
    {
LABEL_74:
      __break(1u);
      return;
    }
    if (v11 == 1 || (BYTE1(v9) - 48) > 9u)
      goto LABEL_38;
    if (v11 != 2)
    {
      if ((BYTE2(v9) - 48) > 9u)
        goto LABEL_38;
      v17 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
      v18 = v11 - 3;
      if (v18)
      {
        v19 = (unsigned __int8 *)v39 + 3;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_38;
          v21 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
            goto LABEL_38;
          v17 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_38;
          v16 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_51;
        }
      }
    }
LABEL_50:
    v16 = 0;
    goto LABEL_51;
  }
  if (v9 != 45)
  {
    if (!v11 || (v9 - 48) > 9u)
      goto LABEL_38;
    if (v11 != 1)
    {
      if ((BYTE1(v9) - 48) > 9u)
        goto LABEL_38;
      v22 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
      v23 = v11 - 2;
      if (v23)
      {
        v24 = (unsigned __int8 *)v39 + 2;
        while (1)
        {
          v25 = *v24 - 48;
          if (v25 > 9)
            goto LABEL_38;
          v26 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            goto LABEL_38;
          v22 = v26 + v25;
          if (__OFADD__(v26, v25))
            goto LABEL_38;
          v16 = 0;
          ++v24;
          if (!--v23)
            goto LABEL_51;
        }
      }
    }
    goto LABEL_50;
  }
  if (!v11)
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v11 == 1 || (BYTE1(v9) - 48) > 9u)
    goto LABEL_38;
  if (v11 != 2)
  {
    if ((BYTE2(v9) - 48) <= 9u)
    {
      v27 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
      v28 = v11 - 3;
      if (!v28)
        goto LABEL_50;
      v33 = (unsigned __int8 *)v39 + 3;
      while (1)
      {
        v34 = *v33 - 48;
        if (v34 > 9)
          break;
        v35 = 10 * v27;
        if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63)
          break;
        v27 = v35 - v34;
        if (__OFSUB__(v35, v34))
          break;
        v16 = 0;
        ++v33;
        if (!--v28)
          goto LABEL_51;
      }
    }
LABEL_38:
    v16 = 1;
    goto LABEL_51;
  }
  v16 = 0;
LABEL_51:
  swift_bridgeObjectRelease(v5);
  v29 = v16 & 1;
LABEL_52:
  v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if ((v29 & 1) != 0)
    isa = 0;
  else
    isa = Int._bridgeToObjectiveC()().super.super.isa;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setValue:forKey:", isa, v32);

  swift_unknownObjectRelease(isa);
}

void sub_1005A6578()
{
  id v0;
  Class isa;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setValue:forKey:", isa, v2);

}

uint64_t sub_1005A6610()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  NSString v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD v11[5];
  uint64_t v12;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1007118F0;
  v3 = objc_msgSend((id)objc_opt_self(BKDebugViewCellModel), "modelWithAccessoryType:", 1);
  v4 = swift_allocObject(&unk_100913258, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v5 = v0;
  v6 = String._bridgeToObjectiveC()();
  v11[4] = sub_1005A6858;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1005A4264;
  v11[3] = &unk_100913270;
  v7 = _Block_copy(v11);
  swift_release(v12);
  v8 = objc_msgSend((id)objc_opt_self(BKDebugViewEntry), "entryWithTitle:model:action:", v6, v3, v7);

  _Block_release(v7);
  *(_QWORD *)(v2 + 32) = v8;
  v11[0] = v2;
  specialized Array._endMutation()(v9);
  return v11[0];
}

uint64_t sub_1005A6834()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A6858()
{
  sub_1005A5C70();
}

void sub_1005A6878(int a1)
{
  uint64_t v1;

  sub_1005A610C(a1, *(id *)(v1 + 16));
}

uint64_t sub_1005A6A64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005A6A88(uint64_t a1)
{
  uint64_t v1;

  return sub_1005A5610(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1005A6A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1005A6B08(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1005A50E8(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1005A6BAC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, void *, uint64_t);
  id v9;

  v8 = *(void (**)(uint64_t, void *, uint64_t))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a3;
  swift_unknownObjectRetain(a4);
  v8(a2, a3, a4);
  swift_release(v7);

  return swift_unknownObjectRelease(a4);
}

uint64_t sub_1005A6C20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009ED960);
  sub_100048F64(v0, (uint64_t)qword_1009ED960);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000019, 0x80000001007303C0);
}

uint64_t sub_1005A6CA0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t DynamicType;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[2];

  v1 = objc_msgSend(v0, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKBookPresenting);
  v2 = (uint64_t)v1;
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
    sub_10004CFC4(&v19, v21);
    sub_10004CD0C((uint64_t)v21, (uint64_t)&v19);
    v3 = sub_10004CFD4((uint64_t *)&unk_1009EDA70);
    if (swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, v3, 6))
    {
      v2 = v18;
      _s5Books15CurrentPageViewVwxx_0(v21);
    }
    else
    {
      if (qword_1009CE8C0 != -1)
        swift_once(&qword_1009CE8C0, sub_1005A6C20);
      v4 = type metadata accessor for Logger(0);
      sub_100048F64(v4, (uint64_t)qword_1009ED960);
      v5 = sub_10004CD0C((uint64_t)v21, (uint64_t)&v19);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.error.getter(v6);
      if (os_log_type_enabled(v6, v7))
      {
        v8 = swift_slowAlloc(22, -1);
        v9 = swift_slowAlloc(64, -1);
        v18 = v9;
        *(_DWORD *)v8 = 136315394;
        v10 = v20;
        v11 = sub_10003F198(&v19, v20);
        DynamicType = swift_getDynamicType(v11, v10, 1);
        v13 = _typeName(_:qualified:)(DynamicType, 0);
        v15 = v14;
        v17 = sub_100040F58(v13, v14, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v8 + 4, v8 + 12);
        swift_bridgeObjectRelease(v15);
        _s5Books15CurrentPageViewVwxx_0(&v19);
        *(_WORD *)(v8 + 12) = 2080;
        v17 = sub_100040F58(0xD000000000000010, 0x80000001007D5980, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v8 + 14, v8 + 22);
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Invariant violation: im_ancestorFlowController(conformingTo:) returned object of type %s which does not conform to protocol %s", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v9, -1, -1);
        swift_slowDealloc(v8, -1, -1);
      }
      else
      {
        _s5Books15CurrentPageViewVwxx_0(&v19);
      }

      _s5Books15CurrentPageViewVwxx_0(v21);
      return 0;
    }
  }
  return v2;
}

id sub_1005A6F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v5;
  void *ObjCClassFromMetadata;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = objc_msgSend((id)objc_opt_self(BKSceneUtilities), "hasMultiWindowEnabled");
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v3);
  v7 = ObjCClassFromMetadata;
  if (!v5)
  {
    v14 = objc_msgSend(ObjCClassFromMetadata, "sceneControllerForViewController:", a3);
    if (v14)
    {
      v10 = v14;
      v13 = objc_msgSend(v14, "newShowAssetTransaction");
      goto LABEL_6;
    }
    return 0;
  }
  v8 = objc_msgSend(ObjCClassFromMetadata, "sceneManager");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "newBookSceneControllerProviderWithRequestAssetID:", v9);

  v11 = objc_msgSend(v7, "currentSceneController");
  if (!v11)
  {
    swift_unknownObjectRelease(v10);
    return 0;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "newShowAssetTransactionWithTargetSceneDescriptor:", v10);
  swift_unknownObjectRelease(v12);
LABEL_6:
  swift_unknownObjectRelease(v10);
  return v13;
}

void sub_1005A7064(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  Class isa;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _OWORD v22[2];
  void **aBlock;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, void *, uint64_t);
  void *v26;
  void (*v27)(char, uint64_t, uint64_t);
  uint64_t v28;
  __int128 v29;
  uint64_t ObjectType;
  char v31[104];
  unint64_t v32;

  if ((a1 & 1) != 0)
  {
    v11 = sub_10004CFD4(&qword_1009DD620);
    inited = swift_initStackObject(v11, v31);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    aBlock = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(BCBookDisplayTitle);
    v24 = v13;
    AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 72) = a2;
    *(_QWORD *)(inited + 80) = a3;
    swift_bridgeObjectRetain(a3);
    v14 = sub_1000560A8(inited);
    v32 = v14;
    *(_QWORD *)&v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCTransactionOptionsTransactionKey);
    *((_QWORD *)&v29 + 1) = v15;
    AnyHashable.init<A>(_:)(&v29, &type metadata for String, &protocol witness table for String);
    if (a4)
    {
      ObjectType = swift_getObjectType();
      *(_QWORD *)&v29 = a4;
      sub_10004CFC4(&v29, v22);
      swift_unknownObjectRetain(a4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      sub_1002C436C(v22, (uint64_t)&aBlock, isUniquelyReferenced_nonNull_native);
      v17 = v14;
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_1000569AC((uint64_t)&aBlock);
    }
    else
    {
      sub_1002BDD18((uint64_t)&aBlock, &v29);
      sub_1000569AC((uint64_t)&aBlock);
      sub_10004A7B8((uint64_t)&v29);
      v17 = v32;
    }
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    v19 = swift_allocObject(&unk_100913570, 24, 7);
    *(_QWORD *)(v19 + 16) = a6;
    v27 = sub_1005A8358;
    v28 = v19;
    aBlock = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_1005A6BAC;
    v26 = &unk_100913588;
    v20 = _Block_copy(&aBlock);
    v21 = v28;
    swift_unknownObjectRetain(a6);
    objc_msgSend(a5, "showAssetWithTransaction:assetIdentifier:location:options:completion:", a4, a6, 0, isa, v20, swift_release(v21).n128_f64[0]);
    _Block_release(v20);

  }
}

void sub_1005A72B8(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *oslog;
  uint64_t v36;
  uint64_t v37;

  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      if (qword_1009CE8C0 != -1)
        swift_once(&qword_1009CE8C0, sub_1005A6C20);
      v17 = type metadata accessor for Logger(0);
      sub_100048F64(v17, (uint64_t)qword_1009ED960);
      v18 = swift_unknownObjectRetain_n(a4, 2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc(22, -1);
        v22 = swift_slowAlloc(32, -1);
        *(_DWORD *)v21 = 141558274;
        v36 = 1752392040;
        v37 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 4, v21 + 12);
        *(_WORD *)(v21 + 12) = 2080;
        v23 = objc_msgSend(a4, "description");
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

        v36 = sub_100040F58(v24, v26, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 14, v21 + 22);
        swift_unknownObjectRelease_n(a4, 2);
        swift_bridgeObjectRelease(v26);
        v27 = "Opened supplemental content %{mask.hash}s";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v19, v20, v27, (uint8_t *)v21, 0x16u);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        return;
      }
    }
    else
    {
      if (qword_1009CE8C0 != -1)
        swift_once(&qword_1009CE8C0, sub_1005A6C20);
      v28 = type metadata accessor for Logger(0);
      sub_100048F64(v28, (uint64_t)qword_1009ED960);
      v29 = swift_unknownObjectRetain_n(a4, 2);
      v19 = Logger.logObject.getter(v29);
      v20 = static os_log_type_t.error.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc(22, -1);
        v22 = swift_slowAlloc(32, -1);
        *(_DWORD *)v21 = 141558274;
        v36 = 1752392040;
        v37 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 4, v21 + 12);
        *(_WORD *)(v21 + 12) = 2080;
        v30 = objc_msgSend(a4, "description");
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v33 = v32;

        v36 = sub_100040F58(v31, v33, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 14, v21 + 22);
        swift_unknownObjectRelease_n(a4, 2);
        swift_bridgeObjectRelease(v33);
        v27 = "Unable to open supplemental content %{mask.hash}s";
        goto LABEL_16;
      }
    }

    swift_unknownObjectRelease_n(a4, 2);
    return;
  }
  swift_errorRetain(a2);
  if (qword_1009CE8C0 != -1)
    swift_once(&qword_1009CE8C0, sub_1005A6C20);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009ED960);
  swift_errorRetain(a2);
  swift_unknownObjectRetain(a4);
  swift_errorRetain(a2);
  v7 = swift_unknownObjectRetain(a4);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = swift_slowAlloc(32, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v34 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 141558530;
    v36 = 1752392040;
    v37 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v9 + 4, v9 + 12);
    *(_WORD *)(v9 + 12) = 2080;
    v11 = objc_msgSend(a4, "description");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v36 = sub_100040F58(v12, v14, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v9 + 14, v9 + 22);
    swift_unknownObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v9 + 22) = 2112;
    v15 = _convertErrorToNSError(_:)(a2);
    v36 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v9 + 24, v9 + 32);
    *v10 = v15;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Unable to open supplemental content %{mask.hash}s. error: %@", (uint8_t *)v9, 0x20u);
    v16 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v16);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(a2);
  }
  else
  {
    swift_errorRelease(a2);
    swift_unknownObjectRelease_n(a4, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
}

void sub_1005A7878(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v6 = swift_allocObject(&unk_1009135C0, 24, 7);
  *(_QWORD *)(v6 + 16) = a3;
  v9[4] = sub_1005A8360;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000147F0;
  v9[3] = &unk_1009135D8;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_unknownObjectRetain(a3);
  objc_msgSend(a1, "presentViewController:animated:completion:", a2, 1, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
}

void sub_1005A7948(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1009CE8C0 != -1)
    swift_once(&qword_1009CE8C0, sub_1005A6C20);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009ED960);
  v3 = swift_unknownObjectRetain_n(a1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 141558274;
    v12 = 1752392040;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);
    *(_WORD *)(v6 + 12) = 2080;
    v8 = objc_msgSend(a1, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = sub_100040F58(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 14, v6 + 22);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Opened supplemental content picker for %{mask.hash}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
  }
}

void sub_1005A7B34(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;

  }
}

uint64_t type metadata accessor for AudiobookNowPlayingRouter()
{
  return objc_opt_self(_TtC5Books25AudiobookNowPlayingRouter);
}

void sub_1005A7BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v39 = a3;
  v40 = a5;
  v37 = a4;
  v38 = a1;
  v6 = type metadata accessor for Locale(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v36 - v18;
  v20 = String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  static Locale.current.getter(v20);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  v21 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v23, v10, "OK", 2, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  v26 = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(a2);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v29 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v27, v28, 1);

  v30 = swift_allocObject(&unk_100913610, 24, 7);
  v31 = v40;
  *(_QWORD *)(v30 + 16) = v40;
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  aBlock[4] = sub_1005A838C;
  v42 = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_100913628;
  v34 = _Block_copy(aBlock);
  swift_release(v42);
  v35 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, 1, v34);
  _Block_release(v34);

  objc_msgSend(v29, "addAction:", v35);
  objc_msgSend(v32, "presentViewController:animated:completion:", v29, 1, 0);

}

void sub_1005A7EF0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t aBlock[5];
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v8 = sub_1005A6CA0();
  if (v8)
  {
    v9 = (void *)v8;
    sub_1005A82AC();
    v10 = objc_msgSend(a3, "permanentOrTemporaryAssetID");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = sub_1005A6F24(v11, v13, (uint64_t)a4);
    swift_bridgeObjectRelease(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_100913520, 56, 7);
    v15[2] = a1;
    v15[3] = a2;
    v15[4] = v14;
    v15[5] = v9;
    v15[6] = a3;
    aBlock[4] = (uint64_t)sub_1005A8324;
    v32 = v15;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004DCB4;
    aBlock[3] = (uint64_t)&unk_100913538;
    v16 = _Block_copy(aBlock);
    v17 = v32;
    swift_unknownObjectRetain(v14);
    swift_unknownObjectRetain(v9);
    swift_unknownObjectRetain(a3);
    swift_bridgeObjectRetain(a2);
    objc_msgSend(v9, "preflightShowAssetWithTransaction:assetIdentifier:completion:", v14, a3, v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);
    swift_unknownObjectRelease(v9);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    if (qword_1009CE8C0 != -1)
      swift_once(&qword_1009CE8C0, sub_1005A6C20);
    v18 = type metadata accessor for Logger(0);
    sub_100048F64(v18, (uint64_t)qword_1009ED960);
    swift_unknownObjectRetain_n(a3, 2);
    v19 = a4;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(32, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      v30 = swift_slowAlloc(32, -1);
      aBlock[0] = v30;
      *(_DWORD *)v22 = 141558530;
      v33 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 4, v22 + 12);
      *(_WORD *)(v22 + 12) = 2080;
      v23 = objc_msgSend(a3, "description");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v33 = sub_100040F58(v24, v26, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 14, v22 + 22);
      swift_unknownObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v26);
      *(_WORD *)(v22 + 22) = 2112;
      v33 = (uint64_t)v19;
      v27 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 24, v22 + 32);
      *v29 = v19;

      v28 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v29, 1, v28);
      swift_slowDealloc(v29, -1, -1);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a3, 2);
    }
  }
}

unint64_t sub_1005A82AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0F40;
  if (!qword_1009F0F40)
  {
    v1 = objc_opt_self(BKAppDelegate);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009F0F40);
  }
  return result;
}

uint64_t sub_1005A82E8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  swift_unknownObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1005A8324(char a1)
{
  uint64_t v1;

  sub_1005A7064(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1005A8334()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A8358(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1005A72B8(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_1005A8360()
{
  uint64_t v0;

  sub_1005A7948(*(void **)(v0 + 16));
}

uint64_t sub_1005A8368()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A838C(int a1)
{
  uint64_t v1;

  sub_1005A7B34(a1, *(id *)(v1 + 16));
}

id EpubBookParserWrapper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpubBookParserWrapper();
  return objc_msgSendSuper2(&v2, "init");
}

id EpubBookParserWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpubBookParserWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s5Books21EpubBookParserWrapperC17cachedTocCfiIdMap15bookDatabaseKeySDySSypGSgSS_tF_0()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v0 = (void *)objc_opt_self(BKEpubBookParser);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "cachedDataForBookDatabaseKey:cacheKey:", v1, kCacheKeyEpubTocCfiIdMap);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10004C7B4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10004CFD4(&qword_1009D3090);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10004A7B8((uint64_t)v7);
    return 0;
  }
}

uint64_t type metadata accessor for EpubBookParserWrapper()
{
  return objc_opt_self(_TtC5Books21EpubBookParserWrapper);
}

double sub_1005A8570(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  Swift::String v40;
  UIMenu v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  UIMenu v77;
  uint64_t v78;
  uint64_t v79;
  double result;
  Swift::OpaquePointer v81;
  Swift::OpaquePointer v82;
  Swift::OpaquePointer v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  UIMenuIdentifier v87;
  uint64_t ObjectType;
  void (*v89)(char *, uint64_t);
  __int128 v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t inited;
  id v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  id v102;
  char v103[48];
  __int128 v104;
  __int128 v105;
  UIImage_optional v106;
  UIImage_optional v107;
  UIImage_optional v108;

  v94 = a1;
  v99 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v3 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v84 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  __chkstk_darwin(v7);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v84 - v12;
  ObjectType = swift_getObjectType();
  v92 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v86 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v14 = swift_allocObject(v86, 40, 7);
  v90 = xmmword_1007118F0;
  *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
  v101 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001007D59D0);
  static Locale.current.getter(v15);
  v98 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v95 = v10;
  v98(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v97 = ObjCClassFromMetadata;
  v102 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v102, "bundleForClass:", ObjCClassFromMetadata);
  v100 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v96 = v3;
  v19 = v99;
  v100(v3, v6, v99);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v18, v3, "Help -> Report a Narration Issue", 32, 2);
  v22 = v21;
  v89 = *(void (**)(char *, uint64_t))(v1 + 8);
  v89(v6, v19);
  v91 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23 = v85;
  v91(v13, v85);
  v104 = 0u;
  v105 = 0u;
  v24 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v20, v22, 0, 0, 0, 0, "books_reportAudioIssue:", &v104, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v14 + 32) = v24;
  *(_QWORD *)&v104 = v14;
  specialized Array._endMutation()(v24);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v106.value.super.isa = 0;
  v106.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v106, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v104, v81).super.super.isa;
  v87 = UIMenuHelp;
  objc_msgSend(v94, "insertChildMenu:atEndOfMenuForIdentifier:", isa);

  v27 = v86;
  inited = swift_initStackObject(v86, v103);
  *(_OWORD *)(inited + 16) = xmmword_1007118C0;
  v28 = swift_allocObject(v27, 40, 7);
  *(_OWORD *)(v28 + 16) = v90;
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D5A20);
  static Locale.current.getter(v29);
  v30 = v95;
  v98(v95, v13, v23);
  v31 = objc_msgSend(v102, "bundleForClass:", v97);
  v32 = v96;
  v33 = v99;
  v100(v96, v6, v99);
  v34 = String.init(localized:table:bundle:locale:comment:)(v30, 0, 0, v31, v32, "Help -> Keyboard Shortcuts", 26, 2);
  v36 = v35;
  v37 = v33;
  v38 = v89;
  v89(v6, v37);
  v91(v13, v23);
  v104 = 0u;
  v105 = 0u;
  v39 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v34, v36, 0, 0, 0, 0, "books_aboutKeyboardShortcuts:", &v104, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v28 + 32) = v39;
  *(_QWORD *)&v104 = v28;
  specialized Array._endMutation()(v39);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v107.value.super.isa = 0;
  v107.is_nil = 0;
  v41.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v107, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v104, v82).super.super.isa;
  *(UIMenu *)(inited + 32) = v41;
  *(_QWORD *)&v90 = swift_allocObject(v27, 56, 7);
  *(_OWORD *)(v90 + 16) = xmmword_1007118D0;
  v42 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007D5A60);
  static Locale.current.getter(v42);
  v43 = v95;
  v44 = v23;
  v45 = v23;
  v46 = v98;
  v98(v95, v13, v44);
  v47 = v97;
  v48 = objc_msgSend(v102, "bundleForClass:", v97);
  v49 = v96;
  v50 = v99;
  v100(v96, v6, v99);
  v51 = String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v48, v49, "Help -> About Books & Privacy", 29, 2);
  v53 = v52;
  v38(v6, v50);
  v54 = v45;
  v55 = v91;
  v91(v13, v45);
  v104 = 0u;
  v105 = 0u;
  v56 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v51, v53, 0, 0, 0, 0, "books_aboutPrivacy:", &v104, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v90 + 32) = v56;
  v57 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D5AA0);
  static Locale.current.getter(v57);
  v58 = v95;
  v46(v95, v13, v54);
  v59 = objc_msgSend(v102, "bundleForClass:", v47);
  v60 = v96;
  v61 = v99;
  v100(v96, v6, v99);
  v62 = String.init(localized:table:bundle:locale:comment:)(v58, 0, 0, v59, v60, "Help -> Terms & Conditions", 26, 2);
  v64 = v63;
  v38(v6, v61);
  v65 = v54;
  v66 = v54;
  v67 = v55;
  v55(v13, v66);
  v104 = 0u;
  v105 = 0u;
  v68 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62, v64, 0, 0, 0, 0, "books_aboutTermsAndConditions:", &v104, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v69 = v90;
  *(_QWORD *)(v90 + 40) = v68;
  v70 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007D5AE0);
  static Locale.current.getter(v70);
  v98(v58, v13, v65);
  v71 = objc_msgSend(v102, "bundleForClass:", v97);
  v100(v60, v6, v61);
  v72 = String.init(localized:table:bundle:locale:comment:)(v58, 0, 0, v71, v60, "Help -> Apple Service and Support", 33, 2);
  v74 = v73;
  v89(v6, v61);
  v67(v13, v65);
  v104 = 0u;
  v105 = 0u;
  v75 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v72, v74, 0, 0, 0, 0, "books_aboutServicesAndSupport:", &v104, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v69 + 48) = v75;
  *(_QWORD *)&v104 = v69;
  specialized Array._endMutation()(v75);
  v76._countAndFlagsBits = 0;
  v76._object = (void *)0xE000000000000000;
  v108.value.super.isa = 0;
  v108.is_nil = 0;
  v77.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v76, (Swift::String_optional)0, v108, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v104, v83).super.super.isa;
  v78 = inited;
  *(UIMenu *)(inited + 40) = v77;
  *(_QWORD *)&v104 = v78;
  specialized Array._endMutation()(v77.super.super.isa);
  v79 = v104;
  sub_1001F5E34(v104, (uint64_t)v87);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v79).n128_u64[0];
  return result;
}

uint64_t *InAppMessagesProvider.shared.unsafeMutableAddressor()
{
  if (qword_1009CE8C8 != -1)
    swift_once(&qword_1009CE8C8, sub_1000697A4);
  return &static InAppMessagesProvider.shared;
}

unint64_t sub_1005A8ED0(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  int v30;
  int v31;
  _BYTE v33[104];

  v1 = a1;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v33[-v10 - 8];
  if (v1)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007D5CC0);
    v12 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v13 = v12(v9, v11, v5);
    static Locale.current.getter(v13);
    v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessagePriceDropTitle", 26, 2, v9, 0, 0, 0, v4, "Title of the Price Drop Notifications re-prompt card", 52, 2);
    v16 = v15;
    v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17(v11, v5);
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000046, 0x80000001007D5D40);
    v18 = v12(v9, v11, v5);
    static Locale.current.getter(v18);
    LOWORD(v30) = 2;
    v19 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessagePriceDropMessage", 28, 2, v9, 0, 0, 0, v4, "Description of the Price Drop Notifications re-prompt card", 58, v30);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x20676E6964616552, 0xED0000736C616F47);
    v21 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v22 = v21(v9, v11, v5);
    static Locale.current.getter(v22);
    v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessageReadingGoalsTitle", 29, 2, v9, 0, 0, 0, v4, "Title of the RG popover", 23, 2);
    v16 = v23;
    v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17(v11, v5);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000001007D5E30);
    v24 = v21(v9, v11, v5);
    static Locale.current.getter(v24);
    LOWORD(v31) = 2;
    v19 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessageReadingGoalsMessage", 31, 2, v9, 0, 0, 0, v4, "Description for the RG popover", 30, v31);
  }
  v25 = v19;
  v26 = v20;
  v17(v11, v5);
  v27 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v27, v33);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0x656C746974;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = v16;
  *(_QWORD *)(inited + 64) = 0x6567617373656DLL;
  *(_QWORD *)(inited + 72) = 0xE700000000000000;
  *(_QWORD *)(inited + 80) = v25;
  *(_QWORD *)(inited + 88) = v26;
  return sub_1000316DC(inited);
}

unint64_t sub_1005A922C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[72];
  _BYTE v23[64];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v22[-v10 - 8];
  if (!a1)
    return sub_1000316DC((uint64_t)_swiftEmptyArrayStorage);
  v12 = sub_10004CFD4(&qword_1009ECA50);
  if (a1 == 1)
  {
    inited = swift_initStackObject(v12, v22);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000018;
    *(_QWORD *)(inited + 40) = 0x80000001007D5B60;
    String.LocalizationValue.init(stringLiteral:)(0x6553206F74206F47, 0xEE0073676E697474);
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    static Locale.current.getter(v14);
    v15 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessagePriceDropGoToSettings", 33, 2, v9, 0, 0, 0, v4, "Title of the Price Drop Notifications button to open Settings app", 65, 2);
  }
  else
  {
    inited = swift_initStackObject(v12, v23);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000018;
    *(_QWORD *)(inited + 40) = 0x80000001007D5B60;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007D5BB0);
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    static Locale.current.getter(v18);
    v15 = String.init(localized:defaultValue:table:bundle:locale:comment:)("InAppMessagePriceDropEnableNotifications", 40, 2, v9, 0, 0, 0, v4, "Title of the Price Drop Notifications button to enable notifications", 68, 2);
  }
  v19 = v15;
  v20 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(_QWORD *)(inited + 48) = v19;
  *(_QWORD *)(inited + 56) = v20;
  return sub_1000316DC(inited);
}

uint64_t static InAppMessagesProvider.shared.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for InAppMessagesProvider();
  return swift_initStaticObject(v0, &unk_1009CEBF0);
}

uint64_t EditionStringFlatteningService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PageTurnLogger()()
{
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  return Logger.init(_:)((id)qword_100A1ECD8);
}

Swift::Bool *PAGETURNLOG_ENABLED.unsafeMutableAddressor()
{
  return &PAGETURNLOG_ENABLED;
}

uint64_t PageTurnLogSignPostBegin(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005A958C(a1, a2, a3, (uint64_t (*)(double))&static os_signpost_type_t.begin.getter);
}

id _PageTurnLog()()
{
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  return (id)qword_100A1ECD8;
}

uint64_t PageTurnLogSignPostEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005A958C(a1, a2, a3, (uint64_t (*)(double))&static os_signpost_type_t.event.getter);
}

uint64_t PageTurnLogSignPostEnd(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005A958C(a1, a2, a3, (uint64_t (*)(double))&static os_signpost_type_t.end.getter);
}

uint64_t sub_1005A958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(double))
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a4(v10);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v14 = (id)qword_100A1ECD8;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)(v13, &_mh_execute_header, v14, a1, a2, a3, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1005A9688()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001007D5E90, 0x6E72755465676150, 0xE800000000000000);
  qword_100A1ECD8 = result;
  return result;
}

uint64_t destroy for SymbolImageView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s5Books15SymbolImageViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for SymbolImageView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for SymbolImageView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SymbolImageView()
{
  return &type metadata for SymbolImageView;
}

uint64_t sub_1005A9804(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100878974, 1);
}

uint64_t sub_1005A9814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v39 = a3;
  v40 = sub_10004CFD4(&qword_1009EDB50);
  __chkstk_darwin(v40);
  v41 = (uint64_t)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v37);
  v9 = (_QWORD *)((char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = type metadata accessor for Image.Scale(0);
  v10 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D59A8);
  __chkstk_darwin(v13);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009E0888);
  __chkstk_darwin(v42);
  v17 = (_QWORD *)((char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v20 = (char *)v36 - v19;
  v43 = a1;
  v44 = a2;
  v21 = sub_1001F15BC();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v21) & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v22 = Image.init(systemName:)(a1, a2);
    v23 = enum case for Image.TemplateRenderingMode.template(_:);
    v24 = type metadata accessor for Image.TemplateRenderingMode(0);
    v36[1] = a4;
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v15, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v24);
    v26 = Image.renderingMode(_:)(v15, v22);
    swift_release(v22);
    sub_100010960((uint64_t)v15, &qword_1009D59A8);
    KeyPath = swift_getKeyPath(&unk_100730500);
    v28 = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Image.Scale.large(_:), v38);
    v29 = swift_getKeyPath(&unk_100730530);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v9 + *(int *)(v37 + 28), v12, v28);
    *v9 = v29;
    sub_10000B5E4((uint64_t)v9, (uint64_t)v17 + *(int *)(v42 + 36), &qword_1009D38F8);
    *v17 = v26;
    v17[1] = KeyPath;
    v30 = v39;
    v17[2] = v39;
    swift_retain_n(v30, 2);
    swift_retain(v26);
    swift_retain(KeyPath);
    sub_100010960((uint64_t)v9, &qword_1009D38F8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
    swift_release(v30);
    swift_release(KeyPath);
    swift_release(v26);
    sub_1005A9BF4((uint64_t)v17, (uint64_t)v20);
    v31 = v41;
    sub_10000B5E4((uint64_t)v20, v41, &qword_1009E0888);
    swift_storeEnumTagMultiPayload(v31, v40, 0);
    v32 = sub_1003D7A84();
    _ConditionalContent<>.init(storage:)(v31, v42, &type metadata for EmptyView, v32, &protocol witness table for EmptyView);
    return sub_100010960((uint64_t)v20, &qword_1009E0888);
  }
  else
  {
    v34 = v41;
    swift_storeEnumTagMultiPayload(v41, v40, 1);
    v35 = sub_1003D7A84();
    return _ConditionalContent<>.init(storage:)(v34, v42, &type metadata for EmptyView, v35, &protocol witness table for EmptyView);
  }
}

uint64_t sub_1005A9BD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1005A9814(*v1, v1[1], v1[2], a1);
}

uint64_t sub_1005A9BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005A9C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EDB58;
  if (!qword_1009EDB58)
  {
    v1 = sub_100030B74(&qword_1009EDB60);
    sub_1005A9CA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EDB58);
  }
  return result;
}

unint64_t sub_1005A9CA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EDB68;
  if (!qword_1009EDB68)
  {
    v1 = sub_100030B74(&qword_1009EDB70);
    sub_1003D7A84();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EDB68);
  }
  return result;
}

void sub_1005A9D10()
{
  qword_100A1ECE0 = 0x4034000000000000;
}

ValueMetadata *type metadata accessor for HorizontalEdgeFading()
{
  return &type metadata for HorizontalEdgeFading;
}

uint64_t sub_1005A9D34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008789DC, 1);
}

uint64_t sub_1005A9D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  v5 = *v2;
  v6 = v2[1];
  swift_retain(*v2);
  v8 = static Alignment.center.getter(v7);
  v10 = v9;
  v11 = sub_10004CFD4(&qword_1009EDB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
  result = sub_10004CFD4(&qword_1009EDB80);
  v13 = (_QWORD *)(a2 + *(int *)(result + 36));
  *v13 = v5;
  v13[1] = v6;
  v13[2] = v8;
  v13[3] = v10;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EdgeFadeGradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  return a1;
}

uint64_t *_s5Books20HorizontalEdgeFadingVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for EdgeFadeGradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for EdgeFadeGradient()
{
  return &type metadata for EdgeFadeGradient;
}

unint64_t sub_1005A9EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EDB88;
  if (!qword_1009EDB88)
  {
    v1 = sub_100030B74(&qword_1009EDB80);
    sub_100030B34(&qword_1009EDB90, &qword_1009EDB78, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34(&qword_1009EDB98, &qword_1009EDBA0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EDB88);
  }
  return result;
}

uint64_t sub_1005A9F40(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100878A04, 1);
}

double sub_1005A9F50@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  double result;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  __int128 v50;

  v7 = GeometryProxy.size.getter(a1);
  v8 = a4 + a4 + v7;
  v9 = sub_10004CFD4(&qword_1009EDBA8);
  v10 = swift_allocObject(v9, 96, 7);
  v11.n128_u64[1] = 8;
  *(_OWORD *)(v10 + 16) = xmmword_1007147F0;
  v11.n128_u64[0] = 0;
  v12 = Color.opacity(_:)(a2, v11);
  *(_QWORD *)(v10 + 32) = Gradient.Stop.init(color:location:)(v12, 0.0);
  *(_QWORD *)(v10 + 40) = v13;
  swift_retain(a2);
  *(_QWORD *)(v10 + 48) = Gradient.Stop.init(color:location:)(v14, a4 / v8);
  *(_QWORD *)(v10 + 56) = v15;
  swift_retain(a2);
  *(_QWORD *)(v10 + 64) = Gradient.Stop.init(color:location:)(v16, (v7 + a4) / v8);
  *(_QWORD *)(v10 + 72) = v17;
  v18.n128_u64[0] = 0;
  v19 = Color.opacity(_:)(a2, v18);
  v20 = Gradient.Stop.init(color:location:)(v19, 1.0);
  *(_QWORD *)(v10 + 80) = v20;
  *(_QWORD *)(v10 + 88) = v21;
  v22 = static UnitPoint.leading.getter(v20);
  v24 = v23;
  v26 = static UnitPoint.trailing.getter(v25);
  v28 = v27;
  v29 = Gradient.init(stops:)(v10);
  v30 = LinearGradient.init(gradient:startPoint:endPoint:)(&v42, v29, v22, v24, v26, v28);
  v31 = v42;
  v41 = v43;
  v32 = v44;
  v33 = v45;
  v34 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(&v46, *(_QWORD *)&v8, 0, 0, 1, v34, v35);
  v36 = v46;
  v37 = v47;
  v38 = v48;
  v39 = v49;
  result = -a4;
  *(_QWORD *)a3 = v31;
  *(_OWORD *)(a3 + 8) = v41;
  *(_QWORD *)(a3 + 24) = v32;
  *(_QWORD *)(a3 + 32) = v33;
  *(_QWORD *)(a3 + 40) = v36;
  *(_BYTE *)(a3 + 48) = v37;
  *(_QWORD *)(a3 + 56) = v38;
  *(_BYTE *)(a3 + 64) = v39;
  *(_OWORD *)(a3 + 72) = v50;
  *(double *)(a3 + 88) = -a4;
  *(_QWORD *)(a3 + 96) = 0;
  return result;
}

double sub_1005AA100@<D0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = *v1;
  v4 = v1[1];
  v5 = swift_allocObject(&unk_100913840, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  *a1 = sub_1005AA184;
  a1[1] = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))v5;
  *(_QWORD *)&result = swift_retain(v3).n128_u64[0];
  return result;
}

uint64_t sub_1005AA160()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1005AA184@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1005A9F50(a1, *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 24));
}

uint64_t sub_1005AA190()
{
  return sub_100030B34(&qword_1009EDBB0, &qword_1009EDBB8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_1005AA1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005AA1D0);
}

uint64_t sub_1005AA1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1005AA24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005AA258);
}

uint64_t sub_1005AA258(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1005AA2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 56) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005AA338, v3, v4);
}

uint64_t sub_1005AA338()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  NSString v12;

  v1 = *(_QWORD **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v3 = v1[8];
  v4 = v1[9];
  sub_10003F198(v1 + 5, v3);
  v5 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v3, v4);
  v6 = v5;
  if (!*(_QWORD *)(v5 + 16))
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease(v5);
    goto LABEL_6;
  }
  sub_10002E418(v5 + 32, v0 + 16);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v0 + 40);
  if (!v7)
  {
LABEL_6:
    sub_1005AA554(v0 + 16);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  dispatch thunk of ContextAssetInfoProtocol.shareableURLStringWithFallback.getter(v7, v8);
  v10 = v9;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (!v10)
  {
LABEL_7:
    v12 = 0;
    goto LABEL_8;
  }
  v12 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
LABEL_8:
  objc_msgSend(v2, "setString:", v12, v11);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005AA474()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EDC74);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1005AA2CC();
}

uint64_t sub_1005AA4B8@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.copyLink(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6 + 40);
  sub_100022840(a2, a6);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_1005AA554(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(qword_1009D4378);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithCopy for BooksIntentSceneConfigurator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for BooksIntentSceneConfigurator(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for BooksIntentSceneConfigurator()
{
  return &type metadata for BooksIntentSceneConfigurator;
}

uint64_t sub_1005AA638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[9] = a3;
  v4[10] = a4;
  v4[8] = a1;
  v5 = type metadata accessor for MainActor(0);
  v4[11] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005AA6A8, v6, v7);
}

NSObject *sub_1005AA6A8()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *result;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t DynamicType;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = objc_msgSend(*(id *)(v0 + 80), "primarySceneController", swift_release(*(_QWORD *)(v0 + 88)).n128_f64[0]);
  v2 = objc_msgSend(v1, "scene");

  v4 = static os_log_type_t.default.getter(v3);
  result = (id)BCAppIntentsLog();
  v6 = result;
  if (v2)
  {
    if (result)
    {
      sub_10002E418(*(_QWORD *)(v0 + 72), v0 + 16);
      v7 = v4;
      if (os_log_type_enabled(v6, v4))
      {
        v8 = swift_slowAlloc(22, -1);
        v27 = swift_slowAlloc(64, -1);
        v28 = v27;
        *(_DWORD *)v8 = 136315394;
        *(_QWORD *)(v0 + 56) = sub_100040F58(0xD000000000000018, 0x80000001007D5EF0, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
        *(_WORD *)(v8 + 12) = 2080;
        v9 = *(_QWORD *)(v0 + 40);
        v10 = sub_10003F198((_QWORD *)(v0 + 16), v9);
        DynamicType = swift_getDynamicType(v10, v9, 1);
        v12 = _typeName(_:qualified:)(DynamicType, 0);
        v14 = v13;
        *(_QWORD *)(v0 + 56) = sub_100040F58(v12, v13, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 14, v8 + 22);
        swift_bridgeObjectRelease(v14);
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "BooksIntentSceneConfigurator: %s: intent: %s. Returning existing primaryScene.", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v8, -1, -1);

      }
      else
      {

        _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
      }
      v23 = *(_QWORD **)(v0 + 64);
      *v23 = v2;
      v24 = (unsigned int *)&enum case for IntentSceneConfiguration.existingScene(_:);
LABEL_12:
      v25 = *v24;
      v26 = type metadata accessor for IntentSceneConfiguration(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v23, v25, v26);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    __break(1u);
  }
  else if (result)
  {
    sub_10002E418(*(_QWORD *)(v0 + 72), v0 + 16);
    if (os_log_type_enabled(v6, v4))
    {
      v15 = swift_slowAlloc(22, -1);
      v16 = swift_slowAlloc(64, -1);
      v28 = v16;
      *(_DWORD *)v15 = 136315394;
      *(_QWORD *)(v0 + 56) = sub_100040F58(0xD000000000000018, 0x80000001007D5EF0, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v15 + 4, v15 + 12);
      *(_WORD *)(v15 + 12) = 2080;
      v17 = *(_QWORD *)(v0 + 40);
      v18 = sub_10003F198((_QWORD *)(v0 + 16), v17);
      v19 = swift_getDynamicType(v18, v17, 1);
      v20 = _typeName(_:qualified:)(v19, 0);
      v22 = v21;
      *(_QWORD *)(v0 + 56) = sub_100040F58(v20, v21, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v15 + 14, v15 + 22);
      swift_bridgeObjectRelease(v22);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
      _os_log_impl((void *)&_mh_execute_header, v6, v4, "BooksIntentSceneConfigurator: %s: intent: %s. Returning newScene.", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    }
    v23 = *(_QWORD **)(v0 + 64);
    v24 = (unsigned int *)&enum case for IntentSceneConfiguration.newScene(_:);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1005AAA74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v5 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1009139E0, v10 + v7, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_100478298;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004DCB4;
  aBlock[3] = &unk_1009139F8;
  v12 = _Block_copy(aBlock);
  objc_msgSend(a3, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 4128, v8, v12, swift_release(v14).n128_f64[0]);
  _Block_release(v12);

}

uint64_t sub_1005AABD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v7 = *v3;
  v8 = (_QWORD *)swift_task_alloc(dword_1009EDCA4);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000AE34;
  return sub_1005AA638(a1, v9, a3, v7);
}

uint64_t sub_1005AAC38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v6 = *v2;
  v5 = v2[1];
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1009EDC90 + dword_1009EDC90);
  v7 = (_QWORD *)swift_task_alloc(unk_1009EDC94);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1001FC2C4;
  return v9(a2, v6, v5);
}

uint64_t sub_1005AACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[12] = v4;
  v3[13] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[14] = v5;
  v3[15] = v6;
  return swift_task_switch(sub_1005AAD20, v5, v6);
}

NSObject *sub_1005AAD20(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  NSObject *result;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t DynamicType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  uint64_t v18;

  v2 = static os_log_type_t.default.getter(a1);
  result = (id)BCAppIntentsLog();
  if (result)
  {
    v4 = result;
    sub_10002E418(*(_QWORD *)(v1 + 72), v1 + 16);
    if (os_log_type_enabled(v4, v2))
    {
      v5 = swift_slowAlloc(22, -1);
      v6 = swift_slowAlloc(64, -1);
      v18 = v6;
      *(_DWORD *)v5 = 136315394;
      *(_QWORD *)(v1 + 56) = sub_100040F58(0xD00000000000001CLL, 0x80000001007D5EB0, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 56, v1 + 64, v5 + 4, v5 + 12);
      *(_WORD *)(v5 + 12) = 2080;
      v7 = *(_QWORD *)(v1 + 40);
      v8 = sub_10003F198((_QWORD *)(v1 + 16), v7);
      DynamicType = swift_getDynamicType(v8, v7, 1);
      v10 = _typeName(_:qualified:)(DynamicType, 0);
      v12 = v11;
      *(_QWORD *)(v1 + 64) = sub_100040F58(v10, v11, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 64, v1 + 72, v5 + 14, v5 + 22);
      swift_bridgeObjectRelease(v12);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v1 + 16));
      _os_log_impl((void *)&_mh_execute_header, v4, v2, "BooksIntentSceneConfigurator: %s: intent: %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

    }
    else
    {

      v13 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v1 + 16));
    }
    v17 = *(_OWORD *)(v1 + 80);
    v14 = static MainActor.shared.getter(v13);
    *(_QWORD *)(v1 + 128) = v14;
    v15 = swift_task_alloc(32);
    *(_QWORD *)(v1 + 136) = v15;
    *(_OWORD *)(v15 + 16) = v17;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 144) = v16;
    *v16 = v1;
    v16[1] = sub_1005AAF8C;
    return withCheckedContinuation<A>(isolation:function:_:)(v16, v14, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x80000001007D5EB0, sub_1005AB028, v15, (char *)&type metadata for () + 8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005AAF8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005AAFF4, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_1005AAFF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005AB028(uint64_t a1)
{
  uint64_t v1;

  sub_1005AAA74(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1005AB030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005AB098@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730858);
  v4 = swift_getKeyPath(&unk_100730880);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1005AB0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_10004CFD4(&qword_1009E3630);
  result = ThemeOptionsModule.id.getter(v2);
  *a1 = result;
  return result;
}

void (*sub_1005AB12C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100730858);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100730880);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1002B51E0;
}

uint64_t sub_1005AB1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books30ThemeOptionsContainerViewModel__themeOptions;
  v2 = sub_10004CFD4(&qword_1009E3648);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005AB1F8()
{
  return type metadata accessor for ThemeOptionsContainerViewModel(0);
}

uint64_t type metadata accessor for ThemeOptionsContainerViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EDCE0, (uint64_t)&nominal type descriptor for ThemeOptionsContainerViewModel);
}

void sub_1005AB214(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1005AB280(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_1005AB280(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EDCF0)
  {
    v2 = sub_100030B74(&qword_1009E3608);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EDCF0);
  }
}

_QWORD *sub_1005AB2D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009E3630);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1005AB364(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E3630);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1005AB39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009E3630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005AB3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009E3630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005AB45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009E3630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005AB4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009E3630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005AB51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005AB528);
}

uint64_t sub_1005AB528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_10004CFD4(&qword_1009E3630);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1005AB5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005AB5B0);
}

uint64_t sub_1005AB5B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009E3630);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EDDC8, (uint64_t)&nominal type descriptor for ThemeOptionsContainerViewModel.ThemeOptions);
}

void sub_1005AB640(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1005AB6B0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_1007307D0;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1005AB6B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1009EDDD8)
  {
    v2 = type metadata accessor for ThemeOptionsView(255);
    v3 = sub_1005AB710();
    v4 = type metadata accessor for ThemeOptionsModule(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1009EDDD8);
  }
}

unint64_t sub_1005AB710()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EDDE0;
  if (!qword_1009EDDE0)
  {
    v1 = type metadata accessor for ThemeOptionsView(255);
    result = swift_getWitnessTable(&unk_100718230, v1);
    atomic_store(result, (unint64_t *)&qword_1009EDDE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ThemeOptionsContainerViewModel.ThemeOptions.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005AB7AC + 4 * byte_100730795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1005AB7E0 + 4 * byte_100730790[v4]))();
}

uint64_t sub_1005AB7E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005AB7E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005AB7F0);
  return result;
}

uint64_t sub_1005AB7FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005AB804);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1005AB808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005AB810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions.State()
{
  return &type metadata for ThemeOptionsContainerViewModel.ThemeOptions.State;
}

unint64_t sub_1005AB830()
{
  unint64_t result;

  result = qword_1009EDE10;
  if (!qword_1009EDE10)
  {
    result = swift_getWitnessTable(&unk_1007308E8, &type metadata for ThemeOptionsContainerViewModel.ThemeOptions.State);
    atomic_store(result, (unint64_t *)&qword_1009EDE10);
  }
  return result;
}

uint64_t sub_1005AB874()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730AA0);
  v2 = swift_getKeyPath(&unk_100730AC8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005AB8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  uint64_t v21;
  _QWORD v22[2];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100730AA0);
  v3 = swift_getKeyPath(&unk_100730AC8);
  static Published.subscript.getter(v22, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v3);
  v21 = v22[0];
  v4 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v6 = v5;
  swift_bridgeObjectRelease(0xE000000000000000);
  v22[0] = v4;
  v22[1] = v6;
  v7._countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_accessibilityLabelFormat);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_accessibilityLabelFormat + 8);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070CCA0;
  v12 = swift_getKeyPath(&unk_100730AA0);
  v13 = swift_getKeyPath(&unk_100730AC8);
  static Published.subscript.getter(&v21, v1, v12);
  swift_release(v12);
  v14 = swift_release(v13);
  v15 = v21;
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v15;
  v16 = static String.localizedStringWithFormat(_:_:)(v8, v9, v11, v14);
  v18 = v17;
  swift_bridgeObjectRelease(v11);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  return v22[0];
}

uint64_t sub_1005ABA78(char a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *ObjCClassFromMetadata;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  int v72;
  int v73;
  void (*v74)(char *, uint64_t);
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, char *, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[32];

  v80 = a2;
  v4 = a1 & 1;
  v81 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v74 - v9;
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v74 - v16;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_goalType) = v4;
  v78 = v5;
  if ((a1 & 1) != 0)
  {
    v45 = String.LocalizationValue.init(stringLiteral:)(0x7961642F6E696DLL, 0xE700000000000000);
    static Locale.current.getter(v45);
    v76 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v76(v14, v17, v11);
    v46 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v46);
    v77 = ObjCClassFromMetadata;
    v74 = (void (*)(char *, uint64_t))objc_opt_self(NSBundle);
    v79 = v2;
    v48 = objc_msgSend(v74, "bundleForClass:", ObjCClassFromMetadata);
    static Locale.current.getter(v48);
    v49 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Goals_Picker_Minute_Row_Title", 29, 2, v14, 0, 0, v48, v7, "Label for minutes per day in reading goal picker", 48, 2);
    v51 = v50;
    v75 = *(void (**)(char *, uint64_t))(v5 + 8);
    v75(v10, v81);
    v52 = *(void (**)(char *, uint64_t))(v12 + 8);
    v52(v17, v11);
    v53 = (uint64_t *)(v79 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_labelFormat);
    *v53 = v49;
    v53[1] = v51;
    v54 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007D3380);
    static Locale.current.getter(v54);
    v76(v14, v17, v11);
    v55 = v74;
    v56 = objc_msgSend(v74, "bundleForClass:", v77);
    static Locale.current.getter(v56);
    LOWORD(v73) = 2;
    v57 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Accessibility_Goals_Picker_Minute_Row_Title", 43, 2, v14, 0, 0, v56, v7, "AX label for minutes per day in reading goal picker", 51, v73);
    v59 = v58;
    v60 = v11;
    v61 = v81;
    v75(v10, v81);
    v52(v17, v60);
    v62 = (uint64_t *)(v79 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_accessibilityLabelFormat);
    *v62 = v57;
    v62[1] = v59;
    v63 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D3210);
    static Locale.current.getter(v63);
    v76(v14, v17, v60);
    v64 = v55;
    v2 = v79;
    v65 = objc_msgSend(v64, "bundleForClass:", v77);
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v7, v10, v61);
    v66 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, v65, v7, "Title for picker when changing Daily Reading goal", 49, 2);
    v68 = v67;
    v75(v10, v61);
    v52(v17, v60);
    v69 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_title);
    *v69 = v66;
    v69[1] = v68;
    v43 = v80 / 60;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel__currentValue, v83, 33, 0);
    v82 = v43;
    Published.init(initialValue:)(&v82, &type metadata for Int);
    swift_endAccess(v83);
    v44 = 1440;
  }
  else
  {
    v18 = String.LocalizationValue.init(stringLiteral:)(0x65792F736B6F6F62, 0xEA00000000007261);
    static Locale.current.getter(v18);
    v76 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v76(v14, v17, v11);
    v19 = type metadata accessor for BundleFinder();
    v20 = swift_getObjCClassFromMetadata(v19);
    v79 = v20;
    v77 = (id)objc_opt_self(NSBundle);
    v21 = objc_msgSend(v77, "bundleForClass:", v20);
    static Locale.current.getter(v21);
    v22 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Goals_Picker_Book_Row_Title", 27, 2, v14, 0, 0, v21, v7, "Label for finished books per year in reading goal picker", 56, 2);
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v25(v10, v81);
    v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v74 = v25;
    v75 = v26;
    v26(v17, v11);
    v27 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_labelFormat);
    *v27 = v22;
    v27[1] = v24;
    v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007D3470);
    static Locale.current.getter(v28);
    v29 = v11;
    v76(v14, v17, v11);
    v30 = objc_msgSend(v77, "bundleForClass:", v79);
    static Locale.current.getter(v30);
    LOWORD(v72) = 2;
    v31 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Accessibility_Goals_Picker_Book_Row_Title", 41, 2, v14, 0, 0, v30, v7, "AX label for finished books per year in reading goal picker", 59, v72);
    v33 = v32;
    v34 = v81;
    v25(v10, v81);
    v35 = v75;
    v75(v17, v29);
    v36 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_accessibilityLabelFormat);
    *v36 = v31;
    v36[1] = v33;
    v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007D3270);
    static Locale.current.getter(v37);
    v76(v14, v17, v29);
    v38 = objc_msgSend(v77, "bundleForClass:", v79);
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v7, v10, v34);
    v39 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, v38, v7, "Title for picker when changing Books goal", 41, 2);
    v41 = v40;
    v74(v10, v34);
    v35(v17, v29);
    v42 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_title);
    *v42 = v39;
    v42[1] = v41;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel__currentValue, v83, 33, 0);
    v43 = v80;
    v82 = v80;
    Published.init(initialValue:)(&v82, &type metadata for Int);
    swift_endAccess(v83);
    v44 = 365;
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_initialGoal) = v43;
  v70 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_valueRange);
  *v70 = 1;
  v70[1] = v44;
  return v2;
}

uint64_t sub_1005AC1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel__currentValue;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_labelFormat + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_accessibilityLabelFormat
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005AC280()
{
  return type metadata accessor for AdjustGoalModalViewModel(0);
}

uint64_t type metadata accessor for AdjustGoalModalViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009EDE48, (uint64_t)&nominal type descriptor for AdjustGoalModalViewModel);
}

void sub_1005AC29C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_1005AC338();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100730930;
    v4[2] = &unk_100730930;
    v4[3] = &unk_100730930;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = &unk_100730948;
    v4[6] = &unk_100730960;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_1005AC338()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009D1828)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Int);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009D1828);
  }
}

uint64_t sub_1005AC38C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for AdjustGoalModalViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for AdjustGoalModalViewControllerObjC()
{
  return objc_opt_self(BKAdjustGoalModalViewController);
}

uint64_t type metadata accessor for AdjustGoalModalViewController(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EDF88, (uint64_t)&nominal type descriptor for AdjustGoalModalViewController);
}

uint64_t sub_1005AC550(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100730960;
  v2[2] = "\b";
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + qword_100A1ED18);
}

double sub_1005AC5B0(uint64_t a1, uint64_t a2, uint64_t a3, JSValue a4)
{
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::Int v16;
  double result;
  Swift::OpaquePointer_optional v18;

  v8 = (objc_class *)type metadata accessor for AdjustGoalModalViewController(0);
  v9 = objc_allocWithZone(v8);
  swift_unknownObjectRetain(a3);
  v10 = sub_1005AC708(a1, a2, a3);
  v11 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v12 = sub_10004CFD4(&qword_1009D4B80);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v13 + 56) = v8;
  *(_QWORD *)(v13 + 32) = v10;
  v14 = v10;
  v15._countAndFlagsBits = 0x80000001007D60B0;
  v18.value._rawValue = (void *)v13;
  v18.is_nil = 83;
  v15._object = (void *)108;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(a4, v18, v15, v16);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_1005AC6B0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AdjustGoalModalViewController.swift", 41, 2, 113, 0);
  __break(1u);
}

id sub_1005AC708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;

  v7 = (int *)type metadata accessor for AdjustGoalModalView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = v3;
  v11 = ReadingGoals.Goal.init(rawValue:)(a1);
  v12 = (v11 == 2) | v11 & 1;
  v10[qword_1009EDF78] = v12;
  *(_QWORD *)&v10[qword_1009EDF80] = a3;
  v13 = type metadata accessor for AdjustGoalModalViewModel(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  swift_unknownObjectRetain(a3);
  sub_1005ABA78(v12, a2);
  v15 = qword_1009EDF70;
  *(_QWORD *)&v10[qword_1009EDF70] = v14;

  v16 = *(_QWORD *)&v10[v15];
  *v9 = swift_getKeyPath(&unk_100730A40);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v9, v17, 0);
  v18 = (_QWORD *)((char *)v9 + v7[5]);
  *v18 = swift_getKeyPath(&unk_100730A70);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = (_QWORD *)((char *)v9 + v7[6]);
  v21 = sub_100008DB0(&qword_1009EDFD8, type metadata accessor for AdjustGoalModalViewModel, (uint64_t)&unk_100730A08);
  swift_retain_n(v16, 2);
  swift_unknownObjectRetain(a3);
  *v20 = ObservedObject.init(wrappedValue:)(v16, v13, v21);
  v20[1] = v22;
  *(_QWORD *)((char *)v9 + v7[8]) = a3;
  KeyPath = swift_getKeyPath(&unk_100730AA0);
  v24 = swift_getKeyPath(&unk_100730AC8);
  swift_unknownObjectRetain(a3);
  static Published.subscript.getter(&v32, v16, KeyPath);
  swift_release(KeyPath);
  swift_release(v24);
  v25 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v27 = v26;
  swift_release(v16);
  swift_unknownObjectRelease(a3);
  v28 = (_QWORD *)((char *)v9 + v7[7]);
  *v28 = v25;
  v28[1] = v27;
  v28[2] = 0;
  v29 = (id)UIHostingController.init(rootView:)(v9);
  objc_msgSend(v29, "setModalPresentationStyle:", 2);

  swift_unknownObjectRelease(a3);
  return v29;
}

void sub_1005AC994(void *a1)
{
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v1 = v6.receiver;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v2 = objc_msgSend(v1, "view", v6.receiver, v6.super_class);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "sizeToFit");
    objc_msgSend(v3, "bounds");
    objc_msgSend(v1, "setPreferredContentSize:", v4, v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_1005ACA3C()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AdjustGoalModalViewController", 35, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_1005ACA68()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AdjustGoalModalViewController", 35, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_1005ACA94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1009EDF70));
  return swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_1009EDF80));
}

uint64_t sub_1005ACAC0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1009EDF70));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1009EDF80));
}

uint64_t sub_1005ACAF8()
{
  return type metadata accessor for AdjustGoalModalViewController(0);
}

uint64_t sub_1005ACB00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100059BB4();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_100913B50, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1005ACD2C;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100913B68;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  swift_unknownObjectRetain(a3);
  v19 = a4;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v23 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1005ACD00()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_1005ACD2C()
{
  uint64_t v0;
  JSValue v1;

  v1.super.isa = *(Class *)(v0 + 40);
  return sub_1005AC5B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
}

uint64_t sub_1005ACD4C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730B38);
  v2 = swift_getKeyPath(&unk_100730B60);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005ACDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books13PublishedBool__value;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005ACE10()
{
  return type metadata accessor for PublishedBool(0);
}

uint64_t type metadata accessor for PublishedBool(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EE010;
  if (!qword_1009EE010)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PublishedBool);
  return result;
}

void sub_1005ACE54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100443A4C();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_1005ACEC0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for PublishedBool(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005ACF04(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  _QWORD v8[5];

  v8[0] = a1;
  *(double *)&v8[1] = a4;
  *(double *)&v8[2] = a5;
  *(double *)&v8[3] = a6;
  *(double *)&v8[4] = a7;
  return View.modifier<A>(_:)(v8, a2, &type metadata for WithPageFramedView, a3);
}

uint64_t initializeWithCopy for WithPageFramedView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for WithPageFramedView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t *assignWithTake for WithPageFramedView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  return a1;
}

ValueMetadata *type metadata accessor for WithPageFramedView()
{
  return &type metadata for WithPageFramedView;
}

uint64_t sub_1005AD030(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100878CB8, 1);
}

uint64_t sub_1005AD040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a2;
  v5 = sub_10004CFD4(&qword_1009EE0E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - v9;
  v11 = *(_QWORD *)(a1 + 8);
  v13 = static Alignment.center.getter(v12);
  v15 = _FrameLayout.init(width:height:alignment:)(&v28, 0, 1, v11, 0, v13, v14);
  v16 = v28;
  v17 = v29;
  v18 = v30;
  v19 = v31;
  v21 = v32;
  v20 = v33;
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v22 = sub_10004CFD4(&qword_1009EE0F0);
  sub_1005AD1D4(a1, v27, (uint64_t)&v10[*(int *)(v22 + 44)]);
  sub_10000B5E4((uint64_t)v10, (uint64_t)v7, &qword_1009EE0E8);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  *(_QWORD *)(a3 + 16) = v16;
  *(_BYTE *)(a3 + 24) = v17;
  *(_QWORD *)(a3 + 32) = v18;
  *(_BYTE *)(a3 + 40) = v19;
  *(_QWORD *)(a3 + 48) = v21;
  *(_QWORD *)(a3 + 56) = v20;
  v23 = sub_10004CFD4(&qword_1009EE0F8);
  sub_10000B5E4((uint64_t)v7, a3 + *(int *)(v23 + 48), &qword_1009EE0E8);
  v24 = a3 + *(int *)(v23 + 64);
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  sub_100010960((uint64_t)v10, &qword_1009EE0E8);
  return sub_100010960((uint64_t)v7, &qword_1009EE0E8);
}

uint64_t sub_1005AD1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_10004CFD4(&qword_1009EE100);
  v40 = *(_QWORD *)(v6 - 8);
  v7 = v40;
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 32);
  v16 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(&v41, v13, 0, 0, 1, v16, v17);
  v39 = v41;
  v38 = v42;
  v18 = v44;
  v36 = v45;
  v37 = v43;
  v35 = v46;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v20 = v19(v12, a2, v6);
  v21 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v47, v14, 0, 0, 1, v21, v22);
  v23 = v47;
  LOBYTE(v7) = v48;
  v24 = v49;
  v25 = v50;
  v33 = v52;
  v34 = v51;
  v19(v9, (uint64_t)v12, v6);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  *(_QWORD *)(a3 + 16) = v39;
  *(_BYTE *)(a3 + 24) = v38;
  *(_QWORD *)(a3 + 32) = v37;
  *(_BYTE *)(a3 + 40) = v18;
  v26 = v35;
  *(_QWORD *)(a3 + 48) = v36;
  *(_QWORD *)(a3 + 56) = v26;
  v27 = sub_10004CFD4(&qword_1009EE108);
  v19((char *)(a3 + *(int *)(v27 + 48)), (uint64_t)v9, v6);
  v28 = a3 + *(int *)(v27 + 64);
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  *(_QWORD *)(v28 + 16) = v23;
  *(_BYTE *)(v28 + 24) = v7;
  *(_QWORD *)(v28 + 32) = v24;
  *(_BYTE *)(v28 + 40) = v25;
  v29 = v33;
  *(_QWORD *)(v28 + 48) = v34;
  *(_QWORD *)(v28 + 56) = v29;
  v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v30)(v9, v6);
}

uint64_t sub_1005AD3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  __n128 v17;
  _OWORD v19[2];
  uint64_t v20;

  v5 = sub_10004CFD4(&qword_1009EE0C8);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EE0D0);
  __chkstk_darwin(v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_OWORD *)(v2 + 16);
  v19[0] = *(_OWORD *)v2;
  v19[1] = v11;
  v20 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v13 = sub_10004CFD4(&qword_1009EE0D8);
  sub_1005AD040((uint64_t)v19, a1, (uint64_t)&v7[*(int *)(v13 + 44)]);
  v14 = *(_QWORD *)&v19[0];
  v15 = swift_retain(*(_QWORD *)&v19[0]);
  LOBYTE(a1) = static Edge.Set.all.getter(v15);
  sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009EE0C8);
  v16 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v16 = v14;
  v16[8] = a1;
  sub_100010960((uint64_t)v7, &qword_1009EE0C8);
  LOBYTE(v14) = static Edge.Set.all.getter(v17);
  sub_10000B5E4((uint64_t)v10, a2, &qword_1009EE0D0);
  *(_BYTE *)(a2 + *(int *)(sub_10004CFD4(&qword_1009EE0E0) + 36)) = v14;
  return sub_100010960((uint64_t)v10, &qword_1009EE0D0);
}

unint64_t sub_1005AD558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EE110;
  if (!qword_1009EE110)
  {
    v1 = sub_100030B74(&qword_1009EE0E0);
    sub_1005AD5C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EE110);
  }
  return result;
}

unint64_t sub_1005AD5C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EE118;
  if (!qword_1009EE118)
  {
    v1 = sub_100030B74(&qword_1009EE0D0);
    sub_100030B34(&qword_1009EE120, &qword_1009EE0C8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EE118);
  }
  return result;
}

void sub_1005AD660(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_1005AD6B8(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "primaryAnalyticsController");
  dispatch thunk of AnalyticsController.refreshSessionDataIfActive()();

}

void sub_1005AD768(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_allocWithZone((Class)type metadata accessor for WidgetService());
  v5 = a1;
  v6 = sub_100013AF4(v5);

  *a2 = v6;
}

double sub_1005AD7B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  double result;

  v5 = swift_allocObject(&unk_100913CE0, 24, 7);
  *(_QWORD *)(v5 + 16) = a3;
  v6 = a3;
  WidgetService.setupService(libraryManager:onWidgetConfigurationChangeCallback:)(a2, (uint64_t)sub_1005533D8, v5);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

_UNKNOWN **sub_1005AD81C()
{
  return &protocol witness table for WidgetService;
}

uint64_t sub_1005AD828()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005AD84C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[4];

  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 16));
  result = type metadata accessor for Binding(319, v2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[2] = &unk_100730C68;
    v5[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v5, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_1005AD8E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  size_t v9;
  int v10;
  uint64_t v11;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  const void *v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *__dst;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  v7 = (v6 + 16) & ~v6;
  if (*(_DWORD *)(v4 + 84))
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  v9 = v7 + v8;
  v10 = v5 & 0x100000;
  v11 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v10 != 0 || ((v7 + v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v15 = (uint64_t *)(v11 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v15 = a1;
    v16 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v17 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v18 = *v17;
    *v16 = *v17;
    __dst = (void *)(((unint64_t)v16 + v6 + 8) & ~v6);
    v19 = (const void *)(((unint64_t)v17 + v6 + 8) & ~v6);
    v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48);
    swift_retain(v11);
    swift_retain(v18);
    if (v20(v19, 1, v3))
    {
      memcpy(__dst, v19, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v4 + 16))(__dst, v19, v3);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v4 + 56))(__dst, 0, 1, v3);
    }
    v21 = ((unint64_t)v15 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)a2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
    v24 = (_QWORD *)(((unint64_t)v15 + v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)a2 + v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v11 = v25[1];
    *v24 = *v25;
    v24[1] = v11;
    swift_retain(v23);
  }
  swift_retain(v11);
  return v15;
}

uint64_t sub_1005ADA88(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = (unint64_t)a1 + 15;
  swift_release(*a1);
  v4 &= 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)v4);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7 + 8) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = (char *)a1 + *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v10 = (uint64_t)&v9[(v7 + 16) & ~v7];
  else
    v10 = (uint64_t)&v9[((v7 + 16) & ~v7) + 1];
  swift_release(*(_QWORD *)((v10 + 7) & 0xFFFFFFFFFFFFF8));
  return swift_release(*(_QWORD *)(((v10 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t *sub_1005ADB50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v5 = *a2;
  *a1 = *a2;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v6 = *v7;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v6 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_retain(v5);
  swift_retain(v8);
  if (v14(v13, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v16 + 1;
    memcpy(v12, v13, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  v18 = v16 + ((v11 + 16) & ~v11);
  if (!v15)
    ++v18;
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = (unint64_t)(v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (unint64_t)(v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v24 = (uint64_t *)((unint64_t)(v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  v26 = v24[1];
  v27 = (_QWORD *)((unint64_t)(v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v27 = v25;
  v27[1] = v26;
  swift_retain(v23);
  swift_retain(v26);
  return a1;
}

uint64_t *sub_1005ADCB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *a1;
  v8 = (unint64_t)a2 + 15;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v9 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)v8;
  v11 = *v9;
  *v9 = *(_QWORD *)v8;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (void *)(((unint64_t)v9 + v14 + 8) & ~v14);
  v16 = (void *)((v14 + 8 + v8) & ~v14);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v9) = v17(v15, 1, v12);
  v18 = v17(v16, 1, v12);
  if ((_DWORD)v9)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v13 + 84))
      v19 = *(_QWORD *)(v13 + 64);
    else
      v19 = *(_QWORD *)(v13 + 64) + 1;
    memcpy(v15, v16, v19);
    goto LABEL_10;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v15, v16, v12);
LABEL_10:
  v20 = *(_QWORD *)(v13 + 64) + ((v14 + 16) & ~v14);
  if (!*(_DWORD *)(v13 + 84))
    ++v20;
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = ((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((unint64_t)a2 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)v23;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  swift_retain(v25);
  swift_release(v26);
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v27 = (_QWORD *)((unint64_t)(v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((unint64_t)(v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = v28[1];
  v30 = v27[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_retain(v29);
  swift_release(v30);
  return a1;
}

_QWORD *sub_1005ADE80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  v15 = v13 + ((v9 + 16) & ~v9);
  if (!v12)
    ++v15;
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = (unint64_t)(v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (unint64_t)(v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_OWORD *)((unint64_t)(v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)(v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t *sub_1005ADFC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v6 = *a1;
  v7 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release(v6);
  v8 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = *v8;
  *v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v10);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)v8 + v13 + 8) & ~v13);
  v15 = (void *)((v13 + 8 + v9) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v9) = v16(v14, 1, v11);
  v17 = v16(v15, 1, v11);
  if ((_DWORD)v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v12 + 84))
      v18 = *(_QWORD *)(v12 + 64);
    else
      v18 = *(_QWORD *)(v12 + 64) + 1;
    memcpy(v14, v15, v18);
    goto LABEL_10;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
LABEL_10:
  v19 = *(_QWORD *)(v12 + 64) + ((v13 + 16) & ~v13);
  if (!*(_DWORD *)(v12 + 84))
    ++v19;
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = ((unint64_t)a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (unint64_t)(v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v22;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  swift_release(v24);
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v25 = (unint64_t)(v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)(v25 + 8);
  *(_OWORD *)v25 = *(_OWORD *)((unint64_t)(v21 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v26);
  return a1;
}

uint64_t sub_1005AE170(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t *v14;
  unint64_t v15;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = 23;
  else
    v8 = 24;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  if (v7 < a2)
  {
    if (((((v8 + *(_QWORD *)(v4 + 64) + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v10 = 2;
    else
      v10 = a2 - v7 + 1;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    __asm { BR              X16 }
  }
  v14 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v6 & 0x80000000) != 0)
  {
    v16 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v14 + v9 + 8) & ~v9);
    if (v16 >= 2)
      return v16 - 1;
    else
      return 0;
  }
  else
  {
    v15 = *v14;
    if (v15 >= 0xFFFFFFFF)
      LODWORD(v15) = -1;
    return (v15 + 1);
  }
}

void sub_1005AE2C0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80)) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80)) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t sub_1005AE3CC@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t result;

  *(_BYTE *)(v14 + v15) = 0;
  if (a1)
  {
    v16 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v11 & 0x80000000) != 0)
    {
      if (v11 >= a1)
      {
        return (*(uint64_t (**)(unint64_t, _QWORD))(v12 + 56))(((unint64_t)v16 + v13 + 8) & v10, a1 + 1);
      }
      else if ((_DWORD)a2)
      {
        if (a2 <= 3)
          v18 = a2;
        else
          v18 = 4;
        bzero((void *)(((unint64_t)v16 + v13 + 8) & v10), a2);
        __asm { BR              X10 }
      }
    }
    else
    {
      if ((a1 & 0x80000000) != 0)
        v17 = a1 ^ 0x80000000;
      else
        v17 = a1 - 1;
      *v16 = v17;
    }
  }
  return result;
}

void sub_1005AE4C4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1005AE4CC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1005AE4DC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for HalfSheetModifier(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HalfSheetModifier);
}

uint64_t sub_1005AE4F4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100878D90, 1);
}

uint64_t sub_1005AE528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 16));
  v2 = type metadata accessor for Binding(0, v1);
  return Binding.projectedValue.getter(v2);
}

uint64_t sub_1005AE560@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];

  v28 = a1;
  v30 = a3;
  WitnessTable = swift_getWitnessTable(&unk_100730C90, a2);
  v5 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v6 = a2[2];
  v8 = a2[4];
  v9 = a2[5];
  v38[0] = a2[3];
  v7 = v38[0];
  v38[1] = v6;
  v38[2] = v9;
  v38[3] = v8;
  v10 = type metadata accessor for HalfSheet(255, (uint64_t)v38);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _AllowsHitTestingModifier);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for ZStack(0, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v27 - v20;
  v32 = v6;
  v33 = v7;
  v34 = v8;
  v35 = v9;
  v36 = v28;
  v37 = v29;
  v23 = static Alignment.center.getter(v22);
  ZStack.init(alignment:content:)(v23, v24, sub_1005AEAD8, v31, v13, v14);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v15);
  sub_100344038((uint64_t)v18, v15, (uint64_t)v21);
  v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, v15);
  sub_100341C00((uint64_t)v21, v15, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, v15);
}

uint64_t sub_1005AE720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t WitnessTable;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[4];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v63 = a7;
  v13 = type metadata accessor for Optional(255, a3);
  v14 = type metadata accessor for Binding(0, v13);
  __chkstk_darwin(v14);
  v57 = (char *)&v51 - v15;
  v67 = a4;
  v68 = (char *)a3;
  v16 = a4;
  v52 = a4;
  v17 = a3;
  v53 = a6;
  v54 = a3;
  v69 = a6;
  v70 = a5;
  v18 = a6;
  v19 = a5;
  v51 = a5;
  v20 = type metadata accessor for HalfSheet(0, (uint64_t)&v67);
  v61 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v51 - v21;
  v23 = type metadata accessor for ModifiedContent(0, v20, &type metadata for _AllowsHitTestingModifier);
  v62 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v60 = (uint64_t)&v51 - v27;
  v67 = v17;
  v68 = (char *)v16;
  v69 = v19;
  v70 = v18;
  v28 = (int *)type metadata accessor for HalfSheetModifier(255, (uint64_t)&v67);
  WitnessTable = swift_getWitnessTable(&unk_100730C90, v28);
  v30 = type metadata accessor for _ViewModifier_Content(0, v28, WitnessTable);
  v59 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v58 = (char *)&v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v51 - v33;
  v55 = (char *)&v51 - v33;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v30);
  sub_100344038(a1, v30, (uint64_t)v34);
  v35 = (uint64_t)v57;
  sub_1005AE528((uint64_t)v28);
  v36 = *(_QWORD *)(a2 + v28[13]);
  LODWORD(v34) = *(unsigned __int8 *)(a2 + v28[14]);
  v37 = (uint64_t *)(a2 + v28[15]);
  v38 = *v37;
  v39 = v37[1];
  swift_retain(v36);
  swift_retain(v39);
  sub_1002434A8(v35, v36, (int)v34, v38, v39, v52, v54, v53, (uint64_t)v22, v51);
  v40 = swift_getWitnessTable(&unk_1007144D8, v20);
  View.allowsHitTesting(_:)(0, v20, v40);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v20);
  v41 = sub_1002812F0();
  v66[2] = v40;
  v66[3] = v41;
  v42 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  v43 = v60;
  sub_100344038((uint64_t)v25, v23, v60);
  v44 = v62;
  v45 = *(void (**)(char *, uint64_t))(v62 + 8);
  v45(v25, v23);
  v46 = (uint64_t)v58;
  v47 = v59;
  v48 = v55;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v55, v30);
  v67 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v25, v43, v23);
  v68 = v25;
  v66[0] = v30;
  v66[1] = v23;
  v64 = v56;
  v65 = v42;
  sub_100341C18(&v67, 2uLL, (uint64_t)v66);
  v45((char *)v43, v23);
  v49 = *(void (**)(char *, uint64_t))(v47 + 8);
  v49(v48, v30);
  v45(v25, v23);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v46, v30);
}

uint64_t sub_1005AEAD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1005AE720(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1005AEAE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v15 = *a1;
  v1 = v15;
  v16 = v2;
  v17 = v3;
  v18 = v4;
  v5 = type metadata accessor for HalfSheetModifier(255, (uint64_t)&v15);
  WitnessTable = swift_getWitnessTable(&unk_100730C90, v5);
  v7 = type metadata accessor for _ViewModifier_Content(255, v5, WitnessTable);
  v15 = v2;
  v16 = v1;
  v17 = v4;
  v18 = v3;
  v8 = type metadata accessor for HalfSheet(255, (uint64_t)&v15);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _AllowsHitTestingModifier);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v13 = type metadata accessor for ZStack(255, v11, v12);
  return swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v13);
}

uint64_t type metadata accessor for MainToolbarRouter()
{
  return objc_opt_self(_TtC5Books17MainToolbarRouter);
}

uint64_t static AchievementsNotificationController.notify(_:currentlyShowingSheetKind:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _BYTE v34[24];

  v4 = type metadata accessor for Achievement(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v6);
  v11 = &v34[-v10 - 8];
  v12 = Achievement.key.getter(v9);
  v13 = Achievement.Key.jsKind.getter(v12);
  if (v13 == a2)
  {
    v14 = static os_log_type_t.info.getter(v13);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v15 = (void *)static OS_os_log.readingActivity.getter();
    v16 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10070CCA0;
    sub_10059A6B0(a1, (uint64_t)v11);
    v18 = String.init<A>(reflecting:)(v11, v4);
    v20 = v19;
    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_10002BE50();
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v20;
    os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v15, "AchievementsNotificationController: Skipping notification for achievement due to sheet already being visible: %@", 112, 2, v17);

    return swift_bridgeObjectRelease(v17);
  }
  else if (qword_1009EE310)
  {
    v22 = static os_log_type_t.default.getter(v13);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v23 = (void *)static OS_os_log.readingActivity.getter();
    v24 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_10070CCA0;
    sub_10059A6B0(a1, (uint64_t)v11);
    v26 = String.init<A>(reflecting:)(v11, v4);
    v28 = v27;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_10002BE50();
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v28;
    os_log(_:dso:log:_:_:)(v22, &_mh_execute_header, v23, "AchievementsNotificationController: Suppressing notification for achievement: %@", 80, 2, v25);

    swift_bridgeObjectRelease(v25);
    if (qword_1009CE8E8 != -1)
      swift_once(&qword_1009CE8E8, sub_1005AF628);
    sub_10059A6B0(a1, (uint64_t)v8);
    swift_beginAccess(&off_1009EE318, v34, 33, 0);
    v29 = off_1009EE318;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1009EE318);
    off_1009EE318 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v29 = (void *)sub_100022858(0, *((_QWORD *)v29 + 2) + 1, 1, (unint64_t)v29, &qword_1009EE4A0, (uint64_t (*)(_QWORD))&type metadata accessor for Achievement);
      off_1009EE318 = v29;
    }
    v32 = *((_QWORD *)v29 + 2);
    v31 = *((_QWORD *)v29 + 3);
    if (v32 >= v31 >> 1)
    {
      v29 = (void *)sub_100022858(v31 > 1, v32 + 1, 1, (unint64_t)v29, &qword_1009EE4A0, (uint64_t (*)(_QWORD))&type metadata accessor for Achievement);
      off_1009EE318 = v29;
    }
    *((_QWORD *)v29 + 2) = v32 + 1;
    sub_10059A798((uint64_t)v8, (uint64_t)v29+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v32);
    return swift_endAccess(v34);
  }
  else
  {
    return sub_1005AFA88(a1);
  }
}

uint64_t *NSNotificationName.achievementNotification.unsafeMutableAddressor()
{
  if (qword_1009CE8E0 != -1)
    swift_once(&qword_1009CE8E0, sub_1005AF0F0);
  return &static NSNotificationName.achievementNotification;
}

const char *AchievementsNotificationController.achievementTitleKey.unsafeMutableAddressor()
{
  return "title";
}

uint64_t static AchievementsNotificationController.handleNotificationSuppressingEvent(_:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = qword_1009EE310;
  if ((result & 1) == 0)
  {
    v1 = qword_1009EE310 + 1;
    if (!__OFADD__(qword_1009EE310, 1))
      goto LABEL_6;
    __break(1u);
  }
  if (__OFSUB__(v1--, 1))
  {
    __break(1u);
    return result;
  }
LABEL_6:
  qword_1009EE310 = v1;
  v3 = static os_log_type_t.info.getter(result);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.readingActivity.getter();
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  v7 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v9 = v8;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_10002BE50();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Notification Suppression Counter:%{public}@", 43, 2, v6);

  result = swift_bridgeObjectRelease(v6);
  if (!qword_1009EE310)
    return sub_1005AF1A0();
  return result;
}

NSString sub_1005AF0F0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.achievementNotification = (uint64_t)result;
  return result;
}

void *AchievementsNotificationController.categoryIdentifier.unsafeMutableAddressor()
{
  return &static AchievementsNotificationController.categoryIdentifier;
}

id static NSNotificationName.achievementNotification.getter()
{
  if (qword_1009CE8E0 != -1)
    swift_once(&qword_1009CE8E0, sub_1005AF0F0);
  return (id)static NSNotificationName.achievementNotification;
}

unint64_t static AchievementsNotificationController.categoryIdentifier.getter()
{
  return 0xD000000000000027;
}

uint64_t static AchievementsNotificationController.achievementTitleKey.getter()
{
  return 0x656C746974;
}

uint64_t sub_1005AF1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD aBlock[5];
  uint64_t v52;
  char v53[32];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v0 - 8);
  v47 = v0;
  __chkstk_darwin(v0);
  v45 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  __chkstk_darwin(v2);
  v42 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Achievement(0);
  v4 = *(_QWORD *)(v41 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v41);
  v7 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - v8;
  if (qword_1009CE8E8 != -1)
    swift_once(&qword_1009CE8E8, sub_1005AF628);
  swift_beginAccess(&off_1009EE318, v53, 1, 0);
  v10 = off_1009EE318;
  off_1009EE318 = _swiftEmptyArrayStorage;
  v11 = v10[2];
  if (!v11)
    return swift_bridgeObjectRelease(v10);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (uint64_t)v10 + ((v12 + 32) & ~v12);
  v40 = sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v39 = *(_QWORD *)(v4 + 72);
  v38 = (v12 + 24) & ~v12;
  v37 = v38 + v5;
  v36 = v12 | 7;
  v34 = v10;
  swift_bridgeObjectRetain(v10);
  v35 = xmmword_10070CCA0;
  v14 = v45;
  do
  {
    v49 = v11;
    v15 = sub_10059A6B0(v13, (uint64_t)v9);
    v16 = static os_log_type_t.info.getter(v15);
    v17 = (void *)static OS_os_log.readingActivity.getter();
    v18 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = v35;
    sub_10059A6B0((uint64_t)v9, (uint64_t)v7);
    v20 = String.init<A>(reflecting:)(v7, v41);
    v22 = v21;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_10002BE50();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    os_log(_:dso:log:_:_:)(v16, &_mh_execute_header, v17, "UNUserNotificationCenter: Scheduling notification for achievement %@", 68, 2, v19);

    swift_bridgeObjectRelease(v19);
    if (qword_1009CE8F0 != -1)
      swift_once(&qword_1009CE8F0, sub_1005AF63C);
    sub_10059A6B0((uint64_t)v9, (uint64_t)v7);
    v23 = swift_allocObject(&unk_100913DD8, v37, v36);
    *(_QWORD *)(v23 + 16) = v48;
    sub_10059A798((uint64_t)v7, v23 + v38);
    aBlock[4] = sub_1005B55AC;
    v52 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100913DF0;
    v24 = _Block_copy(aBlock);
    v25 = (uint64_t)v9;
    v26 = v42;
    static DispatchQoS.unspecified.getter(v24);
    v50 = _swiftEmptyArrayStorage;
    v27 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v29 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
    v30 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v28, v29, v47, v27);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v26, v14, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v30);
    v31 = v26;
    v9 = (char *)v25;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v44);
    swift_release(v52);
    sub_10036BA60(v25);
    v13 += v39;
    v11 = v49 - 1;
  }
  while (v49 != 1);
  return swift_bridgeObjectRelease_n(v34, 2);
}

void sub_1005AF628()
{
  off_1009EE318 = _swiftEmptyArrayStorage;
}

uint64_t sub_1005AF63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v12 = sub_1000652E4((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003ALL, 0x80000001007D68C0, v9, v6, v3, 0);
  qword_1009EE320 = result;
  return result;
}

id sub_1005AF828(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;

  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  a4();
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  if (v7)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

id sub_1005AF908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSString v9;
  NSURL *v10;
  void *v11;
  void *v12;
  NSDictionary v13;
  id v14;
  id v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v23;

  v5 = v4;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  URL._bridgeToObjectiveC()(v10);
  v12 = v11;
  if (a4)
  {
    v13.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v13.super.isa = 0;
  }
  v23 = 0;
  v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "attachmentWithIdentifier:URL:options:error:", v9, v12, v13.super.isa, &v23);

  v15 = v23;
  if (v14)
  {
    v16 = type metadata accessor for URL(0);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v18 = v15;
    v17(a3, v16);
  }
  else
  {
    v19 = v23;
    _convertNSErrorToError(_:)(v15);

    swift_willThrow(v20);
    v21 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a3, v21);
  }
  return v14;
}

uint64_t sub_1005AFA88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Achievement(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = static os_log_type_t.info.getter(v10);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v12 = (void *)static OS_os_log.readingActivity.getter();
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10070CCA0;
  v15 = a1;
  sub_10059A6B0(a1, (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = String.init<A>(reflecting:)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v18 = v17;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_10002BE50();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v12, "UNUserNotificationCenter: Scheduling notification for achievement %@", 68, 2, v14);

  swift_bridgeObjectRelease(v14);
  if (qword_1009CE8F0 != -1)
    swift_once(&qword_1009CE8F0, sub_1005AF63C);
  sub_10059A6B0(v15, (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = swift_allocObject(&unk_100913E78, v20 + v9, v19 | 7);
  *(_QWORD *)(v21 + 16) = v31;
  sub_10059A798((uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  aBlock[4] = sub_1005B55AC;
  v38 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100913E90;
  v22 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v22);
  v36 = _swiftEmptyArrayStorage;
  v23 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v25 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
  v26 = v30;
  v27 = v35;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v24, v25, v35, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v26, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
  return swift_release(v38);
}

void sub_1005AFDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _OWORD v39[2];
  __int128 v40;
  _QWORD *v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v36 = a2;
  v37 = a1;
  v3 = type metadata accessor for Achievement(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1005B4460(a2);
  v11 = objc_msgSend((id)objc_opt_self(UNTimeIntervalNotificationTrigger), "triggerWithTimeInterval:repeats:", 0, 0.1);
  v12 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  UUID.uuidString.getter(v12);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = v10;
  v16 = v11;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v18 = objc_msgSend((id)objc_opt_self(UNNotificationRequest), "requestWithIdentifier:content:trigger:", v17, v15, v16);

  v19 = objc_msgSend((id)objc_opt_self(UNUserNotificationCenter), "currentNotificationCenter");
  sub_10059A6B0(v36, (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_100913E28, v21 + v5, v20 | 7);
  sub_10059A798((uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  aBlock[4] = sub_1005B5648;
  v43 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000B65C;
  aBlock[3] = &unk_100913E40;
  v23 = _Block_copy(aBlock);
  objc_msgSend(v19, "addNotificationRequest:withCompletionHandler:", v18, v23, swift_release(v43).n128_f64[0]);
  _Block_release(v23);
  *(_QWORD *)&v40 = 0x656C746974;
  *((_QWORD *)&v40 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(&v40, &type metadata for String, &protocol witness table for String);
  v24 = objc_msgSend(v15, "title");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v41 = &type metadata for String;
  *(_QWORD *)&v40 = v25;
  *((_QWORD *)&v40 + 1) = v27;
  sub_10004CFC4(&v40, v39);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  v38 = _swiftEmptyDictionarySingleton;
  sub_1002C436C(v39, (uint64_t)aBlock, isUniquelyReferenced_nonNull_native);
  v29 = v38;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1000569AC((uint64_t)aBlock);
  v30 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CE8E0 != -1)
    swift_once(&qword_1009CE8E0, sub_1005AF0F0);
  v31 = static NSNotificationName.achievementNotification;
  aBlock[0] = v37;
  v32 = sub_10004CFD4(&qword_1009EE448);
  v33 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(aBlock, v32);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "postNotificationName:object:userInfo:", v31, v33, isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  swift_unknownObjectRelease(v33);
}

void sub_1005B019C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _BYTE v19[8];

  v4 = type metadata accessor for Achievement(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = swift_errorRetain(a1);
    v8 = static os_log_type_t.error.getter(v7);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v9 = (void *)static OS_os_log.readingActivity.getter();
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v11 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v11 + 16) = xmmword_10070FC00;
    sub_10059A6B0(a2, (uint64_t)v6);
    v12 = String.init<A>(reflecting:)(v6, v4);
    v14 = v13;
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    v15 = sub_10002BE50();
    *(_QWORD *)(v11 + 64) = v15;
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v14;
    swift_getErrorValue(a1, v19, v18);
    v16 = Error.localizedDescription.getter(v18[1], v18[2]);
    *(_QWORD *)(v11 + 96) = &type metadata for String;
    *(_QWORD *)(v11 + 104) = v15;
    *(_QWORD *)(v11 + 72) = v16;
    *(_QWORD *)(v11 + 80) = v17;
    os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Cannot schedule notification for achievement %@: %@", 51, 2, v11);

    swift_bridgeObjectRelease(v11);
    swift_errorRelease(a1);
  }
}

_QWORD *sub_1005B0350(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE430);
      v11 = (_QWORD *)swift_allocObject(v10, 96 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 96);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[12 * v8 + 4])
          memmove(v13, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B2410(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B0474(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009D4B80);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B2504(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B0580(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1FEC(a1, a2, a3, a4, &qword_1009D2F30);
}

_QWORD *sub_1005B058C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1B10(a1, a2, a3, a4, &qword_1009DD5A0);
}

_QWORD *sub_1005B05A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE3D0);
      v11 = (_QWORD *)swift_allocObject(v10, 4 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 29;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 2);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= (_QWORD *)((char *)a4 + 4 * v8 + 32))
          memmove(v14, a4 + 4, 4 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B2BC0(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B06AC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10004455C(a1, a2, a3, a4, &qword_1009EE438);
}

_QWORD *sub_1005B06B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE440);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B29F0(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B07C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE4C0);
      v11 = (_QWORD *)swift_allocObject(v10, 104 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 104);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[13 * v8 + 4])
          memmove(v13, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B2D98(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B08EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B0A0C(a1, a2, a3, a4, &qword_1009EE410, &qword_1009D7B20);
}

_QWORD *sub_1005B0900(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4((uint64_t *)&unk_1009EE4C8);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100044650(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B09F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B0A0C(a1, a2, a3, a4, &qword_1009DEEA0, &qword_1009D7B20);
}

_QWORD *sub_1005B0A0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10004CFD4(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v11 + 4])
          memmove(v17, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000646E4(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B0B24(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100022700(a1, a2, a3, a4, &qword_1009DD680, &qword_1009DD688);
}

_QWORD *sub_1005B0B38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100022700(a1, a2, a3, a4, &qword_1009EE378, &qword_1009EF310);
}

uint64_t sub_1005B0B4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE4B8, (uint64_t (*)(_QWORD))&type metadata accessor for LibraryPDFInfo);
}

_QWORD *sub_1005B0B60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE358);
      v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[11 * v8 + 4])
          memmove(v13, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B25F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B0C88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4((uint64_t *)&unk_1009DD4B8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B2E88(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B0D94(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1770(a1, a2, a3, a4, &qword_1009EE408);
}

_QWORD *sub_1005B0DA8(_QWORD *result, int64_t a2, char a3, unint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;
  unint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a4 + 24);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *(_QWORD *)(a4 + 16);
    if (v7 <= v8)
      v9 = *(_QWORD *)(a4 + 16);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE400);
      v11 = (_QWORD *)swift_allocObject(v10, 120 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 120);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        v14 = a4 + 32;
        if ((unint64_t)v11 < a4 || (unint64_t)v13 >= a4 + 32 + 120 * v8)
        {
          swift_arrayInitWithTakeFrontToBack(v13, v14, v8, &type metadata for MainToolbar.Button);
        }
        else if (v11 != (_QWORD *)a4)
        {
          swift_arrayInitWithTakeBackToFront(v13, v14);
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B2F90(0, v8, (unint64_t)v13, a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B0EEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE4A8, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyBundle);
}

uint64_t sub_1005B0F00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE4B0, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyValue);
}

uint64_t sub_1005B0F14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1005B13F4(a1, a2, a3, a4, &qword_1009E63D0, &qword_1009DA368);
}

_QWORD *sub_1005B0F28(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE3F8);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B3084(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B1034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE368, (uint64_t (*)(_QWORD))&type metadata accessor for Book);
}

_QWORD *sub_1005B1048(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100022700(a1, a2, a3, a4, (uint64_t *)&unk_1009DD6B0, &qword_1009DDF20);
}

_QWORD *sub_1005B105C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009DD648);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B3174(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B1184(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B0A0C(a1, a2, a3, a4, &qword_1009EE370, &qword_1009D7B20);
}

_QWORD *sub_1005B1198(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009DDD38);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B27F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B12BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE490);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B26E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B13E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1005B13F4(a1, a2, a3, a4, &qword_1009EE488, (uint64_t *)&unk_1009DDD40);
}

uint64_t sub_1005B13F4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10004CFD4(a5);
  v14 = *(_QWORD *)(sub_10004CFD4(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10004CFD4(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23, v25);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1005B393C(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_1005B1600(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009DE368, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

_QWORD *sub_1005B1614(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE3F0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B2CA8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B1720(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100022700(a1, a2, a3, a4, (uint64_t *)&unk_1009DD690, &qword_1009D6FF0);
}

uint64_t sub_1005B1734(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, (uint64_t *)&unk_1009DD5F8, (uint64_t (*)(_QWORD))&type metadata accessor for ScoredGenre);
}

uint64_t sub_1005B1748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3D8, (uint64_t (*)(_QWORD))&type metadata accessor for ReadingNowItemTypeData);
}

_QWORD *sub_1005B175C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1770(a1, a2, a3, a4, &qword_1009EE418);
}

_QWORD *sub_1005B1770(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10004CFD4(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 24 * v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v12[2] = v9;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v9 + 4])
          memmove(v14, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B3370(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B189C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B211C(a1, a2, a3, a4, &qword_1009DD4E8);
}

_QWORD *sub_1005B18B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B0A0C(a1, a2, a3, a4, &qword_1009E2400, &qword_1009D7B20);
}

_QWORD *sub_1005B18C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009ECA50);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B3564(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B19D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B19E4(a1, a2, a3, a4, &qword_1009EE3C8, &qword_1009DDE00);
}

_QWORD *sub_1005B19E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10004CFD4(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10003FB3C(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B1AFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1B10(a1, a2, a3, a4, &qword_1009DD5C8);
}

_QWORD *sub_1005B1B10(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10004CFD4(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 72 * v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v12[2] = v9;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 72);
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[9 * v9 + 4])
          memmove(v14, a4 + 4, 72 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B54B8(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B1C40(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B19E4(a1, a2, a3, a4, &qword_1009D6FD0, (uint64_t *)&unk_1009DD6C0);
}

_QWORD *sub_1005B1C54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE420);
      v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[11 * v8 + 4])
          memmove(v13, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B2900(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B1D78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009E2318, (uint64_t (*)(_QWORD))&type metadata accessor for UICellAccessory);
}

_QWORD *sub_1005B1D8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE3A0);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B366C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B1EAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE460);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B3760(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B1FB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE390, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBook);
}

uint64_t sub_1005B1FCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE388, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookForDeduplication);
}

_QWORD *sub_1005B1FE0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1FEC(a1, a2, a3, a4, &qword_1009DD578);
}

_QWORD *sub_1005B1FEC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10004CFD4(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v9 + 4])
          memmove(v15, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B2AD8(0, v9, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B20F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE380, (uint64_t (*)(_QWORD))&type metadata accessor for NextInSeriesProcessorMetadata);
}

_QWORD *sub_1005B2108(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B211C(a1, a2, a3, a4, &qword_1009DD5C0);
}

_QWORD *sub_1005B211C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10004CFD4(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 32 * v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 1;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 5);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[4 * v9 + 4])
          memmove(v15, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B3850(0, v9, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005B2234(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B211C(a1, a2, a3, a4, &qword_1009DD5B8);
}

uint64_t sub_1005B2248(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE398, (uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata.GenreTreeNode);
}

uint64_t sub_1005B225C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EC330, (uint64_t (*)(_QWORD))&type metadata accessor for ClusteringOptions.MediaType);
}

uint64_t sub_1005B2270(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1005B13F4(a1, a2, a3, a4, &qword_1009EE3B8, &qword_1009EC300);
}

_QWORD *sub_1005B2284(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009EE428);
      v11 = (_QWORD *)swift_allocObject(v10, 104 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 104);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[13 * v8 + 4])
          memmove(v13, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B53C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B23AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3B0, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_1005B23C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE360, (uint64_t (*)(_QWORD))&type metadata accessor for RadarAttachment);
}

uint64_t sub_1005B23D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009DD598, (uint64_t (*)(_QWORD))&type metadata accessor for Event);
}

uint64_t sub_1005B23E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3A8, (uint64_t (*)(_QWORD))&type metadata accessor for PageLocation);
}

_QWORD *sub_1005B23FC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B1B10(a1, a2, a3, a4, &qword_1009EE350);
}

uint64_t sub_1005B2410(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 96 * a1 + 32;
  v6 = a3 + 96 * v4;
  if (v5 >= v6 || v5 + 96 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B2504(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B25F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 88 * a1 + 32;
  v6 = a3 + 88 * v4;
  if (v5 >= v6 || v5 + 88 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B26E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10004CFD4(&qword_1009EE498);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B27F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10004CFD4(&qword_1009EE480);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B2900(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 88 * a1 + 32;
  v6 = a3 + 88 * v4;
  if (v5 >= v6 || v5 + 88 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1005B29F0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1005B2AD8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1005B2BC0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B2CA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B2D98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 104 * a1 + 32;
  v6 = a3 + 104 * v4;
  if (v5 >= v6 || v5 + 104 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B2E88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_10004CFD4(&qword_1009D2A80);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B2F90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 120 * a1 + 32;
  v6 = a3 + 120 * v4;
  if (v5 >= v6 || v5 + 120 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B3084(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B3174(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  v6 = a3 + 56 * v4;
  if (v5 >= v6 || v5 + 56 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B3268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    sub_10004CFD4(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B3370(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B3460(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      type metadata accessor for BCDefaultCollectionID(0);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B3564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_10004CFD4(&qword_1009EE478);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B366C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B3760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B3850(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1005B393C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_10004CFD4(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t _s5Books34AchievementsNotificationControllerC8titleKey4fromSSSgSDySSypG_tFZ_0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v6;
  _BYTE v7[32];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = sub_10004CE80(0x6D65766569686361, 0xEF646E694B746E65);
  if ((v3 & 1) == 0)
    return 0;
  sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v7);
  if ((swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    return 0;
  v4 = 0xD000000000000026;
  if (static Achievement.Key.mappedKey(from:)(v6) >= 2u)
    return 0xD000000000000029;
  return v4;
}

unint64_t _s5Books34AchievementsNotificationControllerC10messageKey4fromSSSgSDySSypG_tFZ_0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v6;
  _BYTE v7[32];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = sub_10004CE80(0x6D65766569686361, 0xEF646E694B746E65);
  if ((v3 & 1) == 0)
    return 0;
  sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v7);
  if ((swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    return 0;
  v4 = 0xD000000000000028;
  if (static Achievement.Key.mappedKey(from:)(v6) >= 2u)
    return 0xD00000000000002BLL;
  return v4;
}

uint64_t _s5Books34AchievementsNotificationControllerC8goalType4from13BookAnalytics011BridgedGoalF0OSDySSypG_tFZ_0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _BYTE v6[32];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_10004CE80(0x6D65766569686361, 0xEF646E694B746E65), (v3 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6),
        (swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0))
  {
    return qword_100730D68[(char)static Achievement.Key.mappedKey(from:)(v5)];
  }
  else
  {
    return 0;
  }
}

UIImage *sub_1005B3CF0(void *a1)
{
  CGContext *v2;
  CGContext *v3;
  CGContext *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  unsigned __int8 v9;
  CGContext *v10;
  CGContext *v11;
  UIImage *v12;
  CGSize v14;

  v2 = (CGContext *)objc_msgSend(a1, "rootLayer");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = (CGContext *)objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  -[CGContext bounds](v3, "bounds");
  -[CGContext setBounds:](v4, "setBounds:");
  objc_msgSend(a1, "addToLayer:onTop:gravity:", v4, 1, kCAGravityResize);
  -[CGContext bounds](v4, "bounds");
  v6 = v5;
  v8 = v7;
  v9 = -[CGContext isOpaque](v4, "isOpaque");
  v14.width = v6;
  v14.height = v8;
  UIGraphicsBeginImageContextWithOptions(v14, v9, 0.0);
  v10 = UIGraphicsGetCurrentContext();
  if (v10)
  {
    v11 = v10;
    -[CGContext renderInContext:](v4, "renderInContext:", v10);
    v12 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    v3 = v4;
    v4 = v11;
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

UIImage *sub_1005B3E30()
{
  id v0;
  id v1;
  NSString v2;
  id v3;
  UIImage *v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MicaFileProvider(0)), "init");
  v1 = objc_allocWithZone((Class)TUIMicaPlayer);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "initWithPath:retinaScale:fileProvider:", v2, v0, 1.0);

  objc_msgSend(v3, "documentDuration");
  objc_msgSend(v3, "setPlaybackTime:");
  if (!v3)
    return 0;
  v4 = sub_1005B3CF0(v3);

  return v4;
}

UIImage *sub_1005B3F04(uint64_t a1)
{
  id v2;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  unint64_t v15;
  unint64_t v16;
  UIImage *v17;
  NSString v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  UIImage *v26;
  id v27;
  char v28;
  id v29;
  UIImage *result;
  UIImage *v31;
  UIImage *v32;
  UIImage *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t inited;
  NSString *v39;
  unint64_t v40;
  NSString v41;
  unint64_t v42;
  NSDictionary v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  char v49[72];

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MicaFileProvider(0)), "init");
  v3 = objc_allocWithZone((Class)TUIMicaPlayer);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "initWithPath:retinaScale:fileProvider:", v4, v2, 1.0);

  objc_msgSend(v5, "documentDuration");
  objc_msgSend(v5, "setPlaybackTime:");
  if (!v5)
    return 0;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "publishedLayerWithKey:required:", v6, 1);

  if (!v7 || (v8 = objc_opt_self(CATextLayer), (v9 = swift_dynamicCastObjCClass(v7, v8)) == 0))
  {
LABEL_34:
    v17 = sub_1005B3CF0(v5);

    return v17;
  }
  v10 = (void *)v9;
  v11 = objc_allocWithZone((Class)NSNumberFormatter);
  v48 = v7;
  v12 = objc_msgSend(v11, "init");
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v14 = objc_msgSend(v12, "stringFromNumber:", isa);

  if (v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v16 = v15;

  }
  else
  {
    v16 = 0xE000000000000000;
  }
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setString:", v18);

  v19 = 83.0;
  v20 = 103.0;
  if (a1 < 10)
    v20 = 112.0;
  if (a1 <= 99)
    v19 = v20;
  if (a1 <= 999)
    v21 = v19;
  else
    v21 = 66.0;
  objc_msgSend(v10, "setFontSize:", v21, v19);
  v22 = objc_msgSend(v10, "font");
  if (v22)
  {
    v23 = v22;
    v24 = objc_opt_self(NSString);
    v25 = (void *)swift_dynamicCastObjCClass(v23, v24);
    if (!v25)
      swift_unknownObjectRelease(v23);
  }
  else
  {
    v25 = 0;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009E9020, NSString_ptr);
  v26 = (UIImage *)NSString.init(stringLiteral:)("Serif UI Display Bold", 21, 2);
  if (!v25)
    goto LABEL_26;
  v27 = v25;
  v28 = static NSObject.== infix(_:_:)(v27, v26);

  if ((v28 & 1) == 0)
  {
LABEL_27:
    v35 = objc_msgSend(v10, "font");
    if (v35)
    {
      v36 = v35;
      v37 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
      inited = swift_initStackObject(v37, v49);
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = swift_getObjectType();
      *(_QWORD *)(inited + 40) = v36;
      v39 = NSFontAttributeName;
      v40 = sub_1001DA774(inited);
    }
    else
    {
      v40 = 0;
    }
    v41 = String._bridgeToObjectiveC()();
    v42 = swift_bridgeObjectRelease(v16).n128_u64[0];
    if (v40)
    {
      type metadata accessor for Key(0);
      sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
      v43.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v42 = swift_bridgeObjectRelease(v40).n128_u64[0];
    }
    else
    {
      v43.super.isa = 0;
    }
    objc_msgSend(v41, "sizeWithAttributes:", v43.super.isa, *(double *)&v42);
    v45 = v44;
    v47 = v46;

    objc_msgSend(v10, "setBounds:", 0.0, 0.0, v45, v47);
    goto LABEL_34;
  }
  v29 = objc_msgSend(objc_allocWithZone((Class)TUIFontSpec), "init");
  result = (UIImage *)objc_msgSend(v29, "fontSpecWithDesign:", UIFontDescriptorSystemDesignSerif);
  if (!result)
  {
    __break(1u);
    goto LABEL_37;
  }
  v31 = result;

  result = (UIImage *)-[UIImage fontSpecWithPointSize:](v31, "fontSpecWithPointSize:", v21);
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v32 = result;

  result = (UIImage *)-[UIImage fontSpecWithWeight:](v32, "fontSpecWithWeight:", UIFontWeightBold);
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v33 = result;

  result = (UIImage *)-[UIImage mappedSpecIfNeededWithEnvironment:](v33, "mappedSpecIfNeededWithEnvironment:", 0);
  if (result)
  {
    v26 = result;

    v34 = -[UIImage font](v26, "font");
    objc_msgSend(v10, "setFont:", v34);

LABEL_26:
    goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1005B4460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  UIImage *v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD, _QWORD, __n128);
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  UIImage *v43;
  UIImage *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  UIImage *v50;
  uint64_t v51;
  uint64_t (*v52)(_QWORD, _QWORD, __n128);
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  UIImage *v63;
  uint64_t v64;
  uint64_t (*v65)(_QWORD, _QWORD, __n128);
  uint64_t v66;
  Swift::String v67;
  uint64_t v68;
  Swift::String v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  id v78;
  uint64_t (*v79)(_QWORD, _QWORD, __n128);
  NSString v80;
  NSString v81;
  NSString v82;
  uint64_t v83;
  Class isa;
  UIImage *v85;
  NSData *v86;
  NSData *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  Swift::String v99;
  Swift::String v100;
  uint64_t v101;
  char *v102;
  __n128 v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSString v110;
  Class v111;
  uint64_t v112;
  uint64_t inited;
  uint64_t v114;
  unint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  Class v125;
  UIImage *v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  void (*v132)(UIImage *, char *, uint64_t);
  id v133;
  void (*v134)(char *, char *, uint64_t);
  id *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  __int128 v144;
  uint64_t (*v145)(_QWORD, _QWORD, __n128);
  UIImage *v146;
  uint64_t v147;
  unint64_t v148;
  char v149[40];
  _QWORD *v150;
  __int128 v151;
  __int128 v152;
  _QWORD *v153;

  v138 = type metadata accessor for UUID(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (char *)&v128 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for URL(0);
  v140 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v139 = (char *)&v128 - v5;
  v7 = __chkstk_darwin(v6);
  v142 = (char *)&v128 - v8;
  v9 = type metadata accessor for String.LocalizationValue.StringInterpolation(0, v7);
  __chkstk_darwin(v9);
  v11 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for Locale(0);
  v12 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v146 = (UIImage *)((char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v128 - v15;
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v128 - v22;
  v24 = type metadata accessor for Achievement(0);
  __chkstk_darwin(v24);
  v26 = (id *)((char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v148 = a1;
  sub_10059A6B0(a1, (uint64_t)v26);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v24);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007D66C0);
      static Locale.current.getter(v28);
      v135 = *(id **)(v18 + 16);
      v29 = v17;
      ((void (*)(char *, char *, uint64_t))v135)(v20, v23, v17);
      v30 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
      v134 = (void (*)(char *, char *, uint64_t))ObjCClassFromMetadata;
      v133 = (id)objc_opt_self(NSBundle);
      v32 = objc_msgSend(v133, "bundleForClass:", ObjCClassFromMetadata);
      v132 = *(void (**)(UIImage *, char *, uint64_t))(v12 + 16);
      v33 = v146;
      v34 = v147;
      v132(v146, v16, v147);
      *(_QWORD *)&v144 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v32, v33, "Title for Books Goal achieved notification", 42, 2);
      v145 = v35;
      v36 = *(void (**)(char *, uint64_t))(v12 + 8);
      v36(v16, v34);
      v37 = *(void (**)(char *, uint64_t))(v18 + 8);
      v37(v23, v29);
      v38 = String.LocalizationValue.init(stringLiteral:)(0x100000000000003BLL, 0x80000001007D6710);
      static Locale.current.getter(v38);
      ((void (*)(char *, char *, uint64_t))v135)(v20, v23, v29);
      v39 = objc_msgSend(v133, "bundleForClass:", v134);
      v132(v33, v16, v34);
      String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v39, v33, "Message for Books Goal achieved notification", 44, 2);
      v41 = v40;
      v36(v16, v34);
      v37(v23, v29);
      v42 = 1;
      v43 = sub_1005B3E30();
      v44 = v43;
      goto LABEL_7;
    }
    v133 = *v26;
    v135 = (id *)((char *)v26 + *(int *)(sub_10004CFD4(&qword_1009DD7F8) + 48));
    v58 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007D65A0);
    static Locale.current.getter(v58);
    v134 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    v129 = v17;
    v134(v20, v23, v17);
    v59 = type metadata accessor for BundleFinder();
    v60 = swift_getObjCClassFromMetadata(v59);
    v130 = v60;
    v61 = (void *)objc_opt_self(NSBundle);
    v62 = objc_msgSend(v61, "bundleForClass:", v60);
    v63 = v146;
    v64 = v147;
    (*(void (**)(UIImage *, char *, uint64_t))(v12 + 16))(v146, v16, v147);
    *(_QWORD *)&v144 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v62, v63, "Title for Streak Record achieved notification", 45, 2);
    v145 = v65;
    v132 = *(void (**)(UIImage *, char *, uint64_t))(v12 + 8);
    ((void (*)(char *, uint64_t))v132)(v16, v64);
    v131 = *(void (**)(char *, uint64_t))(v18 + 8);
    v66 = v129;
    v131(v23, v129);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 1);
    v67._object = (void *)0x80000001007D65F0;
    v67._countAndFlagsBits = 0x1000000000000018;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v67);
    v68 = (uint64_t)v133;
    *(_QWORD *)&v152 = v133;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v152, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v69._countAndFlagsBits = 0x7473207379616420;
    v69._object = (void *)0xEF2E746867696172;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v69);
    v70 = String.LocalizationValue.init(stringInterpolation:)(v11);
    static Locale.current.getter(v70);
    v134(v20, v23, v66);
    v71 = objc_msgSend(v61, "bundleForClass:", v130);
    static Locale.current.getter(v71);
    String.init(localized:defaultValue:table:bundle:locale:comment:)("Streak_Record_Achieved_Notification_Message", 43, 2, v20, 0, 0, v71, v63, "Message for reading streak record achieved notification. Note: # of days is expected to be >= 2; can never be singular",
      118,
      2);
    v41 = v72;
    ((void (*)(char *, uint64_t))v132)(v16, v64);
    v131(v23, v66);
    v44 = sub_1005B3F04(v68);
    v73 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    v43 = (UIImage *)(*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v135, v73);
  }
  else
  {
    v45 = String.LocalizationValue.init(stringLiteral:)(0x100000000000001FLL, 0x80000001007D6780);
    static Locale.current.getter(v45);
    v135 = *(id **)(v18 + 16);
    v46 = v17;
    ((void (*)(char *, char *, uint64_t))v135)(v20, v23, v17);
    v47 = type metadata accessor for BundleFinder();
    v48 = swift_getObjCClassFromMetadata(v47);
    v134 = (void (*)(char *, char *, uint64_t))v48;
    v133 = (id)objc_opt_self(NSBundle);
    v49 = objc_msgSend(v133, "bundleForClass:", v48);
    v132 = *(void (**)(UIImage *, char *, uint64_t))(v12 + 16);
    v50 = v146;
    v51 = v147;
    v132(v146, v16, v147);
    *(_QWORD *)&v144 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v49, v50, "Title for Daily Goal achieved notification", 42, 2);
    v145 = v52;
    v53 = *(void (**)(char *, uint64_t))(v12 + 8);
    v53(v16, v51);
    v54 = *(void (**)(char *, uint64_t))(v18 + 8);
    v54(v23, v46);
    v55 = String.LocalizationValue.init(stringLiteral:)(0x100000000000003ALL, 0x80000001007D67D0);
    static Locale.current.getter(v55);
    ((void (*)(char *, char *, uint64_t))v135)(v20, v23, v46);
    v56 = objc_msgSend(v133, "bundleForClass:", v134);
    v132(v50, v16, v51);
    String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v56, v50, "Message for Daily Goal achieved notification", 44, 2);
    v41 = v57;
    v53(v16, v51);
    v54(v23, v46);
    v43 = sub_1005B3E30();
    v44 = v43;
  }
  v42 = 0;
LABEL_7:
  v74 = Achievement.key.getter(v43);
  v75 = Achievement.Key.jsKind.getter(v74);
  v153 = &type metadata for Int;
  *(_QWORD *)&v152 = v75;
  sub_10004CFC4(&v152, &v151);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  v150 = _swiftEmptyDictionarySingleton;
  sub_1002C3A2C(&v151, 0x6D65766569686361, 0xEF646E694B746E65, isUniquelyReferenced_nonNull_native);
  v77 = (uint64_t)v150;
  swift_bridgeObjectRelease(0x8000000000000000);
  v78 = objc_msgSend(objc_allocWithZone((Class)UNMutableNotificationContent), "init");
  v79 = v145;
  v80 = String._bridgeToObjectiveC()();
  objc_msgSend(v78, "setTitle:", v80, swift_bridgeObjectRelease(v79).n128_f64[0]);

  v81 = String._bridgeToObjectiveC()();
  objc_msgSend(v78, "setBody:", v81, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v82 = String._bridgeToObjectiveC()();
  objc_msgSend(v78, "setCategoryIdentifier:", v82);

  v83 = sub_1004EC9E0(v77);
  swift_bridgeObjectRelease(v77);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v78, "setUserInfo:", isa, swift_bridgeObjectRelease(v83).n128_f64[0]);

  objc_msgSend(v78, "setInterruptionLevel:", v42);
  if (v44)
  {
    v85 = v44;
    v86 = UIImagePNGRepresentation(v85);
    if (v86)
    {
      v87 = v86;
      v146 = v85;
      v88 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v86);
      v90 = v89;

      v91 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      v92 = objc_msgSend(v91, "temporaryDirectory");
      v93 = v139;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v92);

      *(_QWORD *)&v152 = 0;
      *((_QWORD *)&v152 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease(*((_QWORD *)&v152 + 1));
      strcpy((char *)&v152, "achievement-");
      BYTE13(v152) = 0;
      HIWORD(v152) = -5120;
      v94 = v136;
      v95 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
      v96 = UUID.uuidString.getter(v95);
      v98 = v97;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v94, v138);
      v99._countAndFlagsBits = v96;
      v99._object = v98;
      String.append(_:)(v99);
      swift_bridgeObjectRelease(v98);
      v100._countAndFlagsBits = 1735290926;
      v100._object = (void *)0xE400000000000000;
      String.append(_:)(v100);
      v101 = *((_QWORD *)&v152 + 1);
      v102 = v142;
      URL.appendingPathComponent(_:)(v152, *((_QWORD *)&v152 + 1));
      v103 = swift_bridgeObjectRelease(v101);
      v104 = v140;
      v105 = v93;
      v106 = v143;
      v145 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v140 + 8);
      v107 = v145(v105, v143, v103);
      URL.path.getter(v107);
      v109 = v108;
      v110 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v109);
      v147 = v88;
      v148 = v90;
      v111 = Data._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v91, "createFileAtPath:contents:attributes:", v110, v111, 0);

      v112 = sub_10004CFD4(&qword_1009EE450);
      inited = swift_initStackObject(v112, v149);
      v144 = xmmword_10070CCA0;
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey);
      *(_QWORD *)(inited + 40) = v114;
      *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", 1);
      v115 = sub_1001DB57C(inited);
      sub_100009E04(0, &qword_1009EE458, UNNotificationAttachment_ptr);
      v116 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
      v117 = (uint64_t)v141;
      v116(v141, v102, v106);
      sub_1004EECC8(v115);
      v119 = v118;
      swift_bridgeObjectRelease(v115);
      v120 = sub_1005AF908(0x656D686361747461, 0xEA0000000000746ELL, v117, v119);
      v121 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      v122 = swift_allocObject(v121, 40, 7);
      *(_OWORD *)(v122 + 16) = xmmword_1007118F0;
      *(_QWORD *)(v122 + 32) = v120;
      *(_QWORD *)&v152 = v122;
      specialized Array._endMutation()(v122);
      v123 = v152;
      v124 = v120;
      v125 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v78, "setAttachments:", v125, swift_bridgeObjectRelease(v123).n128_f64[0]);
      v126 = v146;

      sub_10005EE1C(v147, v148);
      ((void (*)(char *, uint64_t))v145)(v142, v143);
    }
    else
    {

    }
  }
  return v78;
}

uint64_t sub_1005B53C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 104 * a1 + 32;
  v6 = a3 + 104 * v4;
  if (v5 >= v6 || v5 + 104 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B54B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 72 * a1 + 32;
  v6 = a3 + 72 * v4;
  if (v5 >= v6 || v5 + 72 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005B55B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Achievement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = v0 + v4 + *(int *)(sub_10004CFD4(&qword_1009DD7F8) + 48);
    v7 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1005B5648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Achievement(0) - 8) + 80);
  sub_1005B019C(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_1005B5688()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Achievement(0) - 8) + 80);
  sub_1005AFDC4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t destroy for MenuIconItem(uint64_t a1)
{
  uint64_t result;

  sub_100209510(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  result = swift_unknownObjectWeakDestroy(a1 + 56);
  if (*(_QWORD *)(a1 + 72))
    return swift_release(*(_QWORD *)(a1 + 80));
  return result;
}

uint64_t initializeWithCopy for MenuIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = v4;
  sub_100209420(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakCopyInit(a1 + 56, a2 + 56);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    swift_retain(v11);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for MenuIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  sub_100209420(v7, v8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  sub_100209510(v10, v11);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakCopyAssign(a1 + 56, a2 + 56);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  if (!v12)
  {
    if (v13)
    {
      v16 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v13;
      *(_QWORD *)(a1 + 80) = v16;
      swift_retain(v16);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v13)
  {
    swift_release(*(_QWORD *)(a1 + 80));
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

uint64_t initializeWithTake for MenuIconItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeInit(a1 + 56, a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v5;
    *(_QWORD *)(a1 + 80) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithTake for MenuIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_100209510(v7, v8);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeAssign(a1 + 56, a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v10)
  {
    if (v9)
    {
      v13 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v9;
      *(_QWORD *)(a1 + 80) = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 80));
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v11;
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuIconItem(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 64) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)(a1 + 56) & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuIconItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      *(_QWORD *)(result + 64) = 1;
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuIconItem()
{
  return &type metadata for MenuIconItem;
}

unint64_t sub_1005B5AA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1002343A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005B5AC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100878E74, 1);
}

uint64_t sub_1005B5AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v40 = a1;
  v3 = sub_10004CFD4(&qword_1009D8460);
  v37 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D4B20);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10004CFD4(&qword_1009D4B28);
  __chkstk_darwin(v35);
  v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005B5D90(v2, (uint64_t)&v42);
  v10 = swift_allocObject(&unk_100913F78, 104, 7);
  sub_10023436C((uint64_t)&v42, v10 + 16);
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  v11 = sub_1001F2108();
  Button<>.init<A>(_:action:)(v41, sub_1004441D4, v10, &type metadata for String, v11);
  if (*(_QWORD *)v2)
  {
    v12 = *(_QWORD *)(v2 + 40);
    v13 = *(_QWORD *)(v2 + 48);
    v14 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    v16 = *(_BYTE *)(v2 + 32);
    v17 = *(id *)v2;
    v18 = sub_100209420(v14, v15);
    v19 = static Color.primary.getter(v18);
    v42 = v17;
    v43 = v12;
    v44 = v13;
    v45 = v14;
    v46 = v15;
    v47 = v16;
    v48 = v19;
    v49 = 0;
    v20 = sub_10024C474();
    v21 = sub_10024C4C0();
    View.buttonStyle<A>(_:)(&v42, v3, &type metadata for IconButtonStyle, v20, v21);

    sub_100209510(v14, v15);
    v22 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v5, v3, v22);
    v23 = *(_QWORD *)(v2 + 40);
    LOBYTE(v41[0]) = 0;
    State.init(wrappedValue:)(&v42, v41, &type metadata for Bool);
    v24 = (char)v42;
    v25 = v43;
    v27 = v38;
    v26 = v39;
    v28 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v36, v8, v39);
    v29 = v28 + *(int *)(v35 + 36);
    *(_QWORD *)v29 = v23;
    *(_BYTE *)(v29 + 8) = v24;
    *(_QWORD *)(v29 + 16) = v25;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v26);
    return sub_1005B5E0C(v28, v40);
  }
  else
  {
    v31 = *(_QWORD *)(v2 + 8);
    v32 = type metadata accessor for ChromeStyle(0);
    v33 = sub_100288CBC();
    result = EnvironmentObject.error()(0, v31, v32, v33, v34);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005B5D90(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MenuIconItem(a2, a1);
  return a2;
}

uint64_t sub_1005B5DC4()
{
  uint64_t v0;

  sub_100209510(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_unknownObjectWeakDestroy(v0 + 72);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1005B5E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D4B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *RootBarStandardItemsManager.__allocating_init(restrictionProvider:bag:cacheManager:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  objc_class *v3;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v7 = objc_allocWithZone(v3);
  v8 = a3[3];
  v9 = a3[4];
  v10 = sub_100063750((uint64_t)a3, v8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v13, v11);
  v15 = sub_1005B6674(a1, a2, (uint64_t)v13, v7, v8, v9);
  _s5Books15CurrentPageViewVwxx_0(a3);
  return v15;
}

uint64_t property wrapper backing initializer of RootBarStandardItemsManager.items(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009E8800);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_1005B5F64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100730E00);
  v5 = swift_getKeyPath(&unk_100730E28);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005B5FE0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100730E00);
  v5 = swift_getKeyPath(&unk_100730E28);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t RootBarStandardItemsManager.items.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100730E00);
  v2 = swift_getKeyPath(&unk_100730E28);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005B60C4(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v3, 33, 0);
  v1 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_1005B6128(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_10004CFD4(&qword_1009D35C8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v17, 33, 0);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t RootBarStandardItemsManager.$items.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v3, 33, 0);
  v1 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t RootBarStandardItemsManager.itemsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[24];

  v1 = sub_10004CFD4(&qword_1009D35C8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v10, 33, 0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.getter(v5);
  swift_endAccess(v10);
  v6 = sub_100030B34((unint64_t *)&unk_1009EE4F0, &qword_1009D35C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v7 = Publisher.eraseToAnyPublisher()(v1, v6);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

char *RootBarStandardItemsManager.init(restrictionProvider:bag:cacheManager:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v7 = a3[3];
  v8 = a3[4];
  v9 = sub_100063750((uint64_t)a3, v7);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v13 + 16))(v12, v10);
  v14 = sub_1005B6674(a1, a2, (uint64_t)v12, v3, v7, v8);
  _s5Books15CurrentPageViewVwxx_0(a3);
  return v14;
}

void RootBarStandardItemsManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.RootBarStandardItemsManager", 33, "init()", 6, 0);
  __break(1u);
}

id RootBarStandardItemsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootBarStandardItemsManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005B6584()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[24];

  v1 = sub_10004CFD4(&qword_1009D35C8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(*v0 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v10, 33, 0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  Published.projectedValue.getter(v5);
  swift_endAccess(v10);
  v6 = sub_100030B34((unint64_t *)&unk_1009EE4F0, &qword_1009D35C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v7 = Publisher.eraseToAnyPublisher()(v1, v6);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

char *sub_1005B6674(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  _QWORD *v43;
  _QWORD v44[5];

  v37 = a3;
  v40 = a1;
  v41 = a2;
  v39 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v39);
  v38 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[3] = a5;
  v44[4] = a6;
  v21 = sub_1000257F8(v44);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v21, v37, a5);
  a4[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_loadedFromBag] = 0;
  v22 = &a4[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items];
  v43 = _swiftEmptyArrayStorage;
  v23 = a4;
  v24 = sub_10004CFD4(&qword_1009E8800);
  Published.init(initialValue:)(&v43, v24);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v20, v17);
  *(_QWORD *)&v23[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag] = 0;
  v25 = OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheAccessQueue;
  sub_100059BB4();
  static DispatchQoS.userInteractive.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v10);
  v43 = _swiftEmptyArrayStorage;
  v26 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v28 = sub_100030B34((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v27, v28, v39, v26);
  v30 = v40;
  *(_QWORD *)&v23[v25] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x80000001007B2950, v16, v29, v13, 0);
  *(_QWORD *)&v23[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_restrictionProvider] = v30;
  sub_10002E418((uint64_t)v44, (uint64_t)&v23[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager]);
  swift_unknownObjectRetain(v30);

  v31 = (objc_class *)type metadata accessor for RootBarStandardItemsManager(0);
  v42.receiver = v23;
  v42.super_class = v31;
  v32 = (char *)objc_msgSendSuper2(&v42, "init");
  v33 = v32;
  if (v41)
  {
    v34 = *(void **)&v32[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag];
    *(_QWORD *)&v32[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag] = v41;
    swift_unknownObjectRelease(v30);

  }
  else
  {
    swift_unknownObjectRelease(v30);
  }
  _s5Books15CurrentPageViewVwxx_0(v44);
  return v33;
}

uint64_t sub_1005B69AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B69E0()
{
  return type metadata accessor for RootBarStandardItemsManager(0);
}

void sub_1005B69E8()
{
  qword_1009EE570 = 0x4038000000000000;
}

void sub_1005B69F8()
{
  qword_1009EE578 = 0x4030000000000000;
}

void sub_1005B6A08()
{
  qword_1009EE580 = 0x4020000000000000;
}

void sub_1005B6A18()
{
  qword_1009EE588 = 0x4030000000000000;
}

void sub_1005B6A28()
{
  qword_1009EE590 = 0x4030000000000000;
}

void sub_1005B6A38()
{
  qword_1009EE598 = 0x4030000000000000;
}

id sub_1005B6A48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id result;
  id v25;
  uint64_t v26;

  v1 = type metadata accessor for Location(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_currentLocationProvider + 8);
  ObjectType = swift_getObjectType();
  v14 = dispatch thunk of LocationProviding.currentLocation.getter(ObjectType, v12);
  Location.pageLocation.getter(v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16 = PageLocation.documentOrdinal.getter(v15);
  v17 = PageLocation.pageOffset.getter(v16);
  v18 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (v17 == v18)
  {
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v8, v5);
  }
  else
  {
    v21 = PageLocation.pageOffset.getter(v19);
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = ((uint64_t (*)(char *, uint64_t))v20)(v8, v5);
    if (v21 > 0)
    {
      v23 = PageLocation.pageOffset.getter(v22);
      if ((v23 & 0x8000000000000000) == 0)
        goto LABEL_7;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
      __break(1u);
    }
  }
  v23 = 0;
LABEL_7:
  result = objc_msgSend(objc_allocWithZone((Class)BKPageLocation), "initWithOrdinal:andOffset:", v16, v23);
  if (result)
  {
    v25 = result;
    v20(v11, v5);
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005B6C64(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  _QWORD *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - v7;
  type metadata accessor for TOCLegacyView(0);
  sub_10066848C((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.light(_:), v2);
  v9 = static ColorScheme.== infix(_:_:)(v8, v5);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  v11 = &kIMThemeIdentifierNightPageTheme;
  if ((v9 & 1) != 0)
    v11 = &kIMThemeIdentifierWhitePageTheme;
  v12 = objc_msgSend((id)objc_opt_self(IMTheme), "themeWithIdentifier:", *v11);
  v13 = objc_msgSend(a1, "theme");
  if (!v13)
    goto LABEL_6;
  v14 = v13;
  sub_100009E04(0, &qword_1009EE738, IMTheme_ptr);
  v15 = v12;
  v16 = v14;
  LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

  if ((v14 & 1) != 0)
  {
    v17 = 0;
  }
  else
  {
LABEL_6:
    objc_msgSend(a1, "setTheme:", v12);
    v17 = 1;
  }

  return v17;
}

id sub_1005B6E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class *v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  char v21;
  void (*v22)(char *, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t *v25;
  unsigned int v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  void *v32;
  id result;
  void *v34;
  uint64_t v35;
  void *v36;

  v2 = v1;
  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = *(char **)(v1 + 24);
  if ((unint64_t)(v11 - 1) >= 2)
  {
    v35 = a1;
    v15 = (Class *)BKTOCWebViewController2_ptr;
    v16 = *(_QWORD *)(v2 + 16);
    if ((v16 & 1) == 0)
      v15 = (Class *)BKTOCContentViewController_ptr;
    v17 = objc_allocWithZone(*v15);
    v18 = v11;
    v12 = objc_msgSend(v17, "init");
    objc_msgSend(v12, "setVertical:", v16 & 1);
    if ((v16 & 1) != 0)
      objc_msgSend(v12, "setShouldIgnoreViewLayoutUpdates:", 1);
    v19 = v18;
    objc_msgSend(v12, "setEventEngagement:", v19);
    objc_msgSend(v12, "setUsesPopoverStyle:", *(unsigned __int8 *)(v2 + 33), swift_unknownObjectRelease(v19).n128_f64[0]);

    sub_1005B93DC(v16, v11);
    v14 = 0;
  }
  else
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)BKTOCContentViewController), "init");
    objc_msgSend(v12, "setUsesPopoverStyle:", *(unsigned __int8 *)(v2 + 33));
    v13 = 2;
    if (v11 != (char *)2)
      v13 = 0;
    if (v11 == (char *)1)
      v14 = 1;
    else
      v14 = v13;
  }
  objc_msgSend(v12, "setTocContentType:", v14, v35);
  type metadata accessor for TOCLegacyView(0);
  v20 = v12;
  sub_100667A20((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.leftToRight(_:), v4);
  v21 = static LayoutDirection.== infix(_:_:)(v10, v7);
  v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v22(v10, v4);
  objc_msgSend(v20, "setLayoutDirection:", (v21 & 1) == 0);

  v23 = *(unsigned __int8 *)(v2 + 33);
  if ((unint64_t)(*(_QWORD *)(v2 + 24) - 1) >= 2)
  {
    v26 = objc_msgSend(v20, "isVertical");
    if (v23)
    {
      if (v26)
      {
        if (qword_1009CE918 != -1)
          swift_once(&qword_1009CE918, sub_1005B6A28);
        v24 = qword_1009EE590;
        if (qword_1009CE920 != -1)
          swift_once(&qword_1009CE920, sub_1005B6A38);
        v25 = &qword_1009EE598;
      }
      else
      {
        if (qword_1009CE900 != -1)
          swift_once(&qword_1009CE900, sub_1005B69F8);
        v24 = qword_1009EE578;
        if (qword_1009CE908 != -1)
          swift_once(&qword_1009CE908, sub_1005B6A08);
        v25 = &qword_1009EE580;
      }
      goto LABEL_38;
    }
    if (v26)
    {
      if (qword_1009CE8F8 != -1)
        swift_once(&qword_1009CE8F8, sub_1005B69E8);
      v27 = 0.0;
      goto LABEL_32;
    }
    if (qword_1009CE8F8 == -1)
    {
LABEL_27:
      v27 = *(double *)&qword_1009EE570;
LABEL_32:
      objc_msgSend(v20, "setContentInsets:", 0.0, v27, 0.0);
      goto LABEL_39;
    }
LABEL_42:
    swift_once(&qword_1009CE8F8, sub_1005B69E8);
    goto LABEL_27;
  }
  if (!*(_BYTE *)(v2 + 33))
  {
    if (qword_1009CE8F8 == -1)
      goto LABEL_27;
    goto LABEL_42;
  }
  if (qword_1009CE900 != -1)
    swift_once(&qword_1009CE900, sub_1005B69F8);
  v24 = qword_1009EE578;
  if (qword_1009CE910 != -1)
    swift_once(&qword_1009CE910, sub_1005B6A18);
  v25 = &qword_1009EE588;
LABEL_38:
  UIEdgeInsets.init(top:bottom:)(objc_msgSend(v20, "setContentInsets:", 0.0, *(double *)&v24, 0.0, *(double *)v25), 0.0, 6.0);
  objc_msgSend(v20, "setCenteringInsets:", v28, v29, v30);
LABEL_39:
  v31 = sub_10004CFD4(&qword_1009EE728);
  UIViewControllerRepresentableContext.coordinator.getter(&v36, v31);
  v32 = v36;
  objc_msgSend(v20, "setDirectoryDelegate:", v36);

  objc_msgSend(v20, "setBook:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_bookProviderService)+ OBJC_IVAR___REBookProviderService_bookInfo));
  sub_1005B6C64(v20);
  result = objc_msgSend(v20, "view");
  if (result)
  {
    v34 = result;
    objc_msgSend(result, "setAccessibilityIgnoresInvertColors:", 1);

    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005B733C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char **v20;
  _QWORD v21[2];
  char v22;
  char *v23;

  v2 = v1;
  v4 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EE728);
  UIViewControllerRepresentableContext.coordinator.getter(&v23, v7);
  v8 = v23;
  sub_100397954(v1, (uint64_t)v6);
  v9 = (uint64_t)&v8[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent];
  swift_beginAccess(&v8[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent], v21, 33, 0);
  sub_1005B9398((uint64_t)v6, v9);
  swift_endAccess(v21);

  UIViewControllerRepresentableContext.coordinator.getter(v21, v7);
  v10 = (_BYTE *)v21[0];
  v11 = OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isIgnoringContentChanges;
  *(_BYTE *)(v21[0] + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isIgnoringContentChanges) = 1;
  sub_1005B74E4(a1, v2);
  v10[v11] = 0;

  if (objc_msgSend(a1, "tocContentType"))
  {
    v12 = objc_opt_self(BKTOCContentViewController);
    v13 = swift_dynamicCastObjCClass(a1, v12);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = v2 + *(int *)(v4 + 60);
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      LOBYTE(v15) = *(_BYTE *)(v15 + 16);
      v21[0] = v16;
      v21[1] = v17;
      v22 = v15;
      v18 = a1;
      v19 = sub_10004CFD4(&qword_1009EE730);
      Binding.wrappedValue.getter(&v23, v19);
      v20 = &selRef_beginEditingIfNeeded;
      if (!(_BYTE)v23)
        v20 = &selRef_endEditingIfNeeded;
      objc_msgSend(v14, *v20);

    }
  }
}

id sub_1005B74E4(void *a1, uint64_t a2)
{
  id result;
  id v5;
  uint64_t v6;
  uint64_t v7;

  if ((sub_1005B6C64(a1) & 1) != 0
    || objc_msgSend(a1, "tocContentType") == (id)1
    || (result = objc_msgSend(a1, "tocContentType"), result == (id)2))
  {
    v5 = objc_msgSend(a1, "tocContentType");
    v6 = *(_QWORD *)(a2 + 24);
    if (v6 == 1)
      v7 = 1;
    else
      v7 = 2 * (v6 == 2);
    if (v5 != (id)v7)
    {
      objc_msgSend(a1, "setTocContentType:");
      objc_msgSend(a1, "destroyFetchedResultsController");
    }
    return objc_msgSend(a1, "updateView");
  }
  return result;
}

uint64_t sub_1005B75A8(uint64_t a1, char a2, uint64_t a3, char a4, id a5)
{
  uint64_t v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  char v18;
  char v19;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;

  if (*(_BYTE *)(v5 + 32) != 1)
    goto LABEL_11;
  v10 = objc_msgSend(a5, "scrollView");
  v11 = objc_opt_self(UITableView);
  v12 = swift_dynamicCastObjCClass(v10, v11);
  if (!v12)
  {

    goto LABEL_11;
  }
  v13 = (void *)v12;
  v31 = v10;
  v14 = *(_QWORD *)(v5 + 88);
  v15 = *(unsigned __int8 *)(v5 + 96);
  v16 = *(unsigned __int8 *)(v5 + 97);
  sub_100450B78(v14, v15, v16);
  v17 = COERCE_DOUBLE(sub_100668A08(v14, v15 | (v16 << 8)));
  v19 = v18;
  sub_100450BF4(v14, v15, v16);
  if ((v19 & 1) != 0
    || (a2 & 1) != 0
    || *(double *)&a1 <= 0.0
    || (~a1 & 0x7FF0000000000000) == 0
    || (a4 & 1) == 0 && (a3 & 0x7FF0000000000000) != 0x7FF0000000000000)
  {

LABEL_11:
    *(double *)&a1 = 0.0;
    return a1;
  }
  v21 = v31;
  if ((sub_10042A25C() & 1) != 0)
  {
    objc_msgSend(v13, "frame");
    objc_msgSend(v13, "frame");
    objc_msgSend(v13, "setFrame:");
    objc_msgSend(v13, "contentOffset");
    v23 = v22;
    objc_msgSend(v13, "contentOffset");
    objc_msgSend(v13, "setContentOffset:", 0.0);
    objc_msgSend(v13, "contentInset");
    objc_msgSend(v13, "contentSize");
    objc_msgSend(v13, "contentInset");
    do
    {
      objc_msgSend(v13, "frame", v31);
      objc_msgSend(v13, "setFrame:");
      objc_msgSend(v13, "layoutIfNeeded");
      objc_msgSend(v13, "contentInset");
      v25 = v24;
      objc_msgSend(v13, "contentSize");
      v27 = v25 + v26;
      objc_msgSend(v13, "contentInset");
      if (v27 + v28 <= v17)
        v29 = v27 + v28;
      else
        v29 = v17;
      objc_msgSend(v13, "frame");
    }
    while (v30 < v29);
    objc_msgSend(v13, "contentOffset");
    objc_msgSend(v13, "setContentOffset:", v23);
    objc_msgSend(v13, "frame");
    objc_msgSend(v13, "setFrame:");

  }
  else
  {

  }
  return a1;
}

double sub_1005B7898(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  double result;

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v12 = v11;
  v13 = a3;
  v14 = a4;
  v15 = a1;
  sub_1005B93F0(v14, v10, v12, a6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

id sub_1005B7AF4(void *a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *))
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;

  v8 = a1;
  v9 = a3;
  v10 = a4;
  a5(a4);
  v12 = v11;

  if (v12)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = 0;
  }
  return v13;
}

void sub_1005B7F38(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(a2), "shouldIgnoreViewLayoutUpdates"))
    {
      objc_msgSend(a2, "reload");
      objc_msgSend(a2, "updateView");
    }
    swift_unknownObjectRelease(a2);
  }
}

double sub_1005B8004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  *(_BYTE *)(a1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isUpdateViewScheduled) = 0;
  v1 = a1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent, v7, 0, 0);
  v2 = *(_QWORD *)(v1 + 8);
  swift_retain(v2);
  sub_1004E9690();
  v3 = type metadata accessor for PublishedBool(0);
  v4 = sub_100008DB0((unint64_t *)&unk_1009F0220, type metadata accessor for PublishedBool, (uint64_t)&unk_100730AFC);
  v5 = ObservableObject<>.objectWillChange.getter(v3, v4);
  ObservableObjectPublisher.send()();
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

id sub_1005B821C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TOCLegacyView.Coordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005B8260()
{
  return type metadata accessor for TOCLegacyView.Coordinator(0);
}

uint64_t type metadata accessor for TOCLegacyView.Coordinator(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EE640, (uint64_t)&nominal type descriptor for TOCLegacyView.Coordinator);
}

uint64_t sub_1005B827C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TOCLegacyView(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100730F10;
    v4[2] = &unk_100730F10;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TOCLegacyView(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009EE6C0, (uint64_t)&nominal type descriptor for TOCLegacyView);
}

char *sub_1005B8308(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v37;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (char *)(a2 + 2);
    v10 = a2[3];
    v11 = v4;
    swift_retain(v8);
    if ((unint64_t)(v10 - 1) >= 2)
    {
      v7[16] = *v9;
      *((_QWORD *)v7 + 3) = v10;
      v12 = v10;
    }
    else
    {
      *((_OWORD *)v7 + 1) = *(_OWORD *)v9;
    }
    *((_WORD *)v7 + 16) = *((_WORD *)a2 + 16);
    *((_QWORD *)v7 + 5) = a2[5];
    v13 = *((_OWORD *)a2 + 3);
    v37 = *((_OWORD *)a2 + 4);
    *((_OWORD *)v7 + 3) = v13;
    *((_OWORD *)v7 + 4) = v37;
    v14 = a2[10];
    v15 = (uint64_t)a2[11];
    *((_QWORD *)v7 + 10) = v14;
    v16 = *((_BYTE *)a2 + 97);
    v17 = *((unsigned __int8 *)a2 + 96);
    swift_retain(v13);
    swift_retain(v37);
    swift_retain(v14);
    sub_100450B78(v15, v17, v16);
    *((_QWORD *)v7 + 11) = v15;
    v7[96] = v17;
    v7[97] = v16;
    v18 = a3[13];
    v19 = &v7[v18];
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      v24 = *v20;
      *(_QWORD *)v19 = *v20;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
    v25 = a3[14];
    v26 = &v7[v25];
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = 1;
    }
    else
    {
      v31 = *v27;
      *(_QWORD *)v26 = *v27;
      swift_retain(v31);
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v30);
    v32 = a3[15];
    v33 = &v7[v32];
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = *v34;
    v4 = (char *)v34[1];
    *(_QWORD *)v33 = *v34;
    *((_QWORD *)v33 + 1) = v4;
    v33[16] = *((_BYTE *)v34 + 16);
    swift_retain(v35);
  }
  swift_retain(v4);
  return v7;
}

double sub_1005B8534(uint64_t a1, int *a2)
{
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(char **)(a1 + 24);
  if ((unint64_t)(v4 - 1) >= 2)

  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  sub_100450BF4(*(_QWORD *)(a1 + 88), *(unsigned __int8 *)(a1 + 96), *(_BYTE *)(a1 + 97));
  v5 = (_QWORD *)(a1 + a2[13]);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)(a1 + a2[14]);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(a1 + a2[15]);
  swift_release(*v11);
  *(_QWORD *)&result = swift_release(v11[1]).n128_u64[0];
  return result;
}

uint64_t sub_1005B865C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  id v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = (_BYTE *)(a2 + 16);
  v9 = *(char **)(a2 + 24);
  v10 = v6;
  swift_retain(v7);
  if ((unint64_t)(v9 - 1) >= 2)
  {
    *(_BYTE *)(a1 + 16) = *v8;
    *(_QWORD *)(a1 + 24) = v9;
    v11 = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  }
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v12 = *(_OWORD *)(a2 + 48);
  v37 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v37;
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v13;
  v15 = *(_BYTE *)(a2 + 97);
  v16 = *(unsigned __int8 *)(a2 + 96);
  swift_retain(v12);
  swift_retain(v37);
  swift_retain(v13);
  sub_100450B78(v14, v16, v15);
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 97) = v15;
  v17 = a3[13];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = 1;
  }
  else
  {
    v23 = *v19;
    *v18 = *v19;
    swift_retain(v23);
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v22);
  v24 = a3[14];
  v25 = (uint64_t *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
    v29 = 1;
  }
  else
  {
    v30 = *v26;
    *v25 = *v26;
    swift_retain(v30);
    v29 = 0;
  }
  swift_storeEnumTagMultiPayload(v25, v27, v29);
  v31 = a3[15];
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = v33[1];
  *(_QWORD *)v32 = *v33;
  *(_QWORD *)(v32 + 8) = v35;
  *(_BYTE *)(v32 + 16) = *((_BYTE *)v33 + 16);
  swift_retain(v34);
  swift_retain(v35);
  return a1;
}

uint64_t sub_1005B8860(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(char **)(a1 + 24);
  v12 = *(_QWORD *)(a2 + 24) - 1;
  if ((unint64_t)(v11 - 1) < 2)
  {
    if (v12 >= 2)
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v13 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      v14 = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v12 < 2)
  {
    sub_100010960(a1 + 16, &qword_1009EE660);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v15 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v16 = v15;

LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v19;
  swift_retain(v19);
  swift_release(v20);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v21;
  swift_retain(v21);
  swift_release(v22);
  v23 = *(_QWORD *)(a2 + 88);
  v24 = *(_BYTE *)(a2 + 97);
  v25 = *(_BYTE *)(a2 + 96);
  sub_100450B78(v23, v25, v24);
  v26 = *(_QWORD *)(a1 + 88);
  v27 = *(_BYTE *)(a1 + 97);
  *(_QWORD *)(a1 + 88) = v23;
  v28 = *(unsigned __int8 *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v25;
  *(_BYTE *)(a1 + 97) = v24;
  sub_100450BF4(v26, v28, v27);
  if (a1 != a2)
  {
    v29 = a3[13];
    v30 = (uint64_t *)(a1 + v29);
    v31 = (uint64_t *)(a2 + v29);
    sub_100010960(a1 + v29, (uint64_t *)&unk_1009EE650);
    v32 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      v34 = 1;
    }
    else
    {
      v35 = *v31;
      *v30 = *v31;
      swift_retain(v35);
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v32, v34);
    v36 = a3[14];
    v37 = (uint64_t *)(a1 + v36);
    v38 = (uint64_t *)(a2 + v36);
    sub_100010960(a1 + v36, (uint64_t *)&unk_1009D8200);
    v39 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      v40 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
      v41 = 1;
    }
    else
    {
      v42 = *v38;
      *v37 = *v38;
      swift_retain(v42);
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v41);
  }
  v43 = a3[15];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *(_QWORD *)(a1 + v43);
  v47 = *v45;
  *(_QWORD *)(a1 + v43) = *v45;
  swift_retain(v47);
  swift_release(v46);
  v48 = v45[1];
  v49 = *(_QWORD *)(v44 + 8);
  *(_QWORD *)(v44 + 8) = v48;
  swift_retain(v48);
  swift_release(v49);
  *(_BYTE *)(v44 + 16) = *((_BYTE *)v45 + 16);
  return a1;
}

uint64_t sub_1005B8B24(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v8 = a3[13];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[14];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[15];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  return a1;
}

uint64_t sub_1005B8CA0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v7);
  v8 = (_OWORD *)(a2 + 16);
  v9 = *(char **)(a1 + 24);
  if ((unint64_t)(v9 - 1) < 2)
    goto LABEL_4;
  v10 = *(_QWORD *)(a2 + 24);
  if ((unint64_t)(v10 - 1) < 2)
  {
    sub_100010960(a1 + 16, &qword_1009EE660);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v8;
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)v8;
  *(_QWORD *)(a1 + 24) = v10;

LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v11 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v11);
  v12 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v12);
  v13 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v13);
  v14 = *(_BYTE *)(a2 + 96);
  v15 = *(_BYTE *)(a2 + 97);
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_BYTE *)(a1 + 97);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v18 = *(unsigned __int8 *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 97) = v15;
  sub_100450BF4(v16, v18, v17);
  if (a1 != a2)
  {
    v19 = a3[13];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_100010960(a1 + v19, (uint64_t *)&unk_1009EE650);
    v22 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload(v20, v22, 1);
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    v24 = a3[14];
    v25 = (void *)(a1 + v24);
    v26 = (const void *)(a2 + v24);
    sub_100010960(a1 + v24, (uint64_t *)&unk_1009D8200);
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload(v25, v27, 1);
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
  }
  v29 = a3[15];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a1 + v29);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)v31;
  swift_release(v32);
  v33 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  swift_release(v33);
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  return a1;
}

uint64_t sub_1005B8F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B8F0C);
}

uint64_t sub_1005B8F0C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D8240);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 52);
    }
    else
    {
      v10 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1005B8FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B8FC0);
}

char *sub_1005B8FC0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D8240);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 52);
    }
    else
    {
      v10 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 56);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1005B9064(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[2] = &unk_100730F40;
  v6[3] = &unk_100730F10;
  v6[4] = &unk_100730F10;
  v6[5] = (char *)&value witness table for () + 64;
  v6[6] = (char *)&value witness table for () + 64;
  v6[7] = (char *)&value witness table for () + 64;
  v6[8] = &unk_100730F58;
  sub_1002333D0(319, qword_1009D82C0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v3 <= 0x3F)
  {
    v6[9] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002333D0(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v5 <= 0x3F)
    {
      v6[10] = *(_QWORD *)(v4 - 8) + 64;
      v6[11] = &unk_100730F70;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

uint64_t sub_1005B9168@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  uint64_t result;
  objc_super v10;

  __chkstk_darwin(a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100397954(v2, (uint64_t)v5);
  v6 = (objc_class *)type metadata accessor for TOCLegacyView.Coordinator(0);
  v7 = objc_allocWithZone(v6);
  v7[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isIgnoringContentChanges] = 0;
  v7[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isUpdateViewScheduled] = 0;
  sub_100397954((uint64_t)v5, (uint64_t)&v7[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent]);
  v10.receiver = v7;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, "init");
  result = sub_100397998((uint64_t)v5);
  *a2 = v8;
  return result;
}

uint64_t sub_1005B9230(uint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  return sub_1005B75A8(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_1005B9260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008DB0((unint64_t *)&unk_1009EE740, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730FD8);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1005B92C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008DB0((unint64_t *)&unk_1009EE740, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730FD8);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1005B9330(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0((unint64_t *)&unk_1009EE740, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730FD8);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1005B936C()
{
  return sub_100008DB0(&qword_1009EE720, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730F88);
}

uint64_t sub_1005B9398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TOCLegacyView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1005B93DC(uint64_t a1, char *a2)
{
  if ((unint64_t)(a2 - 1) >= 2)

}

id sub_1005B93F0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE v20[24];
  _QWORD v21[5];
  char v22;

  v9 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = v4 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent;
  swift_beginAccess(v12, v20, 0, 0);
  sub_100397954(v12, (uint64_t)v11);
  result = objc_msgSend(a1, "cfiString");
  if (result)
  {
    v14 = result;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v17 = v16;

    v18 = objc_msgSend(a1, "ordinal", swift_bridgeObjectRetain(a3).n128_f64[0]);
    v21[0] = v15;
    v21[1] = v17;
    v21[2] = a2;
    v21[3] = a3;
    v21[4] = v18;
    v22 = a4 & 1;
    (*((void (**)(_QWORD *))v11 + 7))(v21);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v17);
    return (id)sub_100397998((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005B951C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void **v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD v54[3];
  char v55[24];

  v3 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void **)(v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent);
  swift_beginAccess(v13, v55, 0, 0);
  v14 = (char *)*v13;
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor];
  v16 = objc_opt_self(BKPageLocation);
  v17 = swift_dynamicCastObjCClass(a1, v16);
  v18 = v14;
  v19 = v18;
  if (v17)
  {
    v52 = v18;
    v53 = v10;
    v20 = v9;
    v21 = a1;
    v22 = objc_msgSend((id)v17, "pageOffset");
    v23 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
    if (v23 < 0 || v22 != (id)v23)
    {
      v17 = (uint64_t)objc_msgSend((id)v17, "pageOffset");

      v9 = v20;
      v19 = v52;
      v10 = v53;
      if (v17 < 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {

      v17 = 0;
      v9 = v20;
      v19 = v52;
      v10 = v53;
    }
  }
  v24 = objc_msgSend(a1, "ordinal");
  v25 = sub_10004CFD4(&qword_1009D2F18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
  v26 = sub_10004CFD4(&qword_1009D2AD0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
  Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v24, v17, v8, 0, 0, 0, 0, v5, 0.0, 0);
  v27 = *(_QWORD *)(v15 + 120);
  ObjectType = swift_getObjectType();
  v29 = dispatch thunk of PageNumberProviding.pageName(for:)(v12, ObjectType, *(_QWORD *)(v27 + 8));
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  v32 = HIBYTE(v31) & 0xF;
  v33 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v31 & 0x2000000000000000) != 0)
    v34 = HIBYTE(v31) & 0xF;
  else
    v34 = v29 & 0xFFFFFFFFFFFFLL;
  if (!v34)
    goto LABEL_48;
  if ((v31 & 0x1000000000000000) != 0)
  {
    sub_100327700(v29, v31, 10);
LABEL_48:
    swift_bridgeObjectRelease(v31);
    return;
  }
  if ((v31 & 0x2000000000000000) == 0)
  {
    if ((v29 & 0x1000000000000000) != 0)
      v35 = (unsigned __int8 *)((v31 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v35 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v29, v31);
    sub_1003276D8(v35, v33, 10);
    goto LABEL_48;
  }
  v54[0] = v29;
  v54[1] = v31 & 0xFFFFFFFFFFFFFFLL;
  if (v29 != 43)
  {
    if (v29 != 45)
    {
      if (v32)
      {
        if ((v29 - 48) <= 9u && v32 != 1 && (BYTE1(v29) - 48) <= 9u)
        {
          v41 = 10 * (v29 - 48) + (BYTE1(v29) - 48);
          v42 = v32 - 2;
          if (v42)
          {
            v43 = (unsigned __int8 *)v54 + 2;
            do
            {
              v44 = *v43 - 48;
              if (v44 > 9)
                break;
              v45 = 10 * v41;
              if ((unsigned __int128)(v41 * (__int128)10) >> 64 != (10 * v41) >> 63)
                break;
              v41 = v45 + v44;
              if (__OFADD__(v45, v44))
                break;
              ++v43;
              --v42;
            }
            while (v42);
          }
        }
      }
      goto LABEL_48;
    }
    if (v32)
    {
      if (v32 != 1 && (BYTE1(v29) - 48) <= 9u && v32 != 2 && (BYTE2(v29) - 48) <= 9u)
      {
        v46 = -10 * (BYTE1(v29) - 48) - (BYTE2(v29) - 48);
        v47 = v32 - 3;
        if (v47)
        {
          v48 = (unsigned __int8 *)v54 + 3;
          do
          {
            v49 = *v48 - 48;
            if (v49 > 9)
              break;
            v50 = 10 * v46;
            if ((unsigned __int128)(v46 * (__int128)10) >> 64 != (10 * v46) >> 63)
              break;
            v46 = v50 - v49;
            if (__OFSUB__(v50, v49))
              break;
            ++v48;
            --v47;
          }
          while (v47);
        }
      }
      goto LABEL_48;
    }
    goto LABEL_59;
  }
  if (v32)
  {
    if (v32 != 1 && (BYTE1(v29) - 48) <= 9u && v32 != 2 && (BYTE2(v29) - 48) <= 9u)
    {
      v36 = 10 * (BYTE1(v29) - 48) + (BYTE2(v29) - 48);
      v37 = v32 - 3;
      if (v37)
      {
        v38 = (unsigned __int8 *)v54 + 3;
        do
        {
          v39 = *v38 - 48;
          if (v39 > 9)
            break;
          v40 = 10 * v36;
          if ((unsigned __int128)(v36 * (__int128)10) >> 64 != (10 * v36) >> 63)
            break;
          v36 = v40 + v39;
          if (__OFADD__(v40, v39))
            break;
          ++v38;
          --v37;
        }
        while (v37);
      }
    }
    goto LABEL_48;
  }
LABEL_60:
  __break(1u);
}

void sub_1005B9A3C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (**v5)(uint64_t, uint64_t);
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v3);
  v5 = (void (**)(uint64_t, uint64_t))&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v6 = v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent;
    swift_beginAccess(v6, v14, 0, 0);
    sub_100397954(v6, (uint64_t)v5);
    v7 = a1;
    v8 = objc_msgSend(v7, "href");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v12 = v11;

      v5[5](v10, v12);
      swift_bridgeObjectRelease(v12);
      sub_100397998((uint64_t)v5);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1005B9B30(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  id v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v3 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v3);
  v5 = (id *)&v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a1)
    return 0;
  v6 = v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent;
  swift_beginAccess(v6, v16, 0, 0);
  sub_100397954(v6, (uint64_t)v5);
  v7 = *v5;
  v8 = a1;
  result = objc_msgSend(v8, "href");
  if (result)
  {
    v10 = result;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v13 = v12;

    sub_100397998((uint64_t)v5);
    v14 = sub_1004397FC(v11, v13);

    swift_bridgeObjectRelease(v13);
    return (id)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B9C58(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v20[24];

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a1)
    return 0;
  v10 = (void **)(v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent);
  swift_beginAccess(v10, v20, 0, 0);
  v11 = *v10;
  v12 = *(_QWORD *)((char *)*v10 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor);
  v13 = a1;
  v14 = v11;
  sub_10043CDC0(v13, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009D23A0);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v16 = *(_QWORD *)(v12 + 120);
    ObjectType = swift_getObjectType();
    v15 = dispatch thunk of PageNumberProviding.pageName(for:)(v9, ObjectType, *(_QWORD *)(v16 + 8));
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  return v15;
}

id sub_1005B9DF4(id a1)
{
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id *v8;
  id v9;
  _BYTE v11[24];

  v2 = a1;
  if (a1)
  {
    v3 = objc_msgSend(a1, "chapterTitle");
    if (v3)
    {
      v4 = v3;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

    }
    else
    {
      v6 = 0;
    }
    v7 = v2;
    swift_bridgeObjectRelease(v6);
    v8 = (id *)(v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent);
    swift_beginAccess(v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent, v11, 0, 0);
    v9 = *v8;
    v2 = (id)sub_10043998C(v7);

  }
  return v2;
}

uint64_t sub_1005B9EC8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  __n128 v18;
  _BYTE v21[24];

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a1)
    return 0;
  v10 = (void **)(v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent);
  swift_beginAccess(v10, v21, 0, 0);
  v11 = *v10;
  v12 = *(_QWORD *)((char *)*v10 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor);
  v13 = a1;
  v14 = v11;
  sub_10043CDC0(v13, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009D23A0);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v16 = *(_QWORD *)(v12 + 120);
    ObjectType = swift_getObjectType();
    v15 = dispatch thunk of PageNumberProviding.pageNumber(for:)(v9, ObjectType, *(_QWORD *)(v16 + 8), v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  return v15;
}

void sub_1005BA054(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  _QWORD v37[3];
  _BYTE v38[24];

  v3 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v3);
  v5 = (id *)((char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v6 = v1 + OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent;
    swift_beginAccess(v6, v38, 0, 0);
    sub_100397954(v6, (uint64_t)v5);
    v7 = *v5;
    v8 = a1;
    v9 = objc_msgSend(v8, "href");
    if (!v9)
    {
LABEL_60:
      __break(1u);
      return;
    }
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    sub_100397998((uint64_t)v5);
    v14 = sub_1004397FC(v11, v13);
    v16 = v15;

    swift_bridgeObjectRelease(v13);
    if (v16)
    {
      v17 = HIBYTE(v16) & 0xF;
      v18 = v14 & 0xFFFFFFFFFFFFLL;
      if ((v16 & 0x2000000000000000) != 0)
        v19 = HIBYTE(v16) & 0xF;
      else
        v19 = v14 & 0xFFFFFFFFFFFFLL;
      if (!v19)
        goto LABEL_38;
      if ((v16 & 0x1000000000000000) != 0)
      {
        sub_100327700(v14, v16, 10);
LABEL_38:

        swift_bridgeObjectRelease(v16);
        return;
      }
      if ((v16 & 0x2000000000000000) == 0)
      {
        if ((v14 & 0x1000000000000000) != 0)
          v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v20 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v14, v16);
        sub_1003276D8(v20, v18, 10);
        goto LABEL_38;
      }
      v37[0] = v14;
      v37[1] = v16 & 0xFFFFFFFFFFFFFFLL;
      if (v14 == 43)
      {
        if (v17)
        {
          if (v17 != 1
            && (BYTE1(v14) - 48) <= 9u
            && v17 != 2
            && (BYTE2(v14) - 48) <= 9u)
          {
            v21 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
            v22 = v17 - 3;
            if (v22)
            {
              v23 = (unsigned __int8 *)v37 + 3;
              do
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  break;
                v25 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                  break;
                v21 = v25 + v24;
                if (__OFADD__(v25, v24))
                  break;
                ++v23;
                --v22;
              }
              while (v22);
            }
          }
          goto LABEL_38;
        }
      }
      else
      {
        if (v14 != 45)
        {
          if (v17)
          {
            if ((v14 - 48) <= 9u && v17 != 1 && (BYTE1(v14) - 48) <= 9u)
            {
              v26 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
              v27 = v17 - 2;
              if (v27)
              {
                v28 = (unsigned __int8 *)v37 + 2;
                do
                {
                  v29 = *v28 - 48;
                  if (v29 > 9)
                    break;
                  v30 = 10 * v26;
                  if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63)
                    break;
                  v26 = v30 + v29;
                  if (__OFADD__(v30, v29))
                    break;
                  ++v28;
                  --v27;
                }
                while (v27);
              }
            }
          }
          goto LABEL_38;
        }
        if (v17)
        {
          if (v17 != 1
            && (BYTE1(v14) - 48) <= 9u
            && v17 != 2
            && (BYTE2(v14) - 48) <= 9u)
          {
            v31 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
            v32 = v17 - 3;
            if (v32)
            {
              v33 = (unsigned __int8 *)v37 + 3;
              do
              {
                v34 = *v33 - 48;
                if (v34 > 9)
                  break;
                v35 = 10 * v31;
                if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
                  break;
                v31 = v35 - v34;
                if (__OFSUB__(v35, v34))
                  break;
                ++v33;
                --v32;
              }
              while (v32);
            }
          }
          goto LABEL_38;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_60;
    }

  }
}

void sub_1005BA418(uint64_t a1, void *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  void *v12;
  uint64_t v13;

  v12 = BKAppDelegate.enableMetricsInspectorOnDebugMode();
  v13 = 0;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1004D7C0C;
  v11 = &unk_1009140A0;
  v4 = _Block_copy(&v8);
  v5 = swift_allocObject(&unk_1009140D8, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v12 = sub_1005BA7B0;
  v13 = v5;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1004D7C0C;
  v11 = &unk_1009140F0;
  v6 = _Block_copy(&v8);
  v7 = v13;
  swift_unknownObjectRetain(a1);
  objc_msgSend(a2, "animateAlongsideTransition:completion:", v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  _Block_release(v4);
}

void sub_1005BA51C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v0[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_parent];
  swift_beginAccess(v10, v24, 0, 0);
  if (v10[32] == 1
    && (v1[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isIgnoringContentChanges] & 1) == 0
    && (v1[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isUpdateViewScheduled] & 1) == 0)
  {
    v1[OBJC_IVAR____TtCV5Books13TOCLegacyView11Coordinator_isUpdateViewScheduled] = 1;
    v11 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v12 = (void *)static OS_dispatch_queue.main.getter(v11);
    v13 = swift_allocObject(&unk_100914060, 24, 7);
    *(_QWORD *)(v13 + 16) = v1;
    aBlock[4] = sub_1005BA784;
    v23 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100914078;
    v14 = _Block_copy(aBlock);
    v15 = v23;
    v16 = v1;
    swift_release(v15);
    static DispatchQoS.unspecified.getter(v17);
    aBlock[0] = _swiftEmptyArrayStorage;
    v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v20 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1005BA760()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1005BA784()
{
  uint64_t v0;

  return sub_1005B8004(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005BA78C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005BA7B0(uint64_t a1)
{
  uint64_t v1;

  sub_1005B7F38(a1, *(void **)(v1 + 16));
}

void destroy for TOCLegacyView.ContentType(uint64_t a1)
{
  void *v1;
  int v2;

  v1 = *(void **)(a1 + 8);
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

uint64_t _s5Books13TOCLegacyViewV11ContentTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  LODWORD(v4) = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((int)v4 - 1 < 0)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v5 = v3;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t assignWithCopy for TOCLegacyView.ContentType(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  void *v9;
  id v10;
  void *v12;
  id v13;

  v4 = *(void **)(a1 + 8);
  LODWORD(v5) = -1;
  if ((unint64_t)v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *(_QWORD *)(a1 + 8);
  v7 = v6 - 1;
  if (*(_QWORD *)(a2 + 8) < 0xFFFFFFFFuLL)
    v5 = *(_QWORD *)(a2 + 8);
  v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v12 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v12;
      v13 = v12;

      return a1;
    }

    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v9 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v10 = v9;
  return a1;
}

uint64_t assignWithTake for TOCLegacyView.ContentType(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(void **)(a1 + 8);
  LODWORD(v5) = -1;
  if ((unint64_t)v4 < 0xFFFFFFFF)
    v5 = *(_QWORD *)(a1 + 8);
  if ((int)v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 8);
    if ((int)v7 - 1 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = v6;

      return a1;
    }

  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TOCLegacyView.ContentType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t sub_1005BA9A8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1005BA9CC(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TOCLegacyView.ContentType()
{
  return &type metadata for TOCLegacyView.ContentType;
}

void sub_1005BAB78(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  Class isa;

  v5 = a1;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v5, "setValue:forKey:", isa, *a4);

}

id sub_1005BAC30(void *a1)
{
  id v1;
  NSString v2;
  id v3;

  v1 = a1;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  return v3;
}

void sub_1005BACB0(void *a1)
{
  id v1;
  Class isa;
  id v3;

  v1 = a1;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

}

uint64_t sub_1005BAD2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t AppLifecycleObserver.onWillEnterForeground.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onWillEnterForeground);
}

uint64_t AppLifecycleObserver.onWillEnterForeground.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onWillEnterForeground);
}

uint64_t (*AppLifecycleObserver.onWillEnterForeground.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onWillEnterForeground, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t AppLifecycleObserver.onDidEnterBackground.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onDidEnterBackground);
}

uint64_t AppLifecycleObserver.onDidEnterBackground.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onDidEnterBackground);
}

uint64_t (*AppLifecycleObserver.onDidEnterBackground.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onDidEnterBackground, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t AppLifecycleObserver.onWillResignActive.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onWillResignActive);
}

uint64_t AppLifecycleObserver.onWillResignActive.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onWillResignActive);
}

uint64_t (*AppLifecycleObserver.onWillResignActive.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onWillResignActive, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t AppLifecycleObserver.onDidBecomeActive.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeActive);
}

uint64_t AppLifecycleObserver.onDidBecomeActive.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeActive);
}

uint64_t (*AppLifecycleObserver.onDidBecomeActive.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeActive, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t AppLifecycleObserver.onDidBecomeFrontmost.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeFrontmost);
}

uint64_t AppLifecycleObserver.onDidBecomeFrontmost.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeFrontmost);
}

uint64_t (*AppLifecycleObserver.onDidBecomeFrontmost.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeFrontmost, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_1005BAF78(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD aBlock[5];
  uint64_t v12;
  _BYTE v13[24];

  v5 = (uint64_t *)(a1 + *a3);
  swift_beginAccess(v5, v13, 0, 0);
  v6 = *v5;
  if (!*v5)
    return 0;
  v7 = v5[1];
  aBlock[4] = v6;
  v12 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = a4;
  v8 = _Block_copy(aBlock);
  v9 = v12;
  swift_retain(v7);
  swift_release(v9);
  return v8;
}

uint64_t AppLifecycleObserver.onWillResignFrontmost.getter()
{
  return sub_1005BB02C(&OBJC_IVAR___BKAppLifecycleObserver_onWillResignFrontmost);
}

uint64_t sub_1005BB02C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v5, 0, 0);
  v3 = *v2;
  sub_10002ACF0(*v2, v2[1]);
  return v3;
}

uint64_t AppLifecycleObserver.onWillResignFrontmost.setter(uint64_t a1, uint64_t a2)
{
  return sub_1005BB08C(a1, a2, &OBJC_IVAR___BKAppLifecycleObserver_onWillResignFrontmost);
}

uint64_t sub_1005BB08C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess(v6, v10, 1, 0);
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  return sub_10002AD00(v7, v8);
}

uint64_t (*AppLifecycleObserver.onWillResignFrontmost.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAppLifecycleObserver_onWillResignFrontmost, a1, 33, 0);
  return j_j__swift_endAccess;
}

id AppLifecycleObserver.__allocating_init(coordinator:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;
  uint64_t ObjCClassMetadata;
  uint64_t ObjCClassFromMetadata;
  id v8;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v5)
  {
    ObjCClassMetadata = swift_getObjCClassMetadata(v5);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjCClassMetadata);
  }
  else
  {
    ObjCClassFromMetadata = 0;
  }
  v8 = objc_msgSend(v3, "initWithCoordinator:uiApplication:appKitBundle:", a1, v4, ObjCClassFromMetadata);

  swift_unknownObjectRelease(a1);
  return v8;
}

char *sub_1005BB1D8(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_10001E9F8(a1, a2);
}

id AppLifecycleObserver.__deallocating_deinit()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AppLifecycleObserver();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1005BB3C4(uint64_t a1)
{
  return sub_10002A9D8(a1, "%@: UIApplication did enter background", &OBJC_IVAR___BKAppLifecycleObserver_onDidEnterBackground, 0xD000000000000014, 0x80000001007D6CC0);
}

uint64_t sub_1005BB3FC(uint64_t a1)
{
  return sub_10002A9D8(a1, "%@: UIApplication will resign active", &OBJC_IVAR___BKAppLifecycleObserver_onWillResignActive, 0xD000000000000012, 0x80000001007D6CE0);
}

void AppLifecycleObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AppLifecycleObserver", 26, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1005BB48C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005BB4B0()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BB4D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BB540()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1005BB548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005BB554()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1005BB55C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 80);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005BB568()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EE8A0);
  sub_100048F64(v0, (uint64_t)qword_1009EE8A0);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007D7380);
}

uint64_t sub_1005BB5D8()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v0, qword_100A1ED30);
  sub_100048F64(v0, (uint64_t)qword_100A1ED30);
  return TypeDisplayRepresentation.init(stringLiteral:)(0x746E6F466B6F6F42, 0xED00006570795420);
}

unint64_t sub_1005BB640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t result;
  uint64_t v27;
  char *v28;
  char *v29;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009EECF8);
  v19 = sub_10004CFD4(&qword_1009D0920);
  v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
  *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
  v21 = String.LocalizationValue.init(stringLiteral:)(0x746C7561666544, 0xE700000000000000);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v13, 0, 0, v10, v7, "Default book font", 17, 2);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v23 = v28;
  v22(v28, 1, 1, v14);
  v24 = type metadata accessor for DisplayRepresentation.Image(0);
  v25 = v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v29, 1, 1, v24);
  DisplayRepresentation.init(title:subtitle:image:)(v17, v23, v25);
  result = sub_1001DB69C(v20);
  qword_100A1ED48 = result;
  return result;
}

unint64_t sub_1005BB8FC()
{
  unint64_t result;

  result = qword_1009EE8B8;
  if (!qword_1009EE8B8)
  {
    result = swift_getWitnessTable(&unk_1007310AC, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8B8);
  }
  return result;
}

uint64_t sub_1005BB944(uint64_t a1)
{
  return String.hash(into:)(a1, 0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1005BB960@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1008F1058;
  return sub_1005BC168(v2, a1, a2);
}

void sub_1005BB96C(_QWORD *a1@<X8>)
{
  *a1 = 0x746C7561666564;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1005BB98C()
{
  unint64_t result;

  result = qword_1009EE8C0;
  if (!qword_1009EE8C0)
  {
    result = swift_getWitnessTable(&unk_10073118C, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8C0);
  }
  return result;
}

unint64_t sub_1005BB9D4()
{
  unint64_t result;

  result = qword_1009EE8C8;
  if (!qword_1009EE8C8)
  {
    result = swift_getWitnessTable(&unk_1007311C4, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8C8);
  }
  return result;
}

unint64_t sub_1005BBA1C()
{
  unint64_t result;

  result = qword_1009EE8D0;
  if (!qword_1009EE8D0)
  {
    result = swift_getWitnessTable(&unk_100731114, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8D0);
  }
  return result;
}

unint64_t sub_1005BBA64()
{
  unint64_t result;

  result = qword_1009EE8D8;
  if (!qword_1009EE8D8)
  {
    result = swift_getWitnessTable(&unk_1007311F4, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8D8);
  }
  return result;
}

unint64_t sub_1005BBAAC()
{
  unint64_t result;

  result = qword_1009EE8E0;
  if (!qword_1009EE8E0)
  {
    result = swift_getWitnessTable(&unk_10073121C, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8E0);
  }
  return result;
}

unint64_t sub_1005BBAF4()
{
  unint64_t result;

  result = qword_1009EE8E8;
  if (!qword_1009EE8E8)
  {
    result = swift_getWitnessTable(&unk_100731244, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8E8);
  }
  return result;
}

unint64_t sub_1005BBB3C()
{
  unint64_t result;

  result = qword_1009EE8F0;
  if (!qword_1009EE8F0)
  {
    result = swift_getWitnessTable(&unk_10073129C, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8F0);
  }
  return result;
}

uint64_t sub_1005BBB80@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE938, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1ED30, (uint64_t)sub_1005BB5D8, a1);
}

uint64_t sub_1005BBBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1003D90B8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

uint64_t sub_1005BBBB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D90B8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005BBBF4()
{
  unint64_t result;

  result = qword_1009EE8F8;
  if (!qword_1009EE8F8)
  {
    result = swift_getWitnessTable(&unk_1007312DC, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE8F8);
  }
  return result;
}

unint64_t sub_1005BBC3C()
{
  unint64_t result;

  result = qword_1009EE900;
  if (!qword_1009EE900)
  {
    result = swift_getWitnessTable(&unk_100731304, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE900);
  }
  return result;
}

unint64_t sub_1005BBC84()
{
  unint64_t result;

  result = qword_1009EE908;
  if (!qword_1009EE908)
  {
    result = swift_getWitnessTable(&unk_1007310D4, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009EE908);
  }
  return result;
}

uint64_t sub_1005BBCC8(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CE940, &qword_100A1ED48, (uint64_t)sub_1005BB640);
}

uint64_t sub_1005BBCE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005BBB3C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1005BBD1C()
{
  return sub_100030B34(&qword_1009EE910, &qword_1009EE918, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1005BBD48(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFCB8;
}

uint64_t sub_1005BBD58()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v0, qword_100A1ED50);
  sub_100048F64(v0, (uint64_t)qword_100A1ED50);
  return TypeDisplayRepresentation.init(stringLiteral:)(0x6E6F46206B6F6F42, 0xEE00657A69532074);
}

unint64_t sub_1005BBDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t result;
  uint64_t v27;
  char *v28;
  char *v29;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009EECF0);
  v19 = sub_10004CFD4(&qword_1009D0910);
  v20 = swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
  *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
  v21 = String.LocalizationValue.init(stringLiteral:)(0x746C7561666544, 0xE700000000000000);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v13, 0, 0, v10, v7, "Default book font size", 22, 2);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v23 = v28;
  v22(v28, 1, 1, v14);
  v24 = type metadata accessor for DisplayRepresentation.Image(0);
  v25 = v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v29, 1, 1, v24);
  DisplayRepresentation.init(title:subtitle:image:)(v17, v23, v25);
  result = sub_1001DB6B8(v20);
  qword_100A1ED68 = result;
  return result;
}

unint64_t sub_1005BC07C()
{
  unint64_t result;

  result = qword_1009EE920;
  if (!qword_1009EE920)
  {
    result = swift_getWitnessTable(&unk_10073133C, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE920);
  }
  return result;
}

Swift::Int sub_1005BC0C0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0x746C7561666564, 0xE700000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_1005BC110(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0x746C7561666564, 0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1005BC15C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1008F1090;
  return sub_1005BC168(v2, a1, a2);
}

uint64_t sub_1005BC168@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, BOOL *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  *a3 = v6 != 0;
  return result;
}

unint64_t sub_1005BC1B8()
{
  unint64_t result;

  result = qword_1009EE928;
  if (!qword_1009EE928)
  {
    result = swift_getWitnessTable(&unk_10073141C, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE928);
  }
  return result;
}

unint64_t sub_1005BC200()
{
  unint64_t result;

  result = qword_1009EE930;
  if (!qword_1009EE930)
  {
    result = swift_getWitnessTable(&unk_100731454, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE930);
  }
  return result;
}

unint64_t sub_1005BC248()
{
  unint64_t result;

  result = qword_1009EE938;
  if (!qword_1009EE938)
  {
    result = swift_getWitnessTable(&unk_1007313A4, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE938);
  }
  return result;
}

unint64_t sub_1005BC290()
{
  unint64_t result;

  result = qword_1009EE940;
  if (!qword_1009EE940)
  {
    result = swift_getWitnessTable(&unk_100731484, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE940);
  }
  return result;
}

unint64_t sub_1005BC2D8()
{
  unint64_t result;

  result = qword_1009EE948;
  if (!qword_1009EE948)
  {
    result = swift_getWitnessTable(&unk_1007314AC, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE948);
  }
  return result;
}

unint64_t sub_1005BC320()
{
  unint64_t result;

  result = qword_1009EE950;
  if (!qword_1009EE950)
  {
    result = swift_getWitnessTable(&unk_1007314D4, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE950);
  }
  return result;
}

unint64_t sub_1005BC368()
{
  unint64_t result;

  result = qword_1009EE958;
  if (!qword_1009EE958)
  {
    result = swift_getWitnessTable(&unk_10073152C, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE958);
  }
  return result;
}

uint64_t sub_1005BC3AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE948, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1ED50, (uint64_t)sub_1005BBD58, a1);
}

uint64_t sub_1005BC3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005BC3E4, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_1005BC3E4()
{
  unint64_t result;

  result = qword_1009EE960;
  if (!qword_1009EE960)
  {
    result = swift_getWitnessTable(&unk_1007313DC, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE960);
  }
  return result;
}

uint64_t sub_1005BC428(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005BC3E4();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005BC464()
{
  unint64_t result;

  result = qword_1009EE968;
  if (!qword_1009EE968)
  {
    result = swift_getWitnessTable(&unk_10073156C, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE968);
  }
  return result;
}

unint64_t sub_1005BC4AC()
{
  unint64_t result;

  result = qword_1009EE970;
  if (!qword_1009EE970)
  {
    result = swift_getWitnessTable(&unk_100731594, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE970);
  }
  return result;
}

unint64_t sub_1005BC4F4()
{
  unint64_t result;

  result = qword_1009EE978;
  if (!qword_1009EE978)
  {
    result = swift_getWitnessTable(&unk_100731364, &type metadata for StubBookFontSize);
    atomic_store(result, (unint64_t *)&qword_1009EE978);
  }
  return result;
}

uint64_t sub_1005BC538(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CE950, &qword_100A1ED68, (uint64_t)sub_1005BBDC0);
}

uint64_t sub_1005BC554(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005BC368();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1005BC58C()
{
  return sub_100030B34(&qword_1009EE980, &qword_1009EE988, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1005BC5B8(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFD30;
}

unint64_t sub_1005BC5CC()
{
  unint64_t result;

  result = qword_1009EE990;
  if (!qword_1009EE990)
  {
    result = swift_getWitnessTable(&unk_10073160C, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1009EE990);
  }
  return result;
}

unint64_t sub_1005BC614()
{
  unint64_t result;

  result = qword_1009EE998;
  if (!qword_1009EE998)
  {
    result = swift_getWitnessTable(&unk_100731FAC, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EE998);
  }
  return result;
}

uint64_t sub_1005BC658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _OWORD v7[2];
  uint64_t v8;

  sub_10004CFD4(&qword_1009D2100);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v7, 0, sizeof(v7));
  v8 = 0;
  v5 = static AppDependencyManager.shared.getter(v0, v1, v2, v3, v4);
  result = AppDependency.__allocating_init(key:manager:)(v7, v5);
  qword_100A1ED70 = result;
  return result;
}

uint64_t sub_1005BC6BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v3;
  return swift_task_switch(sub_1005BC6D8, 0, 0);
}

uint64_t sub_1005BC6D8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 160);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 120));
  sub_1005C3194(v0 + 120, v0 + 16);
  v2 = *(_OWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v3;
  *(_OWORD *)v1 = v2;
  v4 = *(_OWORD *)(v0 + 64);
  v5 = *(_OWORD *)(v0 + 80);
  v6 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 64) = v5;
  *(_OWORD *)(v1 + 80) = v6;
  *(_OWORD *)(v1 + 48) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1005BC758()
{
  unint64_t result;

  result = qword_1009EE9A8;
  if (!qword_1009EE9A8)
  {
    result = swift_getWitnessTable(&unk_100731644, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1009EE9A8);
  }
  return result;
}

uint64_t sub_1005BC79C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1005C299C();
  *v4 = v2;
  v4[1] = sub_10032C744;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1005BC80C()
{
  unint64_t result;

  result = qword_1009EE9B8;
  if (!qword_1009EE9B8)
  {
    result = swift_getWitnessTable(&unk_10073169C, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1009EE9B8);
  }
  return result;
}

unint64_t sub_1005BC854()
{
  unint64_t result;

  result = qword_1009EE9C0[0];
  if (!qword_1009EE9C0[0])
  {
    result = swift_getWitnessTable(&unk_1007316FC, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, qword_1009EE9C0);
  }
  return result;
}

uint64_t sub_1005BC89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1005C299C();
  *v5 = v2;
  v5[1] = sub_100326424;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1005BC908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1005C299C();
  *v4 = v2;
  v4[1] = sub_10032C744;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1005BC974()
{
  unint64_t result;

  result = qword_1009EE9D8;
  if (!qword_1009EE9D8)
  {
    result = swift_getWitnessTable(&unk_100731724, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1009EE9D8);
  }
  return result;
}

unint64_t sub_1005BC9BC()
{
  unint64_t result;

  result = qword_1009EE9E0;
  if (!qword_1009EE9E0)
  {
    result = swift_getWitnessTable(&unk_1007320CC, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EE9E0);
  }
  return result;
}

unint64_t sub_1005BCA04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EE9E8;
  if (!qword_1009EE9E8)
  {
    v1 = sub_100030B74(qword_1009EE9F0);
    sub_1005BC9BC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009EE9E8);
  }
  return result;
}

uint64_t sub_1005BCA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1005BC758();
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1005BCAD8()
{
  unint64_t result;

  result = qword_1009EEA08[0];
  if (!qword_1009EEA08[0])
  {
    result = swift_getWitnessTable(&unk_1007317A0, &type metadata for BookSettingsEntity.GlobalSettingsProvider);
    atomic_store(result, qword_1009EEA08);
  }
  return result;
}

uint64_t sub_1005BCB1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1009EECE0 + dword_1009EECE0);
  v2 = (_QWORD *)swift_task_alloc(unk_1009EECE4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100223CCC;
  return v4();
}

uint64_t sub_1005BCB78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  return swift_task_switch(sub_1005BCB90, 0, 0);
}

uint64_t sub_1005BCB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 160);
  sub_10004CFD4(&qword_1009D2100);
  v2 = type metadata accessor for AppDependencyManager(0);
  memset(v17, 0, sizeof(v17));
  v18 = 0;
  v7 = static AppDependencyManager.shared.getter(v2, v3, v4, v5, v6);
  v8 = AppDependency.__allocating_init(key:manager:)(v17, v7);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 120));
  sub_1005C3194(v0 + 120, v0 + 16);
  v15 = *(_OWORD *)(v0 + 64);
  v16 = *(_OWORD *)(v0 + 48);
  v13 = *(_OWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 112);
  v11 = *(_OWORD *)(v0 + 16);
  v12 = *(_OWORD *)(v0 + 32);
  swift_release(v8);
  *(_OWORD *)v1 = v11;
  *(_OWORD *)(v1 + 16) = v12;
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 48) = v15;
  *(_OWORD *)(v1 + 64) = v14;
  *(_OWORD *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 96) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1005BCC84()
{
  unint64_t result;

  result = qword_1009EEA20;
  if (!qword_1009EEA20)
  {
    result = swift_getWitnessTable(&unk_10073182C, &type metadata for BookSettingsEntity.UpdateIntent_font);
    atomic_store(result, (unint64_t *)&qword_1009EEA20);
  }
  return result;
}

uint64_t sub_1005BCCC8()
{
  return sub_100030B34(&qword_1009EEA28, &qword_1009EEA30, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005BCCF4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v7, qword_100A1ED78);
  sub_100048F64(v7, (uint64_t)qword_100A1ED78);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x80000001007D6D60, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1005BCE04()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1ED90);
  sub_100048F64(v0, (uint64_t)qword_100A1ED90);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000026, 0x80000001007D72F0, v1);
}

uint64_t sub_1005BCE64(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EDA8, 0xD00000000000002FLL, 0x80000001007D72C0);
}

uint64_t sub_1005BCE88()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_1007323A8);
  qword_100A1EDC0 = result;
  return result;
}

uint64_t sub_1005BCEAC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1005BCEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEC68);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005BCFC4, 0, 0);
}

uint64_t sub_1005BCFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005BD074;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005BD66C, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005BD074()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005BD0C8, 0, 0);
}

uint64_t sub_1005BD0C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter(v0 + 28);
  v1 = (_QWORD *)v0[28];
  v2 = v0[29];
  v0[94] = v1;
  v0[95] = v2;
  v3 = v0[30];
  v4 = v0[31];
  v0[96] = v3;
  v0[97] = v4;
  v5 = v0[32];
  v6 = v0[33];
  v0[98] = v5;
  v7 = v0[34];
  v8 = v0[35];
  v0[99] = v7;
  v0[100] = v8;
  v9 = v0[36];
  v10 = v0[37];
  v0[101] = v9;
  v0[102] = v10;
  v12 = v0[38];
  v11 = v0[39];
  v0[103] = v12;
  v0[104] = v11;
  v13 = v0[40];
  v0[105] = v13;
  v0[41] = v1;
  v0[42] = v2;
  v0[43] = v3;
  v0[44] = v4;
  v0[45] = v5;
  v0[46] = v6;
  v0[47] = v7;
  v0[48] = v8;
  v0[49] = v9;
  v0[50] = v10;
  v0[51] = v12;
  v0[52] = v11;
  v0[53] = v13;
  IntentParameter.wrappedValue.getter(v1);
  if (qword_1009CE978 != -1)
    swift_once(&qword_1009CE978, sub_1005BCE88);
  v14 = qword_100A1EDC0;
  v0[106] = qword_100A1EDC0;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  v0[107] = v16;
  v17 = sub_100030B34(&qword_1009EEC70, &qword_1009EEC78, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005BD210;
  return AppEntity._setValue<A, B, C>(_:for:)(v17, v14, &type metadata for StubBookFont, v17);
}

uint64_t sub_1005BD210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005BD5D4;
  else
    v11 = sub_1005BD340;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005BD340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = *(_QWORD *)(v0 + 728);
  v36 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 720);
  v37 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 696);
  v30 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 664);
  v33 = v4;
  v34 = *(_QWORD *)(v0 + 704);
  v26 = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 432));
  v5 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 472);
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_OWORD *)(v0 + 448);
  v9 = *(_OWORD *)(v0 + 480);
  v10 = *(_OWORD *)(v0 + 496);
  v11 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 552) = v8;
  *(_QWORD *)(v0 + 568) = v5;
  *(_QWORD *)(v0 + 576) = v6;
  *(_OWORD *)(v0 + 584) = v9;
  *(_OWORD *)(v0 + 600) = v10;
  *(_OWORD *)(v0 + 616) = v11;
  *(_QWORD *)(v0 + 632) = v7;
  v12 = type metadata accessor for _GeneratedContentOptions(0);
  v32 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  v13 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = sub_1005BCC84();
  v15 = sub_1005BC9BC();
  v27 = v2;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005BD66C, 0, v3, v4, &type metadata for BookSettingsEntity.UpdateIntent_font, &type metadata for BookSettingsEntity, v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v35, v36, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v2, v35, &type metadata for BookSettingsEntity.UpdateIntent_font, &type metadata for BookSettingsEntity, v14, v15);
  static IntentResult.result<A>(value:dialog:)(v0 + 536, v34, &type metadata for BookSettingsEntity, v15);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v30);
  v29 = *(_QWORD *)(v0 + 544);
  v31 = *(void **)(v0 + 536);
  v16 = *(void **)(v0 + 552);
  v17 = *(_QWORD *)(v0 + 560);
  v18 = *(_QWORD *)(v0 + 568);
  v19 = *(_QWORD *)(v0 + 584);
  v20 = *(_QWORD *)(v0 + 592);
  v21 = *(_QWORD *)(v0 + 600);
  v22 = *(_QWORD *)(v0 + 608);
  v23 = *(_QWORD *)(v0 + 616);
  v24 = *(_QWORD *)(v0 + 624);
  swift_release(*(_QWORD *)(v0 + 632));
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);

  swift_unknownObjectRelease(v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v36, v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v27);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BD5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 672);
  v6 = *(_QWORD *)(v0 + 664);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 720) + 8))(v1, *(_QWORD *)(v0 + 712));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BD66C()
{
  return sub_1005BD688(&qword_1009CE978, &qword_100A1EDC0, (uint64_t)sub_1005BCE88);
}

uint64_t sub_1005BD688(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_10004CFD4(&qword_1009EEBE8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1)
    swift_once(a1, a3);
  v10 = *a2;
  v11 = swift_retain(v10);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v11);
  swift_release(v10);
  v12 = sub_1005BC9BC();
  v13 = sub_100030B34(&qword_1009EEBF0, &qword_1009EEBE8, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v9, &type metadata for BookSettingsEntity, v6, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

_QWORD *sub_1005BD79C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1005BD7BC(uint64_t a1)
{
  return IntentParameter.wrappedValue.setter(a1);
}

uint64_t sub_1005BD7DC(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE978, &qword_100A1EDC0, (uint64_t)sub_1005BCE88);
}

unint64_t sub_1005BD7FC()
{
  unint64_t result;

  result = qword_1009EEA38;
  if (!qword_1009EEA38)
  {
    result = swift_getWitnessTable(&unk_1007318BC, &type metadata for BookSettingsEntity.UpdateIntent_font);
    atomic_store(result, (unint64_t *)&qword_1009EEA38);
  }
  return result;
}

unint64_t sub_1005BD844()
{
  unint64_t result;

  result = qword_1009EEA40;
  if (!qword_1009EEA40)
  {
    result = swift_getWitnessTable(&unk_1007318E4, &type metadata for BookSettingsEntity.UpdateIntent_font);
    atomic_store(result, (unint64_t *)&qword_1009EEA40);
  }
  return result;
}

uint64_t sub_1005BD888(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100879474, 1) + 8);
}

uint64_t sub_1005BD8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005BCC84, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005BD8C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE968, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1ED90, (uint64_t)sub_1005BCE04, a1);
}

uint64_t sub_1005BD8EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE970, (uint64_t)qword_100A1EDA8, (uint64_t)sub_1005BCE64, a1);
}

uint64_t sub_1005BD908(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEC64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005BCEB4(a1, v5, v4);
}

uint64_t sub_1005BD96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C37CC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005BD990()
{
  return 0xD000000000000022;
}

unint64_t sub_1005BD9B0()
{
  unint64_t result;

  result = qword_1009EEA50;
  if (!qword_1009EEA50)
  {
    result = swift_getWitnessTable(&unk_100731970, &type metadata for BookSettingsEntity.UpdateIntent_fontSize);
    atomic_store(result, (unint64_t *)&qword_1009EEA50);
  }
  return result;
}

uint64_t sub_1005BD9F4()
{
  return sub_100030B34(&qword_1009EEA58, &qword_1009EEA60, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005BDA20()
{
  return swift_task_switch(sub_1005BDA34, 0, 0);
}

uint64_t sub_1005BDA34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BDA40()
{
  return swift_task_switch(sub_1005C47A4, 0, 0);
}

uint64_t sub_1005BDA54()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1EDC8);
  sub_100048F64(v0, (uint64_t)qword_100A1EDC8);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001007D7230, v1);
}

uint64_t sub_1005BDAB4(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EDE0, 0xD000000000000034, 0x80000001007D71F0);
}

uint64_t sub_1005BDAD8()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100732380);
  qword_100A1EDF8 = result;
  return result;
}

uint64_t sub_1005BDAFC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1005BDB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEC40);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005BDC14, 0, 0);
}

uint64_t sub_1005BDC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005BDCC4;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005BE224, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005BDCC4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005BDD18, 0, 0);
}

uint64_t sub_1005BDD18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter(v0 + 28);
  v1 = (_QWORD *)v0[28];
  v2 = v0[29];
  v0[94] = v1;
  v0[95] = v2;
  v3 = v0[30];
  v4 = v0[31];
  v0[96] = v3;
  v0[97] = v4;
  v5 = v0[32];
  v6 = v0[33];
  v0[98] = v5;
  v7 = v0[34];
  v8 = v0[35];
  v0[99] = v7;
  v0[100] = v8;
  v9 = v0[36];
  v10 = v0[37];
  v0[101] = v9;
  v0[102] = v10;
  v12 = v0[38];
  v11 = v0[39];
  v0[103] = v12;
  v0[104] = v11;
  v13 = v0[40];
  v0[105] = v13;
  v0[41] = v1;
  v0[42] = v2;
  v0[43] = v3;
  v0[44] = v4;
  v0[45] = v5;
  v0[46] = v6;
  v0[47] = v7;
  v0[48] = v8;
  v0[49] = v9;
  v0[50] = v10;
  v0[51] = v12;
  v0[52] = v11;
  v0[53] = v13;
  IntentParameter.wrappedValue.getter(v1);
  if (qword_1009CE990 != -1)
    swift_once(&qword_1009CE990, sub_1005BDAD8);
  v14 = qword_100A1EDF8;
  v0[106] = qword_100A1EDF8;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  v0[107] = v16;
  v17 = sub_100030B34(&qword_1009EEC48, &qword_1009EEC50, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005BDE60;
  return AppEntity._setValue<A, B, C>(_:for:)(v17, v14, &type metadata for StubBookFontSize, v17);
}

uint64_t sub_1005BDE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005C47B4;
  else
    v11 = sub_1005BDF90;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005BDF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = *(_QWORD *)(v0 + 728);
  v36 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 720);
  v37 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 696);
  v30 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 664);
  v33 = v4;
  v34 = *(_QWORD *)(v0 + 704);
  v26 = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 432));
  v5 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 472);
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_OWORD *)(v0 + 448);
  v9 = *(_OWORD *)(v0 + 480);
  v10 = *(_OWORD *)(v0 + 496);
  v11 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 552) = v8;
  *(_QWORD *)(v0 + 568) = v5;
  *(_QWORD *)(v0 + 576) = v6;
  *(_OWORD *)(v0 + 584) = v9;
  *(_OWORD *)(v0 + 600) = v10;
  *(_OWORD *)(v0 + 616) = v11;
  *(_QWORD *)(v0 + 632) = v7;
  v12 = type metadata accessor for _GeneratedContentOptions(0);
  v32 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  v13 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = sub_1005BD9B0();
  v15 = sub_1005BC9BC();
  v27 = v2;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005BE224, 0, v3, v4, &type metadata for BookSettingsEntity.UpdateIntent_fontSize, &type metadata for BookSettingsEntity, v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v35, v36, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v2, v35, &type metadata for BookSettingsEntity.UpdateIntent_fontSize, &type metadata for BookSettingsEntity, v14, v15);
  static IntentResult.result<A>(value:dialog:)(v0 + 536, v34, &type metadata for BookSettingsEntity, v15);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v30);
  v29 = *(_QWORD *)(v0 + 544);
  v31 = *(void **)(v0 + 536);
  v16 = *(void **)(v0 + 552);
  v17 = *(_QWORD *)(v0 + 560);
  v18 = *(_QWORD *)(v0 + 568);
  v19 = *(_QWORD *)(v0 + 584);
  v20 = *(_QWORD *)(v0 + 592);
  v21 = *(_QWORD *)(v0 + 600);
  v22 = *(_QWORD *)(v0 + 608);
  v23 = *(_QWORD *)(v0 + 616);
  v24 = *(_QWORD *)(v0 + 624);
  swift_release(*(_QWORD *)(v0 + 632));
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v21);
  swift_release(v20);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);

  swift_unknownObjectRelease(v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v36, v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v27);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BE224()
{
  return sub_1005BD688(&qword_1009CE990, &qword_100A1EDF8, (uint64_t)sub_1005BDAD8);
}

uint64_t sub_1005BE240(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE990, &qword_100A1EDF8, (uint64_t)sub_1005BDAD8);
}

unint64_t sub_1005BE260()
{
  unint64_t result;

  result = qword_1009EEA68;
  if (!qword_1009EEA68)
  {
    result = swift_getWitnessTable(&unk_100731A00, &type metadata for BookSettingsEntity.UpdateIntent_fontSize);
    atomic_store(result, (unint64_t *)&qword_1009EEA68);
  }
  return result;
}

unint64_t sub_1005BE2A8()
{
  unint64_t result;

  result = qword_1009EEA70;
  if (!qword_1009EEA70)
  {
    result = swift_getWitnessTable(&unk_100731A28, &type metadata for BookSettingsEntity.UpdateIntent_fontSize);
    atomic_store(result, (unint64_t *)&qword_1009EEA70);
  }
  return result;
}

uint64_t sub_1005BE2EC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100879430, 1) + 8);
}

uint64_t sub_1005BE310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005BD9B0, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005BE324@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE980, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EDC8, (uint64_t)sub_1005BDA54, a1);
}

uint64_t sub_1005BE348@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE988, (uint64_t)qword_100A1EDE0, (uint64_t)sub_1005BDAB4, a1);
}

uint64_t sub_1005BE364@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = sub_10004CFD4(&qword_1009EEBF8);
  v7 = sub_100048F64(v6, a2);
  return sub_10000B5E4(v7, a4, &qword_1009EEBF8);
}

uint64_t sub_1005BE3CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEC3C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005BDB04(a1, v5, v4);
}

uint64_t sub_1005BE430@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C3AD0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005BE454()
{
  return 0xD000000000000026;
}

unint64_t sub_1005BE474()
{
  unint64_t result;

  result = qword_1009EEA80;
  if (!qword_1009EEA80)
  {
    result = swift_getWitnessTable(&unk_100731AB4, &type metadata for BookSettingsEntity.UpdateIntent_theme);
    atomic_store(result, (unint64_t *)&qword_1009EEA80);
  }
  return result;
}

uint64_t sub_1005BE4B8()
{
  return sub_100030B34(&qword_1009EEA88, &qword_1009EEA90, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005BE4E4()
{
  return swift_task_switch(sub_1005C47B0, 0, 0);
}

uint64_t sub_1005BE4F8()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1EE00);
  sub_100048F64(v0, (uint64_t)qword_100A1EE00);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000027, 0x80000001007D7160, v1);
}

uint64_t sub_1005BE558(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EE18, 0xD000000000000030, 0x80000001007D7120);
}

uint64_t sub_1005BE57C()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100732358);
  qword_100A1EE30 = result;
  return result;
}

uint64_t sub_1005BE5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEC28);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005BE6B0, 0, 0);
}

uint64_t sub_1005BE6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005BE760;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005BECD0, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005BE760()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005BE7B4, 0, 0);
}

uint64_t sub_1005BE7B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter(v0 + 28);
  v1 = v0[28];
  v2 = v0[29];
  v0[94] = v1;
  v0[95] = v2;
  v3 = v0[30];
  v4 = v0[31];
  v0[96] = v3;
  v0[97] = v4;
  v5 = v0[32];
  v6 = v0[33];
  v0[98] = v5;
  v7 = v0[34];
  v8 = v0[35];
  v0[99] = v7;
  v0[100] = v8;
  v9 = v0[36];
  v10 = v0[37];
  v0[101] = v9;
  v0[102] = v10;
  v12 = v0[38];
  v11 = v0[39];
  v0[103] = v12;
  v0[104] = v11;
  v13 = v0[40];
  v0[105] = v13;
  v0[41] = v1;
  v0[42] = v2;
  v0[43] = v3;
  v0[44] = v4;
  v0[45] = v5;
  v0[46] = v6;
  v0[47] = v7;
  v0[48] = v8;
  v0[49] = v9;
  v0[50] = v10;
  v0[51] = v12;
  v0[52] = v11;
  v0[53] = v13;
  IntentParameter.wrappedValue.getter(v0 + 109);
  if (qword_1009CE9A8 != -1)
    swift_once(&qword_1009CE9A8, sub_1005BE57C);
  v14 = qword_100A1EE30;
  v0[106] = qword_100A1EE30;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  v0[107] = v16;
  v17 = sub_100030B34(&qword_1009E09B8, &qword_1009E09C0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005BE908;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 109, v14, &type metadata for BookThemeSetting, v17);
}

uint64_t sub_1005BE908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005BD5D4;
  else
    v11 = sub_1005BEA38;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005BEA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v27 = v2;
  v36 = *(_QWORD *)(v0 + 704);
  v37 = *(_QWORD *)(v0 + 712);
  v30 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 664);
  v35 = v5;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 536));
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 632);
  v9 = *(_OWORD *)(v0 + 552);
  v10 = *(_OWORD *)(v0 + 584);
  v11 = *(_OWORD *)(v0 + 600);
  v12 = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 448) = v9;
  *(_QWORD *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = v7;
  *(_OWORD *)(v0 + 480) = v10;
  *(_OWORD *)(v0 + 496) = v11;
  *(_OWORD *)(v0 + 512) = v12;
  *(_QWORD *)(v0 + 528) = v8;
  v13 = type metadata accessor for _GeneratedContentOptions(0);
  v34 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = sub_1005BE474();
  v16 = sub_1005BC9BC();
  v29 = v3;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005BECD0, 0, v4, v5, &type metadata for BookSettingsEntity.UpdateIntent_theme, &type metadata for BookSettingsEntity, v15, v16);
  v28 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v38, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v3, v1, &type metadata for BookSettingsEntity.UpdateIntent_theme, &type metadata for BookSettingsEntity, v15, v16);
  static IntentResult.result<A>(value:dialog:)(v0 + 432, v36, &type metadata for BookSettingsEntity, v16);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v32);
  v17 = *(void **)(v0 + 448);
  v31 = *(_QWORD *)(v0 + 440);
  v33 = *(void **)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 456);
  v19 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 480);
  v20 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 496);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 512);
  v25 = *(_QWORD *)(v0 + 520);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_release(v25);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);

  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v28);
  swift_task_dealloc(v36);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BECD0()
{
  return sub_1005BD688(&qword_1009CE9A8, &qword_100A1EE30, (uint64_t)sub_1005BE57C);
}

uint64_t sub_1005BECEC(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE9A8, &qword_100A1EE30, (uint64_t)sub_1005BE57C);
}

unint64_t sub_1005BED0C()
{
  unint64_t result;

  result = qword_1009EEA98;
  if (!qword_1009EEA98)
  {
    result = swift_getWitnessTable(&unk_100731B44, &type metadata for BookSettingsEntity.UpdateIntent_theme);
    atomic_store(result, (unint64_t *)&qword_1009EEA98);
  }
  return result;
}

unint64_t sub_1005BED54()
{
  unint64_t result;

  result = qword_1009EEAA0;
  if (!qword_1009EEAA0)
  {
    result = swift_getWitnessTable(&unk_100731B6C, &type metadata for BookSettingsEntity.UpdateIntent_theme);
    atomic_store(result, (unint64_t *)&qword_1009EEAA0);
  }
  return result;
}

uint64_t sub_1005BED98(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1008793EC, 1) + 8);
}

uint64_t sub_1005BEDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005BE474, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005BEDD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE998, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EE00, (uint64_t)sub_1005BE4F8, a1);
}

uint64_t sub_1005BEDF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE9A0, (uint64_t)qword_100A1EE18, (uint64_t)sub_1005BE558, a1);
}

uint64_t sub_1005BEE10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEC24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005BE5A0(a1, v5, v4);
}

uint64_t sub_1005BEE74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C3DD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005BEE98()
{
  return 0xD000000000000023;
}

unint64_t sub_1005BEEB8()
{
  unint64_t result;

  result = qword_1009EEAB0;
  if (!qword_1009EEAB0)
  {
    result = swift_getWitnessTable(&unk_100731BF8, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009EEAB0);
  }
  return result;
}

uint64_t sub_1005BEEFC()
{
  return sub_100030B34(&qword_1009EEAB8, &qword_1009EEAC0, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005BEF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for _BookReaderInteractorState(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005BEF80, 0, 0);
}

uint64_t sub_1005BEF80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[4] = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  v0[5] = v1;
  v0[6] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BEFFC, v2, v3);
}

uint64_t sub_1005BEFFC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = objc_msgSend(*(id *)(v0 + 32), "delegate", swift_release(*(_QWORD *)(v0 + 48)).n128_f64[0]);
  return swift_task_switch(sub_1005BF058, 0, 0);
}

uint64_t sub_1005BF058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BF0B8, v3, v4);
}

uint64_t sub_1005BF0B8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[7];
  v0[9] = objc_msgSend(v1, "menuController", swift_release(v0[8]).n128_f64[0]);

  return swift_task_switch(sub_1005BF114, 0, 0);
}

uint64_t sub_1005BF114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 80) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BF174, v3, v4);
}

uint64_t sub_1005BF174()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[9];
  swift_release(v0[10]);
  v0[11] = sub_1005273B0();

  return swift_task_switch(sub_1005BF1BC, 0, 0);
}

uint64_t sub_1005BF1BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  if (*(_QWORD *)(v1 + 88))
  {
    v2 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 96) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005BF280, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 24);
    v7 = sub_1001EA7C0();
    v8 = swift_allocError(&type metadata for BookContextualIntentError, v7, 0, 0);
    *v9 = 0;
    swift_willThrow(v8);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1005BF280()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[11];
  swift_release(v0[12]);
  v0[13] = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22BookReaderActionTarget_delegate);
  return swift_task_switch(sub_1005BF2D4, 0, 0);
}

uint64_t sub_1005BF2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  if (*(_QWORD *)(v1 + 104))
  {
    v2 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 112) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005BF3A0, v3, v4);
  }
  else
  {

    v6 = *(_QWORD *)(v1 + 24);
    v7 = sub_1001EA7C0();
    v8 = swift_allocError(&type metadata for BookContextualIntentError, v7, 0, 0);
    *v9 = 0;
    swift_willThrow(v8);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1005BF3A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_1004375A4(v1);
  return swift_task_switch(sub_1005BF3F4, 0, 0);
}

uint64_t sub_1005BF3F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 24);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));

  LOBYTE(v1) = *(_BYTE *)(v2 + 2);
  sub_100270BAC(v2);
  v3 = *(_QWORD *)(v0 + 24);
  **(_BYTE **)(v0 + 16) = (_BYTE)v1 + 2;
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BF450(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D3150);
  *(_QWORD *)(v2 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + 176) = *a2;
  return swift_task_switch(sub_1005BF4B4, 0, 0);
}

uint64_t sub_1005BF4B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[13] = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  v0[14] = v1;
  v0[15] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BF530, v2, v3);
}

uint64_t sub_1005BF530()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = objc_msgSend(*(id *)(v0 + 104), "delegate", swift_release(*(_QWORD *)(v0 + 120)).n128_f64[0]);
  return swift_task_switch(sub_1005BF58C, 0, 0);
}

uint64_t sub_1005BF58C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 136) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BF5EC, v3, v4);
}

uint64_t sub_1005BF5EC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[16];
  v0[18] = objc_msgSend(v1, "menuController", swift_release(v0[17]).n128_f64[0]);

  return swift_task_switch(sub_1005BF648, 0, 0);
}

uint64_t sub_1005BF648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 152) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005BF6A8, v3, v4);
}

uint64_t sub_1005BF6A8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[18];
  swift_release(v0[19]);
  v0[20] = sub_1005273B0();

  return swift_task_switch(sub_1005BF6F0, 0, 0);
}

uint64_t sub_1005BF6F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  objc_class *v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  if (*(_QWORD *)(v0 + 160))
  {
    v1 = *(_QWORD *)(v0 + 112);
    v2 = *(_BYTE *)(v0 + 176);
    v3 = (objc_class *)type metadata accessor for ThemeIDProvider();
    v4 = objc_allocWithZone(v3);
    v4[OBJC_IVAR____TtC5Books15ThemeIDProvider_setting] = v2;
    *(_QWORD *)(v0 + 80) = v4;
    *(_QWORD *)(v0 + 88) = v3;
    v5 = objc_msgSendSuper2((objc_super *)(v0 + 80), "init");
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005BF7F8, v6, v7);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 96);
    v10 = sub_1001EA7C0();
    v11 = swift_allocError(&type metadata for BookContextualIntentError, v10, 0, 0);
    *v12 = 0;
    swift_willThrow(v11);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005BF7F8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = (void *)v0[20];
  v2 = v0[12];
  swift_release(v0[21]);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_10000B5E4((uint64_t)(v0 + 2), (uint64_t)(v0 + 6), (uint64_t *)&unk_1009D04E0);
  v4 = v1;
  v5 = static MainActor.shared.getter(v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1009149A8, 72, 7);
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  sub_10004C7B4((uint64_t)(v0 + 6), (uint64_t)(v6 + 5));
  v7 = sub_10030C02C(v2, (uint64_t)&unk_1009E4D28, (uint64_t)v6);
  swift_release(v7);
  sub_10004A7B8((uint64_t)(v0 + 2));
  return swift_task_switch(sub_1005BF8F0, 0, 0);
}

uint64_t sub_1005BF8F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005BF930()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1EE38);
  sub_100048F64(v0, (uint64_t)qword_100A1EE38);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000039, 0x80000001007D7080, v1);
}

uint64_t sub_1005BF990(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EE50, 0xD000000000000042, 0x80000001007D7030);
}

uint64_t sub_1005BF9B4()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100732330);
  qword_100A1EE68 = result;
  return result;
}

uint64_t sub_1005BF9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEC18);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005BFAE8, 0, 0);
}

uint64_t sub_1005BFAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005BFB98;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005C011C, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005BFB98()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005BFBEC, 0, 0);
}

uint64_t sub_1005BFBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 752) = v1;
  *(_QWORD *)(v0 + 760) = v2;
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 768) = v3;
  *(_QWORD *)(v0 + 776) = v4;
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 784) = v5;
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 792) = v7;
  *(_QWORD *)(v0 + 800) = v8;
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 808) = v9;
  *(_QWORD *)(v0 + 816) = v10;
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 824) = v12;
  *(_QWORD *)(v0 + 832) = v11;
  v13 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 840) = v13;
  *(_QWORD *)(v0 + 328) = v1;
  *(_QWORD *)(v0 + 336) = v2;
  *(_QWORD *)(v0 + 344) = v3;
  *(_QWORD *)(v0 + 352) = v4;
  *(_QWORD *)(v0 + 360) = v5;
  *(_QWORD *)(v0 + 368) = v6;
  *(_QWORD *)(v0 + 376) = v7;
  *(_QWORD *)(v0 + 384) = v8;
  *(_QWORD *)(v0 + 392) = v9;
  *(_QWORD *)(v0 + 400) = v10;
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = v11;
  *(_QWORD *)(v0 + 424) = v13;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 873));
  *(_BYTE *)(v0 + 872) = *(_BYTE *)(v0 + 873);
  if (qword_1009CE9C0 != -1)
    swift_once(&qword_1009CE9C0, sub_1005BF9B4);
  v14 = qword_100A1EE68;
  *(_QWORD *)(v0 + 848) = qword_100A1EE68;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  *(_QWORD *)(v0 + 856) = v16;
  v17 = sub_100030B34(&qword_1009E09A8, &qword_1009E09B0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005BFD54;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 872, v14, &type metadata for BookPageNavigationSetting, v17);
}

uint64_t sub_1005BFD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005C47B4;
  else
    v11 = sub_1005BFE84;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005BFE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v27 = v2;
  v36 = *(_QWORD *)(v0 + 704);
  v37 = *(_QWORD *)(v0 + 712);
  v30 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 664);
  v35 = v5;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 536));
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 632);
  v9 = *(_OWORD *)(v0 + 552);
  v10 = *(_OWORD *)(v0 + 584);
  v11 = *(_OWORD *)(v0 + 600);
  v12 = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 448) = v9;
  *(_QWORD *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = v7;
  *(_OWORD *)(v0 + 480) = v10;
  *(_OWORD *)(v0 + 496) = v11;
  *(_OWORD *)(v0 + 512) = v12;
  *(_QWORD *)(v0 + 528) = v8;
  v13 = type metadata accessor for _GeneratedContentOptions(0);
  v34 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = sub_1005BEEB8();
  v16 = sub_1005BC9BC();
  v29 = v3;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005C011C, 0, v4, v5, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting, &type metadata for BookSettingsEntity, v15, v16);
  v28 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v38, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v3, v1, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting, &type metadata for BookSettingsEntity, v15, v16);
  static IntentResult.result<A>(value:dialog:)(v0 + 432, v36, &type metadata for BookSettingsEntity, v16);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v32);
  v17 = *(void **)(v0 + 448);
  v31 = *(_QWORD *)(v0 + 440);
  v33 = *(void **)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 456);
  v19 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 480);
  v20 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 496);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 512);
  v25 = *(_QWORD *)(v0 + 520);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_release(v25);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);

  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v28);
  swift_task_dealloc(v36);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C011C()
{
  return sub_1005BD688(&qword_1009CE9C0, &qword_100A1EE68, (uint64_t)sub_1005BF9B4);
}

uint64_t sub_1005C013C(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE9C0, &qword_100A1EE68, (uint64_t)sub_1005BF9B4);
}

unint64_t sub_1005C015C()
{
  unint64_t result;

  result = qword_1009EEAC8;
  if (!qword_1009EEAC8)
  {
    result = swift_getWitnessTable(&unk_100731C88, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009EEAC8);
  }
  return result;
}

unint64_t sub_1005C01A4()
{
  unint64_t result;

  result = qword_1009EEAD0;
  if (!qword_1009EEAD0)
  {
    result = swift_getWitnessTable(&unk_100731CB0, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009EEAD0);
  }
  return result;
}

uint64_t sub_1005C01E8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1008793A8, 1) + 8);
}

uint64_t sub_1005C020C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005BEEB8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005C0220@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE9B0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EE38, (uint64_t)sub_1005BF930, a1);
}

uint64_t sub_1005C0244@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE9B8, (uint64_t)qword_100A1EE50, (uint64_t)sub_1005BF990, a1);
}

uint64_t sub_1005C0260(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEC14);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005BF9D8(a1, v5, v4);
}

uint64_t sub_1005C02C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C40E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005C02E8()
{
  return 0xD000000000000033;
}

unint64_t sub_1005C0308()
{
  unint64_t result;

  result = qword_1009EEAE0;
  if (!qword_1009EEAE0)
  {
    result = swift_getWitnessTable(&unk_100731D3C, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified);
    atomic_store(result, (unint64_t *)&qword_1009EEAE0);
  }
  return result;
}

uint64_t sub_1005C034C()
{
  return sub_100030B34(&qword_1009EEAE8, &qword_1009EEAF0, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005C0378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for _BookReaderInteractorState(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005C03D0, 0, 0);
}

uint64_t sub_1005C03D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[4] = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  v0[5] = v1;
  v0[6] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C044C, v2, v3);
}

uint64_t sub_1005C044C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = objc_msgSend(*(id *)(v0 + 32), "delegate", swift_release(*(_QWORD *)(v0 + 48)).n128_f64[0]);
  return swift_task_switch(sub_1005C04A8, 0, 0);
}

uint64_t sub_1005C04A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C0508, v3, v4);
}

uint64_t sub_1005C0508()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[7];
  v0[9] = objc_msgSend(v1, "menuController", swift_release(v0[8]).n128_f64[0]);

  return swift_task_switch(sub_1005C0564, 0, 0);
}

uint64_t sub_1005C0564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 80) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C05C4, v3, v4);
}

uint64_t sub_1005C05C4()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[9];
  swift_release(v0[10]);
  v0[11] = sub_1005273B0();

  return swift_task_switch(sub_1005C060C, 0, 0);
}

uint64_t sub_1005C060C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  if (*(_QWORD *)(v1 + 88))
  {
    v2 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 96) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005C06D0, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 24);
    v7 = sub_1001EA7C0();
    v8 = swift_allocError(&type metadata for BookContextualIntentError, v7, 0, 0);
    *v9 = 0;
    swift_willThrow(v8);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1005C06D0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[11];
  swift_release(v0[12]);
  v0[13] = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22BookReaderActionTarget_delegate);
  return swift_task_switch(sub_1005C0724, 0, 0);
}

uint64_t sub_1005C0724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  if (*(_QWORD *)(v1 + 104))
  {
    v2 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 112) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005C07F0, v3, v4);
  }
  else
  {

    v6 = *(_QWORD *)(v1 + 24);
    v7 = sub_1001EA7C0();
    v8 = swift_allocError(&type metadata for BookContextualIntentError, v7, 0, 0);
    *v9 = 0;
    swift_willThrow(v8);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1005C07F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_1004375A4(v1);
  return swift_task_switch(sub_1005C0844, 0, 0);
}

uint64_t sub_1005C0844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;

  v1 = PageNavigationStyle.rawValue.getter(**(unsigned __int8 **)(v0 + 24));
  v3 = v2;
  v4 = PageNavigationStyle.rawValue.getter(3);
  if (v1 == v4 && v3 == v5)
  {
    swift_bridgeObjectRelease_n(v3, 2);
    v9 = 0;
  }
  else
  {
    v7 = v5;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v3);
    v9 = v8 ^ 1;
  }
  v10 = *(void **)(v0 + 88);
  v12 = *(_BYTE **)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 24);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));

  sub_100270BAC(v11);
  *v12 = v9 & 1;
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C0914(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  v4 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 72) = v4;
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(a1 + 96);
  *(_BYTE *)(v2 + 184) = *a2;
  return swift_task_switch(sub_1005C095C, 0, 0);
}

uint64_t sub_1005C095C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[14] = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  v0[15] = v1;
  v0[16] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C09D8, v2, v3);
}

uint64_t sub_1005C09D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = objc_msgSend(*(id *)(v0 + 112), "delegate", swift_release(*(_QWORD *)(v0 + 128)).n128_f64[0]);
  return swift_task_switch(sub_1005C0A34, 0, 0);
}

uint64_t sub_1005C0A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 144) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C0A94, v3, v4);
}

uint64_t sub_1005C0A94()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[17];
  v0[19] = objc_msgSend(v1, "menuController", swift_release(v0[18]).n128_f64[0]);

  return swift_task_switch(sub_1005C0AF0, 0, 0);
}

uint64_t sub_1005C0AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005C0B50, v3, v4);
}

uint64_t sub_1005C0B50()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[19];
  swift_release(v0[20]);
  v0[21] = sub_1005273B0();

  return swift_task_switch(sub_1005C0B98, 0, 0);
}

uint64_t sub_1005C0B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  if (*(_QWORD *)(v0 + 168))
  {
    v1 = *(_QWORD *)(v0 + 120);
    v23 = *(_BYTE *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v8 = *(void **)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(id *)(v0 + 16);
    swift_unknownObjectRetain(v9);
    v11 = v8;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v5);
    swift_retain(v4);
    swift_retain(v3);
    swift_retain(v2);
    swift_retain(v20);
    swift_retain(v21);
    swift_retain(v22);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    if ((v23 & 1) != 0)
      v15 = sub_1005C0E70;
    else
      v15 = sub_1005C0D04;
    return swift_task_switch(v15, v14, v13);
  }
  else
  {
    v16 = sub_1001EA7C0();
    v17 = swift_allocError(&type metadata for BookContextualIntentError, v16, 0, 0);
    *v18 = 0;
    swift_willThrow(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005C0D04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v1 = v0[21];
  swift_release(v0[22]);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22BookReaderActionTarget_delegate);
  v4 = v0[12];
  v3 = v0[13];
  v5 = v0[10];
  v6 = v0[11];
  v7 = v0[8];
  v8 = v0[9];
  v9 = v0[6];
  v10 = v0[7];
  v21 = (void *)v0[4];
  v22 = v0[5];
  v20 = v0[3];
  v11 = (void *)v0[2];
  if (Strong)
  {
    v12 = Strong;
    v18 = (void *)v0[2];
    v19 = v0[8];
    v13 = v0[12];
    v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 64)
                    + OBJC_IVAR____TtC5Books21BookReaderDataManager_readingSettingsManager
                    + 8);
    ObjectType = swift_getObjectType();
    v16 = v14;
    v4 = v13;
    dispatch thunk of ReadingSettingsManaging.changePageNavigationStyle(to:)(3, ObjectType, v16);
    v7 = v19;
    swift_unknownObjectRelease(v12);
    v11 = v18;
  }

  swift_unknownObjectRelease(v20);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_release(v7);
  swift_release(v8);
  swift_release(v5);
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  return swift_task_switch(sub_1005C47AC, 0, 0);
}

uint64_t sub_1005C0E70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v1 = v0[21];
  swift_release(v0[22]);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22BookReaderActionTarget_delegate);
  v4 = v0[12];
  v3 = v0[13];
  v5 = v0[10];
  v6 = v0[11];
  v7 = v0[8];
  v8 = v0[9];
  v9 = v0[6];
  v10 = v0[7];
  v21 = (void *)v0[4];
  v22 = v0[5];
  v20 = v0[3];
  v11 = (void *)v0[2];
  if (Strong)
  {
    v12 = Strong;
    v18 = (void *)v0[2];
    v19 = v0[8];
    v13 = v0[12];
    v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 64)
                    + OBJC_IVAR____TtC5Books21BookReaderDataManager_readingSettingsManager
                    + 8);
    ObjectType = swift_getObjectType();
    v16 = v14;
    v4 = v13;
    dispatch thunk of ReadingSettingsManaging.changePageNavigationStyle(to:)(0, ObjectType, v16);
    v7 = v19;
    swift_unknownObjectRelease(v12);
    v11 = v18;
  }

  swift_unknownObjectRelease(v20);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_release(v7);
  swift_release(v8);
  swift_release(v5);
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  return swift_task_switch(sub_1005C0FDC, 0, 0);
}

uint64_t sub_1005C0FDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C1010()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1EE70);
  sub_100048F64(v0, (uint64_t)qword_100A1EE70);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000033, 0x80000001007D6F70, v1);
}

uint64_t sub_1005C1070(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EE88, 0xD00000000000003CLL, 0x80000001007D6F30);
}

uint64_t sub_1005C1094()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100732308);
  qword_100A1EEA0 = result;
  return result;
}

uint64_t sub_1005C10B8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1005C10C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEC08);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005C11D0, 0, 0);
}

uint64_t sub_1005C11D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005C1280;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005C1804, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005C1280()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005C12D4, 0, 0);
}

uint64_t sub_1005C12D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 752) = v1;
  *(_QWORD *)(v0 + 760) = v2;
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 768) = v3;
  *(_QWORD *)(v0 + 776) = v4;
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 784) = v5;
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 792) = v7;
  *(_QWORD *)(v0 + 800) = v8;
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 808) = v9;
  *(_QWORD *)(v0 + 816) = v10;
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 824) = v12;
  *(_QWORD *)(v0 + 832) = v11;
  v13 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 840) = v13;
  *(_QWORD *)(v0 + 328) = v1;
  *(_QWORD *)(v0 + 336) = v2;
  *(_QWORD *)(v0 + 344) = v3;
  *(_QWORD *)(v0 + 352) = v4;
  *(_QWORD *)(v0 + 360) = v5;
  *(_QWORD *)(v0 + 368) = v6;
  *(_QWORD *)(v0 + 376) = v7;
  *(_QWORD *)(v0 + 384) = v8;
  *(_QWORD *)(v0 + 392) = v9;
  *(_QWORD *)(v0 + 400) = v10;
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = v11;
  *(_QWORD *)(v0 + 424) = v13;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 873));
  *(_BYTE *)(v0 + 872) = *(_BYTE *)(v0 + 873);
  if (qword_1009CE9D8 != -1)
    swift_once(&qword_1009CE9D8, sub_1005C1094);
  v14 = qword_100A1EEA0;
  *(_QWORD *)(v0 + 848) = qword_100A1EEA0;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  *(_QWORD *)(v0 + 856) = v16;
  v17 = sub_100030B34(&qword_1009EEBD8, &qword_1009EEBE0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005C143C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 872, v14, &type metadata for Bool, v17);
}

uint64_t sub_1005C143C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005C47B4;
  else
    v11 = sub_1005C156C;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005C156C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v27 = v2;
  v36 = *(_QWORD *)(v0 + 704);
  v37 = *(_QWORD *)(v0 + 712);
  v30 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 664);
  v35 = v5;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 536));
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 632);
  v9 = *(_OWORD *)(v0 + 552);
  v10 = *(_OWORD *)(v0 + 584);
  v11 = *(_OWORD *)(v0 + 600);
  v12 = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 448) = v9;
  *(_QWORD *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = v7;
  *(_OWORD *)(v0 + 480) = v10;
  *(_OWORD *)(v0 + 496) = v11;
  *(_OWORD *)(v0 + 512) = v12;
  *(_QWORD *)(v0 + 528) = v8;
  v13 = type metadata accessor for _GeneratedContentOptions(0);
  v34 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = sub_1005C0308();
  v16 = sub_1005BC9BC();
  v29 = v3;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005C1804, 0, v4, v5, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified, &type metadata for BookSettingsEntity, v15, v16);
  v28 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v38, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v3, v1, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified, &type metadata for BookSettingsEntity, v15, v16);
  static IntentResult.result<A>(value:dialog:)(v0 + 432, v36, &type metadata for BookSettingsEntity, v16);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v32);
  v17 = *(void **)(v0 + 448);
  v31 = *(_QWORD *)(v0 + 440);
  v33 = *(void **)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 456);
  v19 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 480);
  v20 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 496);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 512);
  v25 = *(_QWORD *)(v0 + 520);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_release(v25);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);

  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v28);
  swift_task_dealloc(v36);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C1804()
{
  return sub_1005BD688(&qword_1009CE9D8, &qword_100A1EEA0, (uint64_t)sub_1005C1094);
}

uint64_t sub_1005C1820(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE9D8, &qword_100A1EEA0, (uint64_t)sub_1005C1094);
}

unint64_t sub_1005C1840()
{
  unint64_t result;

  result = qword_1009EEAF8;
  if (!qword_1009EEAF8)
  {
    result = swift_getWitnessTable(&unk_100731DCC, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified);
    atomic_store(result, (unint64_t *)&qword_1009EEAF8);
  }
  return result;
}

unint64_t sub_1005C1888()
{
  unint64_t result;

  result = qword_1009EEB00;
  if (!qword_1009EEB00)
  {
    result = swift_getWitnessTable(&unk_100731DF4, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified);
    atomic_store(result, (unint64_t *)&qword_1009EEB00);
  }
  return result;
}

uint64_t sub_1005C18CC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100879364, 1) + 8);
}

uint64_t sub_1005C18F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005C0308, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005C1904@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE9C8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EE70, (uint64_t)sub_1005C1010, a1);
}

uint64_t sub_1005C1928@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE9D0, (uint64_t)qword_100A1EE88, (uint64_t)sub_1005C1070, a1);
}

uint64_t sub_1005C1944(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEC04);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005C10C0(a1, v5, v4);
}

uint64_t sub_1005C19A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C43E8(0xD000000000000035, 0x80000001007D6EF0);
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005C19E4()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1005C1A04()
{
  unint64_t result;

  result = qword_1009EEB10;
  if (!qword_1009EEB10)
  {
    result = swift_getWitnessTable(&unk_100731E80, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns);
    atomic_store(result, (unint64_t *)&qword_1009EEB10);
  }
  return result;
}

uint64_t sub_1005C1A48()
{
  return sub_100030B34(&qword_1009EEB18, &qword_1009EEB20, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1005C1A74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1005C1A8C, 0, 0);
}

uint64_t sub_1005C1A8C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C1AA0()
{
  return swift_task_switch(sub_1005C1AB4, 0, 0);
}

uint64_t sub_1005C1AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_1009CE930 != -1)
    swift_once(&qword_1009CE930, sub_1005BB568);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EE8A0);
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "Not Implemented, this API is going away", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C1B94()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1EEA8);
  sub_100048F64(v0, (uint64_t)qword_100A1EEA8);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000003BLL, 0x80000001007D6E80, v1);
}

uint64_t sub_1005C1BF4(uint64_t a1)
{
  return sub_1005C1C18(a1, qword_100A1EEC0, 0xD000000000000044, 0x80000001007D6E30);
}

uint64_t sub_1005C1C18(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_10004CFD4(&qword_1009EEBF8);
  sub_10001BFD8(v7, a2);
  v8 = sub_100048F64(v7, (uint64_t)a2);
  IntentDescription.init(stringLiteral:)(a3, a4);
  v9 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
}

uint64_t sub_1005C1C9C()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_1007322E0);
  qword_100A1EED8 = result;
  return result;
}

uint64_t sub_1005C1CC0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 96));
}

uint64_t sub_1005C1CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[82] = a3;
  v3[81] = a2;
  v3[80] = a1;
  v4 = sub_10004CFD4(&qword_1009EEBB8);
  v3[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EEBC0);
  v3[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EEBC8);
  v3[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[87] = v8;
  v3[88] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEBD0);
  v3[89] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[90] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[91] = swift_task_alloc(v11);
  v3[92] = swift_task_alloc(v11);
  return swift_task_switch(sub_1005C1DD8, 0, 0);
}

uint64_t sub_1005C1DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  unint64_t v9;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 168) = v5;
  *(_OWORD *)(v0 + 184) = v6;
  *(_OWORD *)(v0 + 200) = v7;
  *(_QWORD *)(v0 + 216) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  *(_QWORD *)(v0 + 744) = v8;
  v9 = sub_1003A8B7C();
  *v8 = v0;
  v8[1] = sub_1005C1E88;
  return IntentDialog._CapturedContent.init<>(entity:_:)(*(_QWORD *)(v0 + 736), v0 + 120, sub_1005C240C, 0, &type metadata for BookSettingsEntity, v9);
}

uint64_t sub_1005C1E88()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_1005C1EDC, 0, 0);
}

uint64_t sub_1005C1EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 752) = v1;
  *(_QWORD *)(v0 + 760) = v2;
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 768) = v3;
  *(_QWORD *)(v0 + 776) = v4;
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 784) = v5;
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 792) = v7;
  *(_QWORD *)(v0 + 800) = v8;
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 808) = v9;
  *(_QWORD *)(v0 + 816) = v10;
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 824) = v12;
  *(_QWORD *)(v0 + 832) = v11;
  v13 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 840) = v13;
  *(_QWORD *)(v0 + 328) = v1;
  *(_QWORD *)(v0 + 336) = v2;
  *(_QWORD *)(v0 + 344) = v3;
  *(_QWORD *)(v0 + 352) = v4;
  *(_QWORD *)(v0 + 360) = v5;
  *(_QWORD *)(v0 + 368) = v6;
  *(_QWORD *)(v0 + 376) = v7;
  *(_QWORD *)(v0 + 384) = v8;
  *(_QWORD *)(v0 + 392) = v9;
  *(_QWORD *)(v0 + 400) = v10;
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = v11;
  *(_QWORD *)(v0 + 424) = v13;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 873));
  *(_BYTE *)(v0 + 872) = *(_BYTE *)(v0 + 873);
  if (qword_1009CE9F0 != -1)
    swift_once(&qword_1009CE9F0, sub_1005C1C9C);
  v14 = qword_100A1EED8;
  *(_QWORD *)(v0 + 848) = qword_100A1EED8;
  v15 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v14);
  v16 = (_QWORD *)swift_task_alloc(v15);
  *(_QWORD *)(v0 + 856) = v16;
  v17 = sub_100030B34(&qword_1009EEBD8, &qword_1009EEBE0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v16 = v0;
  v16[1] = sub_1005C2044;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 872, v14, &type metadata for Bool, v17);
}

uint64_t sub_1005C2044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 856);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 816);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v9 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 792);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 776);
  v15 = *(void **)(*(_QWORD *)v1 + 768);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  v17 = *(void **)(*(_QWORD *)v1 + 752);
  *(_QWORD *)(*(_QWORD *)v1 + 864) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  swift_unknownObjectRelease(v16);
  if (v0)
    v11 = sub_1005C47B4;
  else
    v11 = sub_1005C2174;
  return swift_task_switch(v11, 0, 0);
}

uint64_t sub_1005C2174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v27 = v2;
  v36 = *(_QWORD *)(v0 + 704);
  v37 = *(_QWORD *)(v0 + 712);
  v30 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 664);
  v35 = v5;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 536));
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 632);
  v9 = *(_OWORD *)(v0 + 552);
  v10 = *(_OWORD *)(v0 + 584);
  v11 = *(_OWORD *)(v0 + 600);
  v12 = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 448) = v9;
  *(_QWORD *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = v7;
  *(_OWORD *)(v0 + 480) = v10;
  *(_OWORD *)(v0 + 496) = v11;
  *(_OWORD *)(v0 + 512) = v12;
  *(_QWORD *)(v0 + 528) = v8;
  v13 = type metadata accessor for _GeneratedContentOptions(0);
  v34 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = sub_1005C1A04();
  v16 = sub_1005BC9BC();
  v29 = v3;
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1005C240C, 0, v4, v5, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns, &type metadata for BookSettingsEntity, v15, v16);
  v28 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v38, v37);
  IntentDialog.init<A, B>(from:capturedContent:)(v3, v1, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns, &type metadata for BookSettingsEntity, v15, v16);
  static IntentResult.result<A>(value:dialog:)(v0 + 432, v36, &type metadata for BookSettingsEntity, v16);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v32);
  v17 = *(void **)(v0 + 448);
  v31 = *(_QWORD *)(v0 + 440);
  v33 = *(void **)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 456);
  v19 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 480);
  v20 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 496);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 512);
  v25 = *(_QWORD *)(v0 + 520);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_release(v25);
  swift_release(v24);
  swift_release(v23);
  swift_release(v22);
  swift_release(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);

  swift_unknownObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v28);
  swift_task_dealloc(v36);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C240C()
{
  return sub_1005BD688(&qword_1009CE9F0, &qword_100A1EED8, (uint64_t)sub_1005C1C9C);
}

double sub_1005C2428@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  IntentParameter.wrappedValue.getter(v10);
  v2 = v11;
  v3 = v12;
  v4 = v16;
  result = *(double *)v10;
  v6 = v10[1];
  v7 = v13;
  v8 = v14;
  v9 = v15;
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = v4;
  return result;
}

void sub_1005C2480(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16[13];

  v1 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v2 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v8 = *(void **)(a1 + 72);
  v10 = *(void **)(a1 + 80);
  v9 = *(void **)(a1 + 88);
  v11 = *(void **)(a1 + 96);
  v13 = *(void **)(a1 + 64);
  v16[0] = *(id *)a1;
  v16[1] = v1;
  v16[2] = v3;
  v16[3] = v2;
  v16[4] = v5;
  v16[5] = v4;
  v16[6] = v7;
  v16[7] = v6;
  v12 = v6;
  v16[8] = v13;
  v16[9] = v8;
  v16[10] = v10;
  v16[11] = v9;
  v16[12] = v11;
  v15 = v16[0];
  swift_unknownObjectRetain(v1);
  v14 = v3;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v9);
  swift_retain(v11);
  IntentParameter.wrappedValue.setter(v16);
  swift_release(v11);
  swift_release(v9);
  swift_release(v10);
  swift_release(v8);
  swift_release(v13);
  swift_release(v12);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);

  swift_unknownObjectRelease(v1);
}

uint64_t sub_1005C25E4(uint64_t a1, uint64_t a2)
{
  return sub_1005C2600(a1, a2, &qword_1009CE9F0, &qword_100A1EED8, (uint64_t)sub_1005C1C9C);
}

uint64_t sub_1005C2600(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return swift_retain(*a4);
}

unint64_t sub_1005C2640()
{
  unint64_t result;

  result = qword_1009EEB28;
  if (!qword_1009EEB28)
  {
    result = swift_getWitnessTable(&unk_100731F10, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns);
    atomic_store(result, (unint64_t *)&qword_1009EEB28);
  }
  return result;
}

unint64_t sub_1005C2688()
{
  unint64_t result;

  result = qword_1009EEB30;
  if (!qword_1009EEB30)
  {
    result = swift_getWitnessTable(&unk_100731F38, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns);
    atomic_store(result, (unint64_t *)&qword_1009EEB30);
  }
  return result;
}

uint64_t sub_1005C26CC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100879320, 1) + 8);
}

uint64_t sub_1005C26F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C2704(a1, a2, a3, (uint64_t (*)(void))sub_1005C1A04, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1005C2704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  _QWORD v7[2];

  v7[0] = a2;
  v7[1] = a4();
  return swift_getOpaqueTypeConformance2(v7, a5, 1);
}

uint64_t sub_1005C2744@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE9E0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EEA8, (uint64_t)sub_1005C1B94, a1);
}

uint64_t sub_1005C2768@<X0>(uint64_t a1@<X8>)
{
  return sub_1005BE364(&qword_1009CE9E8, (uint64_t)qword_100A1EEC0, (uint64_t)sub_1005C1BF4, a1);
}

uint64_t sub_1005C2784(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EEBB4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1005C1CC8(a1, v5, v4);
}

uint64_t sub_1005C27E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005C43E8(0xD00000000000003DLL, 0x80000001007D6DF0);
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005C2824()
{
  return 0xD000000000000034;
}

unint64_t sub_1005C2844()
{
  unint64_t result;

  result = qword_1009EEB40;
  if (!qword_1009EEB40)
  {
    result = swift_getWitnessTable(&unk_100731FDC, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB40);
  }
  return result;
}

unint64_t sub_1005C288C()
{
  unint64_t result;

  result = qword_1009EEB48;
  if (!qword_1009EEB48)
  {
    result = swift_getWitnessTable(&unk_100732014, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB48);
  }
  return result;
}

unint64_t sub_1005C28D4()
{
  unint64_t result;

  result = qword_1009EEB50;
  if (!qword_1009EEB50)
  {
    result = swift_getWitnessTable(&unk_100732044, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB50);
  }
  return result;
}

uint64_t sub_1005C2918(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1005C2930, 0, 0);
}

uint64_t sub_1005C2930()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005C2948@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1009CE958 != -1)
    swift_once(&qword_1009CE958, sub_1005BC658);
  v2 = qword_100A1ED70;
  *a1 = qword_100A1ED70;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_1005C299C()
{
  unint64_t result;

  result = qword_1009EEB58;
  if (!qword_1009EEB58)
  {
    result = swift_getWitnessTable(&unk_1007315CC, &type metadata for BookSettingsEntity.BookSettingsEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1009EEB58);
  }
  return result;
}

unint64_t sub_1005C29E4()
{
  unint64_t result;

  result = qword_1009EEB60;
  if (!qword_1009EEB60)
  {
    result = swift_getWitnessTable(&unk_10073207C, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB60);
  }
  return result;
}

unint64_t sub_1005C2A2C()
{
  unint64_t result;

  result = qword_1009EEB68;
  if (!qword_1009EEB68)
  {
    result = swift_getWitnessTable(&unk_1007320A4, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB68);
  }
  return result;
}

unint64_t sub_1005C2A74()
{
  unint64_t result;

  result = qword_1009EEB70;
  if (!qword_1009EEB70)
  {
    result = swift_getWitnessTable(&unk_100732124, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB70);
  }
  return result;
}

uint64_t sub_1005C2AB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1005C2AC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE960, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1ED78, (uint64_t)sub_1005BCCF4, a1);
}

uint64_t sub_1005C2AE8()
{
  return sub_100030B34(&qword_1009EEB78, &qword_1009EEB80, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1005C2B14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003A8B7C();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005C2B50()
{
  unint64_t result;

  result = qword_1009EEB88;
  if (!qword_1009EEB88)
  {
    result = swift_getWitnessTable(&unk_100732154, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009EEB88);
  }
  return result;
}

uint64_t sub_1005C2B94()
{
  return DisplayRepresentation.init(stringLiteral:)(0x6D656C706D696E55, 0xED00006465746E65);
}

uint64_t sub_1005C2BB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005C2A74();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_isTextJustified()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_pageNavigationSetting()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_theme()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_theme;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_fontSize()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_fontSize;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.UpdateIntent_font()
{
  return &type metadata for BookSettingsEntity.UpdateIntent_font;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.GlobalSettingsProvider()
{
  return &type metadata for BookSettingsEntity.GlobalSettingsProvider;
}

uint64_t destroy for BookSettingsEntity(uint64_t a1)
{

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 72));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 88));
  return swift_release(*(_QWORD *)(a1 + 96));
}

_QWORD *initializeWithCopy for BookSettingsEntity(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = v8;
  a1[5] = v7;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  a1[8] = v11;
  a1[9] = v12;
  v13 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 88);
  a1[10] = v13;
  a1[11] = v17;
  v18 = *(_QWORD *)(a2 + 96);
  a1[12] = v18;
  v14 = v3;
  swift_unknownObjectRetain(v4);
  v15 = v6;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v17);
  swift_retain(v18);
  return a1;
}

uint64_t assignWithCopy for BookSettingsEntity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v18;
  swift_retain(v18);
  swift_release(v19);
  v20 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = *(_QWORD *)(a2 + 72);
  v23 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v24;
  swift_retain(v24);
  swift_release(v25);
  v26 = *(_QWORD *)(a2 + 88);
  v27 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v26;
  swift_retain(v26);
  swift_release(v27);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v28;
  swift_retain(v28);
  swift_release(v29);
  return a1;
}

uint64_t assignWithTake for BookSettingsEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease(v4);

  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  swift_release(*(_QWORD *)(a1 + 64));
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  swift_release(*(_QWORD *)(a1 + 80));
  v9 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookSettingsEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookSettingsEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookSettingsEntity()
{
  return &type metadata for BookSettingsEntity;
}

ValueMetadata *type metadata accessor for BookSettingsEntity.BookSettingsEntityQuery()
{
  return &type metadata for BookSettingsEntity.BookSettingsEntityQuery;
}

ValueMetadata *type metadata accessor for StubBookFontSize()
{
  return &type metadata for StubBookFontSize;
}

uint64_t _s5Books12StubBookFontOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1005C30E0 + 4 * asc_1007310A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1005C3100 + 4 * byte_1007310A5[v4]))();
}

_BYTE *sub_1005C30E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1005C3100(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005C3108(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005C3110(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005C3118(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005C3120(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StubBookFont()
{
  return &type metadata for StubBookFont;
}

uint64_t sub_1005C313C()
{
  return sub_100030B34(&qword_1009EEB90, &qword_1009EEB98, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1005C3168()
{
  return sub_100030B34(&qword_1009EEBA0, &qword_1009EEB98, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

__n128 sub_1005C3194@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 result;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *(_QWORD *)(a1 + 32);
  v4 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009EEA30);
  LocalizedStringResource.init(stringLiteral:)(1953394502, 0xE400000000000000, v7);
  v8 = sub_100030B34(&qword_1009EEC70, &qword_1009EEC78, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v9 = sub_1003D90B8();
  v30 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EEC80, 0, &unk_1009EEC88, 0, &type metadata for BookSettingsEntity.UpdateIntent_font, v8, v9);
  sub_10004CFD4(&qword_1009EEA60);
  LocalizedStringResource.init(stringLiteral:)(0x7A695320746E6F46, 0xE900000000000065, v10);
  v11 = sub_100030B34(&qword_1009EEC48, &qword_1009EEC50, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v12 = sub_1005BC3E4();
  v13 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EEC90, 0, &unk_1009EEC98, 0, &type metadata for BookSettingsEntity.UpdateIntent_fontSize, v11, v12);
  sub_10004CFD4(&qword_1009EEA90);
  LocalizedStringResource.init(stringLiteral:)(0x656D656854, 0xE500000000000000, v14);
  v15 = sub_100030B34(&qword_1009E09B8, &qword_1009E09C0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v16 = sub_100204100();
  v17 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EECA0, 0, &unk_1009EECA8, 0, &type metadata for BookSettingsEntity.UpdateIntent_theme, v15, v16);
  sub_10004CFD4(&qword_1009EEAC0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x80000001007D7320, v18);
  v19 = sub_100030B34(&qword_1009E09A8, &qword_1009E09B0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v20 = sub_1003A0394();
  v21 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EECB0, 0, &unk_1009EECB8, 0, &type metadata for BookSettingsEntity.UpdateIntent_pageNavigationSetting, v19, v20);
  sub_10004CFD4(&qword_1009EEAF0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x80000001007D7340, v22);
  v23 = sub_100030B34(&qword_1009EEBD8, &qword_1009EEBE0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v24 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EECC0, 0, &unk_1009EECC8, 0, &type metadata for BookSettingsEntity.UpdateIntent_isTextJustified, v23);
  sub_10004CFD4(&qword_1009EEB20);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000019, 0x80000001007D7360, v25);
  v26 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1009EECD0, 0, &unk_1009EECD8, 0, &type metadata for BookSettingsEntity.UpdateIntent_isAllowMultipleColumns, v23);
  result = *(__n128 *)a1;
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = 0xD000000000000012;
  v29 = v30;
  *(_QWORD *)(a2 + 48) = 0x8000000100732260;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v17;
  *(_QWORD *)(a2 + 80) = v21;
  *(_QWORD *)(a2 + 88) = v24;
  *(_QWORD *)(a2 + 96) = v26;
  return result;
}

uint64_t sub_1005C352C()
{
  return swift_task_switch(sub_1005C3540, 0, 0);
}

uint64_t sub_1005C3540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __n128 v23;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v1 = sub_10004CFD4(&qword_1009EECE8);
  inited = swift_initStackObject(v1, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  sub_10004CFD4(&qword_1009D2100);
  v3 = type metadata accessor for AppDependencyManager(0);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  v8 = static AppDependencyManager.shared.getter(v3, v4, v5, v6, v7);
  v9 = AppDependency.__allocating_init(key:manager:)(v33, v8);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 256));
  sub_1005C3194(v0 + 256, v0 + 152);
  v10 = *(void **)(v0 + 152);
  v11 = *(void **)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 192);
  v30 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 224);
  v32 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 248);
  v17 = v9;
  v18 = *(_QWORD *)(v0 + 160);
  swift_release(v17);
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v18;
  v27 = v12;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v30;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v28;
  *(_QWORD *)(inited + 88) = v31;
  *(_QWORD *)(inited + 96) = v32;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 112) = v29;
  *(_QWORD *)(inited + 120) = v15;
  *(_QWORD *)(inited + 128) = v16;
  if (v10)
  {
    v26 = v10;
    swift_unknownObjectRetain(v18);
    v25 = v11;
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v28);
    swift_retain(v31);
    swift_retain(v32);
    swift_retain(v14);
    swift_retain(v29);
    swift_retain(v15);
    swift_retain(v16);
    v19 = sub_1005B2284(0, 1, 1, _swiftEmptyArrayStorage);
    v21 = v19[2];
    v20 = v19[3];
    if (v21 >= v20 >> 1)
      v19 = sub_1005B2284((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
    v19[2] = v21 + 1;
    v22 = &v19[13 * v21];
    v22[4] = v26;
    v22[5] = v18;
    v22[6] = v25;
    v22[7] = v30;
    v22[8] = v27;
    v22[9] = v13;
    v22[10] = v28;
    v22[11] = v31;
    v22[12] = v32;
    v22[13] = v14;
    v22[14] = v29;
    v22[15] = v15;
    v22[16] = v16;
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  v23 = swift_bridgeObjectRelease(inited);
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v19, v23);
}

uint64_t sub_1005C37CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD v33[6];
  uint64_t v34;

  v32 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009DF1D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000001007D6DC0, v15);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v29(v10, 1, 1, v11);
  v16 = type metadata accessor for IntentDialog(0);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v18 = v7;
  v17(v7, 1, 1, v16);
  v19 = v4;
  v17(v4, 1, 1, v16);
  v20 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v22 = v31;
  v21 = v32;
  v27(v31, enum case for InputConnectionBehavior.default(_:), v32);
  v23 = sub_1003A8B7C();
  v28 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v14, v10, v33, v18, v19, v22, v23);
  sub_10004CFD4(&qword_1009EEC58);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000028, 0x80000001007D7290, v24);
  v29(v10, 1, 1, v30);
  LOBYTE(v33[0]) = 1;
  v17(v18, 1, 1, v16);
  v17(v19, 1, 1, v16);
  v27(v22, v20, v21);
  v25 = sub_1003D90B8();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v14, v10, v33, v18, v19, v22, &off_1008F10C8, v25);
  return v28;
}

uint64_t sub_1005C3AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD v33[6];
  uint64_t v34;

  v32 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009DF1D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000001007D6DC0, v15);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v29(v10, 1, 1, v11);
  v16 = type metadata accessor for IntentDialog(0);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v18 = v7;
  v17(v7, 1, 1, v16);
  v19 = v4;
  v17(v4, 1, 1, v16);
  v20 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v22 = v31;
  v21 = v32;
  v27(v31, enum case for InputConnectionBehavior.default(_:), v32);
  v23 = sub_1003A8B7C();
  v28 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v14, v10, v33, v18, v19, v22, v23);
  sub_10004CFD4(&qword_1009EEC30);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002DLL, 0x80000001007D71C0, v24);
  v29(v10, 1, 1, v30);
  LOBYTE(v33[0]) = 1;
  v17(v18, 1, 1, v16);
  v17(v19, 1, 1, v16);
  v27(v22, v20, v21);
  v25 = sub_1005BC3E4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v14, v10, v33, v18, v19, v22, &off_1008F10F0, v25);
  return v28;
}

uint64_t sub_1005C3DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD v33[6];
  uint64_t v34;

  v32 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009DF1D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000001007D6DC0, v15);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v29(v10, 1, 1, v11);
  v16 = type metadata accessor for IntentDialog(0);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v18 = v7;
  v17(v7, 1, 1, v16);
  v19 = v4;
  v17(v4, 1, 1, v16);
  v20 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v22 = v31;
  v21 = v32;
  v27(v31, enum case for InputConnectionBehavior.default(_:), v32);
  v23 = sub_1003A8B7C();
  v28 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v14, v10, v33, v18, v19, v22, v23);
  sub_10004CFD4(&qword_1009D25F8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000029, 0x80000001007D70F0, v24);
  v29(v10, 1, 1, v30);
  LOBYTE(v33[0]) = 8;
  v17(v18, 1, 1, v16);
  v17(v19, 1, 1, v16);
  v27(v22, v20, v21);
  v25 = sub_100204100();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v14, v10, v33, v18, v19, v22, &off_1008EFBC8, v25);
  return v28;
}

uint64_t sub_1005C40E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD v33[6];
  uint64_t v34;

  v32 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009DF1D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000001007D6DC0, v15);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v29(v10, 1, 1, v11);
  v16 = type metadata accessor for IntentDialog(0);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v18 = v7;
  v17(v7, 1, 1, v16);
  v19 = v4;
  v17(v4, 1, 1, v16);
  v20 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v22 = v31;
  v21 = v32;
  v27(v31, enum case for InputConnectionBehavior.default(_:), v32);
  v23 = sub_1003A8B7C();
  v28 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v14, v10, v33, v18, v19, v22, v23);
  sub_10004CFD4(&qword_1009DEF50);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000003BLL, 0x80000001007D6FF0, v24);
  v29(v10, 1, 1, v30);
  LOBYTE(v33[0]) = 2;
  v17(v18, 1, 1, v16);
  v17(v19, 1, 1, v16);
  v27(v22, v20, v21);
  v25 = sub_1003A0394();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v14, v10, v33, v18, v19, v22, &off_1008F1118, v25);
  return v28;
}

uint64_t sub_1005C43E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  _QWORD v30[2];
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _OWORD v39[6];
  uint64_t v40;

  v36 = a1;
  v37 = a2;
  v2 = sub_10004CFD4(&qword_1009E0970);
  __chkstk_darwin(v2);
  v38 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for InputConnectionBehavior(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v35 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v30 - v11;
  v13 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  __chkstk_darwin(v16);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10004CFD4(&qword_1009DF1D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000001007D6DC0, v20);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v34(v15, 1, 1, v16);
  v21 = type metadata accessor for IntentDialog(0);
  memset(v39, 0, sizeof(v39));
  v40 = 0;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v12, 1, 1, v21);
  v22(v9, 1, 1, v21);
  v23 = enum case for InputConnectionBehavior.default(_:);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v24 = v35;
  v31(v35, enum case for InputConnectionBehavior.default(_:), v4);
  v25 = sub_1003A8B7C();
  v33 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, v39, v12, v9, v24, v25);
  v30[1] = sub_10004CFD4(&qword_1009EEBA8);
  LocalizedStringResource.init(stringLiteral:)(v36, v37, v26);
  v34(v15, 1, 1, v32);
  LOBYTE(v39[0]) = 2;
  v27 = type metadata accessor for Bool.IntentDisplayName(0);
  v28 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v38, 1, 1, v27);
  v22(v12, 1, 1, v21);
  v31(v24, v23, v4);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, v39, v28, v12, v24);
  return v33;
}

uint64_t sub_1005C471C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 96);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C4728@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 88);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C4734@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 80);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C4740@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C474C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C4758@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1005C4764()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 64))
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1005C47D8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, SEL *a6)
{
  const char *v10;
  id v11;
  id v12;
  char *v13;
  void *Strong;
  void *v15;
  objc_super v16;

  v16.receiver = a1;
  v16.super_class = (Class)type metadata accessor for ContextMenuButton();
  v10 = *a6;
  v11 = a3;
  v12 = a4;
  v13 = (char *)v16.receiver;
  swift_unknownObjectRetain(a5);
  objc_msgSendSuper2(&v16, v10, v11, v12, a5);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC5Books17ContextMenuButton_contextMenuInteractionDelegate]);
  if (Strong)
  {
    v15 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", *a6, v16.receiver, v16.super_class) & 1) != 0)
      objc_msgSend(v15, *a6, v11, v12, a5);
    swift_unknownObjectRelease(a5);

    swift_unknownObjectRelease(v15);
  }
  else
  {
    swift_unknownObjectRelease(a5);

  }
}

id sub_1005C49A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenuButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextMenuButton()
{
  return objc_opt_self(_TtC5Books17ContextMenuButton);
}

uint64_t sub_1005C4A08()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007325C0);
  v2 = swift_getKeyPath(&unk_1007325E8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005C4A78()
{
  return sub_1001EECBC((uint64_t)&unk_100732578, (uint64_t)&unk_1007325A0);
}

uint64_t sub_1005C4A8C()
{
  return sub_1001EECBC((uint64_t)&unk_100732530, (uint64_t)&unk_100732558);
}

uint64_t sub_1005C4AA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007324E8);
  v2 = swift_getKeyPath(&unk_100732510);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005C4B10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007324A0);
  v4 = swift_getKeyPath(&unk_1007324C8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1005C4B74()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100732458);
  v2 = swift_getKeyPath(&unk_100732480);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005C4BE4(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  int v38;
  void *v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;

  v32 = a7;
  v33 = a8;
  v38 = a6;
  v36 = a4;
  v37 = a5;
  v34 = a2;
  v35 = a3;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009DC000);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__buyButtonProvider;
  v42 = 0;
  memset(v41, 0, sizeof(v41));
  sub_1001F1600((uint64_t)v41, (uint64_t)&v39);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  Published.init(initialValue:)(&v39, v20);
  sub_100010960((uint64_t)v41, (uint64_t *)&unk_1009D4CE0);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  v21 = v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__navigationAttemptsPastEnd;
  *(_QWORD *)&v41[0] = 0;
  Published.init(initialValue:)(v41, &type metadata for Int);
  v22 = v14;
  v24 = v32;
  v23 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v21, v22, v11);
  swift_weakInit(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_readerViewModel, 0);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_cancellables) = &_swiftEmptySetSingleton;
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__coverImage, v41, 33, 0);
  v39 = a1;
  type metadata accessor for CGImage(0);
  v26 = v25;
  v27 = a1;
  Published.init(initialValue:)(&v39, v26);
  swift_endAccess(v41);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__title, v41, 33, 0);
  v39 = v34;
  v40 = v35;
  Published.init(initialValue:)(&v39, &type metadata for String);
  swift_endAccess(v41);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__author, v41, 33, 0);
  v39 = v36;
  v40 = v37;
  Published.init(initialValue:)(&v39, &type metadata for String);
  swift_endAccess(v41);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__disabled, v41, 33, 0);
  LOBYTE(v39) = v38;
  Published.init(initialValue:)(&v39, &type metadata for Bool);
  swift_endAccess(v41);
  sub_1001F1600(v24, (uint64_t)v41);
  KeyPath = swift_getKeyPath(&unk_1007324A0);
  v29 = swift_getKeyPath(&unk_1007324C8);
  sub_1001F1600((uint64_t)v41, (uint64_t)&v39);
  swift_retain(v9);
  static Published.subscript.setter(&v39, v9, KeyPath, v29);
  sub_100010960((uint64_t)v41, (uint64_t *)&unk_1009D4CE0);
  if (v23)
  {
    v30 = swift_unknownObjectRetain(v23);
    sub_1005C4F44(v30, a9);

    swift_unknownObjectRelease_n(v23, 2);
  }
  else
  {

  }
  sub_100010960(v24, (uint64_t *)&unk_1009D4CE0);
  return v9;
}

double sub_1005C4F44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  double result;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  id v44;

  v38 = a2;
  v37 = a1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009E3B10);
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  __chkstk_darwin(v3);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EEFB0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v43[0] = dispatch thunk of LocationProviding.currentLocationPublisher.getter(ObjectType, a2);
  v13 = sub_100059BB4();
  v44 = (id)static OS_dispatch_queue.main.getter(v13);
  v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v35(v8, 1, 1, v14);
  v15 = sub_10004CFD4(&qword_1009E34C0);
  v16 = sub_100030B34((unint64_t *)&unk_1009E8F50, &qword_1009E34C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v17 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v44, v8, v15, v13, v16, v17);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4AE0);

  swift_release(v43[0]);
  v18 = swift_allocObject(&unk_100914DA0, 24, 7);
  v19 = v39;
  swift_weakInit(v18 + 16, v39);
  v20 = sub_100030B34(&qword_1009EEFB8, &qword_1009EEFB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v21 = Publisher<>.sink(receiveValue:)(sub_1005C581C, v18, v9, v20);
  v22 = swift_release(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v22);
  v23 = v19 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_cancellables;
  v24 = v19;
  swift_beginAccess(v19 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_cancellables, v43, 33, 0);
  AnyCancellable.store(in:)(v23);
  swift_endAccess(v43);
  v25 = swift_release(v21);
  v43[0] = dispatch thunk of LocationProviding.attemptedNavigationPastEndNotificationPublisher.getter(ObjectType, v38, v25);
  v44 = (id)static OS_dispatch_queue.main.getter(v43[0]);
  v35(v8, 1, 1, v14);
  v26 = sub_10004CFD4(&qword_1009E3B40);
  v27 = sub_100030B34(&qword_1009F0090, &qword_1009E3B40, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v28 = v40;
  Publisher.receive<A>(on:options:)(&v44, v8, v26, v13, v27, v17);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4AE0);

  swift_release(v43[0]);
  v29 = swift_allocObject(&unk_100914DA0, 24, 7);
  swift_weakInit(v29 + 16, v24);
  v30 = sub_100030B34((unint64_t *)&unk_1009E3B50, (uint64_t *)&unk_1009E3B10, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v31 = v41;
  v32 = Publisher<>.sink(receiveValue:)(sub_1005C5824, v29, v41, v30);
  v33 = swift_release(v29);
  (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v28, v31, v33);
  swift_beginAccess(v23, v43, 33, 0);
  AnyCancellable.store(in:)(v23);
  swift_endAccess(v43);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t sub_1005C532C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    KeyPath = swift_getKeyPath(&unk_100732458);
    v6 = swift_getKeyPath(&unk_100732480);
    v7 = 0;
    return static Published.subscript.setter(&v7, v4, KeyPath, v6);
  }
  return result;
}

void (*sub_1005C53A8(uint64_t a1, uint64_t a2))(_QWORD, _QWORD)
{
  uint64_t v2;
  void (*result)(_QWORD, _QWORD);
  void (*v4)(_QWORD, _QWORD);
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v8[32];
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = (void (*)(_QWORD, _QWORD))swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    KeyPath = swift_getKeyPath(&unk_100732458);
    v6 = swift_getKeyPath(&unk_100732480);
    result = (void (*)(_QWORD, _QWORD))static Published.subscript.modify(v8, v4, KeyPath, v6);
    if (__OFADD__(*v7, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v7;
      result(v8, 0);
      swift_release(v4);
      swift_release(KeyPath);
      return (void (*)(_QWORD, _QWORD))swift_release(v6);
    }
  }
  return result;
}

uint64_t sub_1005C5468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__coverImage;
  v2 = sub_10004CFD4(&qword_1009EEFC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__title;
  v4 = sub_10004CFD4(&qword_1009D19E0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__author, v4);
  v6 = v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__disabled;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__buyButtonProvider;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009DC000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__navigationAttemptsPastEnd;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_weakDestroy(v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_readerViewModel);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_cancellables));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005C55AC()
{
  return type metadata accessor for SampleHeaderViewModel(0);
}

uint64_t type metadata accessor for SampleHeaderViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EED90;
  if (!qword_1009EED90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SampleHeaderViewModel);
  return result;
}

void sub_1005C55F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  char *v19;

  sub_1005C5710(319);
  if (v3 <= 0x3F)
  {
    v12 = *(_QWORD *)(v2 - 8) + 64;
    sub_1001F1000(319, &qword_1009D1810, (uint64_t)&type metadata for String);
    if (v5 <= 0x3F)
    {
      v13 = *(_QWORD *)(v4 - 8) + 64;
      v14 = v13;
      sub_1001F1000(319, (unint64_t *)&qword_1009D1850, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v15 = *(_QWORD *)(v6 - 8) + 64;
        sub_1005C5764(319);
        if (v9 <= 0x3F)
        {
          v16 = *(_QWORD *)(v8 - 8) + 64;
          sub_1001F1000(319, (unint64_t *)&qword_1009D1828, (uint64_t)&type metadata for Int);
          if (v11 <= 0x3F)
          {
            v17 = *(_QWORD *)(v10 - 8) + 64;
            v18 = "\b";
            v19 = (char *)&value witness table for Builtin.BridgeObject + 64;
            swift_updateClassMetadata2(a1, 256, 8, &v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1005C5710(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EEDA0)
  {
    type metadata accessor for CGImage(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EEDA0);
  }
}

void sub_1005C5764(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D1870)
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009D4CE0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D1870);
  }
}

uint64_t sub_1005C57BC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for SampleHeaderViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005C57F8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C581C(uint64_t a1)
{
  uint64_t v1;

  return sub_1005C532C(a1, v1);
}

void (*sub_1005C5824(uint64_t a1))(_QWORD, _QWORD)
{
  uint64_t v1;

  return sub_1005C53A8(a1, v1);
}

uint64_t sub_1005C582C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007325C0);
  v5 = swift_getKeyPath(&unk_1007325E8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005C58A8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007325C0);
  v5 = swift_getKeyPath(&unk_1007325E8);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1005C591C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_100732578, (uint64_t)&unk_1007325A0, a2);
}

uint64_t sub_1005C5930(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_100732578, (uint64_t)&unk_1007325A0);
}

uint64_t sub_1005C5944@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_100732530, (uint64_t)&unk_100732558, a2);
}

uint64_t sub_1005C5958(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_100732530, (uint64_t)&unk_100732558);
}

uint64_t sub_1005C596C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007324E8);
  v5 = swift_getKeyPath(&unk_100732510);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005C59E8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007324E8);
  v5 = swift_getKeyPath(&unk_100732510);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005C5A58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007324A0);
  v5 = swift_getKeyPath(&unk_1007324C8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1005C5AC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _BYTE v7[40];
  _BYTE v8[40];

  sub_1001F1600(a1, (uint64_t)v8);
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007324A0);
  v5 = swift_getKeyPath(&unk_1007324C8);
  sub_1001F1600((uint64_t)v8, (uint64_t)v7);
  swift_retain(v3);
  static Published.subscript.setter(v7, v3, KeyPath, v5);
  return sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4CE0);
}

uint64_t sub_1005C5B50@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100732458);
  v5 = swift_getKeyPath(&unk_100732480);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005C5BD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100732458);
  v5 = swift_getKeyPath(&unk_100732480);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005C5C54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_100732530, (uint64_t)&unk_100732558, a2);
}

uint64_t sub_1005C5C78(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_100732530, (uint64_t)&unk_100732558);
}

uint64_t sub_1005C5C9C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005993EC(a1, (uint64_t)&unk_100732578, (uint64_t)&unk_1007325A0, a2);
}

uint64_t sub_1005C5CC0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100599478(a1, a2, a3, a4, (uint64_t)&unk_100732578, (uint64_t)&unk_1007325A0);
}

uint64_t sub_1005C5CEC(uint64_t a1, uint64_t a2)
{
  CGColorSpace *v4;
  NSData v5;
  CGDataProvider *v6;
  CGDataProvider *v7;
  CGImageRef v8;
  CGImageRef v9;
  uint64_t v10;
  uint64_t v11;
  CGImage *v12;
  _OWORD v14[2];
  uint64_t v15;

  v4 = CGColorSpaceCreateWithName(kCGColorSpaceGenericRGBLinear);
  v5.super.isa = Data._bridgeToObjectiveC()().super.isa;
  v6 = CGDataProviderCreateWithCFData(v5.super.isa);
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = v6;
  if (!v6)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v8 = CGImageCreate(1uLL, 1uLL, 8uLL, 0x20uLL, 4uLL, v4, 0x2002u, v6, 0, 1, kCGRenderingIntentDefault);
  if (!v8)
    goto LABEL_7;
  v9 = v8;
  v10 = type metadata accessor for SampleHeaderViewModel(0);
  memset(v14, 0, sizeof(v14));
  v15 = 0;
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = v9;
  sub_1005C4BE4(v12, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, (uint64_t)v14, a1, a2);

  return v11;
}

void PriceTrackingService.setupService<A>(priceTracker:addToWTRManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  sub_1005C7A54(a1, a3, v5);

}

void sub_1005C5EA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, id);
  id v7;

  v6 = *(void (**)(uint64_t, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, v7);
  swift_release(v5);

}

void sub_1005C5F08(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t ObjectType;
  id v20;
  id v21;
  Class isa;
  unint64_t v23;
  Class v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  _BYTE v32[24];
  objc_super v33;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void **)&v3[OBJC_IVAR___BKPriceTrackingService__bridge + 16];
  *(_QWORD *)&v3[OBJC_IVAR___BKPriceTrackingService__bridge + 16] = a1;
  v10 = a1;

  v11 = *(_QWORD *)&v3[OBJC_IVAR___BKPriceTrackingService__priceTracker + 16];
  *(_QWORD *)&v3[OBJC_IVAR___BKPriceTrackingService__priceTracker + 16] = a2;
  swift_retain(a2);
  swift_release(v11);
  v12 = (objc_class *)type metadata accessor for AppAddToWTRDelegate();
  v13 = objc_allocWithZone(v12);
  v14 = (void *)objc_opt_self(BKNotificationManager);
  v15 = objc_msgSend(v14, "sharedInstance", swift_retain(a2).n128_f64[0]);
  v16 = (char *)objc_allocWithZone(v12);
  v17 = swift_weakInit(&v16[OBJC_IVAR___BKAppAddToWTRDelegate_priceTracker], 0);
  swift_weakAssign(v17);
  *(_QWORD *)&v16[OBJC_IVAR___BKAppAddToWTRDelegate_notifications] = v15;
  v33.receiver = v16;
  v33.super_class = v12;
  v18 = objc_msgSendSuper2(&v33, "init");
  swift_release(a2);
  ObjectType = swift_getObjectType();
  swift_deallocPartialClassInstance(v13, ObjectType, 24, 7);
  swift_beginAccess(&v3[OBJC_IVAR___BKPriceTrackingService__addToWTRDelegate], v32, 33, 0);
  v20 = v18;
  sub_1005C85F4((uint64_t)v18);
  swift_endAccess(v32);

  v21 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v23 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
  v24 = Dictionary._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v21, "initWithValue:options:", isa, v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  if (v25)
  {
    swift_beginAccess(&v3[OBJC_IVAR___BKPriceTrackingService__stateChanges], v32, 33, 0);
    v26 = v25;
    sub_1005C85F4((uint64_t)v25);
    swift_endAccess(v32);

    v27 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
    v28 = (_QWORD *)swift_allocObject(&unk_100914F48, 48, 7);
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = a2;
    v28[5] = v3;
    swift_retain(a2);
    v29 = v3;
    v30 = sub_10030C02C((uint64_t)v8, (uint64_t)&unk_1009EF0A0, (uint64_t)v28);
    swift_release(v30);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005C61E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1005C61FC, 0, 0);
}

uint64_t sub_1005C61FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_allocObject(&unk_100914F70, 24, 7);
  *(_QWORD *)(v0 + 32) = v1;
  swift_unknownObjectWeakInit(v1 + 16);
  v2 = type metadata accessor for PriceTracker(0);
  v3 = sub_1005C88C4();
  swift_retain(v1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, v3);
  return swift_task_switch(sub_1005C6294, v4, v5);
}

uint64_t sub_1005C6294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  dispatch thunk of PriceTracker.setStateChangeHandler(_:)(&unk_1009EF0B0, v1);
  swift_release_n(v1, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C62E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_task_switch(sub_1005C62F8, 0, 0);
}

id sub_1005C62F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id result;
  id v12;
  unint64_t v13;
  void *v14;
  char *v15;
  Class isa;

  v1 = *(_QWORD *)(v0 + 136) + 16;
  swift_beginAccess(v1, v0 + 80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  v3 = (void *)Strong;
  v4 = (uint64_t *)(Strong + OBJC_IVAR___BKPriceTrackingService__stateChanges);
  swift_beginAccess(Strong + OBJC_IVAR___BKPriceTrackingService__stateChanges, v0 + 104, 0, 0);
  v5 = *v4;
  v6 = v4[1];
  v7 = (void *)v4[2];
  v8 = v7;
  swift_bridgeObjectRetain(v6);
  v9 = (void *)sub_10057EDCC(v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v6);

  if (!v9)
  {
LABEL_6:

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  result = objc_msgSend(v10, "getValue");
  if (result)
  {
    v12 = result;
    _bridgeAnyObjectToAny(_:)(result);
    swift_unknownObjectRelease(v12);
    sub_10004CFC4((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    v13 = sub_100218274();
    swift_dynamicCast(v0 + 128, v0 + 16, (char *)&type metadata for Any + 8, v13, 7);
    v14 = *(void **)(v0 + 128);
    v15 = (char *)objc_msgSend(v14, "integerValue");

    result = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      isa = Int._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v10, "updateValue:", isa);

      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id PriceTrackingService.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_super v10;
  char v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR___BKPriceTrackingService__bridge];
  *(_QWORD *)v2 = 0x656764697262;
  *((_QWORD *)v2 + 1) = 0xE600000000000000;
  *((_QWORD *)v2 + 2) = 0;
  v3 = &v0[OBJC_IVAR___BKPriceTrackingService__priceTracker];
  strcpy(&v0[OBJC_IVAR___BKPriceTrackingService__priceTracker], "priceTracker");
  v3[13] = 0;
  *((_WORD *)v3 + 7) = -5120;
  *((_QWORD *)v3 + 2) = 0;
  v4 = &v0[OBJC_IVAR___BKPriceTrackingService__addToWTRDelegate];
  *(_QWORD *)v4 = 0xD000000000000010;
  *((_QWORD *)v4 + 1) = 0x80000001007B2980;
  *((_QWORD *)v4 + 2) = 0;
  v5 = &v0[OBJC_IVAR___BKPriceTrackingService__stateChanges];
  strcpy(&v0[OBJC_IVAR___BKPriceTrackingService__stateChanges], "stateChanges");
  v5[13] = 0;
  *((_WORD *)v5 + 7) = -5120;
  *((_QWORD *)v5 + 2) = 0;
  v6 = OBJC_IVAR___BKPriceTrackingService_mutableSetupState;
  v11 = 0;
  v7 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = v0;
  *(_QWORD *)&v0[v6] = MutableObservableContainer.init(value:)(&v11);

  v10.receiver = v8;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t sub_1005C6674(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;

  v8[5] = v12;
  v8[6] = v13;
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[7] = v9;
  *v9 = v8;
  v9[1] = sub_1005C66E8;
  return v11(v8 + 8);
}

uint64_t sub_1005C66E8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_1005C673C, 0, 0);
}

uint64_t sub_1005C673C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  JSValue v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::Int v8;
  __n128 v9;
  Swift::OpaquePointer_optional v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v4.super.isa = *(Class *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_10004CFD4(&qword_1009D4B80);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v6 + 56) = &type metadata for Bool;
  *(_BYTE *)(v6 + 32) = *(_BYTE *)(v0 + 64);
  v11.value._rawValue = (void *)v6;
  v11.is_nil = v3;
  v7._countAndFlagsBits = v1;
  v7._object = v2;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v4, v11, v7, v8);
  v9 = swift_bridgeObjectRelease(v6);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

uint64_t sub_1005C67DC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;

  v8[7] = v12;
  v8[8] = v13;
  v8[5] = a7;
  v8[6] = a8;
  v8[4] = a6;
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[9] = v9;
  *v9 = v8;
  v9[1] = sub_1005C6850;
  return v11(v8 + 2);
}

uint64_t sub_1005C6850()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  return swift_task_switch(sub_1005C68A4, 0, 0);
}

uint64_t sub_1005C68A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  JSValue v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::Int v9;
  __n128 v10;
  Swift::OpaquePointer_optional v12;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v4.super.isa = *(Class *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = sub_10004CFD4(&qword_1009D4B80);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  v7 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v6 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  v12.value._rawValue = (void *)v6;
  v12.is_nil = v3;
  v8._countAndFlagsBits = v1;
  v8._object = v2;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v4, v12, v8, v9);
  swift_bridgeObjectRelease(v6);
  v10 = swift_bridgeObjectRelease(v7);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_1005C695C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;

  v8[5] = v12;
  v8[6] = v13;
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[7] = v9;
  *v9 = v8;
  v9[1] = sub_1005C69D0;
  return v11(v8 + 8);
}

uint64_t sub_1005C69D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_1005C6A24, 0, 0);
}

uint64_t sub_1005C6A24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  JSValue v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::Int v8;
  __n128 v9;
  Swift::OpaquePointer_optional v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v4.super.isa = *(Class *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_10004CFD4(&qword_1009D4B80);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v6 + 56) = sub_10004CFD4(&qword_1009DA1E8);
  *(_BYTE *)(v6 + 32) = *(_BYTE *)(v0 + 64);
  v11.value._rawValue = (void *)v6;
  v11.is_nil = v3;
  v7._countAndFlagsBits = v1;
  v7._object = v2;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v4, v11, v7, v8);
  v9 = swift_bridgeObjectRelease(v6);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

double (*PriceTrackingService.js_featureEnabled.getter())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914DE8, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7B74;
}

double sub_1005C6B3C(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge];
  v8 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 8];
  v9 = *(void **)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 16];
  v10 = v9;
  swift_bridgeObjectRetain(v8);
  v11 = (void *)sub_10057EDCC(v7, v8, v9);
  v12 = v11;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v11)
  {
    v14 = swift_allocObject(&unk_100915268, 24, 7);
    *(_QWORD *)(v14 + 16) = a2;
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject(&unk_100915290, 88, 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = &unk_1009EF128;
    v16[5] = v14;
    v16[6] = v12;
    v16[7] = a1;
    v16[8] = 0xD000000000000061;
    v16[9] = 0x80000001007D7510;
    v16[10] = 120;
    v17 = v12;
    v18 = a2;
    swift_retain(v14);
    v19 = a1;
    v20 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009EF130, (uint64_t)v16);

    swift_release(v14);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

void (*PriceTrackingService.js_addWeakStateChangeObserver.getter())(uint64_t a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914E10, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7B7C;
}

void (*PriceTrackingService.js_removeWeakStateChangeObserver.getter())(uint64_t a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914E38, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7B9C;
}

void sub_1005C6DBC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _BYTE v12[24];

  v5 = (uint64_t *)(a2 + OBJC_IVAR___BKPriceTrackingService__stateChanges);
  swift_beginAccess(a2 + OBJC_IVAR___BKPriceTrackingService__stateChanges, v12, 0, 0);
  v6 = *v5;
  v7 = v5[1];
  v8 = (void *)v5[2];
  v9 = v8;
  swift_bridgeObjectRetain(v7);
  v10 = (void *)sub_10057EDCC(v6, v7, v8);
  v11 = v10;

  swift_bridgeObjectRelease(v7);
  if (v10)
  {
    objc_msgSend(v11, *a3, a1);

  }
}

double (*PriceTrackingService.js_cardListString.getter())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914E60, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7BBC;
}

double sub_1005C6EE0(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge];
  v8 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 8];
  v9 = *(void **)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 16];
  v10 = v9;
  swift_bridgeObjectRetain(v8);
  v11 = (void *)sub_10057EDCC(v7, v8, v9);
  v12 = v11;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v11)
  {
    v14 = swift_allocObject(&unk_100915218, 24, 7);
    *(_QWORD *)(v14 + 16) = a2;
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject(&unk_100915240, 88, 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = &unk_1009EF108;
    v16[5] = v14;
    v16[6] = v12;
    v16[7] = a1;
    v16[8] = 0xD000000000000061;
    v16[9] = 0x80000001007D7510;
    v16[10] = 134;
    v17 = v12;
    v18 = a2;
    swift_retain(v14);
    v19 = a1;
    v20 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009EF118, (uint64_t)v16);

    swift_release(v14);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double (*PriceTrackingService.js_notificationsEnabled.getter())(void *a1)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914E88, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7BC4;
}

double sub_1005C70EC(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge];
  v8 = *(_QWORD *)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 8];
  v9 = *(void **)&a2[OBJC_IVAR___BKPriceTrackingService__bridge + 16];
  v10 = v9;
  swift_bridgeObjectRetain(v8);
  v11 = (void *)sub_10057EDCC(v7, v8, v9);
  v12 = v11;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (v11)
  {
    v14 = swift_allocObject(&unk_1009151C8, 24, 7);
    *(_QWORD *)(v14 + 16) = a2;
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject(&unk_1009151F0, 88, 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = &unk_1009EF0E8;
    v16[5] = v14;
    v16[6] = v12;
    v16[7] = a1;
    v16[8] = 0xD000000000000061;
    v16[9] = 0x80000001007D7510;
    v16[10] = 140;
    v17 = v12;
    v18 = a2;
    swift_retain(v14);
    v19 = a1;
    v20 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009EF0F8, (uint64_t)v16);

    swift_release(v14);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double (*PriceTrackingService.js_setNotificationsEnabled.getter())(char a1, void *a2)
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject(&unk_100914EB0, 24, 7) + 16) = v0;
  v1 = v0;
  return sub_1005C7BCC;
}

double sub_1005C72F8(char a1, void *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&a3[OBJC_IVAR___BKPriceTrackingService__bridge];
  v10 = *(_QWORD *)&a3[OBJC_IVAR___BKPriceTrackingService__bridge + 8];
  v11 = *(void **)&a3[OBJC_IVAR___BKPriceTrackingService__bridge + 16];
  v12 = v11;
  swift_bridgeObjectRetain(v10);
  v13 = (void *)sub_10057EDCC(v9, v10, v11);
  v14 = v13;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  if (v13)
  {
    v16 = swift_allocObject(&unk_100915178, 25, 7);
    *(_QWORD *)(v16 + 16) = a3;
    *(_BYTE *)(v16 + 24) = a1 & 1;
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject(&unk_1009151A0, 88, 7);
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = &unk_1009EF0C8;
    v18[5] = v16;
    v18[6] = v14;
    v18[7] = a2;
    v18[8] = 0xD000000000000061;
    v18[9] = 0x80000001007D7510;
    v18[10] = 146;
    v19 = v14;
    v20 = a3;
    swift_retain(v16);
    v21 = a2;
    v22 = sub_10030C02C((uint64_t)v8, (uint64_t)&unk_1009EF0D8, (uint64_t)v18);

    swift_release(v16);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005C749C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1005C74B4, 0, 0);
}

uint64_t sub_1005C74B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKPriceTrackingService__priceTracker);
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  swift_retain(v4);
  swift_bridgeObjectRetain(v2);
  v5 = sub_10057EDCC(v3, v2, v4);
  *(_QWORD *)(v0 + 32) = v5;
  swift_retain(v5);
  swift_bridgeObjectRelease(v2);
  v6 = swift_release(v4);
  if (v5)
  {
    v9 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter
                           + async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter);
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter
                                    + 1));
    *(_QWORD *)(v0 + 40) = v7;
    *v7 = v0;
    v7[1] = sub_1005C758C;
    return v9();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
}

uint64_t sub_1005C758C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  swift_release(v3);
  return swift_task_switch(sub_1005C75F0, 0, 0);
}

uint64_t sub_1005C75F0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C7604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1005C761C, 0, 0);
}

uint64_t sub_1005C761C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  _QWORD *v9;
  uint64_t (*v10)(void);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKPriceTrackingService__priceTracker);
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  swift_retain(v4);
  swift_bridgeObjectRetain(v2);
  v5 = sub_10057EDCC(v3, v2, v4);
  *(_QWORD *)(v0 + 32) = v5;
  swift_retain(v5);
  swift_bridgeObjectRelease(v2);
  v6 = swift_release(v4);
  if (v5)
  {
    v10 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.cardListString.getter
                            + async function pointer to dispatch thunk of PriceTracker.cardListString.getter);
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.cardListString.getter
                                    + 1));
    *(_QWORD *)(v0 + 40) = v7;
    *v7 = v0;
    v7[1] = sub_1005C76F8;
    return v10();
  }
  else
  {
    v9 = *(_QWORD **)(v0 + 16);
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
}

uint64_t sub_1005C76F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  v4 = *(_QWORD *)(*v2 + 40);
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = a2;
  swift_task_dealloc(v4);
  swift_release(v5);
  return swift_task_switch(sub_1005C775C, 0, 0);
}

uint64_t sub_1005C775C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 16);
  *v2 = *(_QWORD *)(v0 + 48);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005C7770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1005C7788, 0, 0);
}

uint64_t sub_1005C7788()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKPriceTrackingService__priceTracker);
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  swift_retain(v4);
  swift_bridgeObjectRetain(v2);
  v5 = sub_10057EDCC(v3, v2, v4);
  *(_QWORD *)(v0 + 32) = v5;
  swift_retain(v5);
  swift_bridgeObjectRelease(v2);
  v6 = swift_release(v4);
  if (v5)
  {
    v9 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter
                           + async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter);
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter
                                    + 1));
    *(_QWORD *)(v0 + 40) = v7;
    *v7 = v0;
    v7[1] = sub_1005C7860;
    return v9();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
}

uint64_t sub_1005C7860(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  swift_release(v3);
  return swift_task_switch(sub_1005C8DB0, 0, 0);
}

uint64_t sub_1005C78C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 48) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return swift_task_switch(sub_1005C78E0, 0, 0);
}

uint64_t sub_1005C78E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKPriceTrackingService__priceTracker);
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  swift_retain(v4);
  swift_bridgeObjectRetain(v2);
  v5 = sub_10057EDCC(v3, v2, v4);
  *(_QWORD *)(v0 + 32) = v5;
  swift_retain(v5);
  swift_bridgeObjectRelease(v2);
  v6 = swift_release(v4);
  if (v5)
  {
    v9 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:)
                                        + async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:));
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:)
                                    + 1));
    *(_QWORD *)(v0 + 40) = v7;
    *v7 = v0;
    v7[1] = sub_1005C79CC;
    return v9(*(unsigned __int8 *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
}

uint64_t sub_1005C79CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  swift_release(v1);
  return swift_task_switch(sub_1005C7A28, 0, 0);
}

uint64_t sub_1005C7A28()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PriceTrackingService.setupState.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKPriceTrackingService_mutableSetupState));
}

uint64_t sub_1005C7A54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  _BYTE v14[24];

  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  sub_1005C5F08(a3, a1);
  v7 = (uint64_t *)(v3 + OBJC_IVAR___BKPriceTrackingService__addToWTRDelegate);
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  v9 = v7[1];
  v10 = (void *)v7[2];
  v11 = v10;
  swift_bridgeObjectRetain(v9);
  v12 = (id)sub_10057EDCC(v8, v9, v10);

  swift_bridgeObjectRelease(v9);
  objc_msgSend((id)swift_getObjCClassFromMetadata(a2), "setAddToWTRDelegate:", v12);

  return MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
}

uint64_t sub_1005C7B50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1005C7B74(void *a1)
{
  uint64_t v1;

  return sub_1005C6B3C(a1, *(char **)(v1 + 16));
}

void sub_1005C7B7C(uint64_t a1)
{
  uint64_t v1;

  sub_1005C6DBC(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_addWeakObserver_);
}

void sub_1005C7B9C(uint64_t a1)
{
  uint64_t v1;

  sub_1005C6DBC(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_removeWeakObserver_);
}

double sub_1005C7BBC(void *a1)
{
  uint64_t v1;

  return sub_1005C6EE0(a1, *(char **)(v1 + 16));
}

double sub_1005C7BC4(void *a1)
{
  uint64_t v1;

  return sub_1005C70EC(a1, *(char **)(v1 + 16));
}

double sub_1005C7BCC(char a1, void *a2)
{
  uint64_t v2;

  return sub_1005C72F8(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1005C7BD4()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR___BKPriceTrackingService_mutableSetupState));
}

uint64_t type metadata accessor for PriceTrackingService()
{
  return objc_opt_self(BKPriceTrackingService);
}

uint64_t sub_1005C7C08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100732660;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_1005C7C80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 16) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain(v12);
  }
  else
  {
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
    v15 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain(v13);
    if (v16(v15, 1, v4))
    {
      memcpy(v14, v15, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v14, v15, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1005C7D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1005C7E10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  size_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  v9 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_bridgeObjectRetain(v4);
  if (v10(v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v11 = *(_QWORD *)(v6 + 64);
    else
      v11 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(v8, v9, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
  }
  return a1;
}

_QWORD *sub_1005C7ED0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)a1 + v10 + 16) & ~v10);
  v12 = (void *)(((unint64_t)a2 + v10 + 16) & ~v10);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v14 = v13(v11, 1, v8);
  v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, v12, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v16);
  return a1;
}

_OWORD *sub_1005C7FF8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 16) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 16) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1005C80B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)a1 + v10 + 16) & ~v10);
  v12 = (void *)(((unint64_t)a2 + v10 + 16) & ~v10);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v14 = v13(v11, 1, v8);
  v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v16);
  return a1;
}

uint64_t sub_1005C81CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 16) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v9 + 16) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *(_QWORD *)(a1 + 8);
        if (v17 >= 0xFFFFFFFF)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_1005C8348(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = &_mh_execute_header.magic + 1;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = &dword_100000004;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_1005C859C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1005C85A4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1005C85C4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1005C85CC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1005C85DC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for LogWhenNil(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LogWhenNil);
}

void sub_1005C85F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  if (!a1)
  {
    v5 = *v1;
    v4 = v1[1];
    v6 = qword_1009CDD98;
    swift_bridgeObjectRetain(v2[1]);
    if (v6 != -1)
      swift_once(&qword_1009CDD98, sub_100289C70);
    v7 = type metadata accessor for Logger(0);
    sub_100048F64(v7, (uint64_t)qword_100A1E410);
    swift_bridgeObjectRetain(v4);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v14 = v12;
      *(_DWORD *)v11 = 136446210;
      swift_bridgeObjectRetain(v4);
      v13 = sub_100040F58(v5, v4, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(v4, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[set] Missing new value for %{public}s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v4, 2);
    }
  }

  v2[2] = a1;
}

uint64_t sub_1005C87B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005C87E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1009EF09C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000AE34;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1005C61FC, 0, 0);
}

uint64_t sub_1005C8844()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C8868()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1009EF0AC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1001FC2C4;
  v2[17] = v0;
  return swift_task_switch(sub_1005C62F8, 0, 0);
}

unint64_t sub_1005C88C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF0B8;
  if (!qword_1009EF0B8)
  {
    v1 = type metadata accessor for PriceTracker(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PriceTracker, v1);
    atomic_store(result, &qword_1009EF0B8);
  }
  return result;
}

uint64_t sub_1005C890C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1005C8930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = swift_task_alloc(dword_1009EF0C4);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1001FC2C4;
  *(_BYTE *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v4;
  return swift_task_switch(sub_1005C78E0, 0, 0);
}

uint64_t sub_1005C89A8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v8;

  v2 = *(int **)(v0 + 32);
  v8 = *(_OWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_task_alloc(dword_1009EF0D4);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v4 + 48) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = v8;
  *(_QWORD *)&v8 = (char *)v2 + *v2;
  v6 = (uint64_t *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v4 + 56) = v6;
  *v6 = v4;
  v6[1] = (uint64_t)sub_1005C69D0;
  return ((uint64_t (*)(uint64_t))v8)(v4 + 64);
}

uint64_t sub_1005C8A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EF0E4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1005C7788, 0, 0);
}

uint64_t sub_1005C8AC4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v8;

  v2 = *(int **)(v0 + 32);
  v8 = *(_OWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_task_alloc(dword_1009EF0F4);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v4 + 48) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = v8;
  *(_QWORD *)&v8 = (char *)v2 + *v2;
  v6 = (uint64_t *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v4 + 56) = v6;
  *v6 = v4;
  v6[1] = (uint64_t)sub_1005C66E8;
  return ((uint64_t (*)(uint64_t))v8)(v4 + 64);
}

uint64_t sub_1005C8B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EF104);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1005C761C, 0, 0);
}

uint64_t sub_1005C8BE0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v8;

  v2 = *(int **)(v0 + 32);
  v8 = *(_OWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_task_alloc(dword_1009EF114);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v4 + 64) = v3;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v8;
  *(_QWORD *)&v8 = (char *)v2 + *v2;
  v6 = (uint64_t *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v4 + 72) = v6;
  *v6 = v4;
  v6[1] = (uint64_t)sub_1005C6850;
  return ((uint64_t (*)(uint64_t))v8)(v4 + 16);
}

uint64_t sub_1005C8C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EF124);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1005C74B4, 0, 0);
}

uint64_t sub_1005C8CFC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1005C8DB4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007326F0);
  v2 = swift_getKeyPath(&unk_100732718);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1005C8E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void **)(Strong + 16);
    if (v4)
    {
      v5 = v4;
      v6 = (void *)sub_100014D70();

    }
    else
    {
      v6 = 0;
    }
    v7 = *(void **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v6;
    v8 = v6;
    sub_1000187F4(v7);
    swift_release(v3);

  }
}

uint64_t sub_1005C8EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_1005C8F1C();
    return swift_release(v3);
  }
  return result;
}

void sub_1005C8F1C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1005C91D4();

  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath(&unk_1007326F0);
  v6 = swift_getKeyPath(&unk_100732718);
  static Published.subscript.getter(&v13, v1, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v13;
  if (v4)
  {
    if (v13)
    {
      sub_100009E04(0, (unint64_t *)&unk_1009DC2F0, UIResponder_ptr);
      v8 = v4;
      v9 = v7;
      v10 = static NSObject.== infix(_:_:)(v8, v9);

      if ((v10 & 1) != 0)
      {

        return;
      }
    }
  }
  else
  {
    if (!v13)
      return;

  }
  v11 = swift_getKeyPath(&unk_1007326F0);
  v12 = swift_getKeyPath(&unk_100732718);
  v13 = v4;
  swift_retain(v1);
  static Published.subscript.setter(&v13, v1, v11, v12);
}

uint64_t sub_1005C9060(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v14[3] = sub_100009E04(0, &qword_1009EB330, &off_1008E5170);
  v14[0] = v2;
  v6 = swift_allocObject(&unk_1009152E8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (void *)objc_opt_self(NSOperationQueue);
  v8 = v2;
  swift_retain(a2);
  v9 = objc_msgSend(v7, "mainQueue", v14[0]);
  v10 = swift_allocObject(&unk_100915310, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_10004DE04;
  *(_QWORD *)(v10 + 24) = v6;
  swift_retain(v6);
  v11 = sub_10004AAC4((uint64_t)CFSTR("BKPresentedAssetVCDidChangeNotificationName"), (uint64_t)v14, (uint64_t)v9, (uint64_t)sub_1004BAAD8, v10);
  swift_release(v6);

  swift_release(v10);
  sub_10004A7B8((uint64_t)v14);
  v12 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return AnyCancellable.init(_:)(j___s7Combine14AnyCancellableC6cancelyyF, v11);
}

void *sub_1005C91D4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  __objc2_prot *v61;
  id v62;
  uint64_t v63;

  if (objc_msgSend(v0, "assetState") != (id)2)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v25 = type metadata accessor for Logger(0);
    sub_100048F64(v25, (uint64_t)qword_1009EF140);
    v26 = v0;
    v5 = Logger.logObject.getter(v26);
    v30 = static os_log_type_t.debug.getter(v5, v27, v28, v29);
    if (!os_log_type_enabled(v5, v30))
    {

      return 0;
    }
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v31 = 134217984;
    v62 = objc_msgSend(v26, "assetState");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v31 + 4, v31 + 12);

    _os_log_impl((void *)&_mh_execute_header, v5, v30, "incorrect asset state: %ld", v31, 0xCu);
    v32 = v31;
LABEL_39:
    swift_slowDealloc(v32, -1, -1);
    goto LABEL_40;
  }
  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_35:
    swift_bridgeObjectRelease(v3);
LABEL_36:
    if (qword_1009CE9F8 == -1)
    {
LABEL_37:
      v53 = type metadata accessor for Logger(0);
      v54 = sub_100048F64(v53, (uint64_t)qword_1009EF140);
      v5 = Logger.logObject.getter(v54);
      v58 = static os_log_type_t.debug.getter(v5, v55, v56, v57);
      if (!os_log_type_enabled(v5, v58))
        goto LABEL_40;
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v58, "no transitioning VC", v59, 2u);
      v32 = v59;
      goto LABEL_39;
    }
LABEL_45:
    swift_once(&qword_1009CE9F8, sub_100009C18);
    goto LABEL_37;
  }
  if (v3 < 0)
    v51 = v3;
  else
    v51 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v52 = _CocoaArrayWrapper.endIndex.getter(v51);
  swift_bridgeObjectRelease(v3);
  if (!v52)
    goto LABEL_35;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_45;
    }
    v4 = *(id *)(v3 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v6 = objc_opt_self(BKTransitioningViewController);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (!v7)
  {

    goto LABEL_36;
  }
  v8 = objc_msgSend(v7, "contentViewController");
  if (!v8)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048F64(v33, (uint64_t)qword_1009EF140);
    v35 = Logger.logObject.getter(v34);
    v39 = static os_log_type_t.debug.getter(v35, v36, v37, v38);
    if (os_log_type_enabled(v35, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v39, "no content VC", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }
    goto LABEL_28;
  }
  v9 = v8;
  v61 = &OBJC_PROTOCOL___BCAppIntentsAssetViewController;
  v10 = swift_dynamicCastObjCProtocolConditional(v8, 1, &v61);
  v11 = qword_1009CE9F8;
  if (!v10)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v41 = type metadata accessor for Logger(0);
    sub_100048F64(v41, (uint64_t)qword_1009EF140);
    v42 = v9;
    v35 = Logger.logObject.getter(v42);
    v46 = static os_log_type_t.debug.getter(v35, v43, v44, v45);
    if (os_log_type_enabled(v35, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v47 = 138412290;
      v62 = v42;
      v49 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v47 + 4, v47 + 12);
      *v48 = v9;

      _os_log_impl((void *)&_mh_execute_header, v35, v46, "content VC %@ is not a AppIntentsAssetVC", v47, 0xCu);
      v50 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v48, 1, v50);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

LABEL_28:
LABEL_40:

      return 0;
    }

    return 0;
  }
  v12 = (void *)v10;
  v13 = v9;
  if (v11 != -1)
    swift_once(&qword_1009CE9F8, sub_100009C18);
  v14 = type metadata accessor for Logger(0);
  sub_100048F64(v14, (uint64_t)qword_1009EF140);
  v15 = v13;
  v16 = Logger.logObject.getter(v15);
  v20 = static os_log_type_t.debug.getter(v16, v17, v18, v19);
  if (os_log_type_enabled(v16, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v21 = 138412290;
    v62 = v12;
    v23 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v21 + 4, v21 + 12);
    *v22 = v12;

    _os_log_impl((void *)&_mh_execute_header, v16, v20, "found AppIntentsAssetVC: %@", v21, 0xCu);
    v24 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v22, 1, v24);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  return v12;
}

uint64_t sub_1005C9870()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker__viewController;
  v2 = sub_10004CFD4(&qword_1009EF250);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(id *)((char *)v0
                      + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_assetPresenterTask));
  swift_release(*(id *)((char *)v0
                      + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_viewControllerTask));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1005C98F4()
{
  return type metadata accessor for WindowAppIntentsAssetViewControllerTracker(0);
}

uint64_t sub_1005C98FC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005C9920()
{
  uint64_t v0;

  sub_1005C8E24(v0);
}

uint64_t sub_1005C9928@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007326F0);
  v5 = swift_getKeyPath(&unk_100732718);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005C99A4(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007326F0);
  v5 = swift_getKeyPath(&unk_100732718);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1005C9A18(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;

  v4 = (void *)objc_opt_self(NSNotificationCenter);
  v5 = objc_msgSend(v4, "defaultCenter");
  v19 = 0u;
  v20 = 0u;
  v6 = swift_allocObject(&unk_100915338, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (void *)objc_opt_self(NSOperationQueue);
  swift_retain(a2);
  v8 = objc_msgSend(v7, "mainQueue", v19, v20);
  v9 = swift_allocObject(&unk_100915360, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100258E34;
  *(_QWORD *)(v9 + 24) = v6;
  swift_retain(v6);
  v10 = sub_10004AAC4((uint64_t)CFSTR("BKAssetPresentingBookOpenComplete"), (uint64_t)&v19, (uint64_t)v8, (uint64_t)sub_1004BAB1C, v9);

  swift_release(v6);
  swift_release(v9);
  sub_10004A7B8((uint64_t)&v19);
  v11 = objc_msgSend(v4, "defaultCenter");
  v19 = 0u;
  v20 = 0u;
  v12 = swift_allocObject(&unk_100915388, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_retain(a2);
  v13 = objc_msgSend(v7, "mainQueue");
  v14 = swift_allocObject(&unk_1009153B0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100258E34;
  *(_QWORD *)(v14 + 24) = v12;
  swift_retain(v12);
  v15 = sub_10004AAC4((uint64_t)CFSTR("BKBookDidCloseNotificationName"), (uint64_t)&v19, (uint64_t)v13, (uint64_t)sub_1004BAB1C, v14);

  swift_release(v12);
  swift_release(v14);
  sub_10004A7B8((uint64_t)&v19);
  v16 = swift_allocObject(&unk_1009153D8, 32, 7);
  *(_QWORD *)(v16 + 16) = v10;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  return AnyCancellable.init(_:)(sub_1005C9CD8, v16);
}

uint64_t sub_1005C9C74()
{
  uint64_t v0;

  return sub_1005C8EC8(v0);
}

uint64_t sub_1005C9C88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005C9CAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005C9CD8()
{
  AnyCancellable.cancel()();
  AnyCancellable.cancel()();
}

void sub_1005C9D18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t i;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  _OWORD v47[2];
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  _QWORD *v51;

  v3 = a1 + 64;
  v2 = *(_QWORD *)(a1 + 64);
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v51 = _swiftEmptyDictionarySingleton;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v2;
  v7 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  i = 0;
  v9 = (char *)&type metadata for Any + 8;
  v38 = v7;
  if (v6)
    goto LABEL_8;
LABEL_9:
  while (2)
  {
    v12 = i + 1;
    if (!__OFADD__(i, 1))
    {
      if (v12 < v7)
      {
        v13 = *(_QWORD *)(v3 + 8 * v12);
        v14 = i + 1;
        if (v13)
          goto LABEL_24;
        v14 = i + 2;
        if (i + 2 >= v7)
          goto LABEL_41;
        v13 = *(_QWORD *)(v3 + 8 * v14);
        if (v13)
          goto LABEL_24;
        v14 = i + 3;
        if (i + 3 >= v7)
          goto LABEL_41;
        v13 = *(_QWORD *)(v3 + 8 * v14);
        if (v13)
          goto LABEL_24;
        v14 = i + 4;
        if (i + 4 >= v7)
          goto LABEL_41;
        v13 = *(_QWORD *)(v3 + 8 * v14);
        if (v13)
        {
LABEL_24:
          v6 = (v13 - 1) & v13;
          v11 = __clz(__rbit64(v13)) + (v14 << 6);
          for (i = v14; ; v11 = v10 | (i << 6))
          {
            v16 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
            sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v49 + 8);
            *(_QWORD *)&v49[0] = v16;
            v47[0] = v49[0];
            v47[1] = v49[1];
            v48 = v50;
            sub_10004CD0C((uint64_t)v47 + 8, (uint64_t)&v45);
            v17 = v16;
            if ((swift_dynamicCast(&v39, &v45, v9, &type metadata for AnyHashable, 6) & 1) == 0)
              break;
            if (!*((_QWORD *)&v40 + 1))
              goto LABEL_7;
            v18 = v3;
            v42 = v39;
            v43 = v40;
            v19 = *(_QWORD *)&v47[0];
            v44 = v41;
            v45 = *(_QWORD *)&v47[0];
            sub_10004CFC4((_OWORD *)((char *)v47 + 8), v46);
            v20 = v51;
            v21 = v51[2];
            if (v51[3] <= v21)
            {
              sub_10037DBF8(v21 + 1, 1);
              v20 = v51;
            }
            v22 = v20[5];
            v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
            v25 = v24;
            Hasher.init(_seed:)(&v39, v22);
            String.hash(into:)(&v39, v23, v25);
            v26 = Hasher._finalize()();
            swift_bridgeObjectRelease(v25);
            v27 = v20 + 8;
            v28 = -1 << *((_BYTE *)v20 + 32);
            v29 = v26 & ~v28;
            v30 = v29 >> 6;
            if (((-1 << v29) & ~v20[(v29 >> 6) + 8]) != 0)
            {
              v31 = __clz(__rbit64((-1 << v29) & ~v20[(v29 >> 6) + 8])) | v29 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v32 = 0;
              v33 = (unint64_t)(63 - v28) >> 6;
              do
              {
                if (++v30 == v33 && (v32 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_42;
                }
                v34 = v30 == v33;
                if (v30 == v33)
                  v30 = 0;
                v32 |= v34;
                v35 = v27[v30];
              }
              while (v35 == -1);
              v31 = __clz(__rbit64(~v35)) + (v30 << 6);
            }
            *(_QWORD *)((char *)v27 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
            *(_QWORD *)(v20[6] + 8 * v31) = v19;
            v36 = v20[7] + 40 * v31;
            v37 = v43;
            *(_OWORD *)v36 = v42;
            *(_OWORD *)(v36 + 16) = v37;
            *(_QWORD *)(v36 + 32) = v44;
            ++v20[2];
            _s5Books15CurrentPageViewVwxx_0(v46);
            v3 = v18;
            v7 = v38;
            v9 = (char *)&type metadata for Any + 8;
            if (!v6)
              goto LABEL_9;
LABEL_8:
            v10 = __clz(__rbit64(v6));
            v6 &= v6 - 1;
          }
          v41 = 0;
          v39 = 0u;
          v40 = 0u;
LABEL_7:
          sub_100010960((uint64_t)v47, &qword_1009EF340);
          sub_100010960((uint64_t)&v39, (uint64_t *)&unk_1009EC670);
          if (!v6)
            continue;
          goto LABEL_8;
        }
        v15 = i + 5;
        if (i + 5 < v7)
        {
          v13 = *(_QWORD *)(v3 + 8 * v15);
          if (v13)
          {
            v14 = i + 5;
            goto LABEL_24;
          }
          while (1)
          {
            v14 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_43;
            if (v14 >= v7)
              break;
            v13 = *(_QWORD *)(v3 + 8 * v14);
            ++v15;
            if (v13)
              goto LABEL_24;
          }
        }
      }
LABEL_41:
      sub_100299C3C(a1);
      return;
    }
    break;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_1005CA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;

  v7[6] = a4;
  v7[7] = a5;
  v9 = (_QWORD *)swift_task_alloc(dword_1009EF31C);
  v7[8] = v9;
  *v9 = v7;
  v9[1] = sub_1005CA150;
  return sub_1005CAC48(a7, 0, (uint64_t)sub_1005CA414, 0);
}

uint64_t sub_1005CA150(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1005CA238;
  }
  else
  {
    *(_QWORD *)(v4 + 80) = a1;
    v6 = sub_1005CA1C4;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005CA1C4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 48);
  swift_bridgeObjectRetain(v1);
  swift_errorRetain(0);
  v2(v1, 0);
  swift_errorRelease(0);
  swift_bridgeObjectRelease(v1);
  swift_errorRelease(0);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CA238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD, uint64_t);
  __n128 v11;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = static os_log_type_t.error.getter(a1);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.readingActivity.getter();
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  swift_getErrorValue(v2, v1 + 40, v1 + 16);
  v7 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  v9 = v8;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_10002BE50();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Error fetching BSUIAsset finished assets IDs: %@", 48, 2, v6);
  swift_bridgeObjectRelease(v6);

  v10 = *(void (**)(_QWORD, uint64_t))(v1 + 48);
  swift_errorRetain(v2);
  v10(0, v2);
  swift_errorRelease(v2);
  swift_bridgeObjectRelease(0);
  swift_errorRelease(v2);
  v11 = swift_bridgeObjectRelease(0);
  return (*(uint64_t (**)(__n128))(v1 + 8))(v11);
}

uint64_t sub_1005CA384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t *v5;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc(dword_1009EF25C);
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1001FC2C4;
  *(_OWORD *)(v3 + 48) = v4;
  v5 = (uint64_t *)swift_task_alloc(dword_1009EF31C);
  *(_QWORD *)(v3 + 64) = v5;
  *v5 = v3;
  v5[1] = (uint64_t)sub_1005CA150;
  return sub_1005CAC48(v2, 0, (uint64_t)sub_1005CA414, 0);
}

void sub_1005CA414(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];
  _OWORD v49[3];
  _OWORD v50[3];
  _QWORD *v51;
  _BYTE v52[40];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _QWORD *v56;

  v2 = objc_msgSend(objc_allocWithZone((Class)BSUIAsset), "initWithLibraryAsset:", a1);
  v3 = objc_msgSend(v2, "toDictionary");

  type metadata accessor for BSUIAssetKey(0);
  v5 = v4;
  v6 = sub_100008DB0(&qword_1009D0C98, (uint64_t (*)(uint64_t))type metadata accessor for BSUIAssetKey, (uint64_t)&unk_10070EF5C);
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, v5, (char *)&type metadata for Any + 8, v6);

  sub_1005C9D18(v7);
  v9 = v8;
  swift_bridgeObjectRelease(v7);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v56 = _swiftEmptyArrayStorage;
    sub_100366EC0(0, v10, 0);
    v12 = sub_1005CBB88(v9);
    v13 = 0;
    v14 = v9 + 64;
    v43 = v9 + 64;
    v15 = *(_BYTE *)(v9 + 32);
    v39 = v9 + 80;
    v44 = v9;
    v41 = v10;
    v42 = v11;
    do
    {
      if (v12 < 0 || v12 >= 1 << v15)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        swift_unexpectedError(v12, "Swift/Dictionary.swift", 22, 1, 489);
        __break(1u);
        return;
      }
      v18 = (unint64_t)v12 >> 6;
      if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v9 + 36) != v11)
        goto LABEL_30;
      v19 = *(_QWORD **)(*(_QWORD *)(v9 + 48) + 8 * v12);
      sub_1000569E0(*(_QWORD *)(v9 + 56) + 40 * v12, (uint64_t)v52);
      v51 = v19;
      *(_QWORD *)&v50[0] = v19;
      sub_1000569E0((uint64_t)v52, (uint64_t)v50 + 8);
      v49[0] = v50[0];
      v49[1] = v50[1];
      v49[2] = v50[2];
      v20 = v19;
      sub_100010960((uint64_t)&v51, (uint64_t *)&unk_1009EF320);
      v21 = *(_QWORD *)&v49[0];
      v47 = *(_QWORD *)&v49[0];
      sub_1000569E0((uint64_t)v49 + 8, (uint64_t)v48);
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;
      sub_1000569E0((uint64_t)v49 + 8, (uint64_t)v45);
      v53 = v45[0];
      v54 = v45[1];
      v55 = v46;
      sub_1000569AC((uint64_t)v48);
      sub_100010960((uint64_t)v49, (uint64_t *)&unk_1009EF320);
      v25 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
      {
        sub_100366EC0(0, v25[2] + 1, 1);
        v25 = v56;
      }
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
      {
        sub_100366EC0(v26 > 1, v27 + 1, 1);
        v25 = v56;
      }
      v25[2] = v27 + 1;
      v28 = &v25[7 * v27];
      v28[4] = v22;
      v28[5] = v24;
      v29 = v53;
      v30 = v54;
      v28[10] = v55;
      *((_OWORD *)v28 + 3) = v29;
      *((_OWORD *)v28 + 4) = v30;
      v9 = v44;
      v15 = *(_BYTE *)(v44 + 32);
      v16 = 1 << v15;
      if (v12 >= 1 << v15)
        goto LABEL_31;
      v14 = v43;
      v31 = *(_QWORD *)(v43 + 8 * v18);
      if ((v31 & (1 << v12)) == 0)
        goto LABEL_32;
      v11 = v42;
      if (*(_DWORD *)(v44 + 36) != v42)
        goto LABEL_33;
      v32 = v31 & (-2 << (v12 & 0x3F));
      if (v32)
      {
        v16 = __clz(__rbit64(v32)) | v12 & 0xFFFFFFFFFFFFFFC0;
        v17 = v41;
      }
      else
      {
        v33 = v18 + 1;
        v34 = (v16 + 63) >> 6;
        v17 = v41;
        if (v18 + 1 < v34)
        {
          v35 = *(_QWORD *)(v43 + 8 * v33);
          if (v35)
          {
LABEL_22:
            v16 = __clz(__rbit64(v35)) + (v33 << 6);
          }
          else
          {
            while (v34 - 2 != v18)
            {
              v35 = *(_QWORD *)(v39 + 8 * v18++);
              if (v35)
              {
                v33 = v18 + 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      ++v13;
      v12 = v16;
    }
    while (v13 != v17);
    swift_bridgeObjectRelease(v44);
    v36 = v25[2];
    if (!v36)
      goto LABEL_26;
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v25 = _swiftEmptyArrayStorage;
    v36 = _swiftEmptyArrayStorage[2];
    if (!v36)
    {
LABEL_26:
      v37 = _swiftEmptyDictionarySingleton;
      goto LABEL_27;
    }
  }
  sub_10004CFD4(&qword_1009DDEF0);
  v37 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v36);
LABEL_27:
  v51 = v37;
  swift_bridgeObjectRetain(v25);
  sub_1005CB7A8(v38, 1, &v51);
  swift_bridgeObjectRelease(v25);
  *a2 = v51;
}

uint64_t sub_1005CA868(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 128) = a2;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a3;
  v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  *(_QWORD *)(v5 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005CA8D0, 0, 0);
}

uint64_t sub_1005CA8D0()
{
  uint64_t v0;
  int v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  Class v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = *(unsigned __int8 *)(v0 + 128);
  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateFor_All_Marked_As_Finished_LibraryAssets_In_Year:", *(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 16) = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v3 = sub_10004CFD4(&qword_1009DF300);
  String.init<A>(describing:)(v0 + 16, v3);
  v5 = v4;
  v6 = objc_allocWithZone((Class)NSFetchRequest);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithEntityName:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);
  *(_QWORD *)(v0 + 96) = v8;

  objc_msgSend(v8, "setPredicate:", v2);
  sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setSortDescriptors:", isa);

  if (v1 == 1)
  {
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", v10);

  }
  v12 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v16 = (_QWORD *)swift_allocObject(&unk_100915568, 40, 7);
  *(_QWORD *)(v0 + 104) = v16;
  v16[2] = v8;
  v16[3] = v15;
  v16[4] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v13);
  v17 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v18 = v8;
  swift_retain(v14);
  v19 = (_QWORD *)swift_task_alloc(v17);
  *(_QWORD *)(v0 + 112) = v19;
  v20 = sub_10004CFD4((uint64_t *)&unk_1009EF280);
  *v19 = v0;
  v19[1] = sub_1005CAB24;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 24, *(_QWORD *)(v0 + 80), sub_1005CBF7C, v16, v20);
}

uint64_t sub_1005CAB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_1005CAC04;
  else
    v7 = sub_1005CABB8;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005CABB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);

  v3 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1005CAC04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CAC48(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 128) = a2;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a3;
  v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  *(_QWORD *)(v5 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005CACB0, 0, 0);
}

uint64_t sub_1005CACB0()
{
  uint64_t v0;
  int v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  Class v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = *(unsigned __int8 *)(v0 + 128);
  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateFor_All_Marked_As_Finished_LibraryAssets_In_Year:", *(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 16) = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v3 = sub_10004CFD4(&qword_1009DF300);
  String.init<A>(describing:)(v0 + 16, v3);
  v5 = v4;
  v6 = objc_allocWithZone((Class)NSFetchRequest);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithEntityName:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);
  *(_QWORD *)(v0 + 96) = v8;

  objc_msgSend(v8, "setPredicate:", v2);
  sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setSortDescriptors:", isa);

  if (v1 == 1)
  {
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setRelationshipKeyPathsForPrefetching:", v10);

  }
  v12 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v16 = (_QWORD *)swift_allocObject(&unk_100915590, 40, 7);
  *(_QWORD *)(v0 + 104) = v16;
  v16[2] = v8;
  v16[3] = v15;
  v16[4] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v13);
  v17 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v18 = v8;
  swift_retain(v14);
  v19 = (_QWORD *)swift_task_alloc(v17);
  *(_QWORD *)(v0 + 112) = v19;
  v20 = sub_10004CFD4(&qword_1009ECA80);
  *v19 = v0;
  v19[1] = sub_1005CAF04;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 24, *(_QWORD *)(v0 + 80), sub_1005CC010, v16, v20);
}

uint64_t sub_1005CAF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_1005CC0A8;
  else
    v7 = sub_1005CC0B4;
  return swift_task_switch(v7, 0, 0);
}

uint64_t BooksFinishedDataSource.fetchFinishedAssets(in:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EF274);
  *(_QWORD *)(v1 + 56) = v3;
  *v3 = v1;
  v3[1] = sub_1005CAFF4;
  return sub_1005CA868(a1, 1, (uint64_t)sub_1005CB21C, 0);
}

uint64_t sub_1005CAFF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1005CB104;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v6 = sub_1005CB068;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005CB068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009EF280);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  v4 = sub_1000652E4(&qword_1009EF290, (uint64_t *)&unk_1009EF280);
  v5 = Sequence.compact<A>()(v2, v3, v4);
  v6 = swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v5, v6);
}

uint64_t sub_1005CB104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = static os_log_type_t.error.getter(a1);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.readingActivity.getter();
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  swift_getErrorValue(v2, v1 + 40, v1 + 16);
  v7 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  v9 = v8;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_10002BE50();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Error fetching LibraryAssetInfo finished assets IDs: %@", 55, 2, v6);
  swift_bridgeObjectRelease(v6);

  swift_willThrow(v10);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

double sub_1005CB21C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  _QWORD v16[5];

  v2 = type metadata accessor for ContentInfoBuildOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EAE58);
  v7 = swift_allocObject(v6, ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ 2 * *(_QWORD *)(v3 + 72), *(unsigned __int8 *)(v3 + 80) | 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070FC00;
  v8 = static ContentInfoBuildOptions.seriesInfo.getter();
  static ContentInfoBuildOptions.seriesAssets.getter(v8);
  v15 = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
  v10 = sub_10004CFD4(&qword_1009D7038);
  v11 = sub_1000652E4((unint64_t *)&qword_1009EF300, &qword_1009D7038);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v10, v11, v2, v9);
  BKLibraryAsset.contentInfo(options:)(v5, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v16[3])
  {
    sub_100010960((uint64_t)v16, &qword_1009E8A20);
    goto LABEL_5;
  }
  v12 = sub_10004CFD4(&qword_1009EF310);
  v13 = sub_10004CFD4(&qword_1009D6FF0);
  if ((swift_dynamicCast(a1, v16, v12, v13, 6) & 1) == 0)
  {
LABEL_5:
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1005CB3D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005CB404()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double BooksFinishedDataSource.setOnChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange + 8);
  *v4 = a1;
  v4[1] = a2;
  sub_10002AD00(v6, v5);
  *(_QWORD *)&result = swift_retain(a2).n128_u64[0];
  return result;
}

id sub_1005CB474(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _BYTE *))
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _BYTE v16[8];
  id v17;

  v17 = 0;
  v7 = objc_msgSend(a1, "execute:", &v17);
  v8 = v17;
  if (v7)
  {
    v9 = v7;
    v10 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);
    v12 = v8;

    v13 = (id)a4(v11, a2, a3, v16);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v13 = v17;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v14);
  }
  return v13;
}

void BooksFinishedDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BooksFinishedDataSource", 29, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1005CB648(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EF26C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return BooksFinishedDataSource.fetchFinishedAssets(in:)(a1);
}

uint64_t BooksFinishedDataSource.managedObjectBackgroundMonitor(_:didSaveNotify:)()
{
  uint64_t v0;
  void (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  uint64_t result;

  v1 = *(void (**)(__n128))(v0 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange + 8);
    v3 = swift_retain(v2);
    v1(v3);
    return sub_10002AD00((uint64_t)v1, v2);
  }
  return result;
}

void sub_1005CB7A8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  swift_bridgeObjectRetain(a1);
  sub_1005CC060(a1 + 32, (uint64_t)&v57);
  v7 = v57;
  v8 = v58;
  v55 = v57;
  v56 = v58;
  v52 = v59;
  v53 = v60;
  v54 = v61;
  v9 = (_QWORD *)*a3;
  v11 = sub_10004CE80(v57, v58);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1002C2198();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v7;
    v22[1] = v8;
    v23 = v21[7] + 40 * v11;
    v24 = v52;
    v25 = v53;
    *(_QWORD *)(v23 + 32) = v54;
    *(_OWORD *)v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    v26 = v21[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v28;
    v29 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v30 = a1 + 88;
    while (1)
    {
      sub_1005CC060(v30, (uint64_t)&v57);
      v31 = v57;
      v32 = v58;
      v55 = v57;
      v56 = v58;
      v52 = v59;
      v53 = v60;
      v54 = v61;
      v33 = (_QWORD *)*a3;
      v34 = sub_10004CE80(v57, v58);
      v36 = v33[2];
      v37 = (v35 & 1) == 0;
      v27 = __OFADD__(v36, v37);
      v38 = v36 + v37;
      if (v27)
        break;
      v39 = v35;
      if (v33[3] < v38)
      {
        sub_10037D8C4(v38, 1);
        v34 = sub_10004CE80(v31, v32);
        if ((v39 & 1) != (v40 & 1))
          goto LABEL_25;
      }
      if ((v39 & 1) != 0)
        goto LABEL_10;
      v41 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v34 >> 6) + 64) |= 1 << v34;
      v42 = (uint64_t *)(v41[6] + 16 * v34);
      *v42 = v31;
      v42[1] = v32;
      v43 = v41[7] + 40 * v34;
      v44 = v52;
      v45 = v53;
      *(_QWORD *)(v43 + 32) = v54;
      *(_OWORD *)v43 = v44;
      *(_OWORD *)(v43 + 16) = v45;
      v46 = v41[2];
      v27 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v27)
        goto LABEL_24;
      v41[2] = v47;
      v30 += 56;
      if (!--v29)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10037D8C4(v14, a2 & 1);
  v16 = sub_10004CE80(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v18);
    v62 = v18;
    swift_errorRetain(v18);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    if ((swift_dynamicCast(v19, &v62, v19, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(a1);
      sub_1000569AC((uint64_t)&v52);
      v20 = v56;
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(v62);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v50 = 0;
  v51 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v48._object = (void *)0x80000001007C3AE0;
  v48._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v48);
  _print_unlocked<A, B>(_:_:)(&v55, &v50, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v49._countAndFlagsBits = 39;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v50, v51, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

uint64_t sub_1005CBB88(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1005CBC10(uint64_t a1, void (*a2)(_QWORD *__return_ptr))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  _QWORD *v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = _swiftEmptyArrayStorage;
    if (!v4)
      return (uint64_t)v5;
    v14 = _swiftEmptyArrayStorage;
    result = sub_100366E5C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v14;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      a2(v13);

      v14 = v5;
      v11 = v5[2];
      v10 = v5[3];
      if (v11 >= v10 >> 1)
      {
        sub_100366E5C(v10 > 1, v11 + 1, 1);
        v5 = v14;
      }
      ++v7;
      v5[2] = v11 + 1;
      sub_1005CBF98((uint64_t)v13, (uint64_t)&v5[5 * v11 + 4]);
      if (v4 == v7)
        return (uint64_t)v5;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005CBD80(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = _swiftEmptyArrayStorage;
    if (!v3)
      return (uint64_t)v4;
    v15 = _swiftEmptyArrayStorage;
    result = sub_100366E94(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v6 = 0;
    v4 = v15;
    while (v3 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      a2(&v14);

      v9 = v14;
      v15 = v4;
      v11 = v4[2];
      v10 = v4[3];
      if (v11 >= v10 >> 1)
      {
        sub_100366E94(v10 > 1, v11 + 1, 1);
        v4 = v15;
      }
      ++v6;
      v4[2] = v11 + 1;
      v4[v11 + 4] = v9;
      if (v3 == v6)
        return (uint64_t)v4;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005CBEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t *v5;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc(dword_1009EF25C);
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000AE34;
  *(_OWORD *)(v3 + 48) = v4;
  v5 = (uint64_t *)swift_task_alloc(dword_1009EF31C);
  *(_QWORD *)(v3 + 64) = v5;
  *v5 = v3;
  v5[1] = (uint64_t)sub_1005CA150;
  return sub_1005CAC48(v2, 0, (uint64_t)sub_1005CA414, 0);
}

id sub_1005CBF7C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1005CC02C((uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_1005CBC10, a1);
}

uint64_t sub_1005CBF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CBFE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1005CC010@<X0>(_QWORD *a1@<X8>)
{
  return sub_1005CC02C((uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_1005CBD80, a1);
}

id sub_1005CC02C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, _BYTE *)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  result = sub_1005CB474(*(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1005CC060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009EF330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id static OS_os_log.toc.getter()
{
  if (qword_1009CEA00 != -1)
    swift_once(&qword_1009CEA00, sub_1005CC100);
  return (id)qword_1009EF348;
}

uint64_t sub_1005CC100()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 4411220, 0xE300000000000000);
  qword_1009EF348 = result;
  return result;
}

uint64_t sub_1005CC154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CC160);
}

uint64_t sub_1005CC160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1005CC1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CC1E8);
}

uint64_t sub_1005CC1E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_1005CC25C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  id result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[3];
  uint64_t v19;
  void *v20;
  _QWORD v21[5];
  __int128 v22;
  uint64_t v23;
  void *v24;
  __int128 v25[2];
  __int128 v26[2];
  __int128 v27[2];

  sub_10002E418((uint64_t)a1, (uint64_t)v27);
  sub_10002E418((uint64_t)a2, (uint64_t)v26);
  sub_10002E418((uint64_t)a4, (uint64_t)v25);
  result = objc_msgSend((id)objc_opt_self(JSAStore), "sharedInstance");
  if (result)
  {
    v11 = result;
    v21[3] = sub_10043FF9C();
    v21[4] = &protocol witness table for JSAStore;
    v21[0] = v11;
    v19 = type metadata accessor for AccountController(0);
    v20 = &protocol witness table for AccountController;
    v18[0] = static AccountController.shared.getter(v19, v12, v13, v14);
    v23 = type metadata accessor for MenuLikeStateController(0);
    v24 = &protocol witness table for MenuLikeStateController;
    sub_1000257F8(&v22);
    MenuLikeStateController.init(authStatusProvider:authServiceProvider:)(v21, v18);
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v15 = a5 + *(int *)(type metadata accessor for DislikeActionItem(0) + 36);
    v16 = enum case for ContextActionType.dislike(_:);
    v17 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
    sub_100022840(v27, a5);
    sub_100022840(v26, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v25, a5 + 88);
    return (id)sub_100022840(&v22, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005CC3E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23[2];
  char v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  sub_10003F198(v0, v2);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v2, v3) & 1) != 0)
    goto LABEL_12;
  v4 = v0[3];
  v5 = v1[4];
  sub_10003F198(v1, v1[3]);
  ContextActionDataProtocol.selectionMode.getter(v23, v4, v5);
  if (v24 == 1)
  {
    sub_1001EB7C0((uint64_t)v23);
LABEL_12:
    v21 = 0;
    return v21 & 1;
  }
  sub_100022840(v23, (uint64_t)v25);
  v6 = v26;
  v7 = v27;
  sub_10003F198(v25, v26);
  v8 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v6, v7);
  if ((static ContextActionAssetType.== infix(_:_:)(v8, 4) & 1) != 0)
    goto LABEL_11;
  v9 = v26;
  v10 = v27;
  sub_10003F198(v25, v26);
  v11 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v9, v10);
  if ((static ContextActionAssetType.== infix(_:_:)(v11, 5) & 1) != 0)
    goto LABEL_11;
  v12 = v26;
  v13 = v27;
  sub_10003F198(v25, v26);
  v14 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v12, v13);
  if (!v15)
    goto LABEL_11;
  v16 = v14;
  v17 = v15;
  swift_bridgeObjectRelease(v15);
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0(v25);
    goto LABEL_12;
  }
  v19 = v1[3];
  v20 = v1[4];
  sub_10003F198(v1, v19);
  v21 = dispatch thunk of ContextActionDataProtocol.isOnline.getter(v19, v20);
  _s5Books15CurrentPageViewVwxx_0(v25);
  return v21 & 1;
}

uint64_t sub_1005CC558()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[18] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[19] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[20] = v3;
  v1[21] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextActionSource(0);
  v1[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[23] = v5;
  v1[24] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[25] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[26] = v7;
  v1[27] = v8;
  return swift_task_switch(sub_1005CC614, v7, v8);
}

uint64_t sub_1005CC614()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD **)(v0 + 144);
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  ContextActionDataProtocol.selectionMode.getter((_QWORD *)(v0 + 16), v2, v3);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 200));
    sub_1001EB7C0(v0 + 16);
    v4 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD **)(v0 + 144);
    sub_100022840((__int128 *)(v0 + 16), v0 + 64);
    v7 = v6[19];
    v8 = v6[20];
    sub_10003F198(v6 + 16, v7);
    v9 = v6 + 5;
    v10 = v6[10];
    v11 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of LikeStateController.authAndsubmitLikeState(liked:context:data:assetInfo:tracker:)[1]);
    *(_QWORD *)(v0 + 224) = v11;
    *v11 = v0;
    v11[1] = sub_1005CC730;
    return dispatch thunk of LikeStateController.authAndsubmitLikeState(liked:context:data:assetInfo:tracker:)(0, v9, *(_QWORD *)(v0 + 144), v0 + 64, v10, v7, v8);
  }
}

uint64_t sub_1005CC730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[26];
    v7 = v4[27];
    v8 = sub_1005CCA3C;
  }
  else
  {
    v4[30] = a1;
    v6 = v4[26];
    v7 = v4[27];
    v8 = sub_1005CC7A4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005CC7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSDictionary v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 200));
  if (!v1)
    goto LABEL_15;
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD **)(v0 + 144);
  v6 = v5[3];
  v7 = v5[4];
  sub_10003F198(v5, v6);
  dispatch thunk of ContextActionDataProtocol.source.getter(v6, v7);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(uint64_t **)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  if (v8 != enum case for ContextActionSource.library(_:))
  {
    (*(void (**)(_QWORD, uint64_t))(v9 + 8))(*(_QWORD *)(v0 + 192), v11);
    goto LABEL_10;
  }
  (*(void (**)(_QWORD, uint64_t))(v9 + 96))(*(_QWORD *)(v0 + 192), v11);
  v13 = *v10;
  v12 = v10[1];
  _s5Books15CurrentPageViewVwxx_0(v10 + 2);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDSamples);
  if (v13 == v14 && v12 == v15)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_12;
  }
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v12, v14, v15, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) == 0)
  {
LABEL_10:
    v19 = *(_QWORD **)(v0 + 144);
    v20 = v19 + 5;
    v21 = (void *)objc_opt_self(BSUINoticeViewController);
    v22 = v19[8];
    v23 = v19[9];
    sub_10003F198(v20, v22);
    v24 = ContextMenuPresentationContextProtocol.newOptionsForShowingHUD.getter(v22, v23);
    v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "presentNoticeForBookLoved:options:", 0, v25.super.isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
LABEL_14:

    goto LABEL_15;
  }
LABEL_12:
  v26 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  sub_10003F198((_QWORD *)(v0 + 64), v27);
  dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v27, v28);
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v26, "libraryAssetOnMainQueueWithAssetID:", v31);

  swift_bridgeObjectRelease(v30);
  if (v32)
  {
    v33 = *(_QWORD **)(v0 + 144);
    v25.super.isa = (Class)sub_1005CCC54(v32);
    v34 = v33[8];
    v35 = v33[9];
    sub_10003F198(v33 + 5, v34);
    dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v25.super.isa, 1, v34, v35);

    goto LABEL_14;
  }
LABEL_15:
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  v36 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CCA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 200));
  static Logger.contextActionItem.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v21 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue(v6, v0 + 128, v0 + 104);
    v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    v11 = v10;
    *(_QWORD *)(v0 + 136) = sub_100040F58(v9, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error while submitting like dislike preference with error: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 152);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  v16 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1005CCC54(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  id v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  NSString v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  NSString v60;
  void *v61;
  double v62;
  id v63;
  id v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(char *, char *, uint64_t);
  void (*v80)(char *, char *, uint64_t);
  id v81;
  id v82;
  uint64_t v83;
  _QWORD aBlock[5];
  uint64_t v85;

  v76 = a1;
  v1 = type metadata accessor for DislikeActionItem(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v73 = *(_QWORD *)(v1 - 8);
  v74 = v2;
  __chkstk_darwin(v1);
  v72 = (uint64_t)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  __chkstk_darwin(v10);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v66 - v15;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEE003F656C706D61);
  static Locale.current.getter(v17);
  v80 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v80(v13, v16, v10);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v83 = ObjCClassFromMetadata;
  v20 = (void *)objc_opt_self(NSBundle);
  v82 = v20;
  v21 = objc_msgSend(v20, "bundleForClass:", ObjCClassFromMetadata);
  v79 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v77 = v6;
  v22 = v69;
  v79(v6, v9, v69);
  v81 = (id)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v21, v6, "Delete Sample alert modal title", 31, 2);
  v71 = v23;
  v78 = *(void (**)(char *, uint64_t))(v4 + 8);
  v78(v9, v22);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25 = v67;
  v24(v16, v67);
  v70 = v24;
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000050, 0x80000001007D7820);
  static Locale.current.getter(v26);
  v68 = v13;
  v80(v13, v16, v25);
  v27 = objc_msgSend(v20, "bundleForClass:", v83);
  v28 = v77;
  v29 = v79;
  v79(v77, v9, v22);
  String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v27, v28, "Delete Sample alert modal prompt", 32, 2);
  v31 = v30;
  v32 = v22;
  v33 = v22;
  v34 = v78;
  v78(v9, v32);
  v35 = v25;
  v24(v16, v25);
  v36 = v71;
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v81 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v37, v38, 1);

  v39 = String.LocalizationValue.init(stringLiteral:)(1885693259, 0xE400000000000000);
  static Locale.current.getter(v39);
  v40 = v68;
  v41 = v80;
  v80(v68, v16, v35);
  v42 = objc_msgSend(v82, "bundleForClass:", v83);
  v43 = v77;
  v29(v77, v9, v33);
  v44 = v43;
  String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, v42, v43, "Keep", 4, 2);
  v46 = v45;
  v34(v9, v33);
  v47 = v70;
  v70(v16, v35);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  v71 = (id)objc_opt_self(UIAlertAction);
  v49 = objc_msgSend(v71, "actionWithTitle:style:handler:", v48, 1, 0);

  objc_msgSend(v81, "addAction:", v49);
  v50 = String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
  static Locale.current.getter(v50);
  v41(v40, v16, v35);
  v51 = objc_msgSend(v82, "bundleForClass:", v83);
  v79(v44, v9, v33);
  String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, v51, v44, "Delete", 6, 2);
  v53 = v52;
  v78(v9, v33);
  v47(v16, v35);
  v54 = v72;
  sub_1005CD68C(v75, v72);
  v55 = *(unsigned __int8 *)(v73 + 80);
  v56 = (v55 + 24) & ~v55;
  v57 = swift_allocObject(&unk_1009155F0, v56 + v74, v55 | 7);
  v58 = v76;
  *(_QWORD *)(v57 + 16) = v76;
  sub_1005CD784(v54, v57 + v56);
  v59 = v58;
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  aBlock[4] = sub_1005CD7C8;
  v85 = v57;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_100915608;
  v61 = _Block_copy(aBlock);
  *(_QWORD *)&v62 = swift_release(v85).n128_u64[0];
  v63 = objc_msgSend(v71, "actionWithTitle:style:handler:", v60, 2, v61, v62);
  _Block_release(v61);

  v64 = v81;
  objc_msgSend(v81, "addAction:", v63);

  return v64;
}

uint64_t sub_1005CD2B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EF404);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1005CC558();
}

double sub_1005CD2F8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v5 = type metadata accessor for DislikeActionItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1005CD68C(a3, (uint64_t)v8);
  type metadata accessor for MainActor(0);
  v13 = a2;
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = (_QWORD *)swift_allocObject(&unk_100915640, v16 + v7, v15 | 7);
  v17[2] = v14;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v13;
  sub_1005CD784((uint64_t)v8, (uint64_t)v17 + v16);
  v18 = sub_10030C02C((uint64_t)v11, (uint64_t)&unk_1009EF410, (uint64_t)v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1005CD448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = v6;
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[6] = v7;
  v5[7] = v8;
  return swift_task_switch(sub_1005CD4B8, v7, v8);
}

uint64_t sub_1005CD4B8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = v0[3];
  v2 = (void *)v0[2];
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v4 + 32) = v2;
  v7 = v4;
  specialized Array._endMutation()(v4);
  v0[8] = v7;
  v0[9] = *(_QWORD *)(v1 + 80);
  v0[10] = static MainActor.shared.getter(v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EAB1C);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1005CD56C;
  return sub_100542FA4(v7);
}

uint64_t sub_1005CD56C()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t **v2;
  uint64_t *v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc((*v0)[11]);
  v2 = (uint64_t **)swift_task_alloc(dword_1009EAB04);
  v1[12] = (uint64_t)v2;
  *v2 = v4;
  v2[1] = (uint64_t *)sub_1005CD5D4;
  return sub_1005469A8(v1[8], v1[9]);
}

uint64_t sub_1005CD5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005CD648, v2, v3);
}

uint64_t sub_1005CD648()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[8];
  swift_release(v0[10]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_10020DB80, v0[6], v0[7]);
}

uint64_t sub_1005CD68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DislikeActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CD6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for DislikeActionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v7);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 128));
  v8 = v7 + *(int *)(v1 + 36);
  v9 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005CD784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DislikeActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1005CD7C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DislikeActionItem(0) - 8) + 80);
  return sub_1005CD2F8(a1, *(void **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1005CD808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for DislikeActionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v7);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 128));
  v8 = v7 + *(int *)(v1 + 36);
  v9 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005CD8C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DislikeActionItem(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1009EF40C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_1005CD448(a1, v5, v6, v7, v8);
}

id SeriesAssetHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeriesAssetHelper();
  return objc_msgSendSuper2(&v2, "init");
}

id SeriesAssetHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeriesAssetHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s5Books17SeriesAssetHelperC06mappedC11ContentType4fromSo07BKAssetfG0VSo8NSNumberC_tFZ_0(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  int v15;
  uint64_t v19;

  v2 = sub_10004CFD4(&qword_1009EF440);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BKSeriesItem.ItemType(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v19 - v12;
  BKSeriesItem.ItemType.init(rawValue:)(objc_msgSend(a1, "shortValue", v11));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1005CDBE4((uint64_t)v5);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14(v13, v5, v6);
    v14(v9, v13, v6);
    v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v15 == enum case for BKSeriesItem.ItemType.audiobooks(_:)
      || v15 == enum case for BKSeriesItem.ItemType.audiobookSeries(_:))
    {
      return 6;
    }
    if (v15 == enum case for BKSeriesItem.ItemType.books(_:)
      || v15 == enum case for BKSeriesItem.ItemType.bookSeries(_:))
    {
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return 0;
}

uint64_t type metadata accessor for SeriesAssetHelper()
{
  return objc_opt_self(BKSeriesAssetHelper);
}

uint64_t sub_1005CDBE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009EF440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CDC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CDC30);
}

uint64_t sub_1005CDC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1005CDCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CDCB8);
}

uint64_t sub_1005CDCB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ListenSampleActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EF4A0;
  if (!qword_1009EF4A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ListenSampleActionItem);
  return result;
}

uint64_t sub_1005CDD68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_1007329D0;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1005CDDE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  unsigned __int8 v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  char v90;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  char *v103;
  _QWORD *v104;
  _QWORD v105[3];
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[6];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[3];
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v100 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextActionSource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v100 - v9;
  v11 = type metadata accessor for ListenSampleActionItem(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v100 - v15);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v100 - v18);
  v104 = v0;
  sub_10023ADE8(&v121);
  if (!v122)
  {
    sub_100010960((uint64_t)&v121, qword_1009D1448);
LABEL_54:
    v90 = 0;
    return v90 & 1;
  }
  v102 = v13;
  v103 = v3;
  sub_1001EB834(&v121, &v123);
  v20 = v124;
  v21 = v125;
  sub_10003F198(&v123, v124);
  v22 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v20, v21);
  if ((static ContextActionAssetType.== infix(_:_:)(v22, 3) & 1) == 0)
  {
LABEL_53:
    _s5Books15CurrentPageViewVwxx_0(&v123);
    goto LABEL_54;
  }
  v23 = v124;
  v24 = v125;
  sub_10003F198(&v123, v124);
  v25 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v23, v24);
  v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease(v25);
  sub_1005CF340((uint64_t)v104, (uint64_t)v19);
  v101 = v26;
  if (v26 < 2)
  {
    sub_1005CF384((uint64_t)v19);
  }
  else
  {
    v27 = v19[3];
    v28 = v19[4];
    sub_10003F198(v19, v27);
    dispatch thunk of ContextActionDataProtocol.source.getter(v27, v28);
    v29 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v29(v7, enum case for ContextActionSource.productPage(_:), v4);
    v30 = static ContextActionSource.== infix(_:_:)(v10, v7);
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v7, v4);
    v31(v10, v4);
    sub_1005CF340((uint64_t)v19, (uint64_t)v16);
    if ((v30 & 1) != 0)
    {
      sub_1005CF384((uint64_t)v16);
      sub_1005CF384((uint64_t)v19);
      goto LABEL_53;
    }
    v32 = v16[3];
    v100 = v16[4];
    sub_10003F198(v16, v32);
    dispatch thunk of ContextActionDataProtocol.source.getter(v32, v100);
    v29(v7, enum case for ContextActionSource.unifiedProductItem(_:), v4);
    v33 = static ContextActionSource.== infix(_:_:)(v10, v7);
    v31(v7, v4);
    v31(v10, v4);
    sub_1005CF384((uint64_t)v16);
    sub_1005CF384((uint64_t)v19);
    if ((v33 & 1) != 0)
      goto LABEL_53;
  }
  v34 = v124;
  v35 = v125;
  sub_10003F198(&v123, v124);
  if ((dispatch thunk of ContextAssetInfoProtocol.isExplicit.getter(v34, v35) & 1) != 0)
  {
    v36 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v37 = objc_msgSend(v36, "isExplicitContentAllowed");
    swift_unknownObjectRelease(v36);
    if ((v37 & 1) == 0 && v101 <= 1)
      goto LABEL_53;
  }
  v38 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v39 = objc_msgSend(v38, "currentAudiobook");
  if (v39)
  {
    v40 = v39;
    v41 = objc_msgSend(v39, "assetID");
    swift_unknownObjectRelease(v40);
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0;
  }
  v45 = v124;
  v46 = v125;
  sub_10003F198(&v123, v124);
  v47 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v45, v46);
  v49 = v48;
  if (v44)
  {
    if (v42 == v47 && v44 == v48)
    {

      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v49);
      goto LABEL_53;
    }
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v47, v48, 0);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v49);
    if ((v50 & 1) != 0)
      goto LABEL_52;
  }
  else
  {
    swift_bridgeObjectRelease(v48);
  }
  v51 = v104[3];
  v52 = v104[4];
  sub_10003F198(v104, v51);
  v53 = dispatch thunk of ContextActionDataProtocol.isStoreManagedAppleID.getter(v51, v52);
  sub_1001EB84C((uint64_t)&v123, (uint64_t)&v121);
  if ((v53 & 1) != 0)
  {

    _s5Books15CurrentPageViewVwxx_0(&v121);
    goto LABEL_53;
  }
  sub_10003F198(&v121, v122);
  v54 = sub_1002934F0();
  if (v54 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(&v121);
    goto LABEL_26;
  }
  v55 = v54;
  _s5Books15CurrentPageViewVwxx_0(&v121);
  if ((v55 & 1) != 0)
  {
LABEL_52:

    goto LABEL_53;
  }
LABEL_26:
  sub_10003F198(&v123, v124);
  v56 = sub_100298CD0();
  sub_1001EB84C((uint64_t)&v123, (uint64_t)v118);
  if ((v56 & 1) == 0)
  {
    _s5Books15CurrentPageViewVwxx_0(v118);
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v115);
    goto LABEL_32;
  }
  v57 = v119;
  v58 = v120;
  sub_10003F198(v118, v119);
  v59 = dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v57, v58);
  if (v59 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(v118);
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v115);
    goto LABEL_31;
  }
  v60 = v59;
  _s5Books15CurrentPageViewVwxx_0(v118);
  sub_1001EB84C((uint64_t)&v123, (uint64_t)v115);
  if ((v60 & 1) != 0)
  {
LABEL_32:
    v64 = 0;
    goto LABEL_34;
  }
LABEL_31:
  v61 = v116;
  v62 = v117;
  sub_10003F198(v115, v116);
  v63 = dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(v61, v62);
  if (v63 == 2)
    goto LABEL_32;
  v64 = v63 & 1;
LABEL_34:
  _s5Books15CurrentPageViewVwxx_0(v115);
  v65 = v124;
  v66 = v125;
  sub_10003F198(&v123, v124);
  dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v65, v66);
  v68 = v67;
  swift_bridgeObjectRelease(v67);
  sub_1001EB84C((uint64_t)&v123, (uint64_t)v114);
  if (v68)
  {
    sub_10003F198(v114, v114[3]);
    v69 = sub_100298B08();
    v70 = v69 == 2 || (v69 & 1) == 0;
  }
  else
  {
    v70 = 0;
  }
  _s5Books15CurrentPageViewVwxx_0(v114);
  v71 = v124;
  v72 = v125;
  sub_10003F198(&v123, v124);
  v73 = dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v71, v72);
  if (v73 == 2)
  {
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v111);
  }
  else
  {
    v74 = v73;
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v111);
    if ((v74 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(v111);
      sub_1001EB84C((uint64_t)&v123, (uint64_t)v108);
      goto LABEL_48;
    }
  }
  v75 = v112;
  v76 = v113;
  sub_10003F198(v111, v112);
  v77 = dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(v75, v76);
  if (v77 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(v111);
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v108);
    goto LABEL_45;
  }
  v78 = v77;
  _s5Books15CurrentPageViewVwxx_0(v111);
  sub_1001EB84C((uint64_t)&v123, (uint64_t)v108);
  if ((v78 & 1) != 0)
  {
LABEL_48:
    _s5Books15CurrentPageViewVwxx_0(v108);
    sub_1001EB84C((uint64_t)&v123, (uint64_t)v105);
    goto LABEL_49;
  }
LABEL_45:
  v79 = v109;
  v80 = v110;
  sub_10003F198(v108, v109);
  v81 = dispatch thunk of ContextAssetInfoProtocol.isDownloading.getter(v79, v80);
  _s5Books15CurrentPageViewVwxx_0(v108);
  sub_1001EB84C((uint64_t)&v123, (uint64_t)v105);
  if ((v81 & 1) == 0)
  {
    v82 = v106;
    v83 = v107;
    sub_10003F198(v105, v106);
    v84 = dispatch thunk of ContextAssetInfoProtocol.isPurchased.getter(v82, v83) ^ 1;
    goto LABEL_50;
  }
LABEL_49:
  v84 = 0;
LABEL_50:
  _s5Books15CurrentPageViewVwxx_0(v105);
  v85 = v124;
  v86 = v125;
  sub_10003F198(&v123, v124);
  v87 = (uint64_t)v103;
  dispatch thunk of ContextAssetInfoProtocol.sampleDownloadURL.getter(v85, v86);
  v88 = type metadata accessor for URL(0);
  v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48))(v87, 1, v88);
  sub_100010960(v87, (uint64_t *)&unk_1009D23D0);
  if (v89 == 1)
  {
    if ((v64 & 1) == 0)
      goto LABEL_52;
  }
  else if ((v64 | v70 & v84) != 1)
  {
    goto LABEL_52;
  }
  v92 = v104;
  v93 = v104[3];
  v94 = v104[4];
  sub_10003F198(v104, v93);
  v95 = dispatch thunk of ContextActionDataProtocol.isOnline.getter(v93, v94);
  v96 = v102;
  sub_1005CF340((uint64_t)v92, (uint64_t)v102);
  if ((v95 & 1) != 0)
  {
    v97 = v96[3];
    v98 = v96[4];
    sub_10003F198(v96, v97);
    v99 = dispatch thunk of ContextActionDataProtocol.isStoreAllowed.getter(v97, v98);
  }
  else
  {
    v99 = 0;
  }

  sub_1005CF384((uint64_t)v96);
  v90 = v64 | v99;
  _s5Books15CurrentPageViewVwxx_0(&v123);
  return v90 & 1;
}

uint64_t sub_1005CE68C()
{
  id v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];

  sub_10023ADE8(&v11);
  if (v12)
  {
    sub_1001EB834(&v11, v14);
    v0 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v1 = objc_msgSend(v0, "isExplicitContentAllowed");
    swift_unknownObjectRelease(v0);
    sub_1001EB84C((uint64_t)v14, (uint64_t)&v11);
    if ((v1 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v11);
      sub_1001EB84C((uint64_t)v14, (uint64_t)v8);
    }
    else
    {
      v3 = v12;
      v4 = v13;
      sub_10003F198(&v11, v12);
      LOBYTE(v3) = dispatch thunk of ContextAssetInfoProtocol.isExplicit.getter(v3, v4);
      _s5Books15CurrentPageViewVwxx_0(&v11);
      sub_1001EB84C((uint64_t)v14, (uint64_t)v8);
      if ((v3 & 1) != 0)
      {
        _s5Books15CurrentPageViewVwxx_0(v8);
        v2 = 1;
LABEL_8:
        _s5Books15CurrentPageViewVwxx_0(v14);
        return v2;
      }
    }
    v5 = v9;
    v6 = v10;
    sub_10003F198(v8, v9);
    LOBYTE(v5) = dispatch thunk of ContextAssetInfoProtocol.isPurchased.getter(v5, v6);
    _s5Books15CurrentPageViewVwxx_0(v8);
    v2 = v5 & 1;
    goto LABEL_8;
  }
  sub_100010960((uint64_t)&v11, qword_1009D1448);
  return 0;
}

uint64_t sub_1005CE7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v0 = type metadata accessor for ContextActionSource(0);
  v44 = *(_QWORD *)(v0 - 8);
  v45 = v0;
  __chkstk_darwin(v0);
  v43 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)v42 - v3;
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v42 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v42 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007D78D0);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v23 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v22, v8, "Context Menu: Audio Sample", 26, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27 = (_QWORD *)v42[1];
  v26(v18, v12);
  v28 = v27[3];
  v29 = v27[4];
  sub_10003F198(v27, v28);
  dispatch thunk of ContextActionDataProtocol.source.getter(v28, v29);
  v31 = v43;
  v30 = v44;
  v32 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for ContextActionSource.getSampleActionItem(_:), v45);
  LOBYTE(v28) = static ContextActionSource.== infix(_:_:)(v4, v31);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v31, v32);
  v33(v4, v32);
  if ((v28 & 1) != 0)
  {
    sub_10023ADE8(&v46);
    if (v47)
    {
      swift_bridgeObjectRelease(v25);
      sub_1001EB834(&v46, &v49);
      v34 = v27[3];
      v35 = v27[4];
      sub_10003F198(v27, v34);
      v36 = dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v34, v35);
      v37 = v50;
      v38 = v51;
      v39 = sub_10003F198(&v49, v50);
      if ((v36 & 1) != 0)
      {
        v47 = v37;
        v48 = v38;
        v40 = sub_1000257F8(&v46);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v40, v39, v37);
        v23 = static ContextActionStringBuilder.editionKindTitle(for:)(&v46);
        _s5Books15CurrentPageViewVwxx_0(&v46);
      }
      else
      {
        v23 = dispatch thunk of ContextAssetInfoProtocol.editionKind.getter(v37, v38);
      }
      _s5Books15CurrentPageViewVwxx_0(&v49);
    }
    else
    {
      sub_100010960((uint64_t)&v46, qword_1009D1448);
    }
  }
  return v23;
}

uint64_t sub_1005CEB44()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v1 = v0;
  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  v9 = v0[3];
  v10 = v0[4];
  sub_10003F198(v0, v9);
  v11 = 0;
  if ((dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v9, v10) & 1) != 0)
  {
    v12 = v1[3];
    v13 = v1[4];
    sub_10003F198(v1, v12);
    dispatch thunk of ContextActionDataProtocol.source.getter(v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContextActionSource.getSampleActionItem(_:), v2);
    v14 = static ContextActionSource.== infix(_:_:)(v8, v5);
    v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v5, v2);
    v15(v8, v2);
    if ((v14 & 1) != 0)
    {
      sub_10023ADE8(&v21);
      if ((_QWORD)v22)
      {
        sub_1001EB834(&v21, &v23);
        v20 = v24;
        v16 = v24;
        v17 = sub_10003F198(&v23, v24);
        v22 = v20;
        v18 = sub_1000257F8(&v21);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v18, v17, v16);
        v11 = static ContextActionStringBuilder.narratedByString(for:)(&v21);
        _s5Books15CurrentPageViewVwxx_0(&v21);
        _s5Books15CurrentPageViewVwxx_0(&v23);
        return v11;
      }
      sub_100010960((uint64_t)&v21, qword_1009D1448);
    }
    return 0;
  }
  return v11;
}

uint64_t sub_1005CED14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[36] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[37] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[38] = v3;
  v1[39] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v1[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[41] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[42] = v6;
  v1[43] = v7;
  return swift_task_switch(sub_1005CEDCC, v6, v7);
}

uint64_t sub_1005CEDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  Class isa;

  sub_10023ADE8((_OWORD *)(v0 + 64));
  if (!*(_QWORD *)(v0 + 88))
  {
    swift_release(*(_QWORD *)(v0 + 328));
    v12 = sub_100010960(v0 + 64, qword_1009D1448);
LABEL_10:
    v13 = static Logger.contextActionItem.getter(v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Action doesn't confirm to ContextMenuAssetPresenting", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v18 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 312);
    v19 = *(_QWORD *)(v0 + 296);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    goto LABEL_13;
  }
  v1 = *(_QWORD *)(v0 + 288);
  sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
  sub_10002E418(v1 + 40, v0 + 200);
  v2 = sub_10004CFD4(&qword_1009D2848);
  v3 = sub_10004CFD4(&qword_1009D2850);
  if ((swift_dynamicCast(v0 + 160, v0 + 200, v2, v3, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 192) = 0;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v0 + 184))
  {
LABEL_9:
    swift_release(*(_QWORD *)(v0 + 328));
    sub_100010960(v0 + 160, qword_1009D2858);
    v12 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    goto LABEL_10;
  }
  v4 = *(_QWORD **)(v0 + 288);
  sub_100022840((__int128 *)(v0 + 160), v0 + 240);
  v5 = v4[3];
  v6 = v4[4];
  sub_10003F198(v4, v5);
  if ((dispatch thunk of ContextActionDataProtocol.isOnline.getter(v5, v6) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 328));
    sub_10003F198((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
    sub_10044DB58();
LABEL_21:
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
LABEL_13:
    v20 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 320));
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v8);
  dispatch thunk of ContextAssetInfoProtocol.sampleDownloadURL.getter(v8, v9);
  v10 = type metadata accessor for URL(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10) == 1)
  {
    v11 = *(_QWORD *)(v0 + 320);
    swift_release(*(_QWORD *)(v0 + 328));
    sub_100010960(v11, (uint64_t *)&unk_1009D23D0);
LABEL_20:
    sub_10003F198((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
    v28 = (void *)objc_opt_self(BSUINoticeViewController);
    v29 = sub_100384BDC();
    v30 = ContextMenuPresentationContextProtocol.newOptionsForShowingHUD.getter(&type metadata for ContextMenuPresentationContext, v29);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "presentNoticeForNoSampleAvailable:options:", 1, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

    goto LABEL_21;
  }
  sub_100010960(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_1009D23D0);
  sub_1001EB84C(v0 + 16, v0 + 112);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DFD10);
  v23 = type metadata accessor for ContextAssetInfo();
  if ((swift_dynamicCast(v0 + 280, v0 + 112, v22, v23, 6) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 328));
    goto LABEL_20;
  }
  v24 = *(void **)(v0 + 280);
  *(_QWORD *)(v0 + 352) = v24;
  v25 = sub_100296F28();
  *(_QWORD *)(v0 + 360) = v25;
  if (!v25)
  {
    swift_release(*(_QWORD *)(v0 + 328));

    goto LABEL_20;
  }
  v26 = v25;
  sub_10003F198((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
  v27 = (_QWORD *)swift_task_alloc(dword_1009E3F7C);
  *(_QWORD *)(v0 + 368) = v27;
  *v27 = v0;
  v27[1] = sub_1005CF198;
  return sub_10044CE98(v26);
}

uint64_t sub_1005CF198()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 368));
  return swift_task_switch(sub_1005CF1E4, *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 344));
}

uint64_t sub_1005CF1E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 352);
  v1 = *(void **)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 328));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CF260()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EF4FC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1005CED14();
}

uint64_t sub_1005CF2A4@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.audioSample(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6);
  sub_100022840(a2, a6 + 40);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_1005CF340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListenSampleActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CF384(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ListenSampleActionItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CF3C0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EF500);
  sub_100048F64(v0, (uint64_t)qword_1009EF500);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000023, 0x8000000100732A80);
}

id sub_1005CF43C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  Class isa;
  id result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_annotationProvider);
  if (!Strong)
    return 0;
  v6 = (void *)Strong;
  v7 = objc_allocWithZone((Class)NSFetchRequest);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithEntityName:", v8);

  v10 = (void *)objc_opt_self(AEAnnotation);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "predicateForAnnotationWithUUID:", v11);

  objc_msgSend(v9, "setPredicate:", v12);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
  v15 = objc_allocWithZone((Class)NSSortDescriptor);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, 1);

  *(_QWORD *)(v14 + 32) = v17;
  v43 = v14;
  specialized Array._endMutation()(v18);
  sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "setSortDescriptors:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  result = objc_msgSend(v6, "uiManagedObjectContext");
  if (result)
  {
    v21 = result;
    v22 = sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
    v23 = NSManagedObjectContext.fetch<A>(_:)(v9, v22);

    v43 = v23;
    v24 = sub_10004CFD4(&qword_1009EF5E0);
    v25 = sub_1005D0D60();
    v26 = Collection.isNotEmpty.getter(v24, v25);
    if ((v26 & 1) != 0)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
      }
      else
      {
        if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_33;
        }
        v27 = *(id *)(v23 + 32);
      }
      v24 = (uint64_t)v27;
    }
    else
    {
      v24 = 0;
    }
    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v40 = v23;
      else
        v40 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v28 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v28 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v23);
    if (v28 < 2)
      goto LABEL_17;
    if (qword_1009CEA08 == -1)
    {
LABEL_15:
      v29 = type metadata accessor for Logger(0);
      sub_100048F64(v29, (uint64_t)qword_1009EF500);
      v30 = swift_bridgeObjectRetain_n(a2, 2);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      if (!os_log_type_enabled(v31, v32))
      {

        swift_bridgeObjectRelease_n(a2, 2);
        if (!v24)
          goto LABEL_18;
        goto LABEL_23;
      }
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v43 = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain(a2);
      v41 = sub_100040F58(a1, a2, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v33 + 4, v33 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "More than one global annotation provided while fetching annotation:%s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

LABEL_17:
      if (!v24)
      {
LABEL_18:
        if (qword_1009CEA08 != -1)
          swift_once(&qword_1009CEA08, sub_1005CF3C0);
        v35 = type metadata accessor for Logger(0);
        v36 = sub_100048F64(v35, (uint64_t)qword_1009EF500);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.error.getter(v37);
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Error: Unable to find selected annotation for highlight.  Unable to present color editor.", v39, 2u);
          swift_slowDealloc(v39, -1, -1);
        }

        v24 = 0;
      }
LABEL_23:

      return (id)v24;
    }
LABEL_33:
    swift_once(&qword_1009CEA08, sub_1005CF3C0);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_1005CFB5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  _BYTE v31[24];

  v5 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1005CF43C(a1, a2);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(objc_allocWithZone((Class)AENoteFullscreenEditorController), "init");
    objc_msgSend(v10, "setAnnotation:", v9);
    objc_msgSend(v10, "setDelegate:", v2);
    v11 = objc_msgSend(v9, "annotationNote");
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      swift_bridgeObjectRelease(v15);
      v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0)
        v16 = v13 & 0xFFFFFFFFFFFFLL;
      v17 = v16 == 0;
    }
    else
    {
      v17 = 1;
    }
    objc_msgSend(v10, "setEditsOnLaunch:", v17);
    v23 = OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor;
    v24 = *(void **)(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor) = v10;
    v25 = v10;

    v26 = *(void **)(v2 + v23);
    if (v26)
    {
      v27 = v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_currentTheme;
      swift_beginAccess(v27, v31, 0, 0);
      sub_1005D0CD8(v27, (uint64_t)v7);
      v28 = v26;
      sub_1005D0654((uint64_t)v7);

      sub_1005D0D20((uint64_t)v7);
    }

  }
  else
  {
    if (qword_1009CEA08 != -1)
      swift_once(&qword_1009CEA08, sub_1005CF3C0);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100048F64(v18, (uint64_t)qword_1009EF500);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to present note editor - no annotation", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return 0;
  }
  return v10;
}

uint64_t sub_1005CFDB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  _BYTE v13[24];

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for BookThemeEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = v1 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_currentTheme;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_currentTheme, v13, 33, 0);
  sub_1005D0C90((uint64_t)v5, v8);
  result = swift_endAccess(v13);
  v10 = *(void **)(v1 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor);
  if (v10)
  {
    sub_1005D0CD8(v8, (uint64_t)v5);
    v11 = v10;
    sub_1005D0654((uint64_t)v5);

    return sub_1005D0D20((uint64_t)v5);
  }
  return result;
}

id sub_1005CFEF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookReaderHighlightEditorController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005CFF80()
{
  return type metadata accessor for BookReaderHighlightEditorController(0);
}

uint64_t type metadata accessor for BookReaderHighlightEditorController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EF560;
  if (!qword_1009EF560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderHighlightEditorController);
  return result;
}

void sub_1005CFFC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = &unk_100732AE0;
  sub_1005D004C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100732AF8;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1005D004C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EF570)
  {
    v2 = type metadata accessor for BookThemeEntity(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EF570);
  }
}

void sub_1005D0128(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  BOOL v54;
  void *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;

  v2 = v1;
  v4 = objc_msgSend(a1, "annotation");
  if (!v4)
    goto LABEL_24;
  v5 = v4;
  v6 = objc_opt_self(AEAnnotation);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (!v7)
    goto LABEL_23;
  v8 = v7;
  if (objc_msgSend(v7, "isInserted"))
  {
    v9 = objc_msgSend(v8, "annotationNote");
    if (!v9)
      goto LABEL_12;
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    swift_bridgeObjectRelease(v13);
    v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v14 = v11 & 0xFFFFFFFFFFFFLL;
    if (!v14)
    {
LABEL_12:
      v21 = v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_annotationProviderService;
      Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_annotationProviderService);
      if (!Strong)
        goto LABEL_23;
      v23 = Strong;
      v24 = *(_QWORD *)(v21 + 8);
      v25 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
      v26 = swift_allocObject(v25, 48, 7);
      *(_OWORD *)(v26 + 16) = xmmword_10070CCA0;
      v27 = objc_msgSend(v8, "annotationUuid");
      if (v27)
      {
        v28 = v27;
        ObjectType = swift_getObjectType();
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v32 = v31;

        *(_QWORD *)(v26 + 32) = v30;
        *(_QWORD *)(v26 + 40) = v32;
        dispatch thunk of AnnotationProviding.deleteAnnotationsWithUUIDs(_:)(v26, ObjectType, v24);
        swift_bridgeObjectRelease(v26);
        swift_unknownObjectRelease(v23);
        goto LABEL_23;
      }
LABEL_31:
      __break(1u);
      return;
    }
  }
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_annotationProvider);
  if (!v15)
  {
LABEL_23:
    swift_unknownObjectRelease(v5);
    goto LABEL_24;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "uiManagedObjectContext");

  if (!v17)
  {
    __break(1u);
    goto LABEL_31;
  }
  v59 = 0;
  v18 = objc_msgSend(v17, "save:", &v59);

  v19 = v59;
  if (v18)
  {
    v20 = v59;
    goto LABEL_23;
  }
  v33 = v59;
  v34 = _convertNSErrorToError(_:)(v19);

  swift_willThrow(v35);
  if (qword_1009CEA08 != -1)
    swift_once(&qword_1009CEA08, sub_1005CF3C0);
  v36 = type metadata accessor for Logger(0);
  sub_100048F64(v36, (uint64_t)qword_1009EF500);
  swift_errorRetain(v34);
  swift_unknownObjectRetain(v5);
  swift_errorRetain(v34);
  v37 = swift_unknownObjectRetain(v5);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.error.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v56 = v39;
    v40 = swift_slowAlloc(22, -1);
    v55 = (void *)swift_slowAlloc(64, -1);
    v59 = v55;
    *(_DWORD *)v40 = 136315394;
    v57 = v34;
    swift_errorRetain(v34);
    v41 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v42 = String.init<A>(describing:)(&v57, v41);
    v44 = v43;
    v57 = sub_100040F58(v42, v43, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v40 + 4, v40 + 12);
    swift_bridgeObjectRelease(v44);
    swift_errorRelease(v34);
    swift_errorRelease(v34);
    *(_WORD *)(v40 + 12) = 2080;
    v45 = objc_msgSend(v8, "annotationUuid");
    if (v45)
    {
      v46 = v45;
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v49 = v48;

    }
    else
    {
      v47 = 0;
      v49 = 0;
    }
    v50 = Optional<A>.description.getter(v47, v49);
    v52 = v51;
    swift_bridgeObjectRelease(v49);
    v57 = sub_100040F58(v50, v52, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v40 + 14, v40 + 22);
    swift_unknownObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease(v52);
    _os_log_impl((void *)&_mh_execute_header, v38, v56, "Error: %s saving annotation:%s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    swift_errorRelease(v34);
    goto LABEL_23;
  }
  swift_unknownObjectRelease(v5);
  swift_errorRelease(v34);
  swift_errorRelease(v34);
  swift_errorRelease(v34);

  swift_unknownObjectRelease_n(v5, 2);
LABEL_24:
  v53 = *(void **)(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor);
  if (v53)
    v54 = v53 == a1;
  else
    v54 = 0;
  if (v54)
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books35BookReaderHighlightEditorController_noteEditor) = 0;

  }
}

void sub_1005D0654(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSString v17;
  id v18;
  __n128 v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  _QWORD v24[2];

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v24 - v8;
  sub_1005D0CD8(a1, (uint64_t)v24 - v8);
  v10 = type metadata accessor for BookThemeEntity(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10) == 1)
  {
    sub_1005D0D20((uint64_t)v9);
  }
  else
  {
    v13 = BookThemeEntity.fontFamily.getter();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v24[0] = v13;
    v24[1] = v15;
    v16 = sub_1001F15BC();
    if ((Collection.isNotEmpty.getter(&type metadata for String, v16) & 1) != 0)
    {
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithName:size:", v17, 16.0);

      if (v18)
        goto LABEL_8;
    }
    else
    {
      swift_bridgeObjectRelease(v15);
    }
  }
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
LABEL_8:
  objc_msgSend(v2, "setHighlightedTextFont:", v18);

  sub_1005D0CD8(a1, (uint64_t)v6);
  if (v12(v6, 1, v10) == 1)
  {
    sub_1005D0D20((uint64_t)v6);
LABEL_12:
    v22 = 0;
    v21 = &kIMThemeIdentifierWhitePageTheme;
    goto LABEL_13;
  }
  v20 = BookThemeEntity.hasDarkBackground.getter(v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
  if ((v20 & 1) == 0)
    goto LABEL_12;
  v21 = &kIMThemeIdentifierNightPageTheme;
  v22 = 1;
LABEL_13:
  objc_msgSend(v2, "setShouldDim:", v22);
  v23 = objc_msgSend((id)objc_opt_self(IMTheme), "themeWithIdentifier:", *v21);
  objc_msgSend(v2, "setTheme:", v23);

}

void sub_1005D08C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *oslog;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v2 = objc_opt_self(AEAnnotation);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    swift_unknownObjectRetain(a1);
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setAnnotationNote:", v5);

    v6 = objc_msgSend(v4, "managedObjectContext");
    if (v6)
    {
      v7 = v6;
      v31 = 0;
      v8 = objc_msgSend(v6, "save:", &v31);

      v9 = v31;
      if (v8)
      {
        v10 = v31;
        swift_unknownObjectRelease(a1);
      }
      else
      {
        v15 = v31;
        v16 = _convertNSErrorToError(_:)(v9);

        swift_willThrow(v17);
        if (qword_1009CEA08 != -1)
          swift_once(&qword_1009CEA08, sub_1005CF3C0);
        v18 = type metadata accessor for Logger(0);
        sub_100048F64(v18, (uint64_t)qword_1009EF500);
        swift_errorRetain(v16);
        v19 = swift_errorRetain(v16);
        v20 = Logger.logObject.getter(v19);
        v21 = static os_log_type_t.error.getter(v20);
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc(12, -1);
          v23 = (void *)swift_slowAlloc(32, -1);
          v31 = v23;
          *(_DWORD *)v22 = 136315138;
          v29 = v16;
          swift_errorRetain(v16);
          v24 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
          v25 = String.init<A>(describing:)(&v29, v24);
          v27 = v26;
          v29 = sub_100040F58(v25, v26, (uint64_t *)&v31);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v22 + 4, v22 + 12);
          swift_bridgeObjectRelease(v27);
          swift_errorRelease(v16);
          swift_errorRelease(v16);
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Error saving note changes %s", v22, 0xCu);
          swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v23, -1, -1);
          swift_slowDealloc(v22, -1, -1);

          swift_unknownObjectRelease(a1);
          swift_errorRelease(v16);
        }
        else
        {
          swift_unknownObjectRelease(a1);
          swift_errorRelease(v16);
          swift_errorRelease(v16);
          swift_errorRelease(v16);

        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1009CEA08 != -1)
      swift_once(&qword_1009CEA08, sub_1005CF3C0);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100048F64(v11, (uint64_t)qword_1009EF500);
    oslog = Logger.logObject.getter(v12);
    v13 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "Error: highlightEditorController passing a non AEAnnotation class", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
}

uint64_t sub_1005D0C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005D0CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005D0D20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005D0D60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF5E8;
  if (!qword_1009EF5E8)
  {
    v1 = sub_100030B74(&qword_1009EF5E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009EF5E8);
  }
  return result;
}

id sub_1005D0F9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneControllerUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SceneControllerUtilities()
{
  return objc_opt_self(BKSceneControllerUtilities);
}

uint64_t sub_1005D0FF0(void *a1)
{
  id v1;
  uint64_t result;
  id v3;
  uint64_t v4;
  id v5;

  v1 = objc_msgSend(a1, "sceneType");
  result = 0xD000000000000012;
  switch((unint64_t)v1)
  {
    case 0uLL:
      result = 0x54656E6563534B42;
      break;
    case 1uLL:
      return result;
    case 2uLL:
      result = 0xD000000000000016;
      break;
    case 3uLL:
      result = 0xD000000000000014;
      break;
    default:
      v3 = v1;
      type metadata accessor for BKSceneType(0);
      v5 = v3;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v4, &v5, v4, &type metadata for UInt);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1005D10C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x54656E6563534B42 && a2 == 0xEF6B6F6F42657079)
    return 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x54656E6563534B42, 0xEF6B6F6F42657079, 0) & 1) != 0)
    return 0;
  if (a1 == 0xD000000000000016 && a2 == 0x80000001007D7A10
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000016, 0x80000001007D7A10, 0) & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000001007D7A30)
    return 3;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000014, 0x80000001007D7A30, 0) & 1) != 0)
    return 3;
  return 1;
}

void sub_1005D12B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  _QWORD v28[3];
  objc_super v29;

  v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for ToolbarHostingViewController();
  objc_msgSendSuper2(&v29, "viewDidLoad");
  v28[0] = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books28ToolbarHostingViewController_toolbarHeightPublisher];
  v2 = swift_allocObject(&unk_100915788, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain(v28[0]);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009CEED0);
  v4 = sub_1005D17FC();
  v5 = Publisher<>.sink(receiveValue:)(sub_1005D17F4, v2, v3, v4);
  swift_release(v2);
  swift_release(v28[0]);
  v6 = &v1[OBJC_IVAR____TtC5Books28ToolbarHostingViewController_cancellables];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Books28ToolbarHostingViewController_cancellables], v28, 33, 0);
  AnyCancellable.store(in:)(v6);
  swift_endAccess(v28);
  *(_QWORD *)&v7 = swift_release(v5).n128_u64[0];
  v8 = OBJC_IVAR____TtC5Books28ToolbarHostingViewController_rootViewController;
  objc_msgSend(v1, "addChildViewController:", *(_QWORD *)&v1[OBJC_IVAR____TtC5Books28ToolbarHostingViewController_rootViewController], v7);
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_8;
  }
  v10 = v9;
  objc_msgSend(v9, "bounds");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v14, v16, v18);
  objc_msgSend(v19, "setAutoresizingMask:", 18);
  v20 = objc_msgSend(*(id *)&v1[v8], "view");
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v21 = v20;
  objc_msgSend(v19, "addSubview:", v20);

  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v23 = v22;
  objc_msgSend(v22, "addSubview:", v19);

  v24 = objc_msgSend(*(id *)&v1[v8], "view");
  if (!v24)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v25 = v24;
  objc_msgSend(v19, "bounds");
  objc_msgSend(v25, "setFrame:");

  v26 = objc_msgSend(*(id *)&v1[v8], "view");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "setAutoresizingMask:", 18);

    objc_msgSend(*(id *)&v1[v8], "didMoveToParentViewController:", v1);
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1005D1560(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  _BYTE v14[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC5Books28ToolbarHostingViewController_rootViewController), "childViewControllers");
    v7 = sub_1001EDFE4();
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v13 = v8;
      else
        v13 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v8);
      if (v9)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }
        v10 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
          else
            v11 = *(id *)(v8 + 8 * v10 + 32);
          v12 = v11;
          ++v10;
          UIEdgeInsets.init(top:bottom:)(v11, v2, 0.0);
          objc_msgSend(v12, "setAdditionalSafeAreaInsets:");

        }
        while (v9 != v10);
      }
    }

    swift_bridgeObjectRelease(v8);
  }
}

id sub_1005D1724()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolbarHostingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ToolbarHostingViewController()
{
  return objc_opt_self(_TtC5Books28ToolbarHostingViewController);
}

uint64_t sub_1005D17BC()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books28ToolbarHostingViewController_toolbarHeightPublisher));
}

uint64_t sub_1005D17D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005D17F4(double *a1)
{
  uint64_t v1;

  sub_1005D1560(a1, v1);
}

unint64_t sub_1005D17FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF658;
  if (!qword_1009EF658)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009CEED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF658);
  }
  return result;
}

void sub_1005D1848()
{
  qword_1009EF660 = 0x4034000000000000;
}

void sub_1005D1858()
{
  qword_1009EF668 = 0x4030000000000000;
}

void sub_1005D1868()
{
  qword_1009EF670 = 0x4048000000000000;
}

void sub_1005D1878()
{
  qword_1009EF678 = 0x4014000000000000;
}

void sub_1005D1888()
{
  qword_1009EF680 = 0x4024000000000000;
}

void sub_1005D1898()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  objc_super v31;
  CGRect v32;
  CGRect v33;

  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for SupplementalContentButton();
  objc_msgSendSuper2(&v31, "layoutSubviews");
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "userInterfaceLayoutDirection");

  objc_msgSend(v0, "bounds");
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v0, "titleLabel");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v0, "imageView");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v8, "setNumberOfLines:", 1);
      objc_msgSend(v8, "setLineBreakMode:", 4);
      objc_msgSend(v8, "sizeThatFits:", v4, v6);
      v12 = v11;
      v14 = v13;
      objc_msgSend(v10, "sizeThatFits:", v4, v6);
      v16 = v15;
      v18 = v17;
      if (qword_1009CEA18 != -1)
        swift_once(&qword_1009CEA18, sub_1005D1858);
      v30 = v14;
      v19 = v6 - v14;
      v20 = v6 - v18;
      v21 = v4 - *(double *)&qword_1009EF668;
      if (qword_1009CEA10 != -1)
        swift_once(&qword_1009CEA10, sub_1005D1848);
      v22 = v19 * 0.5;
      v23 = v20 * 0.5;
      v24 = v21 - *(double *)&qword_1009EF660;
      if (qword_1009CEA30 != -1)
        swift_once(&qword_1009CEA30, sub_1005D1888);
      v25 = floor(v22);
      v26 = floor(v23);
      v27 = *(double *)&qword_1009EF680;
      if (v24 - *(double *)&qword_1009EF680 - v16 < v12)
        v12 = v24 - *(double *)&qword_1009EF680 - v16;
      v28 = *(double *)&qword_1009EF668;
      if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books25SupplementalContentButton_compactMode) == 1)
      {
        if (v2 == (id)1)
        {
          v29 = v4 - *(double *)&qword_1009EF668 - v12;
          v28 = *(double *)&qword_1009EF660;
        }
        else
        {
          v29 = *(double *)&qword_1009EF668;
          v28 = v4 - *(double *)&qword_1009EF660 - v16;
        }
      }
      else if (v2 == (id)1)
      {
        v28 = v4 - *(double *)&qword_1009EF668 - v16;
        v32.origin.x = v28;
        v32.origin.y = v26;
        v32.size.width = v16;
        v32.size.height = v18;
        v29 = CGRectGetMinX(v32) - v27 - v12;
      }
      else
      {
        *(_QWORD *)&v33.origin.x = qword_1009EF668;
        v33.origin.y = v26;
        v33.size.width = v16;
        v33.size.height = v18;
        v29 = v27 + CGRectGetMaxX(v33);
      }
      objc_msgSend(v8, "setFrame:", v29, v25, v12, v30);
      objc_msgSend(v10, "setFrame:", v28, v26, v16, v18);

    }
  }
}

void sub_1005D1BFC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;

  v1 = objc_msgSend(v0, "titleLabel");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "intrinsicContentSize");

  }
  v3 = objc_msgSend(v0, "imageView");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "intrinsicContentSize");

  }
  if (qword_1009CEA18 != -1)
    swift_once(&qword_1009CEA18, sub_1005D1858);
  if (qword_1009CEA30 != -1)
    swift_once(&qword_1009CEA30, sub_1005D1888);
  if (qword_1009CEA10 != -1)
    swift_once(&qword_1009CEA10, sub_1005D1848);
  if (qword_1009CEA20 != -1)
    swift_once(&qword_1009CEA20, sub_1005D1868);
  if (qword_1009CEA28 != -1)
    swift_once(&qword_1009CEA28, sub_1005D1878);
}

id sub_1005D1E8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SupplementalContentButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SupplementalContentButton()
{
  return objc_opt_self(_TtC5Books25SupplementalContentButton);
}

uint64_t sub_1005D1EDC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100732C68);
  v5 = swift_getKeyPath(&unk_100732C90);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005D1F58(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100732C68);
  v5 = swift_getKeyPath(&unk_100732C90);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t property wrapper backing initializer of PageSnapshotLoader.image(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D17F8);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_1005D2010()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100732C68);
  v2 = swift_getKeyPath(&unk_100732C90);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t PageSnapshotLoader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1005D21D8();
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));

  v1 = v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader__image;
  v2 = sub_10004CFD4(&qword_1009D19F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_cancellables));
  v3 = v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_logger;
  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t PageSnapshotLoader.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1005D21D8();
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));

  v1 = v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader__image;
  v2 = sub_10004CFD4(&qword_1009D19F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_cancellables));
  v3 = v0 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_logger;
  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

BOOL static PageSnapshotLoader.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72);
}

void sub_1005D21D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = v0;
    swift_retain(v0);
    v3 = v1;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v6 = 134217984;
      v7 = *(_QWORD *)(v2 + 72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8, v6 + 4, v6 + 12);
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Cancelling operation for index %ld", v6, 0xCu);
      swift_slowDealloc(v6, -1, -1);
    }
    else
    {
      swift_release(v2);
    }

    objc_msgSend(v3, "cancel");
  }
}

uint64_t sub_1005D22F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_logger;
  v17[1] = sub_10003F198((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v9 = swift_allocObject(&unk_1009157B8, 24, 7);
  swift_weakInit(v9 + 16, v2);
  v10 = swift_allocObject(&unk_1009157B8, 24, 7);
  swift_weakInit(v10 + 16, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v6 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1009157E0, v14 + 8, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v12, v7, v4);
  *(_QWORD *)(v15 + v13) = a1;
  *(_QWORD *)(v15 + v14) = v10;
  swift_retain(v9);
  swift_retain(v10);
  BookActionMenuDataSource.snapshotImage(forPage:onOperationCreation:completion:)(a1, (uint64_t)sub_1005D2E34, v9, (uint64_t)sub_1005D2EB8, v15);
  swift_release(v10);
  swift_release(v15);
  return swift_release_n(v9, 2);
}

void sub_1005D2490(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(Strong + 64);
    *(_QWORD *)(Strong + 64) = a1;
    v7 = a1;
    swift_release(v5);

  }
}

void sub_1005D24FC(void *a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  double v24;
  double v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint8_t *v32;
  uint8_t *v33;
  uint64_t Strong;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void **aBlock;
  _QWORD v74[4];
  uint64_t v75;
  char v76[32];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  __chkstk_darwin(v8);
  v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  __chkstk_darwin(v10);
  v67 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  if (!a1)
  {
    v26 = Logger.logObject.getter(v15);
    v30 = static os_log_type_t.debug.getter(v26, v27, v28, v29);
    if (os_log_type_enabled(v26, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v65 = a2;
      v32 = v31;
      *(_DWORD *)v31 = 134217984;
      v16 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      aBlock = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v31 + 4, v31 + 12);
      _os_log_impl((void *)&_mh_execute_header, v26, v30, "Got no image for page %ld", v32, 0xCu);
      v33 = v32;
      a2 = v65;
      swift_slowDealloc(v33, -1, -1);
    }

    goto LABEL_14;
  }
  v17 = a1;
  v18 = Logger.logObject.getter(v17);
  v22 = static os_log_type_t.debug.getter(v18, v19, v20, v21);
  if (os_log_type_enabled(v18, v22))
  {
    v63 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v64 = a4;
    v65 = a2;
    v23 = swift_slowAlloc(32, -1);
    *(_DWORD *)v23 = 134218496;
    objc_msgSend(v17, "size");
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          aBlock = (void **)(uint64_t)v24;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v23 + 4, v23 + 12);
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v17, "size");
          if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) != 0)
          {
            if (v25 > -9.22337204e18)
            {
              if (v25 < 9.22337204e18)
              {
                aBlock = (void **)(uint64_t)v25;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v23 + 14, v23 + 22);

                *(_WORD *)(v23 + 22) = 2048;
                aBlock = a3;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v23 + 24, v23 + 32);
                _os_log_impl((void *)&_mh_execute_header, v18, v22, "Got %ldx%ld image for page %ld", (uint8_t *)v23, 0x20u);
                swift_slowDealloc(v23, -1, -1);

                a4 = v64;
                a2 = v65;
                v16 = v63;
                goto LABEL_14;
              }
LABEL_27:
              __break(1u);
              return;
            }
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }

LABEL_14:
  swift_beginAccess(a4 + 16, v76, 0, 0);
  Strong = swift_weakLoadStrong(a4 + 16);
  if (Strong)
  {
    v35 = Strong;
    if (*(void ***)(Strong + 72) == a3)
    {
      v36 = sub_100059BB4();
      v65 = static OS_dispatch_queue.main.getter(v36);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, v12);
      v37 = *(unsigned __int8 *)(v13 + 80);
      v38 = (v37 + 16) & ~v37;
      v39 = (v14 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      v40 = v12;
      v41 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
      v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject(&unk_100915808, v42 + 8, v37 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v43 + v38, v16, v40);
      *(_QWORD *)(v43 + v39) = a3;
      *(_QWORD *)(v43 + v41) = v35;
      v44 = v66;
      *(_QWORD *)(v43 + v42) = v66;
      v74[3] = sub_1005D2FA8;
      v75 = v43;
      aBlock = _NSConcreteStackBlock;
      v74[0] = 1107296256;
      v74[1] = sub_1000147F0;
      v74[2] = &unk_100915820;
      v45 = _Block_copy(&aBlock);
      v46 = v75;
      v47 = v44;
      swift_retain(v35);
      swift_release(v46);
      v48 = v67;
      static DispatchQoS.unspecified.getter(v49);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v50 = sub_100008E8C();
      v51 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v52 = sub_100065324();
      v53 = v70;
      v54 = v72;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v52, v72, v50);
      v55 = (void *)v65;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v48, v53, v45);
      _Block_release(v45);
      swift_release(v35);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v53, v54);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v69);
    }
    else
    {
      v56 = swift_retain(Strong);
      v57 = Logger.logObject.getter(v56);
      v61 = static os_log_type_t.debug.getter(v57, v58, v59, v60);
      if (os_log_type_enabled(v57, v61))
      {
        v62 = swift_slowAlloc(22, -1);
        *(_DWORD *)v62 = 134218240;
        aBlock = a3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v62 + 4, v62 + 12);
        *(_WORD *)(v62 + 12) = 2048;
        aBlock = *(void ***)(v35 + 72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v62 + 14, v62 + 22);
        swift_release(v35);
        _os_log_impl((void *)&_mh_execute_header, v57, v61, "Ignoring, my index has changed: %ld -> %ld ", (uint8_t *)v62, 0x16u);
        swift_slowDealloc(v62, -1, -1);
        swift_release(v35);
      }
      else
      {
        swift_release_n(v35, 2);
      }

    }
  }
}

uint64_t sub_1005D2B38(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  void *v14;
  uint64_t v15;

  v7 = Logger.logObject.getter(a1);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v14 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Notifying about image for %ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  KeyPath = swift_getKeyPath(&unk_100732C68);
  v11 = swift_getKeyPath(&unk_100732C90);
  v14 = a4;
  v12 = a4;
  swift_retain(a3);
  return static Published.subscript.setter(&v14, a3, KeyPath, v11);
}

uint64_t sub_1005D2C58@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for PageSnapshotLoader(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

BOOL sub_1005D2C94(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 72) == *(_QWORD *)(*(_QWORD *)a2 + 72);
}

uint64_t sub_1005D2CB0()
{
  return type metadata accessor for PageSnapshotLoader(0);
}

uint64_t type metadata accessor for PageSnapshotLoader(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EF6F8;
  if (!qword_1009EF6F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageSnapshotLoader);
  return result;
}

void sub_1005D2CF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = "(";
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[2] = &unk_100732C50;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1005D2DB8(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

void sub_1005D2DB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D17F0)
  {
    v2 = sub_100030B74(&qword_1009D17F8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D17F0);
  }
}

uint64_t sub_1005D2E10()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005D2E34(void *a1)
{
  uint64_t v1;

  sub_1005D2490(a1, v1);
}

uint64_t sub_1005D2E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1005D2EB8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1005D24FC(a1, v1 + v4, *(void ***)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005D2F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1005D2FA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1005D2B38(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005D3008(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v3 = v2;
  sub_10004AA7C(a2, (uint64_t)&v29);
  v6 = v30;
  if (v30)
  {
    v7 = sub_10003F198(&v29, v30);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    _s5Books15CurrentPageViewVwxx_0(&v29);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(v3, "targetForAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  if (!v13)
    return 0;
  _bridgeAnyObjectToAny(_:)(v13);
  swift_unknownObjectRelease(v13);
  sub_10004CFC4(&v27, &v29);
  sub_10004CD0C((uint64_t)&v29, (uint64_t)&v27);
  v14 = sub_10000A5D8();
  if (!swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, v14, 6))
  {
    _s5Books15CurrentPageViewVwxx_0(&v29);
    return 0;
  }
  v15 = v26;
  sub_10004AA7C(a2, (uint64_t)&v27);
  v16 = v28;
  if (v28)
  {
    v17 = sub_10003F198(&v27, v28);
    v18 = *(_QWORD *)(v16 - 8);
    v19 = __chkstk_darwin(v17);
    v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v18 + 16))(v21, v19);
    v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    _s5Books15CurrentPageViewVwxx_0(&v27);
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v15, "performSelector:withObject:", a1, v22);
  swift_unknownObjectRelease(v22);
  _s5Books15CurrentPageViewVwxx_0(&v29);
  v24 = v15;
  return 1;
}

void destroy for OrientationLockHintButtonView(id *a1)
{

}

uint64_t initializeWithCopy for OrientationLockHintButtonView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for OrientationLockHintButtonView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for OrientationLockHintButtonView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for OrientationLockHintButtonView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationLockHintButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationLockHintButtonView()
{
  return &type metadata for OrientationLockHintButtonView;
}

uint64_t sub_1005D343C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100879ACC, 1);
}

uint64_t sub_1005D344C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v20 = a1;
  v2 = sub_10004CFD4(&qword_1009EF838);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EF840);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EF848);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005D3674((uint64_t)v4);
  v22 = *(_OWORD *)(v1 + 16);
  v11 = (void *)*((_QWORD *)&v22 + 1);
  KeyPath = swift_getKeyPath(&unk_100732D30);
  v13 = swift_getKeyPath(&unk_100732D58);
  v14 = v11;
  static Published.subscript.getter(&v21, v14, KeyPath);
  swift_release(KeyPath);
  swift_release(v13);
  sub_1005D4C54((uint64_t)&v22);
  if ((_BYTE)v21)
    v15 = 1.0;
  else
    v15 = 0.0;
  sub_10000B5E4((uint64_t)v4, (uint64_t)v7, &qword_1009EF838);
  *(double *)&v7[*(int *)(v5 + 36)] = v15;
  sub_100010960((uint64_t)v4, &qword_1009EF838);
  v16 = swift_getKeyPath(&unk_100732D78);
  v17 = swift_getKeyPath(&unk_100732DA0);
  static Published.subscript.getter(&v21, v14, v16);
  swift_release(v16);
  swift_release(v17);
  sub_1005D4C54((uint64_t)&v22);
  v18 = v21;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009EF840);
  *(_QWORD *)&v10[*(int *)(v8 + 52)] = v18;
  sub_100010960((uint64_t)v7, &qword_1009EF840);
  return sub_100025B3C((uint64_t)v10, v20, &qword_1009EF848);
}

uint64_t sub_1005D3674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  int v15;
  id v16;
  uint64_t v17;
  double v18;
  void *v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  double v41;
  __int128 v42;

  v3 = v1;
  v5 = sub_10004CFD4(&qword_1009EF850);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10004CFD4(&qword_1009EF858);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_OWORD *)(v3 + 16);
  v11 = (void *)*((_QWORD *)&v42 + 1);
  KeyPath = swift_getKeyPath(&unk_100732DC0);
  v13 = swift_getKeyPath(&unk_100732DE8);
  v14 = v11;
  static Published.subscript.getter(&v41, v14, KeyPath);
  swift_release(KeyPath);
  swift_release(v13);
  sub_1005D4C54((uint64_t)&v42);
  v15 = LOBYTE(v41);
  v16 = (id)swift_getKeyPath(&unk_100732E08);
  v17 = swift_getKeyPath(&unk_100732E30);
  static Published.subscript.getter(&v41, v14, v16);
  swift_release(v16);
  swift_release(v17);
  sub_1005D4C54((uint64_t)&v42);
  v18 = v41;
  if (qword_1009CE590 == -1)
  {
    v19 = *(void **)v3;
    if (*(_QWORD *)v3)
      goto LABEL_3;
  }
  else
  {
    swift_once(&qword_1009CE590, sub_100478EE4);
    v19 = *(void **)v3;
    if (*(_QWORD *)v3)
    {
LABEL_3:
      v2 = *(double *)&static REConstants.tapTargetSize;
      v20 = qword_1009CE598;
      v16 = v19;
      if (v20 == -1)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  a1 = *(_QWORD *)(v3 + 8);
  v10 = (char *)type metadata accessor for ChromeStyle(0);
  v38 = sub_100288CBC();
  EnvironmentObject.error()(0, a1, v10, v38, v39);
  __break(1u);
LABEL_12:
  swift_once(&qword_1009CE598, sub_100478F10);
LABEL_4:
  v21 = *(double *)&static REConstants.menuButtonTapTargetSize;
  if (qword_1009CE628 != -1)
    swift_once(&qword_1009CE628, sub_100479520);
  v22 = v18 * 0.0174532925;
  v23 = *(double *)&static REConstants.floatingButtonHeight;

  if ((v21 - v23) * 0.5 < 0.0)
    v25 = 0.0;
  else
    v25 = (v21 - v23) * 0.5;
  *v7 = static Alignment.center.getter(v24);
  v7[1] = v26;
  v27 = sub_10004CFD4(&qword_1009EF860);
  sub_1005D3A58(v3, v15, (uint64_t)v7 + *(int *)(v27 + 44), v25, v22, v2, v2);
  v28 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 325.0, 50.0, 0.0);
  v29 = Animation.delay(_:)(v28, 0.2);
  swift_release(v28);
  v30 = swift_allocObject(&unk_100915910, 24, 7);
  *(_QWORD *)(v30 + 16) = v29;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009EF850);
  v31 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v31 = sub_100414C5C;
  *((_QWORD *)v31 + 1) = v30;
  v32 = sub_100010960((uint64_t)v7, &qword_1009EF850);
  v33 = static Animation.timingCurve(_:_:_:_:duration:)(v32, 0.33, 0.0, 0.67, 1.0, 0.12);
  v34 = Animation.delay(_:)(v33, 0.0);
  swift_release(v33);
  v35 = swift_allocObject(&unk_100915938, 24, 7);
  *(_QWORD *)(v35 + 16) = v34;
  sub_10000B5E4((uint64_t)v10, a1, &qword_1009EF858);
  v36 = (_QWORD *)(a1 + *(int *)(sub_10004CFD4(&qword_1009EF838) + 36));
  *v36 = sub_100414D5C;
  v36[1] = v35;
  return sub_100010960((uint64_t)v10, &qword_1009EF858);
}

uint64_t sub_1005D3A58@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __n128 v52;
  id v53;
  char v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  double v71;
  uint64_t v72;
  __n128 v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  int v86;
  unint64_t v87;
  void (*v88)(_QWORD, _QWORD, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  double v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t ObjCClassFromMetadata;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  void (*v194)(char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _OWORD *v198;
  void *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)();
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t result;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  __n128 v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  double v241;
  double v242;
  int v243;
  uint64_t v244;
  int v245;
  unint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  unint64_t v257;
  char *v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  void (*v263)(_QWORD, _QWORD, _QWORD);
  unint64_t v264;
  double v265;
  uint64_t v266;
  uint64_t (*v267)();
  uint64_t v268;
  uint64_t Strong;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275[3];
  _OWORD v276[8];
  char v277;
  unint64_t v278;
  void (*v279)(_QWORD, _QWORD, _QWORD);
  uint64_t v280;
  uint64_t v281;
  char v282;
  char v283;
  double v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  char v289;
  double v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  double v295;
  double v296;
  uint64_t v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  _OWORD v302[2];
  __int128 v303;
  __int128 v304;
  char v305;
  char v306;
  char v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  const char *v316;
  unsigned __int8 v317;
  uint64_t v318;
  unsigned __int8 v319;
  __int128 v320;

  v241 = a6;
  v242 = a7;
  LODWORD(Strong) = a2;
  v272 = a1;
  v254 = a3;
  v253 = type metadata accessor for AccessibilityTraits(0);
  v251 = *(_QWORD *)(v253 - 8);
  __chkstk_darwin(v253);
  v252 = (char *)&v237 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = type metadata accessor for Locale(0);
  v262 = *(_QWORD *)(v268 - 8);
  __chkstk_darwin(v268);
  v267 = (uint64_t (*)())((char *)&v237 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v260 = (char *)&v237 - v12;
  v274 = type metadata accessor for String.LocalizationValue(0);
  v257 = *(_QWORD *)(v274 - 8);
  __chkstk_darwin(v274);
  v273 = (char *)&v237 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v266 = (uint64_t)&v237 - v15;
  v16 = type metadata accessor for ColorScheme(0);
  v239 = *(_QWORD *)(v16 - 8);
  v240 = v16;
  __chkstk_darwin(v16);
  v238 = (char *)&v237 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v237 - v19;
  v21 = type metadata accessor for Image.ResizingMode(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v237 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10004CFD4(&qword_1009D59A8);
  __chkstk_darwin(v25);
  v27 = (char *)&v237 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = sub_10004CFD4(&qword_1009EF868);
  __chkstk_darwin(v270);
  v261 = (uint64_t)&v237 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v258 = (char *)&v237 - v30;
  __chkstk_darwin(v31);
  v259 = (char *)&v237 - v32;
  __chkstk_darwin(v33);
  v247 = (char *)&v237 - v34;
  __chkstk_darwin(v35);
  v248 = (char *)&v237 - v36;
  __chkstk_darwin(v37);
  v250 = (char *)&v237 - v38;
  __chkstk_darwin(v39);
  v249 = (char *)&v237 - v40;
  v42.n128_f64[0] = __chkstk_darwin(v41);
  v271 = (uint64_t)&v237 - v43;
  v44 = Image.init(_:bundle:)(0x6E6F697461746F52, 0xEC0000006B636F4CLL, 0, v42);
  v45 = enum case for Image.TemplateRenderingMode.template(_:);
  v46 = type metadata accessor for Image.TemplateRenderingMode(0);
  v47 = *(_QWORD *)(v46 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v27, v45, v46);
  v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56);
  v49 = v272;
  v48(v27, 0, 1, v46);
  v50 = Image.renderingMode(_:)(v27, v44);
  swift_release(v44);
  sub_100010960((uint64_t)v27, &qword_1009D59A8);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for Image.ResizingMode.stretch(_:), v21);
  v51 = Image.resizable(capInsets:resizingMode:)(v24, v50, 0.0, 0.0, 0.0, 0.0);
  v52 = swift_release(v50);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v24, v21, v52);
  if (*(_QWORD *)v49)
  {
    v53 = *(id *)v49;
    v54 = Strong;
    v55 = ChromeStyle.orientationLockHintForegroundColor(locked:)(Strong & 1);

    KeyPath = swift_getKeyPath(&unk_100732E50);
    v256 = KeyPath;
    if (qword_1009CE628 != -1)
      KeyPath = swift_once(&qword_1009CE628, sub_100479520);
    v264 = v51;
    v57 = static REConstants.floatingButtonHeight;
    v58 = static Alignment.center.getter(KeyPath);
    v60 = _FrameLayout.init(width:height:alignment:)(&v316, v57, 0, v57, 0, v58, v59);
    v246 = (unint64_t)v316;
    v245 = v317;
    v244 = v318;
    v243 = v319;
    v255 = v320;
    v265 = a5;
    v263 = (void (*)(_QWORD, _QWORD, _QWORD))v55;
    if ((v54 & 1) != 0)
    {
      v61 = swift_getKeyPath(&unk_100732E80);
      v62 = swift_getKeyPath(&unk_100732EA8);
      v63 = v53;
      static Published.subscript.getter(v20, v63, v61);
      swift_release(v61);
      v64 = swift_release(v62);
      v66 = v238;
      v65 = v239;
      v67 = v240;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v239 + 104))(v238, enum case for ColorScheme.light(_:), v240, v64);
      v68 = static ColorScheme.== infix(_:_:)(v20, v66);
      v69 = *(void (**)(char *, uint64_t))(v65 + 8);
      v69(v66, v67);
      v69(v20, v67);
      if ((v68 & 1) != 0)
        v70 = 1212697343;
      else
        v70 = 1667458815;
      v72 = Color.init(rgbaHex:)(v70);

      v71 = 0.0;
    }
    else
    {
      v71 = 1.0;
      v72 = static Color.clear.getter(v60);
    }
    v74 = static Edge.Set.all.getter(v73);
    v75 = type metadata accessor for ChromeStyle(0);
    v76 = sub_100288CBC();
    EnvironmentObject.init()(v75, v76);
    v78 = v77;
    v80 = v79;
    v81 = static Edge.Set.top.getter(v77);
    v82 = v81;
    v83 = static Edge.Set.leading.getter(v81);
    v84 = Edge.Set.init(rawValue:)(0);
    v85 = Edge.Set.init(rawValue:)(v84);
    if (Edge.Set.init(rawValue:)(v85 & v82) != v82)
      v84 = Edge.Set.init(rawValue:)(v84 | v82);
    v86 = Edge.Set.init(rawValue:)(v84);
    if (Edge.Set.init(rawValue:)(v86 & v83) != v83)
      LOBYTE(v84) = Edge.Set.init(rawValue:)(v84 | v83);
    v298 = v264;
    LOWORD(v299) = 1;
    *((_QWORD *)&v299 + 1) = v256;
    *(_QWORD *)&v300 = v263;
    *((_QWORD *)&v300 + 1) = v246;
    LOBYTE(v301) = v245;
    *((_QWORD *)&v301 + 1) = v244;
    LOBYTE(v302[0]) = v243;
    *(_OWORD *)((char *)v302 + 8) = v255;
    *((_QWORD *)&v302[1] + 1) = v72;
    LOBYTE(v303) = v74;
    *((double *)&v303 + 1) = v71;
    *(_QWORD *)&v304 = v78;
    *((_QWORD *)&v304 + 1) = v80;
    v311 = v301;
    v310 = v300;
    v309 = v299;
    v308 = v264;
    v314 = v303;
    v315 = v304;
    v312 = v302[0];
    v313 = v302[1];
    *(double *)&v87 = EdgeInsets.init(_all:)(a4);
    v263 = v88;
    v264 = v87;
    v256 = v89;
    *(_QWORD *)&v255 = v90;
    v305 = 0;
    v92 = static Edge.Set.trailing.getter(v91);
    v93 = *(double *)(v272 + 48);
    v94 = EdgeInsets.init(_all:)(*(double *)(v272 + 56) + a4);
    v96 = v95;
    v98 = v97;
    v100 = v99;
    v101 = v305;
    v306 = 0;
    v103 = static Edge.Set.bottom.getter(v102);
    v104 = EdgeInsets.init(_all:)(v93 + a4);
    v106 = v105;
    v108 = v107;
    v110 = v109;
    v111 = v306;
    v307 = 0;
    v113 = static UnitPoint.center.getter(v112);
    v276[4] = v312;
    v276[5] = v313;
    v276[6] = v314;
    v276[7] = v315;
    v276[0] = v308;
    v276[1] = v309;
    v276[2] = v310;
    v276[3] = v311;
    v277 = v84;
    v278 = v264;
    v279 = v263;
    v280 = v256;
    v281 = v255;
    v282 = v101;
    v283 = v92;
    v284 = v94;
    v285 = v96;
    v286 = v98;
    v287 = v100;
    v288 = v111;
    v289 = v103;
    v290 = v104;
    v291 = v106;
    v292 = v108;
    v293 = v110;
    v294 = v307;
    v295 = v265;
    v296 = v113;
    v297 = v114;
    v115 = sub_10004CFD4(&qword_1009EF870);
    v116 = sub_1001F5558(&qword_1009EF878, &qword_1009EF870, (void (*)(void))sub_1005D4CC0);
    View.accessibilityHidden(_:)(0, v115, v116);
    sub_1005D4F44((uint64_t *)&v298);
    v246 = (unint64_t)"Lock_FullAnimation";
    v117 = v266;
    v118 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B85A0);
    v119 = v260;
    static Locale.current.getter(v118);
    v120 = v257;
    v121 = v273;
    v122 = v274;
    v265 = *(double *)(v257 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v117, v274);
    v123 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v123);
    v264 = objc_opt_self(NSBundle);
    v256 = ObjCClassFromMetadata;
    v125 = objc_msgSend((id)v264, "bundleForClass:", ObjCClassFromMetadata);
    v126 = v262;
    v127 = (uint64_t)v267;
    v128 = v268;
    v263 = *(void (**)(_QWORD, _QWORD, _QWORD))(v262 + 16);
    v263(v267, v119, v268);
    v129 = String.init(localized:table:bundle:locale:comment:)(v121, 0, 0, v125, v127, "Accessibility string for orientation lock button", 48, 2);
    v131 = v130;
    *(_QWORD *)&v255 = *(_QWORD *)(v126 + 8);
    ((void (*)(char *, uint64_t))v255)(v119, v128);
    v262 = *(_QWORD *)(v120 + 8);
    ((void (*)(uint64_t, uint64_t))v262)(v117, v122);
    *(_QWORD *)&v276[0] = v129;
    *((_QWORD *)&v276[0] + 1) = v131;
    v257 = sub_1001F2108();
    v133 = Text.init<A>(_:)(v276, &type metadata for String, v257, v132);
    v135 = v134;
    v137 = v136;
    LOBYTE(v117) = v138 & 1;
    v139 = (uint64_t)v258;
    ModifiedContent<>.accessibilityLabel(_:)();
    sub_1001F5B28(v133, v135, v117);
    swift_bridgeObjectRelease(v137);
    sub_100010960(v139, &qword_1009EF868);
    v140 = v266;
    if ((Strong & 1) != 0)
    {
      v141 = String.LocalizationValue.init(stringLiteral:)(0x64656B636F4CLL, 0xE600000000000000);
      static Locale.current.getter(v141);
      v142 = v273;
      v143 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v140, v274);
      v144 = v256;
      v145 = objc_msgSend((id)v264, "bundleForClass:", v256);
      v263(v127, v119, v128);
      v146 = String.init(localized:table:bundle:locale:comment:)(v142, 0, 0, v145, v127, "Accessibility string for orientation lock button value when locked", 66, 2);
    }
    else
    {
      v148 = String.LocalizationValue.init(stringLiteral:)(0x6B636F6C20746F4ELL, 0xEA00000000006465);
      static Locale.current.getter(v148);
      v149 = v273;
      v143 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v140, v274);
      v144 = v256;
      v150 = objc_msgSend((id)v264, "bundleForClass:", v256);
      v263(v127, v119, v128);
      v146 = String.init(localized:table:bundle:locale:comment:)(v149, 0, 0, v150, v127, "Accessibility string for orientation lock button value when not locked", 70, 2);
    }
    v151 = v146;
    v152 = v147;
    v153 = (void (*)(char *, uint64_t))v255;
    ((void (*)(char *, uint64_t))v255)(v119, v128);
    v154.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v262)(v140, v143);
    *(_QWORD *)&v276[0] = v151;
    *((_QWORD *)&v276[0] + 1) = v152;
    v155 = Text.init<A>(_:)(v276, &type metadata for String, v257, v154);
    v157 = v156;
    v159 = v158;
    v160 = v140;
    v161 = v144;
    v163 = v162 & 1;
    v164 = (uint64_t)v247;
    v165 = (uint64_t)v259;
    ModifiedContent<>.accessibilityValue(_:)();
    sub_1001F5B28(v155, v157, v163);
    swift_bridgeObjectRelease(v159);
    sub_100010960(v165, &qword_1009EF868);
    if ((Strong & 1) != 0)
    {
      v166 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x80000001007D7C90);
      v167 = v260;
      static Locale.current.getter(v166);
      v168 = v273;
      v169 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v160, v274);
      v170 = objc_msgSend((id)v264, "bundleForClass:", v161);
      v172 = (uint64_t)v267;
      v171 = v268;
      v263(v267, v167, v268);
      v173 = String.init(localized:table:bundle:locale:comment:)(v168, 0, 0, v170, v172, "Accessibility string for orientation lock button hint when locked", 65, 2);
    }
    else
    {
      v175 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000025, 0x80000001007D7C10);
      v167 = v260;
      static Locale.current.getter(v175);
      v176 = v273;
      v169 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v160, v274);
      v177 = objc_msgSend((id)v264, "bundleForClass:", v161);
      v178 = (uint64_t)v267;
      v171 = v268;
      v263(v267, v167, v268);
      v173 = String.init(localized:table:bundle:locale:comment:)(v176, 0, 0, v177, v178, "Accessibility string for orientation lock button hint when not locked", 69, 2);
    }
    v179 = v173;
    v180 = v174;
    v153(v167, v171);
    v181.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v262)(v160, v169);
    *(_QWORD *)&v276[0] = v179;
    *((_QWORD *)&v276[0] + 1) = v180;
    v182 = Text.init<A>(_:)(v276, &type metadata for String, v257, v181);
    v184 = v183;
    v186 = v185;
    v188 = v187 & 1;
    v189 = (uint64_t)v248;
    v190 = v270;
    ModifiedContent<>.accessibilityHint(_:)();
    sub_1001F5B28(v182, v184, v188);
    swift_bridgeObjectRelease(v186);
    v191 = sub_100010960(v164, &qword_1009EF868);
    v192 = v252;
    static AccessibilityTraits.isImage.getter(v191);
    v193 = (uint64_t)v250;
    ModifiedContent<>.accessibilityRemoveTraits(_:)(v192, v190);
    v194 = *(void (**)(char *, uint64_t))(v251 + 8);
    v195 = v253;
    v194(v192, v253);
    v196 = sub_100010960(v189, &qword_1009EF868);
    static AccessibilityTraits.isButton.getter(v196);
    v197 = (uint64_t)v249;
    ModifiedContent<>.accessibilityAddTraits(_:)(v192, v190);
    v194(v192, v195);
    sub_100010960(v193, &qword_1009EF868);
    sub_100025B3C(v197, v271, &qword_1009EF868);
    v198 = (_OWORD *)v272;
    v276[0] = *(_OWORD *)(v272 + 16);
    v199 = (void *)*((_QWORD *)&v276[0] + 1);
    v200 = swift_getKeyPath(&unk_100732D30);
    v201 = swift_getKeyPath(&unk_100732D58);
    v202 = v199;
    static Published.subscript.getter(v275, v202, v200);
    swift_release(v200);
    swift_release(v201);
    sub_1005D4C54((uint64_t)v276);
    if (LOBYTE(v275[0]) == 1)
    {
      v203 = *(_QWORD *)&v242;
      v270 = *(_QWORD *)&v241;
      v204 = &v202[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_tapActionViewListener];
      Strong = swift_unknownObjectWeakLoadStrong(v204);
      v260 = (char *)*((_QWORD *)v204 + 1);
      v205 = (char *)swift_allocObject(&unk_100915960, 80, 7);
      v206 = v268;
      v207 = v198[1];
      *((_OWORD *)v205 + 1) = *v198;
      *((_OWORD *)v205 + 2) = v207;
      v208 = v198[3];
      *((_OWORD *)v205 + 3) = v198[2];
      *((_OWORD *)v205 + 4) = v208;
      v259 = v205;
      sub_1005D4FD8((uint64_t)v198);
      v209 = v266;
      v210 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, v246 | 0x8000000000000000);
      static Locale.current.getter(v210);
      v211 = v273;
      v212 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))&v265)(v273, v209, v274);
      v213 = objc_msgSend((id)v264, "bundleForClass:", v256);
      v214 = (uint64_t)v267;
      v263(v267, v167, v206);
      v215 = String.init(localized:table:bundle:locale:comment:)(v211, 0, 0, v213, v214, "Accessibility string for orientation lock button", 48, 2);
      v272 = v216;
      v273 = (char *)v215;
      ((void (*)(char *, uint64_t))v255)(v167, v206);
      ((void (*)(uint64_t, uint64_t))v262)(v209, v212);
      v274 = 0xBFF0000000000000;
      v217 = sub_1005D4FD0;
      v218 = 0x6E6F697461746F52;
      v268 = 0xEC0000006B636F4CLL;
    }
    else
    {
      Strong = 0;
      v270 = 0;
      v203 = 0;
      v259 = 0;
      v260 = 0;
      v217 = 0;
      v272 = 0;
      v273 = 0;
      v218 = 0;
      v268 = 0;
      v274 = 0;
    }
    v219 = v261;
    sub_10000B5E4(v271, v261, &qword_1009EF868);
    v220 = v254;
    sub_10000B5E4(v219, v254, &qword_1009EF868);
    v221 = (uint64_t *)(v220 + *(int *)(sub_10004CFD4(&qword_1009EF910) + 48));
    v222 = Strong;
    v223 = v270;
    *v221 = v270;
    v221[1] = v203;
    v221[2] = 0;
    v221[3] = v222;
    v224 = (uint64_t)v259;
    v225 = (uint64_t)v260;
    v221[4] = (uint64_t)v260;
    v221[5] = (uint64_t)v217;
    v226 = (uint64_t)v217;
    v266 = v218;
    v267 = v217;
    v227 = v272;
    v228 = (uint64_t)v273;
    v221[6] = v224;
    v221[7] = v228;
    v221[8] = v227;
    v221[9] = v218;
    v229 = v268;
    v230 = v218;
    v231 = v274;
    v221[10] = v268;
    v221[11] = v231;
    sub_1002D1230(v223, v203, 0, v222, v225, v226, v224, v228, v227, v230, v229);
    sub_100010960(v271, &qword_1009EF868);
    sub_1002D1280(v223, v203, 0, v222, v225, (uint64_t)v267, v224, v228, v227, v266, v229);
    return sub_100010960(v261, &qword_1009EF868);
  }
  else
  {
    v233 = *(_QWORD *)(v49 + 8);
    v234 = type metadata accessor for ChromeStyle(0);
    v235 = sub_100288CBC();
    result = EnvironmentObject.error()(0, v233, v234, v235, v236);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005D4B74(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t);
  id v8;
  _BYTE v9[24];
  __int128 v10;

  v10 = *(_OWORD *)(a1 + 16);
  v1 = (void *)*((_QWORD *)&v10 + 1);
  v2 = *((_QWORD *)&v10 + 1) + OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler;
  swift_beginAccess(*((_QWORD *)&v10 + 1) + OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8 = v1;
    v7(ObjectType, v5);
    swift_unknownObjectRelease(v4);
    return sub_1005D4C54((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_1005D4C14@<X0>(uint64_t a1@<X8>)
{
  return sub_1005D344C(a1);
}

uint64_t sub_1005D4C54(uint64_t a1)
{

  return a1;
}

uint64_t sub_1005D4C94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D4CC0()
{
  return sub_1001F5558(&qword_1009EF880, &qword_1009EF888, (void (*)(void))sub_1005D4CE4);
}

uint64_t sub_1005D4CE4()
{
  return sub_1001F5558(&qword_1009EF890, &qword_1009EF898, (void (*)(void))sub_1005D4D08);
}

uint64_t sub_1005D4D08()
{
  return sub_1001F5558(&qword_1009EF8A0, &qword_1009EF8A8, (void (*)(void))sub_1005D4D2C);
}

unint64_t sub_1005D4D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF8B0;
  if (!qword_1009EF8B0)
  {
    v1 = sub_100030B74(&qword_1009EF8B8);
    sub_1005D4DB0();
    sub_100030B34(&qword_1009EF900, &qword_1009EF908, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF8B0);
  }
  return result;
}

unint64_t sub_1005D4DB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF8C0;
  if (!qword_1009EF8C0)
  {
    v1 = sub_100030B74(&qword_1009EF8C8);
    sub_1005D4E1C();
    sub_1001F544C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF8C0);
  }
  return result;
}

unint64_t sub_1005D4E1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF8D0;
  if (!qword_1009EF8D0)
  {
    v1 = sub_100030B74(&qword_1009EF8D8);
    sub_1001F5558(&qword_1009EF8E0, &qword_1009EF8E8, (void (*)(void))sub_1005D4EC0);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF8D0);
  }
  return result;
}

unint64_t sub_1005D4EC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF8F0;
  if (!qword_1009EF8F0)
  {
    v1 = sub_100030B74(&qword_1009EF8F8);
    sub_1002F4FC4();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF8F0);
  }
  return result;
}

uint64_t *sub_1005D4F44(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[4];
  v5 = (void *)a1[14];
  swift_release(a1[11]);
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);

  return a1;
}

uint64_t sub_1005D4FA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1005D4FD0()
{
  uint64_t v0;

  return sub_1005D4B74(v0 + 16);
}

uint64_t sub_1005D4FD8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 24);
  v3 = *(id *)a1;
  v4 = v2;
  return a1;
}

uint64_t sub_1005D5010()
{
  return sub_100030B34(&qword_1009EF918, &qword_1009EF848, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
}

uint64_t sub_1005D5040()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EF920);
  sub_100048F64(v0, (uint64_t)qword_1009EF920);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000016, 0x8000000100732EB0);
}

void sub_1005D50BC()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;

  v1 = objc_msgSend(v0, "numberOfTouches");
  v2 = *(id *)&v0[OBJC_IVAR____TtC5Books22PressGestureRecognizer_numberOfTouchesRequired];
  if (qword_1009CEA38 != -1)
    swift_once(&qword_1009CEA38, sub_1005D5040);
  v3 = type metadata accessor for Logger(0);
  sub_100048F64(v3, (uint64_t)qword_1009EF920);
  v4 = v0;
  v5 = Logger.logObject.getter(v4);
  v9 = static os_log_type_t.debug.getter(v5, v6, v7, v8);
  if (os_log_type_enabled(v5, v9))
  {
    v10 = swift_slowAlloc(18, -1);
    *(_DWORD *)v10 = 67109376;
    LODWORD(v21) = v1 == v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4, v10 + 4, v10 + 8);
    *(_WORD *)(v10 + 8) = 2048;
    v21 = objc_msgSend(v4, "state");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v10 + 10, v10 + 18);

    _os_log_impl((void *)&_mh_execute_header, v5, v9, "isPressed => %{BOOL}d; state: %ld", (uint8_t *)v10, 0x12u);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v11 = (char *)objc_msgSend(v4, "state");
  if ((unint64_t)(v11 - 3) < 3)
  {
    v13 = v4;
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = v1 == v2;
      v17 = swift_slowAlloc(18, -1);
      *(_DWORD *)v17 = 67109376;
      LODWORD(v21) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4, v17 + 4, v17 + 8);
      *(_WORD *)(v17 + 8) = 2048;
      v21 = objc_msgSend(v13, "state");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 10, v17 + 18);

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "isPressed => %{BOOL}d but state is %ld", (uint8_t *)v17, 0x12u);
      swift_slowDealloc(v17, -1, -1);

      return;
    }

  }
  else
  {
    if ((unint64_t)(v11 - 1) < 2)
    {
      if (v1 == v2)
        v12 = 2;
      else
        v12 = 4;
LABEL_17:
      objc_msgSend(v4, "setState:", v12);
      return;
    }
    if (!v11)
    {
      if (v1 == v2)
        v12 = 1;
      else
        v12 = 5;
      goto LABEL_17;
    }
    v13 = v4;
    v18 = Logger.logObject.getter(v13);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v20 = 134217984;
      v21 = objc_msgSend(v13, "state");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v20 + 4, v20 + 12);

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unknown gesture recognizer state: %ld", v20, 0xCu);
      swift_slowDealloc(v20, -1, -1);

      return;
    }

  }
}

double sub_1005D5470(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  objc_class *ObjectType;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  Class isa;
  double result;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_1005D55B0();
  v11 = sub_1004AF1C8();
  v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v10, v11);
  v13 = a4;
  v14 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v17.receiver = v14;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, *a5, isa, v13);

  sub_1005D50BC();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for PressGestureRecognizer()
{
  return objc_opt_self(_TtC5Books22PressGestureRecognizer);
}

unint64_t sub_1005D55B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DF0D8;
  if (!qword_1009DF0D8)
  {
    v1 = objc_opt_self(UITouch);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DF0D8);
  }
  return result;
}

id sub_1005D55EC(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v4 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", a1);
  v5 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", a1);
  v6 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v5, "pointSize");
  v7 = objc_msgSend(v6, "systemFontOfSize:weight:");
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", a2);
  v9 = objc_msgSend(v6, "preferredFontForTextStyle:compatibleWithTraitCollection:", a1, v8);

  objc_msgSend(v9, "pointSize");
  v10 = objc_msgSend(v4, "scaledFontForFont:maximumPointSize:", v7);

  return v10;
}

uint64_t sub_1005D5830()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_1005D5848, 0, 0);
}

uint64_t sub_1005D5848()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = *(void **)(v0[16] + OBJC_IVAR___BKAppAddToWTRDelegate_notifications);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1005D58E8;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1005D6034;
  v4[3] = &unk_100915B88;
  v4[4] = v3;
  objc_msgSend(v2, "getAuthorizationStatusWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_1005D58E8()
{
  return swift_task_switch(sub_1005D5934, 0, 0);
}

uint64_t sub_1005D5934()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  if (v1 >= 5)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  else
    return (*(uint64_t (**)(_QWORD))(v0 + 8))((0x101010002uLL >> (8 * v1)));
}

uint64_t sub_1005D5A88(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = unk_1009EFA7C;
  v8 = (uint64_t (*)(void))((char *)&dword_1009EFA78 + dword_1009EFA78);
  a3;
  v6 = (_QWORD *)swift_task_alloc(v5);
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_1005D5B04;
  return v8();
}

uint64_t sub_1005D5B04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD);

  v3 = *v1;
  v5 = *(_QWORD *)(*v1 + 24);
  v4 = *(_QWORD *)(*v1 + 32);
  v6 = *(void **)(*v1 + 16);
  v7 = *v1;
  swift_task_dealloc(v4);

  if (v5)
  {
    v8 = *(void (***)(_QWORD, _QWORD))(v3 + 24);
    v8[2](v8, a1);
    _Block_release(v8);
  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1005D5CA8(int a1, void *aBlock, void *a3)
{
  uint64_t v3;
  id v5;

  *(_QWORD *)(v3 + 16) = a3;
  *(_QWORD *)(v3 + 24) = _Block_copy(aBlock);
  v5 = a3;
  return swift_task_switch(sub_1005D5CF4, 0, 0);
}

uint64_t sub_1005D5CF4()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  void (**v4)(_QWORD);
  uint64_t (*v5)(void);

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 16) + OBJC_IVAR___BKAppAddToWTRDelegate_priceTracker);
  *(_QWORD *)(v0 + 32) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.didShowOptInAlert()
                           + async function pointer to dispatch thunk of PriceTracker.didShowOptInAlert());
    v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.didShowOptInAlert()
                                    + 1));
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_1005D5DA4;
    return v5();
  }
  else
  {

    v4 = *(void (***)(_QWORD))(v0 + 24);
    if (v4)
    {
      v4[2](*(_QWORD *)(v0 + 24));
      _Block_release(v4);
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005D5DA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (**v5)(_QWORD);

  v2 = *(_QWORD *)(*v0 + 32);
  v1 = *(_QWORD *)(*v0 + 40);
  v3 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(v1);
  swift_release(v2);

  v5 = *(void (***)(_QWORD))(v4 + 24);
  if (v5)
  {
    v5[2](*(_QWORD *)(v4 + 24));
    _Block_release(v5);
  }
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1005D5F48(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = unk_1009EFA34;
  v8 = (uint64_t (*)(void))((char *)&dword_1009EFA30 + dword_1009EFA30);
  a3;
  v6 = (_QWORD *)swift_task_alloc(v5);
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_1005D5FC4;
  return v8();
}

uint64_t sub_1005D5FC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (**v6)(_QWORD);

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 24);
  v2 = *(_QWORD *)(*v0 + 32);
  v4 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc(v2);

  if (v3)
  {
    v6 = *(void (***)(_QWORD))(v1 + 24);
    v6[2](v6);
    _Block_release(v6);
  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1005D6034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_QWORD **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  return swift_continuation_resume(v2);
}

uint64_t type metadata accessor for AppAddToWTRDelegate()
{
  return objc_opt_self(BKAppAddToWTRDelegate);
}

uint64_t sub_1005D60D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1009EFA04);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1009EFA00 + dword_1009EFA00))(v2, v3, v4);
}

uint64_t sub_1005D613C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1001FC2C4;
  return v6();
}

uint64_t sub_1005D6194(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1001FC2C4;
  return v7();
}

uint64_t sub_1005D61EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_10000B4D8(a1);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_100915A68, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1009EFA28, v17);
}

uint64_t sub_1005D6330()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D6354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EFA24);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009EFA20 + dword_1009EFA20))(a1, v4);
}

uint64_t sub_1005D63C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1005D63DC, 0, 0);
}

uint64_t sub_1005D63DC()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t (*v9)(void);

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 16) + OBJC_IVAR___BKAppAddToWTRDelegate_priceTracker);
  *(_QWORD *)(v0 + 24) = Strong;
  if (Strong)
  {
    v9 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter
                           + async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter);
    v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.featureEnabled.getter
                                    + 1));
    *(_QWORD *)(v0 + 32) = v2;
    *v2 = v0;
    v2[1] = sub_1005D6524;
    return v9();
  }
  else
  {
    if (qword_1009CDD98 != -1)
      swift_once(&qword_1009CDD98, sub_100289C70);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100048F64(v4, (uint64_t)qword_100A1E410);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[OptInAlert] Missing price tracker", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1005D6524(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_BYTE *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005D6580, 0, 0);
}

uint64_t sub_1005D6580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v6;

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    v1 = type metadata accessor for PriceTracker(0);
    v2 = sub_1005C88C4();
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, v2);
    return swift_task_switch(sub_1005D6608, v3, v4);
  }
  else
  {
    v6 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v6);
  }
}

uint64_t sub_1005D6608()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 57) = dispatch thunk of PriceTracker.hasShownOptInAlert.getter() & 1;
  return swift_task_switch(sub_1005D664C, 0, 0);
}

uint64_t sub_1005D664C()
{
  uint64_t v0;
  __n128 v1;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 57) == 1)
  {
    v1 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v1);
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1009EFA84);
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_1005D66D8;
    v3[16] = *(_QWORD *)(v0 + 16);
    return swift_task_switch(sub_1005D5848, 0, 0);
  }
}

uint64_t sub_1005D66D8(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_BYTE *)(*(_QWORD *)v1 + 58) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005D6734, 0, 0);
}

uint64_t sub_1005D6734()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  __n128 v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v1 = *(unsigned __int8 *)(v0 + 58);
  if (v1 == 2)
  {
    v2 = 1;
LABEL_5:
    v3 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v2, v3);
  }
  if ((v1 & 1) == 0)
  {
    v2 = 2;
    goto LABEL_5;
  }
  v6 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter
                         + async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter);
  v5 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.notificationsEnabled.getter
                                  + 1));
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_1005D67CC;
  return v6();
}

uint64_t sub_1005D67CC(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_BYTE *)(*(_QWORD *)v1 + 59) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005D6828, 0, 0);
}

uint64_t sub_1005D6828()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 59);
  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(BOOL))(v0 + 8))((v1 & 1) == 0);
}

uint64_t sub_1005D6864()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_1005D687C, 0, 0);
}

uint64_t sub_1005D687C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 120) + OBJC_IVAR___BKAppAddToWTRDelegate_priceTracker);
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v2 = v0 + 16;
    v3 = *(void **)(*(_QWORD *)(v0 + 120) + OBJC_IVAR___BKAppAddToWTRDelegate_notifications);
    *(_QWORD *)(v0 + 56) = v0 + 144;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1005D6A04;
    v4 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_10021A6F4;
    v5[3] = &unk_100915A80;
    v5[4] = v4;
    objc_msgSend(v3, "requestReauthorizationWithCompletion:", v5);
    return swift_continuation_await(v2);
  }
  else
  {
    if (qword_1009CDD98 != -1)
      swift_once(&qword_1009CDD98, sub_100289C70);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_100A1E410);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[OptInAlert] Missing price tracker. How did we get here?", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005D6A04()
{
  return swift_task_switch(sub_1005D6A50, 0, 0);
}

uint64_t sub_1005D6A50()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v3;
  uint64_t (*v4)(uint64_t);

  if (*(_BYTE *)(v0 + 144) == 1)
  {
    v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:)
                                         + async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:));
    v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PriceTracker.setNotificationsEnabled(_:)
                                    + 1));
    *(_QWORD *)(v0 + 136) = v1;
    *v1 = v0;
    v1[1] = sub_1005D6AD8;
    return v4(1);
  }
  else
  {
    v3 = swift_release(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
  }
}

uint64_t sub_1005D6AD8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  return swift_task_switch(sub_1005D6B2C, 0, 0);
}

uint64_t sub_1005D6B2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005D6B60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1009EFA3C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1009EFA38 + dword_1009EFA38))(v2, v3, v4);
}

uint64_t sub_1005D6BD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1009EFA5C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1009EFA58 + dword_1009EFA58))(v2, v3, v4);
}

uint64_t sub_1005D6D7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[40] = a1;
  v2[41] = v1;
  v3 = type metadata accessor for Book(0);
  v2[42] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[43] = v4;
  v2[44] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScoredBook(0);
  v2[45] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[46] = v6;
  v2[47] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005D6E04, 0, 0);
}

uint64_t sub_1005D6E04()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  double (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[40];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0[46];
    v21 = v0[43];
    sub_100366EDC(0, v2, 0);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v22 = v3;
    v19 = *(double (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v20 = *(_QWORD *)(v3 + 72);
    do
    {
      v5 = v0[47];
      v7 = v0[44];
      v6 = v0[45];
      v8 = v0[42];
      v9 = v19(v5, v4, v6);
      ScoredBook.book.getter(v9);
      v11 = Book.storeID.getter(v10);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v5, v6);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_100366EDC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_100366EDC(v12 > 1, v13 + 1, 1);
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13 + 4] = v11;
      v4 += v20;
      --v2;
    }
    while (v2);
  }
  swift_getObjectType();
  v14 = sub_1003A7B50();
  v15 = objc_allocWithZone((Class)type metadata accessor for AMDBookScorer.Event());
  v16 = sub_1005D7838(v14, (uint64_t)_swiftEmptyArrayStorage);
  v0[48] = v16;

  v17 = (_QWORD *)swift_task_alloc(dword_1009DAF84);
  v0[49] = v17;
  *v17 = v0;
  v17[1] = sub_1005D7040;
  return sub_10032C748((uint64_t)(v0 + 2), (uint64_t)v16);
}

uint64_t sub_1005D7040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1005D750C;
  else
    v3 = sub_1005D70A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005D70A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  sub_10004CD0C(v0 + 16, v0 + 48);
  v1 = sub_10004CFD4(&qword_1009D3090);
  if (!swift_dynamicCast(v0 + 304, v0 + 48, (char *)&type metadata for Any + 8, v1, 6))
  {
    v9 = *(void **)(v0 + 384);
    v10 = sub_1005D7A34();
    v11 = swift_allocError(&type metadata for AMDBookScorer.Errors, v10, 0, 0);
    *v12 = 0;
LABEL_10:
    swift_willThrow(v11);

LABEL_11:
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    v15 = *(_QWORD *)(v0 + 352);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 304);
  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_10004CE80(0x7364496D616461, 0xE700000000000000), (v4 & 1) == 0))
  {
    v9 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease(v2);
    v13 = sub_1005D7A34();
    v11 = swift_allocError(&type metadata for AMDBookScorer.Errors, v13, 0, 0);
    *v14 = 1;
    goto LABEL_10;
  }
  sub_10004CD0C(*(_QWORD *)(v2 + 56) + 32 * v3, v0 + 144);
  sub_10004CFC4((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 112));
  sub_10004CD0C(v0 + 112, v0 + 176);
  v5 = sub_10004CFD4(&qword_1009D30B0);
  if (!swift_dynamicCast(v0 + 288, v0 + 176, (char *)&type metadata for Any + 8, v5, 6))
  {
    v17 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease(v2);
    v18 = sub_1005D7A34();
    v19 = swift_allocError(&type metadata for AMDBookScorer.Errors, v18, 0, 0);
    v21 = 2;
LABEL_19:
    *v20 = v21;
    swift_willThrow(v19);

LABEL_23:
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(v0 + 288);
  if (*(_QWORD *)(v2 + 16) && (v7 = sub_10004CE80(0x7365726F6373, 0xE600000000000000), (v8 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v2 + 56) + 32 * v7, v0 + 80);
  }
  else
  {
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*(_QWORD *)(v0 + 104))
  {
    v17 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease(v6);
    sub_10004A7B8(v0 + 80);
    v30 = sub_1005D7A34();
    v19 = swift_allocError(&type metadata for AMDBookScorer.Errors, v30, 0, 0);
    v21 = 3;
    goto LABEL_19;
  }
  v22 = (uint64_t *)(v0 + 296);
  sub_10004CFC4((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 240));
  sub_10004CD0C(v0 + 240, v0 + 208);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D30A0);
  if (!swift_dynamicCast(v0 + 296, v0 + 208, (char *)&type metadata for Any + 8, v23, 6))
  {
    v31 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease(v6);
    v32 = sub_1005D7A34();
    v33 = swift_allocError(&type metadata for AMDBookScorer.Errors, v32, 0, 0);
    v35 = 4;
LABEL_22:
    *v34 = v35;
    swift_willThrow(v33);

    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
    goto LABEL_23;
  }
  v24 = *v22;
  if (*(_QWORD *)(v6 + 16) != *(_QWORD *)(*v22 + 16))
  {
    v31 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v24);
    v36 = sub_1005D7A34();
    v33 = swift_allocError(&type metadata for AMDBookScorer.Errors, v36, 0, 0);
    v35 = 5;
    goto LABEL_22;
  }
  v37 = *(void **)(v0 + 384);
  v38 = *(_QWORD *)(v0 + 376);
  v39 = *(_QWORD *)(v0 + 352);
  v25 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 272) = v6;
  *(_QWORD *)(v0 + 280) = v24;
  v26 = sub_10004CFD4(&qword_1009EFB98);
  v27 = sub_1005D7A78();
  v28 = Sequence.hashedUniquely<A>(by:)(sub_1001DEFEC, 0, v26, &type metadata for Int, v27, &protocol witness table for Int);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRetain(v28);
  v29 = sub_1005D75C4(v25, v28);
  swift_bridgeObjectRelease(v28);

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(v28);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_1005D750C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for AMDBookScorer.Event()
{
  return objc_opt_self(_TtCC5Books13AMDBookScorerP33_CD21F26B56464019284D998852D0D3665Event);
}

uint64_t sub_1005D7574(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EFB7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return sub_1005D6D7C(a1);
}

uint64_t sub_1005D75C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  double v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v4 = type metadata accessor for Book(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScoredBook(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = (char *)_swiftEmptyArrayStorage;
  if (!v14)
    return (uint64_t)v15;
  v37 = (char *)_swiftEmptyArrayStorage;
  sub_100366A98(0, v14, 0);
  v32 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v33 = v13;
  v17 = a1 + v32;
  v31 = *(_QWORD *)(v8 + 72);
  v34 = a2;
  while (1)
  {
    ScoredBook.book.getter(v16);
    v19 = Book.storeID.getter(v18);
    result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v6, v36);
    if (v19 < 0)
      break;
    if (!*(_QWORD *)(a2 + 16))
    {
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
LABEL_8:
      v25 = v22(v10, v17, v7);
      v24 = ScoredBook.score.getter(v25);
      goto LABEL_9;
    }
    v21 = sub_1002BB7F4(v19);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    if ((v23 & 1) == 0)
      goto LABEL_8;
    v24 = *(double *)(*(_QWORD *)(a2 + 56) + 16 * v21 + 8);
    v22(v10, v17, v7);
LABEL_9:
    v26 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    ScoredBook.copyWith(score:)(v26, v24);
    v15 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
    {
      sub_100366A98(0, *((_QWORD *)v15 + 2) + 1, 1);
      v15 = v37;
    }
    v28 = *((_QWORD *)v15 + 2);
    v27 = *((_QWORD *)v15 + 3);
    if (v28 >= v27 >> 1)
    {
      sub_100366A98(v27 > 1, v28 + 1, 1);
      v15 = v37;
    }
    *((_QWORD *)v15 + 2) = v28 + 1;
    v29 = v31;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v15[v32 + v28 * v31], v33, v7);
    v37 = v15;
    v17 += v29;
    --v14;
    a2 = v34;
    if (!v14)
      return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

id sub_1005D7838(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  objc_super v23;
  char v24[56];
  char v25[224];

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtCC5Books13AMDBookScorerP33_CD21F26B56464019284D998852D0D3665Event_data;
  *(_QWORD *)&v2[OBJC_IVAR____TtCC5Books13AMDBookScorerP33_CD21F26B56464019284D998852D0D3665Event_data] = 0;
  v7 = OBJC_IVAR____TtCC5Books13AMDBookScorerP33_CD21F26B56464019284D998852D0D3665Event_engagementData;
  *(_QWORD *)&v2[OBJC_IVAR____TtCC5Books13AMDBookScorerP33_CD21F26B56464019284D998852D0D3665Event_engagementData] = 0;
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v8, v25);
  *(_OWORD *)(inited + 16) = xmmword_1007147F0;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = 0xD000000000000016;
  *(_QWORD *)(inited + 56) = 0x80000001007B7A90;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x65736163657375;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 96) = 0xD000000000000010;
  *(_QWORD *)(inited + 104) = 0x80000001007D7F00;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 1684632420;
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  v10 = sub_100218274();
  *(_QWORD *)(inited + 144) = a1;
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x80000001007D7F20;
  v11 = sub_10004CFD4(&qword_1009EFBA8);
  v12 = swift_initStackObject(v11, v24);
  *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v12 + 32) = 0x7364496D616461;
  *(_QWORD *)(v12 + 40) = 0xE700000000000000;
  *(_QWORD *)(v12 + 48) = a2;
  v13 = v2;
  v14 = a1;
  v15 = sub_1001DB84C(v12);
  *(_QWORD *)(inited + 216) = sub_10004CFD4(&qword_1009EFBB0);
  *(_QWORD *)(inited + 192) = v15;
  v16 = sub_10003FB0C(inited);
  v17 = sub_1004EC9E0(v16);
  v18 = *(_QWORD *)&v2[v6];
  *(_QWORD *)&v2[v6] = v17;
  swift_bridgeObjectRelease(v18);
  v19 = sub_1004EC9E0(v16);
  swift_bridgeObjectRelease(v16);
  v20 = *(_QWORD *)&v2[v7];
  *(_QWORD *)&v2[v7] = v19;

  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
  v23.receiver = v13;
  v23.super_class = ObjectType;
  return objc_msgSendSuper2(&v23, "init", v21);
}

unint64_t sub_1005D7A34()
{
  unint64_t result;

  result = qword_1009EFB88;
  if (!qword_1009EFB88)
  {
    result = swift_getWitnessTable(&unk_100732FE0, &type metadata for AMDBookScorer.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EFB88);
  }
  return result;
}

unint64_t sub_1005D7A78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EFBA0;
  if (!qword_1009EFBA0)
  {
    v1 = sub_100030B74(&qword_1009EFB98);
    result = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EFBA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AMDBookScorer.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1005D7B10 + 4 * byte_100732F0D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1005D7B44 + 4 * asc_100732F08[v4]))();
}

uint64_t sub_1005D7B44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005D7B4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005D7B54);
  return result;
}

uint64_t sub_1005D7B60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005D7B68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1005D7B6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005D7B74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMDBookScorer.Errors()
{
  return &type metadata for AMDBookScorer.Errors;
}

unint64_t sub_1005D7B94()
{
  unint64_t result;

  result = qword_1009EFBB8;
  if (!qword_1009EFBB8)
  {
    result = swift_getWitnessTable(&unk_100732FB8, &type metadata for AMDBookScorer.Errors);
    atomic_store(result, (unint64_t *)&qword_1009EFBB8);
  }
  return result;
}

Class sub_1005D7BD8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  v4 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = v3();
  swift_bridgeObjectRelease(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

void sub_1005D7C58(uint64_t (*a1)(id *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  char v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  id v36;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v7 = a3;
    else
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
    v8 = swift_bridgeObjectRetain(a3);
    v9 = __CocoaSet.makeIterator()(v7, v8);
    v10 = type metadata accessor for BKTapActionView();
    v11 = sub_100008DB0(&qword_1009EFE88, (uint64_t (*)(uint64_t))type metadata accessor for BKTapActionView, (uint64_t)&protocol conformance descriptor for NSObject);
    v12 = Set.Iterator.init(_cocoa:)(v35, v9, v10, v11);
    v5 = v35[0];
    v33 = v35[1];
    v13 = v35[2];
    v14 = v35[3];
    v15 = v35[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a3 + 32);
    v33 = a3 + 56;
    v17 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain(a3);
    v13 = v17;
    v14 = 0;
  }
  v32 = (unint64_t)(v13 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v20 = __CocoaSet.Iterator.next()(v12);
  if (!v20)
    goto LABEL_39;
  v21 = v20;
  v34 = v20;
  v22 = type metadata accessor for BKTapActionView();
  swift_unknownObjectRetain(v21);
  swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
  v23 = v36;
  v24 = swift_unknownObjectRelease(v21);
  v25 = v14;
  v26 = v15;
  if (!v23)
    goto LABEL_39;
  while (1)
  {
    v36 = v23;
    v30 = a1(&v36, v24);
    if (v4)
    {

      goto LABEL_39;
    }
    if ((v30 & 1) != 0)
      goto LABEL_39;

    v14 = v25;
    v15 = v26;
    if (v5 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v15)
      break;
    v26 = (v15 - 1) & v15;
    v27 = __clz(__rbit64(v15)) | (v14 << 6);
    v25 = v14;
LABEL_27:
    v23 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v27);
    if (!v23)
      goto LABEL_39;
  }
  v25 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  if (v25 >= v32)
    goto LABEL_39;
  v28 = *(_QWORD *)(v33 + 8 * v25);
  if (v28)
  {
LABEL_26:
    v26 = (v28 - 1) & v28;
    v27 = __clz(__rbit64(v28)) + (v25 << 6);
    goto LABEL_27;
  }
  v29 = v14 + 2;
  if (v14 + 2 >= v32)
    goto LABEL_39;
  v28 = *(_QWORD *)(v33 + 8 * v29);
  if (v28)
    goto LABEL_25;
  v29 = v14 + 3;
  if (v14 + 3 >= v32)
    goto LABEL_39;
  v28 = *(_QWORD *)(v33 + 8 * v29);
  if (v28)
    goto LABEL_25;
  v29 = v14 + 4;
  if (v14 + 4 >= v32)
    goto LABEL_39;
  v28 = *(_QWORD *)(v33 + 8 * v29);
  if (v28)
  {
LABEL_25:
    v25 = v29;
    goto LABEL_26;
  }
  v25 = v14 + 5;
  if (v14 + 5 >= v32)
    goto LABEL_39;
  v28 = *(_QWORD *)(v33 + 8 * v25);
  if (v28)
    goto LABEL_26;
  v31 = v14 + 6;
  while (v32 != v31)
  {
    v28 = *(_QWORD *)(v33 + 8 * v31++);
    if (v28)
    {
      v25 = v31 - 1;
      goto LABEL_26;
    }
  }
LABEL_39:
  sub_100299C3C(v5);
}

double sub_1005D7F68@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v37 = a3;
  v38 = a2;
  v4 = type metadata accessor for UUID(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Location(0);
  v6 = *(_QWORD *)(v33 - 8);
  v7 = __chkstk_darwin(v33);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HistorySnapshot.Info(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v17 = sub_10004CFD4((uint64_t *)&unk_1009F0210);
  __chkstk_darwin(v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v19, (uint64_t *)&unk_1009F0210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10) == 1)
  {
    v20 = type metadata accessor for HistoryModel.Entry(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v37, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v19, v10);
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    HistorySnapshot.Info.location.getter(v21);
    v22 = *(_QWORD *)(v38 + 120);
    ObjectType = swift_getObjectType();
    v24 = dispatch thunk of PageNumberProviding.pageName(for:)(v9, ObjectType, *(_QWORD *)(v22 + 8));
    v26 = v25;
    v27 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v33);
    v28 = v34;
    HistorySnapshot.Info.uuid.getter(v27);
    v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    v29(v13, v10);
    v30 = v37;
    *v37 = v24;
    v30[1] = v26;
    v31 = type metadata accessor for HistoryModel.Entry(0);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))((char *)v30 + *(int *)(v31 + 20), v28, v36);
    v29(v16, v10);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

uint64_t sub_1005D81F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v34 - v5);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v34 - v14);
  v16 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v33 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    goto LABEL_7;
  }
  v18 = Strong;
  v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v19);
  swift_release(v18);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v21 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v15, v19, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v22 = type metadata accessor for OverlayViewModel.Overlay(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
  {
LABEL_7:
    v32 = (uint64_t)v15;
    return sub_100010960(v32, &qword_1009EFD70);
  }
  if (swift_getEnumCaseMultiPayload(v15, v22) != 4)
    return sub_10002C8F0((uint64_t)v15, type metadata accessor for OverlayViewModel.Overlay);
  swift_release(*v15);
  result = swift_weakLoadStrong(v16);
  if (result)
  {
    v25 = result;
    v26 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v26);
    v27 = swift_release(v25);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v12, 1, 1, v22, v27);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
    v28 = swift_getKeyPath(&unk_1007334B8);
    v29 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v6, v26, v28, v29);
    swift_release(v28);
    swift_release(v29);
    v30 = swift_getKeyPath(&unk_1007334B8);
    v31 = swift_getKeyPath(&unk_1007334E0);
    sub_10000B5E4((uint64_t)v9, (uint64_t)v3, &qword_1009EFD70);
    swift_retain(v26);
    static Published.subscript.setter(v3, v26, v30, v31);
    sub_1003F4AE4((uint64_t)v6);
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    sub_100010960((uint64_t)v6, &qword_1009EFD70);
    swift_release(v26);
    v32 = (uint64_t)v12;
    return sub_100010960(v32, &qword_1009EFD70);
  }
  return result;
}

uint64_t sub_1005D850C(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v4;
  void *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _BYTE v16[16];
  _BYTE v17[8];
  _UNKNOWN **v18;

  v18 = &off_100915CD8;
  swift_unknownObjectWeakInit(v17);
  sub_1002D0F1C((uint64_t)v17, (uint64_t)v16);
  v8 = *(void **)(v4 + 32);
  result = swift_unknownObjectUnownedLoadStrong(v4 + 16);
  if (result)
  {
    v10 = (void *)result;
    result = swift_weakLoadStrong(v4 + 24);
    if (result)
    {
      v11 = result;
      v12 = type metadata accessor for TOCModule();
      v13 = swift_allocObject(v12, 64, 7);
      swift_unknownObjectWeakInit(v13 + 48);
      sub_1005EDE60((uint64_t)v16, v13 + 16);
      *(_BYTE *)(v13 + 32) = a2 & 1;
      *(_BYTE *)(v13 + 33) = a3 & 1;
      *(_BYTE *)(v13 + 34) = a4 & 1;
      *(_QWORD *)(v13 + 40) = v8;
      swift_unknownObjectWeakAssign(v13 + 48, v10);
      v14 = v8;

      *(_QWORD *)(v13 + 56) = v11;
      v15 = swift_unownedRetain(v11);
      swift_release(v15);
      sub_1001FE9A0((uint64_t)v17);
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1005D8620(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for LocationMovement(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8);
  ObjectType = swift_getObjectType();
  v7 = dispatch thunk of ReadingSettingsProviding.bothMarginsAdvance.getter(ObjectType, v5);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor);
  if ((v7 & 1) != 0)
  {
    static LocationMovement.spreadForward.getter(v7);
    __asm { BR              X11 }
  }
  sub_1005E05F8(a1);
  __asm { BR              X11 }
}

uint64_t sub_1005D8734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1003B4F30(v1, 1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1005D87F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100733558);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_unknownObjectWeakLoadStrong(v3 + 144);
  v7 = *(_QWORD *)(v3 + 152);
  *a2 = result;
  a2[1] = v7;
  return result;
}

double sub_1005D8884(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100733558);
  v8[2] = v4;
  v8[3] = v2;
  v8[4] = v3;
  v9 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_unknownObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100495728, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_1005D8940@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100733528);
  v7 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_weakLoadStrong(v3 + 160);
  *a2 = result;
  return result;
}

double sub_1005D89D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100733528);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_retain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1005EF204, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

id sub_1005D8A88@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007335F0);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor);
  *a2 = v6;
  return v6;
}

void sub_1005D8B1C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007335F0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1005F0BB4, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

uint64_t sub_1005D8BD0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007335C8);
  v9[0] = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v9, 0, 0);
  v7 = type metadata accessor for ColorScheme(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_1005D8C94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007335C8);
  v15 = v9;
  v16 = v8;
  v17 = v9;
  v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, KeyPath, sub_1005F09EC, v14, (char *)&type metadata for () + 8, v11);
  v12 = swift_release(KeyPath);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v8, v4, v12);
}

void sub_1005D8DA0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100733500);
  v6 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType);
}

double sub_1005D8E34(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100733500);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1005F19E0, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1005D8EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EFBC0);
  sub_100048F64(v0, (uint64_t)qword_1009EFBC0);
  v5 = type metadata accessor for BookReaderPresenter(0);
  v1 = sub_10004CFD4(&qword_1009EFDD0);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v2, v3);
}

uint64_t sub_1005D8F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_contentSelectionInteractor);
  v3 = a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v3 + 8);
  swift_unknownObjectWeakAssign(v2 + 16, Strong);
  swift_unknownObjectRelease(Strong);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_menuController);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  swift_unknownObjectWeakAssign(v5 + OBJC_IVAR____TtC5Books24BookReaderMenuController_actionResponder, v6);
  return swift_unknownObjectRelease(v6);
}

uint64_t sub_1005D900C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  __n128 v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_10004CFD4(&qword_1009D2A98);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SelectionInfo.ID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v6, &qword_1009D2A98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_100010960((uint64_t)v6, &qword_1009D2A98);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  Strong = swift_weakLoadStrong(a2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v14 = Strong;
    KeyPath = swift_getKeyPath(&unk_100733528);
    v19 = v14;
    v16 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v19, KeyPath, v16);
    swift_release(KeyPath);
    v17 = swift_weakLoadStrong(v14 + 160);
    v13 = swift_release(v14);
    if (v17)
    {
      BookContentModule.removeSelectionInfo(_:)(v10);
      v13 = swift_release(v17);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
}

double sub_1005D91B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(_QWORD, _QWORD, __n128);
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t KeyPath;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t Strong;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t OpaqueTypeConformance2;
  uint64_t v160;
  uint64_t v161;
  __n128 v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __n128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __n128 v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __n128 v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __n128 v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __n128 v232;
  void (*v233)(char *, uint64_t, __n128);
  uint64_t v234;
  uint64_t (*v235)(char *, uint64_t, __n128);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __n128 v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  __n128 v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  __n128 v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  __n128 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  __n128 v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  __n128 v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  __n128 v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  __n128 v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  __n128 v331;
  double result;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  char *v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t ObjectType;
  uint64_t v419;
  char *v420;
  uint64_t v421;
  char *v422;
  uint64_t v423;
  char *v424;
  uint64_t v425;
  char *v426;
  uint64_t v427;
  char *v428;
  uint64_t v429;
  void (*v430)(_QWORD, _QWORD, __n128);
  uint64_t v431;
  uint64_t v432;
  void (*v433)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v434;
  uint64_t v435;
  _QWORD *v436;
  id active;
  id v438;

  v2 = v1;
  v436 = a1;
  v412 = sub_10004CFD4(&qword_1009E5B70);
  v411 = *(_QWORD *)(v412 - 8);
  __chkstk_darwin(v412);
  v410 = (char *)&v334 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v415 = sub_10004CFD4(&qword_1009EFF60);
  v414 = *(_QWORD *)(v415 - 8);
  __chkstk_darwin(v415);
  v413 = (char *)&v334 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v406 = sub_10004CFD4(&qword_1009EFF68);
  v405 = *(_QWORD *)(v406 - 8);
  __chkstk_darwin(v406);
  v404 = (char *)&v334 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v409 = sub_10004CFD4(&qword_1009EFF70);
  v408 = *(_QWORD *)(v409 - 8);
  __chkstk_darwin(v409);
  v407 = (char *)&v334 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v397 = sub_10004CFD4(&qword_1009EFF78);
  __chkstk_darwin(v397);
  v396 = (char *)&v334 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v400 = sub_10004CFD4(&qword_1009EFF80);
  v399 = *(_QWORD *)(v400 - 8);
  __chkstk_darwin(v400);
  v398 = (char *)&v334 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v403 = sub_10004CFD4(&qword_1009EFF88);
  v402 = *(_QWORD *)(v403 - 8);
  __chkstk_darwin(v403);
  v401 = (char *)&v334 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v392 = sub_10004CFD4(&qword_1009EFF90);
  __chkstk_darwin(v392);
  v390 = (char *)&v334 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = sub_10004CFD4(&qword_1009EFF98);
  __chkstk_darwin(v388);
  v386 = (char *)&v334 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v391 = sub_10004CFD4(&qword_1009EFFA0);
  v389 = *(_QWORD *)(v391 - 8);
  __chkstk_darwin(v391);
  v387 = (char *)&v334 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v395 = sub_10004CFD4(&qword_1009EFFA8);
  v394 = *(_QWORD *)(v395 - 8);
  __chkstk_darwin(v395);
  v393 = (char *)&v334 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v385 = sub_10004CFD4(&qword_1009EFFB0);
  v384 = *(_QWORD *)(v385 - 8);
  __chkstk_darwin(v385);
  v383 = (char *)&v334 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = sub_10004CFD4((uint64_t *)&unk_1009E3BC0);
  v382 = *(_QWORD *)(v432 - 8);
  __chkstk_darwin(v432);
  v428 = (char *)&v334 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = sub_10004CFD4(&qword_1009DE370);
  v339 = *(_QWORD *)(v341 - 8);
  __chkstk_darwin(v341);
  v338 = (char *)&v334 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = sub_10004CFD4(&qword_1009EFFB8);
  v342 = *(_QWORD *)(v343 - 8);
  __chkstk_darwin(v343);
  v340 = (char *)&v334 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = sub_10004CFD4(&qword_1009EFFC0);
  v345 = *(_QWORD *)(v346 - 8);
  __chkstk_darwin(v346);
  v344 = (char *)&v334 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v425 = sub_10004CFD4(&qword_1009EFFC8);
  v380 = *(_QWORD *)(v425 - 8);
  __chkstk_darwin(v425);
  v424 = (char *)&v334 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v427 = sub_10004CFD4((uint64_t *)&unk_1009EFFD0);
  v381 = *(_QWORD *)(v427 - 8);
  __chkstk_darwin(v427);
  v426 = (char *)&v334 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v423 = sub_10004CFD4((uint64_t *)&unk_1009E76E0);
  v379 = *(_QWORD *)(v423 - 8);
  __chkstk_darwin(v423);
  v422 = (char *)&v334 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v378 = sub_10004CFD4(&qword_1009EFFE0);
  v377 = *(_QWORD *)(v378 - 8);
  __chkstk_darwin(v378);
  v376 = (char *)&v334 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = sub_10004CFD4(&qword_1009EFFE8);
  v336 = *(_QWORD *)(v337 - 8);
  __chkstk_darwin(v337);
  v335 = (char *)&v334 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v372 = sub_10004CFD4(&qword_1009EFFF0);
  v373 = *(_QWORD *)(v372 - 8);
  __chkstk_darwin(v372);
  v370 = (char *)&v334 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = sub_10004CFD4(&qword_1009EFFF8);
  v375 = *(_QWORD *)(v374 - 8);
  __chkstk_darwin(v374);
  v371 = (char *)&v334 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v364 = sub_10004CFD4(&qword_1009F0000);
  v365 = *(_QWORD *)(v364 - 8);
  __chkstk_darwin(v364);
  v361 = (char *)&v334 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v366 = sub_10004CFD4(&qword_1009F0008);
  v367 = *(_QWORD *)(v366 - 8);
  __chkstk_darwin(v366);
  v362 = (char *)&v334 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v368 = sub_10004CFD4((uint64_t *)&unk_1009F0010);
  v369 = *(_QWORD *)(v368 - 8);
  __chkstk_darwin(v368);
  v363 = (char *)&v334 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v421 = sub_10004CFD4(&qword_1009D4D90);
  v359 = *(_QWORD *)(v421 - 8);
  __chkstk_darwin(v421);
  v420 = (char *)&v334 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = sub_10004CFD4(&qword_1009F0020);
  v356 = *(_QWORD *)(v355 - 8);
  __chkstk_darwin(v355);
  v353 = (char *)&v334 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v357 = sub_10004CFD4(&qword_1009F0028);
  v358 = *(_QWORD *)(v357 - 8);
  __chkstk_darwin(v357);
  v354 = (char *)&v334 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = sub_10004CFD4(&qword_1009F0030);
  v360 = *(_QWORD *)(v352 - 8);
  __chkstk_darwin(v352);
  v351 = (char *)&v334 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v349 = sub_10004CFD4(&qword_1009D9D28);
  v350 = *(_QWORD *)(v349 - 8);
  __chkstk_darwin(v349);
  v348 = (char *)&v334 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v34);
  v36 = (char *)&v334 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10004CFD4(&qword_1009F0038);
  v38 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v40 = (char *)&v334 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v419 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8);
  v41 = v419;
  ObjectType = swift_getObjectType();
  active = (id)dispatch thunk of ReadingSettingsProviding.currentThemePublisher.getter(ObjectType, v41, v42);
  v43 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v438 = (id)static OS_dispatch_queue.main.getter(v43);
  v431 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v433 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v431 - 8) + 56);
  v433(v36, 1, 1, v431);
  v44 = sub_10004CFD4((uint64_t *)&unk_1009E8F80);
  v45 = sub_100030B34((unint64_t *)&unk_1009F0040, (uint64_t *)&unk_1009E8F80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v430 = (void (*)(_QWORD, _QWORD, __n128))sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v438, v36, v44, v43, v45, v430);
  v46 = (uint64_t)v36;
  sub_100010960((uint64_t)v36, (uint64_t *)&unk_1009D4AE0);

  swift_release(active);
  v47 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16);
  v48 = sub_100030B34((unint64_t *)&unk_1009F0050, &qword_1009F0038, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v49 = Publisher<>.sink(receiveValue:)(sub_1005F122C, v47, v37, v48);
  v50 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v40, v37, v50);
  v51 = v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_subscribers;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_subscribers, &active, 33, 0);
  v52 = sub_10004CFD4(&qword_1009E86F0);
  v416 = sub_100030B34((unint64_t *)&unk_1009E91F0, &qword_1009E86F0, (uint64_t)&protocol conformance descriptor for [A]);
  v53 = v52;
  AnyCancellable.store<A>(in:)(v51, v52, v416);
  swift_endAccess(&active);
  v54 = swift_release(v49);
  active = (id)dispatch thunk of ReadingSettingsProviding.readingLoupeActivePublisher.getter(ObjectType, v419, v54);
  v55 = v43;
  v438 = (id)static OS_dispatch_queue.main.getter(active);
  v429 = v46;
  v56 = v431;
  v433((char *)v46, 1, 1, v431);
  v57 = sub_10004CFD4(&qword_1009D9D30);
  v58 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v59 = v348;
  v419 = v57;
  ObjectType = v58;
  Publisher.receive<A>(on:options:)(&v438, v46, v57, v55, v58, v430);
  sub_100010960(v46, (uint64_t *)&unk_1009D4AE0);

  swift_release(active);
  v60 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  v61 = sub_100030B34(&qword_1009D9D38, &qword_1009D9D28, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v62 = v349;
  v63 = Publisher<>.sink(receiveValue:)(sub_1005F1234, v60, v349, v61);
  v64 = swift_release(v60);
  v65 = v59;
  v66 = v2;
  (*(void (**)(char *, uint64_t, __n128))(v350 + 8))(v65, v62, v64);
  v435 = v51;
  swift_beginAccess(v51, &active, 33, 0);
  v67 = v53;
  v68 = v53;
  v69 = v416;
  AnyCancellable.store<A>(in:)(v51, v68, v416);
  swift_endAccess(&active);
  swift_release(v63);
  active = *(id *)(*(_QWORD *)(v66 + OBJC_IVAR____TtC5Books19BookReaderPresenter_bookReaderLayoutController) + 48);
  v70 = sub_10004CFD4((uint64_t *)&unk_1009F0060);
  v71 = sub_100030B34(&qword_1009DBBB0, (uint64_t *)&unk_1009F0060, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  active = (id)Publisher.eraseToAnyPublisher()(v70, v71);
  v417 = v55;
  v438 = (id)static OS_dispatch_queue.main.getter(active);
  v72 = v429;
  v433((char *)v429, 1, 1, v56);
  v73 = v67;
  v434 = v67;
  v74 = sub_10004CFD4((uint64_t *)&unk_1009F0070);
  v75 = sub_100030B34(&qword_1009E5C68, (uint64_t *)&unk_1009F0070, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v76 = v351;
  v77 = v430;
  Publisher.receive<A>(on:options:)(&v438, v72, v74, v55, v75, v430);
  sub_100010960(v72, (uint64_t *)&unk_1009D4AE0);

  swift_release(active);
  v78 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v78 + 16);
  v79 = swift_allocObject(&unk_100916A38, 32, 7);
  v80 = v436;
  *(_QWORD *)(v79 + 16) = v78;
  *(_QWORD *)(v79 + 24) = v80;
  v81 = sub_100030B34((unint64_t *)&unk_1009F0080, &qword_1009F0030, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v80);
  v82 = v352;
  v83 = v81;
  v84 = v76;
  v85 = v66;
  v86 = Publisher<>.sink(receiveValue:)(sub_1005F1240, v79, v352, v83);
  v87 = swift_release(v79);
  (*(void (**)(char *, uint64_t, __n128))(v360 + 8))(v84, v82, v87);
  v88 = v435;
  swift_beginAccess(v435, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v88, v73, v69);
  swift_endAccess(&active);
  swift_release(v86);
  v89 = *(_QWORD *)(v66 + OBJC_IVAR____TtC5Books19BookReaderPresenter_currentLocationProvider + 8);
  v90 = swift_getObjectType();
  active = (id)dispatch thunk of LocationProviding.currentHistoryPublisher.getter(v90, v89);
  v91 = *(_QWORD *)(*(_QWORD *)(v66 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 120);
  v360 = *(_QWORD *)(v66 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor);
  v92 = swift_getObjectType();
  v93 = (void *)dispatch thunk of PageNumberProviding.pageNamesInvalidatedPublisher.getter(v92, *(_QWORD *)(v91 + 8));
  v438 = v93;
  v94 = sub_10004CFD4(&qword_1009E3B40);
  v95 = sub_100030B34(&qword_1009F0090, &qword_1009E3B40, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v96 = (void *)Publisher.eraseToAnyPublisher()(v94, v95);
  swift_release(v93);
  v438 = v96;
  v97 = sub_10004CFD4(&qword_1009F0098);
  v98 = sub_100030B34(&qword_1009F00A0, &qword_1009F0098, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v99 = v353;
  v100 = Publishers.CombineLatest.init(_:_:)(&active, &v438, v97, v94, v98, v95);
  v101 = v417;
  active = (id)static OS_dispatch_queue.main.getter(v100);
  v102 = v429;
  v433((char *)v429, 1, 1, v431);
  v103 = sub_100030B34(&qword_1009F00A8, &qword_1009F0020, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v104 = v354;
  v105 = v355;
  Publisher.receive<A>(on:options:)(&active, v102, v355, v101, v103, v77);
  sub_100010960(v102, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v356 + 8))(v99, v105);
  v106 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v106 + 16);
  v107 = swift_allocObject(&unk_100916A60, 32, 7);
  *(_QWORD *)(v107 + 16) = sub_1005F1248;
  *(_QWORD *)(v107 + 24) = v106;
  v108 = sub_100030B34((unint64_t *)&unk_1009F00B0, &qword_1009F0028, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v109 = v357;
  v110 = Publisher<>.sink(receiveValue:)(sub_10004DE04, v107, v357, v108);
  v111 = swift_release(v107);
  (*(void (**)(char *, uint64_t, __n128))(v358 + 8))(v104, v109, v111);
  swift_beginAccess(v88, &active, 33, 0);
  v112 = v434;
  AnyCancellable.store<A>(in:)(v88, v434, v69);
  swift_endAccess(&active);
  swift_release(v110);
  swift_beginAccess(*(_QWORD *)(v85 + OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentPresentedState)+ OBJC_IVAR____TtC5Books13PublishedBool__value, &active, 33, 0);
  v113 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v114 = v420;
  v358 = v113;
  Published.projectedValue.getter(v113);
  swift_endAccess(&active);
  v115 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16);
  v116 = swift_allocObject(&unk_100916A88, 32, 7);
  v117 = (char *)v436;
  *(_QWORD *)(v116 + 16) = v436;
  *(_QWORD *)(v116 + 24) = v115;
  v118 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  swift_retain(v117);
  v119 = v421;
  v357 = v118;
  v120 = Publisher<>.sink(receiveValue:)(sub_1005F12A4, v116, v421, v118);
  v121 = swift_release(v116);
  v359 = *(_QWORD *)(v359 + 8);
  ((void (*)(char *, uint64_t, __n128))v359)(v114, v119, v121);
  swift_beginAccess(v88, &active, 33, 0);
  v122 = v112;
  AnyCancellable.store<A>(in:)(v88, v112, v69);
  swift_endAccess(&active);
  swift_release(v120);
  KeyPath = swift_getKeyPath(&unk_100733668);
  active = v117;
  v356 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&active, KeyPath, v356);
  swift_release(KeyPath);
  v124 = *(_QWORD *)&v117[OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel];
  swift_beginAccess(v124 + OBJC_IVAR____TtC5Books16HistoryViewModel__history, &active, 33, 0);
  swift_retain(v124);
  v125 = sub_10004CFD4(&qword_1009DA588);
  v126 = v361;
  Published.projectedValue.getter(v125);
  swift_endAccess(&active);
  swift_release(v124);
  v127 = sub_100030B34(&qword_1009F00C0, &qword_1009F0000, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v128 = v362;
  v129 = v364;
  Publisher.dropFirst(_:)(1, v364, v127);
  (*(void (**)(char *, uint64_t))(v365 + 8))(v126, v129);
  v130 = sub_100030B34(&qword_1009F00C8, &qword_1009F0008, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v131 = sub_100008DB0(&qword_1009F00D0, type metadata accessor for HistoryModel, (uint64_t)&unk_10071D4F0);
  v132 = v363;
  v133 = v366;
  Publisher<>.removeDuplicates()(v366, v130, v131);
  (*(void (**)(char *, uint64_t))(v367 + 8))(v128, v133);
  v134 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v134 + 16);
  v135 = sub_100030B34(&qword_1009F00D8, (uint64_t *)&unk_1009F0010, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v136 = v368;
  v137 = Publisher<>.sink(receiveValue:)(sub_1005F12B4, v134, v368, v135);
  v138 = swift_release(v134);
  (*(void (**)(char *, uint64_t, __n128))(v369 + 8))(v132, v136, v138);
  swift_beginAccess(v88, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v88, v122, v69);
  swift_endAccess(&active);
  swift_release(v137);
  v139 = v370;
  v140 = sub_100524E48();
  v141 = v417;
  active = (id)static OS_dispatch_queue.main.getter(v140);
  v142 = v429;
  v433((char *)v429, 1, 1, v431);
  v143 = sub_100030B34(&qword_1009F00E0, &qword_1009EFFF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v144 = v371;
  v145 = v372;
  Publisher.receive<A>(on:options:)(&active, v142, v372, v141, v143, v430);
  sub_100010960(v142, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v373 + 8))(v139, v145);
  v146 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v146 + 16);
  v147 = sub_100030B34(&qword_1009F00E8, &qword_1009EFFF8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v148 = v374;
  v149 = Publisher<>.sink(receiveValue:)(sub_1005F12BC, v146, v374, v147);
  v150 = swift_release(v146);
  (*(void (**)(char *, uint64_t, __n128))(v375 + 8))(v144, v148, v150);
  swift_beginAccess(v88, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v88, v122, v69);
  swift_endAccess(&active);
  swift_release(v149);
  Strong = swift_weakLoadStrong(v85 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v152 = (char *)Strong;
    v153 = swift_getKeyPath(&unk_100733528);
    active = v152;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&active, v153, v356);
    swift_release(v153);
    v154 = swift_weakLoadStrong(v152 + 160);
    v155 = swift_release(v152);
    if (v154)
    {
      v156 = v335;
      BookContentModule.movementStatePublisher.getter(v155);
      swift_release(v154);
      v157 = swift_allocObject(&unk_100916510, 24, 7);
      v158 = swift_unknownObjectWeakInit(v157 + 16);
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v158, &opaque type descriptor for <<opaque return type of BookContentModule.movementStatePublisher>>, 1);
      v160 = v337;
      v161 = Publisher<>.sink(receiveValue:)(sub_1005F13B4, v157, v337, OpaqueTypeConformance2);
      v162 = swift_release(v157);
      (*(void (**)(char *, uint64_t, __n128))(v336 + 8))(v156, v160, v162);
      v163 = v435;
      swift_beginAccess(v435, &active, 33, 0);
      AnyCancellable.store<A>(in:)(v163, v434, v69);
      swift_endAccess(&active);
      swift_release(v161);
    }
  }
  v429 = v436[14];
  active = *(id *)(v429 + 288);
  v164 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v433 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v164;
  v431 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v165 = (void *)Publisher.eraseToAnyPublisher()(v164, v431);
  active = v165;
  v166 = v376;
  v167 = v419;
  v168 = ObjectType;
  Publisher<>.removeDuplicates()(v419, ObjectType, &protocol witness table for Bool);
  swift_release(v165);
  v169 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v169 + 16);
  v170 = sub_100030B34((unint64_t *)&unk_1009F00F0, &qword_1009EFFE0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v171 = v378;
  v172 = Publisher<>.sink(receiveValue:)(sub_1005F12C4, v169, v378, v170);
  v173 = swift_release(v169);
  (*(void (**)(char *, uint64_t, __n128))(v377 + 8))(v166, v171, v173);
  v174 = v435;
  swift_beginAccess(v435, &active, 33, 0);
  v175 = v434;
  AnyCancellable.store<A>(in:)(v174, v434, v69);
  swift_endAccess(&active);
  swift_release(v172);
  active = (id)sub_1004382B4();
  v176 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v176 + 16);
  v177 = Publisher<>.sink(receiveValue:)(sub_1005F12CC, v176, v167, v168);
  swift_release(v176);
  swift_release(active);
  swift_beginAccess(v174, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v174, v175, v69);
  swift_endAccess(&active);
  swift_release(v177);
  v178 = v436;
  v179 = *(_QWORD *)((char *)v436 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel)
       + OBJC_IVAR____TtC5Books16OverlayViewModel__overlay;
  swift_beginAccess(v179, &active, 33, 0);
  v180 = sub_10004CFD4(&qword_1009E19E8);
  v181 = v422;
  v377 = v180;
  v378 = v179;
  Published.projectedValue.getter(v180);
  swift_endAccess(&active);
  v182 = v85;
  v183 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v183 + 16);
  v184 = sub_100030B34((unint64_t *)&unk_1009E76F0, (uint64_t *)&unk_1009E76E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v185 = v423;
  v376 = (char *)v184;
  v186 = Publisher<>.sink(receiveValue:)(sub_1005F12D4, v183, v423, v184);
  v187 = swift_release(v183);
  v375 = *(_QWORD *)(v379 + 8);
  ((void (*)(char *, uint64_t, __n128))v375)(v181, v185, v187);
  swift_beginAccess(v174, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v174, v175, v69);
  swift_endAccess(&active);
  swift_release(v186);
  v188 = v178[21];
  swift_beginAccess(*(_QWORD *)(*(_QWORD *)(v188 + 16) + 48) + OBJC_IVAR____TtC5Books16InfoBarViewModel__isTimedMessage, &active, 33, 0);
  v189 = v420;
  Published.projectedValue.getter(v358);
  swift_endAccess(&active);
  v190 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v190 + 16);
  v191 = v421;
  v192 = Publisher<>.sink(receiveValue:)(sub_1005F12DC, v190, v421, v357);
  v193 = swift_release(v190);
  v194 = v189;
  v195 = v182;
  ((void (*)(char *, uint64_t, __n128))v359)(v194, v191, v193);
  swift_beginAccess(v174, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v174, v175, v69);
  swift_endAccess(&active);
  swift_release(v192);
  v421 = v188;
  swift_beginAccess(*(_QWORD *)(*(_QWORD *)(v188 + 16) + 48) + OBJC_IVAR____TtC5Books16InfoBarViewModel__message, &active, 33, 0);
  v196 = sub_10004CFD4(&qword_1009E3858);
  v197 = v424;
  v417 = v196;
  Published.projectedValue.getter(v196);
  swift_endAccess(&active);
  v198 = sub_100030B34(&qword_1009F0100, &qword_1009EFFC8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v199 = v175;
  v200 = v425;
  v201 = v426;
  v379 = v198;
  Publisher.map<A>(_:)(sub_1002839F4, 0, v425, &type metadata for Bool, v198);
  v380 = *(_QWORD *)(v380 + 8);
  ((void (*)(char *, uint64_t))v380)(v197, v200);
  v202 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v202 + 16);
  v203 = sub_100030B34(&qword_1009F0108, (uint64_t *)&unk_1009EFFD0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v204 = v427;
  v420 = (char *)v203;
  v205 = Publisher<>.sink(receiveValue:)(sub_1005F12E4, v202, v427, v203);
  v206 = swift_release(v202);
  (*(void (**)(char *, uint64_t, __n128))(v381 + 8))(v201, v204, v206);
  swift_beginAccess(v174, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v174, v199, v69);
  swift_endAccess(&active);
  swift_release(v205);
  v207 = v436;
  active = *(id *)((char *)v436 + OBJC_IVAR____TtC5Books19BookReaderViewModel_showThemeCustomizationTipSubject);
  active = (id)Publisher.eraseToAnyPublisher()(v433, v431);
  v208 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v208 + 16);
  v209 = Publisher<>.sink(receiveValue:)(sub_1005F12EC, v208, v419, ObjectType);
  swift_release(v208);
  swift_release(active);
  swift_beginAccess(v174, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v174, v199, v69);
  swift_endAccess(&active);
  swift_release(v209);
  v210 = v207[22];
  if (v210)
  {
    v211 = *(_QWORD *)(*(_QWORD *)(v210 + 16) + 32);
    swift_beginAccess(v211 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__navigationAttemptsPastEnd, &active, 33, 0);
    swift_retain(v211);
    v212 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
    v213 = v338;
    Published.projectedValue.getter(v212);
    swift_endAccess(&active);
    swift_release(v211);
    v214 = sub_100030B34((unint64_t *)&qword_1009DE3B8, &qword_1009DE370, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v215 = v340;
    v216 = v341;
    Publisher.map<A>(_:)(sub_1005DD8BC, 0, v341, &type metadata for Bool, v214);
    (*(void (**)(char *, uint64_t))(v339 + 8))(v213, v216);
    v217 = sub_100030B34(&qword_1009F01C0, &qword_1009EFFB8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v218 = v344;
    v219 = v343;
    Publisher<>.removeDuplicates()(v343, v217, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v342 + 8))(v215, v219);
    v220 = swift_allocObject(&unk_100916510, 24, 7);
    swift_unknownObjectWeakInit(v220 + 16);
    v221 = sub_100030B34(&qword_1009F01C8, &qword_1009EFFC0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v222 = v346;
    v223 = Publisher<>.sink(receiveValue:)(sub_1005F13AC, v220, v346, v221);
    v224 = swift_release(v220);
    (*(void (**)(char *, uint64_t, __n128))(v345 + 8))(v218, v222, v224);
    v225 = v435;
    swift_beginAccess(v435, &active, 33, 0);
    AnyCancellable.store<A>(in:)(v225, v199, v69);
    swift_endAccess(&active);
    swift_release(v223);
  }
  v436 = *(_QWORD **)(v195 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager);
  v226 = v436[3];
  swift_beginAccess(v226 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState, &active, 33, 0);
  swift_retain(v226);
  v431 = sub_10004CFD4((uint64_t *)&unk_1009F0110);
  v227 = v428;
  Published.projectedValue.getter(v431);
  swift_endAccess(&active);
  swift_release(v226);
  v228 = swift_allocObject(&unk_100916510, 24, 7);
  v347 = v195;
  swift_unknownObjectWeakInit(v228 + 16);
  v433 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_100030B34(&qword_1009E3BD0, (uint64_t *)&unk_1009E3BC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v229 = v432;
  v230 = v199;
  v231 = Publisher<>.sink(receiveValue:)(sub_1005F12F4, v228, v432, v433);
  v232 = swift_release(v228);
  v233 = *(void (**)(char *, uint64_t, __n128))(v382 + 8);
  v233(v227, v229, v232);
  v234 = v69;
  v235 = (uint64_t (*)(char *, uint64_t, __n128))v233;
  v430 = (void (*)(_QWORD, _QWORD, __n128))v233;
  v236 = v435;
  swift_beginAccess(v435, &active, 33, 0);
  v237 = v236;
  v238 = v230;
  AnyCancellable.store<A>(in:)(v236, v230, v234);
  swift_endAccess(&active);
  swift_release(v231);
  swift_beginAccess(v378, &active, 33, 0);
  v239 = v422;
  Published.projectedValue.getter(v377);
  swift_endAccess(&active);
  v240 = v383;
  v241 = v423;
  Publisher.removeDuplicates(by:)(sub_1005DDA48, 0, v423, v376);
  ((void (*)(char *, uint64_t))v375)(v239, v241);
  v242 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v242 + 16);
  v243 = sub_100030B34((unint64_t *)&unk_1009F0120, &qword_1009EFFB0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v244 = v385;
  v245 = Publisher<>.sink(receiveValue:)(sub_1005F12FC, v242, v385, v243);
  v246 = swift_release(v242);
  (*(void (**)(char *, uint64_t, __n128))(v384 + 8))(v240, v244, v246);
  swift_beginAccess(v237, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v237, v238, v234);
  swift_endAccess(&active);
  swift_release(v245);
  v247 = v436[3];
  swift_beginAccess(v247 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState, &active, 33, 0);
  swift_retain(v247);
  Published.projectedValue.getter(v431);
  swift_endAccess(&active);
  swift_release(v247);
  v248 = swift_getKeyPath(&unk_100733690);
  v249 = v386;
  v250 = v432;
  Publisher.map<A>(_:)(v248, v432, v433);
  v251 = swift_release(v248);
  v252 = v235(v227, v250, v251);
  v253 = v390;
  static UIAccessibility.accessibilityNavigationServicesEnabledPublisher.getter(v252);
  v254 = v429;
  active = *(id *)(v429 + 200);
  v255 = sub_10004CFD4(&qword_1009CEC50);
  v256 = sub_100030B34((unint64_t *)&unk_1009F0130, &qword_1009CEC50, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  active = (id)Publisher.eraseToAnyPublisher()(v255, v256);
  v438 = *(id *)(v254 + 208);
  v257 = sub_10004CFD4(&qword_1009CEC58);
  v258 = sub_100030B34((unint64_t *)&unk_1009F0140, &qword_1009CEC58, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v438 = (id)Publisher.eraseToAnyPublisher()(v257, v258);
  v259 = sub_10004CFD4(&qword_1009E5C20);
  v260 = sub_10004CFD4(&qword_1009F0150);
  v261 = sub_100030B34(&qword_1009F0158, &qword_1009EFF98, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v262 = swift_getOpaqueTypeConformance2(v261, &opaque type descriptor for <<opaque return type of static UIAccessibility.accessibilityNavigationServicesEnabledPublisher>>, 1);
  v263 = v347;
  v264 = sub_100030B34(&qword_1009F0160, &qword_1009E5C20, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v265 = sub_100030B34(&qword_1009F0168, &qword_1009F0150, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v333 = v262;
  v266 = v387;
  Publishers.CombineLatest4.init(_:_:_:_:)(v249, v253, &active, &v438, v388, v392, v259, v260, v261, v333, v264, v265);
  v267 = sub_100030B34(&qword_1009F0170, &qword_1009EFFA0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v268 = v393;
  v269 = v391;
  Publisher.removeDuplicates(by:)(sub_1005DE310, 0, v391, v267);
  (*(void (**)(char *, uint64_t))(v389 + 8))(v266, v269);
  v270 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v270 + 16);
  v271 = swift_allocObject(&unk_100916AB0, 32, 7);
  *(_QWORD *)(v271 + 16) = sub_1005F1304;
  *(_QWORD *)(v271 + 24) = v270;
  v272 = sub_100030B34(&qword_1009F0178, &qword_1009EFFA8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v273 = v395;
  v274 = Publisher<>.sink(receiveValue:)(sub_1005F130C, v271, v395, v272);
  v275 = swift_release(v271);
  (*(void (**)(char *, uint64_t, __n128))(v394 + 8))(v268, v273, v275);
  v276 = v435;
  swift_beginAccess(v435, &active, 33, 0);
  v277 = v434;
  v278 = v416;
  AnyCancellable.store<A>(in:)(v276, v434, v416);
  swift_endAccess(&active);
  swift_release(v274);
  swift_beginAccess(*(_QWORD *)(*(_QWORD *)(v421 + 16) + 48) + OBJC_IVAR____TtC5Books16InfoBarViewModel__message, &active, 33, 0);
  v279 = v424;
  Published.projectedValue.getter(v417);
  swift_endAccess(&active);
  v280 = v425;
  v281 = v426;
  Publisher.map<A>(_:)(sub_1002839E0, 0, v425, &type metadata for Bool, v379);
  ((void (*)(char *, uint64_t))v380)(v279, v280);
  v282 = *(_QWORD *)(v263 + OBJC_IVAR____TtC5Books19BookReaderPresenter_layoutModeProvider + 8);
  v283 = swift_getObjectType();
  active = (id)dispatch thunk of BookLayoutModeProviding.layoutModePublisher.getter(v283, v282, v284);
  v285 = swift_getKeyPath(&unk_1007336B0);
  v286 = sub_10004CFD4((uint64_t *)&unk_1009E7770);
  v287 = sub_100030B34(&qword_1009E5BA0, (uint64_t *)&unk_1009E7770, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v288 = v396;
  Publisher.map<A>(_:)(v285, v286, v287);
  swift_release(v285);
  swift_release(active);
  v289 = sub_100030B34(&qword_1009F0180, &qword_1009EFF78, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v290 = v398;
  Publishers.CombineLatest.init(_:_:)(v281, v288, v427, v397, v420, v289);
  v291 = sub_100030B34(&qword_1009F0188, &qword_1009EFF80, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v292 = v401;
  v293 = v400;
  Publisher.removeDuplicates(by:)(sub_1005DE3E0, 0, v400, v291);
  (*(void (**)(char *, uint64_t))(v399 + 8))(v290, v293);
  v294 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v294 + 16);
  v295 = swift_allocObject(&unk_100916AD8, 32, 7);
  *(_QWORD *)(v295 + 16) = sub_1005F1368;
  *(_QWORD *)(v295 + 24) = v294;
  v296 = sub_100030B34(&qword_1009F0190, &qword_1009EFF88, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v297 = v403;
  v298 = Publisher<>.sink(receiveValue:)(sub_1005F1370, v295, v403, v296);
  v299 = swift_release(v295);
  (*(void (**)(char *, uint64_t, __n128))(v402 + 8))(v292, v297, v299);
  swift_beginAccess(v276, &active, 33, 0);
  v300 = v276;
  v301 = v277;
  v302 = v276;
  v303 = v278;
  AnyCancellable.store<A>(in:)(v300, v301, v278);
  swift_endAccess(&active);
  swift_release(v298);
  v304 = v436[3];
  swift_beginAccess(v304 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState, &active, 33, 0);
  swift_retain(v304);
  v305 = v428;
  Published.projectedValue.getter(v431);
  swift_endAccess(&active);
  swift_release(v304);
  v306 = swift_getKeyPath(&unk_1007336E0);
  v307 = v404;
  v308 = v432;
  Publisher.map<A>(_:)(v306, v432, v433);
  v309 = swift_release(v306);
  v430(v305, v308, v309);
  v310 = sub_100030B34(&qword_1009F0198, &qword_1009EFF68, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v311 = sub_100008DB0(&qword_1009F01A0, (uint64_t (*)(uint64_t))&type metadata accessor for BookContentHeaderStyle, (uint64_t)&protocol conformance descriptor for BookContentHeaderStyle);
  v312 = v407;
  v313 = v406;
  Publisher<>.removeDuplicates()(v406, v310, v311);
  (*(void (**)(char *, uint64_t))(v405 + 8))(v307, v313);
  v314 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v314 + 16);
  v315 = sub_100030B34(&qword_1009F01A8, &qword_1009EFF70, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v316 = v409;
  v317 = Publisher<>.sink(receiveValue:)(sub_1005F139C, v314, v409, v315);
  v318 = swift_release(v314);
  (*(void (**)(char *, uint64_t, __n128))(v408 + 8))(v312, v316, v318);
  swift_beginAccess(v302, &active, 33, 0);
  v319 = v434;
  AnyCancellable.store<A>(in:)(v302, v434, v303);
  swift_endAccess(&active);
  swift_release(v317);
  v320 = v436[3];
  swift_beginAccess(v320 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState, &active, 33, 0);
  swift_retain(v320);
  Published.projectedValue.getter(v431);
  swift_endAccess(&active);
  swift_release(v320);
  v321 = swift_getKeyPath(&unk_100733700);
  v322 = v410;
  Publisher.map<A>(_:)(v321, v308, v433);
  v323 = swift_release(v321);
  v430(v305, v308, v323);
  v324 = sub_100030B34((unint64_t *)&unk_1009F01B0, &qword_1009E5B70, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v325 = v413;
  v326 = v412;
  Publisher<>.removeDuplicates()(v412, v324, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v411 + 8))(v322, v326);
  v327 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v327 + 16);
  v328 = sub_100030B34(&qword_1009E5BA8, &qword_1009EFF60, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v329 = v415;
  v330 = Publisher<>.sink(receiveValue:)(sub_1005F13A4, v327, v415, v328);
  v331 = swift_release(v327);
  (*(void (**)(char *, uint64_t, __n128))(v414 + 8))(v325, v329, v331);
  swift_beginAccess(v302, &active, 33, 0);
  AnyCancellable.store<A>(in:)(v302, v319, v303);
  swift_endAccess(&active);
  *(_QWORD *)&result = swift_release(v330).n128_u64[0];
  return result;
}

double sub_1005DBEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  char v20;
  unsigned int *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = type metadata accessor for ColorScheme(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v9 = Strong;
    v36 = v1;
    v10 = BookThemeEntity.backgroundColor.getter(v8);
    v35 = v4;
    v11 = (void *)v10;
    KeyPath = swift_getKeyPath(&unk_1007335F0);
    v34 = v6;
    v13 = KeyPath;
    v30[1] = v30;
    __chkstk_darwin(KeyPath);
    v30[-2] = v9;
    v30[-1] = v11;
    v14 = v9 + OBJC_IVAR____TtC5Books19BookReaderViewModel___observationRegistrar;
    v37 = v9;
    v15 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    v31 = v15;
    v32 = v14;
    v33 = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v37, v13, sub_1005F1A44, &v30[-4], (char *)&type metadata for () + 8, v15);
    swift_release(v13);

    v17 = (void *)BookThemeEntity.textColor.getter(v16);
    v18 = swift_getKeyPath(&unk_100733640);
    __chkstk_darwin(v18);
    v30[-2] = v9;
    v30[-1] = v17;
    v37 = v9;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v37, v18, sub_1005F1214, &v30[-4], (char *)&type metadata for () + 8, v15);
    swift_release(v18);

    v20 = BookThemeEntity.hasDarkBackground.getter(v19);
    v21 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    v22 = v34;
    v23 = v35;
    if ((v20 & 1) == 0)
      v21 = (unsigned int *)&enum case for ColorScheme.light(_:);
    v24 = a1;
    v25 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v34, *v21, v33);
    v26 = swift_getKeyPath(&unk_1007335C8);
    __chkstk_darwin(v26);
    v30[-2] = v9;
    v30[-1] = v22;
    v37 = v9;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v37, v26, sub_1005F1A58, &v30[-4], (char *)&type metadata for () + 8, v31);
    v27 = swift_release(v26);
    v28 = (*(double (**)(char *, uint64_t, __n128))(v23 + 8))(v22, v25, v27);
    sub_1003E1F90(v24, v9, v28);
    sub_1005CFDB4(v24);
    v8.n128_u64[0] = swift_release(v9).n128_u64[0];
  }
  return v8.n128_f64[0];
}

id sub_1005DC16C()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;
  _QWORD v5[4];

  ObjectType = (objc_class *)swift_getObjectType();
  v5[3] = ObjectType;
  v5[0] = v0;
  v2 = v0;
  static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)(v5);
  _s5Books15CurrentPageViewVwxx_0(v5);
  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1005DC450()
{
  return type metadata accessor for BookReaderPresenter(0);
}

uint64_t type metadata accessor for BookReaderPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EFD00;
  if (!qword_1009EFD00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderPresenter);
  return result;
}

void sub_1005DC494(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = &Strong[OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentFrame];
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    v5[32] = 1;

  }
  swift_beginAccess(v3, &v8, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1005DBEAC(a1);

  }
}

double sub_1005DC52C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for State(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8);
    ObjectType = swift_getObjectType();
    swift_retain(v9);
    v12 = dispatch thunk of ReadingSettingsProviding.readingLoupeActive.getter(ObjectType, v10);
    v13 = v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v14, 0, 0);
    sub_10002CD84(v13, (uint64_t)v5, type metadata accessor for State);
    v5[*(int *)(v3 + 80)] = v12 & 1;
    sub_1003DC7BC((uint64_t)v5);

    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

double sub_1005DC664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t v8;
  float64x2_t *v9;
  float64x2_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentFrame;
    *(_OWORD *)v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_BYTE *)(v8 + 32) = 1;
    v9 = *(float64x2_t **)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_bookReaderLayoutController);
    swift_beginAccess(&v9[6], v23, 0, 0);
    v10 = v9[6];
    v20 = v9[7];
    v21 = v10;
    KeyPath = swift_getKeyPath(&unk_100733800);
    v22 = a3;
    v12 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, KeyPath, v12);
    swift_release(KeyPath);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v21, *(float64x2_t *)(a3+ OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin)), (int32x4_t)vceqq_f64(v20, *(float64x2_t *)(a3+ OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin+ 16)))), 0xFuLL))) & 1) == 0)
    {
      v13 = swift_getKeyPath(&unk_100733800);
      __chkstk_darwin(v13);
      v17[2] = a3;
      v18 = v21;
      v19 = v20;
      v22 = a3;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v22, v13, sub_1005F1708, v17, (char *)&type metadata for () + 8, v12);
      swift_release(v13);
    }
    sub_1004E9690();
    v14 = type metadata accessor for PublishedBool(0);
    v15 = sub_100008DB0((unint64_t *)&unk_1009F0220, type metadata accessor for PublishedBool, (uint64_t)&unk_100730AFC);
    v16 = ObservableObject<>.objectWillChange.getter(v14, v15);
    ObservableObjectPublisher.send()();

    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

void sub_1005DC86C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[24];

  v42 = a1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009F0210);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009DD048);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v39 - v11);
  v13 = type metadata accessor for HistorySnapshot(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for HistoryModel(0);
  __chkstk_darwin(v43);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v23 = (char *)Strong;
    v24 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v24)
    {
      v25 = v24;
      KeyPath = swift_getKeyPath(&unk_100733668);
      v41 = v18;
      v27 = KeyPath;
      v39 = v8;
      v44 = v25;
      v28 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v44, v27, v28);
      swift_release(v27);
      v40 = *(_QWORD *)(v25 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel);
      swift_retain(v40);
      v29 = swift_release(v25);
      v30 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor];
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, v42, v13, v29);
      v31 = swift_retain(v30);
      HistorySnapshot.previous.getter(v31);
      swift_retain(v30);
      sub_1005D7F68((uint64_t)v5, v30, v12);
      v32 = sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009F0210);
      HistorySnapshot.next.getter(v32);
      swift_retain(v30);
      v33 = v39;
      v34 = sub_1005D7F68((uint64_t)v5, v30, v39);
      (*(void (**)(char *, uint64_t, double))(v14 + 8))(v16, v13, v34);
      sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009F0210);
      swift_release(v30);
      sub_100025B3C((uint64_t)v12, (uint64_t)v21, &qword_1009DD048);
      sub_100025B3C((uint64_t)v33, (uint64_t)&v21[*(int *)(v43 + 20)], &qword_1009DD048);
      v35 = swift_getKeyPath(&unk_1007337B8);
      v36 = swift_getKeyPath(&unk_1007337E0);
      v37 = (uint64_t)v41;
      sub_10002CD84((uint64_t)v21, (uint64_t)v41, type metadata accessor for HistoryModel);
      v38 = v40;
      swift_retain(v40);
      static Published.subscript.setter(v37, v38, v35, v36);
      sub_10002C8F0((uint64_t)v21, type metadata accessor for HistoryModel);

      swift_release(v38);
    }
    else
    {

    }
  }
}

void sub_1005DCBE4(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  _QWORD v17[4];

  v4 = *a1;
  v5 = a3 + 16;
  KeyPath = swift_getKeyPath(&unk_100733790);
  v14[2] = a2;
  v15 = v4;
  v17[0] = a2;
  v7 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v17, KeyPath, sub_1005F16DC, v14, (char *)&type metadata for () + 8, v7);
  swift_release(KeyPath);
  swift_beginAccess(v5, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v10)
    {
      v11 = v10;
      v12 = swift_getKeyPath(&unk_100733528);
      v16 = v11;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v16, v12, v7);
      swift_release(v12);
      v13 = swift_weakLoadStrong(v11 + 160);

      swift_release(v11);
      if (v13)
      {
        BookContentModule.fullscreenContentPresentationChanged(presented:)(v4);
        swift_release(v13);
      }
    }
    else
    {

    }
  }
}

double sub_1005DCD48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = type metadata accessor for State(0);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v9);

    v10 = v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v11, 0, 0);
    sub_10002CD84(v10, (uint64_t)v5, type metadata accessor for State);
    sub_1003DD344();
    sub_1003DC7BC((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

void sub_1005DCE38(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[26];
  int v21;
  __int16 v22;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *a1;
  v7 = a1[1];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v11 + 168);
      swift_retain(v13);

      swift_release(v12);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
      type metadata accessor for MainActor(0);
      swift_bridgeObjectRetain_n(v7, 2);
      v16 = swift_retain_n(v14, 2);
      v17 = static MainActor.shared.getter(v16);
      v18 = swift_allocObject(&unk_100916C90, 105, 7);
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v18 + 32) = v14;
      *(_QWORD *)(v18 + 40) = v8;
      *(_QWORD *)(v18 + 56) = 0;
      *(_QWORD *)(v18 + 64) = 0;
      *(_QWORD *)(v18 + 48) = v7;
      *(_WORD *)(v18 + 72) = 1;
      *(_DWORD *)(v18 + 74) = v21;
      *(_WORD *)(v18 + 78) = v22;
      *(_QWORD *)(v18 + 88) = 0;
      *(_QWORD *)(v18 + 96) = 0;
      *(_QWORD *)(v18 + 80) = 0;
      *(_BYTE *)(v18 + 104) = 1;
      v19 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009F0208, v18);
      swift_release(v13);
      swift_bridgeObjectRelease(v7);
      swift_release(v19);
      swift_release(v14);
    }
    else
    {

    }
  }
}

void sub_1005DCFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = PageMovementState.isIdle.getter(Strong);
    v6 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager] + 24);
    swift_retain(v6);
    v7 = (v5 & 1) == 0;
    sub_1003DCD90(v7);
    swift_release(v6);
    v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Books19BookReaderPresenter_pageCurlState];
    KeyPath = swift_getKeyPath(&unk_100733720);
    v10 = swift_getKeyPath(&unk_100733748);
    v11 = v7;
    swift_retain(v8);
    static Published.subscript.setter(&v11, v8, KeyPath, v10);

  }
}

double sub_1005DD0D8(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    if ((*(_BYTE *)(v12 + 3) & v7) == 1)
    {
      sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
      if (qword_1009CE390 != -1)
        swift_once(&qword_1009CE390, sub_1003E0A38);
      sub_1003DCF34(qword_1009E0C68, unk_1009E0C70);
      sub_1003DC7BC((uint64_t)v6);
    }
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[3] = v7 ^ 1;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1005DD248(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  v8 = a2 + 16;
  swift_beginAccess(v8, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v23, 0, 0);
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[4] = v7;
    sub_1003DC7BC((uint64_t)v6);
    swift_release(v11);
  }
  swift_beginAccess(v8, v22, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v8);
  if (v13)
  {
    v15 = (void *)v13;
    v16 = swift_weakLoadStrong(v13 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);

    if (v16)
    {
      v17 = *(_QWORD *)(v16 + 112);
      swift_retain(v17);
      swift_release(v16);
      KeyPath = swift_getKeyPath(&unk_100733768);
      __chkstk_darwin(KeyPath);
      *(_QWORD *)&v20[-16] = v17;
      v20[-8] = v7;
      v21 = v17;
      v19 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v21, KeyPath, sub_1005F16B0, &v20[-32], (char *)&type metadata for () + 8, v19);
      swift_release(v17);
      *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    }
  }
  return result;
}

double sub_1005DD440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v10);

    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1, 1, v11);
    v13 = v10 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v10 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v15, 0, 0);
    if (*(_BYTE *)(v13 + 5) == 1 && v12 == 1)
    {
      sub_10002CD84(v13, (uint64_t)v6, type metadata accessor for State);
      if (qword_1009CE390 != -1)
        swift_once(&qword_1009CE390, sub_1003E0A38);
      sub_1003DCF34(qword_1009E0C68, unk_1009E0C70);
      sub_1003DC7BC((uint64_t)v6);
    }
    sub_10002CD84(v13, (uint64_t)v6, type metadata accessor for State);
    v6[5] = v12 != 1;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double sub_1005DD5D4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[7] = v7;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1005DD6CC(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[8] = v7;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1005DD7C4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[9] = v7;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1005DD8BC@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0;
  return result;
}

double sub_1005DD8D0(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v11);

    v12 = v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v11 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    sub_10002CD84(v12, (uint64_t)v6, type metadata accessor for State);
    v6[10] = v7;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1005DD9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);

    if (v7)
    {
      sub_1004EA65C(a1);
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

BOOL sub_1005DDA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;

  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - v8;
  sub_10000B5E4(a1, (uint64_t)&v18 - v8, &qword_1009EFD70);
  v10 = type metadata accessor for OverlayViewModel.Overlay(0);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) == 1)
  {
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    v12 = 0;
  }
  else
  {
    sub_1003F4768();
    v12 = v13;
    sub_10002C8F0((uint64_t)v9, type metadata accessor for OverlayViewModel.Overlay);
  }
  sub_10000B5E4(a2, (uint64_t)v6, &qword_1009EFD70);
  if (v11(v6, 1, v10) != 1)
  {
    sub_1003F4768();
    v14 = v15;
    sub_10002C8F0((uint64_t)v6, type metadata accessor for OverlayViewModel.Overlay);
    if (!v12)
      return v14 == 0;
    if (v14)
      return v14 == v12;
    return 0;
  }
  sub_100010960((uint64_t)v6, &qword_1009EFD70);
  if (v12)
    return 0;
  v14 = 0;
  return v14 == 0;
}

void sub_1005DDBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1005DDC1C(a1);

  }
}

uint64_t sub_1005DDC1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35[2];
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v2 = type metadata accessor for OverlayViewModel.Search(0);
  __chkstk_darwin(v2);
  v35[0] = (uint64_t)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v35 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)v35 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)v35 - v14;
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)v35 - v17);
  v37 = v1;
  v35[1] = v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v20 = Strong;
    v21 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v21);
    swift_release(v20);
    KeyPath = swift_getKeyPath(&unk_1007334B8);
    v23 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v18, v21, KeyPath);
    swift_release(v21);
    swift_release(KeyPath);
    swift_release(v23);
  }
  else
  {
    v24 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
  }
  sub_10000B5E4((uint64_t)v18, (uint64_t)v15, &qword_1009EFD70);
  v25 = type metadata accessor for OverlayViewModel.Overlay(0);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
  if (v26(v15, 1, v25) != 1)
  {
    v27 = (char *)&loc_1005DDE38 + 4 * byte_100733028[swift_getEnumCaseMultiPayload(v15, v25)];
    __asm { BR              X10 }
  }
  v28 = v36;
  sub_10000B5E4(v36, (uint64_t)v12, &qword_1009EFD70);
  if (v26(v12, 1, v25) != 1)
  {
    v29 = (char *)&loc_1005DDFA8 + 4 * byte_10073302D[swift_getEnumCaseMultiPayload(v12, v25)];
    __asm { BR              X10 }
  }
  sub_10000B5E4(v28, (uint64_t)v9, &qword_1009EFD70);
  if (v26(v9, 1, v25) == 1)
  {
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v25);
    v31 = sub_10002C8F0((uint64_t)v9, type metadata accessor for OverlayViewModel.Overlay);
    if (EnumCaseMultiPayload == 2)
    {
      dispatch thunk of SearchModuleFactory.clearSaved()(v31);
LABEL_16:
      v32 = (uint64_t)v18;
      return sub_100010960(v32, &qword_1009EFD70);
    }
  }
  sub_10000B5E4((uint64_t)v18, (uint64_t)v6, &qword_1009EFD70);
  if (v26(v6, 1, v25) != 1)
  {
    if (swift_getEnumCaseMultiPayload(v6, v25) != 2)
    {
      sub_100010960((uint64_t)v18, &qword_1009EFD70);
      return sub_10002C8F0((uint64_t)v6, type metadata accessor for OverlayViewModel.Overlay);
    }
    v33 = v35[0];
    sub_10002C960((uint64_t)v6, v35[0], type metadata accessor for OverlayViewModel.Search);
    dispatch thunk of SearchModuleFactory.save(_:for:)(v33, 0x86AC351052600000, 32);
    sub_10002C8F0(v33, type metadata accessor for OverlayViewModel.Search);
    goto LABEL_16;
  }
  sub_100010960((uint64_t)v18, &qword_1009EFD70);
  v32 = (uint64_t)v6;
  return sub_100010960(v32, &qword_1009EFD70);
}

uint64_t sub_1005DE248(char a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;
  BOOL v16;
  char v17;

  result = 0;
  if (a1 == a7 && ((a2 ^ a8) & 1) == 0)
  {
    v16 = a3 == a9 && a4 == a10;
    if (v16 || (v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a9, a10, 0), result = 0, (v17 & 1) != 0))
    {
      result = (a6 | a12) == 0;
      if (a6)
      {
        if (a12)
        {
          if (a5 == a11 && a6 == a12)
            return 1;
          else
            return _stringCompareWithSmolCheck(_:_:expecting:)(a5, a6, a11, a12, 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1005DE310(uint64_t a1, uint64_t a2)
{
  return sub_1005DE248(*(_BYTE *)a1, *(unsigned __int8 *)(a1 + 1), *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)a2, *(unsigned __int8 *)(a2 + 1), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32)) & 1;
}

void sub_1005DE35C(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a7 + 16;
  swift_beginAccess(a7 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    sub_1005EE380(a1, a2 & 1, a5, a6);

  }
}

BOOL sub_1005DE3E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1]) & 1) == 0;
}

double sub_1005DE408(char a1, char a2, uint64_t a3)
{
  uint64_t v6;
  double result;

  v6 = swift_allocObject(&unk_100916B50, 26, 7);
  *(_QWORD *)(v6 + 16) = a3;
  *(_BYTE *)(v6 + 24) = a1;
  *(_BYTE *)(v6 + 25) = a2;
  swift_retain(a3);
  sub_1006498E4((void (*)(uint64_t))sub_1005F14F4, v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_1005DE474(uint64_t a1, char a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1005DE4E0(a2 & 1, a3 & 1);

  }
}

double sub_1005DE4E0(char a1, char a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  Swift::Bool v11;
  Swift::Bool v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  v7 = Strong;
  if ((a2 & 1) != 0)
  {
    if (Strong)
    {
      KeyPath = swift_getKeyPath(&unk_100733528);
      v15 = v7;
      v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v9);
      swift_release(KeyPath);
      v10 = swift_weakLoadStrong(v7 + 160);
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
      if (v10)
      {
        v11 = 0;
        v12 = 0;
LABEL_8:
        BookContentModule.setHeaderVisible(_:animated:)(v11, v12);
        *(_QWORD *)&result = swift_release(v10).n128_u64[0];
      }
    }
  }
  else if (Strong)
  {
    v13 = swift_getKeyPath(&unk_100733528);
    v15 = v7;
    v14 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v13, v14);
    swift_release(v13);
    v10 = swift_weakLoadStrong(v7 + 160);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    if (v10)
    {
      v11 = (a1 & 1) == 0;
      v12 = 1;
      goto LABEL_8;
    }
  }
  return result;
}

double sub_1005DE62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v4 = type metadata accessor for BookContentHeaderStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_100916B28, v9 + v6, v8 | 7);
  *(_QWORD *)(v10 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain(a2);
  sub_1006498E4((void (*)(uint64_t))sub_1005F1468, v10);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_1005DE710(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v6)
    {
      v7 = v6;
      KeyPath = swift_getKeyPath(&unk_100733528);
      v12 = v7;
      v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v9);
      swift_release(KeyPath);
      v10 = swift_weakLoadStrong(v7 + 160);

      v11 = swift_release(v7);
      if (v10)
      {
        BookContentModule.setHeaderStyle(_:animated:)(a2, 1, v11);
        swift_release(v10);
      }
    }
    else
    {

    }
  }
}

double sub_1005DE810(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  double result;

  v3 = *a1;
  v4 = swift_allocObject(&unk_100916B00, 25, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 24) = v3;
  swift_retain(a2);
  sub_1006498E4((void (*)(uint64_t))sub_1005F13E8, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_1005DE874(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v6)
    {
      v7 = v6;
      KeyPath = swift_getKeyPath(&unk_100733528);
      v11 = v7;
      v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v9);
      swift_release(KeyPath);
      v10 = swift_weakLoadStrong(v7 + 160);

      swift_release(v7);
      if (v10)
      {
        BookContentModule.setShowingExpandedPageLabels(_:animated:)(a2 & 1, 1);
        swift_release(v10);
      }
    }
    else
    {

    }
  }
}

id sub_1005DE974()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Books19BookReaderPresenter____lazy_storage___expandedContentAnimator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter____lazy_storage___expandedContentAnimator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter____lazy_storage___expandedContentAnimator);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for ExpandedContentAnimator(0));
    v6 = (void *)ExpandedContentAnimator.init(presenting:rect:interactive:)(1, 0, 0.0, 0.0, 0.0, 0.0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

double sub_1005DE9FC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  __int16 v54;

  v52 = a1;
  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v45 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xE800000000000000);
  static Locale.current.getter(v17);
  v48 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v48(v13, v16, v10);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v20 = (void *)objc_opt_self(NSBundle);
  v46 = ObjCClassFromMetadata;
  v21 = objc_msgSend(v20, "bundleForClass:", ObjCClassFromMetadata);
  v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v6, v9, v3);
  v44 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v21, v6, "Bookmark info bar primary message", 33, 2);
  v50 = v22;
  v23 = v3;
  v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v9, v3);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  if ((v52 & 1) != 0)
    v25 = String.LocalizationValue.init(stringLiteral:)(0x6465646441, 0xE500000000000000);
  else
    v25 = String.LocalizationValue.init(stringLiteral:)(0x6465766F6D6552, 0xE700000000000000);
  static Locale.current.getter(v25);
  v48(v13, v16, v10);
  v26 = objc_msgSend(v20, "bundleForClass:", v46);
  v47(v6, v9, v23);
  v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v26, v6, "Bookmark info bar secondary message", 35, 2);
  v29 = v28;
  v31 = v50;
  v30 = v51;
  v49(v9, v23);
  v24(v16, v10);
  Strong = swift_weakLoadStrong(v30 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v33 = Strong;
    v34 = *(_QWORD *)(Strong + 168);
    swift_retain(v34);
    swift_release(v33);
    v35 = *(_QWORD *)(v34 + 16);
    v36 = type metadata accessor for TaskPriority(0);
    v37 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v45, 1, 1, v36);
    type metadata accessor for MainActor(0);
    swift_retain_n(v35, 2);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v29);
    v39 = static MainActor.shared.getter(v38);
    v40 = swift_allocObject(&unk_1009161F0, 105, 7);
    *(_QWORD *)(v40 + 16) = v39;
    *(_QWORD *)(v40 + 24) = &protocol witness table for MainActor;
    v41 = v44;
    *(_QWORD *)(v40 + 32) = v35;
    *(_QWORD *)(v40 + 40) = v41;
    *(_QWORD *)(v40 + 48) = v31;
    *(_QWORD *)(v40 + 56) = v27;
    *(_QWORD *)(v40 + 64) = v29;
    *(_WORD *)(v40 + 72) = 2;
    *(_DWORD *)(v40 + 74) = v53;
    *(_WORD *)(v40 + 78) = v54;
    *(_QWORD *)(v40 + 88) = 0;
    *(_QWORD *)(v40 + 96) = 0;
    *(_QWORD *)(v40 + 80) = 0;
    *(_BYTE *)(v40 + 104) = 1;
    v42 = sub_10030C02C(v37, (uint64_t)&unk_1009EFD50, v40);
    swift_release(v34);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v31);
    swift_release(v42);
    *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v29);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
  }
  return result;
}

void sub_1005DEE88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[33];

  v4[0] = "\b";
  v4[1] = &unk_1007330C0;
  v4[2] = &unk_1007330C0;
  v4[3] = &unk_1007330D8;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_1007330D8;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = &unk_1007330C0;
  v4[11] = "\b";
  v4[12] = &unk_1007330D8;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[16] = &unk_1007330D8;
  v4[17] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[18] = &unk_1007330D8;
  v4[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[20] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[21] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[22] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[23] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[24] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[25] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1005DEF84(319);
  if (v3 <= 0x3F)
  {
    v4[27] = *(_QWORD *)(v2 - 8) + 64;
    v4[28] = &unk_1007330F0;
    v4[29] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[30] = &unk_1007330F0;
    v4[31] = &unk_100733108;
    v4[32] = &unk_1007330F0;
    swift_updateClassMetadata2(a1, 256, 33, v4, a1 + 80);
  }
}

void sub_1005DEF84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EFD10)
  {
    v2 = type metadata accessor for SelectionInfo.ID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EFD10);
  }
}

uint64_t sub_1005DEFD8(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100916CB8, 25, 7);
  *(_QWORD *)(v13 + 16) = v1;
  *(_BYTE *)(v13 + 24) = a1;
  aBlock[4] = sub_1005F174C;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100916CD0;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  v16 = v2;
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v20 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_1005DF1F4(uint64_t a1, char a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v8[3];
  char v9;
  uint64_t v10;

  Strong = swift_weakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v5 = Strong;
    KeyPath = swift_getKeyPath(&unk_100733828);
    __chkstk_darwin(KeyPath);
    v8[2] = v5;
    v9 = a2 & 1;
    v10 = v5;
    v7 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_1004957D4, v8, (char *)&type metadata for () + 8, v7);
    swift_release(v5);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

double sub_1005DF2E8(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Strong = swift_weakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v3 = Strong;
    sub_1004E9690();
    v4 = type metadata accessor for PublishedBool(0);
    v5 = sub_100008DB0((unint64_t *)&unk_1009F0220, type metadata accessor for PublishedBool, (uint64_t)&unk_100730AFC);
    v6 = ObservableObject<>.objectWillChange.getter(v4, v5);
    ObservableObjectPublisher.send()();
    swift_release(v3);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005DF384(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v3 = v2;
  v65 = a2;
  v60 = a1;
  ObjectType = swift_getObjectType();
  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OverlayViewModel.Overlay(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v63 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v62 = (uint64_t)&v58 - v11;
  v12 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for OverlayViewModel.Search(0);
  __chkstk_darwin(v15);
  v61 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v58 = (uint64_t)&v58 - v18;
  v19 = sub_10004CFD4(&qword_1009EFD60);
  v67 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  v66 = v8;
  if (!Strong)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v14, 1, 1, v7);
    goto LABEL_7;
  }
  v23 = Strong;
  v59 = v15;
  v24 = v3;
  v25 = v9;
  v26 = ObjectType;
  v27 = v7;
  v28 = v21;
  v29 = v19;
  v30 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v30);
  swift_release(v23);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v32 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v14, v30, KeyPath);
  v33 = v30;
  v19 = v29;
  v21 = v28;
  v7 = v27;
  ObjectType = v26;
  v9 = v25;
  v3 = v24;
  v15 = v59;
  swift_release(v33);
  swift_release(KeyPath);
  v34 = v32;
  v35 = v66;
  v36 = swift_release(v34);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v35 + 48))(v14, 1, v7, v36) == 1)
  {
LABEL_7:
    v39 = sub_100010960((uint64_t)v14, &qword_1009EFD70);
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload(v14, v7) == 2)
  {
    v37 = v58;
    sub_10002C960((uint64_t)v14, v58, type metadata accessor for OverlayViewModel.Search);
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v21, v37, v19);
    v38 = v65;
    if (!v65)
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v21, v19);
    goto LABEL_9;
  }
  v39 = sub_10002C8F0((uint64_t)v14, type metadata accessor for OverlayViewModel.Overlay);
LABEL_8:
  __chkstk_darwin(v39);
  *((_BYTE *)&v58 - 16) = 0;
  v40 = sub_100008DB0(&qword_1009EFDB0, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_1007331D0);
  dispatch thunk of SearchModuleFactory.create<A>(router:buildView:)(v3, sub_1005EDE9C, &v58 - 4, ObjectType, v40);
  v41 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v61, v21, v19);
  *(_BYTE *)(v41 + *(int *)(v15 + 20)) = 0;
  v42 = v62;
  sub_10002CD84(v41, v62, type metadata accessor for OverlayViewModel.Search);
  swift_storeEnumTagMultiPayload(v42, v7, 2);
  v43 = type metadata accessor for TaskPriority(0);
  v44 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v64, 1, 1, v43);
  v45 = v63;
  sub_10002CD84(v42, v63, type metadata accessor for OverlayViewModel.Overlay);
  type metadata accessor for MainActor(0);
  v46 = v3;
  v47 = static MainActor.shared.getter(v46);
  v48 = *(unsigned __int8 *)(v66 + 80);
  v49 = (v48 + 40) & ~v48;
  v50 = (_QWORD *)swift_allocObject(&unk_1009162B8, v49 + v9, v48 | 7);
  v51 = v21;
  v52 = v19;
  v53 = v50;
  v50[2] = v47;
  v50[3] = &protocol witness table for MainActor;
  v50[4] = v46;
  sub_10002C960(v45, (uint64_t)v50 + v49, type metadata accessor for OverlayViewModel.Overlay);
  v54 = (uint64_t)v53;
  v19 = v52;
  v21 = v51;
  v55 = sub_10030C02C(v44, (uint64_t)&unk_1009EFDB8, v54);
  swift_release(v55);
  sub_10002C8F0(v42, type metadata accessor for OverlayViewModel.Overlay);
  sub_10002C8F0(v41, type metadata accessor for OverlayViewModel.Search);
  v38 = v65;
  if (v65)
  {
LABEL_9:
    v56 = v60;
    SearchModule.performSearch(query:)(*(Swift::String *)(&v38 - 1));
  }
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v21, v19);
}

uint64_t sub_1005DF88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  sub_10002E418(a1, a4);
  v7 = type metadata accessor for SearchViewModel(0);
  v8 = sub_100008DB0((unint64_t *)&qword_1009EFDC0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchViewModel, (uint64_t)&protocol conformance descriptor for SearchViewModel);
  swift_retain(a2);
  result = ObservedObject.init(wrappedValue:)(v9, v7, v8);
  *(_QWORD *)(a4 + 40) = result;
  *(_QWORD *)(a4 + 48) = v11;
  *(_BYTE *)(a4 + 56) = a3;
  return result;
}

uint64_t sub_1005DF910(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t ObjectType;
  id v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38[24];
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books19BookReaderPresenter_bookProviderService]
      + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v15, v38, 0, 0);
  sub_10002E418(v15, (uint64_t)v39);
  sub_10003F198(v39, v40);
  v16._countAndFlagsBits = a1;
  v16._object = a2;
  if (BookEntityType.hrefReferencesTableOfContents(_:)(v16))
  {
    sub_1005DFC5C();
LABEL_3:
    LOBYTE(v17) = 0;
    goto LABEL_4;
  }
  v36 = v3;
  sub_10003F198(v39, v40);
  v19._countAndFlagsBits = a1;
  v19._object = a2;
  if (BookEntityType.hrefReferencesNonLinearDocument(_:)(v19))
  {
    v20 = v40;
    v21 = v41;
    sub_10003F198(v39, v40);
    dispatch thunk of BookEntityType.urlFor(href:)(a1, a2, v20, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D23D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      v28 = sub_1005DFFEC((uint64_t)v14, (uint64_t)v39);
      (*(void (**)(char *, uint64_t, double))(v12 + 8))(v14, v11, v28);
    }
    goto LABEL_3;
  }
  v22 = v36;
  v17 = *(_QWORD *)&v36[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor];
  v23 = *(_QWORD *)(v17 + 104);
  ObjectType = swift_getObjectType();
  if ((dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v23) & 1) != 0)
  {
    v25 = *(id *)(v17 + 168);
    v26 = v42;
    sub_10062C3D4(a1, (unint64_t)a2, v27);

    if (v26)
      goto LABEL_4;
  }
  else
  {
    v29 = *(_QWORD *)(v17 + 192);
    *(_QWORD *)(v17 + 184) = a1;
    *(_QWORD *)(v17 + 192) = a2;
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRetain(a2);
  }
  v30 = (uint64_t)v37;
  v31 = type metadata accessor for TaskPriority(0);
  LOBYTE(v17) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  type metadata accessor for MainActor(0);
  v32 = v22;
  v33 = static MainActor.shared.getter(v32);
  v34 = (_QWORD *)swift_allocObject(&unk_100916880, 40, 7);
  v34[2] = v33;
  v34[3] = &protocol witness table for MainActor;
  v34[4] = v32;
  v35 = sub_10030C178(v30, (uint64_t)&unk_1009EFF28, (uint64_t)v34);
  swift_release(v35);
LABEL_4:
  _s5Books15CurrentPageViewVwxx_0(v39);
  return v17 & 1;
}

void sub_1005DFC5C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OverlayViewModel.Overlay(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - v10;
  v12 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(&v1[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (!Strong)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
    goto LABEL_6;
  }
  v16 = Strong;
  v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v17);
  swift_release(v16);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v19 = swift_getKeyPath(&unk_1007334E0);
  v41 = v11;
  v20 = v5;
  v21 = v1;
  v22 = v7;
  v23 = v6;
  v24 = v8;
  v25 = v4;
  v26 = v19;
  static Published.subscript.getter(v14, v17, KeyPath, v19);
  swift_release(v17);
  swift_release(KeyPath);
  v27 = v26;
  v4 = v25;
  v8 = v24;
  v6 = v23;
  v7 = v22;
  v1 = v21;
  v5 = v20;
  v11 = v41;
  v28 = swift_release(v27);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v6 + 48))(v14, 1, v5, v28) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v14, &qword_1009EFD70);
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload(v14, v5) == 4)
  {
    swift_release(*v14);
    return;
  }
  sub_10002C8F0((uint64_t)v14, type metadata accessor for OverlayViewModel.Overlay);
LABEL_7:
  v29 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor] + 104);
  ObjectType = swift_getObjectType();
  v31 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v29);
  LOBYTE(v29) = dispatch thunk of BookPaginationEntity.isTOCVertical.getter();
  swift_release(v31);
  v32 = sub_1005D850C((uint64_t)v1, v29 & 1, 0, 0);
  *(_QWORD *)v11 = v32;
  v11[8] = 0;
  swift_storeEnumTagMultiPayload(v11, v5, 4);
  v33 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 1, 1, v33);
  sub_10002CD84((uint64_t)v11, (uint64_t)v8, type metadata accessor for OverlayViewModel.Overlay);
  type metadata accessor for MainActor(0);
  swift_retain_n(v32, 2);
  v34 = v1;
  v35 = static MainActor.shared.getter(v34);
  v36 = *(unsigned __int8 *)(v6 + 80);
  v37 = (v36 + 40) & ~v36;
  v38 = (_QWORD *)swift_allocObject(&unk_100916290, v37 + v7, v36 | 7);
  v38[2] = v35;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v34;
  sub_10002C960((uint64_t)v8, (uint64_t)v38 + v37, type metadata accessor for OverlayViewModel.Overlay);
  v39 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009EFDA8, (uint64_t)v38);
  swift_release_n(v32, 2);
  swift_release(v39);
  sub_10002C8F0((uint64_t)v11, type metadata accessor for OverlayViewModel.Overlay);
}

double sub_1005DFFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD v22[2];
  char v23;

  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1005E6B00((uint64_t)v11);
  v13 = dispatch thunk of StylesheetProvider.imageFilterMode.getter(v12);
  v14 = sub_1005EECB0(v2, a1, (uint64_t)v11, a2, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    memset(v22, 0, sizeof(v22));
    v23 = 1;
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    v17 = swift_allocObject(&unk_100916510, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v17);
    v18 = v14;
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_100916718, 81, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v17;
    v20[5] = v18;
    sub_100025B3C((uint64_t)v22, (uint64_t)(v20 + 6), &qword_1009D4AD0);
    swift_release(v17);
    v21 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009EFEE0, (uint64_t)v20);

    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005E01D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v4);
  if (!Strong)
  {
    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
    goto LABEL_6;
  }
  v6 = Strong;
  v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v7);
  swift_release(v6);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v9 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v3, v7, KeyPath, v9);
  swift_release(v7);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v3, 1, v10) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v3, &qword_1009EFD70);
    return 2;
  }
  if (swift_getEnumCaseMultiPayload(v3, v10))
  {
    sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
  }
  else
  {
    swift_release(*v3);
    v14 = swift_weakLoadStrong(v4);
    if (v14)
    {
      v15 = v14;
      v16 = swift_getKeyPath(&unk_100733500);
      v19 = v15;
      v17 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v19, v16, v17);
      swift_release(v16);
      v12 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType);
      swift_release(v15);
      return v12;
    }
  }
  return 2;
}

uint64_t sub_1005E03CC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  _QWORD v6[5];

  result = swift_weakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (result)
  {
    v4 = result;
    sub_10002E418(result + 184, (uint64_t)v6);
    swift_release(v4);
    sub_10003F198(v6, v6[3]);
    type metadata accessor for ThemeOptionsContainerPresenter();
    LOBYTE(v4) = sub_10043F480();
    result = _s5Books15CurrentPageViewVwxx_0(v6);
    v5 = v4 & 1;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

double sub_1005E046C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = swift_weakLoadStrong(v4);
    if (v8)
    {
      v9 = v8;
      KeyPath = swift_getKeyPath(&unk_100733528);
      v21 = v9;
      v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v21, KeyPath, v11);
      swift_release(KeyPath);
      v12 = swift_weakLoadStrong(v9 + 160);
      v13 = swift_release(v9);
      if (v12)
      {
        v14 = BookContentModule.representativePageText.getter(v13);
        v16 = v15;
        v17 = BookContentModule.representativePageTextIsVertical.getter();
        sub_10003F198((_QWORD *)(v7 + 184), *(_QWORD *)(v7 + 208));
        v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_layoutModeProvider + 8);
        ObjectType = swift_getObjectType();
        v20 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(ObjectType, v18);
        sub_10043ED88(a1, v20, v14, v16, v17 & 1);
        swift_release(v7);
        swift_release(v12);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
      }
      else
      {
        *(_QWORD *)&result = swift_release(v7).n128_u64[0];
      }
    }
    else
    {
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1005E05F8(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  v2 = type metadata accessor for _BookReaderInteractorState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004375A4((uint64_t)v4);
  v5 = v4[16];
  sub_10002C8F0((uint64_t)v4, type metadata accessor for _BookReaderInteractorState);
  v6 = PageProgressDirection.rawValue.getter(v5);
  v8 = v7;
  v9 = PageProgressDirection.rawValue.getter(1);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
LABEL_9:
    if (a1 <= 0.7)
      return static LocationMovement.spreadForward.getter(v14);
    return static LocationMovement.spreadBackward.getter(v14);
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
    goto LABEL_9;
  if (a1 >= 0.3)
    return static LocationMovement.spreadForward.getter(v14);
  return static LocationMovement.spreadBackward.getter(v14);
}

double sub_1005E072C()
{
  char *v0;
  void *v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)();
  _QWORD v20[4];

  v1 = v0;
  Strong = swift_weakLoadStrong(&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(Strong + 112);
    KeyPath = swift_getKeyPath("X^.");
    v20[0] = v5;
    v7 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    swift_retain(v5);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v20, KeyPath, v7);
    v8 = swift_release(KeyPath);
    if ((*(_BYTE *)(v5 + 281) & 1) != 0)
    {
      v9 = swift_getKeyPath(&unk_100733890);
      v20[0] = v4;
      v10 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(v20, v9, v10);
      swift_release(v9);
      v11 = v4 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
      swift_beginAccess(v4 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v20, 0, 0);
      v12 = (_BYTE *)(v11 + *(int *)(type metadata accessor for BookReaderChromeState(0) + 44));
      if ((*v12 & 1) == 0 && !v12[1])
      {
        v14 = swift_allocObject(&unk_100916DE8, 24, 7);
        *(_QWORD *)(v14 + 16) = v1;
        v15 = v1;
        sub_1006498E4((void (*)(uint64_t))sub_1005F1964, v14);
        swift_release(v4);
        swift_release(v5);
        v16 = v14;
LABEL_15:
        *(_QWORD *)&result = swift_release(v16).n128_u64[0];
        return result;
      }
      v17 = static Animation.default.getter(v13);
      if (UIAccessibilityIsReduceMotionEnabled())
      {
        v18 = 0x8000000000000008;
        goto LABEL_10;
      }
      v19 = sub_1005F196C;
    }
    else
    {
      v17 = static Animation.default.getter(v8);
      if (UIAccessibilityIsReduceMotionEnabled())
      {
        v18 = 0x8000000000000000;
LABEL_10:
        REActionMenuState.transition(to:)(v18);
LABEL_14:
        swift_release(v5);
        swift_release(v17);
        v16 = v4;
        goto LABEL_15;
      }
      v19 = sub_1005F1934;
    }
    withAnimation<A>(_:_:)(v17, v19, v5, (char *)&type metadata for () + 8);
    goto LABEL_14;
  }
  return result;
}

double sub_1005E094C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v10[24];

  v2 = type metadata accessor for State(0);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  v6 = v5 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v10, 0, 0);
  sub_10002CD84(v6, (uint64_t)v4, type metadata accessor for State);
  v7 = qword_1009CE390;
  swift_retain(v5);
  if (v7 != -1)
    swift_once(&qword_1009CE390, sub_1003E0A38);
  sub_1003DCF34(qword_1009E0C68, unk_1009E0C70);
  sub_1003DC7BC((uint64_t)v4);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1005E0A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v21 - v5);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  result = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (result)
  {
    v14 = result;
    v15 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v15);
    swift_release(v14);
    v16 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
    KeyPath = swift_getKeyPath(&unk_1007334B8);
    v18 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v6, v15, KeyPath, v18);
    swift_release(KeyPath);
    swift_release(v18);
    v19 = swift_getKeyPath(&unk_1007334B8);
    v20 = swift_getKeyPath(&unk_1007334E0);
    sub_10000B5E4((uint64_t)v9, (uint64_t)v3, &qword_1009EFD70);
    swift_retain(v15);
    static Published.subscript.setter(v3, v15, v19, v20);
    sub_1003F4AE4((uint64_t)v6);
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    sub_100010960((uint64_t)v6, &qword_1009EFD70);
    swift_release(v15);
    return sub_100010960((uint64_t)v12, &qword_1009EFD70);
  }
  return result;
}

uint64_t sub_1005E0C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v35 - v5);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v35 - v14);
  v16 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v34 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    goto LABEL_7;
  }
  v18 = Strong;
  v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v19);
  swift_release(v18);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v21 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v15, v19, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v22 = type metadata accessor for OverlayViewModel.Overlay(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
  {
LABEL_7:
    v33 = (uint64_t)v15;
    return sub_100010960(v33, &qword_1009EFD70);
  }
  if (swift_getEnumCaseMultiPayload(v15, v22) != 1)
    return sub_10002C8F0((uint64_t)v15, type metadata accessor for OverlayViewModel.Overlay);
  v24 = v15[3];
  swift_release(*v15);
  swift_bridgeObjectRelease(v24);
  result = swift_weakLoadStrong(v16);
  if (result)
  {
    v26 = result;
    v27 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v27);
    v28 = swift_release(v26);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v12, 1, 1, v22, v28);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
    v29 = swift_getKeyPath(&unk_1007334B8);
    v30 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v6, v27, v29, v30);
    swift_release(v29);
    swift_release(v30);
    v31 = swift_getKeyPath(&unk_1007334B8);
    v32 = swift_getKeyPath(&unk_1007334E0);
    sub_10000B5E4((uint64_t)v9, (uint64_t)v3, &qword_1009EFD70);
    swift_retain(v27);
    static Published.subscript.setter(v3, v27, v31, v32);
    sub_1003F4AE4((uint64_t)v6);
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    sub_100010960((uint64_t)v6, &qword_1009EFD70);
    swift_release(v27);
    v33 = (uint64_t)v12;
    return sub_100010960(v33, &qword_1009EFD70);
  }
  return result;
}

uint64_t sub_1005E0F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v34 - v5);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  v16 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v33 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    return sub_100010960((uint64_t)v15, &qword_1009EFD70);
  }
  v18 = Strong;
  v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v19);
  swift_release(v18);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v21 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v15, v19, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v22 = type metadata accessor for OverlayViewModel.Overlay(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
    return sub_100010960((uint64_t)v15, &qword_1009EFD70);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v22);
  result = sub_10002C8F0((uint64_t)v15, type metadata accessor for OverlayViewModel.Overlay);
  if (EnumCaseMultiPayload == 2)
  {
    result = swift_weakLoadStrong(v16);
    if (result)
    {
      v26 = result;
      v27 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
      swift_retain(v27);
      v28 = swift_release(v26);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v12, 1, 1, v22, v28);
      sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
      v29 = swift_getKeyPath(&unk_1007334B8);
      v30 = swift_getKeyPath(&unk_1007334E0);
      static Published.subscript.getter(v6, v27, v29, v30);
      swift_release(v29);
      swift_release(v30);
      v31 = swift_getKeyPath(&unk_1007334B8);
      v32 = swift_getKeyPath(&unk_1007334E0);
      sub_10000B5E4((uint64_t)v9, (uint64_t)v3, &qword_1009EFD70);
      swift_retain(v27);
      static Published.subscript.setter(v3, v27, v31, v32);
      sub_1003F4AE4((uint64_t)v6);
      sub_100010960((uint64_t)v9, &qword_1009EFD70);
      sub_100010960((uint64_t)v6, &qword_1009EFD70);
      swift_release(v27);
      v15 = v12;
      return sub_100010960((uint64_t)v15, &qword_1009EFD70);
    }
  }
  return result;
}

uint64_t sub_1005E127C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v34 - v5);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v34 - v14);
  v16 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v33 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    goto LABEL_7;
  }
  v18 = Strong;
  v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v19);
  swift_release(v18);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v21 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v15, v19, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v22 = type metadata accessor for OverlayViewModel.Overlay(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
  {
LABEL_7:
    v32 = (uint64_t)v15;
    return sub_100010960(v32, &qword_1009EFD70);
  }
  if (swift_getEnumCaseMultiPayload(v15, v22) != 3)
    return sub_10002C8F0((uint64_t)v15, type metadata accessor for OverlayViewModel.Overlay);
  swift_release(*v15);
  result = swift_weakLoadStrong(v16);
  if (result)
  {
    v25 = result;
    v26 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v26);
    v27 = swift_release(v25);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v12, 1, 1, v22, v27);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
    v28 = swift_getKeyPath(&unk_1007334B8);
    v29 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v6, v26, v28, v29);
    swift_release(v28);
    swift_release(v29);
    v30 = swift_getKeyPath(&unk_1007334B8);
    v31 = swift_getKeyPath(&unk_1007334E0);
    sub_10000B5E4((uint64_t)v9, (uint64_t)v3, &qword_1009EFD70);
    swift_retain(v26);
    static Published.subscript.setter(v3, v26, v30, v31);
    sub_1003F4AE4((uint64_t)v6);
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    sub_100010960((uint64_t)v6, &qword_1009EFD70);
    swift_release(v26);
    v32 = (uint64_t)v12;
    return sub_100010960(v32, &qword_1009EFD70);
  }
  return result;
}

uint64_t sub_1005E1594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
    goto LABEL_6;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v6);
  swift_release(v5);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v8 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v3, v6, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v3, 1, v9) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v3, &qword_1009EFD70);
    return 1;
  }
  if (swift_getEnumCaseMultiPayload(v3, v9) == 4)
  {
    swift_release(*v3);
    return 0;
  }
  sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
  return 1;
}

uint64_t sub_1005E170C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[5] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[6] = v3;
  v1[7] = v4;
  return swift_task_switch(sub_1005E1778, v3, v4);
}

uint64_t sub_1005E1778()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v8;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
    goto LABEL_4;
  v2 = Strong;
  KeyPath = swift_getKeyPath(&unk_100733528);
  *(_QWORD *)(v0 + 16) = v2;
  v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 16, KeyPath, v4);
  swift_release(KeyPath);
  v5 = swift_weakLoadStrong(v2 + 160);
  *(_QWORD *)(v0 + 64) = v5;
  swift_release(v2);
  if (v5)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1009D2A6C);
    *(_QWORD *)(v0 + 72) = v6;
    *v6 = v0;
    v6[1] = sub_1005E1888;
    return sub_10020D0D4(6);
  }
  else
  {
LABEL_4:
    v8 = swift_release(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_1005E1888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v3[10] = a1;
  v3[11] = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1005E18E0, v3[6], v3[7]);
}

uint64_t sub_1005E18E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.select(annotationID:)[1]);
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_1005E1968;
    return BookContentModule.select(annotationID:)(*(_QWORD *)(v0 + 80), v1);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 64);
    swift_release(*(_QWORD *)(v0 + 40));
    v5 = swift_release(v4);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_1005E1968(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_BYTE *)(*v1 + 112) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1005E19C0, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1005E19C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v0 + 112) == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
    v1 = (_QWORD *)swift_task_alloc(dword_1009EFE1C);
    *(_QWORD *)(v0 + 104) = v1;
    *v1 = v0;
    v1[1] = sub_1005E1BE8;
    return sub_1005E1C70();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 40));
    if (qword_1009CEA40 != -1)
      swift_once(&qword_1009CEA40, sub_1005D8EDC);
    v3 = *(_QWORD *)(v0 + 88);
    v4 = type metadata accessor for Logger(0);
    sub_100048F64(v4, (uint64_t)qword_1009EFBC0);
    swift_bridgeObjectRetain(v3);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 88);
    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 80);
      v14 = *(_QWORD *)(v0 + 64);
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain(v9);
      *(_QWORD *)(v0 + 24) = sub_100040F58(v10, v9, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(v9, 3);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Not presenting style picker for %s because selection failed", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
      swift_release(v14);

    }
    else
    {
      swift_release(*(_QWORD *)(v0 + 64));

      v13 = swift_bridgeObjectRelease_n(v9, 2);
    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
}

uint64_t sub_1005E1BE8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return swift_task_switch(sub_1005E1C34, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1005E1C34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E1C70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[5] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[6] = v3;
  v1[7] = v4;
  return swift_task_switch(sub_1005E1CDC, v3, v4);
}

uint64_t sub_1005E1CDC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
    goto LABEL_5;
  v2 = Strong;
  KeyPath = swift_getKeyPath(&unk_100733528);
  *(_QWORD *)(v0 + 16) = v2;
  v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 16, KeyPath, v4);
  swift_release(KeyPath);
  v5 = swift_weakLoadStrong(v2 + 160);
  *(_QWORD *)(v0 + 64) = v5;
  swift_release(v2);
  if (v5)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC5Books19BookReaderPresenter_menuController);
    v7 = OBJC_IVAR____TtC5Books24BookReaderMenuController_mode;
    *(_QWORD *)(v0 + 72) = v6;
    *(_QWORD *)(v0 + 80) = v7;
    if ((*(_BYTE *)(v6 + v7) & 1) == 0)
    {
      *(_BYTE *)(v6 + v7) = 1;
      v20 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.presentEditMenu()[1]);
      *(_QWORD *)(v0 + 88) = v20;
      *v20 = v0;
      v20[1] = sub_1005E1FA8;
      return BookContentModule.presentEditMenu()();
    }
    swift_release(*(_QWORD *)(v0 + 40));
    v8 = v5;
  }
  else
  {
LABEL_5:
    v8 = *(_QWORD *)(v0 + 40);
  }
  swift_release(v8);
  v9 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC5Books19BookReaderPresenter_menuController)
                + OBJC_IVAR____TtC5Books24BookReaderMenuController_mode);
  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048F64(v10, (uint64_t)qword_1009EFBC0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v21 = v15;
    *(_DWORD *)v14 = 136315138;
    *(_BYTE *)(v0 + 96) = v9;
    v16 = String.init<A>(describing:)(v0 + 96, &type metadata for BookReaderMenuController.Mode);
    v18 = v17;
    *(_QWORD *)(v0 + 24) = sub_100040F58(v16, v17, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Refusing to build highlight style picker because mode is %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1005E1FA8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_BYTE *)(*v1 + 97) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1005E2000, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1005E2000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(v3);
  *(_BYTE *)(v2 + v1) = 0;
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 97));
}

uint64_t sub_1005E2050()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_1005E20BC, v3, v4);
}

uint64_t sub_1005E20BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D2A6C);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1005E2114;
  return sub_10020D0D4(6);
}

uint64_t sub_1005E2114(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v4 = v3[9];
  v3[10] = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1005E216C, v3[7], v3[8]);
}

uint64_t sub_1005E216C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t Strong;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_release(*(_QWORD *)(v0 + 48));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 80);
    v4 = sub_1005CFB5C(*(_QWORD *)(v0 + 24), v3);
    if (v4)
    {
      v5 = v4;
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
      if (Strong)
      {
        v7 = Strong;
        sub_1004D6044(v5, 1, 0, 0);
        swift_unknownObjectRelease(v7);
      }

    }
    v2 = swift_bridgeObjectRelease(v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1005E2218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
    goto LABEL_5;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v6);
  swift_release(v5);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v8 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v3, v6, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v3, 1, v9) == 1)
  {
LABEL_5:
    sub_100010960((uint64_t)v3, &qword_1009EFD70);
    return 1;
  }
  v10 = swift_getEnumCaseMultiPayload(v3, v9) != 2;
  sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
  return v10;
}

uint64_t sub_1005E2384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v12 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
    goto LABEL_6;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v6);
  swift_release(v5);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v8 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v3, v6, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v3, 1, v9) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v3, &qword_1009EFD70);
    return sub_1005DF384(0, 0);
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v9);
  result = sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
  if (EnumCaseMultiPayload != 2)
    return sub_1005DF384(0, 0);
  return result;
}

void sub_1005E2500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _BYTE v7[288];
  _BYTE v8[16];
  uint64_t v9;
  uint64_t v10;

  sub_100210BF4(v7);
  sub_100025B3C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_1009E4CD0);
  sub_100025B3C((uint64_t)v8, (uint64_t)&v9, (uint64_t *)&unk_1009E4CD0);
  v0 = v10;
  if (v10)
  {
    v1 = v9;
    sub_100210D60((uint64_t)v8);
    sub_1005DF384(v1, v0);
    sub_100210D88((uint64_t)v8);
  }
  else
  {
    if (qword_1009CEA40 != -1)
      swift_once(&qword_1009CEA40, sub_1005D8EDC);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100048F64(v2, (uint64_t)qword_1009EFBC0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unable to perform find selection. Missing state", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
}

uint64_t sub_1005E2644()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_10043F004;
  return sub_1005E26A8();
}

uint64_t sub_1005E26A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1[7] = v0;
  v2 = type metadata accessor for ContinuousClock(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009EFD70);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[12] = v5;
  v1[13] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1009EFD44);
  v1[14] = v6;
  *v6 = v1;
  v6[1] = sub_1005E275C;
  return sub_1005E575C();
}

uint64_t sub_1005E275C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  v2 = (_QWORD *)swift_task_alloc(dword_1009EFD84);
  *(_QWORD *)(v1 + 120) = v2;
  *v2 = v4;
  v2[1] = sub_1005E27C0;
  return sub_1005E5AB8();
}

uint64_t sub_1005E27C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 128) = v3;
  *(_QWORD *)(v1 + 136) = v4;
  return swift_task_switch(sub_1005E2834, v3, v4);
}

uint64_t sub_1005E2834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v1 + v2);
  if (Strong)
  {
    v4 = Strong;
    sub_10002E418(Strong + 184, v0 + 16);
    swift_release(v4);
    sub_10003F198((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v5 = (_QWORD *)swift_task_alloc(dword_1009E3624);
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_1005E2A74;
    return sub_10043F074(1);
  }
  v7 = swift_weakLoadStrong(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 144));
  v8 = *(_QWORD **)(v0 + 88);
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v10);
    swift_release(v9);
    KeyPath = swift_getKeyPath(&unk_1007334B8);
    v12 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v8, v10, KeyPath, v12);
    swift_release(v12);
    swift_release(KeyPath);
    swift_release(v10);
    v13 = type metadata accessor for OverlayViewModel.Overlay(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) != 1)
    {
      sub_100010960(*(_QWORD *)(v0 + 88), &qword_1009EFD70);
      v14 = sub_1005E0A48();
      ContinuousClock.init()(v14);
      v19 = (char *)&dword_1009E3628 + dword_1009E3628;
      v15 = (_QWORD *)swift_task_alloc(unk_1009E362C);
      *(_QWORD *)(v0 + 160) = v15;
      *v15 = v0;
      v15[1] = sub_1005E2C84;
      return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v19)(200000000000000000, 0, 0, 0, 1);
    }
  }
  else
  {
    v16 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  v17 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 104));
  sub_100010960(v17, &qword_1009EFD70);
  v18 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E2A74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return swift_task_switch(sub_1005E2AC0, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_1005E2AC0()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 144));
  v2 = *(_QWORD **)(v0 + 88);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v4);
    swift_release(v3);
    KeyPath = swift_getKeyPath(&unk_1007334B8);
    v6 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v2, v4, KeyPath, v6);
    swift_release(v6);
    swift_release(KeyPath);
    swift_release(v4);
    v7 = type metadata accessor for OverlayViewModel.Overlay(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v2, 1, v7) != 1)
    {
      sub_100010960(*(_QWORD *)(v0 + 88), &qword_1009EFD70);
      v8 = sub_1005E0A48();
      ContinuousClock.init()(v8);
      v14 = (char *)&dword_1009E3628 + dword_1009E3628;
      v9 = (_QWORD *)swift_task_alloc(unk_1009E362C);
      *(_QWORD *)(v0 + 160) = v9;
      *v9 = v0;
      v9[1] = sub_1005E2C84;
      return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v14)(200000000000000000, 0, 0, 0, 1);
    }
  }
  else
  {
    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  }
  v12 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 104));
  sub_100010960(v12, &qword_1009EFD70);
  v13 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E2C84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 160));
  v4 = v2[9];
  v3 = v2[10];
  v5 = v2[8];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[16];
    v7 = v2[17];
    v8 = sub_1005F1A78;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[10], v2[8]);
    v6 = v2[16];
    v7 = v2[17];
    v8 = sub_1005E2D24;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005E2D24()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005E2D64(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  double result;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 72);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  v7 = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (v7)
  {
    v9 = v7;
    sub_1004DAFDC(1);
    *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005E2DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009EFD70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[4] = swift_task_alloc(v6);
  v5[5] = swift_task_alloc(v6);
  v5[6] = swift_task_alloc(v6);
  v5[7] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v5[8] = v7;
  v5[9] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
  v5[10] = v8;
  *v8 = v5;
  v8[1] = sub_1005E2EA8;
  return sub_1005E26A8();
}

uint64_t sub_1005E2EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005E2F18, v2, v3);
}

uint64_t sub_1005E2F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 72);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  v7 = swift_weakLoadStrong(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (v7)
  {
    v8 = v7;
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD **)(v0 + 40);
    v23 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v13);
    swift_release(v8);
    sub_10002CD84(v12, v9, type metadata accessor for OverlayViewModel.Overlay);
    v14 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
    sub_10000B5E4(v9, v10, &qword_1009EFD70);
    KeyPath = swift_getKeyPath(&unk_1007334B8);
    v16 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v11, v13, KeyPath);
    swift_release(v16);
    swift_release(KeyPath);
    v17 = swift_getKeyPath(&unk_1007334B8);
    v18 = swift_getKeyPath(&unk_1007334E0);
    sub_10000B5E4(v10, v23, &qword_1009EFD70);
    swift_retain(v13);
    static Published.subscript.setter(v23, v13, v17, v18);
    sub_1003F4AE4((uint64_t)v11);
    sub_100010960(v10, &qword_1009EFD70);
    sub_100010960((uint64_t)v11, &qword_1009EFD70);
    swift_release(v13);
    sub_100010960(v9, &qword_1009EFD70);
  }
  v19 = *(_QWORD *)(v0 + 48);
  v21 = *(_QWORD *)(v0 + 32);
  v20 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005E312C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD v27[3];
  int v28;
  __int16 v29;

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + 112);
    swift_retain(v7);
    swift_release(v6);
    KeyPath = swift_getKeyPath(&unk_100733490);
    v27[0] = v7;
    v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v27, KeyPath, v9);
    swift_release(KeyPath);
    swift_beginAccess(v7 + 296, v27, 0, 0);
    LOBYTE(v6) = *(_BYTE *)(v7 + 296);
    swift_release(v7);
  }
  v10 = sub_1001FC2D0(v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_weakLoadStrong(v4);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)(v17 + 168);
    swift_retain(v19);
    swift_release(v18);
    v20 = *(_QWORD *)(v19 + 16);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v3, 1, 1, v21);
    type metadata accessor for MainActor(0);
    swift_retain_n(v20, 2);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v16);
    v23 = static MainActor.shared.getter(v22);
    v24 = swift_allocObject(&unk_100916100, 105, 7);
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v10;
    *(_QWORD *)(v24 + 48) = v12;
    *(_QWORD *)(v24 + 56) = v14;
    *(_QWORD *)(v24 + 64) = v16;
    *(_WORD *)(v24 + 72) = 258;
    *(_DWORD *)(v24 + 74) = v28;
    *(_WORD *)(v24 + 78) = v29;
    *(_QWORD *)(v24 + 88) = 0;
    *(_QWORD *)(v24 + 96) = 0;
    *(_QWORD *)(v24 + 80) = 0;
    *(_BYTE *)(v24 + 104) = 1;
    v25 = sub_10030C02C((uint64_t)v3, (uint64_t)&unk_1009EFD28, v24);
    swift_release(v19);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v12);
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

double sub_1005E3384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD v27[3];
  int v28;
  __int16 v29;

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + 112);
    swift_retain(v7);
    swift_release(v6);
    KeyPath = swift_getKeyPath(&unk_100733468);
    v27[0] = v7;
    v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v27, KeyPath, v9);
    swift_release(KeyPath);
    swift_beginAccess(v7 + 297, v27, 0, 0);
    LOBYTE(v6) = *(_BYTE *)(v7 + 297);
    swift_release(v7);
  }
  v10 = sub_1001FC51C(v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_weakLoadStrong(v4);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)(v17 + 168);
    swift_retain(v19);
    swift_release(v18);
    v20 = *(_QWORD *)(v19 + 16);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v3, 1, 1, v21);
    type metadata accessor for MainActor(0);
    swift_retain_n(v20, 2);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v16);
    v23 = static MainActor.shared.getter(v22);
    v24 = swift_allocObject(&unk_1009160D8, 105, 7);
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v10;
    *(_QWORD *)(v24 + 48) = v12;
    *(_QWORD *)(v24 + 56) = v14;
    *(_QWORD *)(v24 + 64) = v16;
    *(_WORD *)(v24 + 72) = 258;
    *(_DWORD *)(v24 + 74) = v28;
    *(_WORD *)(v24 + 78) = v29;
    *(_QWORD *)(v24 + 88) = 0;
    *(_QWORD *)(v24 + 96) = 0;
    *(_QWORD *)(v24 + 80) = 0;
    *(_BYTE *)(v24 + 104) = 1;
    v25 = sub_10030C02C((uint64_t)v3, (uint64_t)&unk_1009EFD20, v24);
    swift_release(v19);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v12);
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

double sub_1005E35DC(uint64_t a1)
{
  double result;

  swift_retain(a1);
  sub_1006498E4((void (*)(uint64_t))sub_1005F16A0, a1);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1005E3610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  v2 = type metadata accessor for State(0);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
    swift_retain(v8);

    v9 = v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v10, 0, 0);
    sub_10002CD84(v9, (uint64_t)v4, type metadata accessor for State);
    v4[*(int *)(v2 + 92)] = (v4[*(int *)(v2 + 92)] & 1) == 0;
    sub_1003DC7BC((uint64_t)v4);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005E3718()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  int v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v2 = Strong;
    KeyPath = swift_getKeyPath(&unk_100733500);
    v8 = v2;
    v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
    swift_release(KeyPath);
    v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType);
    swift_release(v2);
    if (v5 == 1)
    {
      result = sub_1005E01D0();
      if ((result & 1) != 0)
        return result;
      LOBYTE(result) = 1;
      return sub_1005E3808(result);
    }
  }
  v7 = sub_1005E01D0();
  result = 0;
  if (v7 == 2 || (v7 & 1) != 0)
    return sub_1005E3808(result);
  return result;
}

uint64_t sub_1005E3808(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OverlayViewModel.Overlay(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - v9;
  v11 = sub_1005E3AF4((uint64_t)v1, 0, 1, 0);
  Strong = swift_weakLoadStrong(&v1[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (Strong)
  {
    v13 = Strong;
    KeyPath = swift_getKeyPath(&unk_100733500);
    v31 = v5;
    v15 = KeyPath;
    v30 = (uint64_t)&v30;
    __chkstk_darwin(KeyPath);
    *(&v30 - 2) = v13;
    *((_BYTE *)&v30 - 8) = a1 & 1;
    v34 = v13;
    v16 = v6;
    v17 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    swift_retain(v11);
    v18 = v17;
    v6 = v16;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v34, v15, sub_1005EDD90, &v30 - 4, (char *)&type metadata for () + 8, v18);
    swift_release(v13);
    v19 = v15;
    v5 = v31;
    swift_release(v19);
  }
  else
  {
    swift_retain(v11);
  }
  *(_QWORD *)v10 = v11;
  v10[8] = 0;
  swift_storeEnumTagMultiPayload(v10, v5, 0);
  v20 = type metadata accessor for TaskPriority(0);
  v21 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v33, 1, 1, v20);
  v22 = v32;
  sub_10002CD84((uint64_t)v10, v32, type metadata accessor for OverlayViewModel.Overlay);
  type metadata accessor for MainActor(0);
  swift_retain(v11);
  v23 = v1;
  v24 = static MainActor.shared.getter(v23);
  v25 = *(unsigned __int8 *)(v6 + 80);
  v26 = (v25 + 40) & ~v25;
  v27 = (_QWORD *)swift_allocObject(&unk_100916268, v26 + v7, v25 | 7);
  v27[2] = v24;
  v27[3] = &protocol witness table for MainActor;
  v27[4] = v23;
  sub_10002C960(v22, (uint64_t)v27 + v26, type metadata accessor for OverlayViewModel.Overlay);
  v28 = sub_10030C02C(v21, (uint64_t)&unk_1009EFDA0, (uint64_t)v27);
  swift_release_n(v11, 2);
  swift_release(v28);
  return sub_10002C8F0((uint64_t)v10, type metadata accessor for OverlayViewModel.Overlay);
}

uint64_t sub_1005E3AF4(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  _BYTE v15[8];
  _UNKNOWN **v16;

  v16 = &off_100915CB0;
  swift_unknownObjectWeakInit(v15);
  sub_1005EDDB0((uint64_t)v15, (uint64_t)v14);
  result = swift_unknownObjectUnownedLoadStrong(v4 + 16);
  if (result)
  {
    v9 = (void *)result;
    result = swift_weakLoadStrong(v4 + 24);
    if (result)
    {
      v10 = result;
      v11 = type metadata accessor for BookmarkNotesModule();
      v12 = swift_allocObject(v11, 56, 7);
      swift_unknownObjectWeakInit(v12 + 40);
      sub_1005EDDEC((uint64_t)v14, v12 + 16);
      *(_BYTE *)(v12 + 32) = a2 & 1;
      *(_BYTE *)(v12 + 33) = a3 & 1;
      *(_BYTE *)(v12 + 34) = a4 & 1;
      swift_unknownObjectWeakAssign(v12 + 40, v9);

      *(_QWORD *)(v12 + 48) = v10;
      v13 = swift_unownedRetain(v10);
      swift_release(v13);
      sub_1005EDE28((uint64_t)v15);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005E3BFC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OverlayViewModel.Overlay(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v25 - v10);
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_shareModuleFactory];
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  ObjectType = swift_getObjectType();
  type metadata accessor for ShareModule();
  v16 = sub_100495CEC(v14, ObjectType, v13);
  *v11 = v16;
  swift_storeEnumTagMultiPayload(v11, v5, 3);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  sub_10002CD84((uint64_t)v11, (uint64_t)v8, type metadata accessor for OverlayViewModel.Overlay);
  type metadata accessor for MainActor(0);
  swift_retain_n(v16, 2);
  swift_unknownObjectRetain(v14);
  v18 = v1;
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (_QWORD *)swift_allocObject(&unk_100916218, v21 + v7, v20 | 7);
  v22[2] = v19;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v18;
  sub_10002C960((uint64_t)v8, (uint64_t)v22 + v21, type metadata accessor for OverlayViewModel.Overlay);
  v23 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009EFD68, (uint64_t)v22);
  swift_release_n(v16, 2);
  swift_release(v23);
  return sub_10002C8F0((uint64_t)v11, type metadata accessor for OverlayViewModel.Overlay);
}

double sub_1005E3E04(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = sub_100437C40();
  sub_100437D74((v2 & 1) == 0);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 72);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 80);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_1005E3E7C()
{
  char *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OverlayViewModel.Overlay(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v48 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - v9;
  v11 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = &v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel];
  Strong = swift_weakLoadStrong(&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (!Strong)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
    goto LABEL_6;
  }
  v16 = Strong;
  v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v17);
  swift_release(v16);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v19 = swift_getKeyPath(&unk_1007334E0);
  v47 = v10;
  v20 = v14;
  v21 = v1;
  v22 = v5;
  v23 = v7;
  v24 = v6;
  v25 = ObjectType;
  v26 = v19;
  static Published.subscript.getter(v13, v17, KeyPath);
  swift_release(v17);
  swift_release(KeyPath);
  v27 = v26;
  ObjectType = v25;
  v6 = v24;
  v7 = v23;
  v5 = v22;
  v1 = v21;
  v14 = v20;
  v10 = v47;
  v28 = swift_release(v27);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v6 + 48))(v13, 1, v5, v28) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v13, &qword_1009EFD70);
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload(v13, v5) == 1)
  {
    v29 = v13[3];
    swift_release(*v13);
    swift_bridgeObjectRelease(v29);
    return;
  }
  sub_10002C8F0((uint64_t)v13, type metadata accessor for OverlayViewModel.Overlay);
LABEL_7:
  v30 = sub_100008DB0(&qword_1009EFD88, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_100733178);
  v31 = ReadingSettingsModuleFactory.create<A>(router:usePopoverHeader:)(v1, 0, ObjectType, v30);
  v32 = swift_weakLoadStrong(v14);
  if (v32)
  {
    v33 = v32;
    v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookLanguage);
    v35 = *(_QWORD *)(v32 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookLanguage + 8);
    swift_bridgeObjectRetain(v35);
    swift_release(v33);
  }
  else
  {
    v34 = 0;
    v35 = 0;
  }
  *(_QWORD *)v10 = v31;
  *((_WORD *)v10 + 4) = 0;
  *((_QWORD *)v10 + 2) = v34;
  *((_QWORD *)v10 + 3) = v35;
  swift_storeEnumTagMultiPayload(v10, v5, 1);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v49, 1, 1, v36);
  v38 = v48;
  sub_10002CD84((uint64_t)v10, v48, type metadata accessor for OverlayViewModel.Overlay);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(v35);
  v39 = v1;
  v40 = swift_retain_n(v31, 2);
  v41 = static MainActor.shared.getter(v40);
  v42 = *(unsigned __int8 *)(v6 + 80);
  v43 = (v42 + 40) & ~v42;
  v44 = (_QWORD *)swift_allocObject(&unk_100916240, v43 + v7, v42 | 7);
  v44[2] = v41;
  v44[3] = &protocol witness table for MainActor;
  v44[4] = v39;
  sub_10002C960(v38, (uint64_t)v44 + v43, type metadata accessor for OverlayViewModel.Overlay);
  v45 = sub_10030C02C(v37, (uint64_t)&unk_1009EFD90, (uint64_t)v44);
  swift_bridgeObjectRelease(v35);
  swift_release_n(v31, 2);
  swift_release(v45);
  sub_10002C8F0((uint64_t)v10, type metadata accessor for OverlayViewModel.Overlay);
}

double sub_1005E4274(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 72);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 64)
                 + OBJC_IVAR____TtC5Books21BookReaderDataManager_readingSettingsManager
                 + 8);
  v8 = swift_getObjectType();
  v9 = *(_QWORD *)(v7 + 8);
  v10 = dispatch thunk of ReadingSettingsProviding.readingLoupeActive.getter(v8, v9);
  dispatch thunk of ReadingSettingsProviding.readingLoupeActive.setter((v10 & 1) == 0, v8, v9);
  return sub_1005E3384();
}

uint64_t sub_1005E4324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v11;

  v4 = type metadata accessor for ReadingLoupeVisibilityState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 64)
                 + OBJC_IVAR____TtC5Books21BookReaderDataManager_readingSettingsManager
                 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  return dispatch thunk of ReadingSettingsProviding.readingLoupeActiveDimming.setter(v7, ObjectType, *(_QWORD *)(v8 + 8));
}

void sub_1005E43E8(char a1)
{
  uint64_t v3;
  double v4;

  v3 = type metadata accessor for LocationMovement(0);
  v4 = __chkstk_darwin(v3);
  if ((a1 & 1) != 0)
    static LocationMovement.chapterForward.getter(v4);
  else
    static LocationMovement.chapterBackward.getter(v4);
  __asm { BR              X11 }
}

uint64_t sub_1005E4478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1003B4F30(v1, 1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

double sub_1005E44EC(uint64_t a1, uint64_t a2)
{
  return sub_1005EB974(a1, a2, (uint64_t)&unk_1009162E0, (void (*)(uint64_t))sub_10046D5D8);
}

uint64_t sub_1005E450C()
{
  uint64_t result;

  result = sub_1005E01D0();
  if (result == 2 || (result & 1) != 0)
    return sub_1005E3808(0);
  return result;
}

uint64_t sub_1005E4540()
{
  uint64_t result;

  result = sub_1005E01D0();
  if ((result & 1) == 0)
    return sub_1005E3808(1);
  return result;
}

void sub_1005E456C()
{
  char v0;

  v0 = sub_100437C40();
  sub_100437D74((v0 & 1) == 0);
}

double sub_1005E45A0(uint64_t a1, uint64_t a2)
{
  return sub_1005EB974(a1, a2, (uint64_t)&unk_1009161C8, (void (*)(uint64_t))sub_1005EDCD4);
}

double sub_1005E45B4(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_100916150, (uint64_t)&unk_1009EFD38, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C02C);
}

double sub_1005E45D0(uint64_t a1, uint64_t a2)
{
  return sub_1005EB974(a1, a2, (uint64_t)&unk_100916128, (void (*)(uint64_t))sub_1004C2140);
}

uint64_t sub_1005E45EC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v2 = type metadata accessor for LocationMovement(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    static LocationMovement.chapterForward.getter(v4);
  else
    static LocationMovement.chapterBackward.getter(v4);
  v7 = sub_10062917C((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 & 1;
}

double sub_1005E469C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double result;
  _QWORD v11[3];
  char v12;
  uint64_t v13;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor];
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_isOpening) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_openingToLocation) = 0;
  sub_100518548();
  Strong = swift_weakLoadStrong(&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (Strong)
  {
    v4 = Strong;
    KeyPath = swift_getKeyPath(&unk_100733618);
    v13 = v4;
    v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v6);
    swift_release(KeyPath);
    CurrentValueSubject.value.getter(&v13);
    if (v13 == 1)
    {
      swift_release(v4);
    }
    else
    {
      v7 = swift_getKeyPath(&unk_100733618);
      __chkstk_darwin(v7);
      v11[2] = v4;
      v12 = 1;
      v13 = v4;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v7, sub_1005F11E8, v11, (char *)&type metadata for () + 8, v6);
      swift_release(v4);
      swift_release(v7);
    }
  }
  v8 = swift_allocObject(&unk_100916A10, 24, 7);
  *(_QWORD *)(v8 + 16) = v1;
  v9 = v1;
  sub_1006498E4((void (*)(uint64_t))sub_1005F1204, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_1005E485C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  double result;
  _BYTE v16[24];

  v2 = type metadata accessor for State(0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v16[-v6 - 8];
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  v9 = v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v16, 0, 0);
  sub_10002CD84(v9, (uint64_t)v7, type metadata accessor for State);
  v10 = qword_1009CE390;
  swift_retain(v8);
  if (v10 != -1)
    swift_once(&qword_1009CE390, sub_1003E0A38);
  sub_1003DCF34(qword_1009E0C68, unk_1009E0C70);
  v11 = &v7[*(int *)(v2 + 72)];
  v12 = &v7[*(int *)(v2 + 68)];
  v13 = type metadata accessor for ContinuousClock.Instant(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v12, v11, v13);
  v7[2] = 1;
  sub_10002CD84((uint64_t)v7, (uint64_t)v4, type metadata accessor for State);
  sub_1003DC7BC((uint64_t)v4);
  sub_10002C8F0((uint64_t)v7, type metadata accessor for State);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

char *sub_1005E49DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  v35 = a7;
  v36 = a6;
  v37 = a1;
  v12 = type metadata accessor for BookContentAdornmentState(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService];
  Strong = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService]);
  if (Strong)
  {
    v18 = Strong;
    v34 = *((_QWORD *)v16 + 1);
    v19 = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProvider]);
    if (v19)
    {
      v20 = (void *)v19;
      ObjectType = swift_getObjectType();
      v33 = type metadata accessor for BookReaderAccessoryHighlightsController(0);
      v30 = a3;
      v21 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider];
      v31 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8];
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v35, v12);
      swift_unknownObjectRetain(a2);
      swift_unknownObjectRetain(v21);
      swift_retain(a4);
      swift_unknownObjectRetain(a5);
      v22 = v7;
      v23 = sub_1006506C8(v37, a2, v30, v21, v31, v18, v34, (uint64_t)v20, a4, a5, (uint64_t)v7, (uint64_t)&off_100915D10, (uint64_t)v15, ObjectType, v36);
      swift_unknownObjectRelease(a2);
      swift_unknownObjectRelease(v21);
      swift_unknownObjectRelease(v18);

      swift_release(a4);
      swift_unknownObjectRelease(a5);

      sub_100008DB0(&qword_1009EFDE0, type metadata accessor for BookReaderAccessoryHighlightsController, (uint64_t)&protocol conformance descriptor for BookReaderAccessoryHighlightsController);
      sub_100008DB0(&qword_1009EFDE8, type metadata accessor for BookReaderAccessoryHighlightsController, (uint64_t)&protocol conformance descriptor for BookReaderAccessoryHighlightsController);
      return v23;
    }
    swift_unknownObjectRelease(v18);
  }
  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100048F64(v24, (uint64_t)qword_1009EFBC0);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.error.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Could not create highlights controller, missing annotation provider services", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  return 0;
}

char *sub_1005E4C9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  void *v31;

  v31 = a1;
  v10 = type metadata accessor for BookContentAdornmentState(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v5[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService]);
  if (Strong)
  {
    v16 = Strong;
    v30 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v14 + 1);
    v17 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProvider]);
    if (v17)
    {
      v18 = (void *)v17;
      v28 = a3;
      v19 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider];
      v29 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8];
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a5, v10);
      objc_allocWithZone((Class)type metadata accessor for BookReaderAccessoryNotesController(0));
      swift_unknownObjectRetain(a2);
      swift_unknownObjectRetain(v19);
      swift_retain(a4);
      v20 = v5;
      v21 = sub_10069A474(v31, a2, v28, v19, v29, v16, v30, (uint64_t)v18, a4, (uint64_t)v5, (char *)&off_100915D28, (uint64_t)v13);
      swift_unknownObjectRelease(a2);
      swift_unknownObjectRelease(v19);
      swift_unknownObjectRelease(v16);

      swift_release(a4);
      sub_100008DB0(&qword_1009EFDD8, type metadata accessor for BookReaderAccessoryNotesController, (uint64_t)&unk_100738FD0);
      return v21;
    }
    swift_unknownObjectRelease(v16);
  }
  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100048F64(v22, (uint64_t)qword_1009EFBC0);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Could not create notes controller, missing annotation provider services", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  return 0;
}

char *sub_1005E4F0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t Strong;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a7;
  v37 = a3;
  v38 = a6;
  v35 = a1;
  v14 = type metadata accessor for BookContentAdornmentState(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v9 + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService;
  Strong = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProviderService);
  if (Strong)
  {
    v20 = (void (*)(char *, uint64_t, uint64_t, uint64_t))Strong;
    v34 = *(_QWORD *)(v18 + 8);
    v21 = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationProvider);
    if (v21)
    {
      v22 = (void *)v21;
      v33 = a9;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
      v23 = *(_QWORD *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
      v24 = objc_allocWithZone((Class)type metadata accessor for BookReaderAccessoryAccessibilityController(0));
      swift_unknownObjectRetain(a2);
      swift_retain(a4);
      swift_unknownObjectRetain(a8);
      v25 = v38;
      swift_unknownObjectRetain(v38);
      swift_retain(v23);
      v26 = sub_10044912C(v35, a2, v37, v20, v34, (uint64_t)v22, a4, (uint64_t)v17, a8, v33, v25, v36, v23);
      swift_unknownObjectRelease(a2);
      swift_unknownObjectRelease(v20);

      swift_release(a4);
      swift_unknownObjectRelease(a8);
      swift_unknownObjectRelease(v25);
      swift_release(v23);
      sub_100008DB0(&qword_1009EFDC8, type metadata accessor for BookReaderAccessoryAccessibilityController, (uint64_t)&unk_100725060);
      return v26;
    }
    swift_unknownObjectRelease(v20);
  }
  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100048F64(v27, (uint64_t)qword_1009EFBC0);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.error.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Could not create notes controller, missing annotation provider services", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  return 0;
}

char *sub_1005E51A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9)
{
  return sub_1005E4F0C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1005E51B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 393) = a5;
  *(_QWORD *)(v5 + 496) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 504) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 512) = v7;
  *(_QWORD *)(v5 + 520) = v8;
  return swift_task_switch(sub_1005E5228, v7, v8);
}

uint64_t sub_1005E5228()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v3;

  sub_100210BF4((void *)(v0 + 16));
  sub_100025B3C(v0 + 184, v0 + 400, &qword_1009D2A70);
  sub_100025B3C(v0 + 400, v0 + 304, &qword_1009D2A70);
  if (*(_QWORD *)(v0 + 328))
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1009D2A6C);
    *(_QWORD *)(v0 + 528) = v1;
    *v1 = v0;
    v1[1] = sub_1005E52EC;
    return sub_10020D0D4(*(_BYTE *)(v0 + 393));
  }
  else
  {
    v3 = swift_release(*(_QWORD *)(v0 + 504));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
  }
}

uint64_t sub_1005E52EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 528));
  swift_bridgeObjectRelease(a2);
  return swift_task_switch(sub_1005E5348, *(_QWORD *)(v4 + 512), *(_QWORD *)(v4 + 520));
}

uint64_t sub_1005E5348()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 504));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005E5378(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (Strong)
  {
    v9 = Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (v10)
    {
      v12 = (void *)v10;
      if (a2)
      {
        v14[4] = a2;
        v15 = a3;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        v14[2] = sub_1000147F0;
        v14[3] = &unk_1009162F8;
        a2 = _Block_copy(v14);
        v13 = v15;
        swift_retain(a3);
        *(_QWORD *)&v11 = swift_release(v13).n128_u64[0];
      }
      objc_msgSend(v12, "assetViewController:presentViewController:animated:completion:", v9, a1, 1, a2, v11);
      swift_unknownObjectRelease(v12);
      _Block_release(a2);
      *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
    }
  }
  return result;
}

double sub_1005E5494(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v9;

  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (Strong)
  {
    v9 = Strong;
    sub_1004D6044(a1, 1, a2, a3);
    *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  return result;
}

void sub_1005E5510(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_100916178, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100478298;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100916190;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);
}

double sub_1005E5644(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (Strong)
  {
    v9 = Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (v10)
    {
      v12 = (void *)v10;
      if (a3)
      {
        v14[4] = a3;
        v15 = a4;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        v14[2] = sub_1000147F0;
        v14[3] = &unk_1009167A8;
        a3 = _Block_copy(v14);
        v13 = v15;
        swift_retain(a4);
        *(_QWORD *)&v11 = swift_release(v13).n128_u64[0];
      }
      objc_msgSend(v12, "assetViewController:presentViewController:animated:completion:", v9, a2, 1, a3, v11);
      swift_unknownObjectRelease(v12);
      _Block_release(a3);
      *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1005E575C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = v0;
  v2 = type metadata accessor for State(0);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[7] = v3;
  v1[8] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_1005E57EC, v4, v5);
}

uint64_t sub_1005E57EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController;
  *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController;
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 96) = v3;
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v3);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 112) = v5;
    *(_QWORD *)(v0 + 120) = v6;
    return swift_task_switch(sub_1005E5890, v5, v6);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005E5890(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[12];
  v3 = static MainActor.shared.getter(a1);
  v1[16] = v3;
  v4 = swift_task_alloc(32);
  v1[17] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[18] = v5;
  *v5 = v1;
  v5[1] = sub_1005E5944;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000012, 0x80000001007D8220, sub_1005EDC68, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1005E5944()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005E59AC, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_1005E59AC()
{
  _QWORD *v0;

  swift_release(v0[13]);
  return swift_task_switch(sub_1005E59E4, v0[9], v0[10]);
}

uint64_t sub_1005E59E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void **)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v5 = *(void **)(v4 + v1);
  *(_QWORD *)(v4 + v1) = 0;

  v6 = *(_QWORD *)(v4 + v1);
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  v8 = v6 != 0;
  v9 = v7 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v0 + 16, 0, 0);
  sub_10002CD84(v9, v3, type metadata accessor for State);
  *(_BYTE *)(v3 + 6) = v8;
  swift_retain(v7);
  sub_1003DC7BC(v3);
  swift_release(v7);

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5AB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_1005E5B28, v3, v4);
}

uint64_t sub_1005E5B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 64) = v3;
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v4, "presentingViewController");

    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 80) = v7;
      *(_QWORD *)(v0 + 88) = v8;
      return swift_task_switch(sub_1005E5BFC, v7, v8);
    }
    swift_release(*(_QWORD *)(v0 + 32));

  }
  else
  {
    v10 = swift_release(*(_QWORD *)(v0 + 32));
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_1005E5BFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[8];
  v3 = static MainActor.shared.getter(a1);
  v1[12] = v3;
  v4 = swift_task_alloc(32);
  v1[13] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[14] = v5;
  *v5 = v1;
  v5[1] = sub_1005E5CB0;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000012, 0x80000001007D8220, sub_1005F19A4, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1005E5CB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005E5D18, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1005E5D18()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[8];
  swift_release(v0[9]);

  return swift_task_switch(sub_1005E5D54, v0[5], v0[6]);
}

uint64_t sub_1005E5D54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));

  v4 = *(void **)(v3 + v1);
  *(_QWORD *)(v3 + v1) = 0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5DA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1009EFD44);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1005E5E08;
  return sub_1005E575C();
}

uint64_t sub_1005E5E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005F19A0, v2, v3);
}

uint64_t sub_1005E5E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[11] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[12] = v8;
  v6[13] = v9;
  return swift_task_switch(sub_1005E5EE8, v8, v9);
}

uint64_t sub_1005E5EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = sub_1005E5FB4;
    return sub_1005E26A8();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 88));
    v5 = *(_QWORD *)(v0 + 64) + 16;
    swift_beginAccess(v5, v0 + 40, 0, 0);
    v6 = swift_unknownObjectWeakLoadStrong(v5);
    if (v6)
    {
      v7 = (void *)v6;
      sub_1005E6070(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80));

    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005E5FB4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));

  return swift_task_switch(sub_1005E6004, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1005E6004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  swift_release(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1005E6070(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80));

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005E6070(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  double result;
  char *v24;
  _QWORD aBlock[5];
  uint64_t v27;
  char v28[24];

  v3 = v2;
  v6 = type metadata accessor for State(0);
  __chkstk_darwin(v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100025B3C(a2, (uint64_t)&v2[OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentFrame], &qword_1009D4AD0);
  objc_msgSend(a1, "setTransitioningDelegate:", v2);
  v9 = OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController;
  v10 = *(void **)&v2[OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController] = a1;
  v11 = a1;

  v12 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager] + 24);
  LOBYTE(v10) = *(_QWORD *)&v2[v9] != 0;
  v13 = v12 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v12 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v28, 0, 0);
  sub_10002CD84(v13, (uint64_t)v8, type metadata accessor for State);
  v8[6] = (char)v10;
  swift_retain(v12);
  sub_1003DC7BC((uint64_t)v8);

  swift_release(v12);
  v14 = swift_allocObject(&unk_100916650, 24, 7);
  *(_QWORD *)(v14 + 16) = v3;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_router]);
  if (Strong)
  {
    v16 = Strong;
    v17 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (v17)
    {
      v18 = (void *)v17;
      aBlock[4] = sub_1005F09CC;
      v27 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_100916668;
      v19 = _Block_copy(aBlock);
      v20 = v27;
      v21 = v3;
      swift_retain(v14);
      objc_msgSend(v18, "assetViewController:presentViewController:animated:completion:", v16, v11, 1, v19, swift_release(v20).n128_f64[0]);
      swift_unknownObjectRelease(v18);
      _Block_release(v19);
    }
    else
    {
      v24 = v3;
    }
    swift_release(v14);
    *(_QWORD *)&result = swift_unknownObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v22 = v3;
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

double sub_1005E62B4(void *a1)
{
  uint64_t v2;
  id v3;
  double result;

  v2 = swift_allocObject(&unk_1009166A0, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  sub_1006498E4((void (*)(uint64_t))sub_1005F09D4, v2);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1005E6304(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v5;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentPresentedState);
  KeyPath = swift_getKeyPath(&unk_100733580);
  v3 = swift_getKeyPath(&unk_1007335A8);
  v5 = 1;
  swift_retain(v1);
  return static Published.subscript.setter(&v5, v1, KeyPath, v3);
}

uint64_t sub_1005E637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v6[17] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[18] = v9;
  v6[19] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v6[20] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v6[21] = v11;
  v6[22] = v12;
  return swift_task_switch(sub_1005E643C, v11, v12);
}

uint64_t sub_1005E643C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  void *v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  char *v34;
  uint64_t v35;
  __n128 v36;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 184) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
    *(_QWORD *)(v0 + 192) = v3;
    *v3 = v0;
    v3[1] = sub_1005E67AC;
    return sub_1005E26A8();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    v5 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess(v5, v0 + 72, 0, 0);
    v6 = swift_unknownObjectWeakLoadStrong(v5);
    if (v6)
    {
      v7 = (char *)v6;
      v8 = objc_msgSend(*(id *)(v0 + 112), "popoverPresentationController");
      if (v8)
      {
        v9 = v8;
        v10 = swift_weakLoadStrong(&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
        if (v10)
        {
          v12 = v10;
          KeyPath = swift_getKeyPath(&unk_1007335F0);
          *(_QWORD *)(v0 + 96) = v12;
          v14 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
          ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 96, KeyPath, v14);
          swift_release(KeyPath);
          v15 = *(id *)(v12 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor);
          *(_QWORD *)&v11 = swift_release(v12).n128_u64[0];
        }
        else
        {
          v15 = 0;
        }
        v16 = *(_QWORD *)(v0 + 136);
        v17 = *(_QWORD *)(v0 + 144);
        v19 = *(_QWORD *)(v0 + 120);
        v18 = *(_QWORD *)(v0 + 128);
        v20 = *(_QWORD *)(v0 + 112);
        objc_msgSend(v9, "setBackgroundColor:", v15, v11);

        objc_msgSend(v9, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", v20);
        objc_msgSend(v9, "_setCentersPopoverIfSourceViewNotSet:", 1);
        sub_10000B5E4(v19, v18, (uint64_t *)&unk_1009D2AA0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
        {
          v21 = *(_QWORD *)(v0 + 128);

          sub_100010960(v21, (uint64_t *)&unk_1009D2AA0);
        }
        else
        {
          v23 = *(_QWORD *)(v0 + 144);
          v22 = *(_QWORD *)(v0 + 152);
          v24 = *(_QWORD *)(v0 + 136);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v22, *(_QWORD *)(v0 + 128), v24);
          RelativeValue.value.getter((_QWORD *)(v0 + 16), v24);
          objc_msgSend(v9, "setSourceRect:", *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
          v25 = (void *)RelativeValue<>.baseView.getter(v24);
          objc_msgSend(v9, "setSourceView:", v25);

          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
        }
      }
      v26 = *(void **)(v0 + 112);
      v27 = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
      v28 = *(void **)&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController];
      *(_QWORD *)&v7[OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController] = v26;

      v29 = objc_msgSend(v26, "readyForDisplay");
      v30 = *(void **)(v0 + 112);
      if (v29)
      {
        v31 = swift_allocObject(&unk_100916768, 32, 7);
        *(_QWORD *)(v31 + 16) = v7;
        *(_QWORD *)(v31 + 24) = v30;
        v32 = v30;
        v7 = v7;
        sub_1006498E4((void (*)(uint64_t))sub_1005F0B94, v31);

        swift_release(v31);
      }
      else
      {
        v33 = objc_msgSend(*(id *)(v0 + 112), "failedToLoad");

        if (v33)
        {
          v34 = *(char **)&v7[v27];
          *(_QWORD *)&v7[v27] = 0;

          v7 = v34;
        }
      }

    }
    v35 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    v36 = swift_task_dealloc(v35);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v36);
  }
}

uint64_t sub_1005E67AC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));

  return swift_task_switch(sub_1005E67FC, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_1005E67FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  void *v26;
  uint64_t v27;
  id v28;
  unsigned int v29;
  char *v30;
  uint64_t v31;
  __n128 v32;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 72, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = objc_msgSend(*(id *)(v0 + 112), "popoverPresentationController");
    if (v4)
    {
      v5 = v4;
      v6 = swift_weakLoadStrong(&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
      if (v6)
      {
        v8 = v6;
        KeyPath = swift_getKeyPath(&unk_1007335F0);
        *(_QWORD *)(v0 + 96) = v8;
        v10 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
        ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 96, KeyPath, v10);
        swift_release(KeyPath);
        v11 = *(id *)(v8 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor);
        *(_QWORD *)&v7 = swift_release(v8).n128_u64[0];
      }
      else
      {
        v11 = 0;
      }
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD *)(v0 + 144);
      v15 = *(_QWORD *)(v0 + 120);
      v14 = *(_QWORD *)(v0 + 128);
      v16 = *(_QWORD *)(v0 + 112);
      objc_msgSend(v5, "setBackgroundColor:", v11, v7);

      objc_msgSend(v5, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", v16);
      objc_msgSend(v5, "_setCentersPopoverIfSourceViewNotSet:", 1);
      sub_10000B5E4(v15, v14, (uint64_t *)&unk_1009D2AA0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) == 1)
      {
        v17 = *(_QWORD *)(v0 + 128);

        sub_100010960(v17, (uint64_t *)&unk_1009D2AA0);
      }
      else
      {
        v19 = *(_QWORD *)(v0 + 144);
        v18 = *(_QWORD *)(v0 + 152);
        v20 = *(_QWORD *)(v0 + 136);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 128), v20);
        RelativeValue.value.getter((_QWORD *)(v0 + 16), v20);
        objc_msgSend(v5, "setSourceRect:", *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
        v21 = (void *)RelativeValue<>.baseView.getter(v20);
        objc_msgSend(v5, "setSourceView:", v21);

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      }
    }
    v22 = *(void **)(v0 + 112);
    v23 = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
    v24 = *(void **)&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController];
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController] = v22;

    v25 = objc_msgSend(v22, "readyForDisplay");
    v26 = *(void **)(v0 + 112);
    if (v25)
    {
      v27 = swift_allocObject(&unk_100916768, 32, 7);
      *(_QWORD *)(v27 + 16) = v3;
      *(_QWORD *)(v27 + 24) = v26;
      v28 = v26;
      v3 = v3;
      sub_1006498E4((void (*)(uint64_t))sub_1005F0B94, v27);

      swift_release(v27);
    }
    else
    {
      v29 = objc_msgSend(*(id *)(v0 + 112), "failedToLoad");

      if (v29)
      {
        v30 = *(char **)&v3[v23];
        *(_QWORD *)&v3[v23] = 0;

        v3 = v30;
      }
    }

  }
  v31 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  v32 = swift_task_dealloc(v31);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v32);
}

uint64_t sub_1005E6B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  __n128 v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD v39[3];

  v38 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EFEB8);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v19 = Strong;
    KeyPath = swift_getKeyPath(&unk_1007335C8);
    v39[0] = v19;
    v21 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v39, KeyPath, v21);
    swift_release(KeyPath);
    v22 = v19 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
    v23 = swift_beginAccess(v19 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v39, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v16, v22, v2, v23);
    v24 = swift_release(v19);
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
    v25(v16, 0, 1, v2, v24);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
    v25(v16, 1, 1, v2, v18);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v13, enum case for ColorScheme.dark(_:), v2);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v25)(v13, 0, 1, v2);
  v26 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10000B5E4((uint64_t)v16, (uint64_t)v7, &qword_1009EFEC0);
  sub_10000B5E4((uint64_t)v13, v26, &qword_1009EFEC0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v27((uint64_t)v7, 1, v2) != 1)
  {
    sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009EFEC0);
    if (v27(v26, 1, v2) != 1)
    {
      v28 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v37, v26, v2);
      v29 = sub_100008DB0(&qword_1009EFEC8, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t)&protocol conformance descriptor for ColorScheme);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v28, v2, v29);
      v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v28, v2);
      sub_100010960((uint64_t)v13, &qword_1009EFEC0);
      sub_100010960((uint64_t)v16, &qword_1009EFEC0);
      v31(v10, v2);
      sub_100010960((uint64_t)v7, &qword_1009EFEC0);
      if ((v30 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      v32 = (unsigned int *)&enum case for BookContentUserInterfaceStyle.light(_:);
      goto LABEL_13;
    }
    sub_100010960((uint64_t)v13, &qword_1009EFEC0);
    sub_100010960((uint64_t)v16, &qword_1009EFEC0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
LABEL_9:
    sub_100010960((uint64_t)v7, &qword_1009EFEB8);
    goto LABEL_12;
  }
  sub_100010960((uint64_t)v13, &qword_1009EFEC0);
  sub_100010960((uint64_t)v16, &qword_1009EFEC0);
  if (v27(v26, 1, v2) != 1)
    goto LABEL_9;
  sub_100010960((uint64_t)v7, &qword_1009EFEC0);
LABEL_11:
  v32 = (unsigned int *)&enum case for BookContentUserInterfaceStyle.dark(_:);
LABEL_13:
  v33 = *v32;
  v34 = type metadata accessor for BookContentUserInterfaceStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v38, v33, v34);
}

double sub_1005E6EF8(uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  double result;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_menuController);
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC5Books24BookReaderMenuController_mode) & 1) != 0)
  {
    v4 = swift_allocObject(&unk_1009163F8, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = swift_allocObject(&unk_100916420, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1005EF470;
    *(_QWORD *)(v5 + 24) = v4;
    v10[4] = sub_10004DE04;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1005D7BD8;
    v10[3] = &unk_100916438;
    v6 = _Block_copy(v10);
    v7 = v11;
    v8 = v3;
    swift_retain(v5);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", UIMenuRoot, v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 109, 106, 48, 1);
    swift_release(v4);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  return sub_1005545DC((void *)isEscapingClosureAtFileLocation);
}

void sub_1005E7060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, double a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  __n128 v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  __n128 v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a8;
  v42 = a4;
  v44 = a6;
  v45 = a7;
  v43 = a5;
  v39 = a2;
  v40 = a3;
  v38 = a1;
  v35 = type metadata accessor for BookThemeEntity(0);
  v12 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  v18 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1005E6B00((uint64_t)v20);
  v34 = (void *)dispatch thunk of StylesheetProvider.stylesheetSet.getter(v21);
  v22 = *(_QWORD *)(v10 + OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8);
  ObjectType = swift_getObjectType();
  dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v22);
  v25 = (void *)BookThemeEntity.backgroundColor.getter(v24);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27 = v17;
  v28 = v35;
  v26(v27, v35);
  dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v22);
  v30 = (void *)BookThemeEntity.textColor.getter(v29);
  v26(v14, v28);
  v31 = v34;
  v32 = sub_1005ED55C(v10, v38, v39, v40, v42, v43, v44, v45, a9, v41, (uint64_t)v20, (uint64_t)v34, (uint64_t)v25, (uint64_t)v30);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v37);
  if (v32)
  {
    v33 = v32;
    sub_1005ED9AC(v33, a10);

  }
}

double sub_1005E7260(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a6;
  v12 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E6B00((uint64_t)v18);
  v19 = sub_1005EFAFC(v6, a1, a2, (uint64_t)v18, a3, a4, a5);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v14, 1, 1, v21);
    v22 = swift_allocObject(&unk_100916510, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v22);
    v23 = v19;
    v24 = static MainActor.shared.getter(v23);
    v25 = (_QWORD *)swift_allocObject(&unk_1009166C8, 81, 7);
    v25[2] = v24;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v22;
    v25[5] = v23;
    sub_100025B3C(v28, (uint64_t)(v25 + 6), &qword_1009D4AD0);
    swift_release(v22);
    v26 = sub_10030C02C((uint64_t)v14, (uint64_t)&unk_1009EFED0, (uint64_t)v25);

    *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  }
  return result;
}

void sub_1005E743C(uint64_t a1@<X0>, char a2@<W3>, BOOL *a3@<X8>)
{
  uint64_t Strong;
  NSURL *v7;
  void *v8;
  void *v9;
  void *v10;

  if (a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (Strong)
    {
      v8 = (void *)Strong;
      URL._bridgeToObjectiveC()(v7);
      v10 = v9;
      objc_msgSend(v8, "assetViewController:requestOpenURL:likelyUserInitiated:", a1, v9, a2 & 1);
      swift_unknownObjectRelease(v8);

    }
  }
  *a3 = a1 == 0;
}

void sub_1005E74D0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  NSString v27;
  void *v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  double v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  void *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  NSString v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  char *v72;
  id v73;
  id v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  void (*v79)(char *, char *, uint64_t);
  void *v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, uint64_t);
  id v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  void **aBlock;
  uint64_t v87;
  void (*v88)(uint64_t, void *);
  void *v89;
  void (*v90)(uint64_t);
  _QWORD *v91;

  v77 = a3;
  v83 = a2;
  v3 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x20749980E26E6F44, 0xAD0000776F6C6C41);
  static Locale.current.getter(v17);
  v79 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v72 = v13;
  v79(v13, v16, v10);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v84 = ObjCClassFromMetadata;
  v20 = (void *)objc_opt_self(NSBundle);
  v78 = v20;
  v21 = objc_msgSend(v20, "bundleForClass:", ObjCClassFromMetadata);
  v85 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v75 = v3;
  v76 = v6;
  v85(v6, v9, v3);
  String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v21, v6, "Don’t Allow", 13, 0);
  v23 = v22;
  v82 = *(void (**)(char *, uint64_t))(v4 + 8);
  v82(v9, v3);
  v81 = *(void (**)(char *, uint64_t))(v11 + 8);
  v81(v16, v10);
  v24 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = (_QWORD *)swift_allocObject(&unk_100916538, 40, 7);
  v25[2] = v83;
  v26 = v77;
  v25[3] = v77;
  v25[4] = v24;
  swift_retain(v26);
  swift_retain(v24);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v90 = sub_1005F08A4;
  v91 = v25;
  aBlock = _NSConcreteStackBlock;
  v87 = 1107296256;
  v88 = sub_1001EDBF0;
  v89 = &unk_100916550;
  v28 = _Block_copy(&aBlock);
  swift_release(v91);
  v73 = (id)objc_opt_self(UIAlertAction);
  v74 = objc_msgSend(v73, "actionWithTitle:style:handler:", v27, 1, v28);
  _Block_release(v28);
  swift_release(v24);

  v29 = String.LocalizationValue.init(stringLiteral:)(0x776F6C6C41, 0xE500000000000000);
  static Locale.current.getter(v29);
  v30 = v72;
  v79(v72, v16, v10);
  v31 = objc_msgSend(v20, "bundleForClass:", v84);
  v32 = v75;
  v33 = v76;
  v85(v76, v9, v75);
  String.init(localized:table:bundle:locale:comment:)(v30, 0, 0, v31, v33, "Allow", 5, 2);
  v35 = v34;
  v82(v9, v32);
  v81(v16, v10);
  v36 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  v37 = (_QWORD *)swift_allocObject(&unk_100916588, 40, 7);
  v37[2] = v83;
  v38 = v77;
  v37[3] = v77;
  v37[4] = v36;
  swift_retain(v38);
  swift_retain(v36);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v90 = sub_1005F08F4;
  v91 = v37;
  aBlock = _NSConcreteStackBlock;
  v87 = 1107296256;
  v88 = sub_1001EDBF0;
  v89 = &unk_1009165A0;
  v40 = _Block_copy(&aBlock);
  *(_QWORD *)&v41 = swift_release(v91).n128_u64[0];
  v83 = objc_msgSend(v73, "actionWithTitle:style:handler:", v39, 0, v40, v41);
  _Block_release(v40);
  swift_release(v36);

  v42 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007D83C0);
  static Locale.current.getter(v42);
  v43 = v30;
  v44 = v10;
  v45 = v79;
  v79(v30, v16, v10);
  v46 = v84;
  v47 = objc_msgSend(v78, "bundleForClass:", v84);
  v48 = v75;
  v49 = v76;
  v85(v76, v9, v75);
  v50 = v30;
  v51 = v49;
  v77 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v47, v49, "Allow this book to use online audio & video?", 44, 2);
  v73 = v52;
  v53 = v82;
  v82(v9, v48);
  v54 = v44;
  v71 = v44;
  v55 = v44;
  v56 = v81;
  v81(v16, v55);
  v57 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000005ALL, 0x80000001007D8410);
  static Locale.current.getter(v57);
  v45(v43, v16, v54);
  v58 = objc_msgSend(v78, "bundleForClass:", v46);
  v85(v51, v9, v48);
  String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v58, v51, "This book needs to access online content, or it may not display as the publisher intended.", 90, 2);
  v60 = v59;
  v53(v9, v48);
  v56(v16, v71);
  v61 = v73;
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v60);
  v64 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v62, v63, 1);

  v65 = v74;
  objc_msgSend(v64, "addAction:", v74);
  v66 = v83;
  objc_msgSend(v64, "addAction:", v83);
  v67 = swift_allocObject(&unk_1009165D8, 32, 7);
  v68 = v80;
  *(_QWORD *)(v67 + 16) = v80;
  *(_QWORD *)(v67 + 24) = v64;
  v69 = v68;
  v70 = v64;
  sub_1006498E4((void (*)(uint64_t))sub_1005F1A74, v67);
  swift_release(v67);

}

